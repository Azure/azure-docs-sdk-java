### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject
  id: JSONWrappedObject
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.util.JSONWrappedObject._prefix
  - com.fasterxml.jackson.databind.util.JSONWrappedObject._serializationType
  - com.fasterxml.jackson.databind.util.JSONWrappedObject._suffix
  - com.fasterxml.jackson.databind.util.JSONWrappedObject._value
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix()
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType()
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix()
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue()
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  langs:
  - java
  name: JSONWrappedObject
  nameWithType: JSONWrappedObject
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: General-purpose wrapper class that can be used to decorate serialized value with arbitrary literal prefix and suffix. This can be used for example to construct arbitrary Javascript values (similar to how basic function name and parenthesis are used with JSONP).
  syntax:
    content: public class JSONWrappedObject implements JsonSerializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.JsonSerializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object)
  id: JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: JSONWrappedObject(String prefix, String suffix, Object value)
  nameWithType: JSONWrappedObject.JSONWrappedObject(String prefix, String suffix, Object value)
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(String prefix, String suffix, Object value)
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public JSONWrappedObject(String prefix, String suffix, Object value)
    parameters:
    - id: prefix
      type: java.lang.String
    - id: suffix
      type: java.lang.String
    - id: value
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  id: JSONWrappedObject(java.lang.String,java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: JSONWrappedObject(String prefix, String suffix, Object value, JavaType asType)
  nameWithType: JSONWrappedObject.JSONWrappedObject(String prefix, String suffix, Object value, JavaType asType)
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject(String prefix, String suffix, Object value, JavaType asType)
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  summary: Constructor that should be used when specific serialization type to use is important, and needs to be passed instead of just using runtime (type-erased) type of the value.
  syntax:
    content: public JSONWrappedObject(String prefix, String suffix, Object value, JavaType asType)
    parameters:
    - id: prefix
      type: java.lang.String
    - id: suffix
      type: java.lang.String
    - id: value
      type: java.lang.Object
    - id: asType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject._prefix
  id: _prefix
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: _prefix
  nameWithType: JSONWrappedObject._prefix
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject._prefix
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Literal String to output before serialized value. Will not be quoted when serializing value.
  syntax:
    content: protected final String _prefix
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject._serializationType
  id: _serializationType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: _serializationType
  nameWithType: JSONWrappedObject._serializationType
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject._serializationType
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Optional static type to use for serialization; if null, runtime type is used. Can be used to specify declared type which defines serializer to use, as well as aspects of extra type information to include (if any).
  syntax:
    content: protected final JavaType _serializationType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject._suffix
  id: _suffix
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: _suffix
  nameWithType: JSONWrappedObject._suffix
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject._suffix
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Literal String to output after serialized value. Will not be quoted when serializing value.
  syntax:
    content: protected final String _suffix
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject._value
  id: _value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: _value
  nameWithType: JSONWrappedObject._value
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject._value
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Value to be serialized as JSONP padded; can be null.
  syntax:
    content: protected final Object _value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix()
  id: getPrefix()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: getPrefix()
  nameWithType: JSONWrappedObject.getPrefix()
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix()
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String getPrefix()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType()
  id: getSerializationType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: getSerializationType()
  nameWithType: JSONWrappedObject.getSerializationType()
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType()
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public JavaType getSerializationType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix()
  id: getSuffix()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: getSuffix()
  nameWithType: JSONWrappedObject.getSuffix()
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix()
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String getSuffix()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue()
  id: getValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: getValue()
  nameWithType: JSONWrappedObject.getValue()
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue()
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public Object getValue()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: serialize(JsonGenerator jgen, SerializerProvider provider)
  nameWithType: JSONWrappedObject.serialize(JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize(JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Serialization method called when no additional type information is to be included in serialization.
  syntax:
    content: public void serialize(JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONWrappedObject
  langs:
  - java
  name: serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: JSONWrappedObject.serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Serialization method called when additional type information is expected to be included in serialization, for deserialization to use.


    Usually implementation consists of a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypePrefix</xref> followed by serialization of contents, followed by a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypeSuffix</xref>). Details of the type id argument to pass depend on shape of JSON Object used (Array, Object or scalar like String/Number/Boolean).


    Note that some types (most notably, "natural" types: String, Integer, Double and Boolean) never include type information.
  syntax:
    content: public void serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonProcessingException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject*
  name: JSONWrappedObject
  nameWithType: JSONWrappedObject.JSONWrappedObject
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.JSONWrappedObject
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType*
  name: serializeWithType
  nameWithType: JSONWrappedObject.serializeWithType
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.serializeWithType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize*
  name: serialize
  nameWithType: JSONWrappedObject.serialize
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix*
  name: getPrefix
  nameWithType: JSONWrappedObject.getPrefix
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getPrefix
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix*
  name: getSuffix
  nameWithType: JSONWrappedObject.getSuffix
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSuffix
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue*
  name: getValue
  nameWithType: JSONWrappedObject.getValue
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getValue
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType*
  name: getSerializationType
  nameWithType: JSONWrappedObject.getSerializationType
  fullName: com.fasterxml.jackson.databind.util.JSONWrappedObject.getSerializationType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
