### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextBooleanValue*"
fullName: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextBooleanValue"
name: "nextBooleanValue"
nameWithType: "UTF8DataInputJsonParser.nextBooleanValue"
members:
- uid: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextBooleanValue()"
  fullName: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextBooleanValue()"
  name: "nextBooleanValue()"
  nameWithType: "UTF8DataInputJsonParser.nextBooleanValue()"
  summary: "Method that fetches next token (as if calling <xref uid=\"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextToken*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#nextToken\"></xref>) and if it is <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_TRUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_TRUE\"></xref> or <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_FALSE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_FALSE\"></xref> returns matching Boolean value; otherwise return null. It is functionally equivalent to:\n\n```java\nJsonToken t = nextToken();\n  if (t == JsonToken.VALUE_TRUE) return Boolean.TRUE;\n  if (t == JsonToken.VALUE_FALSE) return Boolean.FALSE;\n  return null;\n```\n\nbut may be faster for parser to process, and can therefore be used if caller expects to get a Boolean value next from input."
  overridden: "com.fasterxml.jackson.core.JsonParser.nextBooleanValue()"
  syntax: "public Boolean nextBooleanValue()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
