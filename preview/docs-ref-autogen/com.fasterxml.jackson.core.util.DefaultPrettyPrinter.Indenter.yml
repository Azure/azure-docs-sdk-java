### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  id: Indenter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline()
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)
  langs:
  - java
  name: DefaultPrettyPrinter.Indenter
  nameWithType: DefaultPrettyPrinter.Indenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  type: Interface
  package: com.fasterxml.jackson.core.util
  summary: Interface that defines objects that can produce indentation used to separate object entries and array values. Indentation in this context just means insertion of white space, independent of whether linefeeds are output.
  syntax:
    content: public static interface DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline()
  id: isInline()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  langs:
  - java
  name: isInline()
  nameWithType: DefaultPrettyPrinter.Indenter.isInline()
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline()
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public abstract boolean isInline()
    return:
      type: boolean
      description: >-
        True if indenter is considered inline (does not add linefeeds),
           false otherwise
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)
  id: writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  langs:
  - java
  name: writeIndentation(JsonGenerator g, int level)
  nameWithType: DefaultPrettyPrinter.Indenter.writeIndentation(JsonGenerator g, int level)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation(JsonGenerator g, int level)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public abstract void writeIndentation(JsonGenerator g, int level)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: level
      type: int
  exceptions:
  - type: java.io.IOException
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation*
  name: writeIndentation
  nameWithType: DefaultPrettyPrinter.Indenter.writeIndentation
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.writeIndentation
  package: com.fasterxml.jackson.core.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline*
  name: isInline
  nameWithType: DefaultPrettyPrinter.Indenter.isInline
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter.isInline
  package: com.fasterxml.jackson.core.util
