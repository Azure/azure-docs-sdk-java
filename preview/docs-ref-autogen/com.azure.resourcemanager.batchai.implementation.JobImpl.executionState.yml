### YamlMime:JavaMember
uid: "com.azure.resourcemanager.batchai.implementation.JobImpl.executionState*"
fullName: "com.azure.resourcemanager.batchai.implementation.JobImpl.executionState"
name: "executionState"
nameWithType: "JobImpl.executionState"
members:
- uid: "com.azure.resourcemanager.batchai.implementation.JobImpl.executionState()"
  fullName: "com.azure.resourcemanager.batchai.implementation.JobImpl.executionState()"
  name: "executionState()"
  nameWithType: "JobImpl.executionState()"
  summary: "Gets the executionState property: The current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running successfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job."
  syntax: "public ExecutionState executionState()"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.ExecutionState?alt=com.azure.resourcemanager.batchai.models.ExecutionState&text=ExecutionState\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.batchai.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
