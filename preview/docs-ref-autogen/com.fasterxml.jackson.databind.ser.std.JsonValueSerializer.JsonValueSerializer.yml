### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer*"
fullName: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer"
name: "JsonValueSerializer"
nameWithType: "JsonValueSerializer.JsonValueSerializer"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer(AnnotatedMember accessor, JsonSerializer<?> ser)"
  name: "JsonValueSerializer(AnnotatedMember accessor, JsonSerializer<?> ser)"
  nameWithType: "JsonValueSerializer.JsonValueSerializer(AnnotatedMember accessor, JsonSerializer<?> ser)"
  parameters:
  - name: "accessor"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.AnnotatedMember?alt=com.fasterxml.jackson.databind.introspect.AnnotatedMember&text=AnnotatedMember\" data-throw-if-not-resolved=\"False\" />"
  - description: "Explicit serializer to use, if caller knows it (which\n    occurs if and only if the \"value method\" was annotated with\n    <xref uid=\"com.fasterxml.jackson.databind.annotation.JsonSerialize.using\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.annotation.JsonSerialize#using\"></xref>), otherwise\n    null"
    name: "ser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public JsonValueSerializer(AnnotatedMember accessor, JsonSerializer<?> ser)"
- uid: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>,boolean)"
  fullName: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.JsonValueSerializer(JsonValueSerializer src, BeanProperty property, JsonSerializer<?> ser, boolean forceTypeInfo)"
  name: "JsonValueSerializer(JsonValueSerializer src, BeanProperty property, JsonSerializer<?> ser, boolean forceTypeInfo)"
  nameWithType: "JsonValueSerializer.JsonValueSerializer(JsonValueSerializer src, BeanProperty property, JsonSerializer<?> ser, boolean forceTypeInfo)"
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer?alt=com.fasterxml.jackson.databind.ser.std.JsonValueSerializer&text=JsonValueSerializer\" data-throw-if-not-resolved=\"False\" />"
  - name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  - name: "ser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "forceTypeInfo"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonValueSerializer(JsonValueSerializer src, BeanProperty property, JsonSerializer<?> ser, boolean forceTypeInfo)"
type: "constructor"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
