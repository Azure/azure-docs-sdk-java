### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosBridgeInternal"
  id: "CosmosBridgeInternal"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal()"
  - "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncClient)"
  - "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosClient)"
  - "com.azure.cosmos.CosmosBridgeInternal.getContextClient(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.CosmosBridgeInternal.getContextClient(com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer(com.azure.cosmos.CosmosContainer)"
  - "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  - "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  - "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount(com.azure.cosmos.CosmosAsyncClient)"
  - "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection(com.azure.cosmos.models.CosmosContainerProperties)"
  langs:
  - "java"
  name: "CosmosBridgeInternal"
  nameWithType: "CosmosBridgeInternal"
  fullName: "com.azure.cosmos.CosmosBridgeInternal"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "DO NOT USE. For internal use only by the SDK. These methods might break at any time. No support will be provided."
  syntax:
    content: "public class CosmosBridgeInternal"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal()"
  id: "CosmosBridgeInternal()"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "CosmosBridgeInternal()"
  nameWithType: "CosmosBridgeInternal.CosmosBridgeInternal()"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal()"
  overload: "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "public CosmosBridgeInternal()"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncClient)"
  id: "getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncClient)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getAsyncDocumentClient(CosmosAsyncClient client)"
  nameWithType: "CosmosBridgeInternal.getAsyncDocumentClient(CosmosAsyncClient client)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(CosmosAsyncClient client)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static AsyncDocumentClient getAsyncDocumentClient(CosmosAsyncClient client)"
    parameters:
    - id: "client"
      type: "com.azure.cosmos.CosmosAsyncClient"
    return:
      type: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncDatabase)"
  id: "getAsyncDocumentClient(com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getAsyncDocumentClient(CosmosAsyncDatabase cosmosAsyncDatabase)"
  nameWithType: "CosmosBridgeInternal.getAsyncDocumentClient(CosmosAsyncDatabase cosmosAsyncDatabase)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(CosmosAsyncDatabase cosmosAsyncDatabase)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static AsyncDocumentClient getAsyncDocumentClient(CosmosAsyncDatabase cosmosAsyncDatabase)"
    parameters:
    - id: "cosmosAsyncDatabase"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    return:
      type: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(com.azure.cosmos.CosmosClient)"
  id: "getAsyncDocumentClient(com.azure.cosmos.CosmosClient)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getAsyncDocumentClient(CosmosClient client)"
  nameWithType: "CosmosBridgeInternal.getAsyncDocumentClient(CosmosClient client)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient(CosmosClient client)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static AsyncDocumentClient getAsyncDocumentClient(CosmosClient client)"
    parameters:
    - id: "client"
      type: "com.azure.cosmos.CosmosClient"
    return:
      type: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getContextClient(com.azure.cosmos.CosmosAsyncContainer)"
  id: "getContextClient(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getContextClient(CosmosAsyncContainer container)"
  nameWithType: "CosmosBridgeInternal.getContextClient(CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getContextClient(CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getContextClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static AsyncDocumentClient getContextClient(CosmosAsyncContainer container)"
    parameters:
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getContextClient(com.azure.cosmos.CosmosAsyncDatabase)"
  id: "getContextClient(com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getContextClient(CosmosAsyncDatabase database)"
  nameWithType: "CosmosBridgeInternal.getContextClient(CosmosAsyncDatabase database)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getContextClient(CosmosAsyncDatabase database)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getContextClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static AsyncDocumentClient getContextClient(CosmosAsyncDatabase database)"
    parameters:
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    return:
      type: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer(com.azure.cosmos.CosmosContainer)"
  id: "getCosmosAsyncContainer(com.azure.cosmos.CosmosContainer)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getCosmosAsyncContainer(CosmosContainer container)"
  nameWithType: "CosmosBridgeInternal.getCosmosAsyncContainer(CosmosContainer container)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer(CosmosContainer container)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncContainer getCosmosAsyncContainer(CosmosContainer container)"
    parameters:
    - id: "container"
      type: "com.azure.cosmos.CosmosContainer"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  id: "getCosmosContainerWithNewClient(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getCosmosContainerWithNewClient(CosmosAsyncContainer cosmosContainer, CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  nameWithType: "CosmosBridgeInternal.getCosmosContainerWithNewClient(CosmosAsyncContainer cosmosContainer, CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient(CosmosAsyncContainer cosmosContainer, CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncContainer getCosmosContainerWithNewClient(CosmosAsyncContainer cosmosContainer, CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
    parameters:
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "cosmosDatabase"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    - id: "client"
      type: "com.azure.cosmos.CosmosAsyncClient"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  id: "getCosmosDatabaseWithNewClient(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosAsyncClient)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getCosmosDatabaseWithNewClient(CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  nameWithType: "CosmosBridgeInternal.getCosmosDatabaseWithNewClient(CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient(CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncDatabase getCosmosDatabaseWithNewClient(CosmosAsyncDatabase cosmosDatabase, CosmosAsyncClient client)"
    parameters:
    - id: "cosmosDatabase"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    - id: "client"
      type: "com.azure.cosmos.CosmosAsyncClient"
    return:
      type: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount(com.azure.cosmos.CosmosAsyncClient)"
  id: "getDatabaseAccount(com.azure.cosmos.CosmosAsyncClient)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "getDatabaseAccount(CosmosAsyncClient client)"
  nameWithType: "CosmosBridgeInternal.getDatabaseAccount(CosmosAsyncClient client)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount(CosmosAsyncClient client)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Mono<DatabaseAccount> getDatabaseAccount(CosmosAsyncClient client)"
    parameters:
    - id: "client"
      type: "com.azure.cosmos.CosmosAsyncClient"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.models.DatabaseAccount>"
- uid: "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection(com.azure.cosmos.models.CosmosContainerProperties)"
  id: "toDocumentCollection(com.azure.cosmos.models.CosmosContainerProperties)"
  parent: "com.azure.cosmos.CosmosBridgeInternal"
  langs:
  - "java"
  name: "toDocumentCollection(CosmosContainerProperties cosmosContainerProperties)"
  nameWithType: "CosmosBridgeInternal.toDocumentCollection(CosmosContainerProperties cosmosContainerProperties)"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection(CosmosContainerProperties cosmosContainerProperties)"
  overload: "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static DocumentCollection toDocumentCollection(CosmosContainerProperties cosmosContainerProperties)"
    parameters:
    - id: "cosmosContainerProperties"
      type: "com.azure.cosmos.models.CosmosContainerProperties"
    return:
      type: "com.azure.cosmos.implementation.DocumentCollection"
references:
- uid: "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal*"
  name: "CosmosBridgeInternal"
  nameWithType: "CosmosBridgeInternal.CosmosBridgeInternal"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.CosmosBridgeInternal"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosContainerProperties"
  name: "CosmosContainerProperties"
  nameWithType: "CosmosContainerProperties"
  fullName: "com.azure.cosmos.models.CosmosContainerProperties"
- uid: "com.azure.cosmos.implementation.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.implementation.DocumentCollection"
- uid: "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection*"
  name: "toDocumentCollection"
  nameWithType: "CosmosBridgeInternal.toDocumentCollection"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.toDocumentCollection"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClient"
  name: "CosmosClient"
  nameWithType: "CosmosClient"
  fullName: "com.azure.cosmos.CosmosClient"
- uid: "com.azure.cosmos.implementation.AsyncDocumentClient"
  name: "AsyncDocumentClient"
  nameWithType: "AsyncDocumentClient"
  fullName: "com.azure.cosmos.implementation.AsyncDocumentClient"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient*"
  name: "getAsyncDocumentClient"
  nameWithType: "CosmosBridgeInternal.getAsyncDocumentClient"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getAsyncDocumentClient"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncClient"
  name: "CosmosAsyncClient"
  nameWithType: "CosmosAsyncClient"
  fullName: "com.azure.cosmos.CosmosAsyncClient"
- uid: "com.azure.cosmos.CosmosAsyncDatabase"
  name: "CosmosAsyncDatabase"
  nameWithType: "CosmosAsyncDatabase"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient*"
  name: "getCosmosDatabaseWithNewClient"
  nameWithType: "CosmosBridgeInternal.getCosmosDatabaseWithNewClient"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosDatabaseWithNewClient"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient*"
  name: "getCosmosContainerWithNewClient"
  nameWithType: "CosmosBridgeInternal.getCosmosContainerWithNewClient"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosContainerWithNewClient"
  package: "com.azure.cosmos"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.models.DatabaseAccount>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.DatabaseAccount"
    name: "DatabaseAccount"
    fullName: "com.azure.cosmos.models.DatabaseAccount"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount*"
  name: "getDatabaseAccount"
  nameWithType: "CosmosBridgeInternal.getDatabaseAccount"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getDatabaseAccount"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getContextClient*"
  name: "getContextClient"
  nameWithType: "CosmosBridgeInternal.getContextClient"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getContextClient"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainer"
  name: "CosmosContainer"
  nameWithType: "CosmosContainer"
  fullName: "com.azure.cosmos.CosmosContainer"
- uid: "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer*"
  name: "getCosmosAsyncContainer"
  nameWithType: "CosmosBridgeInternal.getCosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosBridgeInternal.getCosmosAsyncContainer"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.models.DatabaseAccount"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.azure.cosmos.models.DatabaseAccount"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
