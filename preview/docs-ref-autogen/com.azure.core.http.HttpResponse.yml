### YamlMime:JavaType
uid: "com.azure.core.http.HttpResponse"
fullName: "com.azure.core.http.HttpResponse"
name: "HttpResponse"
nameWithType: "HttpResponse"
summary: "The response of an <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequest\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class HttpResponse implements Closeable"
constructors:
- uid: "com.azure.core.http.HttpResponse.HttpResponse(com.azure.core.http.HttpRequest)"
  fullName: "com.azure.core.http.HttpResponse.HttpResponse(HttpRequest request)"
  name: "HttpResponse(HttpRequest request)"
  nameWithType: "HttpResponse.HttpResponse(HttpRequest request)"
  summary: "Creates an instance of <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponse\"></xref>."
  modifiers:
  - "protected"
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequest\"></xref> that resulted in this <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponse\"></xref>."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected HttpResponse(HttpRequest request)"
  desc: "Creates an instance of <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponse\"></xref>."
methods:
- uid: "com.azure.core.http.HttpResponse.buffer()"
  fullName: "com.azure.core.http.HttpResponse.buffer()"
  name: "buffer()"
  nameWithType: "HttpResponse.buffer()"
  summary: "Gets a new <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"response\"></xref> object wrapping this response with its content buffered into memory."
  syntax: "public HttpResponse buffer()"
  desc: "Gets a new <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"response\"></xref> object wrapping this response with its content buffered into memory."
  returns:
    description: "A new <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"response\"></xref> with the content buffered."
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpResponse.close()"
  fullName: "com.azure.core.http.HttpResponse.close()"
  name: "close()"
  nameWithType: "HttpResponse.close()"
  summary: "Closes the response content stream, if any."
  syntax: "public void close()"
  desc: "Closes the response content stream, if any."
- uid: "com.azure.core.http.HttpResponse.getBody()"
  fullName: "com.azure.core.http.HttpResponse.getBody()"
  name: "getBody()"
  nameWithType: "HttpResponse.getBody()"
  summary: "Get the publisher emitting response content chunks."
  modifiers:
  - "abstract"
  syntax: "public abstract Flux<ByteBuffer> getBody()"
  desc: "Get the publisher emitting response content chunks.\n\nReturns a stream of the response's body content. Emissions may occur on Reactor threads which should not be blocked. Blocking should be avoided as much as possible/practical in reactive programming but if you do use methods like `block()` on the stream then be sure to use `publishOn` before the blocking call."
  returns:
    description: "The response's content as a stream of <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
  name: "getBodyAsByteArray()"
  nameWithType: "HttpResponse.getBodyAsByteArray()"
  summary: "Gets the response content as a `byte[]`."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<byte[]> getBodyAsByteArray()"
  desc: "Gets the response content as a `byte[]`."
  returns:
    description: "The response content as a <code>byte[]</code>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.azure.core.http.HttpResponse.getBodyAsInputStream()"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsInputStream()"
  name: "getBodyAsInputStream()"
  nameWithType: "HttpResponse.getBodyAsInputStream()"
  summary: "Gets the response content as an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
  syntax: "public Mono<InputStream> getBodyAsInputStream()"
  desc: "Gets the response content as an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
  returns:
    description: "The response content as an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpResponse.getBodyAsString()"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsString()"
  name: "getBodyAsString()"
  nameWithType: "HttpResponse.getBodyAsString()"
  summary: "Gets the response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<String> getBodyAsString()"
  desc: "Gets the response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>.\n\nBy default this method will inspect the response body for containing a byte order mark (BOM) to determine the encoding of the string (UTF-8, UTF-16, etc.). If a BOM isn't found this will default to using UTF-8 as the encoding, if a specific encoding is required use <xref uid=\"com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getBodyAsString(Charset)\"></xref>."
  returns:
    description: "The response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsString(Charset charset)"
  name: "getBodyAsString(Charset charset)"
  nameWithType: "HttpResponse.getBodyAsString(Charset charset)"
  summary: "Gets the response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  modifiers:
  - "abstract"
  parameters:
  - description: "The <xref uid=\"java.nio.charset.Charset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Charset\"></xref> to use as the string encoding."
    name: "charset"
    type: "<xref href=\"java.nio.charset.Charset?alt=java.nio.charset.Charset&text=Charset\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<String> getBodyAsString(Charset charset)"
  desc: "Gets the response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  returns:
    description: "The response content as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)"
  fullName: "com.azure.core.http.HttpResponse.getHeaderValue(String name)"
  name: "getHeaderValue(String name)"
  nameWithType: "HttpResponse.getHeaderValue(String name)"
  summary: "Lookup a response header with the provided name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the header to lookup."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String getHeaderValue(String name)"
  desc: "Lookup a response header with the provided name."
  returns:
    description: "the value of the header, or null if the header doesn't exist in the response."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpResponse.getHeaders()"
  fullName: "com.azure.core.http.HttpResponse.getHeaders()"
  name: "getHeaders()"
  nameWithType: "HttpResponse.getHeaders()"
  summary: "Get all response headers."
  modifiers:
  - "abstract"
  syntax: "public abstract HttpHeaders getHeaders()"
  desc: "Get all response headers."
  returns:
    description: "the response headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpResponse.getRequest()"
  fullName: "com.azure.core.http.HttpResponse.getRequest()"
  name: "getRequest()"
  nameWithType: "HttpResponse.getRequest()"
  summary: "Gets the <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"request\"></xref> which resulted in this response."
  modifiers:
  - "final"
  syntax: "public final HttpRequest getRequest()"
  desc: "Gets the <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"request\"></xref> which resulted in this response."
  returns:
    description: "The <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"request\"></xref> which resulted in this response."
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpResponse.getStatusCode()"
  fullName: "com.azure.core.http.HttpResponse.getStatusCode()"
  name: "getStatusCode()"
  nameWithType: "HttpResponse.getStatusCode()"
  summary: "Get the response status code."
  modifiers:
  - "abstract"
  syntax: "public abstract int getStatusCode()"
  desc: "Get the response status code."
  returns:
    description: "The response status code"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The response of an <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequest\"></xref>."
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http"
artifact: com.azure:azure-core:1.22.0-beta.1
