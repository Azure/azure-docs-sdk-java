### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy
  id: AddHeadersFromContextPolicy
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy
  children:
  - com.azure.core.http.policy.AddHeadersFromContextPolicy.AZURE_REQUEST_HTTP_HEADERS_KEY
  - com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy()
  - com.azure.core.http.policy.AddHeadersFromContextPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  langs:
  - java
  name: AddHeadersFromContextPolicy
  nameWithType: AddHeadersFromContextPolicy
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy
  type: Class
  package: com.azure.core.http.policy
  summary: >-
    The pipeline policy that override or add <xref uid="com.azure.core.http.HttpHeaders" data-throw-if-not-resolved="false">HttpHeaders</xref> in <xref uid="com.azure.core.http.HttpRequest" data-throw-if-not-resolved="false">HttpRequest</xref> by reading values from <xref uid="com.azure.core.util.Context" data-throw-if-not-resolved="false">Context</xref> with key 'azure-http-headers-key'. The value for this key should be of type <xref uid="com.azure.core.http.HttpHeaders" data-throw-if-not-resolved="false">HttpHeaders</xref> for it to be added in <xref uid="com.azure.core.http.HttpRequest" data-throw-if-not-resolved="false">HttpRequest</xref>.


    **Code Sample: Add multiple HttpHeader in Context and call client**


    ```java

    // Create ConfigurationClient for example
     ConfigurationClient configurationClient = new ConfigurationClientBuilder()
           .connectionString("endpoint={endpoint_value};id={id_value};secret={secret_value}")
           .buildClient();
     // Add your headers
     HttpHeaders headers = new HttpHeaders();
     headers.put("my-header1", "my-header1-value");
     headers.put("my-header2", "my-header2-value");
     headers.put("my-header3", "my-header3-value");
     // Call API by passing headers in Context.
     configurationClient.addConfigurationSettingWithResponse(
           new ConfigurationSetting().setKey("key").setValue("value"),
           new Context(AddHeadersFromContextPolicy.AZURE_REQUEST_HTTP_HEADERS_KEY, headers));
     // Above three HttpHeader will be added in outgoing HttpRequest.
    ```
  syntax:
    content: public class AddHeadersFromContextPolicy implements HttpPipelinePolicy
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.http.policy.HttpPipelinePolicy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy.AZURE_REQUEST_HTTP_HEADERS_KEY
  id: AZURE_REQUEST_HTTP_HEADERS_KEY
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy.AddHeadersFromContextPolicy
  langs:
  - java
  name: AZURE_REQUEST_HTTP_HEADERS_KEY
  nameWithType: AddHeadersFromContextPolicy.AZURE_REQUEST_HTTP_HEADERS_KEY
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy.AZURE_REQUEST_HTTP_HEADERS_KEY
  type: Field
  package: com.azure.core.http.policy
  summary: Key used to override headers in HttpRequest. The Value for this key should be <xref uid="com.azure.core.http.HttpHeaders" data-throw-if-not-resolved="false">HttpHeaders</xref>.
  syntax:
    content: public static final String AZURE_REQUEST_HTTP_HEADERS_KEY
    return:
      type: java.lang.String
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy()
  id: AddHeadersFromContextPolicy()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy.AddHeadersFromContextPolicy
  langs:
  - java
  name: AddHeadersFromContextPolicy()
  nameWithType: AddHeadersFromContextPolicy.AddHeadersFromContextPolicy()
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy()
  overload: com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy*
  type: Constructor
  package: com.azure.core.http.policy
  syntax:
    content: public AddHeadersFromContextPolicy()
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  id: process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy.AddHeadersFromContextPolicy
  langs:
  - java
  name: process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  nameWithType: AddHeadersFromContextPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  overload: com.azure.core.http.policy.AddHeadersFromContextPolicy.process*
  type: Method
  package: com.azure.core.http.policy
  summary: Process provided request context and invokes the next policy.
  syntax:
    content: public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
    parameters:
    - id: context
      type: com.azure.core.http.HttpPipelineCallContext
    - id: next
      type: com.azure.core.http.HttpPipelineNextPolicy
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
references:
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy*
  name: AddHeadersFromContextPolicy
  nameWithType: AddHeadersFromContextPolicy.AddHeadersFromContextPolicy
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy.AddHeadersFromContextPolicy
  package: com.azure.core.http.policy
- uid: com.azure.core.http.HttpPipelineCallContext
  name: HttpPipelineCallContext
  nameWithType: HttpPipelineCallContext
  fullName: com.azure.core.http.HttpPipelineCallContext
- uid: com.azure.core.http.HttpPipelineNextPolicy
  name: HttpPipelineNextPolicy
  nameWithType: HttpPipelineNextPolicy
  fullName: com.azure.core.http.HttpPipelineNextPolicy
- uid: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.HttpResponse
    name: HttpResponse
    fullName: com.azure.core.http.HttpResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.policy.AddHeadersFromContextPolicy.process*
  name: process
  nameWithType: AddHeadersFromContextPolicy.process
  fullName: com.azure.core.http.policy.AddHeadersFromContextPolicy.process
  package: com.azure.core.http.policy
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
