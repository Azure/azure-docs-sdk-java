### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put
  id: Put
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.Put.clear()
  - com.azure.cosmos.implementation.apachecommons.collections.Put.put(K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.Put.putAll(java.util.Map<? extends K,? extends V>)
  langs:
  - java
  name: Put<K,V>
  nameWithType: Put<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>
  type: Interface
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public interface Put<K,V>
    typeParameters:
    - id: K
    - id: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Put
  langs:
  - java
  name: clear()
  nameWithType: Put<K,V>.clear()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.clear()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Put.clear*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract void clear()
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.put(K,V)
  id: put(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Put
  langs:
  - java
  name: put(K key, V value)
  nameWithType: Put<K,V>.put(K key, V value)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.put(K key, V value)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Put.put*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  summary: Note that the return type is Object, rather than V as in the Map interface. See the class Javadoc for further info.
  syntax:
    content: public abstract Object put(K key, V value)
    parameters:
    - id: key
      type: K
      description: key with which the specified value is to be associated
    - id: value
      type: V
      description: value to be associated with the specified key
    return:
      type: java.lang.Object
      description: >-
        the previous value associated with <code>key</code>, or
                 <code>null</code> if there was no mapping for <code>key</code>.
                 (A <code>null</code> return can also indicate that the map
                 previously associated <code>null</code> with <code>key</code>,
                 if the implementation supports <code>null</code> values.)
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.putAll(java.util.Map<? extends K,? extends V>)
  id: putAll(java.util.Map<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Put
  langs:
  - java
  name: putAll(Map<? extends K,? extends V> t)
  nameWithType: Put<K,V>.putAll(Map<? extends K,? extends V> t)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.putAll(Map<? extends K,? extends V> t)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Put.putAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract void putAll(Map<? extends K,? extends V> t)
    parameters:
    - id: t
      type: java.util.Map<? extends K,? extends V>
      description: mappings to be stored in this map
references:
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.clear*
  name: clear
  nameWithType: Put<K,V>.clear
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.clear
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.put*
  name: put
  nameWithType: Put<K,V>.put
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.put
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Map<? extends K,? extends V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.Put.putAll*
  name: putAll
  nameWithType: Put<K,V>.putAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Put<K,V>.putAll
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
