### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.readValue*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.<T>readValue"
name: "<T>readValue"
nameWithType: "DeserializationContext.<T>readValue"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(JsonParser p, JavaType type)"
  name: "<T>readValue(JsonParser p, JavaType type)"
  nameWithType: "DeserializationContext.<T>readValue(JsonParser p, JavaType type)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T <T>readValue(JsonParser p, JavaType type)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(JsonParser p, Class<T> type)"
  name: "<T>readValue(JsonParser p, Class<T> type)"
  nameWithType: "DeserializationContext.<T>readValue(JsonParser p, Class<T> type)"
  summary: "Convenience method that may be used by composite or container deserializers, for reading one-off values contained (for sequences, it is more efficient to actually fetch deserializer once for the whole collection).\n\nNOTE: when deserializing values of properties contained in composite types, rather use <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.&lt;T&gt;readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readPropertyValue(JsonParser, BeanProperty, Class)\"></xref>; this method does not allow use of contextual annotations."
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>readValue(JsonParser p, Class<T> type)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
