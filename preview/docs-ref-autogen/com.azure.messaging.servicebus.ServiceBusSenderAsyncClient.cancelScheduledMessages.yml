### YamlMime:JavaMember
uid: "com.azure.messaging.servicebus.ServiceBusSenderAsyncClient.cancelScheduledMessages*"
fullName: "com.azure.messaging.servicebus.ServiceBusSenderAsyncClient.cancelScheduledMessages"
name: "cancelScheduledMessages"
nameWithType: "ServiceBusSenderAsyncClient.cancelScheduledMessages"
members:
- uid: "com.azure.messaging.servicebus.ServiceBusSenderAsyncClient.cancelScheduledMessages(java.lang.Iterable<java.lang.Long>)"
  fullName: "com.azure.messaging.servicebus.ServiceBusSenderAsyncClient.cancelScheduledMessages(Iterable<Long> sequenceNumbers)"
  name: "cancelScheduledMessages(Iterable<Long> sequenceNumbers)"
  nameWithType: "ServiceBusSenderAsyncClient.cancelScheduledMessages(Iterable<Long> sequenceNumbers)"
  summary: "Cancels the enqueuing of an already scheduled message, if it was not already enqueued."
  parameters:
  - description: "of the scheduled messages to cancel."
    name: "sequenceNumbers"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> cancelScheduledMessages(Iterable<Long> sequenceNumbers)"
  returns:
    description: "The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that finishes this operation on service bus resource."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
