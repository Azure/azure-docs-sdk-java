### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync*"
fullName: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync"
name: "getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync"
nameWithType: "AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync"
members:
- uid: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(java.lang.String,com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery)"
  fullName: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body)"
  name: "getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body)"
  nameWithType: "AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body)"
  summary: "Query anomalies under anomaly detection configuration."
  parameters:
  - description: "the next link."
    name: "nextLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "query detection anomaly result request."
    name: "body"
    type: "<xref href=\"com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery?alt=com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery&text=DetectionAnomalyResultQuery\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<AnomalyResult>> getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.implementation.models.AnomalyResult?alt=com.azure.ai.metricsadvisor.implementation.models.AnomalyResult&text=AnomalyResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(java.lang.String,com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.implementation.AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body, Context context)"
  name: "getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body, Context context)"
  nameWithType: "AzureCognitiveServiceMetricsAdvisorRestAPIOpenAPIV2Impl.getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body, Context context)"
  summary: "Query anomalies under anomaly detection configuration."
  parameters:
  - description: "the next link."
    name: "nextLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "query detection anomaly result request."
    name: "body"
    type: "<xref href=\"com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery?alt=com.azure.ai.metricsadvisor.implementation.models.DetectionAnomalyResultQuery&text=DetectionAnomalyResultQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<AnomalyResult>> getAnomaliesByAnomalyDetectionConfigurationNextSinglePageAsync(String nextLink, DetectionAnomalyResultQuery body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.implementation.models.AnomalyResult?alt=com.azure.ai.metricsadvisor.implementation.models.AnomalyResult&text=AnomalyResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.implementation"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.3
