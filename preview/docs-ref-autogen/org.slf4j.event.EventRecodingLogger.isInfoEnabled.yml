### YamlMime:JavaMember
uid: "org.slf4j.event.EventRecodingLogger.isInfoEnabled*"
fullName: "org.slf4j.event.EventRecodingLogger.isInfoEnabled"
name: "isInfoEnabled"
nameWithType: "EventRecodingLogger.isInfoEnabled"
members:
- uid: "org.slf4j.event.EventRecodingLogger.isInfoEnabled()"
  fullName: "org.slf4j.event.EventRecodingLogger.isInfoEnabled()"
  name: "isInfoEnabled()"
  nameWithType: "EventRecodingLogger.isInfoEnabled()"
  summary: "Is the logger instance enabled for the INFO level?"
  syntax: "public boolean isInfoEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.slf4j.event.EventRecodingLogger.isInfoEnabled(org.slf4j.Marker)"
  fullName: "org.slf4j.event.EventRecodingLogger.isInfoEnabled(Marker marker)"
  name: "isInfoEnabled(Marker marker)"
  nameWithType: "EventRecodingLogger.isInfoEnabled(Marker marker)"
  summary: "Similar to <xref uid=\"org.slf4j.event.EventRecodingLogger.isInfoEnabled()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isInfoEnabled()\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean isInfoEnabled(Marker marker)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.slf4j.event"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
