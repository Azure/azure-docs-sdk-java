### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.AnyGetterWriter"
fullName: "com.fasterxml.jackson.databind.ser.AnyGetterWriter"
name: "AnyGetterWriter"
nameWithType: "AnyGetterWriter"
summary: "Class similar to <xref uid=\"com.fasterxml.jackson.databind.ser.BeanPropertyWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BeanPropertyWriter\"></xref>, but that will be used for serializing <xref uid=\"com.fasterxml.jackson.annotation.JsonAnyGetter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonAnyGetter\"></xref> annotated (Map) properties"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AnyGetterWriter"
constructors:
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter.AnyGetterWriter(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer<?>)"
fields:
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter._accessor"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter._mapSerializer"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter._property"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter._serializer"
methods:
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter)"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.AnyGetterWriter.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
