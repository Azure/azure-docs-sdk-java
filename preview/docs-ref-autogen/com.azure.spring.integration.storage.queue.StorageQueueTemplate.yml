### YamlMime:ManagedReference
items:
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  id: StorageQueueTemplate
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue
  children:
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.<T>sendAsync(java.lang.String,org.springframework.messaging.Message<T>,com.azure.spring.integration.core.api.PartitionSupplier)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate(com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler(com.azure.storage.queue.models.QueueMessageItem,java.lang.String,java.lang.Throwable)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode()
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter()
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType()
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds()
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.messageConverter
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync(java.lang.String)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode(com.azure.spring.integration.core.api.CheckpointMode)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter(com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType(java.lang.Class<?>)
  - com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds(int)
  langs:
  - java
  name: StorageQueueTemplate
  nameWithType: StorageQueueTemplate
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  type: Class
  package: com.azure.spring.integration.storage.queue
  summary: Azure Storage Queue template to support send / receive <xref uid="org.springframework.messaging.Message" data-throw-if-not-resolved="false">Message</xref> asynchronously.
  syntax:
    content: public class StorageQueueTemplate implements StorageQueueOperation
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.spring.integration.storage.queue.StorageQueueOperation
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.<T>sendAsync(java.lang.String,org.springframework.messaging.Message<T>,com.azure.spring.integration.core.api.PartitionSupplier)
  id: <T>sendAsync(java.lang.String,org.springframework.messaging.Message<T>,com.azure.spring.integration.core.api.PartitionSupplier)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: <T>sendAsync(String queueName, Message<T> message, PartitionSupplier partitionSupplier)
  nameWithType: StorageQueueTemplate.<T>sendAsync(String queueName, Message<T> message, PartitionSupplier partitionSupplier)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.<T>sendAsync(String queueName, Message<T> message, PartitionSupplier partitionSupplier)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.sendAsync*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public Mono<Void> <T>sendAsync(String queueName, Message<T> message, PartitionSupplier partitionSupplier)
    parameters:
    - id: queueName
      type: java.lang.String
    - id: message
      type: org.springframework.messaging.Message<T>
    - id: partitionSupplier
      type: com.azure.spring.integration.core.api.PartitionSupplier
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate(com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory)
  id: StorageQueueTemplate(com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: StorageQueueTemplate(StorageQueueClientFactory storageQueueClientFactory)
  nameWithType: StorageQueueTemplate.StorageQueueTemplate(StorageQueueClientFactory storageQueueClientFactory)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate(StorageQueueClientFactory storageQueueClientFactory)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate*
  type: Constructor
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public StorageQueueTemplate(StorageQueueClientFactory storageQueueClientFactory)
    parameters:
    - id: storageQueueClientFactory
      type: com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler(com.azure.storage.queue.models.QueueMessageItem,java.lang.String,java.lang.Throwable)
  id: checkpointHandler(com.azure.storage.queue.models.QueueMessageItem,java.lang.String,java.lang.Throwable)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: checkpointHandler(QueueMessageItem message, String queueName, Throwable t)
  nameWithType: StorageQueueTemplate.checkpointHandler(QueueMessageItem message, String queueName, Throwable t)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler(QueueMessageItem message, String queueName, Throwable t)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public void checkpointHandler(QueueMessageItem message, String queueName, Throwable t)
    parameters:
    - id: message
      type: com.azure.storage.queue.models.QueueMessageItem
    - id: queueName
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode()
  id: getCheckpointMode()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: getCheckpointMode()
  nameWithType: StorageQueueTemplate.getCheckpointMode()
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode()
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public CheckpointMode getCheckpointMode()
    return:
      type: com.azure.spring.integration.core.api.CheckpointMode
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter()
  id: getMessageConverter()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: getMessageConverter()
  nameWithType: StorageQueueTemplate.getMessageConverter()
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter()
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public StorageQueueMessageConverter getMessageConverter()
    return:
      type: com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType()
  id: getMessagePayloadType()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: getMessagePayloadType()
  nameWithType: StorageQueueTemplate.getMessagePayloadType()
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType()
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public Class<?> getMessagePayloadType()
    return:
      type: java.lang.Class<?>
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds()
  id: getVisibilityTimeoutInSeconds()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: getVisibilityTimeoutInSeconds()
  nameWithType: StorageQueueTemplate.getVisibilityTimeoutInSeconds()
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds()
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public int getVisibilityTimeoutInSeconds()
    return:
      type: int
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.messageConverter
  id: messageConverter
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: messageConverter
  nameWithType: StorageQueueTemplate.messageConverter
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.messageConverter
  type: Field
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: protected StorageQueueMessageConverter messageConverter
    return:
      type: com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync(java.lang.String)
  id: receiveAsync(java.lang.String)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: receiveAsync(String queueName)
  nameWithType: StorageQueueTemplate.receiveAsync(String queueName)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync(String queueName)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public Mono<Message<?>> receiveAsync(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<org.springframework.messaging.Message<?>>
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode(com.azure.spring.integration.core.api.CheckpointMode)
  id: setCheckpointMode(com.azure.spring.integration.core.api.CheckpointMode)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: setCheckpointMode(CheckpointMode checkpointMode)
  nameWithType: StorageQueueTemplate.setCheckpointMode(CheckpointMode checkpointMode)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode(CheckpointMode checkpointMode)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public void setCheckpointMode(CheckpointMode checkpointMode)
    parameters:
    - id: checkpointMode
      type: com.azure.spring.integration.core.api.CheckpointMode
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter(com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter)
  id: setMessageConverter(com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: setMessageConverter(StorageQueueMessageConverter messageConverter)
  nameWithType: StorageQueueTemplate.setMessageConverter(StorageQueueMessageConverter messageConverter)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter(StorageQueueMessageConverter messageConverter)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public void setMessageConverter(StorageQueueMessageConverter messageConverter)
    parameters:
    - id: messageConverter
      type: com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType(java.lang.Class<?>)
  id: setMessagePayloadType(java.lang.Class<?>)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: setMessagePayloadType(Class<?> payloadType)
  nameWithType: StorageQueueTemplate.setMessagePayloadType(Class<?> payloadType)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType(Class<?> payloadType)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType*
  type: Method
  package: com.azure.spring.integration.storage.queue
  syntax:
    content: public void setMessagePayloadType(Class<?> payloadType)
    parameters:
    - id: payloadType
      type: java.lang.Class<?>
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds(int)
  id: setVisibilityTimeoutInSeconds(int)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.StorageQueueTemplate
  langs:
  - java
  name: setVisibilityTimeoutInSeconds(int timeout)
  nameWithType: StorageQueueTemplate.setVisibilityTimeoutInSeconds(int timeout)
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds(int timeout)
  overload: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds*
  type: Method
  package: com.azure.spring.integration.storage.queue
  summary: Set visibility timeout. Default is 30
  syntax:
    content: public void setVisibilityTimeoutInSeconds(int timeout)
    parameters:
    - id: timeout
      type: int
references:
- uid: com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory
  name: StorageQueueClientFactory
  nameWithType: StorageQueueClientFactory
  fullName: com.azure.spring.integration.storage.queue.factory.StorageQueueClientFactory
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate*
  name: StorageQueueTemplate
  nameWithType: StorageQueueTemplate.StorageQueueTemplate
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.StorageQueueTemplate
  package: com.azure.spring.integration.storage.queue
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.springframework.messaging.Message<T>
  spec.java:
  - uid: org.springframework.messaging.Message
    name: Message
    fullName: org.springframework.messaging.Message
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.integration.core.api.PartitionSupplier
  spec.java:
  - uid: com.azure.spring.integration.core.api.PartitionSupplier
    name: PartitionSupplier
    fullName: com.azure.spring.integration.core.api.PartitionSupplier
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.sendAsync*
  name: <T>sendAsync
  nameWithType: StorageQueueTemplate.<T>sendAsync
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.<T>sendAsync
  package: com.azure.spring.integration.storage.queue
- uid: reactor.core.publisher.Mono<org.springframework.messaging.Message<?>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: org.springframework.messaging.Message
    name: Message
    fullName: org.springframework.messaging.Message
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync*
  name: receiveAsync
  nameWithType: StorageQueueTemplate.receiveAsync
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.receiveAsync
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.storage.queue.models.QueueMessageItem
  spec.java:
  - uid: com.azure.storage.queue.models.QueueMessageItem
    name: QueueMessageItem
    fullName: com.azure.storage.queue.models.QueueMessageItem
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler*
  name: checkpointHandler
  nameWithType: StorageQueueTemplate.checkpointHandler
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.checkpointHandler
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter
  name: StorageQueueMessageConverter
  nameWithType: StorageQueueMessageConverter
  fullName: com.azure.spring.integration.storage.queue.converter.StorageQueueMessageConverter
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter*
  name: getMessageConverter
  nameWithType: StorageQueueTemplate.getMessageConverter
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessageConverter
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter*
  name: setMessageConverter
  nameWithType: StorageQueueTemplate.setMessageConverter
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessageConverter
  package: com.azure.spring.integration.storage.queue
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds*
  name: getVisibilityTimeoutInSeconds
  nameWithType: StorageQueueTemplate.getVisibilityTimeoutInSeconds
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getVisibilityTimeoutInSeconds
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds*
  name: setVisibilityTimeoutInSeconds
  nameWithType: StorageQueueTemplate.setVisibilityTimeoutInSeconds
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setVisibilityTimeoutInSeconds
  package: com.azure.spring.integration.storage.queue
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType*
  name: getMessagePayloadType
  nameWithType: StorageQueueTemplate.getMessagePayloadType
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getMessagePayloadType
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType*
  name: setMessagePayloadType
  nameWithType: StorageQueueTemplate.setMessagePayloadType
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setMessagePayloadType
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.core.api.CheckpointMode
  spec.java:
  - uid: com.azure.spring.integration.core.api.CheckpointMode
    name: CheckpointMode
    fullName: com.azure.spring.integration.core.api.CheckpointMode
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode*
  name: getCheckpointMode
  nameWithType: StorageQueueTemplate.getCheckpointMode
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.getCheckpointMode
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode*
  name: setCheckpointMode
  nameWithType: StorageQueueTemplate.setCheckpointMode
  fullName: com.azure.spring.integration.storage.queue.StorageQueueTemplate.setCheckpointMode
  package: com.azure.spring.integration.storage.queue
- uid: com.azure.spring.integration.storage.queue.StorageQueueOperation
  name: StorageQueueOperation
  nameWithType: StorageQueueOperation
  fullName: com.azure.spring.integration.storage.queue.StorageQueueOperation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: org.springframework.messaging.Message
  name: Message
  nameWithType: Message
  fullName: org.springframework.messaging.Message
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
