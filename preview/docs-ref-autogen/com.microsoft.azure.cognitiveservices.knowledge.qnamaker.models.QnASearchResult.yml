### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult"
name: "QnASearchResult"
nameWithType: "QnASearchResult"
summary: "Represents Search Result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class QnASearchResult"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.QnASearchResult()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.QnASearchResult()"
  name: "QnASearchResult()"
  nameWithType: "QnASearchResult.QnASearchResult()"
  syntax: "public QnASearchResult()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.answer()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.answer()"
  name: "answer()"
  nameWithType: "QnASearchResult.answer()"
  summary: "Get the answer value."
  syntax: "public String answer()"
  desc: "Get the answer value."
  returns:
    description: "the answer value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.answerSpan()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.answerSpan()"
  name: "answerSpan()"
  nameWithType: "QnASearchResult.answerSpan()"
  summary: "Get the answer<wbr>Span value."
  syntax: "public QnASearchResultAnswerSpan answerSpan()"
  desc: "Get the answerSpan value."
  returns:
    description: "the answerSpan value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan&text=QnASearchResultAnswerSpan\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.context()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.context()"
  name: "context()"
  nameWithType: "QnASearchResult.context()"
  summary: "Get the context value."
  syntax: "public QnASearchResultContext context()"
  desc: "Get the context value."
  returns:
    description: "the context value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultContext?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultContext&text=QnASearchResultContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.id()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.id()"
  name: "id()"
  nameWithType: "QnASearchResult.id()"
  summary: "Get the id value."
  syntax: "public Integer id()"
  desc: "Get the id value."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.metadata()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.metadata()"
  name: "metadata()"
  nameWithType: "QnASearchResult.metadata()"
  summary: "Get the metadata value."
  syntax: "public List<MetadataDTO> metadata()"
  desc: "Get the metadata value."
  returns:
    description: "the metadata value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO&text=MetadataDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.questions()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.questions()"
  name: "questions()"
  nameWithType: "QnASearchResult.questions()"
  summary: "Get the questions value."
  syntax: "public List<String> questions()"
  desc: "Get the questions value."
  returns:
    description: "the questions value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.score()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.score()"
  name: "score()"
  nameWithType: "QnASearchResult.score()"
  summary: "Get the score value."
  syntax: "public Double score()"
  desc: "Get the score value."
  returns:
    description: "the score value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.source()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.source()"
  name: "source()"
  nameWithType: "QnASearchResult.source()"
  summary: "Get the source value."
  syntax: "public String source()"
  desc: "Get the source value."
  returns:
    description: "the source value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswer(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswer(String answer)"
  name: "withAnswer(String answer)"
  nameWithType: "QnASearchResult.withAnswer(String answer)"
  summary: "Set the answer value."
  parameters:
  - description: "the answer value to set"
    name: "answer"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withAnswer(String answer)"
  desc: "Set the answer value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  name: "withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  nameWithType: "QnASearchResult.withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  summary: "Set the answer<wbr>Span value."
  parameters:
  - description: "the answerSpan value to set"
    name: "answerSpan"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan&text=QnASearchResultAnswerSpan\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  desc: "Set the answerSpan value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withContext(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultContext)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withContext(QnASearchResultContext context)"
  name: "withContext(QnASearchResultContext context)"
  nameWithType: "QnASearchResult.withContext(QnASearchResultContext context)"
  summary: "Set the context value."
  parameters:
  - description: "the context value to set"
    name: "context"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultContext?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultContext&text=QnASearchResultContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withContext(QnASearchResultContext context)"
  desc: "Set the context value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withId(java.lang.Integer)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withId(Integer id)"
  name: "withId(Integer id)"
  nameWithType: "QnASearchResult.withId(Integer id)"
  summary: "Set the id value."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withId(Integer id)"
  desc: "Set the id value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withMetadata(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withMetadata(List<MetadataDTO> metadata)"
  name: "withMetadata(List<MetadataDTO> metadata)"
  nameWithType: "QnASearchResult.withMetadata(List<MetadataDTO> metadata)"
  summary: "Set the metadata value."
  parameters:
  - description: "the metadata value to set"
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO&text=MetadataDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QnASearchResult withMetadata(List<MetadataDTO> metadata)"
  desc: "Set the metadata value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withQuestions(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withQuestions(List<String> questions)"
  name: "withQuestions(List<String> questions)"
  nameWithType: "QnASearchResult.withQuestions(List<String> questions)"
  summary: "Set the questions value."
  parameters:
  - description: "the questions value to set"
    name: "questions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QnASearchResult withQuestions(List<String> questions)"
  desc: "Set the questions value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withScore(java.lang.Double)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withScore(Double score)"
  name: "withScore(Double score)"
  nameWithType: "QnASearchResult.withScore(Double score)"
  summary: "Set the score value."
  parameters:
  - description: "the score value to set"
    name: "score"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withScore(Double score)"
  desc: "Set the score value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withSource(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withSource(String source)"
  name: "withSource(String source)"
  nameWithType: "QnASearchResult.withSource(String source)"
  summary: "Set the source value."
  parameters:
  - description: "the source value to set"
    name: "source"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withSource(String source)"
  desc: "Set the source value."
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents Search Result."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
