### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.secrets.SecretClientTest
  id: SecretClientTest
  parent: com.azure.security.keyvault.secrets
  children:
  - com.azure.security.keyvault.secrets.SecretClientTest.backupSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound()
  - com.azure.security.keyvault.secrets.SecretClientTest.beforeTest()
  - com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound()
  - com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound()
  - com.azure.security.keyvault.secrets.SecretClientTest.getSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound()
  - com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion()
  - com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets()
  - com.azure.security.keyvault.secrets.SecretClientTest.listSecrets()
  - com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions()
  - com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound()
  - com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup()
  - com.azure.security.keyvault.secrets.SecretClientTest.setSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName()
  - com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue()
  - com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull()
  - com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret()
  - com.azure.security.keyvault.secrets.SecretClientTest.updateSecret()
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: SecretClientTest
  nameWithType: SecretClientTest
  fullName: com.azure.security.keyvault.secrets.SecretClientTest
  type: Class
  source:
    remote: &o0
      path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 23
  package: com.azure.security.keyvault.secrets
  syntax:
    content: public class SecretClientTest extends SecretClientTestBase
  inheritance:
  - java.lang.Object
  - com.azure.core.test.TestBase
  - com.azure.security.keyvault.secrets.SecretClientTestBase
  inheritedMembers:
  - com.azure.core.test.TestBase.afterTest()
  - com.azure.security.keyvault.secrets.SecretClientTestBase.getEndpoint()
  - com.azure.core.test.TestBase.getTestMode()
  - com.azure.core.test.TestBase.interceptorManager
  - com.azure.core.test.TestBase.setupClass()
  - com.azure.core.test.TestBase.setupTest()
  - com.azure.security.keyvault.secrets.SecretClientTestBase.sleep(long)
  - com.azure.security.keyvault.secrets.SecretClientTestBase.sleepInRecordMode(long)
  - com.azure.core.test.TestBase.teardownTest()
  - com.azure.security.keyvault.secrets.SecretClientTestBase.testName
  - com.azure.security.keyvault.secrets.SecretClientTestBase.testName()
  - com.azure.core.test.TestBase.testResourceNamer
- uid: com.azure.security.keyvault.secrets.SecretClientTest.backupSecret()
  id: backupSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: backupSecret()
  nameWithType: SecretClientTest.backupSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.backupSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.backupSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 206
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a secret can be backed up in the key vault. </p>"
  syntax:
    content: public void backupSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound()
  id: backupSecretNotFound()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: backupSecretNotFound()
  nameWithType: SecretClientTest.backupSecretNotFound()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 218
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an attempt to backup a non existing secret throws an error. </p>"
  syntax:
    content: public void backupSecretNotFound()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.beforeTest()
  id: beforeTest()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: beforeTest()
  nameWithType: SecretClientTest.beforeTest()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.beforeTest()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.beforeTest*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 28
  package: com.azure.security.keyvault.secrets
  syntax:
    content: protected void beforeTest()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret()
  id: deleteSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: deleteSecret()
  nameWithType: SecretClientTest.deleteSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 135
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an existing secret can be deleted. </p>"
  syntax:
    content: public void deleteSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound()
  id: deleteSecretNotFound()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: deleteSecretNotFound()
  nameWithType: SecretClientTest.deleteSecretNotFound()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 149
  package: com.azure.security.keyvault.secrets
  syntax:
    content: public void deleteSecretNotFound()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret()
  id: getDeletedSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: getDeletedSecret()
  nameWithType: SecretClientTest.getDeletedSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 156
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a deleted secret can be retrieved on a soft-delete enabled vault. </p>"
  syntax:
    content: public void getDeletedSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound()
  id: getDeletedSecretNotFound()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: getDeletedSecretNotFound()
  nameWithType: SecretClientTest.getDeletedSecretNotFound()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 176
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an attempt to retrieve a non existing deleted secret throws an error on a soft-delete enabled vault. </p>"
  syntax:
    content: public void getDeletedSecretNotFound()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecret()
  id: getSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: getSecret()
  nameWithType: SecretClientTest.getSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.getSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 106
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an existing secret can be retrieved. </p>"
  syntax:
    content: public void getSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound()
  id: getSecretNotFound()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: getSecretNotFound()
  nameWithType: SecretClientTest.getSecretNotFound()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 128
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an attempt to get a non-existing secret throws an error. </p>"
  syntax:
    content: public void getSecretNotFound()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion()
  id: getSecretSpecificVersion()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: getSecretSpecificVersion()
  nameWithType: SecretClientTest.getSecretSpecificVersion()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 116
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a specific version of the secret can be retrieved. </p>"
  syntax:
    content: public void getSecretSpecificVersion()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets()
  id: listDeletedSecrets()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: listDeletedSecrets()
  nameWithType: SecretClientTest.listDeletedSecrets()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 276
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that deleted secrets can be listed in the key vault. </p>"
  syntax:
    content: public void listDeletedSecrets()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listSecrets()
  id: listSecrets()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: listSecrets()
  nameWithType: SecretClientTest.listSecrets()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listSecrets()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.listSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 253
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that secrets can be listed in the key vault. </p>"
  syntax:
    content: public void listSecrets()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions()
  id: listSecretVersions()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: listSecretVersions()
  nameWithType: SecretClientTest.listSecretVersions()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 313
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that secret versions can be listed in the key vault. </p>"
  syntax:
    content: public void listSecretVersions()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret()
  id: recoverDeletedSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: recoverDeletedSecret()
  nameWithType: SecretClientTest.recoverDeletedSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 184
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a deleted secret can be recovered on a soft-delete enabled vault. </p>"
  syntax:
    content: public void recoverDeletedSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound()
  id: recoverDeletedSecretNotFound()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: recoverDeletedSecretNotFound()
  nameWithType: SecretClientTest.recoverDeletedSecretNotFound()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 199
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an attempt to recover a non existing deleted secret throws an error on a soft-delete enabled vault. </p>"
  syntax:
    content: public void recoverDeletedSecretNotFound()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret()
  id: restoreSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: restoreSecret()
  nameWithType: SecretClientTest.restoreSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 225
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a secret can be backed up in the key vault. </p>"
  syntax:
    content: public synchronized void restoreSecret()
    return:
      type: 5c0b90ca
- uid: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup()
  id: restoreSecretFromMalformedBackup()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: restoreSecretFromMalformedBackup()
  nameWithType: SecretClientTest.restoreSecretFromMalformedBackup()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 245
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that an attempt to restore a secret from malformed backup bytes throws an error. </p>"
  syntax:
    content: public void restoreSecretFromMalformedBackup()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecret()
  id: setSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: setSecret()
  nameWithType: SecretClientTest.setSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.setSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 53
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a secret can be created in the key vault. </p>"
  syntax:
    content: public void setSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName()
  id: setSecretEmptyName()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: setSecretEmptyName()
  nameWithType: SecretClientTest.setSecretEmptyName()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 60
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that we cannot create a secret when the secret is an empty string. </p>"
  syntax:
    content: public void setSecretEmptyName()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue()
  id: setSecretEmptyValue()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: setSecretEmptyValue()
  nameWithType: SecretClientTest.setSecretEmptyValue()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 67
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that we can create secrets when value is not null or an empty string. </p>"
  syntax:
    content: public void setSecretEmptyValue()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull()
  id: setSecretNull()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: setSecretNull()
  nameWithType: SecretClientTest.setSecretNull()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 77
  package: com.azure.security.keyvault.secrets
  summary: "<p>Verifies that an exception is thrown when null secret object is passed for creation. </p>"
  syntax:
    content: public void setSecretNull()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret()
  id: updateDisabledSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: updateDisabledSecret()
  nameWithType: SecretClientTest.updateDisabledSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 96
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a secret is not able to be updated when it is disabled. 403 error is expected. </p>"
  syntax:
    content: public void updateDisabledSecret()
- uid: com.azure.security.keyvault.secrets.SecretClientTest.updateSecret()
  id: updateSecret()
  parent: com.azure.security.keyvault.secrets.SecretClientTest
  href: com.azure.security.keyvault.secrets.SecretClientTest.yml
  langs:
  - java
  name: updateSecret()
  nameWithType: SecretClientTest.updateSecret()
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.updateSecret()
  overload: com.azure.security.keyvault.secrets.SecretClientTest.updateSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-secrets/src/test/java/com/azure/security/keyvault/secrets/SecretClientTest.java
    startLine: 84
  package: com.azure.security.keyvault.secrets
  summary: "<p>Tests that a secret is able to be updated when it exists. </p>"
  syntax:
    content: public void updateSecret()
references:
- uid: com.azure.security.keyvault.secrets.SecretClientTest.beforeTest*
  name: beforeTest
  nameWithType: SecretClientTest.beforeTest
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.beforeTest
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecret*
  name: setSecret
  nameWithType: SecretClientTest.setSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName*
  name: setSecretEmptyName
  nameWithType: SecretClientTest.setSecretEmptyName
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyName
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue*
  name: setSecretEmptyValue
  nameWithType: SecretClientTest.setSecretEmptyValue
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretEmptyValue
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull*
  name: setSecretNull
  nameWithType: SecretClientTest.setSecretNull
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.setSecretNull
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.updateSecret*
  name: updateSecret
  nameWithType: SecretClientTest.updateSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.updateSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret*
  name: updateDisabledSecret
  nameWithType: SecretClientTest.updateDisabledSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.updateDisabledSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecret*
  name: getSecret
  nameWithType: SecretClientTest.getSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion*
  name: getSecretSpecificVersion
  nameWithType: SecretClientTest.getSecretSpecificVersion
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecretSpecificVersion
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound*
  name: getSecretNotFound
  nameWithType: SecretClientTest.getSecretNotFound
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getSecretNotFound
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret*
  name: deleteSecret
  nameWithType: SecretClientTest.deleteSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound*
  name: deleteSecretNotFound
  nameWithType: SecretClientTest.deleteSecretNotFound
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.deleteSecretNotFound
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret*
  name: getDeletedSecret
  nameWithType: SecretClientTest.getDeletedSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound*
  name: getDeletedSecretNotFound
  nameWithType: SecretClientTest.getDeletedSecretNotFound
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.getDeletedSecretNotFound
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret*
  name: recoverDeletedSecret
  nameWithType: SecretClientTest.recoverDeletedSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound*
  name: recoverDeletedSecretNotFound
  nameWithType: SecretClientTest.recoverDeletedSecretNotFound
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.recoverDeletedSecretNotFound
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.backupSecret*
  name: backupSecret
  nameWithType: SecretClientTest.backupSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.backupSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound*
  name: backupSecretNotFound
  nameWithType: SecretClientTest.backupSecretNotFound
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.backupSecretNotFound
  package: com.azure.security.keyvault.secrets
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret*
  name: restoreSecret
  nameWithType: SecretClientTest.restoreSecret
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecret
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup*
  name: restoreSecretFromMalformedBackup
  nameWithType: SecretClientTest.restoreSecretFromMalformedBackup
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.restoreSecretFromMalformedBackup
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listSecrets*
  name: listSecrets
  nameWithType: SecretClientTest.listSecrets
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listSecrets
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets*
  name: listDeletedSecrets
  nameWithType: SecretClientTest.listDeletedSecrets
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listDeletedSecrets
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions*
  name: listSecretVersions
  nameWithType: SecretClientTest.listSecretVersions
  fullName: com.azure.security.keyvault.secrets.SecretClientTest.listSecretVersions
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.test.TestBase.afterTest()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: afterTest()
  nameWithType: TestBase.afterTest()
  fullName: com.azure.core.test.TestBase.afterTest()
  type: Method
  summary: "<p>Dispose of any resources and clean-up after a test case runs. Can be overridden in an inheriting class to add additional functionality during test teardown. </p>"
  syntax:
    content: protected void afterTest()
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase.getEndpoint()
  parent: com.azure.security.keyvault.secrets.SecretClientTestBase
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: getEndpoint()
  nameWithType: SecretClientTestBase.getEndpoint()
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase.getEndpoint()
  type: Method
  syntax:
    content: public String getEndpoint()
    return:
      type: "26831127"
- uid: com.azure.core.test.TestBase.getTestMode()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: getTestMode()
  nameWithType: TestBase.getTestMode()
  fullName: com.azure.core.test.TestBase.getTestMode()
  type: Method
  summary: "<p>Gets the TestMode that has been initialized.</p>\r\n<p></p>"
  syntax:
    content: public TestMode getTestMode()
    return:
      type: com.azure.core.test.TestMode
      description: <p>The TestMode that has been initialized. </p>
- uid: com.azure.core.test.TestBase.interceptorManager
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: interceptorManager
  nameWithType: TestBase.interceptorManager
  fullName: com.azure.core.test.TestBase.interceptorManager
  type: Field
  syntax:
    content: protected InterceptorManager interceptorManager
    return:
      type: com.azure.core.test.InterceptorManager
- uid: com.azure.core.test.TestBase.setupClass()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: setupClass()
  nameWithType: TestBase.setupClass()
  fullName: com.azure.core.test.TestBase.setupClass()
  type: Method
  summary: "<p>Before tests are executed, determines the test mode by reading the <xref uid=\"\" data-throw-if-not-resolved=\"false\">TestBase#AZURE_TEST_MODE</xref> environment variable. If it is not set, <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref></p>"
  syntax:
    content: public static void setupClass()
- uid: com.azure.core.test.TestBase.setupTest()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: setupTest()
  nameWithType: TestBase.setupTest()
  fullName: com.azure.core.test.TestBase.setupTest()
  type: Method
  summary: "<p>Sets-up the <xref uid=\"\" data-throw-if-not-resolved=\"false\">TestBase#testResourceNamer</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TestBase#interceptorManager</xref> before each test case is run. Then calls its implementing class to perform any other set-up commands. </p>"
  syntax:
    content: public void setupTest()
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase.sleep(long)
  parent: com.azure.security.keyvault.secrets.SecretClientTestBase
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: sleep(long millis)
  nameWithType: SecretClientTestBase.sleep(long millis)
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase.sleep(long millis)
  type: Method
  syntax:
    content: public void sleep(long millis)
    parameters:
    - id: millis
      type: 0364520f
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase.sleepInRecordMode(long)
  parent: com.azure.security.keyvault.secrets.SecretClientTestBase
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: sleepInRecordMode(long millis)
  nameWithType: SecretClientTestBase.sleepInRecordMode(long millis)
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase.sleepInRecordMode(long millis)
  type: Method
  syntax:
    content: public void sleepInRecordMode(long millis)
    parameters:
    - id: millis
      type: 0364520f
- uid: com.azure.core.test.TestBase.teardownTest()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: teardownTest()
  nameWithType: TestBase.teardownTest()
  fullName: com.azure.core.test.TestBase.teardownTest()
  type: Method
  summary: "<p>Disposes of <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref> and its inheriting class' resources. </p>"
  syntax:
    content: public void teardownTest()
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase.testName
  parent: com.azure.security.keyvault.secrets.SecretClientTestBase
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: testName
  nameWithType: SecretClientTestBase.testName
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase.testName
  type: Field
  syntax:
    content: public TestName testName= new TestName()
    return:
      type: 1e0ad879
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase.testName()
  parent: com.azure.security.keyvault.secrets.SecretClientTestBase
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: testName()
  nameWithType: SecretClientTestBase.testName()
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase.testName()
  type: Method
  syntax:
    content: protected String testName()
    return:
      type: "26831127"
- uid: com.azure.core.test.TestBase.testResourceNamer
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: testResourceNamer
  nameWithType: TestBase.testResourceNamer
  fullName: com.azure.core.test.TestBase.testResourceNamer
  type: Field
  syntax:
    content: protected TestResourceNamer testResourceNamer
    return:
      type: com.azure.core.test.utils.TestResourceNamer
- uid: com.azure.security.keyvault.secrets.SecretClientTestBase
  parent: com.azure.security.keyvault.secrets
  href: com.azure.security.keyvault.secrets.SecretClientTestBase.yml
  name: SecretClientTestBase
  nameWithType: SecretClientTestBase
  fullName: com.azure.security.keyvault.secrets.SecretClientTestBase
  type: Class
  syntax:
    content: public class SecretClientTestBase
- uid: com.azure.security.keyvault.secrets.SecretClient
  parent: com.azure.security.keyvault.secrets
  href: com.azure.security.keyvault.secrets.SecretClient.yml
  name: SecretClient
  nameWithType: SecretClient
  fullName: com.azure.security.keyvault.secrets.SecretClient
  type: Class
  summary: "<p>The SecretClient provides synchronous methods to manage <xref uid=\"\" data-throw-if-not-resolved=\"false\">secrets</xref> in the Azure Key Vault. The client supports creating, retrieving, updating, deleting, purging, backing up, restoring and listing the <xref uid=\"\" data-throw-if-not-resolved=\"false\">secrets</xref>. The client also supports listing <xref uid=\"\" data-throw-if-not-resolved=\"false\">deleted secrets</xref> for a soft-delete enabled Azure Key Vault.</p>\r\n<p>\r\n  <b>Samples to construct the sync client</b>\r\n</p>\r\n<p>{ com.azure.security.keyvault.secretclient.sync.construct}</p>\r\n<p></p>"
  syntax:
    content: public class SecretClient
- uid: com.azure.security.keyvault.secrets.models.DeletedSecret
  parent: com.azure.security.keyvault.secrets.models
  href: com.azure.security.keyvault.secrets.models.DeletedSecret.yml
  name: DeletedSecret
  nameWithType: DeletedSecret
  fullName: com.azure.security.keyvault.secrets.models.DeletedSecret
  type: Class
  summary: "<p>Deleted Secret is the resource consisting of name, recovery id, deleted date, scheduled purge date and its attributes inherited from <xref uid=\"com.azure.security.keyvault.secrets.models.SecretBase\" data-throw-if-not-resolved=\"false\">SecretBase</xref>. It is managed by Secret Service.</p>\r\n<p></p>"
  syntax:
    content: public class DeletedSecret extends SecretBase
