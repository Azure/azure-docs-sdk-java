### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState"
name: "deleteDeviceRegistrationState"
nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  name: "deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  summary: "Delete the Registration Status information.\n\nThis method will remove the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> information. The Device Provisioning Service will care about the id and the eTag on the DeviceRegistrationState. If you want to delete the deviceRegistrationState regardless the eTag, you can use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String)\"></xref> passing only the id.\n\nIf the id does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the deviceRegistrationState \"registrationId-1\".\n\n```java\n// Registration Status information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the registration status information.\n     DeviceRegistrationState registrationStateResult =  deviceProvisioningServiceClient.getDeviceRegistrationState(REGISTRATION_ID);\n\n     // Delete the registration status information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(registrationStateResult);\n }\n```"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> that identifies the deviceRegistrationState. It cannot be <code>null</code>."
    name: "deviceRegistrationState"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            registration status information for the provided DeviceRegistrationState."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id)"
  name: "deleteDeviceRegistrationState(String id)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(String id)"
  summary: "Delete the registration status information.\n\nThis method will remove the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> from the Device Provisioning Service using the provided id. It will delete the registration status regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String, String)\"></xref> with the `eTag=\"*\"`.\n\nIf the id does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the registration status \"registrationId-1\".\n\n```java\n// deviceRegistrationState information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the registration status information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(String id)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)"
  name: "deleteDeviceRegistrationState(String id, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)"
  summary: "Delete the registration status information.\n\nThis method will remove the registration status from the Device Provisioning Service using the provided id and eTag. If you want to delete the registration status regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nIf the id does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the deviceRegistrationState \"registrationId-1\" regardless the eTag.\n\n```java\n// Registration Status information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the deviceRegistrationState information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID, ANY_ETAG);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the deviceRegistrationState eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(String id, String eTag)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId and eTag."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
