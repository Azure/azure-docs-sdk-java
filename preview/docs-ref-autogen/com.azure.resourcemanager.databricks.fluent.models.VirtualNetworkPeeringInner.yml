### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner"
fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner"
name: "VirtualNetworkPeeringInner"
nameWithType: "VirtualNetworkPeeringInner"
summary: "Peerings in a VirtualNetwork resource."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class VirtualNetworkPeeringInner extends ProxyResource"
constructors:
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.VirtualNetworkPeeringInner()"
methods:
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowForwardedTraffic()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowGatewayTransit()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowVirtualNetworkAccess()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksAddressSpace()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksVirtualNetwork()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.peeringState()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.provisioningState()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteAddressSpace()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteVirtualNetwork()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.useRemoteGateways()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.validate()"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowForwardedTraffic(java.lang.Boolean)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowGatewayTransit(java.lang.Boolean)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(java.lang.Boolean)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksAddressSpace(com.azure.resourcemanager.databricks.models.AddressSpace)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksVirtualNetwork(com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteAddressSpace(com.azure.resourcemanager.databricks.models.AddressSpace)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteVirtualNetwork(com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork)"
- "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withUseRemoteGateways(java.lang.Boolean)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.databricks.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.1
