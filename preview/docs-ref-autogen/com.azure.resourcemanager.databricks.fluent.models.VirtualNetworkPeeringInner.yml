### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner"
fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner"
name: "VirtualNetworkPeeringInner"
nameWithType: "VirtualNetworkPeeringInner"
summary: "Peerings in a VirtualNetwork resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class VirtualNetworkPeeringInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.VirtualNetworkPeeringInner()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.VirtualNetworkPeeringInner()"
  name: "VirtualNetworkPeeringInner()"
  nameWithType: "VirtualNetworkPeeringInner.VirtualNetworkPeeringInner()"
  syntax: "public VirtualNetworkPeeringInner()"
methods:
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowForwardedTraffic()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowForwardedTraffic()"
  name: "allowForwardedTraffic()"
  nameWithType: "VirtualNetworkPeeringInner.allowForwardedTraffic()"
  summary: "Get the allowForwardedTraffic property: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
  syntax: "public Boolean allowForwardedTraffic()"
  returns:
    description: "the allowForwardedTraffic value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowGatewayTransit()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowGatewayTransit()"
  name: "allowGatewayTransit()"
  nameWithType: "VirtualNetworkPeeringInner.allowGatewayTransit()"
  summary: "Get the allowGatewayTransit property: If gateway links can be used in remote virtual networking to link to this virtual network."
  syntax: "public Boolean allowGatewayTransit()"
  returns:
    description: "the allowGatewayTransit value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowVirtualNetworkAccess()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.allowVirtualNetworkAccess()"
  name: "allowVirtualNetworkAccess()"
  nameWithType: "VirtualNetworkPeeringInner.allowVirtualNetworkAccess()"
  summary: "Get the allowVirtualNetworkAccess property: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
  syntax: "public Boolean allowVirtualNetworkAccess()"
  returns:
    description: "the allowVirtualNetworkAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksAddressSpace()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksAddressSpace()"
  name: "databricksAddressSpace()"
  nameWithType: "VirtualNetworkPeeringInner.databricksAddressSpace()"
  summary: "Get the databricksAddressSpace property: The reference to the databricks virtual network address space."
  syntax: "public AddressSpace databricksAddressSpace()"
  returns:
    description: "the databricksAddressSpace value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksVirtualNetwork()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.databricksVirtualNetwork()"
  name: "databricksVirtualNetwork()"
  nameWithType: "VirtualNetworkPeeringInner.databricksVirtualNetwork()"
  summary: "Get the databricksVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  syntax: "public VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork()"
  returns:
    description: "the databricksVirtualNetwork value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.peeringState()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.peeringState()"
  name: "peeringState()"
  nameWithType: "VirtualNetworkPeeringInner.peeringState()"
  summary: "Get the peeringState property: The status of the virtual network peering."
  syntax: "public PeeringState peeringState()"
  returns:
    description: "the peeringState value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.PeeringState?alt=com.azure.resourcemanager.databricks.models.PeeringState&text=PeeringState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.provisioningState()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "VirtualNetworkPeeringInner.provisioningState()"
  summary: "Get the provisioningState property: The provisioning state of the virtual network peering resource."
  syntax: "public PeeringProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.PeeringProvisioningState?alt=com.azure.resourcemanager.databricks.models.PeeringProvisioningState&text=PeeringProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteAddressSpace()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteAddressSpace()"
  name: "remoteAddressSpace()"
  nameWithType: "VirtualNetworkPeeringInner.remoteAddressSpace()"
  summary: "Get the remoteAddressSpace property: The reference to the remote virtual network address space."
  syntax: "public AddressSpace remoteAddressSpace()"
  returns:
    description: "the remoteAddressSpace value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteVirtualNetwork()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.remoteVirtualNetwork()"
  name: "remoteVirtualNetwork()"
  nameWithType: "VirtualNetworkPeeringInner.remoteVirtualNetwork()"
  summary: "Get the remoteVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  syntax: "public VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork()"
  returns:
    description: "the remoteVirtualNetwork value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.useRemoteGateways()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.useRemoteGateways()"
  name: "useRemoteGateways()"
  nameWithType: "VirtualNetworkPeeringInner.useRemoteGateways()"
  summary: "Get the useRemoteGateways property: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
  syntax: "public Boolean useRemoteGateways()"
  returns:
    description: "the useRemoteGateways value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.validate()"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.validate()"
  name: "validate()"
  nameWithType: "VirtualNetworkPeeringInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowForwardedTraffic(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  name: "withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  nameWithType: "VirtualNetworkPeeringInner.withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  summary: "Set the allowForwardedTraffic property: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
  parameters:
  - description: "the allowForwardedTraffic value to set."
    name: "allowForwardedTraffic"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withAllowForwardedTraffic(Boolean allowForwardedTraffic)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowGatewayTransit(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowGatewayTransit(Boolean allowGatewayTransit)"
  name: "withAllowGatewayTransit(Boolean allowGatewayTransit)"
  nameWithType: "VirtualNetworkPeeringInner.withAllowGatewayTransit(Boolean allowGatewayTransit)"
  summary: "Set the allowGatewayTransit property: If gateway links can be used in remote virtual networking to link to this virtual network."
  parameters:
  - description: "the allowGatewayTransit value to set."
    name: "allowGatewayTransit"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withAllowGatewayTransit(Boolean allowGatewayTransit)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  name: "withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  nameWithType: "VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  summary: "Set the allowVirtualNetworkAccess property: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
  parameters:
  - description: "the allowVirtualNetworkAccess value to set."
    name: "allowVirtualNetworkAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksAddressSpace(com.azure.resourcemanager.databricks.models.AddressSpace)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksAddressSpace(AddressSpace databricksAddressSpace)"
  name: "withDatabricksAddressSpace(AddressSpace databricksAddressSpace)"
  nameWithType: "VirtualNetworkPeeringInner.withDatabricksAddressSpace(AddressSpace databricksAddressSpace)"
  summary: "Set the databricksAddressSpace property: The reference to the databricks virtual network address space."
  parameters:
  - description: "the databricksAddressSpace value to set."
    name: "databricksAddressSpace"
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withDatabricksAddressSpace(AddressSpace databricksAddressSpace)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksVirtualNetwork(com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withDatabricksVirtualNetwork(VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork)"
  name: "withDatabricksVirtualNetwork(VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork)"
  nameWithType: "VirtualNetworkPeeringInner.withDatabricksVirtualNetwork(VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork)"
  summary: "Set the databricksVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  parameters:
  - description: "the databricksVirtualNetwork value to set."
    name: "databricksVirtualNetwork"
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withDatabricksVirtualNetwork(VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteAddressSpace(com.azure.resourcemanager.databricks.models.AddressSpace)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteAddressSpace(AddressSpace remoteAddressSpace)"
  name: "withRemoteAddressSpace(AddressSpace remoteAddressSpace)"
  nameWithType: "VirtualNetworkPeeringInner.withRemoteAddressSpace(AddressSpace remoteAddressSpace)"
  summary: "Set the remoteAddressSpace property: The reference to the remote virtual network address space."
  parameters:
  - description: "the remoteAddressSpace value to set."
    name: "remoteAddressSpace"
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withRemoteAddressSpace(AddressSpace remoteAddressSpace)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteVirtualNetwork(com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withRemoteVirtualNetwork(VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork)"
  name: "withRemoteVirtualNetwork(VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork)"
  nameWithType: "VirtualNetworkPeeringInner.withRemoteVirtualNetwork(VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork)"
  summary: "Set the remoteVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  parameters:
  - description: "the remoteVirtualNetwork value to set."
    name: "remoteVirtualNetwork"
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withRemoteVirtualNetwork(VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withUseRemoteGateways(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner.withUseRemoteGateways(Boolean useRemoteGateways)"
  name: "withUseRemoteGateways(Boolean useRemoteGateways)"
  nameWithType: "VirtualNetworkPeeringInner.withUseRemoteGateways(Boolean useRemoteGateways)"
  summary: "Set the useRemoteGateways property: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
  parameters:
  - description: "the useRemoteGateways value to set."
    name: "useRemoteGateways"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringInner withUseRemoteGateways(Boolean useRemoteGateways)"
  returns:
    description: "the VirtualNetworkPeeringInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.databricks.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.2
