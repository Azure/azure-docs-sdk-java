### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager"
name: "RegistrationStatusManager"
nameWithType: "RegistrationStatusManager"
summary: "Registration Status Manager"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RegistrationStatusManager"
methods:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createEnrollmentGroupQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  name: "createEnrollmentGroupQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  nameWithType: "RegistrationStatusManager.createEnrollmentGroupQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  summary: "Create a new registration status query for enrollment<wbr>Group."
  parameters:
  - description: "is a <code>String</code> with the SQL query specification. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "is a <code>String</code> with the enrollmentGroupId of the enrollmentGroup to delete. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createEnrollmentGroupQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  desc: "Create a new registration status query for enrollmentGroup."
  returns:
    description: "A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  name: "createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  nameWithType: "RegistrationStatusManager.createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  summary: "Create a new instance of the Registration<wbr>Status<wbr>Manager using the provided connection string and https as the transport protocol."
  modifiers:
  - "static"
  parameters:
  - description: "is the class that cares the Http connection."
    name: "contractApiHttp"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp?alt=com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp&text=ContractApiHttp\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RegistrationStatusManager createFromContractApiHttp(ContractApiHttp contractApiHttp)"
  desc: "Create a new instance of the RegistrationStatusManager using the provided connection string and https as the transport protocol."
  returns:
    description: "The <code>RegistrationStatusManager</code> with the new instance of this class."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager?alt=com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager&text=RegistrationStatusManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.delete(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.delete(DeviceRegistrationState DeviceRegistrationState)"
  name: "delete(DeviceRegistrationState DeviceRegistrationState)"
  nameWithType: "RegistrationStatusManager.delete(DeviceRegistrationState DeviceRegistrationState)"
  summary: "Delete registration status."
  parameters:
  - description: "is a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> that describes the registration status\n                                 that will be deleted. It cannot be <code>null</code>."
    name: "DeviceRegistrationState"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void delete(DeviceRegistrationState DeviceRegistrationState)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete registration status."
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.delete(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.delete(String id, String eTag)"
  name: "delete(String id, String eTag)"
  nameWithType: "RegistrationStatusManager.delete(String id, String eTag)"
  summary: "Delete registration status."
  parameters:
  - description: "is a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> with the identification of the registration status to delete. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "is a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> with the eTag of the enrollment to delete. It can be <code>null</code> or empty (ignored)."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void delete(String id, String eTag)"
  exceptions:
  - description: "if the provided id is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete registration status."
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.get(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.RegistrationStatusManager.get(String id)"
  name: "get(String id)"
  nameWithType: "RegistrationStatusManager.get(String id)"
  summary: "Get device registration status information."
  parameters:
  - description: "the <code>String</code> that identifies the registration status. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DeviceRegistrationState get(String id)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get device registration status information."
  returns:
    description: "An <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> with the registration status information."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Registration Status Manager\n\nThis is the inner class that implements the Registration Status APIs.\n\nFor the exposed API, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient\"></xref>."
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
