### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert"
name: "listAnomaliesForAlert"
nameWithType: "MetricsAdvisorAsyncClient.listAnomaliesForAlert"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  name: "listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  nameWithType: "MetricsAdvisorAsyncClient.listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  summary: "Fetch the anomalies in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n \n metricsAdvisorAsyncClient.listAnomaliesForAlert(\n     alertConfigurationId,\n     alertId)\n     .subscribe(anomaly -> {\n         System.out.printf(\"Data Feed Metric Id: %s%n\", anomaly.getMetricId());\n         System.out.printf(\"Detection Configuration Id: %s%n\", anomaly.getDetectionConfigurationId());\n         System.out.printf(\"DataPoint Anomaly Created Time: %s%n\", anomaly.getCreatedTime());\n         System.out.printf(\"DataPoint Anomaly Modified Time: %s%n\", anomaly.getModifiedTime());\n         System.out.printf(\"DataPoint Anomaly AnomalySeverity: %s%n\", anomaly.getSeverity());\n         System.out.printf(\"DataPoint Anomaly Status: %s%n\", anomaly.getStatus());\n         System.out.printf(\"Series Key:\");\n         DimensionKey seriesKey = anomaly.getSeriesKey();\n         for (Map.Entry<String, String> dimension : seriesKey.asMap().entrySet()) {\n             System.out.printf(\"DimensionName: %s DimensionValue:%s%n\",\n                 dimension.getKey(), dimension.getValue());\n         }\n     });\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<DataPointAnomaly> listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  returns:
    description: "The anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataPointAnomaly?alt=com.azure.ai.metricsadvisor.models.DataPointAnomaly&text=DataPointAnomaly\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options)"
  name: "listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options)"
  nameWithType: "MetricsAdvisorAsyncClient.listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options)"
  summary: "Fetch the anomalies in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n final ListAnomaliesAlertedOptions options = new ListAnomaliesAlertedOptions()\n     .setTop(10);\n metricsAdvisorAsyncClient.listAnomaliesForAlert(\n     alertConfigurationId,\n     alertId,\n     options)\n     .subscribe(anomaly -> {\n         System.out.printf(\"Data Feed Metric Id: %s%n\", anomaly.getMetricId());\n         System.out.printf(\"Detection Configuration Id: %s%n\", anomaly.getDetectionConfigurationId());\n         System.out.printf(\"DataPoint Anomaly Created Time: %s%n\", anomaly.getCreatedTime());\n         System.out.printf(\"DataPoint Anomaly Modified Time: %s%n\", anomaly.getModifiedTime());\n         System.out.printf(\"DataPoint Anomaly AnomalySeverity: %s%n\", anomaly.getSeverity());\n         System.out.printf(\"DataPoint Anomaly Status: %s%n\", anomaly.getStatus());\n         System.out.printf(\"Series Key:\");\n         System.out.println(anomaly.getSeriesKey().asMap());\n     });\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions?alt=com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions&text=ListAnomaliesAlertedOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<DataPointAnomaly> listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options)"
  returns:
    description: "The anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataPointAnomaly?alt=com.azure.ai.metricsadvisor.models.DataPointAnomaly&text=DataPointAnomaly\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
