### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  id: ArrayListMultimap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create()
  - com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(int,int)
  - com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.trimToSize()
  langs:
  - java
  name: ArrayListMultimap<K,V>
  nameWithType: ArrayListMultimap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Implementation of `Multimap` that uses an `ArrayList` to store the values for a given key. A <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">HashMap</xref> associates each key with an <xref uid="java.util.ArrayList" data-throw-if-not-resolved="false">ArrayList</xref> of values.


    When iterating through the collections supplied by this class, the ordering of values for a given key agrees with the order in which the values were added.


    This multimap allows duplicate key-value pairs. After adding a new key-value pair equal to an existing key-value pair, the `ArrayListMultimap` will contain entries for both the new value and the old value.


    Keys and values may be null. All optional multimap methods are supported, and all returned views are modifiable.


    The lists returned by <xref uid="com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.get" data-throw-if-not-resolved="false">#get</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.removeAll" data-throw-if-not-resolved="false">#removeAll</xref>, and <xref uid="com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.replaceValues" data-throw-if-not-resolved="false">#replaceValues</xref> all implement <xref uid="java.util.RandomAccess" data-throw-if-not-resolved="false">java.util.RandomAccess</xref>.


    This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly. To allow concurrent update operations, wrap your multimap with a call to <xref uid="com.azure.cosmos.implementation.guava25.collect.Multimaps.synchronizedListMultimap" data-throw-if-not-resolved="false">Multimaps#synchronizedListMultimap</xref>.


    See the Guava User Guide article on [ `Multimap`][_Multimap].



    [_Multimap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap
  syntax:
    content: public final class ArrayListMultimap<K,V> extends ArrayListMultimapGwtSerializationDependencies<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap
  - com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.asMap()
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.get(K)
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.removeAll(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.entries()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create()
  id: <K,V>create()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: <K,V>create()
  nameWithType: ArrayListMultimap<K,V>.<K,V>create()
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.<K,V>create()
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Creates a new, empty `ArrayListMultimap` with the default initial capacities.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys().arrayListValues().build()`.
  syntax:
    content: public static ArrayListMultimap<K,V> <K,V>create()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  id: <K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: <K,V>create(Multimap<? extends K,? extends V> multimap)
  nameWithType: ArrayListMultimap<K,V>.<K,V>create(Multimap<? extends K,? extends V> multimap)
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.<K,V>create(Multimap<? extends K,? extends V> multimap)
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Constructs an `ArrayListMultimap` with the same mappings as the specified multimap.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys().arrayListValues().build(multimap)`.
  syntax:
    content: public static ArrayListMultimap<K,V> <K,V>create(Multimap<? extends K,? extends V> multimap)
    parameters:
    - id: multimap
      type: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
      description: the multimap whose contents are copied to this multimap
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(int,int)
  id: <K,V>create(int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: <K,V>create(int expectedKeys, int expectedValuesPerKey)
  nameWithType: ArrayListMultimap<K,V>.<K,V>create(int expectedKeys, int expectedValuesPerKey)
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.<K,V>create(int expectedKeys, int expectedValuesPerKey)
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Constructs an empty `ArrayListMultimap` with enough capacity to hold the specified numbers of keys and values without resizing.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys(expectedKeys).arrayListValues(expectedValuesPerKey).build()`.
  syntax:
    content: public static ArrayListMultimap<K,V> <K,V>create(int expectedKeys, int expectedValuesPerKey)
    parameters:
    - id: expectedKeys
      type: int
      description: the expected number of distinct keys
    - id: expectedValuesPerKey
      type: int
      description: the expected average number of values per key
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap()
  id: ArrayListMultimap()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: ArrayListMultimap()
  nameWithType: ArrayListMultimap<K,V>.ArrayListMultimap()
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.ArrayListMultimap()
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private ArrayListMultimap()
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  id: ArrayListMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: ArrayListMultimap(Multimap<? extends K,? extends V> multimap)
  nameWithType: ArrayListMultimap<K,V>.ArrayListMultimap(Multimap<? extends K,? extends V> multimap)
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.ArrayListMultimap(Multimap<? extends K,? extends V> multimap)
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private ArrayListMultimap(Multimap<? extends K,? extends V> multimap)
    parameters:
    - id: multimap
      type: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap(int,int)
  id: ArrayListMultimap(int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: ArrayListMultimap(int expectedKeys, int expectedValuesPerKey)
  nameWithType: ArrayListMultimap<K,V>.ArrayListMultimap(int expectedKeys, int expectedValuesPerKey)
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.ArrayListMultimap(int expectedKeys, int expectedValuesPerKey)
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private ArrayListMultimap(int expectedKeys, int expectedValuesPerKey)
    parameters:
    - id: expectedKeys
      type: int
    - id: expectedValuesPerKey
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.trimToSize()
  id: trimToSize()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  langs:
  - java
  name: trimToSize()
  nameWithType: ArrayListMultimap<K,V>.trimToSize()
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.trimToSize()
  overload: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.trimToSize*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Reduces the memory used by this `ArrayListMultimap`, if feasible.
  syntax:
    content: public void trimToSize()
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.ArrayListMultimap*
  name: ArrayListMultimap
  nameWithType: ArrayListMultimap<K,V>.ArrayListMultimap
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.ArrayListMultimap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multimap
    name: Multimap
    fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
    name: ArrayListMultimap
    fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.create*
  name: <K,V>create
  nameWithType: ArrayListMultimap<K,V>.<K,V>create
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.<K,V>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.trimToSize*
  name: trimToSize
  nameWithType: ArrayListMultimap<K,V>.trimToSize
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>.trimToSize
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies<K,V>
  name: ArrayListMultimapGwtSerializationDependencies<K,V>
  nameWithType: ArrayListMultimapGwtSerializationDependencies<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  name: AbstractMapBasedMultimap.forEach(BiConsumer<? super K,? super V>)
  nameWithType: AbstractMapBasedMultimap.forEach(BiConsumer<? super K,? super V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
  name: AbstractMultimap.isEmpty()
  nameWithType: AbstractMultimap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
  name: AbstractMultimap.containsValue(Object)
  nameWithType: AbstractMultimap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
  name: AbstractMapBasedMultimap.clear()
  nameWithType: AbstractMapBasedMultimap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.asMap()
  name: AbstractListMultimap.asMap()
  nameWithType: AbstractListMultimap.asMap()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.asMap()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
  name: AbstractMultimap.toString()
  nameWithType: AbstractMultimap.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
  name: AbstractMultimap.putAll(K,Iterable<? extends V>)
  nameWithType: AbstractMultimap.putAll(K,Iterable<? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
  name: AbstractListMultimap.replaceValues(K,Iterable<? extends V>)
  nameWithType: AbstractListMultimap.replaceValues(K,Iterable<? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
  name: AbstractMultimap.remove(Object,Object)
  nameWithType: AbstractMultimap.remove(Object,Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
  name: AbstractMultimap.keySet()
  nameWithType: AbstractMultimap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
  name: AbstractMapBasedMultimap.size()
  nameWithType: AbstractMapBasedMultimap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.put(K,V)
  name: AbstractListMultimap.put(K,V)
  nameWithType: AbstractListMultimap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.put(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
  name: AbstractMultimap.keys()
  nameWithType: AbstractMultimap.keys()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
  name: AbstractMultimap.hashCode()
  nameWithType: AbstractMultimap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.removeAll(java.lang.Object)
  name: AbstractListMultimap.removeAll(Object)
  nameWithType: AbstractListMultimap.removeAll(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.removeAll(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
  name: AbstractMapBasedMultimap.values()
  nameWithType: AbstractMapBasedMultimap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.get(K)
  name: AbstractListMultimap.get(K)
  nameWithType: AbstractListMultimap.get(K)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.get(K)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
  name: AbstractMapBasedMultimap.containsKey(Object)
  nameWithType: AbstractMapBasedMultimap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  name: AbstractMultimap.putAll(Multimap<? extends K,? extends V>)
  nameWithType: AbstractMultimap.putAll(Multimap<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
  name: AbstractMultimap.containsEntry(Object,Object)
  nameWithType: AbstractMultimap.containsEntry(Object,Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.equals(java.lang.Object)
  name: AbstractListMultimap.equals(Object)
  nameWithType: AbstractListMultimap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.entries()
  name: AbstractMapBasedMultimap.entries()
  nameWithType: AbstractMapBasedMultimap.entries()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.entries()
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap
  name: Multimap
  nameWithType: Multimap
  fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies
  name: ArrayListMultimapGwtSerializationDependencies
  nameWithType: ArrayListMultimapGwtSerializationDependencies
  fullName: com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies
- uid: '? super K,? super V>)'
  name: '? super K,? super V>)'
  nameWithType: '? super K,? super V>)'
  fullName: '? super K,? super V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer
  name: AbstractMapBasedMultimap.forEach(BiConsumer
  nameWithType: AbstractMapBasedMultimap.forEach(BiConsumer
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer
- uid: '? extends V>)'
  name: '? extends V>)'
  nameWithType: '? extends V>)'
  fullName: '? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable
  name: AbstractMultimap.putAll(K,Iterable
  nameWithType: AbstractMultimap.putAll(K,Iterable
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable
  name: AbstractListMultimap.replaceValues(K,Iterable
  nameWithType: AbstractListMultimap.replaceValues(K,Iterable
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap
  name: AbstractMultimap.putAll(Multimap
  nameWithType: AbstractMultimap.putAll(Multimap
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
