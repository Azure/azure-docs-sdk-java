### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap"
fullName: "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap<K,V>"
name: "ArrayListMultimap<K,V>"
nameWithType: "ArrayListMultimap<K,V>"
summary: "Implementation of `Multimap` that uses an `ArrayList` to store the values for a given key. A <xref uid=\"java.util.HashMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HashMap\"></xref> associates each key with an <xref uid=\"java.util.ArrayList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayList\"></xref> of values.\n\nWhen iterating through the collections supplied by this class, the ordering of values for a given key agrees with the order in which the values were added.\n\nThis multimap allows duplicate key-value pairs. After adding a new key-value pair equal to an existing key-value pair, the `ArrayListMultimap` will contain entries for both the new value and the old value.\n\nKeys and values may be null. All optional multimap methods are supported, and all returned views are modifiable.\n\nThe lists returned by <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.get\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#get\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.removeAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#removeAll\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.replaceValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#replaceValues\"></xref> all implement <xref uid=\"java.util.RandomAccess\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.RandomAccess\"></xref>.\n\nThis class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly. To allow concurrent update operations, wrap your multimap with a call to <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimaps.synchronizedListMultimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimaps#synchronizedListMultimap\"></xref>.\n\nSee the Guava User Guide article on [ `Multimap`][_Multimap].\n\n\n[_Multimap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractMultimap\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ArrayListMultimapGwtSerializationDependencies\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.asMap()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.get(K)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.put(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.removeAll(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractListMultimap.replaceValues(K,java.lang.Iterable<? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.entries()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ArrayListMultimap<K,V> extends ArrayListMultimapGwtSerializationDependencies<K,V>"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create()"
- "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.<K,V>create(int,int)"
- "com.azure.cosmos.implementation.guava25.collect.ArrayListMultimap.trimToSize()"
type: "class"
typeParameters:
- name: "K"
- name: "V"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
