### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges*"
fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges"
name: "listPageRanges"
nameWithType: "PageBlobClient.listPageRanges"
members:
- uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges(com.azure.storage.blob.models.BlobRange)"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges(BlobRange blobRange)"
  name: "listPageRanges(BlobRange blobRange)"
  nameWithType: "PageBlobClient.listPageRanges(BlobRange blobRange)"
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "blobRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PageRangeItem> listPageRanges(BlobRange blobRange)"
  desc: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n String prevSnapshot = \"previous snapshot\";\n PagedIterable<PageRangeItem> iterable = client.listPageRanges(blobRange);\n\n for (PageRangeItem item : iterable) {\n     System.out.printf(\"Offset: %s, Length: %s, isClear: %s%n\", item.getRange().getOffset(),\n         item.getRange().getLength(), item.isClear());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  returns:
    description: "A reactive response containing the information of the cleared pages."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageRangeItem?alt=com.azure.storage.blob.models.PageRangeItem&text=PageRangeItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges(com.azure.storage.blob.options.ListPageRangesOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient.listPageRanges(ListPageRangesOptions options, Duration timeout, Context context)"
  name: "listPageRanges(ListPageRangesOptions options, Duration timeout, Context context)"
  nameWithType: "PageBlobClient.listPageRanges(ListPageRangesOptions options, Duration timeout, Context context)"
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.ListPageRangesOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListPageRangesOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.ListPageRangesOptions?alt=com.azure.storage.blob.options.ListPageRangesOptions&text=ListPageRangesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PageRangeItem> listPageRanges(ListPageRangesOptions options, Duration timeout, Context context)"
  desc: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nListPageRangesOptions options = new ListPageRangesOptions(new BlobRange(offset))\n     .setRequestConditions(new BlobRequestConditions().setLeaseId(leaseId))\n     .setMaxResultsPerPage(1000);\n\n Context context = new Context(key, value);\n\n PagedIterable<PageRangeItem> iter = client\n     .listPageRanges(options, timeout, context);\n\n System.out.println(\"Valid Page Ranges are:\");\n for (PageRangeItem item : iter) {\n     System.out.printf(\"Offset: %s, Length: %s, isClear: %s%n\", item.getRange().getOffset(),\n         item.getRange().getLength(), item.isClear());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  returns:
    description: "A reactive response emitting all the page ranges."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageRangeItem?alt=com.azure.storage.blob.models.PageRangeItem&text=PageRangeItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
