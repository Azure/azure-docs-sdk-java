### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.getIndexer*"
fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.getIndexer"
name: "getIndexer"
nameWithType: "SearchIndexerAsyncClient.getIndexer"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.getIndexer(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.getIndexer(String indexerName)"
  name: "getIndexer(String indexerName)"
  nameWithType: "SearchIndexerAsyncClient.getIndexer(String indexerName)"
  summary: "Retrieves an indexer definition.\n\n**Code Sample**\n\nGet search indexer with name \"searchIndexer\".\n\n```java\nsearchIndexerAsyncClient.getIndexer(\"searchIndexer\")\n     .subscribe(indexerFromService ->\n         System.out.printf(\"The indexer name is %s. The etag of indexer is %s.%n\", indexerFromService.getName(),\n             indexerFromService.getETag()));\n```"
  parameters:
  - description: "the name of the indexer to retrieve"
    name: "indexerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SearchIndexer> getIndexer(String indexerName)"
  returns:
    description: "the indexer."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
