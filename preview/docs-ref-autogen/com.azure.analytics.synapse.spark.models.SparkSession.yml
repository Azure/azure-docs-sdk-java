### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkSession"
fullName: "com.azure.analytics.synapse.spark.models.SparkSession"
name: "SparkSession"
nameWithType: "SparkSession"
summary: "The SparkSession model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkSession"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.SparkSession()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.SparkSession()"
  name: "SparkSession()"
  nameWithType: "SparkSession.SparkSession()"
  syntax: "public SparkSession()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getAppId()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getAppId()"
  name: "getAppId()"
  nameWithType: "SparkSession.getAppId()"
  summary: "Get the appId property: The appId property."
  syntax: "public String getAppId()"
  returns:
    description: "the appId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getAppInfo()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getAppInfo()"
  name: "getAppInfo()"
  nameWithType: "SparkSession.getAppInfo()"
  summary: "Get the appInfo property: Dictionary of <string>."
  syntax: "public Map<String,String> getAppInfo()"
  returns:
    description: "the appInfo value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getArtifactId()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getArtifactId()"
  name: "getArtifactId()"
  nameWithType: "SparkSession.getArtifactId()"
  summary: "Get the artifactId property: The artifactId property."
  syntax: "public String getArtifactId()"
  returns:
    description: "the artifactId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getErrors()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getErrors()"
  name: "getErrors()"
  nameWithType: "SparkSession.getErrors()"
  summary: "Get the errors property: The errorInfo property."
  syntax: "public List<SparkServiceError> getErrors()"
  returns:
    description: "the errors value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkServiceError?alt=com.azure.analytics.synapse.spark.models.SparkServiceError&text=SparkServiceError\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getId()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getId()"
  name: "getId()"
  nameWithType: "SparkSession.getId()"
  summary: "Get the id property: The id property."
  syntax: "public int getId()"
  returns:
    description: "the id value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getJobType()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getJobType()"
  name: "getJobType()"
  nameWithType: "SparkSession.getJobType()"
  summary: "Get the jobType property: The job type."
  syntax: "public SparkJobType getJobType()"
  returns:
    description: "the jobType value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkJobType?alt=com.azure.analytics.synapse.spark.models.SparkJobType&text=SparkJobType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getLivyInfo()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getLivyInfo()"
  name: "getLivyInfo()"
  nameWithType: "SparkSession.getLivyInfo()"
  summary: "Get the livyInfo property: The livyInfo property."
  syntax: "public SparkSessionState getLivyInfo()"
  returns:
    description: "the livyInfo value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getLogLines()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getLogLines()"
  name: "getLogLines()"
  nameWithType: "SparkSession.getLogLines()"
  summary: "Get the logLines property: The log property."
  syntax: "public List<String> getLogLines()"
  returns:
    description: "the logLines value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getName()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getName()"
  name: "getName()"
  nameWithType: "SparkSession.getName()"
  summary: "Get the name property: The name property."
  syntax: "public String getName()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getPlugin()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getPlugin()"
  name: "getPlugin()"
  nameWithType: "SparkSession.getPlugin()"
  summary: "Get the plugin property: The pluginInfo property."
  syntax: "public SparkServicePlugin getPlugin()"
  returns:
    description: "the plugin value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkServicePlugin?alt=com.azure.analytics.synapse.spark.models.SparkServicePlugin&text=SparkServicePlugin\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getResult()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getResult()"
  name: "getResult()"
  nameWithType: "SparkSession.getResult()"
  summary: "Get the result property: The result property."
  syntax: "public SparkSessionResultType getResult()"
  returns:
    description: "the result value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionResultType?alt=com.azure.analytics.synapse.spark.models.SparkSessionResultType&text=SparkSessionResultType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getScheduler()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getScheduler()"
  name: "getScheduler()"
  nameWithType: "SparkSession.getScheduler()"
  summary: "Get the scheduler property: The schedulerInfo property."
  syntax: "public SparkScheduler getScheduler()"
  returns:
    description: "the scheduler value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getSparkPoolName()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getSparkPoolName()"
  name: "getSparkPoolName()"
  nameWithType: "SparkSession.getSparkPoolName()"
  summary: "Get the sparkPoolName property: The sparkPoolName property."
  syntax: "public String getSparkPoolName()"
  returns:
    description: "the sparkPoolName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getState()"
  name: "getState()"
  nameWithType: "SparkSession.getState()"
  summary: "Get the state property: The session state."
  syntax: "public LivyStates getState()"
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.LivyStates?alt=com.azure.analytics.synapse.spark.models.LivyStates&text=LivyStates\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getSubmitterId()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getSubmitterId()"
  name: "getSubmitterId()"
  nameWithType: "SparkSession.getSubmitterId()"
  summary: "Get the submitterId property: The submitterId property."
  syntax: "public String getSubmitterId()"
  returns:
    description: "the submitterId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getSubmitterName()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getSubmitterName()"
  name: "getSubmitterName()"
  nameWithType: "SparkSession.getSubmitterName()"
  summary: "Get the submitterName property: The submitterName property."
  syntax: "public String getSubmitterName()"
  returns:
    description: "the submitterName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getTags()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getTags()"
  name: "getTags()"
  nameWithType: "SparkSession.getTags()"
  summary: "Get the tags property: Dictionary of <string>."
  syntax: "public Map<String,String> getTags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.getWorkspaceName()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.getWorkspaceName()"
  name: "getWorkspaceName()"
  nameWithType: "SparkSession.getWorkspaceName()"
  summary: "Get the workspaceName property: The workspaceName property."
  syntax: "public String getWorkspaceName()"
  returns:
    description: "the workspaceName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setAppId(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setAppId(String appId)"
  name: "setAppId(String appId)"
  nameWithType: "SparkSession.setAppId(String appId)"
  summary: "Set the appId property: The appId property."
  parameters:
  - description: "the appId value to set."
    name: "appId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setAppId(String appId)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setAppInfo(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setAppInfo(Map<String,String> appInfo)"
  name: "setAppInfo(Map<String,String> appInfo)"
  nameWithType: "SparkSession.setAppInfo(Map<String,String> appInfo)"
  summary: "Set the appInfo property: Dictionary of <string>."
  parameters:
  - description: "the appInfo value to set."
    name: "appInfo"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkSession setAppInfo(Map<String,String> appInfo)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setArtifactId(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setArtifactId(String artifactId)"
  name: "setArtifactId(String artifactId)"
  nameWithType: "SparkSession.setArtifactId(String artifactId)"
  summary: "Set the artifactId property: The artifactId property."
  parameters:
  - description: "the artifactId value to set."
    name: "artifactId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setArtifactId(String artifactId)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setErrors(java.util.List<com.azure.analytics.synapse.spark.models.SparkServiceError>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setErrors(List<SparkServiceError> errors)"
  name: "setErrors(List<SparkServiceError> errors)"
  nameWithType: "SparkSession.setErrors(List<SparkServiceError> errors)"
  summary: "Set the errors property: The errorInfo property."
  parameters:
  - description: "the errors value to set."
    name: "errors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkServiceError?alt=com.azure.analytics.synapse.spark.models.SparkServiceError&text=SparkServiceError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkSession setErrors(List<SparkServiceError> errors)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setId(int)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setId(int id)"
  name: "setId(int id)"
  nameWithType: "SparkSession.setId(int id)"
  summary: "Set the id property: The id property."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setId(int id)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setJobType(com.azure.analytics.synapse.spark.models.SparkJobType)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setJobType(SparkJobType jobType)"
  name: "setJobType(SparkJobType jobType)"
  nameWithType: "SparkSession.setJobType(SparkJobType jobType)"
  summary: "Set the jobType property: The job type."
  parameters:
  - description: "the jobType value to set."
    name: "jobType"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkJobType?alt=com.azure.analytics.synapse.spark.models.SparkJobType&text=SparkJobType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setJobType(SparkJobType jobType)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setLivyInfo(com.azure.analytics.synapse.spark.models.SparkSessionState)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setLivyInfo(SparkSessionState livyInfo)"
  name: "setLivyInfo(SparkSessionState livyInfo)"
  nameWithType: "SparkSession.setLivyInfo(SparkSessionState livyInfo)"
  summary: "Set the livyInfo property: The livyInfo property."
  parameters:
  - description: "the livyInfo value to set."
    name: "livyInfo"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setLivyInfo(SparkSessionState livyInfo)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setLogLines(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setLogLines(List<String> logLines)"
  name: "setLogLines(List<String> logLines)"
  nameWithType: "SparkSession.setLogLines(List<String> logLines)"
  summary: "Set the logLines property: The log property."
  parameters:
  - description: "the logLines value to set."
    name: "logLines"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkSession setLogLines(List<String> logLines)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setName(String name)"
  name: "setName(String name)"
  nameWithType: "SparkSession.setName(String name)"
  summary: "Set the name property: The name property."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setName(String name)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setPlugin(com.azure.analytics.synapse.spark.models.SparkServicePlugin)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setPlugin(SparkServicePlugin plugin)"
  name: "setPlugin(SparkServicePlugin plugin)"
  nameWithType: "SparkSession.setPlugin(SparkServicePlugin plugin)"
  summary: "Set the plugin property: The pluginInfo property."
  parameters:
  - description: "the plugin value to set."
    name: "plugin"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkServicePlugin?alt=com.azure.analytics.synapse.spark.models.SparkServicePlugin&text=SparkServicePlugin\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setPlugin(SparkServicePlugin plugin)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setResult(com.azure.analytics.synapse.spark.models.SparkSessionResultType)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setResult(SparkSessionResultType result)"
  name: "setResult(SparkSessionResultType result)"
  nameWithType: "SparkSession.setResult(SparkSessionResultType result)"
  summary: "Set the result property: The result property."
  parameters:
  - description: "the result value to set."
    name: "result"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionResultType?alt=com.azure.analytics.synapse.spark.models.SparkSessionResultType&text=SparkSessionResultType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setResult(SparkSessionResultType result)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setScheduler(com.azure.analytics.synapse.spark.models.SparkScheduler)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setScheduler(SparkScheduler scheduler)"
  name: "setScheduler(SparkScheduler scheduler)"
  nameWithType: "SparkSession.setScheduler(SparkScheduler scheduler)"
  summary: "Set the scheduler property: The schedulerInfo property."
  parameters:
  - description: "the scheduler value to set."
    name: "scheduler"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setScheduler(SparkScheduler scheduler)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setSparkPoolName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setSparkPoolName(String sparkPoolName)"
  name: "setSparkPoolName(String sparkPoolName)"
  nameWithType: "SparkSession.setSparkPoolName(String sparkPoolName)"
  summary: "Set the sparkPoolName property: The sparkPoolName property."
  parameters:
  - description: "the sparkPoolName value to set."
    name: "sparkPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setSparkPoolName(String sparkPoolName)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setState(com.azure.analytics.synapse.spark.models.LivyStates)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setState(LivyStates state)"
  name: "setState(LivyStates state)"
  nameWithType: "SparkSession.setState(LivyStates state)"
  summary: "Set the state property: The session state."
  parameters:
  - description: "the state value to set."
    name: "state"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.LivyStates?alt=com.azure.analytics.synapse.spark.models.LivyStates&text=LivyStates\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setState(LivyStates state)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setSubmitterId(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setSubmitterId(String submitterId)"
  name: "setSubmitterId(String submitterId)"
  nameWithType: "SparkSession.setSubmitterId(String submitterId)"
  summary: "Set the submitterId property: The submitterId property."
  parameters:
  - description: "the submitterId value to set."
    name: "submitterId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setSubmitterId(String submitterId)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setSubmitterName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setSubmitterName(String submitterName)"
  name: "setSubmitterName(String submitterName)"
  nameWithType: "SparkSession.setSubmitterName(String submitterName)"
  summary: "Set the submitterName property: The submitterName property."
  parameters:
  - description: "the submitterName value to set."
    name: "submitterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setSubmitterName(String submitterName)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "SparkSession.setTags(Map<String,String> tags)"
  summary: "Set the tags property: Dictionary of <string>."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkSession setTags(Map<String,String> tags)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSession.setWorkspaceName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSession.setWorkspaceName(String workspaceName)"
  name: "setWorkspaceName(String workspaceName)"
  nameWithType: "SparkSession.setWorkspaceName(String workspaceName)"
  summary: "Set the workspaceName property: The workspaceName property."
  parameters:
  - description: "the workspaceName value to set."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSession setWorkspaceName(String workspaceName)"
  returns:
    description: "the SparkSession object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
