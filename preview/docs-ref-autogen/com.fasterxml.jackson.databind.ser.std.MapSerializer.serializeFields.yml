### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields*"
fullName: "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields"
name: "serializeFields"
nameWithType: "MapSerializer.serializeFields"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  fullName: "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(Map<?,?> value, JsonGenerator gen, SerializerProvider provider)"
  name: "serializeFields(Map<?,?> value, JsonGenerator gen, SerializerProvider provider)"
  nameWithType: "MapSerializer.serializeFields(Map<?,?> value, JsonGenerator gen, SerializerProvider provider)"
  summary: "General-purpose serialization for contents, where we do not necessarily know the value serialization, but we do know that no value suppression is needed (which simplifies processing a bit)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;?,?&gt;"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serializeFields(Map<?,?> value, JsonGenerator gen, SerializerProvider provider)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
