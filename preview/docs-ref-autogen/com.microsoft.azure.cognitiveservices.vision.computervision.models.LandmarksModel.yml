### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel"
name: "LandmarksModel"
nameWithType: "LandmarksModel"
summary: "A landmark recognized in the image."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LandmarksModel"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.LandmarksModel()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.LandmarksModel()"
  name: "LandmarksModel()"
  nameWithType: "LandmarksModel.LandmarksModel()"
  syntax: "public LandmarksModel()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.confidence()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.confidence()"
  name: "confidence()"
  nameWithType: "LandmarksModel.confidence()"
  summary: "Get the confidence value."
  syntax: "public double confidence()"
  desc: "Get the confidence value."
  returns:
    description: "the confidence value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.name()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.name()"
  name: "name()"
  nameWithType: "LandmarksModel.name()"
  summary: "Get the name value."
  syntax: "public String name()"
  desc: "Get the name value."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.withConfidence(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.withConfidence(double confidence)"
  name: "withConfidence(double confidence)"
  nameWithType: "LandmarksModel.withConfidence(double confidence)"
  summary: "Set the confidence value."
  parameters:
  - description: "the confidence value to set"
    name: "confidence"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LandmarksModel withConfidence(double confidence)"
  desc: "Set the confidence value."
  returns:
    description: "the LandmarksModel object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel&text=LandmarksModel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.withName(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel.withName(String name)"
  name: "withName(String name)"
  nameWithType: "LandmarksModel.withName(String name)"
  summary: "Set the name value."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LandmarksModel withName(String name)"
  desc: "Set the name value."
  returns:
    description: "the LandmarksModel object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.LandmarksModel&text=LandmarksModel\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A landmark recognized in the image."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.9-beta
