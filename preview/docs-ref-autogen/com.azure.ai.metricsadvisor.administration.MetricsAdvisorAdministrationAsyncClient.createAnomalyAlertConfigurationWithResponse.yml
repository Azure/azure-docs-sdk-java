### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse"
name: "createAnomalyAlertConfigurationWithResponse"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse(com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  name: "createAnomalyAlertConfigurationWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  summary: "Create a configuration to trigger alert when anomalies are detected.\n\n**Code sample**\n\n```java\nString detectionConfigurationId1 = \"9ol48er30-6e6e-4391-b78f-b00dfee1e6f5\";\n String detectionConfigurationId2 = \"3e58er30-6e6e-4391-b78f-b00dfee1e6f5\";\n String hookId1 = \"5f48er30-6e6e-4391-b78f-b00dfee1e6f5\";\n String hookId2 = \"8i48er30-6e6e-4391-b78f-b00dfee1e6f5\";\n \n metricAdvisorAdministrationAsyncClient.createAnomalyAlertConfigurationWithResponse(\n     new AnomalyAlertConfiguration(\"My Alert config name\")\n         .setDescription(\"alert config description\")\n         .setMetricAlertConfigurations(Arrays.asList(\n             new MetricAnomalyAlertConfiguration(detectionConfigurationId1,\n                 MetricAnomalyAlertScope.forWholeSeries()),\n             new MetricAnomalyAlertConfiguration(detectionConfigurationId2,\n                 MetricAnomalyAlertScope.forWholeSeries())\n                 .setAlertConditions(new MetricAnomalyAlertConditions()\n                     .setSeverityCondition(new SeverityCondition().setMaxAlertSeverity(Severity.HIGH)))))\n         .setCrossMetricsOperator(MetricAnomalyAlertConfigurationsOperator.AND)\n         .setIdOfHooksToAlert(Arrays.asList(hookId1, hookId2)))\n     .subscribe(alertConfigurationResponse -> {\n         System.out.printf(\"Anomaly alert creation operation status: %s%n\",\n             alertConfigurationResponse.getStatusCode());\n         final AnomalyAlertConfiguration anomalyAlertConfiguration = alertConfigurationResponse.getValue();\n         System.out.printf(\"Anomaly alert configuration Id: %s%n\", anomalyAlertConfiguration.getId());\n         System.out.printf(\"Anomaly alert configuration description: %s%n\",\n             anomalyAlertConfiguration.getDescription());\n         System.out.printf(\"Anomaly alert configuration hook ids: %s%n\",\n             anomalyAlertConfiguration.getIdOfHooksToAlert());\n         System.out.printf(\"Anomaly alert configuration cross metrics operator: %s%n\",\n             anomalyAlertConfiguration.getCrossMetricsOperator().toString());\n     });\n```"
  parameters:
  - description: "The anomaly alerting configuration."
    name: "alertConfiguration"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration&text=AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AnomalyAlertConfiguration>> createAnomalyAlertConfigurationWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the created <xref uid=\"com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"false\">AnomalyAlertConfiguration</xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration&text=AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
