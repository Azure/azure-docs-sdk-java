### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findRenameByField*"
fullName: "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findRenameByField"
name: "findRenameByField"
nameWithType: "JacksonAnnotationIntrospector.findRenameByField"
members:
- uid: "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName)"
  fullName: "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findRenameByField(MapperConfig<?> config, AnnotatedField f, PropertyName implName)"
  name: "findRenameByField(MapperConfig<?> config, AnnotatedField f, PropertyName implName)"
  nameWithType: "JacksonAnnotationIntrospector.findRenameByField(MapperConfig<?> config, AnnotatedField f, PropertyName implName)"
  summary: "Method called on fields that are eligible candidates for properties (that is, non-static member fields), but not necessarily selected (may or may not be visible), to let fields affect name linking. Call will be made after finding implicit name (which by default is just name of the field, but may be overridden by introspector), but before discovering other accessors. If non-null name returned, it is to be used to find other accessors (getters, setters, creator parameters) and replace their implicit names with that of field's implicit name (assuming they differ).\n\nSpecific example (and initial use case is for support Kotlin's \"is getter\" matching (see [Kotling Interop][] for details), in which field like '`isOpen`' would have implicit name of \"isOpen\", match getter `getOpen()` and setter `setOpen(boolean)`, but use logical external name of \"isOpen\" (and not implicit name of getter/setter, \"open\"!). To achieve this, field implicit name needs to remain \"isOpen\" but this method needs to return name `PropertyName.construct(\"open\")`: doing so will \"pull in\" getter and/or setter, and rename them as \"isOpen\".\n\n\n[Kotling Interop]: https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html"
  overridden: "com.fasterxml.jackson.databind.AnnotationIntrospector.findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.MapperConfig?alt=com.fasterxml.jackson.databind.cfg.MapperConfig&text=MapperConfig\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "f"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.AnnotatedField?alt=com.fasterxml.jackson.databind.introspect.AnnotatedField&text=AnnotatedField\" data-throw-if-not-resolved=\"False\" />"
  - name: "implName"
    type: "<xref href=\"com.fasterxml.jackson.databind.PropertyName?alt=com.fasterxml.jackson.databind.PropertyName&text=PropertyName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PropertyName findRenameByField(MapperConfig<?> config, AnnotatedField f, PropertyName implName)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.PropertyName?alt=com.fasterxml.jackson.databind.PropertyName&text=PropertyName\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.introspect"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
