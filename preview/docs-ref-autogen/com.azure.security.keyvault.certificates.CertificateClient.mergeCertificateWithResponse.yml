### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateClient.mergeCertificateWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateClient.mergeCertificateWithResponse"
name: "mergeCertificateWithResponse"
nameWithType: "CertificateClient.mergeCertificateWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateClient.mergeCertificateWithResponse(com.azure.security.keyvault.certificates.models.MergeCertificateOptions,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions, Context context)"
  name: "mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions, Context context)"
  nameWithType: "CertificateClient.mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions, Context context)"
  summary: "Merges a certificate or a certificate chain with a key pair currently available in the service. This operation requires the `certificates/create` permission.\n\n**Code Samples**\n\nMerges a certificate with a kay pair available in the service.\n\n```java\nList<byte[]> x509CertsToMerge = new ArrayList<>();\n MergeCertificateOptions mergeConfig =\n     new MergeCertificateOptions(\"certificateName\", x509CertsToMerge)\n         .setEnabled(false);\n Response<KeyVaultCertificateWithPolicy> mergedCertificateWithResponse =\n     certificateClient.mergeCertificateWithResponse(mergeConfig, new Context(key2, value2));\n System.out.printf(\"Received Certificate with name %s and key id %s\",\n     mergedCertificateWithResponse.getValue().getProperties().getName(),\n     mergedCertificateWithResponse.getValue().getKeyId());\n```"
  parameters:
  - description: "the merge certificate configuration holding the x509 certificates."
    name: "mergeCertificateOptions"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.MergeCertificateOptions?alt=com.azure.security.keyvault.certificates.models.MergeCertificateOptions&text=MergeCertificateOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<KeyVaultCertificateWithPolicy> mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the merged certificate."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
