### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.std.MapSerializer"
fullName: "com.fasterxml.jackson.databind.ser.std.MapSerializer"
name: "MapSerializer"
nameWithType: "MapSerializer"
summary: "Standard serializer implementation for serializing \\{link java.util.Map\\} types.\n\nNote: about the only configurable setting currently is ability to filter out entries with specified names."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.ContainerSerializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
- "com.fasterxml.jackson.databind.JsonSerializer.properties()"
- "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
- "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer._withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer.getContentSerializer()"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer.getContentType()"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer.hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer.hasSingleElement(T)"
- "com.fasterxml.jackson.databind.ser.ContainerSerializer.withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MapSerializer extends ContainerSerializer<Map<?,?>> implements ContextualSerializer"
constructors:
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MapSerializer(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,java.util.Set<java.lang.String>)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MapSerializer(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MapSerializer(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MapSerializer(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MapSerializer(java.util.Set<java.lang.String>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JsonSerializer<?>)"
fields:
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.MARKER_FOR_EMPTY"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.UNSPECIFIED_TYPE"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._dynamicValueSerializers"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._filterId"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._ignoredEntries"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._keySerializer"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._keyType"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._property"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._sortKeys"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._suppressNulls"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._suppressableValue"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._valueSerializer"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._valueType"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._valueTypeIsStatic"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._valueTypeSerializer"
methods:
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._ensureOverride()"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._ensureOverride(java.lang.String)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._hasNullKey(java.util.Map<?,?>)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._orderEntries(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer._writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.construct(java.util.Set<java.lang.String>,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.getContentSerializer()"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.getContentType()"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.getKeySerializer()"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.hasSingleElement(java.util.Map<?,?>)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map<?,?>)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFieldsUsing(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.util.Map<?,?>,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFilteredFields(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeOptionalFields(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeTypedFields(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeWithType(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeWithoutTypeInfo(java.util.Map<?,?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.withContentInclusion(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.withContentInclusion(java.lang.Object,boolean)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.withFilterId(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.MapSerializer.withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,java.util.Set<java.lang.String>,boolean)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.databind.ser.ContextualSerializer?alt=com.fasterxml.jackson.databind.ser.ContextualSerializer&text=ContextualSerializer\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
