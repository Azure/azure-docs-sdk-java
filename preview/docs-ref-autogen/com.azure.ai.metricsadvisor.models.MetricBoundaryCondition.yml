### YamlMime:ManagedReference
items:
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  id: MetricBoundaryCondition
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models
  children:
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition()
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId()
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection()
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary()
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary()
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary(double,double)
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String)
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String,boolean)
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary(com.azure.ai.metricsadvisor.models.SingleBoundaryDirection,double)
  - com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing()
  langs:
  - java
  name: MetricBoundaryCondition
  nameWithType: MetricBoundaryCondition
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  type: Class
  package: com.azure.ai.metricsadvisor.models
  summary: Defines the boundary conditions for the anomaly (abnormal data points) to be included in the alert.
  syntax:
    content: public final class MetricBoundaryCondition
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition()
  id: MetricBoundaryCondition()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: MetricBoundaryCondition()
  nameWithType: MetricBoundaryCondition.MetricBoundaryCondition()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition*
  type: Constructor
  package: com.azure.ai.metricsadvisor.models
  syntax:
    content: public MetricBoundaryCondition()
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId()
  id: getCompanionMetricId()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: getCompanionMetricId()
  nameWithType: MetricBoundaryCondition.getCompanionMetricId()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Gets the id of the companion metric. When the companion-metric is set for a metric, the abnormal data points detected in the original metric will be included in the alert only if data points values of corresponding series in companion-metric are not within the boundary.
  syntax:
    content: public String getCompanionMetricId()
    return:
      type: java.lang.String
      description: The companion metric id.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection()
  id: getDirection()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: getDirection()
  nameWithType: MetricBoundaryCondition.getDirection()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Gets the boundary direction.
  syntax:
    content: public BoundaryDirection getDirection()
    return:
      type: com.azure.ai.metricsadvisor.models.BoundaryDirection
      description: The boundary direction.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary()
  id: getLowerBoundary()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: getLowerBoundary()
  nameWithType: MetricBoundaryCondition.getLowerBoundary()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Gets the lower boundary, if the detected abnormal data point is below this value then it will be included in the alert. This boundary is taken into consideration only if the direction is either <xref uid="com.azure.ai.metricsadvisor.models.BoundaryDirection.LOWER" data-throw-if-not-resolved="false">BoundaryDirection#LOWER</xref> or <xref uid="com.azure.ai.metricsadvisor.models.BoundaryDirection.BOTH" data-throw-if-not-resolved="false">BoundaryDirection#BOTH</xref>.
  syntax:
    content: public Double getLowerBoundary()
    return:
      type: java.lang.Double
      description: The lower boundary.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary()
  id: getUpperBoundary()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: getUpperBoundary()
  nameWithType: MetricBoundaryCondition.getUpperBoundary()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Gets the upper boundary. if the detected abnormal data point is above this value then it will be included in the alert. This boundary is taken into consideration only if the direction is either <xref uid="com.azure.ai.metricsadvisor.models.BoundaryDirection.UPPER" data-throw-if-not-resolved="false">BoundaryDirection#UPPER</xref> or <xref uid="com.azure.ai.metricsadvisor.models.BoundaryDirection.BOTH" data-throw-if-not-resolved="false">BoundaryDirection#BOTH</xref>.
  syntax:
    content: public Double getUpperBoundary()
    return:
      type: java.lang.Double
      description: The upper boundary.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary(double,double)
  id: setBothBoundary(double,double)
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: setBothBoundary(double lower, double upper)
  nameWithType: MetricBoundaryCondition.setBothBoundary(double lower, double upper)
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary(double lower, double upper)
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Sets both upper and lower boundary.
  syntax:
    content: public MetricBoundaryCondition setBothBoundary(double lower, double upper)
    parameters:
    - id: lower
      type: double
      description: The lower boundary value.
    - id: upper
      type: double
      description: The upper boundary value.
    return:
      type: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
      description: The MetricBoundaryCondition object itself.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String)
  id: setCompanionMetricId(java.lang.String)
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: setCompanionMetricId(String companionMetricId)
  nameWithType: MetricBoundaryCondition.setCompanionMetricId(String companionMetricId)
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(String companionMetricId)
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Sets the companion metric id. When the companion-metric is set for a metric, an anomaly detected in the original metric will be included in the alert only if data points values of corresponding series in companion-metric are not within the boundary.
  syntax:
    content: public MetricBoundaryCondition setCompanionMetricId(String companionMetricId)
    parameters:
    - id: companionMetricId
      type: java.lang.String
      description: The companion metric id.
    return:
      type: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
      description: The MetricBoundaryCondition object itself.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String,boolean)
  id: setCompanionMetricId(java.lang.String,boolean)
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: setCompanionMetricId(String companionMetricId, boolean alertIfMissing)
  nameWithType: MetricBoundaryCondition.setCompanionMetricId(String companionMetricId, boolean alertIfMissing)
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(String companionMetricId, boolean alertIfMissing)
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Sets the companion metric id. When the companion-metric is set for a metric, an anomaly detected in the original metric series will be included in the alert only if data points values of corresponding series in companion-metric are not within the boundary.
  syntax:
    content: public MetricBoundaryCondition setCompanionMetricId(String companionMetricId, boolean alertIfMissing)
    parameters:
    - id: companionMetricId
      type: java.lang.String
      description: The companion metric id.
    - id: alertIfMissing
      type: boolean
      description: >-
        Indicate whether or not alert should be triggered when
             the companion-metric data-points are out of boundary but the corresponding data-point
             is missing for the original metric.
    return:
      type: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
      description: The MetricBoundaryCondition object itself.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary(com.azure.ai.metricsadvisor.models.SingleBoundaryDirection,double)
  id: setSingleBoundary(com.azure.ai.metricsadvisor.models.SingleBoundaryDirection,double)
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: setSingleBoundary(SingleBoundaryDirection direction, double boundaryValue)
  nameWithType: MetricBoundaryCondition.setSingleBoundary(SingleBoundaryDirection direction, double boundaryValue)
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary(SingleBoundaryDirection direction, double boundaryValue)
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: Sets either upper or lower boundary.
  syntax:
    content: public MetricBoundaryCondition setSingleBoundary(SingleBoundaryDirection direction, double boundaryValue)
    parameters:
    - id: direction
      type: com.azure.ai.metricsadvisor.models.SingleBoundaryDirection
      description: The boundary direction.
    - id: boundaryValue
      type: double
      description: The boundary value.
    return:
      type: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
      description: The MetricBoundaryCondition object itself.
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing()
  id: shouldAlertIfDataPointMissing()
  artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
  parent: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition
  langs:
  - java
  name: shouldAlertIfDataPointMissing()
  nameWithType: MetricBoundaryCondition.shouldAlertIfDataPointMissing()
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing()
  overload: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing*
  type: Method
  package: com.azure.ai.metricsadvisor.models
  summary: True if alert will be triggered when the companion-metric data-points are out of boundary but the corresponding data-point is missing for the original metric.
  syntax:
    content: public boolean shouldAlertIfDataPointMissing()
    return:
      type: boolean
      description: True if alert is triggered for missing data-points, false otherwise.
references:
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition*
  name: MetricBoundaryCondition
  nameWithType: MetricBoundaryCondition.MetricBoundaryCondition
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition
  package: com.azure.ai.metricsadvisor.models
- uid: com.azure.ai.metricsadvisor.models.BoundaryDirection
  name: BoundaryDirection
  nameWithType: BoundaryDirection
  fullName: com.azure.ai.metricsadvisor.models.BoundaryDirection
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection*
  name: getDirection
  nameWithType: MetricBoundaryCondition.getDirection
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection
  package: com.azure.ai.metricsadvisor.models
- uid: java.lang.Double
  spec.java:
  - uid: java.lang.Double
    name: Double
    fullName: java.lang.Double
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary*
  name: getLowerBoundary
  nameWithType: MetricBoundaryCondition.getLowerBoundary
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary
  package: com.azure.ai.metricsadvisor.models
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary*
  name: getUpperBoundary
  nameWithType: MetricBoundaryCondition.getUpperBoundary
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary
  package: com.azure.ai.metricsadvisor.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId*
  name: getCompanionMetricId
  nameWithType: MetricBoundaryCondition.getCompanionMetricId
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId
  package: com.azure.ai.metricsadvisor.models
- uid: com.azure.ai.metricsadvisor.models.SingleBoundaryDirection
  name: SingleBoundaryDirection
  nameWithType: SingleBoundaryDirection
  fullName: com.azure.ai.metricsadvisor.models.SingleBoundaryDirection
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary*
  name: setSingleBoundary
  nameWithType: MetricBoundaryCondition.setSingleBoundary
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary
  package: com.azure.ai.metricsadvisor.models
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary*
  name: setBothBoundary
  nameWithType: MetricBoundaryCondition.setBothBoundary
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary
  package: com.azure.ai.metricsadvisor.models
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId*
  name: setCompanionMetricId
  nameWithType: MetricBoundaryCondition.setCompanionMetricId
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId
  package: com.azure.ai.metricsadvisor.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing*
  name: shouldAlertIfDataPointMissing
  nameWithType: MetricBoundaryCondition.shouldAlertIfDataPointMissing
  fullName: com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing
  package: com.azure.ai.metricsadvisor.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
