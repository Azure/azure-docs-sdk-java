### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition"
fullName: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition"
name: "MetricBoundaryCondition"
nameWithType: "MetricBoundaryCondition"
summary: "Defines the boundary conditions for the anomaly (abnormal data points) to be included in the alert."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MetricBoundaryCondition"
constructors:
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.MetricBoundaryCondition()"
methods:
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getCompanionMetricId()"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getDirection()"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getLowerBoundary()"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.getUpperBoundary()"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setBothBoundary(double,double)"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String)"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String,boolean)"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setSingleBoundary(com.azure.ai.metricsadvisor.models.SingleBoundaryDirection,double)"
- "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.shouldAlertIfDataPointMissing()"
type: "class"
metadata: {}
package: "com.azure.ai.metricsadvisor.models"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
