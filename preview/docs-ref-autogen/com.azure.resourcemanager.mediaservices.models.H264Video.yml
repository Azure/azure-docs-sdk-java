### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.H264Video"
fullName: "com.azure.resourcemanager.mediaservices.models.H264Video"
name: "H264Video"
nameWithType: "H264Video"
summary: "Describes all the properties for encoding a video with the H.264 codec."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Codec?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Video?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.Codec.label()"
- "com.azure.resourcemanager.mediaservices.models.Video.keyFrameInterval()"
- "com.azure.resourcemanager.mediaservices.models.Video.stretchMode()"
- "com.azure.resourcemanager.mediaservices.models.Video.syncMode()"
- "com.azure.resourcemanager.mediaservices.models.Video.validate()"
- "com.azure.resourcemanager.mediaservices.models.Video.withKeyFrameInterval(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Video.withLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Video.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
- "com.azure.resourcemanager.mediaservices.models.Video.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class H264Video extends Video"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.H264Video()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.H264Video()"
  name: "H264Video()"
  nameWithType: "H264Video.H264Video()"
  syntax: "public H264Video()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.complexity()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.complexity()"
  name: "complexity()"
  nameWithType: "H264Video.complexity()"
  summary: "Get the complexity property: Tells the encoder how to choose its encoding settings."
  syntax: "public H264Complexity complexity()"
  desc: "Get the complexity property: Tells the encoder how to choose its encoding settings. The default value is Balanced."
  returns:
    description: "the complexity value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Complexity?alt=com.azure.resourcemanager.mediaservices.models.H264Complexity&text=H264Complexity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.layers()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.layers()"
  name: "layers()"
  nameWithType: "H264Video.layers()"
  summary: "Get the layers property: The collection of output H.264 layers to be produced by the encoder."
  syntax: "public List<H264Layer> layers()"
  desc: "Get the layers property: The collection of output H.264 layers to be produced by the encoder."
  returns:
    description: "the layers value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Layer?alt=com.azure.resourcemanager.mediaservices.models.H264Layer&text=H264Layer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.rateControlMode()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.rateControlMode()"
  name: "rateControlMode()"
  nameWithType: "H264Video.rateControlMode()"
  summary: "Get the rate<wbr>Control<wbr>Mode property: The video rate control mode."
  syntax: "public H264RateControlMode rateControlMode()"
  desc: "Get the rateControlMode property: The video rate control mode."
  returns:
    description: "the rateControlMode value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264RateControlMode?alt=com.azure.resourcemanager.mediaservices.models.H264RateControlMode&text=H264RateControlMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.sceneChangeDetection()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.sceneChangeDetection()"
  name: "sceneChangeDetection()"
  nameWithType: "H264Video.sceneChangeDetection()"
  summary: "Get the scene<wbr>Change<wbr>Detection property: Whether or not the encoder should insert key frames at scene changes."
  syntax: "public Boolean sceneChangeDetection()"
  desc: "Get the sceneChangeDetection property: Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
  returns:
    description: "the sceneChangeDetection value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.validate()"
  name: "validate()"
  nameWithType: "H264Video.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withComplexity(com.azure.resourcemanager.mediaservices.models.H264Complexity)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withComplexity(H264Complexity complexity)"
  name: "withComplexity(H264Complexity complexity)"
  nameWithType: "H264Video.withComplexity(H264Complexity complexity)"
  summary: "Set the complexity property: Tells the encoder how to choose its encoding settings."
  parameters:
  - description: "the complexity value to set."
    name: "complexity"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Complexity?alt=com.azure.resourcemanager.mediaservices.models.H264Complexity&text=H264Complexity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withComplexity(H264Complexity complexity)"
  desc: "Set the complexity property: Tells the encoder how to choose its encoding settings. The default value is Balanced."
  returns:
    description: "the H264Video object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withKeyFrameInterval(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withKeyFrameInterval(Duration keyFrameInterval)"
  name: "withKeyFrameInterval(Duration keyFrameInterval)"
  nameWithType: "H264Video.withKeyFrameInterval(Duration keyFrameInterval)"
  summary: "Set the key<wbr>Frame<wbr>Interval property: The distance between two key frames."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withKeyFrameInterval(java.time.Duration)"
  parameters:
  - name: "keyFrameInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withKeyFrameInterval(Duration keyFrameInterval)"
  desc: "Set the keyFrameInterval property: The distance between two key frames. The value should be non-zero in the range \\[0.5, 20\\] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "H264Video.withLabel(String label)"
  summary: "Set the label property: An optional label for the codec."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withLabel(java.lang.String)"
  parameters:
  - name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withLabel(String label)"
  desc: "Set the label property: An optional label for the codec. The label can be used to control muxing behavior."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withLayers(java.util.List<com.azure.resourcemanager.mediaservices.models.H264Layer>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withLayers(List<H264Layer> layers)"
  name: "withLayers(List<H264Layer> layers)"
  nameWithType: "H264Video.withLayers(List<H264Layer> layers)"
  summary: "Set the layers property: The collection of output H.264 layers to be produced by the encoder."
  parameters:
  - description: "the layers value to set."
    name: "layers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Layer?alt=com.azure.resourcemanager.mediaservices.models.H264Layer&text=H264Layer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public H264Video withLayers(List<H264Layer> layers)"
  desc: "Set the layers property: The collection of output H.264 layers to be produced by the encoder."
  returns:
    description: "the H264Video object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withRateControlMode(com.azure.resourcemanager.mediaservices.models.H264RateControlMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withRateControlMode(H264RateControlMode rateControlMode)"
  name: "withRateControlMode(H264RateControlMode rateControlMode)"
  nameWithType: "H264Video.withRateControlMode(H264RateControlMode rateControlMode)"
  summary: "Set the rate<wbr>Control<wbr>Mode property: The video rate control mode."
  parameters:
  - description: "the rateControlMode value to set."
    name: "rateControlMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264RateControlMode?alt=com.azure.resourcemanager.mediaservices.models.H264RateControlMode&text=H264RateControlMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withRateControlMode(H264RateControlMode rateControlMode)"
  desc: "Set the rateControlMode property: The video rate control mode."
  returns:
    description: "the H264Video object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withSceneChangeDetection(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withSceneChangeDetection(Boolean sceneChangeDetection)"
  name: "withSceneChangeDetection(Boolean sceneChangeDetection)"
  nameWithType: "H264Video.withSceneChangeDetection(Boolean sceneChangeDetection)"
  summary: "Set the scene<wbr>Change<wbr>Detection property: Whether or not the encoder should insert key frames at scene changes."
  parameters:
  - description: "the sceneChangeDetection value to set."
    name: "sceneChangeDetection"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withSceneChangeDetection(Boolean sceneChangeDetection)"
  desc: "Set the sceneChangeDetection property: Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
  returns:
    description: "the H264Video object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withStretchMode(StretchMode stretchMode)"
  name: "withStretchMode(StretchMode stretchMode)"
  nameWithType: "H264Video.withStretchMode(StretchMode stretchMode)"
  summary: "Set the stretch<wbr>Mode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s)."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  parameters:
  - name: "stretchMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StretchMode?alt=com.azure.resourcemanager.mediaservices.models.StretchMode&text=StretchMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withStretchMode(StretchMode stretchMode)"
  desc: "Set the stretchMode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.H264Video.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.H264Video.withSyncMode(VideoSyncMode syncMode)"
  name: "withSyncMode(VideoSyncMode syncMode)"
  nameWithType: "H264Video.withSyncMode(VideoSyncMode syncMode)"
  summary: "Set the sync<wbr>Mode property: The Video Sync Mode."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  parameters:
  - name: "syncMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoSyncMode?alt=com.azure.resourcemanager.mediaservices.models.VideoSyncMode&text=VideoSyncMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public H264Video withSyncMode(VideoSyncMode syncMode)"
  desc: "Set the syncMode property: The Video Sync Mode."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.H264Video?alt=com.azure.resourcemanager.mediaservices.models.H264Video&text=H264Video\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes all the properties for encoding a video with the H.264 codec."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
