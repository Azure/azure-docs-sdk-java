### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler"
name: "AmqpFeedbackReceivedHandler"
nameWithType: "AmqpFeedbackReceivedHandler"
summary: "Instance of the QPID-Proton-J Base<wbr>Handler class to override the events what are needed to handle the receive operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup&text=ErrorLoggingBaseHandlerWithCleanup\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose&text=onConnectionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen&text=onConnectionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose&text=onConnectionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose&text=onLinkLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen&text=onLinkLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose&text=onLinkRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose&text=onSessionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen&text=onSessionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose&text=onSessionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError&text=onTransportError\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler&text=AmqpConnectionHandler\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound&text=onConnectionBound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen&text=onConnectionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen&text=onLinkRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit&text=onReactorInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen&text=onSessionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened&text=verifyConnectionWasOpened\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.add&text=add\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.children()?alt=org.apache.qpid.proton.engine.BaseHandler.children&text=children\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.handle&text=handle\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal&text=onConnectionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionInit&text=onConnectionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound&text=onConnectionUnbound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onDelivery&text=onDelivery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFinal&text=onLinkFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFlow&text=onLinkFlow\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkInit&text=onLinkInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach&text=onLinkLocalDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach&text=onLinkRemoteDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorFinal&text=onReactorFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced&text=onReactorQuiesced\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableError&text=onSelectableError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired&text=onSelectableExpired\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal&text=onSelectableFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableInit&text=onSelectableInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable&text=onSelectableReadable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated&text=onSelectableUpdated\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable&text=onSelectableWritable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionFinal&text=onSessionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionInit&text=onSessionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTimerTask&text=onTimerTask\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransport&text=onTransport\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportClosed&text=onTransportClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed&text=onTransportHeadClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed&text=onTransportTailClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onUnhandled&text=onUnhandled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **AmqpFeedbackReceivedHandler**</br> extends <xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler&text=AmqpConnectionHandler\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent)"
  name: "AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent)"
  nameWithType: "AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent)"
  summary: "Constructor to set up connection parameters and initialize handshaker and flow controller for transport"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "callback to delegate the received message to the user API"
    name: "amqpFeedbackReceivedEvent"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent&text=AmqpFeedbackReceivedEvent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent)"
  desc: "Constructor to set up connection parameters and initialize handshaker and flow controller for transport"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent,com.microsoft.azure.sdk.iot.service.ProxyOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent, ProxyOptions proxyOptions)"
  name: "AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent, ProxyOptions proxyOptions)"
  nameWithType: "AmqpFeedbackReceivedHandler.AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent, ProxyOptions proxyOptions)"
  summary: "Constructor to set up connection parameters and initialize handshaker and flow controller for transport"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "callback to delegate the received message to the user API"
    name: "amqpFeedbackReceivedEvent"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent&text=AmqpFeedbackReceivedEvent\" data-throw-if-not-resolved=\"False\" />"
  - description: "the proxy options to tunnel through, if a proxy should be used."
    name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFeedbackReceivedHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, AmqpFeedbackReceivedEvent amqpFeedbackReceivedEvent, ProxyOptions proxyOptions)"
  desc: "Constructor to set up connection parameters and initialize handshaker and flow controller for transport"
fields:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.ENDPOINT"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.ENDPOINT"
  name: "ENDPOINT"
  nameWithType: "AmqpFeedbackReceivedHandler.ENDPOINT"
  modifiers:
  - "static"
  - "final"
  field:
    value: "/messages/servicebound/feedback"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static final String ENDPOINT"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.RECEIVE_TAG"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.RECEIVE_TAG"
  name: "RECEIVE_TAG"
  nameWithType: "AmqpFeedbackReceivedHandler.RECEIVE_TAG"
  modifiers:
  - "static"
  - "final"
  field:
    value: "receiver"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static final String RECEIVE_TAG"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onConnectionInit(Event event)"
  name: "onConnectionInit(Event event)"
  nameWithType: "AmqpFeedbackReceivedHandler.onConnectionInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onDelivery(Event event)"
  name: "onDelivery(Event event)"
  nameWithType: "AmqpFeedbackReceivedHandler.onDelivery(Event event)"
  summary: "Event handler for the on delivery event"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The proton event object"
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onDelivery(Event event)"
  desc: "Event handler for the on delivery event"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onLinkInit(Event event)"
  name: "onLinkInit(Event event)"
  nameWithType: "AmqpFeedbackReceivedHandler.onLinkInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler.onTimerTask(Event event)"
  name: "onTimerTask(Event event)"
  nameWithType: "AmqpFeedbackReceivedHandler.onTimerTask(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTimerTask(Event event)"
type: "class"
desc: "Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the receive operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
