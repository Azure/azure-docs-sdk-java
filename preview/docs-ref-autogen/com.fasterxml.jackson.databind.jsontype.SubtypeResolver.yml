### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  id: SubtypeResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype
  children:
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver()
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy()
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(java.lang.Class<?>...)
  - com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  langs:
  - java
  name: SubtypeResolver
  nameWithType: SubtypeResolver
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  type: Class
  package: com.fasterxml.jackson.databind.jsontype
  summary: Helper object used for handling registration on resolving of super-types to sub-types.
  syntax:
    content: public abstract class SubtypeResolver
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver()
  id: SubtypeResolver()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: SubtypeResolver()
  nameWithType: SubtypeResolver.SubtypeResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver()
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public SubtypeResolver()
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypes(AnnotatedClass baseType, MapperConfig<?> config, AnnotationIntrospector ai)
  nameWithType: SubtypeResolver.collectAndResolveSubtypes(AnnotatedClass baseType, MapperConfig<?> config, AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(AnnotatedClass baseType, MapperConfig<?> config, AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypes(AnnotatedClass baseType, MapperConfig<?> config, AnnotationIntrospector ai)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
  id: collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypes(AnnotatedMember property, MapperConfig<?> config, AnnotationIntrospector ai, JavaType baseType)
  nameWithType: SubtypeResolver.collectAndResolveSubtypes(AnnotatedMember property, MapperConfig<?> config, AnnotationIntrospector ai, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes(AnnotatedMember property, MapperConfig<?> config, AnnotationIntrospector ai, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypes(AnnotatedMember property, MapperConfig<?> config, AnnotationIntrospector ai, JavaType baseType)
    parameters:
    - id: property
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  id: collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedClass baseType)
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedClass baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedClass baseType)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method for finding out all reachable subtypes for given type, such that access is by type, typically needed for serialization (converting from type to type name).
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedClass baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
      description: >-
        Effective property base type to use; may differ from
            actual type of property; for structured types it is content (value) type and NOT
            structured type.
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  id: collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method for finding out all reachable subtypes for a property specified by given element (method or field), such that access is by type, typically needed for serialization (converting from type to type name).
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypesByClass(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: property
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: >-
        Effective property base type to use; may differ from
            actual type of property; for structured types it is content (value) type and NOT
            structured type.
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  id: collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedClass baseType)
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedClass baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedClass baseType)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method for finding out all reachable subtypes for given type, such that access is by type id, typically needed for deserialization (converting from type id to type).
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedClass baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
      description: >-
        Effective property base type to use; may differ from
            actual type of property; for structured types it is content (value) type and NOT
            structured type.
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  id: collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method for finding out all reachable subtypes for a property specified by given element (method or field), such that access is by type id, typically needed for deserialization (converting from type id to type).
  syntax:
    content: public Collection<NamedType> collectAndResolveSubtypesByTypeId(MapperConfig<?> config, AnnotatedMember property, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: property
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: >-
        Effective property base type to use; may differ from
            actual type of property; for structured types it is content (value) type and NOT
            structured type.
    return:
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy()
  id: copy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: copy()
  nameWithType: SubtypeResolver.copy()
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy()
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: 'Method called by `ObjectMapper.copy()` to make sure that <xref uid="com.fasterxml.jackson.databind.jsontype.SubtypeResolver" data-throw-if-not-resolved="false">SubtypeResolver</xref> instances used by two independent mappers can not cause thread-safety issues: if resolver is immutable, it may return `this`, but if not, it should create a copy with same configuration and return that instead.'
  syntax:
    content: public SubtypeResolver copy()
    return:
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
      description: >-
        Either new instance with same configuration as this one (if
            instances are mutable), or this instance (if immutable)
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  id: registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: registerSubtypes(NamedType[] types)
  nameWithType: SubtypeResolver.registerSubtypes(NamedType[] types)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(NamedType[] types)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method for registering specified subtypes (possibly including type names); for type entries without name, non-qualified class name as used as name (unless overridden by annotation).
  syntax:
    content: public abstract void registerSubtypes(NamedType[] types)
    parameters:
    - id: types
      type: com.fasterxml.jackson.databind.jsontype.NamedType[]
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(java.lang.Class<?>...)
  id: registerSubtypes(java.lang.Class<?>...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: registerSubtypes(Class<?>[] classes)
  nameWithType: SubtypeResolver.registerSubtypes(Class<?>[] classes)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(Class<?>[] classes)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public abstract void registerSubtypes(Class<?>[] classes)
    parameters:
    - id: classes
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  id: registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  langs:
  - java
  name: registerSubtypes(Collection<Class<?>> subtypes)
  nameWithType: SubtypeResolver.registerSubtypes(Collection<Class<?>> subtypes)
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes(Collection<Class<?>> subtypes)
  overload: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public abstract void registerSubtypes(Collection<Class<?>> subtypes)
    parameters:
    - id: subtypes
      type: java.util.Collection<java.lang.Class<?>>
references:
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver*
  name: SubtypeResolver
  nameWithType: SubtypeResolver.SubtypeResolver
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.SubtypeResolver
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy*
  name: copy
  nameWithType: SubtypeResolver.copy
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.copy
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.NamedType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes*
  name: registerSubtypes
  nameWithType: SubtypeResolver.registerSubtypes
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.registerSubtypes
  package: com.fasterxml.jackson.databind.jsontype
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: java.util.Collection<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass*
  name: collectAndResolveSubtypesByClass
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByClass
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByClass
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedClass
  name: AnnotatedClass
  nameWithType: AnnotatedClass
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedClass
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId*
  name: collectAndResolveSubtypesByTypeId
  nameWithType: SubtypeResolver.collectAndResolveSubtypesByTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypesByTypeId
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes*
  name: collectAndResolveSubtypes
  nameWithType: SubtypeResolver.collectAndResolveSubtypes
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver.collectAndResolveSubtypes
  package: com.fasterxml.jackson.databind.jsontype
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.NamedType
  name: NamedType
  nameWithType: NamedType
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType
