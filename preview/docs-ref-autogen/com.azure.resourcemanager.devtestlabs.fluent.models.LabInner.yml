### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner"
fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner"
name: "LabInner"
nameWithType: "LabInner"
summary: "A lab."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LabInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.LabInner()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.LabInner()"
  name: "LabInner()"
  nameWithType: "LabInner.LabInner()"
  syntax: "public LabInner()"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.announcement()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.announcement()"
  name: "announcement()"
  nameWithType: "LabInner.announcement()"
  summary: "Get the announcement property: The properties of any lab announcement associated with this lab."
  syntax: "public LabAnnouncementProperties announcement()"
  desc: "Get the announcement property: The properties of any lab announcement associated with this lab."
  returns:
    description: "the announcement value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.LabAnnouncementProperties?alt=com.azure.resourcemanager.devtestlabs.models.LabAnnouncementProperties&text=LabAnnouncementProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.artifactsStorageAccount()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.artifactsStorageAccount()"
  name: "artifactsStorageAccount()"
  nameWithType: "LabInner.artifactsStorageAccount()"
  summary: "Get the artifacts<wbr>Storage<wbr>Account property: The lab's artifact storage account."
  syntax: "public String artifactsStorageAccount()"
  desc: "Get the artifactsStorageAccount property: The lab's artifact storage account."
  returns:
    description: "the artifactsStorageAccount value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.createdDate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.createdDate()"
  name: "createdDate()"
  nameWithType: "LabInner.createdDate()"
  summary: "Get the created<wbr>Date property: The creation date of the lab."
  syntax: "public OffsetDateTime createdDate()"
  desc: "Get the createdDate property: The creation date of the lab."
  returns:
    description: "the createdDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.defaultPremiumStorageAccount()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.defaultPremiumStorageAccount()"
  name: "defaultPremiumStorageAccount()"
  nameWithType: "LabInner.defaultPremiumStorageAccount()"
  summary: "Get the default<wbr>Premium<wbr>Storage<wbr>Account property: The lab's default premium storage account."
  syntax: "public String defaultPremiumStorageAccount()"
  desc: "Get the defaultPremiumStorageAccount property: The lab's default premium storage account."
  returns:
    description: "the defaultPremiumStorageAccount value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.defaultStorageAccount()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.defaultStorageAccount()"
  name: "defaultStorageAccount()"
  nameWithType: "LabInner.defaultStorageAccount()"
  summary: "Get the default<wbr>Storage<wbr>Account property: The lab's default storage account."
  syntax: "public String defaultStorageAccount()"
  desc: "Get the defaultStorageAccount property: The lab's default storage account."
  returns:
    description: "the defaultStorageAccount value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.environmentPermission()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.environmentPermission()"
  name: "environmentPermission()"
  nameWithType: "LabInner.environmentPermission()"
  summary: "Get the environment<wbr>Permission property: The access rights to be granted to the user when provisioning an environment."
  syntax: "public EnvironmentPermission environmentPermission()"
  desc: "Get the environmentPermission property: The access rights to be granted to the user when provisioning an environment."
  returns:
    description: "the environmentPermission value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.EnvironmentPermission?alt=com.azure.resourcemanager.devtestlabs.models.EnvironmentPermission&text=EnvironmentPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.extendedProperties()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.extendedProperties()"
  name: "extendedProperties()"
  nameWithType: "LabInner.extendedProperties()"
  summary: "Get the extended<wbr>Properties property: Extended properties of the lab used for experimental features."
  syntax: "public Map<String,String> extendedProperties()"
  desc: "Get the extendedProperties property: Extended properties of the lab used for experimental features."
  returns:
    description: "the extendedProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.labStorageType()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.labStorageType()"
  name: "labStorageType()"
  nameWithType: "LabInner.labStorageType()"
  summary: "Get the lab<wbr>Storage<wbr>Type property: Type of storage used by the lab."
  syntax: "public StorageType labStorageType()"
  desc: "Get the labStorageType property: Type of storage used by the lab. It can be either Premium or Standard. Default is Premium."
  returns:
    description: "the labStorageType value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.StorageType?alt=com.azure.resourcemanager.devtestlabs.models.StorageType&text=StorageType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.loadBalancerId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.loadBalancerId()"
  name: "loadBalancerId()"
  nameWithType: "LabInner.loadBalancerId()"
  summary: "Get the load<wbr>Balancer<wbr>Id property: The load balancer used to for lab VMs that use shared IP address."
  syntax: "public String loadBalancerId()"
  desc: "Get the loadBalancerId property: The load balancer used to for lab VMs that use shared IP address."
  returns:
    description: "the loadBalancerId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.mandatoryArtifactsResourceIdsLinux()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.mandatoryArtifactsResourceIdsLinux()"
  name: "mandatoryArtifactsResourceIdsLinux()"
  nameWithType: "LabInner.mandatoryArtifactsResourceIdsLinux()"
  summary: "Get the mandatory<wbr>Artifacts<wbr>Resource<wbr>Ids<wbr>Linux property: The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."
  syntax: "public List<String> mandatoryArtifactsResourceIdsLinux()"
  desc: "Get the mandatoryArtifactsResourceIdsLinux property: The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."
  returns:
    description: "the mandatoryArtifactsResourceIdsLinux value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.mandatoryArtifactsResourceIdsWindows()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.mandatoryArtifactsResourceIdsWindows()"
  name: "mandatoryArtifactsResourceIdsWindows()"
  nameWithType: "LabInner.mandatoryArtifactsResourceIdsWindows()"
  summary: "Get the mandatory<wbr>Artifacts<wbr>Resource<wbr>Ids<wbr>Windows property: The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."
  syntax: "public List<String> mandatoryArtifactsResourceIdsWindows()"
  desc: "Get the mandatoryArtifactsResourceIdsWindows property: The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."
  returns:
    description: "the mandatoryArtifactsResourceIdsWindows value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.networkSecurityGroupId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.networkSecurityGroupId()"
  name: "networkSecurityGroupId()"
  nameWithType: "LabInner.networkSecurityGroupId()"
  summary: "Get the network<wbr>Security<wbr>Group<wbr>Id property: The Network Security Group attached to the lab VMs Network interfaces to restrict open ports."
  syntax: "public String networkSecurityGroupId()"
  desc: "Get the networkSecurityGroupId property: The Network Security Group attached to the lab VMs Network interfaces to restrict open ports."
  returns:
    description: "the networkSecurityGroupId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.premiumDataDiskStorageAccount()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.premiumDataDiskStorageAccount()"
  name: "premiumDataDiskStorageAccount()"
  nameWithType: "LabInner.premiumDataDiskStorageAccount()"
  summary: "Get the premium<wbr>Data<wbr>Disk<wbr>Storage<wbr>Account property: The lab's premium data disk storage account."
  syntax: "public String premiumDataDiskStorageAccount()"
  desc: "Get the premiumDataDiskStorageAccount property: The lab's premium data disk storage account."
  returns:
    description: "the premiumDataDiskStorageAccount value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.premiumDataDisks()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.premiumDataDisks()"
  name: "premiumDataDisks()"
  nameWithType: "LabInner.premiumDataDisks()"
  summary: "Get the premium<wbr>Data<wbr>Disks property: The setting to enable usage of premium data disks."
  syntax: "public PremiumDataDisk premiumDataDisks()"
  desc: "Get the premiumDataDisks property: The setting to enable usage of premium data disks. When its value is 'Enabled', creation of standard or premium data disks is allowed. When its value is 'Disabled', only creation of standard data disks is allowed."
  returns:
    description: "the premiumDataDisks value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.PremiumDataDisk?alt=com.azure.resourcemanager.devtestlabs.models.PremiumDataDisk&text=PremiumDataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.provisioningState()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LabInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning status of the resource."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning status of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.publicIpId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.publicIpId()"
  name: "publicIpId()"
  nameWithType: "LabInner.publicIpId()"
  summary: "Get the public<wbr>IpId property: The public IP address for the lab's load balancer."
  syntax: "public String publicIpId()"
  desc: "Get the publicIpId property: The public IP address for the lab's load balancer."
  returns:
    description: "the publicIpId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.support()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.support()"
  name: "support()"
  nameWithType: "LabInner.support()"
  summary: "Get the support property: The properties of any lab support message associated with this lab."
  syntax: "public LabSupportProperties support()"
  desc: "Get the support property: The properties of any lab support message associated with this lab."
  returns:
    description: "the support value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.LabSupportProperties?alt=com.azure.resourcemanager.devtestlabs.models.LabSupportProperties&text=LabSupportProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.uniqueIdentifier()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.uniqueIdentifier()"
  name: "uniqueIdentifier()"
  nameWithType: "LabInner.uniqueIdentifier()"
  summary: "Get the unique<wbr>Identifier property: The unique immutable identifier of a resource (Guid)."
  syntax: "public String uniqueIdentifier()"
  desc: "Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)."
  returns:
    description: "the uniqueIdentifier value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.validate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.validate()"
  name: "validate()"
  nameWithType: "LabInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.vaultName()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.vaultName()"
  name: "vaultName()"
  nameWithType: "LabInner.vaultName()"
  summary: "Get the vault<wbr>Name property: The lab's Key vault."
  syntax: "public String vaultName()"
  desc: "Get the vaultName property: The lab's Key vault."
  returns:
    description: "the vaultName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.vmCreationResourceGroup()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.vmCreationResourceGroup()"
  name: "vmCreationResourceGroup()"
  nameWithType: "LabInner.vmCreationResourceGroup()"
  summary: "Get the vm<wbr>Creation<wbr>Resource<wbr>Group property: The resource group in which all new lab virtual machines will be created."
  syntax: "public String vmCreationResourceGroup()"
  desc: "Get the vmCreationResourceGroup property: The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null."
  returns:
    description: "the vmCreationResourceGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withAnnouncement(com.azure.resourcemanager.devtestlabs.models.LabAnnouncementProperties)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withAnnouncement(LabAnnouncementProperties announcement)"
  name: "withAnnouncement(LabAnnouncementProperties announcement)"
  nameWithType: "LabInner.withAnnouncement(LabAnnouncementProperties announcement)"
  summary: "Set the announcement property: The properties of any lab announcement associated with this lab."
  parameters:
  - description: "the announcement value to set."
    name: "announcement"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.LabAnnouncementProperties?alt=com.azure.resourcemanager.devtestlabs.models.LabAnnouncementProperties&text=LabAnnouncementProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withAnnouncement(LabAnnouncementProperties announcement)"
  desc: "Set the announcement property: The properties of any lab announcement associated with this lab."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withEnvironmentPermission(com.azure.resourcemanager.devtestlabs.models.EnvironmentPermission)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withEnvironmentPermission(EnvironmentPermission environmentPermission)"
  name: "withEnvironmentPermission(EnvironmentPermission environmentPermission)"
  nameWithType: "LabInner.withEnvironmentPermission(EnvironmentPermission environmentPermission)"
  summary: "Set the environment<wbr>Permission property: The access rights to be granted to the user when provisioning an environment."
  parameters:
  - description: "the environmentPermission value to set."
    name: "environmentPermission"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.EnvironmentPermission?alt=com.azure.resourcemanager.devtestlabs.models.EnvironmentPermission&text=EnvironmentPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withEnvironmentPermission(EnvironmentPermission environmentPermission)"
  desc: "Set the environmentPermission property: The access rights to be granted to the user when provisioning an environment."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withExtendedProperties(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withExtendedProperties(Map<String,String> extendedProperties)"
  name: "withExtendedProperties(Map<String,String> extendedProperties)"
  nameWithType: "LabInner.withExtendedProperties(Map<String,String> extendedProperties)"
  summary: "Set the extended<wbr>Properties property: Extended properties of the lab used for experimental features."
  parameters:
  - description: "the extendedProperties value to set."
    name: "extendedProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LabInner withExtendedProperties(Map<String,String> extendedProperties)"
  desc: "Set the extendedProperties property: Extended properties of the lab used for experimental features."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withLabStorageType(com.azure.resourcemanager.devtestlabs.models.StorageType)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withLabStorageType(StorageType labStorageType)"
  name: "withLabStorageType(StorageType labStorageType)"
  nameWithType: "LabInner.withLabStorageType(StorageType labStorageType)"
  summary: "Set the lab<wbr>Storage<wbr>Type property: Type of storage used by the lab."
  parameters:
  - description: "the labStorageType value to set."
    name: "labStorageType"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.StorageType?alt=com.azure.resourcemanager.devtestlabs.models.StorageType&text=StorageType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withLabStorageType(StorageType labStorageType)"
  desc: "Set the labStorageType property: Type of storage used by the lab. It can be either Premium or Standard. Default is Premium."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "LabInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withMandatoryArtifactsResourceIdsLinux(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withMandatoryArtifactsResourceIdsLinux(List<String> mandatoryArtifactsResourceIdsLinux)"
  name: "withMandatoryArtifactsResourceIdsLinux(List<String> mandatoryArtifactsResourceIdsLinux)"
  nameWithType: "LabInner.withMandatoryArtifactsResourceIdsLinux(List<String> mandatoryArtifactsResourceIdsLinux)"
  summary: "Set the mandatory<wbr>Artifacts<wbr>Resource<wbr>Ids<wbr>Linux property: The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."
  parameters:
  - description: "the mandatoryArtifactsResourceIdsLinux value to set."
    name: "mandatoryArtifactsResourceIdsLinux"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LabInner withMandatoryArtifactsResourceIdsLinux(List<String> mandatoryArtifactsResourceIdsLinux)"
  desc: "Set the mandatoryArtifactsResourceIdsLinux property: The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withMandatoryArtifactsResourceIdsWindows(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withMandatoryArtifactsResourceIdsWindows(List<String> mandatoryArtifactsResourceIdsWindows)"
  name: "withMandatoryArtifactsResourceIdsWindows(List<String> mandatoryArtifactsResourceIdsWindows)"
  nameWithType: "LabInner.withMandatoryArtifactsResourceIdsWindows(List<String> mandatoryArtifactsResourceIdsWindows)"
  summary: "Set the mandatory<wbr>Artifacts<wbr>Resource<wbr>Ids<wbr>Windows property: The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."
  parameters:
  - description: "the mandatoryArtifactsResourceIdsWindows value to set."
    name: "mandatoryArtifactsResourceIdsWindows"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LabInner withMandatoryArtifactsResourceIdsWindows(List<String> mandatoryArtifactsResourceIdsWindows)"
  desc: "Set the mandatoryArtifactsResourceIdsWindows property: The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withPremiumDataDisks(com.azure.resourcemanager.devtestlabs.models.PremiumDataDisk)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withPremiumDataDisks(PremiumDataDisk premiumDataDisks)"
  name: "withPremiumDataDisks(PremiumDataDisk premiumDataDisks)"
  nameWithType: "LabInner.withPremiumDataDisks(PremiumDataDisk premiumDataDisks)"
  summary: "Set the premium<wbr>Data<wbr>Disks property: The setting to enable usage of premium data disks."
  parameters:
  - description: "the premiumDataDisks value to set."
    name: "premiumDataDisks"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.PremiumDataDisk?alt=com.azure.resourcemanager.devtestlabs.models.PremiumDataDisk&text=PremiumDataDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withPremiumDataDisks(PremiumDataDisk premiumDataDisks)"
  desc: "Set the premiumDataDisks property: The setting to enable usage of premium data disks. When its value is 'Enabled', creation of standard or premium data disks is allowed. When its value is 'Disabled', only creation of standard data disks is allowed."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withSupport(com.azure.resourcemanager.devtestlabs.models.LabSupportProperties)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withSupport(LabSupportProperties support)"
  name: "withSupport(LabSupportProperties support)"
  nameWithType: "LabInner.withSupport(LabSupportProperties support)"
  summary: "Set the support property: The properties of any lab support message associated with this lab."
  parameters:
  - description: "the support value to set."
    name: "support"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.LabSupportProperties?alt=com.azure.resourcemanager.devtestlabs.models.LabSupportProperties&text=LabSupportProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LabInner withSupport(LabSupportProperties support)"
  desc: "Set the support property: The properties of any lab support message associated with this lab."
  returns:
    description: "the LabInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.LabInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "LabInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LabInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.LabInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.LabInner&text=LabInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A lab."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
