### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe*"
fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe"
name: "escapeUnsafe"
nameWithType: "ArrayBasedCharEscaper.escapeUnsafe"
members:
- uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe(char)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe(char c)"
  name: "escapeUnsafe(char c)"
  nameWithType: "ArrayBasedCharEscaper.escapeUnsafe(char c)"
  summary: "Escapes a `char` value that has no direct explicit value in the replacement array and lies outside the stated safe range. Subclasses should override this method to provide generalized escaping for characters.\n\nNote that arrays returned by this method must not be modified once they have been returned. However it is acceptable to return the same array multiple times (even for different input characters)."
  parameters:
  - description: "the character to escape"
    name: "c"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract char[] escapeUnsafe(char c)"
  returns:
    description: "the replacement characters, or <code>null</code> if no escaping was required"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
