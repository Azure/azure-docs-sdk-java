### YamlMime:JavaType
uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder"
fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder"
name: "PoolingAsyncClientConnectionManagerBuilder"
nameWithType: "PoolingAsyncClientConnectionManagerBuilder"
summary: "Builder for <xref uid=\"org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PoolingAsyncClientConnectionManager\"></xref> instances.\n\nWhen a particular component is not explicitly set this class will use its default implementation. System properties will be taken into account when configuring the default implementations when <xref uid=\"org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#useSystemProperties()\"></xref> method is called prior to calling <xref uid=\"org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#build()\"></xref>.\n\n *  ssl.TrustManagerFactory.algorithm\n *  javax.net.ssl.trustStoreType\n *  javax.net.ssl.trustStore\n *  javax.net.ssl.trustStoreProvider\n *  javax.net.ssl.trustStorePassword\n *  ssl.KeyManagerFactory.algorithm\n *  javax.net.ssl.keyStoreType\n *  javax.net.ssl.keyStore\n *  javax.net.ssl.keyStoreProvider\n *  javax.net.ssl.keyStorePassword\n *  https.protocols\n *  https.cipherSuites"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PoolingAsyncClientConnectionManagerBuilder"
methods:
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy(org.apache.hc.core5.pool.PoolReusePolicy)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver(org.apache.hc.client5.http.DnsResolver)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute(int)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal(int)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver(org.apache.hc.client5.http.SchemePortResolver)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()"
type: "class"
metadata: {}
package: "org.apache.hc.client5.http.impl.nio"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
