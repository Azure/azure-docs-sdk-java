### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  id: PoolingAsyncClientConnectionManagerBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio
  children:
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create()
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy(org.apache.hc.core5.pool.PoolReusePolicy)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver(org.apache.hc.client5.http.DnsResolver)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute(int)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal(int)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver(org.apache.hc.client5.http.SchemePortResolver)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()
  langs:
  - java
  name: PoolingAsyncClientConnectionManagerBuilder
  nameWithType: PoolingAsyncClientConnectionManagerBuilder
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  type: Class
  package: org.apache.hc.client5.http.impl.nio
  summary: >-
    Builder for <xref uid="org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager" data-throw-if-not-resolved="false">PoolingAsyncClientConnectionManager</xref> instances.


    When a particular component is not explicitly set this class will use its default implementation. System properties will be taken into account when configuring the default implementations when <xref uid="org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()" data-throw-if-not-resolved="false">#useSystemProperties()</xref> method is called prior to calling <xref uid="org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()" data-throw-if-not-resolved="false">#build()</xref>.

     *  ssl.TrustManagerFactory.algorithm
     *  javax.net.ssl.trustStoreType
     *  javax.net.ssl.trustStore
     *  javax.net.ssl.trustStoreProvider
     *  javax.net.ssl.trustStorePassword
     *  ssl.KeyManagerFactory.algorithm
     *  javax.net.ssl.keyStoreType
     *  javax.net.ssl.keyStore
     *  javax.net.ssl.keyStoreProvider
     *  javax.net.ssl.keyStorePassword
     *  https.protocols
     *  https.cipherSuites
  syntax:
    content: public class PoolingAsyncClientConnectionManagerBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder()
  id: PoolingAsyncClientConnectionManagerBuilder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: PoolingAsyncClientConnectionManagerBuilder()
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder()
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder()
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder*
  type: Constructor
  package: org.apache.hc.client5.http.impl.nio
  syntax:
    content: " PoolingAsyncClientConnectionManagerBuilder()"
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()
  id: build()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: build()
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.build()
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build()
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  syntax:
    content: public PoolingAsyncClientConnectionManager build()
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create()
  id: create()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: create()
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.create()
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create()
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  syntax:
    content: public static PoolingAsyncClientConnectionManagerBuilder create()
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy(org.apache.hc.core5.pool.PoolReusePolicy)
  id: setConnPoolPolicy(org.apache.hc.core5.pool.PoolReusePolicy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setConnPoolPolicy(PoolReusePolicy poolReusePolicy)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy(PoolReusePolicy poolReusePolicy)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy(PoolReusePolicy poolReusePolicy)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns <xref uid="org.apache.hc.core5.pool.PoolReusePolicy" data-throw-if-not-resolved="false">PoolReusePolicy</xref> value.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setConnPoolPolicy(PoolReusePolicy poolReusePolicy)
    parameters:
    - id: poolReusePolicy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive(org.apache.hc.core5.util.TimeValue)
  id: setConnectionTimeToLive(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setConnectionTimeToLive(TimeValue timeToLive)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive(TimeValue timeToLive)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive(TimeValue timeToLive)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Sets maximum time to live for persistent connections
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setConnectionTimeToLive(TimeValue timeToLive)
    parameters:
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver(org.apache.hc.client5.http.DnsResolver)
  id: setDnsResolver(org.apache.hc.client5.http.DnsResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setDnsResolver(DnsResolver dnsResolver)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setDnsResolver(DnsResolver dnsResolver)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver(DnsResolver dnsResolver)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns <xref uid="org.apache.hc.client5.http.DnsResolver" data-throw-if-not-resolved="false">DnsResolver</xref> instance.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setDnsResolver(DnsResolver dnsResolver)
    parameters:
    - id: dnsResolver
      type: org.apache.hc.client5.http.DnsResolver
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute(int)
  id: setMaxConnPerRoute(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setMaxConnPerRoute(int maxConnPerRoute)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute(int maxConnPerRoute)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute(int maxConnPerRoute)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns maximum connection per route value.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setMaxConnPerRoute(int maxConnPerRoute)
    parameters:
    - id: maxConnPerRoute
      type: int
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal(int)
  id: setMaxConnTotal(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setMaxConnTotal(int maxConnTotal)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal(int maxConnTotal)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal(int maxConnTotal)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns maximum total connection value.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setMaxConnTotal(int maxConnTotal)
    parameters:
    - id: maxConnTotal
      type: int
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)
  id: setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setPoolConcurrencyPolicy(PoolConcurrencyPolicy poolConcurrencyPolicy)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy(PoolConcurrencyPolicy poolConcurrencyPolicy)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy(PoolConcurrencyPolicy poolConcurrencyPolicy)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns <xref uid="org.apache.hc.core5.pool.PoolConcurrencyPolicy" data-throw-if-not-resolved="false">PoolConcurrencyPolicy</xref> value.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setPoolConcurrencyPolicy(PoolConcurrencyPolicy poolConcurrencyPolicy)
    parameters:
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver(org.apache.hc.client5.http.SchemePortResolver)
  id: setSchemePortResolver(org.apache.hc.client5.http.SchemePortResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setSchemePortResolver(SchemePortResolver schemePortResolver)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver(SchemePortResolver schemePortResolver)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver(SchemePortResolver schemePortResolver)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns <xref uid="org.apache.hc.client5.http.SchemePortResolver" data-throw-if-not-resolved="false">SchemePortResolver</xref> instance.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setSchemePortResolver(SchemePortResolver schemePortResolver)
    parameters:
    - id: schemePortResolver
      type: org.apache.hc.client5.http.SchemePortResolver
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  id: setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setTlsStrategy(TlsStrategy tlsStrategy)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy(TlsStrategy tlsStrategy)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy(TlsStrategy tlsStrategy)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Assigns <xref uid="org.apache.hc.core5.http.nio.ssl.TlsStrategy" data-throw-if-not-resolved="false">TlsStrategy</xref> instance for TLS connections.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setTlsStrategy(TlsStrategy tlsStrategy)
    parameters:
    - id: tlsStrategy
      type: org.apache.hc.core5.http.nio.ssl.TlsStrategy
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  id: setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: setValidateAfterInactivity(TimeValue validateAfterInactivity)
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity(TimeValue validateAfterInactivity)
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity(TimeValue validateAfterInactivity)
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Sets period after inactivity after which persistent connections must be checked to ensure they are still valid.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder setValidateAfterInactivity(TimeValue validateAfterInactivity)
    parameters:
    - id: validateAfterInactivity
      type: org.apache.hc.core5.util.TimeValue
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()
  id: useSystemProperties()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
  langs:
  - java
  name: useSystemProperties()
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties()
  overload: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: Use system properties when creating and configuring default implementations.
  syntax:
    content: public final PoolingAsyncClientConnectionManagerBuilder useSystemProperties()
    return:
      type: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder
references:
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder*
  name: PoolingAsyncClientConnectionManagerBuilder
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.PoolingAsyncClientConnectionManagerBuilder
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create*
  name: create
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.create
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.create
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.core5.http.nio.ssl.TlsStrategy
  name: TlsStrategy
  nameWithType: TlsStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.TlsStrategy
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy*
  name: setTlsStrategy
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setTlsStrategy
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.DnsResolver
  name: DnsResolver
  nameWithType: DnsResolver
  fullName: org.apache.hc.client5.http.DnsResolver
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver*
  name: setDnsResolver
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setDnsResolver
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setDnsResolver
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.SchemePortResolver
  name: SchemePortResolver
  nameWithType: SchemePortResolver
  fullName: org.apache.hc.client5.http.SchemePortResolver
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver*
  name: setSchemePortResolver
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setSchemePortResolver
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.core5.pool.PoolConcurrencyPolicy
  name: PoolConcurrencyPolicy
  nameWithType: PoolConcurrencyPolicy
  fullName: org.apache.hc.core5.pool.PoolConcurrencyPolicy
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy*
  name: setPoolConcurrencyPolicy
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setPoolConcurrencyPolicy
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.core5.pool.PoolReusePolicy
  name: PoolReusePolicy
  nameWithType: PoolReusePolicy
  fullName: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy*
  name: setConnPoolPolicy
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnPoolPolicy
  package: org.apache.hc.client5.http.impl.nio
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal*
  name: setMaxConnTotal
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnTotal
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute*
  name: setMaxConnPerRoute
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setMaxConnPerRoute
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive*
  name: setConnectionTimeToLive
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setConnectionTimeToLive
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity*
  name: setValidateAfterInactivity
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.setValidateAfterInactivity
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties*
  name: useSystemProperties
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.useSystemProperties
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.useSystemProperties
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager
  name: PoolingAsyncClientConnectionManager
  nameWithType: PoolingAsyncClientConnectionManager
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager
- uid: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build*
  name: build
  nameWithType: PoolingAsyncClientConnectionManagerBuilder.build
  fullName: org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManagerBuilder.build
  package: org.apache.hc.client5.http.impl.nio
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
