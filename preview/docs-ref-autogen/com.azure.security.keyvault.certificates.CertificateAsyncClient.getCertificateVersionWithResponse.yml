### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersionWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersionWithResponse"
name: "getCertificateVersionWithResponse"
nameWithType: "CertificateAsyncClient.getCertificateVersionWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersionWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersionWithResponse(String certificateName, String version)"
  name: "getCertificateVersionWithResponse(String certificateName, String version)"
  nameWithType: "CertificateAsyncClient.getCertificateVersionWithResponse(String certificateName, String version)"
  summary: "Gets information about the latest version of the specified certificate. This operation requires the certificates/get permission.\n\n**Code Samples**\n\nGets a specific version of the certificate in the key vault. Prints out the returned certificate details when a response has been received.\n\n```java\nString certificateVersion = \"6A385B124DEF4096AF1361A85B16C204\";\n certificateAsyncClient.getCertificateVersionWithResponse(\"certificateName\", certificateVersion)\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificateWithVersion ->\n         System.out.printf(\"Certificate is returned with name %s and secretId %s %n\",\n             certificateWithVersion.getValue().getProperties().getName(),\n             certificateWithVersion.getValue().getSecretId()));\n```"
  parameters:
  - description: "The name of the certificate to retrieve, cannot be null"
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the certificate to retrieve. If this is an empty String or null then latest version of the certificate is retrieved."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultCertificate>> getCertificateVersionWithResponse(String certificateName, String version)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the requested <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificate&text=KeyVaultCertificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
