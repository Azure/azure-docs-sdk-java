### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient"
fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient"
name: "BackendsClient"
nameWithType: "BackendsClient"
summary: "An instance of this class provides access to all the operations defined in Backends<wbr>Client."
syntax: "public interface BackendsClient"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.createOrUpdate(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters)"
  name: "createOrUpdate(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters)"
  nameWithType: "BackendsClient.createOrUpdate(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters)"
  summary: "Creates or Updates a backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContractInner createOrUpdate(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters)"
  desc: "Creates or Updates a backend."
  returns:
    description: "backend details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters, String ifMatch, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters, String ifMatch, Context context)"
  nameWithType: "BackendsClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters, String ifMatch, Context context)"
  summary: "Creates or Updates a backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendsCreateOrUpdateResponse createOrUpdateWithResponse(String resourceGroupName, String serviceName, String backendId, BackendContractInner parameters, String ifMatch, Context context)"
  desc: "Creates or Updates a backend."
  returns:
    description: "backend details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendsCreateOrUpdateResponse?alt=com.azure.resourcemanager.apimanagement.models.BackendsCreateOrUpdateResponse&text=BackendsCreateOrUpdateResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  nameWithType: "BackendsClient.delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  desc: "Deletes the specified backend."
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  nameWithType: "BackendsClient.deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  desc: "Deletes the specified backend."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.get(String resourceGroupName, String serviceName, String backendId)"
  name: "get(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "BackendsClient.get(String resourceGroupName, String serviceName, String backendId)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContractInner get(String resourceGroupName, String serviceName, String backendId)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "BackendsClient.getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  summary: "Gets the entity state (Etag) version of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  desc: "Gets the entity state (Etag) version of the backend specified by its identifier."
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  nameWithType: "BackendsClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  summary: "Gets the entity state (Etag) version of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendsGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  desc: "Gets the entity state (Etag) version of the backend specified by its identifier."
  returns:
    description: "the entity state (Etag) version of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendsGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.BackendsGetEntityTagResponse&text=BackendsGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  nameWithType: "BackendsClient.getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendsGetResponse getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendsGetResponse?alt=com.azure.resourcemanager.apimanagement.models.BackendsGetResponse&text=BackendsGetResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.listByService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.listByService(String resourceGroupName, String serviceName)"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "BackendsClient.listByService(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of backends in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackendContractInner> listByService(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of backends in the specified service instance."
  returns:
    description: "paged Backend list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  nameWithType: "BackendsClient.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  summary: "Lists a collection of backends in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| title | filter | ge, le, eq, ne, gt,\n     lt | substringof, contains, startswith, endswith |&lt;/br&gt;| url | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackendContractInner> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  desc: "Lists a collection of backends in the specified service instance."
  returns:
    description: "paged Backend list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.reconnect(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.reconnect(String resourceGroupName, String serviceName, String backendId)"
  name: "reconnect(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "BackendsClient.reconnect(String resourceGroupName, String serviceName, String backendId)"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reconnect(String resourceGroupName, String serviceName, String backendId)"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.reconnectWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.BackendReconnectContract,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  name: "reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  nameWithType: "BackendsClient.reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Reconnect request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendReconnectContract?alt=com.azure.resourcemanager.apimanagement.models.BackendReconnectContract&text=BackendReconnectContract\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.update(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters)"
  name: "update(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters)"
  nameWithType: "BackendsClient.update(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters)"
  summary: "Updates an existing backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters?alt=com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters&text=BackendUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContractInner update(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters)"
  desc: "Updates an existing backend."
  returns:
    description: "backend details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.BackendsClient.updateWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters, Context context)"
  name: "updateWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters, Context context)"
  nameWithType: "BackendsClient.updateWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters, Context context)"
  summary: "Updates an existing backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters?alt=com.azure.resourcemanager.apimanagement.models.BackendUpdateParameters&text=BackendUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendsUpdateResponse updateWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, BackendUpdateParameters parameters, Context context)"
  desc: "Updates an existing backend."
  returns:
    description: "backend details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendsUpdateResponse?alt=com.azure.resourcemanager.apimanagement.models.BackendsUpdateResponse&text=BackendsUpdateResponse\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in BackendsClient."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
