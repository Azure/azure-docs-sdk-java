### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.stringConverter*"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.stringConverter"
name: "stringConverter"
nameWithType: "Ints.stringConverter"
members:
- uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.stringConverter()"
  fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.stringConverter()"
  name: "stringConverter()"
  nameWithType: "Ints.stringConverter()"
  summary: "Returns a serializable converter object that converts between strings and integers using <xref uid=\"java.lang.Integer.decode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#decode\"></xref> and <xref uid=\"java.lang.Integer.toString*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#toString()\"></xref>. The returned converter throws <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumberFormatException\"></xref> if the input string is invalid.\n\n**Warning:** please see <xref uid=\"java.lang.Integer.decode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#decode\"></xref> to understand exactly how strings are parsed. For example, the string `\"0123\"` is treated as *octal* and converted to the value `83`."
  syntax: "public static Converter<String,Integer> stringConverter()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Converter?alt=com.azure.cosmos.implementation.guava25.base.Converter&text=Converter\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
