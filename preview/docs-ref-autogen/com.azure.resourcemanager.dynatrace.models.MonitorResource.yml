### YamlMime:JavaType
uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource"
fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource"
name: "MonitorResource"
nameWithType: "MonitorResource"
summary: "An immutable client-side representation of Monitor<wbr>Resource."
syntax: "public interface MonitorResource"
methods:
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.dynatraceEnvironmentProperties()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.dynatraceEnvironmentProperties()"
  name: "dynatraceEnvironmentProperties()"
  nameWithType: "MonitorResource.dynatraceEnvironmentProperties()"
  summary: "Gets the dynatrace<wbr>Environment<wbr>Properties property: Properties of the Dynatrace environment."
  modifiers:
  - "abstract"
  syntax: "public abstract DynatraceEnvironmentProperties dynatraceEnvironmentProperties()"
  desc: "Gets the dynatraceEnvironmentProperties property: Properties of the Dynatrace environment."
  returns:
    description: "the dynatraceEnvironmentProperties value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties?alt=com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties&text=DynatraceEnvironmentProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getAccountCredentials()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getAccountCredentials()"
  name: "getAccountCredentials()"
  nameWithType: "MonitorResource.getAccountCredentials()"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  syntax: "public abstract AccountInfoSecure getAccountCredentials()"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.AccountInfoSecure?alt=com.azure.resourcemanager.dynatrace.models.AccountInfoSecure&text=AccountInfoSecure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getAccountCredentialsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getAccountCredentialsWithResponse(Context context)"
  name: "getAccountCredentialsWithResponse(Context context)"
  nameWithType: "MonitorResource.getAccountCredentialsWithResponse(Context context)"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccountInfoSecure> getAccountCredentialsWithResponse(Context context)"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AccountInfoSecure?alt=com.azure.resourcemanager.dynatrace.models.AccountInfoSecure&text=AccountInfoSecure\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getSsoDetails()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getSsoDetails()"
  name: "getSsoDetails()"
  nameWithType: "MonitorResource.getSsoDetails()"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  syntax: "public abstract SsoDetailsResponse getSsoDetails()"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse&text=SsoDetailsResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getSsoDetailsWithResponse(com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getSsoDetailsWithResponse(SsoDetailsRequest request, Context context)"
  name: "getSsoDetailsWithResponse(SsoDetailsRequest request, Context context)"
  nameWithType: "MonitorResource.getSsoDetailsWithResponse(SsoDetailsRequest request, Context context)"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the get sso details request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest&text=SsoDetailsRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SsoDetailsResponse> getSsoDetailsWithResponse(SsoDetailsRequest request, Context context)"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse&text=SsoDetailsResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getVMHostPayload()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getVMHostPayload()"
  name: "getVMHostPayload()"
  nameWithType: "MonitorResource.getVMHostPayload()"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  syntax: "public abstract VMExtensionPayload getVMHostPayload()"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.VMExtensionPayload?alt=com.azure.resourcemanager.dynatrace.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getVMHostPayloadWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.getVMHostPayloadWithResponse(Context context)"
  name: "getVMHostPayloadWithResponse(Context context)"
  nameWithType: "MonitorResource.getVMHostPayloadWithResponse(Context context)"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VMExtensionPayload> getVMHostPayloadWithResponse(Context context)"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMExtensionPayload?alt=com.azure.resourcemanager.dynatrace.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.id()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.id()"
  name: "id()"
  nameWithType: "MonitorResource.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.identity()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.identity()"
  name: "identity()"
  nameWithType: "MonitorResource.identity()"
  summary: "Gets the identity property: The managed service identities assigned to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityProperties identity()"
  desc: "Gets the identity property: The managed service identities assigned to this resource."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.IdentityProperties?alt=com.azure.resourcemanager.dynatrace.models.IdentityProperties&text=IdentityProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.innerModel()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.innerModel()"
  name: "innerModel()"
  nameWithType: "MonitorResource.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>dynatrace.<wbr>fluent.<wbr>models.<wbr>Monitor<wbr>Resource<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitorResourceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.liftrResourceCategory()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.liftrResourceCategory()"
  name: "liftrResourceCategory()"
  nameWithType: "MonitorResource.liftrResourceCategory()"
  summary: "Gets the liftr<wbr>Resource<wbr>Category property: Liftr Resource category."
  modifiers:
  - "abstract"
  syntax: "public abstract LiftrResourceCategories liftrResourceCategory()"
  desc: "Gets the liftrResourceCategory property: Liftr Resource category."
  returns:
    description: "the liftrResourceCategory value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LiftrResourceCategories?alt=com.azure.resourcemanager.dynatrace.models.LiftrResourceCategories&text=LiftrResourceCategories\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.liftrResourcePreference()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.liftrResourcePreference()"
  name: "liftrResourcePreference()"
  nameWithType: "MonitorResource.liftrResourcePreference()"
  summary: "Gets the liftr<wbr>Resource<wbr>Preference property: The priority of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer liftrResourcePreference()"
  desc: "Gets the liftrResourcePreference property: The priority of the resource."
  returns:
    description: "the liftrResourcePreference value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listAppServices()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listAppServices()"
  name: "listAppServices()"
  nameWithType: "MonitorResource.listAppServices()"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices()"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AppServiceInfo?alt=com.azure.resourcemanager.dynatrace.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listAppServices(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listAppServices(Context context)"
  name: "listAppServices(Context context)"
  nameWithType: "MonitorResource.listAppServices(Context context)"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices(Context context)"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AppServiceInfo?alt=com.azure.resourcemanager.dynatrace.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listHosts()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listHosts()"
  name: "listHosts()"
  nameWithType: "MonitorResource.listHosts()"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<VMInfo> listHosts()"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMInfo?alt=com.azure.resourcemanager.dynatrace.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listHosts(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listHosts(Context context)"
  name: "listHosts(Context context)"
  nameWithType: "MonitorResource.listHosts(Context context)"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfo> listHosts(Context context)"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMInfo?alt=com.azure.resourcemanager.dynatrace.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listLinkableEnvironments(com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listLinkableEnvironments(LinkableEnvironmentRequest request)"
  name: "listLinkableEnvironments(LinkableEnvironmentRequest request)"
  nameWithType: "MonitorResource.listLinkableEnvironments(LinkableEnvironmentRequest request)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponse> listLinkableEnvironments(LinkableEnvironmentRequest request)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse&text=LinkableEnvironmentResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listLinkableEnvironments(com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listLinkableEnvironments(LinkableEnvironmentRequest request, Context context)"
  name: "listLinkableEnvironments(LinkableEnvironmentRequest request, Context context)"
  nameWithType: "MonitorResource.listLinkableEnvironments(LinkableEnvironmentRequest request, Context context)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponse> listLinkableEnvironments(LinkableEnvironmentRequest request, Context context)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse&text=LinkableEnvironmentResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listMonitoredResources()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listMonitoredResources()"
  name: "listMonitoredResources()"
  nameWithType: "MonitorResource.listMonitoredResources()"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources()"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitoredResource?alt=com.azure.resourcemanager.dynatrace.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listMonitoredResources(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.listMonitoredResources(Context context)"
  name: "listMonitoredResources(Context context)"
  nameWithType: "MonitorResource.listMonitoredResources(Context context)"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources(Context context)"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitoredResource?alt=com.azure.resourcemanager.dynatrace.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.location()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.location()"
  name: "location()"
  nameWithType: "MonitorResource.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.marketplaceSubscriptionStatus()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.marketplaceSubscriptionStatus()"
  name: "marketplaceSubscriptionStatus()"
  nameWithType: "MonitorResource.marketplaceSubscriptionStatus()"
  summary: "Gets the marketplace<wbr>Subscription<wbr>Status property: Marketplace subscription status."
  modifiers:
  - "abstract"
  syntax: "public abstract MarketplaceSubscriptionStatus marketplaceSubscriptionStatus()"
  desc: "Gets the marketplaceSubscriptionStatus property: Marketplace subscription status."
  returns:
    description: "the marketplaceSubscriptionStatus value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus?alt=com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus&text=MarketplaceSubscriptionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.monitoringStatus()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.monitoringStatus()"
  name: "monitoringStatus()"
  nameWithType: "MonitorResource.monitoringStatus()"
  summary: "Gets the monitoring<wbr>Status property: Status of the monitor."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitoringStatus monitoringStatus()"
  desc: "Gets the monitoringStatus property: Status of the monitor."
  returns:
    description: "the monitoringStatus value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitoringStatus?alt=com.azure.resourcemanager.dynatrace.models.MonitoringStatus&text=MonitoringStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.name()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.name()"
  name: "name()"
  nameWithType: "MonitorResource.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.planData()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.planData()"
  name: "planData()"
  nameWithType: "MonitorResource.planData()"
  summary: "Gets the plan<wbr>Data property: Billing plan information."
  modifiers:
  - "abstract"
  syntax: "public abstract PlanData planData()"
  desc: "Gets the planData property: Billing plan information."
  returns:
    description: "the planData value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.PlanData?alt=com.azure.resourcemanager.dynatrace.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.provisioningState()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.provisioningState()"
  name: "provisioningState()"
  nameWithType: "MonitorResource.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.ProvisioningState?alt=com.azure.resourcemanager.dynatrace.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.refresh()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.refresh()"
  name: "refresh()"
  nameWithType: "MonitorResource.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitorResource refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "MonitorResource.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResource refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.region()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.region()"
  name: "region()"
  nameWithType: "MonitorResource.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.regionName()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.regionName()"
  name: "regionName()"
  nameWithType: "MonitorResource.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.resourceGroupName()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "MonitorResource.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.systemData()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.systemData()"
  name: "systemData()"
  nameWithType: "MonitorResource.systemData()"
  summary: "Gets the system<wbr>Data property: System metadata for this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: System metadata for this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.tags()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.tags()"
  name: "tags()"
  nameWithType: "MonitorResource.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.type()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.type()"
  name: "type()"
  nameWithType: "MonitorResource.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.update()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.update()"
  name: "update()"
  nameWithType: "MonitorResource.update()"
  summary: "Begins update for the Monitor<wbr>Resource resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitorResource.Update update()"
  desc: "Begins update for the MonitorResource resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource.Update?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.MonitorResource.userInfo()"
  fullName: "com.azure.resourcemanager.dynatrace.models.MonitorResource.userInfo()"
  name: "userInfo()"
  nameWithType: "MonitorResource.userInfo()"
  summary: "Gets the user<wbr>Info property: User info."
  modifiers:
  - "abstract"
  syntax: "public abstract UserInfo userInfo()"
  desc: "Gets the userInfo property: User info."
  returns:
    description: "the userInfo value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.UserInfo?alt=com.azure.resourcemanager.dynatrace.models.UserInfo&text=UserInfo\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of MonitorResource."
metadata: {}
package: "com.azure.resourcemanager.dynatrace.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dynatrace:1.0.0-beta.1
