### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions
  id: RoleDefinitions
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models
  children:
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope(java.lang.String)
  - com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync(java.lang.String)
  langs:
  - java
  name: RoleDefinitions
  nameWithType: RoleDefinitions
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions
  type: Interface
  package: com.azure.resourcemanager.authorization.models
  summary: Entry point to role definition management API.
  syntax:
    content: public interface RoleDefinitions extends SupportsGettingById<RoleDefinition>, HasManager<AuthorizationManager>, HasInner<RoleDefinitionsClient>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.authorization.models.RoleDefinition>
  - com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.authorization.AuthorizationManager>
  - com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient>
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope(java.lang.String,java.lang.String)
  id: getByScope(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: getByScope(String scope, String name)
  nameWithType: RoleDefinitions.getByScope(String scope, String name)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope(String scope, String name)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: Gets the information about a role definition based on scope and name.
  syntax:
    content: public abstract RoleDefinition getByScope(String scope, String name)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    - id: name
      type: java.lang.String
      description: the name of the role definition
    return:
      type: com.azure.resourcemanager.authorization.models.RoleDefinition
      description: an immutable representation of the role definition
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName(java.lang.String,java.lang.String)
  id: getByScopeAndRoleName(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: getByScopeAndRoleName(String scope, String roleName)
  nameWithType: RoleDefinitions.getByScopeAndRoleName(String scope, String roleName)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName(String scope, String roleName)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: Gets the information about a role definition based on scope and name.
  syntax:
    content: public abstract RoleDefinition getByScopeAndRoleName(String scope, String roleName)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    - id: roleName
      type: java.lang.String
      description: the name of the role
    return:
      type: com.azure.resourcemanager.authorization.models.RoleDefinition
      description: an immutable representation of the role definition
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync(java.lang.String,java.lang.String)
  id: getByScopeAndRoleNameAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: getByScopeAndRoleNameAsync(String scope, String roleName)
  nameWithType: RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: Gets the information about a role definition based on scope and name.
  syntax:
    content: public abstract Mono<RoleDefinition> getByScopeAndRoleNameAsync(String scope, String roleName)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    - id: roleName
      type: java.lang.String
      description: the name of the role
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.models.RoleDefinition>
      description: an immutable representation of the role definition
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync(java.lang.String,java.lang.String)
  id: getByScopeAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: getByScopeAsync(String scope, String name)
  nameWithType: RoleDefinitions.getByScopeAsync(String scope, String name)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync(String scope, String name)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: Gets the information about a role definition based on scope and name.
  syntax:
    content: public abstract Mono<RoleDefinition> getByScopeAsync(String scope, String name)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    - id: name
      type: java.lang.String
      description: the name of the role definition
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.models.RoleDefinition>
      description: an immutable representation of the role definition
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope(java.lang.String)
  id: listByScope(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: listByScope(String scope)
  nameWithType: RoleDefinitions.listByScope(String scope)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope(String scope)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: List role definitions in a scope.
  syntax:
    content: public abstract PagedIterable<RoleDefinition> listByScope(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.models.RoleDefinition>
      description: a list of role definitions
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync(java.lang.String)
  id: listByScopeAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.models.RoleDefinitions
  langs:
  - java
  name: listByScopeAsync(String scope)
  nameWithType: RoleDefinitions.listByScopeAsync(String scope)
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync(String scope)
  overload: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.models
  summary: List role definitions in a scope.
  syntax:
    content: public abstract PagedFlux<RoleDefinition> listByScopeAsync(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope of the role definition
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.models.RoleDefinition>
      description: an observable of role definitions
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.models.RoleDefinition>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.models.RoleDefinition
    name: RoleDefinition
    fullName: com.azure.resourcemanager.authorization.models.RoleDefinition
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync*
  name: getByScopeAsync
  nameWithType: RoleDefinitions.getByScopeAsync
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAsync
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.resourcemanager.authorization.models.RoleDefinition
  name: RoleDefinition
  nameWithType: RoleDefinition
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinition
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope*
  name: getByScope
  nameWithType: RoleDefinitions.getByScope
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScope
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync*
  name: getByScopeAndRoleNameAsync
  nameWithType: RoleDefinitions.getByScopeAndRoleNameAsync
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleNameAsync
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName*
  name: getByScopeAndRoleName
  nameWithType: RoleDefinitions.getByScopeAndRoleName
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.getByScopeAndRoleName
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.models.RoleDefinition>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.models.RoleDefinition
    name: RoleDefinition
    fullName: com.azure.resourcemanager.authorization.models.RoleDefinition
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync*
  name: listByScopeAsync
  nameWithType: RoleDefinitions.listByScopeAsync
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScopeAsync
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.models.RoleDefinition>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.models.RoleDefinition
    name: RoleDefinition
    fullName: com.azure.resourcemanager.authorization.models.RoleDefinition
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope*
  name: listByScope
  nameWithType: RoleDefinitions.listByScope
  fullName: com.azure.resourcemanager.authorization.models.RoleDefinitions.listByScope
  package: com.azure.resourcemanager.authorization.models
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.authorization.AuthorizationManager>
  name: HasManager<AuthorizationManager>
  nameWithType: HasManager<AuthorizationManager>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.authorization.AuthorizationManager>
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.authorization.models.RoleDefinition>
  name: SupportsGettingById<RoleDefinition>
  nameWithType: SupportsGettingById<RoleDefinition>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.authorization.models.RoleDefinition>
- uid: com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient>
  name: HasInner<RoleDefinitionsClient>
  nameWithType: HasInner<RoleDefinitionsClient>
  fullName: com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient>
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager
  name: HasManager
  nameWithType: HasManager
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager
- uid: com.azure.resourcemanager.authorization.AuthorizationManager
  name: AuthorizationManager
  nameWithType: AuthorizationManager
  fullName: com.azure.resourcemanager.authorization.AuthorizationManager
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById
  name: SupportsGettingById
  nameWithType: SupportsGettingById
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById
- uid: com.azure.resourcemanager.resources.fluentcore.model.HasInner
  name: HasInner
  nameWithType: HasInner
  fullName: com.azure.resourcemanager.resources.fluentcore.model.HasInner
- uid: com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient
  name: RoleDefinitionsClient
  nameWithType: RoleDefinitionsClient
  fullName: com.azure.resourcemanager.authorization.fluent.RoleDefinitionsClient
