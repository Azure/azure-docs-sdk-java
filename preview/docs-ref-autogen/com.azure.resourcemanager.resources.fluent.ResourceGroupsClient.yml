### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  id: ResourceGroupsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent
  children:
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list()
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync()
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  - com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  langs:
  - java
  name: ResourceGroupsClient
  nameWithType: ResourceGroupsClient
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  type: Class
  package: com.azure.resourcemanager.resources.fluent
  summary: An instance of this class provides access to all the operations defined in ResourceGroups.
  syntax:
    content: public final class ResourceGroupsClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  id: ResourceGroupsClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: ResourceGroupsClient(ResourceManagementClient client)
  nameWithType: ResourceGroupsClient.ResourceGroupsClient(ResourceManagementClient client)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient(ResourceManagementClient client)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluent
  summary: Initializes an instance of ResourceGroupsClient.
  syntax:
    content: public ResourceGroupsClient(ResourceManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.resources.ResourceManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(java.lang.String)
  id: beginDelete(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName)
  nameWithType: ResourceGroupsClient.beginDelete(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.beginDelete(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPolling(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPolling(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public PollerFlux<PollResult<ResourceGroupExportResultInner>,ResourceGroupExportResultInner> beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: beginExportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public PollerFlux<PollResult<ResourceGroupExportResultInner>,ResourceGroupExportResultInner> beginExportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public ResourceGroupExportResultInner beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: beginExportTemplateWithoutPolling(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public ResourceGroupExportResultInner beginExportTemplateWithoutPolling(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<ResourceGroupExportResultInner> beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: beginExportTemplateWithoutPollingAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<ResourceGroupExportResultInner> beginExportTemplateWithoutPollingAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<Response<ResourceGroupExportResultInner>> beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: beginExportTemplateWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<Response<ResourceGroupExportResultInner>> beginExportTemplateWithoutPollingWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(java.lang.String)
  id: checkExistence(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistence(String resourceGroupName)
  nameWithType: ResourceGroupsClient.checkExistence(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public boolean checkExistence(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    return:
      type: boolean
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(java.lang.String,com.azure.core.util.Context)
  id: checkExistence(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistence(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.checkExistence(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public boolean checkExistence(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: boolean
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(java.lang.String)
  id: checkExistenceAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistenceAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.checkExistenceAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public Mono<Boolean> checkExistenceAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(java.lang.String,com.azure.core.util.Context)
  id: checkExistenceAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistenceAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.checkExistenceAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public Mono<Boolean> checkExistenceAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(java.lang.String)
  id: checkExistenceWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistenceWithResponseAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.checkExistenceWithResponseAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public Mono<Response<Boolean>> checkExistenceWithResponseAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: checkExistenceWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: checkExistenceWithResponseAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.checkExistenceWithResponseAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Checks whether a resource group exists.
  syntax:
    content: public Mono<Response<Boolean>> checkExistenceWithResponseAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to check. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  id: createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, ResourceGroupInner parameters)
  nameWithType: ResourceGroupsClient.createOrUpdate(String resourceGroupName, ResourceGroupInner parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(String resourceGroupName, ResourceGroupInner parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public ResourceGroupInner createOrUpdate(String resourceGroupName, ResourceGroupInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, ResourceGroupInner parameters, Context context)
  nameWithType: ResourceGroupsClient.createOrUpdate(String resourceGroupName, ResourceGroupInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate(String resourceGroupName, ResourceGroupInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public ResourceGroupInner createOrUpdate(String resourceGroupName, ResourceGroupInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  id: createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters)
  nameWithType: ResourceGroupsClient.createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public Mono<ResourceGroupInner> createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  nameWithType: ResourceGroupsClient.createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public Mono<ResourceGroupInner> createOrUpdateAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters)
  nameWithType: ResourceGroupsClient.createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  nameWithType: ResourceGroupsClient.createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Creates or updates a resource group.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> createOrUpdateWithResponseAsync(String resourceGroupName, ResourceGroupInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group to create or update. Can include alphanumeric,
             underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed
             characters.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: delete(String resourceGroupName)
  nameWithType: ResourceGroupsClient.delete(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public void delete(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: delete(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.delete(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public void delete(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.deleteAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.deleteAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(java.lang.String)
  id: deleteWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.deleteWithResponseAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.deleteWithResponseAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to delete. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.exportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public ResourceGroupExportResultInner exportTemplate(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: exportTemplate(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.exportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public ResourceGroupExportResultInner exportTemplate(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<ResourceGroupExportResultInner> exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: exportTemplateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<ResourceGroupExportResultInner> exportTemplateAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  id: exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  nameWithType: ResourceGroupsClient.exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  id: exportTemplateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ExportTemplateRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  nameWithType: ResourceGroupsClient.exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Captures the specified resource group as a template.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> exportTemplateWithResponseAsync(String resourceGroupName, ExportTemplateRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ExportTemplateRequest
      description: Export resource group template request parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource group export result.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: get(String resourceGroupName)
  nameWithType: ResourceGroupsClient.get(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public ResourceGroupInner get(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: get(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.get(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public ResourceGroupInner get(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: getAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.getAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public Mono<ResourceGroupInner> getAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: getAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.getAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public Mono<ResourceGroupInner> getAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(java.lang.String)
  id: getWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName)
  nameWithType: ResourceGroupsClient.getWithResponseAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> getWithResponseAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, Context context)
  nameWithType: ResourceGroupsClient.getWithResponseAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets a resource group.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> getWithResponseAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to get. The name is case insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: a resource group.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: list()
  nameWithType: ResourceGroupsClient.list()
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list()
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedIterable<ResourceGroupInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(java.lang.String,java.lang.Integer)
  id: list(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: list(String filter, Integer top)
  nameWithType: ResourceGroupsClient.list(String filter, Integer top)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(String filter, Integer top)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedIterable<ResourceGroupInner> list(String filter, Integer top)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: list(String filter, Integer top, Context context)
  nameWithType: ResourceGroupsClient.list(String filter, Integer top, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list(String filter, Integer top, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedIterable<ResourceGroupInner> list(String filter, Integer top, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listAsync()
  nameWithType: ResourceGroupsClient.listAsync()
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync()
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedFlux<ResourceGroupInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(java.lang.String,java.lang.Integer)
  id: listAsync(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listAsync(String filter, Integer top)
  nameWithType: ResourceGroupsClient.listAsync(String filter, Integer top)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(String filter, Integer top)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedFlux<ResourceGroupInner> listAsync(String filter, Integer top)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listAsync(String filter, Integer top, Context context)
  nameWithType: ResourceGroupsClient.listAsync(String filter, Integer top, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync(String filter, Integer top, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public PagedFlux<ResourceGroupInner> listAsync(String filter, Integer top, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: ResourceGroupsClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ResourceGroupInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: list of resource groups.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ResourceGroupsClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ResourceGroupInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: list of resource groups.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(java.lang.String,java.lang.Integer)
  id: listSinglePageAsync(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listSinglePageAsync(String filter, Integer top)
  nameWithType: ResourceGroupsClient.listSinglePageAsync(String filter, Integer top)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(String filter, Integer top)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public Mono<PagedResponse<ResourceGroupInner>> listSinglePageAsync(String filter, Integer top)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: listSinglePageAsync(String filter, Integer top, Context context)
  nameWithType: ResourceGroupsClient.listSinglePageAsync(String filter, Integer top, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync(String filter, Integer top, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all the resource groups for a subscription.
  syntax:
    content: public Mono<PagedResponse<ResourceGroupInner>> listSinglePageAsync(String filter, Integer top, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values.
             For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: all the resource groups for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  id: update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: update(String resourceGroupName, ResourceGroupPatchable parameters)
  nameWithType: ResourceGroupsClient.update(String resourceGroupName, ResourceGroupPatchable parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(String resourceGroupName, ResourceGroupPatchable parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public ResourceGroupInner update(String resourceGroupName, ResourceGroupPatchable parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  id: update(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: update(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  nameWithType: ResourceGroupsClient.update(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public ResourceGroupInner update(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  id: updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  nameWithType: ResourceGroupsClient.updateAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public Mono<ResourceGroupInner> updateAsync(String resourceGroupName, ResourceGroupPatchable parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  id: updateAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  nameWithType: ResourceGroupsClient.updateAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public Mono<ResourceGroupInner> updateAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  id: updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  nameWithType: ResourceGroupsClient.updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: resource group information.
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  id: updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourceGroupPatchable,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  nameWithType: ResourceGroupsClient.updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
  syntax:
    content: public Mono<Response<ResourceGroupInner>> updateWithResponseAsync(String resourceGroupName, ResourceGroupPatchable parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group to update. The name is case insensitive.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
      description: Resource group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
      description: resource group information.
references:
- uid: com.azure.resourcemanager.resources.ResourceManagementClient
  name: ResourceManagementClient
  nameWithType: ResourceManagementClient
  fullName: com.azure.resourcemanager.resources.ResourceManagementClient
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient*
  name: ResourceGroupsClient
  nameWithType: ResourceGroupsClient.ResourceGroupsClient
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.ResourceGroupsClient
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync*
  name: checkExistenceWithResponseAsync
  nameWithType: ResourceGroupsClient.checkExistenceWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<java.lang.Boolean>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync*
  name: checkExistenceAsync
  nameWithType: ResourceGroupsClient.checkExistenceAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistenceAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence*
  name: checkExistence
  nameWithType: ResourceGroupsClient.checkExistence
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.checkExistence
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  name: ResourceGroupInner
  nameWithType: ResourceGroupInner
  fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
    name: ResourceGroupInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ResourceGroupsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
    name: ResourceGroupInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ResourceGroupsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: ResourceGroupsClient.createOrUpdate
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.createOrUpdate
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ResourceGroupsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete*
  name: beginDelete
  nameWithType: ResourceGroupsClient.beginDelete
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDelete
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync*
  name: deleteAsync
  nameWithType: ResourceGroupsClient.deleteAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.deleteAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete*
  name: delete
  nameWithType: ResourceGroupsClient.delete
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.delete
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ResourceGroupsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync*
  name: getAsync
  nameWithType: ResourceGroupsClient.getAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.getAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get*
  name: get
  nameWithType: ResourceGroupsClient.get
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.get
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
  name: ResourceGroupPatchable
  nameWithType: ResourceGroupPatchable
  fullName: com.azure.resourcemanager.resources.models.ResourceGroupPatchable
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ResourceGroupsClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync*
  name: updateAsync
  nameWithType: ResourceGroupsClient.updateAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.updateAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update*
  name: update
  nameWithType: ResourceGroupsClient.update
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.update
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.models.ExportTemplateRequest
  name: ExportTemplateRequest
  nameWithType: ExportTemplateRequest
  fullName: com.azure.resourcemanager.resources.models.ExportTemplateRequest
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync*
  name: exportTemplateWithResponseAsync
  nameWithType: ResourceGroupsClient.exportTemplateWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
    name: ResourceGroupExportResultInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
    name: ResourceGroupExportResultInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate*
  name: beginExportTemplate
  nameWithType: ResourceGroupsClient.beginExportTemplate
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplate
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
    name: ResourceGroupExportResultInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync*
  name: exportTemplateAsync
  nameWithType: ResourceGroupsClient.exportTemplateAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplateAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  name: ResourceGroupExportResultInner
  nameWithType: ResourceGroupExportResultInner
  fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate*
  name: exportTemplate
  nameWithType: ResourceGroupsClient.exportTemplate
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.exportTemplate
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
    name: ResourceGroupInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ResourceGroupsClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
    name: ResourceGroupInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync*
  name: listAsync
  nameWithType: ResourceGroupsClient.listAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
    name: ResourceGroupInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list*
  name: list
  nameWithType: ResourceGroupsClient.list
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.list
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: ResourceGroupsClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.resources.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
    name: ResourceGroupExportResultInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync*
  name: beginExportTemplateWithoutPollingWithResponseAsync
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync*
  name: beginExportTemplateWithoutPollingAsync
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPollingAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPollingAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling*
  name: beginExportTemplateWithoutPolling
  nameWithType: ResourceGroupsClient.beginExportTemplateWithoutPolling
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.beginExportTemplateWithoutPolling
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ResourceGroupsClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ResourceGroupsClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
  name: ResourceGroupExportResultInner>,ResourceGroupExportResultInner
  nameWithType: ResourceGroupExportResultInner>,ResourceGroupExportResultInner
  fullName: com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner>,com.azure.resourcemanager.resources.fluent.inner.ResourceGroupExportResultInner
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
