### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer"
name: "AsPropertyTypeDeserializer"
nameWithType: "AsPropertyTypeDeserializer"
summary: "Type deserializer used with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"As#PROPERTY\"></xref> inclusion mechanism. Uses regular form (additional key/value entry before actual data) when typed object is expressed as JSON Object; otherwise behaves similar to how <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"As#WRAPPER_ARRAY\"></xref> works. Latter is used if JSON representation is polymorphic"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer"
constructors:
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo.As)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)"
fields:
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._inclusion"
methods:
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
