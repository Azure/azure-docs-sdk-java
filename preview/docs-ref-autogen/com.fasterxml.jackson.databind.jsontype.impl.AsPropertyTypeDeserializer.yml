### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  id: AsPropertyTypeDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._inclusion
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion()
  langs:
  - java
  name: AsPropertyTypeDeserializer
  nameWithType: AsPropertyTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Type deserializer used with <xref uid="" data-throw-if-not-resolved="false">As#PROPERTY</xref> inclusion mechanism. Uses regular form (additional key/value entry before actual data) when typed object is expressed as JSON Object; otherwise behaves similar to how <xref uid="" data-throw-if-not-resolved="false">As#WRAPPER_ARRAY</xref> works. Latter is used if JSON representation is polymorphic
  syntax:
    content: public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  id: AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  nameWithType: AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
    parameters:
    - id: bt
      type: com.fasterxml.jackson.databind.JavaType
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: typePropertyName
      type: java.lang.String
    - id: typeIdVisible
      type: boolean
    - id: defaultImpl
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  id: AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl, JsonTypeInfo.As inclusion)
  nameWithType: AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl, JsonTypeInfo.As inclusion)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl, JsonTypeInfo.As inclusion)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsPropertyTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl, JsonTypeInfo.As inclusion)
    parameters:
    - id: bt
      type: com.fasterxml.jackson.databind.JavaType
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: typePropertyName
      type: java.lang.String
    - id: typeIdVisible
      type: boolean
    - id: defaultImpl
      type: com.fasterxml.jackson.databind.JavaType
    - id: inclusion
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  id: AsPropertyTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: AsPropertyTypeDeserializer(AsPropertyTypeDeserializer src, BeanProperty property)
  nameWithType: AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(AsPropertyTypeDeserializer src, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer(AsPropertyTypeDeserializer src, BeanProperty property)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsPropertyTypeDeserializer(AsPropertyTypeDeserializer src, BeanProperty property)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  id: _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: _deserializeTypedForId(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  nameWithType: AsPropertyTypeDeserializer._deserializeTypedForId(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected Object _deserializeTypedForId(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: tb
      type: com.fasterxml.jackson.databind.util.TokenBuffer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  id: _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  nameWithType: AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected Object _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: tb
      type: com.fasterxml.jackson.databind.util.TokenBuffer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._inclusion
  id: _inclusion
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: _inclusion
  nameWithType: AsPropertyTypeDeserializer._inclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._inclusion
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final JsonTypeInfo.As _inclusion
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromAny(JsonParser p, DeserializationContext ctxt)
  nameWithType: AsPropertyTypeDeserializer.deserializeTypedFromAny(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to let this type deserializer handle deserialization of "typed" object, when value itself may have been serialized using any kind of JSON value (Array, Object, scalar). Should only be called if JSON serialization is polymorphic (not Java type); for example when using JSON node representation, or "untyped" Java object (which may be Map, Collection, wrapper/primitive etc).
  syntax:
    content: public Object deserializeTypedFromAny(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromObject(JsonParser p, DeserializationContext ctxt)
  nameWithType: AsPropertyTypeDeserializer.deserializeTypedFromObject(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: This is the trickiest thing to handle, since property we are looking for may be anywhere...
  syntax:
    content: public Object deserializeTypedFromObject(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  id: forProperty(com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: forProperty(BeanProperty prop)
  nameWithType: AsPropertyTypeDeserializer.forProperty(BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty(BeanProperty prop)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to create contextual version, to be used for values of given property. This may be the type itself (as is the case for bean properties), or values contained (for <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> valued properties).
  syntax:
    content: public TypeDeserializer forProperty(BeanProperty prop)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion()
  id: getTypeInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
  langs:
  - java
  name: getTypeInclusion()
  nameWithType: AsPropertyTypeDeserializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion()
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for type information inclusion method that deserializer uses; indicates how type information is (expected to be) embedded in JSON input.
  syntax:
    content: public JsonTypeInfo.As getTypeInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer*
  name: AsPropertyTypeDeserializer
  nameWithType: AsPropertyTypeDeserializer.AsPropertyTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.AsPropertyTypeDeserializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty*
  name: forProperty
  nameWithType: AsPropertyTypeDeserializer.forProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion*
  name: getTypeInclusion
  nameWithType: AsPropertyTypeDeserializer.getTypeInclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.getTypeInclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject*
  name: deserializeTypedFromObject
  nameWithType: AsPropertyTypeDeserializer.deserializeTypedFromObject
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.util.TokenBuffer
  name: TokenBuffer
  nameWithType: TokenBuffer
  fullName: com.fasterxml.jackson.databind.util.TokenBuffer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId*
  name: _deserializeTypedForId
  nameWithType: AsPropertyTypeDeserializer._deserializeTypedForId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl*
  name: _deserializeTypedUsingDefaultImpl
  nameWithType: AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny*
  name: deserializeTypedFromAny
  nameWithType: AsPropertyTypeDeserializer.deserializeTypedFromAny
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  name: AsArrayTypeDeserializer
  nameWithType: AsArrayTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._handleMissingTypeId(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._handleMissingTypeId(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  name: TypeDeserializerBase.getDefaultImpl()
  nameWithType: TypeDeserializerBase.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
  name: AsArrayTypeDeserializer._usesExternalId()
  nameWithType: AsArrayTypeDeserializer._usesExternalId()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer._locateTypeId(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer._locateTypeId(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  name: TypeDeserializerBase.baseTypeName()
  nameWithType: TypeDeserializerBase.baseTypeName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext)
  nameWithType: TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._handleUnknownTypeId(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._handleUnknownTypeId(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  name: TypeDeserializerBase.getPropertyName()
  nameWithType: TypeDeserializerBase.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  name: TypeDeserializerBase.getTypeIdResolver()
  nameWithType: TypeDeserializerBase.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  name: TypeDeserializerBase.toString()
  nameWithType: TypeDeserializerBase.toString()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  name: AsArrayTypeDeserializer.forProperty(BeanProperty)
  nameWithType: AsArrayTypeDeserializer.forProperty(BeanProperty)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
  name: AsArrayTypeDeserializer.getTypeInclusion()
  nameWithType: AsArrayTypeDeserializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._findDeserializer(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._findDeserializer(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  name: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext,Object)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext,Object)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  name: TypeDeserializerBase.baseType()
  nameWithType: TypeDeserializerBase.baseType()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer._deserialize(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer._deserialize(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: AsArrayTypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
