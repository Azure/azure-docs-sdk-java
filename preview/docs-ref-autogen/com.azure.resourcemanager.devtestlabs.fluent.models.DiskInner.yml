### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner"
fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner"
name: "DiskInner"
nameWithType: "DiskInner"
summary: "A Disk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DiskInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.DiskInner()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.DiskInner()"
  name: "DiskInner()"
  nameWithType: "DiskInner.DiskInner()"
  syntax: "public DiskInner()"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.createdDate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.createdDate()"
  name: "createdDate()"
  nameWithType: "DiskInner.createdDate()"
  summary: "Get the created<wbr>Date property: The creation date of the disk."
  syntax: "public OffsetDateTime createdDate()"
  desc: "Get the createdDate property: The creation date of the disk."
  returns:
    description: "the createdDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskBlobName()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskBlobName()"
  name: "diskBlobName()"
  nameWithType: "DiskInner.diskBlobName()"
  summary: "Get the disk<wbr>Blob<wbr>Name property: When backed by a blob, the name of the VHD blob without extension."
  syntax: "public String diskBlobName()"
  desc: "Get the diskBlobName property: When backed by a blob, the name of the VHD blob without extension."
  returns:
    description: "the diskBlobName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskSizeGiB()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskSizeGiB()"
  name: "diskSizeGiB()"
  nameWithType: "DiskInner.diskSizeGiB()"
  summary: "Get the disk<wbr>Size<wbr>GiB property: The size of the disk in Gibibytes."
  syntax: "public Integer diskSizeGiB()"
  desc: "Get the diskSizeGiB property: The size of the disk in Gibibytes."
  returns:
    description: "the diskSizeGiB value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskType()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskType()"
  name: "diskType()"
  nameWithType: "DiskInner.diskType()"
  summary: "Get the disk<wbr>Type property: The storage type for the disk (i.<wbr>e."
  syntax: "public StorageType diskType()"
  desc: "Get the diskType property: The storage type for the disk (i.e. Standard, Premium)."
  returns:
    description: "the diskType value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.StorageType?alt=com.azure.resourcemanager.devtestlabs.models.StorageType&text=StorageType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskUri()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.diskUri()"
  name: "diskUri()"
  nameWithType: "DiskInner.diskUri()"
  summary: "Get the disk<wbr>Uri property: When backed by a blob, the URI of underlying blob."
  syntax: "public String diskUri()"
  desc: "Get the diskUri property: When backed by a blob, the URI of underlying blob."
  returns:
    description: "the diskUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.hostCaching()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.hostCaching()"
  name: "hostCaching()"
  nameWithType: "DiskInner.hostCaching()"
  summary: "Get the host<wbr>Caching property: The host caching policy of the disk (i.<wbr>e."
  syntax: "public String hostCaching()"
  desc: "Get the hostCaching property: The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
  returns:
    description: "the hostCaching value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.leasedByLabVmId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.leasedByLabVmId()"
  name: "leasedByLabVmId()"
  nameWithType: "DiskInner.leasedByLabVmId()"
  summary: "Get the leased<wbr>ByLab<wbr>VmId property: The resource ID of the VM to which this disk is leased."
  syntax: "public String leasedByLabVmId()"
  desc: "Get the leasedByLabVmId property: The resource ID of the VM to which this disk is leased."
  returns:
    description: "the leasedByLabVmId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.managedDiskId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.managedDiskId()"
  name: "managedDiskId()"
  nameWithType: "DiskInner.managedDiskId()"
  summary: "Get the managed<wbr>Disk<wbr>Id property: When backed by managed disk, this is the ID of the compute disk resource."
  syntax: "public String managedDiskId()"
  desc: "Get the managedDiskId property: When backed by managed disk, this is the ID of the compute disk resource."
  returns:
    description: "the managedDiskId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.provisioningState()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DiskInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning status of the resource."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning status of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.storageAccountId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.storageAccountId()"
  name: "storageAccountId()"
  nameWithType: "DiskInner.storageAccountId()"
  summary: "Get the storage<wbr>Account<wbr>Id property: When backed by a blob, the storage account where the blob is."
  syntax: "public String storageAccountId()"
  desc: "Get the storageAccountId property: When backed by a blob, the storage account where the blob is."
  returns:
    description: "the storageAccountId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.uniqueIdentifier()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.uniqueIdentifier()"
  name: "uniqueIdentifier()"
  nameWithType: "DiskInner.uniqueIdentifier()"
  summary: "Get the unique<wbr>Identifier property: The unique immutable identifier of a resource (Guid)."
  syntax: "public String uniqueIdentifier()"
  desc: "Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)."
  returns:
    description: "the uniqueIdentifier value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.validate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.validate()"
  name: "validate()"
  nameWithType: "DiskInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskBlobName(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskBlobName(String diskBlobName)"
  name: "withDiskBlobName(String diskBlobName)"
  nameWithType: "DiskInner.withDiskBlobName(String diskBlobName)"
  summary: "Set the disk<wbr>Blob<wbr>Name property: When backed by a blob, the name of the VHD blob without extension."
  parameters:
  - description: "the diskBlobName value to set."
    name: "diskBlobName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withDiskBlobName(String diskBlobName)"
  desc: "Set the diskBlobName property: When backed by a blob, the name of the VHD blob without extension."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskSizeGiB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskSizeGiB(Integer diskSizeGiB)"
  name: "withDiskSizeGiB(Integer diskSizeGiB)"
  nameWithType: "DiskInner.withDiskSizeGiB(Integer diskSizeGiB)"
  summary: "Set the disk<wbr>Size<wbr>GiB property: The size of the disk in Gibibytes."
  parameters:
  - description: "the diskSizeGiB value to set."
    name: "diskSizeGiB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withDiskSizeGiB(Integer diskSizeGiB)"
  desc: "Set the diskSizeGiB property: The size of the disk in Gibibytes."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskType(com.azure.resourcemanager.devtestlabs.models.StorageType)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskType(StorageType diskType)"
  name: "withDiskType(StorageType diskType)"
  nameWithType: "DiskInner.withDiskType(StorageType diskType)"
  summary: "Set the disk<wbr>Type property: The storage type for the disk (i.<wbr>e."
  parameters:
  - description: "the diskType value to set."
    name: "diskType"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.StorageType?alt=com.azure.resourcemanager.devtestlabs.models.StorageType&text=StorageType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withDiskType(StorageType diskType)"
  desc: "Set the diskType property: The storage type for the disk (i.e. Standard, Premium)."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withDiskUri(String diskUri)"
  name: "withDiskUri(String diskUri)"
  nameWithType: "DiskInner.withDiskUri(String diskUri)"
  summary: "Set the disk<wbr>Uri property: When backed by a blob, the URI of underlying blob."
  parameters:
  - description: "the diskUri value to set."
    name: "diskUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withDiskUri(String diskUri)"
  desc: "Set the diskUri property: When backed by a blob, the URI of underlying blob."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withHostCaching(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withHostCaching(String hostCaching)"
  name: "withHostCaching(String hostCaching)"
  nameWithType: "DiskInner.withHostCaching(String hostCaching)"
  summary: "Set the host<wbr>Caching property: The host caching policy of the disk (i.<wbr>e."
  parameters:
  - description: "the hostCaching value to set."
    name: "hostCaching"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withHostCaching(String hostCaching)"
  desc: "Set the hostCaching property: The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withLeasedByLabVmId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withLeasedByLabVmId(String leasedByLabVmId)"
  name: "withLeasedByLabVmId(String leasedByLabVmId)"
  nameWithType: "DiskInner.withLeasedByLabVmId(String leasedByLabVmId)"
  summary: "Set the leased<wbr>ByLab<wbr>VmId property: The resource ID of the VM to which this disk is leased."
  parameters:
  - description: "the leasedByLabVmId value to set."
    name: "leasedByLabVmId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withLeasedByLabVmId(String leasedByLabVmId)"
  desc: "Set the leasedByLabVmId property: The resource ID of the VM to which this disk is leased."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "DiskInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withManagedDiskId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withManagedDiskId(String managedDiskId)"
  name: "withManagedDiskId(String managedDiskId)"
  nameWithType: "DiskInner.withManagedDiskId(String managedDiskId)"
  summary: "Set the managed<wbr>Disk<wbr>Id property: When backed by managed disk, this is the ID of the compute disk resource."
  parameters:
  - description: "the managedDiskId value to set."
    name: "managedDiskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withManagedDiskId(String managedDiskId)"
  desc: "Set the managedDiskId property: When backed by managed disk, this is the ID of the compute disk resource."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withStorageAccountId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withStorageAccountId(String storageAccountId)"
  name: "withStorageAccountId(String storageAccountId)"
  nameWithType: "DiskInner.withStorageAccountId(String storageAccountId)"
  summary: "Set the storage<wbr>Account<wbr>Id property: When backed by a blob, the storage account where the blob is."
  parameters:
  - description: "the storageAccountId value to set."
    name: "storageAccountId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskInner withStorageAccountId(String storageAccountId)"
  desc: "Set the storageAccountId property: When backed by a blob, the storage account where the blob is."
  returns:
    description: "the DiskInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "DiskInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DiskInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.DiskInner&text=DiskInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Disk."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
