### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.math.LongMath.mod*"
fullName: "com.azure.cosmos.implementation.guava25.math.LongMath.mod"
name: "mod"
nameWithType: "LongMath.mod"
members:
- uid: "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long,int)"
  fullName: "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long x, int m)"
  name: "mod(long x, int m)"
  nameWithType: "LongMath.mod(long x, int m)"
  summary: "Returns `x mod m`, a non-negative value less than `m`. This differs from `x % m`, which might be negative.\n\nFor example:\n\n```java\nmod(7, 4) == 3\n mod(-7, 4) == 1\n mod(-1, 4) == 3\n mod(-8, 4) == 0\n mod(8, 4) == 0\n```"
  parameters:
  - name: "x"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "m"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int mod(long x, int m)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long,long)"
  fullName: "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long x, long m)"
  name: "mod(long x, long m)"
  nameWithType: "LongMath.mod(long x, long m)"
  summary: "Returns `x mod m`, a non-negative value less than `m`. This differs from `x % m`, which might be negative.\n\nFor example:\n\n```java\nmod(7, 4) == 3\n mod(-7, 4) == 1\n mod(-1, 4) == 3\n mod(-8, 4) == 0\n mod(8, 4) == 0\n```"
  parameters:
  - name: "x"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "m"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static long mod(long x, long m)"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.math"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
