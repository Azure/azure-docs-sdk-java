### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig*"
fullName: "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig"
name: "withConfig"
nameWithType: "BasicSerializerFactory.withConfig"
members:
- uid: "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
  fullName: "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(SerializerFactoryConfig config)"
  name: "withConfig(SerializerFactoryConfig config)"
  nameWithType: "BasicSerializerFactory.withConfig(SerializerFactoryConfig config)"
  summary: "Method used for creating a new instance of this factory, but with different configuration. Reason for specifying factory method (instead of plain constructor) is to allow proper sub-classing of factories.\n\nNote that custom sub-classes generally **must override** implementation of this method, as it usually requires instantiating a new instance of factory type. Check out javadocs for <xref uid=\"com.fasterxml.jackson.databind.ser.BeanSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.ser.BeanSerializerFactory\"></xref> for more details."
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig?alt=com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig&text=SerializerFactoryConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SerializerFactory withConfig(SerializerFactoryConfig config)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.SerializerFactory?alt=com.fasterxml.jackson.databind.ser.SerializerFactory&text=SerializerFactory\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
