### YamlMime:JavaType
uid: "com.azure.core.http.policy.ExponentialBackoff"
fullName: "com.azure.core.http.policy.ExponentialBackoff"
name: "ExponentialBackoff"
nameWithType: "ExponentialBackoff"
summary: "A truncated exponential backoff implementation of <xref uid=\"com.azure.core.http.policy.RetryStrategy\" data-throw-if-not-resolved=\"false\">RetryStrategy</xref> that has a delay duration that exponentially increases with each retry attempt until an upper bound is reached after which every retry attempt is delayed by the provided max delay duration."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ExponentialBackoff implements RetryStrategy"
constructors:
- "com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff()"
- "com.azure.core.http.policy.ExponentialBackoff.ExponentialBackoff(int,java.time.Duration,java.time.Duration)"
methods:
- "com.azure.core.http.policy.ExponentialBackoff.calculateRetryDelay(int)"
- "com.azure.core.http.policy.ExponentialBackoff.getMaxRetries()"
type: "class"
implements:
- "<xref href=\"com.azure.core.http.policy.RetryStrategy?alt=com.azure.core.http.policy.RetryStrategy&text=RetryStrategy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.3.0-beta.1
