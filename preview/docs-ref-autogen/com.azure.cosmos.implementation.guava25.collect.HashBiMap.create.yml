### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.HashBiMap.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.HashBiMap<K,V>.<K,V>create"
name: "<K,V>create"
nameWithType: "HashBiMap<K,V>.<K,V>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashBiMap<K,V>.<K,V>create()"
  name: "<K,V>create()"
  nameWithType: "HashBiMap<K,V>.<K,V>create()"
  summary: "Returns a new, empty `HashBiMap` with the default initial capacity (16)."
  syntax: "public static HashBiMap<K,V> <K,V>create()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashBiMap?alt=com.azure.cosmos.implementation.guava25.collect.HashBiMap&text=HashBiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create(int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashBiMap<K,V>.<K,V>create(int expectedSize)"
  name: "<K,V>create(int expectedSize)"
  nameWithType: "HashBiMap<K,V>.<K,V>create(int expectedSize)"
  summary: "Constructs a new, empty bimap with the specified expected size."
  parameters:
  - description: "the expected number of entries"
    name: "expectedSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static HashBiMap<K,V> <K,V>create(int expectedSize)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashBiMap?alt=com.azure.cosmos.implementation.guava25.collect.HashBiMap&text=HashBiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create(java.util.Map<? extends K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashBiMap<K,V>.<K,V>create(Map<? extends K,? extends V> map)"
  name: "<K,V>create(Map<? extends K,? extends V> map)"
  nameWithType: "HashBiMap<K,V>.<K,V>create(Map<? extends K,? extends V> map)"
  summary: "Constructs a new bimap containing initial values from `map`. The bimap is created with an initial capacity sufficient to hold the mappings in the specified map."
  parameters:
  - name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static HashBiMap<K,V> <K,V>create(Map<? extends K,? extends V> map)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashBiMap?alt=com.azure.cosmos.implementation.guava25.collect.HashBiMap&text=HashBiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
