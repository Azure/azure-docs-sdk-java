### YamlMime:JavaType
uid: "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl"
fullName: "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl"
name: "DataMigrationServiceImpl"
nameWithType: "DataMigrationServiceImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataMigrationServiceImpl implements DataMigrationService, DataMigrationService.Definition, DataMigrationService.Update"
methods:
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.apply()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.checkStatus()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.checkStatusWithResponse(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.create()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.etag()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.id()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.innerModel()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.kind()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.location()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.name()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.nestedCheckNameAvailability(com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.nestedCheckNameAvailabilityWithResponse(com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.provisioningState()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.publicKey()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.refresh()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.region()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.regionName()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.sku()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.start()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.start(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.stop()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.stop(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.tags()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.type()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.update()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.virtualSubnetId()"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withEtag(java.lang.String)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withKind(java.lang.String)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withPublicKey(java.lang.String)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withSku(com.azure.resourcemanager.datamigration.models.ServiceSku)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.datamigration.implementation.DataMigrationServiceImpl.withVirtualSubnetId(java.lang.String)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService.Definition?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService.Update?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService&text=DataMigrationService\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.datamigration.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datamigration:1.0.0-beta.1
