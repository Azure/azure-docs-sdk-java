### YamlMime:JavaEnum
uid: "org.apache.commons.codec.language.bm.RuleType"
fullName: "org.apache.commons.codec.language.bm.RuleType"
name: "RuleType"
nameWithType: "RuleType"
summary: "Types of rule."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum RuleType extends Enum<RuleType>"
fields:
- uid: "org.apache.commons.codec.language.bm.RuleType.APPROX"
  fullName: "org.apache.commons.codec.language.bm.RuleType.APPROX"
  name: "APPROX"
  nameWithType: "RuleType.APPROX"
  summary: "Approximate rules, which will lead to the largest number of phonetic interpretations."
- uid: "org.apache.commons.codec.language.bm.RuleType.EXACT"
  fullName: "org.apache.commons.codec.language.bm.RuleType.EXACT"
  name: "EXACT"
  nameWithType: "RuleType.EXACT"
  summary: "Exact rules, which will lead to a minimum number of phonetic interpretations."
- uid: "org.apache.commons.codec.language.bm.RuleType.RULES"
  fullName: "org.apache.commons.codec.language.bm.RuleType.RULES"
  name: "RULES"
  nameWithType: "RuleType.RULES"
  summary: "For internal use only. Please use <xref uid=\"org.apache.commons.codec.language.bm.RuleType.APPROX\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#APPROX\"></xref> or <xref uid=\"org.apache.commons.codec.language.bm.RuleType.EXACT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#EXACT\"></xref>."
methods:
- uid: "org.apache.commons.codec.language.bm.RuleType.getName()"
  fullName: "org.apache.commons.codec.language.bm.RuleType.getName()"
  name: "getName()"
  nameWithType: "RuleType.getName()"
  summary: "Gets the rule name."
  syntax: "public String getName()"
  returns:
    description: "the rule name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.language.bm.RuleType.valueOf(java.lang.String)"
  fullName: "org.apache.commons.codec.language.bm.RuleType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "RuleType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RuleType valueOf(String name)"
  returns:
    type: "<xref href=\"org.apache.commons.codec.language.bm.RuleType?alt=org.apache.commons.codec.language.bm.RuleType&text=RuleType\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.language.bm.RuleType.values()"
  fullName: "org.apache.commons.codec.language.bm.RuleType.values()"
  name: "values()"
  nameWithType: "RuleType.values()"
  syntax: "public static RuleType[] values()"
  returns:
    type: "<xref href=\"org.apache.commons.codec.language.bm.RuleType?alt=org.apache.commons.codec.language.bm.RuleType&text=RuleType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "org.apache.commons.codec.language.bm"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
