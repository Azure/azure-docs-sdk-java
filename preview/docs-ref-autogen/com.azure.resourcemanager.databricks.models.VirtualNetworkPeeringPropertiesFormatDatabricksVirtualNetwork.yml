### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
name: "VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
nameWithType: "VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
summary: "The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
constructors:
- "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork()"
methods:
- "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork.id()"
- "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork.validate()"
- "com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork.withId(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.databricks.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.1
