### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply*"
fullName: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply"
name: "apply"
nameWithType: "PeeringRegisteredPrefixImpl.apply"
members:
- uid: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply()"
  fullName: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply()"
  name: "apply()"
  nameWithType: "PeeringRegisteredPrefixImpl.apply()"
  summary: "Executes the update request."
  syntax: "public PeeringRegisteredPrefix apply()"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.implementation.PeeringRegisteredPrefixImpl.apply(Context context)"
  name: "apply(Context context)"
  nameWithType: "PeeringRegisteredPrefixImpl.apply(Context context)"
  summary: "Executes the update request."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringRegisteredPrefix apply(Context context)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
