### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException"
fullName: "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException"
name: "MqttServerUnavailableException"
nameWithType: "MqttServerUnavailableException"
summary: "This exception is thrown when an MQTT Connection Return code of 0x03 is encountered when opening an MQTT connection In the context of IoT, this exception may be encountered when trying to connect to a disabled device [ MQTT Connect Return Code Documentation][MQTT Connect Return Code Documentation]\n\n\n[MQTT Connect Return Code Documentation]: http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/csprd02/mqtt-v3.1.1-csprd02.html#_Toc385349771"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Throwable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Exception\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.ProtocolException\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.device.exceptions.TransportException.getIotHubService()"
- "com.microsoft.azure.sdk.iot.device.exceptions.TransportException.isRetryable()"
- "com.microsoft.azure.sdk.iot.device.exceptions.TransportException.setIotHubService(com.microsoft.azure.sdk.iot.device.exceptions.TransportException.IotHubService)"
- "com.microsoft.azure.sdk.iot.device.exceptions.TransportException.setRetryable(boolean)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- "java.lang.Throwable.fillInStackTrace()"
- "java.lang.Throwable.getCause()"
- "java.lang.Throwable.getLocalizedMessage()"
- "java.lang.Throwable.getMessage()"
- "java.lang.Throwable.getStackTrace()"
- "java.lang.Throwable.getSuppressed()"
- "java.lang.Throwable.initCause(java.lang.Throwable)"
- "java.lang.Throwable.printStackTrace()"
- "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- "java.lang.Throwable.toString()"
syntax: "public class MqttServerUnavailableException extends ProtocolException"
constructors:
- "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException.MqttServerUnavailableException()"
- "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException.MqttServerUnavailableException(java.lang.String)"
- "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException.MqttServerUnavailableException(java.lang.String,java.lang.Throwable)"
- "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttServerUnavailableException.MqttServerUnavailableException(java.lang.Throwable)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
