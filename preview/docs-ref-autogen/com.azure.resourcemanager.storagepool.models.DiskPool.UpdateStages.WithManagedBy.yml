### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagepool.models.DiskPool.UpdateStages.WithManagedBy"
fullName: "com.azure.resourcemanager.storagepool.models.DiskPool.UpdateStages.WithManagedBy"
name: "DiskPool.UpdateStages.WithManagedBy"
nameWithType: "DiskPool.UpdateStages.WithManagedBy"
summary: "The stage of the Disk<wbr>Pool update allowing to specify managed<wbr>By."
syntax: "public static interface DiskPool.UpdateStages.WithManagedBy"
methods:
- uid: "com.azure.resourcemanager.storagepool.models.DiskPool.UpdateStages.WithManagedBy.withManagedBy(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagepool.models.DiskPool.UpdateStages.WithManagedBy.withManagedBy(String managedBy)"
  name: "withManagedBy(String managedBy)"
  nameWithType: "DiskPool.UpdateStages.WithManagedBy.withManagedBy(String managedBy)"
  summary: "Specifies the managed<wbr>By property: Azure resource id."
  modifiers:
  - "abstract"
  parameters:
  - description: "Azure resource id. Indicates if this resource is managed by another Azure resource."
    name: "managedBy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DiskPool.Update withManagedBy(String managedBy)"
  desc: "Specifies the managedBy property: Azure resource id. Indicates if this resource is managed by another Azure resource.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.storagepool.models.DiskPool.Update?alt=com.azure.resourcemanager.storagepool.models.DiskPool.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the DiskPool update allowing to specify managedBy."
metadata: {}
package: "com.azure.resourcemanager.storagepool.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagepool:1.0.0-beta.1
