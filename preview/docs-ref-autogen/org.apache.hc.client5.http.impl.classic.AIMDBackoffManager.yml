### YamlMime:JavaType
uid: "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager"
fullName: "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager"
name: "AIMDBackoffManager"
nameWithType: "AIMDBackoffManager"
summary: "The `AIMDBackoffManager` applies an additive increase, multiplicative decrease (AIMD) to managing a dynamic limit to the number of connections allowed to a given host. You may want to experiment with the settings for the cooldown periods and the backoff factor to get the adaptive behavior you want.\n\nGenerally speaking, shorter cooldowns will lead to more steady-state variability but faster reaction times, while longer cooldowns will lead to more stable equilibrium behavior but slower reaction times.\n\nSimilarly, higher backoff factors promote greater utilization of available capacity at the expense of fairness among clients. Lower backoff factors allow equal distribution of capacity among clients (fairness) to happen faster, at the expense of having more server capacity unused in the short term."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AIMDBackoffManager implements BackoffManager"
constructors:
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.AIMDBackoffManager(org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>)"
methods:
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.backOff(org.apache.hc.client5.http.HttpRoute)"
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.probe(org.apache.hc.client5.http.HttpRoute)"
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.setBackoffFactor(double)"
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.setCoolDown(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.classic.AIMDBackoffManager.setPerHostConnectionCap(int)"
type: "class"
implements:
- "<xref href=\"org.apache.hc.client5.http.classic.BackoffManager?alt=org.apache.hc.client5.http.classic.BackoffManager&text=BackoffManager\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.hc.client5.http.impl.classic"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
