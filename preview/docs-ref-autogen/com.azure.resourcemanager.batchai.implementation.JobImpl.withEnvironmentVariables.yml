### YamlMime:JavaMember
uid: "com.azure.resourcemanager.batchai.implementation.JobImpl.withEnvironmentVariables*"
fullName: "com.azure.resourcemanager.batchai.implementation.JobImpl.withEnvironmentVariables"
name: "withEnvironmentVariables"
nameWithType: "JobImpl.withEnvironmentVariables"
members:
- uid: "com.azure.resourcemanager.batchai.implementation.JobImpl.withEnvironmentVariables(java.util.List<com.azure.resourcemanager.batchai.models.EnvironmentVariable>)"
  fullName: "com.azure.resourcemanager.batchai.implementation.JobImpl.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  name: "withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  nameWithType: "JobImpl.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  summary: "Specifies the environmentVariables property: A list of user defined environment variables which will be setup for the job.."
  parameters:
  - name: "environmentVariables"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batchai.models.EnvironmentVariable?alt=com.azure.resourcemanager.batchai.models.EnvironmentVariable&text=EnvironmentVariable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobImpl withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.batchai.implementation.JobImpl?alt=com.azure.resourcemanager.batchai.implementation.JobImpl&text=JobImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.batchai.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
