### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  id: ForwardingMapEntry
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.ForwardingMapEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.setValue(V)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardToString()
  langs:
  - java
  name: ForwardingMapEntry<K,V>
  nameWithType: ForwardingMapEntry<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A map entry which forwards all its method calls to another map entry. Subclasses should override one or more methods to modify the behavior of the backing map entry as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingMapEntry` forward *indiscriminately* to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue" data-throw-if-not-resolved="false">#getValue</xref> alone *will not* change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals" data-throw-if-not-resolved="false">#equals</xref>, which can lead to unexpected behavior. In this case, you should override `equals` as well, either providing your own implementation, or delegating to the provided `standardEquals` method.


    Each of the `standard` methods, where appropriate, use <xref uid="com.azure.cosmos.implementation.guava25.base.Objects.equal*" data-throw-if-not-resolved="false">Objects#equal</xref> to test equality for both keys and values. This may not be the desired behavior for map implementations that use non-standard notions of key equality, such as the entry of a `SortedMap` whose comparator is not consistent with `equals`.


    The `standard` methods are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingMapEntry<K,V> extends ForwardingObject implements Map.Entry<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  implements:
  - java.util.Map.Entry<K,V>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.ForwardingMapEntry()
  id: ForwardingMapEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: ForwardingMapEntry()
  nameWithType: ForwardingMapEntry<K,V>.ForwardingMapEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.ForwardingMapEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.ForwardingMapEntry*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingMapEntry()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingMapEntry<K,V>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Map.Entry<K,V> delegate()
    return:
      type: java.util.Map.Entry<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: equals(Object object)
  nameWithType: ForwardingMapEntry<K,V>.equals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.equals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey()
  id: getKey()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: getKey()
  nameWithType: ForwardingMapEntry<K,V>.getKey()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.getKey()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public K getKey()
    return:
      type: K
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue()
  id: getValue()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: getValue()
  nameWithType: ForwardingMapEntry<K,V>.getValue()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.getValue()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V getValue()
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: hashCode()
  nameWithType: ForwardingMapEntry<K,V>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.setValue(V)
  id: setValue(V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: setValue(V value)
  nameWithType: ForwardingMapEntry<K,V>.setValue(V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.setValue(V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.setValue*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V setValue(V value)
    parameters:
    - id: value
      type: V
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardEquals(java.lang.Object)
  id: standardEquals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: standardEquals(Object object)
  nameWithType: ForwardingMapEntry<K,V>.standardEquals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardEquals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardEquals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals(java.lang.Object)" data-throw-if-not-resolved="false">#equals(Object)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey()" data-throw-if-not-resolved="false">#getKey()</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue()" data-throw-if-not-resolved="false">#getValue()</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals(java.lang.Object)" data-throw-if-not-resolved="false">#equals(Object)</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardEquals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardHashCode()
  id: standardHashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: standardHashCode()
  nameWithType: ForwardingMapEntry<K,V>.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardHashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardHashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode()" data-throw-if-not-resolved="false">#hashCode()</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey()" data-throw-if-not-resolved="false">#getKey()</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue()" data-throw-if-not-resolved="false">#getValue()</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode()" data-throw-if-not-resolved="false">#hashCode()</xref> to forward to this implementation.
  syntax:
    content: protected int standardHashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardToString()
  id: standardToString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry
  langs:
  - java
  name: standardToString()
  nameWithType: ForwardingMapEntry<K,V>.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardToString()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardToString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.toString" data-throw-if-not-resolved="false">#toString</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey" data-throw-if-not-resolved="false">#getKey</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue" data-throw-if-not-resolved="false">#getValue</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals" data-throw-if-not-resolved="false">#equals</xref> to forward to this implementation.
  syntax:
    content: protected String standardToString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.ForwardingMapEntry*
  name: ForwardingMapEntry
  nameWithType: ForwardingMapEntry<K,V>.ForwardingMapEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.ForwardingMapEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map.Entry<K,V>
  spec.java:
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.delegate*
  name: delegate
  nameWithType: ForwardingMapEntry<K,V>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getKey*
  name: getKey
  nameWithType: ForwardingMapEntry<K,V>.getKey
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.getKey
  package: com.azure.cosmos.implementation.guava25.collect
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.getValue*
  name: getValue
  nameWithType: ForwardingMapEntry<K,V>.getValue
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.getValue
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.setValue*
  name: setValue
  nameWithType: ForwardingMapEntry<K,V>.setValue
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.setValue
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.equals*
  name: equals
  nameWithType: ForwardingMapEntry<K,V>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.hashCode*
  name: hashCode
  nameWithType: ForwardingMapEntry<K,V>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardEquals*
  name: standardEquals
  nameWithType: ForwardingMapEntry<K,V>.standardEquals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardEquals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardHashCode*
  name: standardHashCode
  nameWithType: ForwardingMapEntry<K,V>.standardHashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardHashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry.standardToString*
  name: standardToString
  nameWithType: ForwardingMapEntry<K,V>.standardToString
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMapEntry<K,V>.standardToString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  name: ForwardingObject
  nameWithType: ForwardingObject
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  name: ForwardingObject.delegate()
  nameWithType: ForwardingObject.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
