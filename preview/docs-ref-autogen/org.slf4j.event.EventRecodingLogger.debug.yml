### YamlMime:JavaMember
uid: "org.slf4j.event.EventRecodingLogger.debug*"
fullName: "org.slf4j.event.EventRecodingLogger.debug"
name: "debug"
nameWithType: "EventRecodingLogger.debug"
members:
- uid: "org.slf4j.event.EventRecodingLogger.debug(java.lang.String)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(String msg)"
  name: "debug(String msg)"
  nameWithType: "EventRecodingLogger.debug(String msg)"
  summary: "Log a message at the DEBUG level."
  parameters:
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(String msg)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(String format, Object arg)"
  name: "debug(String format, Object arg)"
  nameWithType: "EventRecodingLogger.debug(String format, Object arg)"
  summary: "Log a message at the DEBUG level according to the specified format and argument.\n\nThis form avoids superfluous object creation when the logger is disabled for the DEBUG level."
  parameters:
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(String format, Object arg)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(String format, Object arg1, Object arg2)"
  name: "debug(String format, Object arg1, Object arg2)"
  nameWithType: "EventRecodingLogger.debug(String format, Object arg1, Object arg2)"
  summary: "Log a message at the DEBUG level according to the specified format and arguments.\n\nThis form avoids superfluous object creation when the logger is disabled for the DEBUG level."
  parameters:
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg1"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg2"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(String format, Object arg1, Object arg2)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object...)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(String format, Object[] arguments)"
  name: "debug(String format, Object[] arguments)"
  nameWithType: "EventRecodingLogger.debug(String format, Object[] arguments)"
  summary: "Log a message at the DEBUG level according to the specified format and arguments.\n\nThis form avoids superfluous string concatenation when the logger is disabled for the DEBUG level. However, this variant incurs the hidden (and relatively small) cost of creating an `Object[]` before invoking the method, even if this logger is disabled for DEBUG. The variants taking <xref uid=\"org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"one\"></xref> and <xref uid=\"org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"two\"></xref> arguments exist solely in order to avoid this hidden cost."
  parameters:
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arguments"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void debug(String format, Object[] arguments)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Throwable)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(String msg, Throwable t)"
  name: "debug(String msg, Throwable t)"
  nameWithType: "EventRecodingLogger.debug(String msg, Throwable t)"
  summary: "Log an exception (throwable) at the DEBUG level with an accompanying message."
  parameters:
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "t"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(String msg, Throwable t)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(org.slf4j.Marker,java.lang.String)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(Marker marker, String msg)"
  name: "debug(Marker marker, String msg)"
  nameWithType: "EventRecodingLogger.debug(Marker marker, String msg)"
  summary: "Log a message with the specific Marker at the DEBUG level."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(Marker marker, String msg)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(Marker marker, String format, Object arg)"
  name: "debug(Marker marker, String format, Object arg)"
  nameWithType: "EventRecodingLogger.debug(Marker marker, String format, Object arg)"
  summary: "This method is similar to <xref uid=\"org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#debug(String, Object)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(Marker marker, String format, Object arg)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(Marker marker, String format, Object arg1, Object arg2)"
  name: "debug(Marker marker, String format, Object arg1, Object arg2)"
  nameWithType: "EventRecodingLogger.debug(Marker marker, String format, Object arg1, Object arg2)"
  summary: "This method is similar to <xref uid=\"org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#debug(String, Object, Object)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg1"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "arg2"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(Marker marker, String format, Object arg1, Object arg2)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(Marker marker, String format, Object[] arguments)"
  name: "debug(Marker marker, String format, Object[] arguments)"
  nameWithType: "EventRecodingLogger.debug(Marker marker, String format, Object[] arguments)"
  summary: "This method is similar to <xref uid=\"org.slf4j.event.EventRecodingLogger.debug*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#debug(String, Object...)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "arguments"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void debug(Marker marker, String format, Object[] arguments)"
- uid: "org.slf4j.event.EventRecodingLogger.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
  fullName: "org.slf4j.event.EventRecodingLogger.debug(Marker marker, String msg, Throwable t)"
  name: "debug(Marker marker, String msg, Throwable t)"
  nameWithType: "EventRecodingLogger.debug(Marker marker, String msg, Throwable t)"
  summary: "This method is similar to <xref uid=\"org.slf4j.event.EventRecodingLogger.debug(java.lang.String,java.lang.Throwable)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#debug(String, Throwable)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "t"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void debug(Marker marker, String msg, Throwable t)"
type: "method"
metadata: {}
package: "org.slf4j.event"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
