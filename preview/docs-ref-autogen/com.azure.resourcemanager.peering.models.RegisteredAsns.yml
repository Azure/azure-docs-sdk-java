### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.RegisteredAsns"
fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns"
name: "RegisteredAsns"
nameWithType: "RegisteredAsns"
summary: "Resource collection API of Registered<wbr>Asns."
syntax: "public interface RegisteredAsns"
methods:
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.define(String name)"
  name: "define(String name)"
  nameWithType: "RegisteredAsns.define(String name)"
  summary: "Begins definition for a new Peering<wbr>Registered<wbr>Asn resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredAsn.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new PeeringRegisteredAsn resource."
  returns:
    description: "the first stage of the new PeeringRegisteredAsn definition."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.Blank?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.delete(String resourceGroupName, String peeringName, String registeredAsnName)"
  name: "delete(String resourceGroupName, String peeringName, String registeredAsnName)"
  nameWithType: "RegisteredAsns.delete(String resourceGroupName, String peeringName, String registeredAsnName)"
  summary: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered ASN."
    name: "registeredAsnName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringName, String registeredAsnName)"
  desc: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "RegisteredAsns.deleteById(String id)"
  summary: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "RegisteredAsns.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.deleteWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  nameWithType: "RegisteredAsns.deleteWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  summary: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered ASN."
    name: "registeredAsnName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  desc: "Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.get(String resourceGroupName, String peeringName, String registeredAsnName)"
  name: "get(String resourceGroupName, String peeringName, String registeredAsnName)"
  nameWithType: "RegisteredAsns.get(String resourceGroupName, String peeringName, String registeredAsnName)"
  summary: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered ASN."
    name: "registeredAsnName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredAsn get(String resourceGroupName, String peeringName, String registeredAsnName)"
  desc: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered ASN with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.getById(String id)"
  name: "getById(String id)"
  nameWithType: "RegisteredAsns.getById(String id)"
  summary: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredAsn getById(String id)"
  desc: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered ASN with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "RegisteredAsns.getByIdWithResponse(String id, Context context)"
  summary: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredAsn> getByIdWithResponse(String id, Context context)"
  desc: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered ASN with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.getWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  name: "getWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  nameWithType: "RegisteredAsns.getWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  summary: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered ASN."
    name: "registeredAsnName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredAsn> getWithResponse(String resourceGroupName, String peeringName, String registeredAsnName, Context context)"
  desc: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered ASN with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.listByPeering(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.listByPeering(String resourceGroupName, String peeringName)"
  name: "listByPeering(String resourceGroupName, String peeringName)"
  nameWithType: "RegisteredAsns.listByPeering(String resourceGroupName, String peeringName)"
  summary: "Lists all registered ASNs under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredAsn> listByPeering(String resourceGroupName, String peeringName)"
  desc: "Lists all registered ASNs under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered ASNs."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredAsns.listByPeering(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredAsns.listByPeering(String resourceGroupName, String peeringName, Context context)"
  name: "listByPeering(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "RegisteredAsns.listByPeering(String resourceGroupName, String peeringName, Context context)"
  summary: "Lists all registered ASNs under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredAsn> listByPeering(String resourceGroupName, String peeringName, Context context)"
  desc: "Lists all registered ASNs under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered ASNs."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of RegisteredAsns."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
