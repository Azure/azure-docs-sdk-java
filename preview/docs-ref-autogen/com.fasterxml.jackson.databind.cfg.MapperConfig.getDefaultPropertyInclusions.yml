### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusions*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.getDefaultPropertyInclusions"
name: "getDefaultPropertyInclusions"
nameWithType: "MapperConfig<T>.getDefaultPropertyInclusions"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusions(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.getDefaultPropertyInclusions(Class<?> baseType, AnnotatedClass actualClass)"
  name: "getDefaultPropertyInclusions(Class<?> baseType, AnnotatedClass actualClass)"
  nameWithType: "MapperConfig<T>.getDefaultPropertyInclusions(Class<?> baseType, AnnotatedClass actualClass)"
  summary: "Helper method that may be called to see if there are property inclusion definitions from annotations (via <xref uid=\"com.fasterxml.jackson.databind.introspect.AnnotatedClass\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnnotatedClass\"></xref>). TODO: config override."
  parameters:
  - name: "baseType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "actualClass"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.AnnotatedClass?alt=com.fasterxml.jackson.databind.introspect.AnnotatedClass&text=AnnotatedClass\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract JsonIncludeProperties.Value getDefaultPropertyInclusions(Class<?> baseType, AnnotatedClass actualClass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonIncludeProperties.Value?alt=com.fasterxml.jackson.annotation.JsonIncludeProperties.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
