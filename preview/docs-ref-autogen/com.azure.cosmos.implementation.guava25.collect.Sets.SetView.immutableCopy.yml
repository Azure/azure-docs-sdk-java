### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.immutableCopy*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView<E>.immutableCopy"
name: "immutableCopy"
nameWithType: "Sets.SetView<E>.immutableCopy"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.immutableCopy()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView<E>.immutableCopy()"
  name: "immutableCopy()"
  nameWithType: "Sets.SetView<E>.immutableCopy()"
  summary: "Returns an immutable copy of the current contents of this set view. Does not support null elements.\n\n**Warning:** this may have unexpected results if a backing set of this view uses a nonstandard notion of equivalence, for example if it is a <xref uid=\"java.util.TreeSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TreeSet\"></xref> using a comparator that is inconsistent with <xref uid=\"java.lang.Object.equals(java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals(Object)\"></xref>."
  syntax: "public ImmutableSet<E> immutableCopy()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
