### YamlMime:JavaMember
uid: "com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess*"
fullName: "com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess"
name: "withAllowVirtualNetworkAccess"
nameWithType: "VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess"
members:
- uid: "com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  name: "withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  nameWithType: "VirtualNetworkPeeringImpl.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  summary: "Specifies the allowVirtualNetworkAccess property: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.."
  parameters:
  - name: "allowVirtualNetworkAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringImpl withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl?alt=com.azure.resourcemanager.databricks.implementation.VirtualNetworkPeeringImpl&text=VirtualNetworkPeeringImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.databricks.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.1
