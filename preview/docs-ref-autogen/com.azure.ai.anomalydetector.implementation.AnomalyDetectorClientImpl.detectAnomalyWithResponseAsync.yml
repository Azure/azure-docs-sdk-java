### YamlMime:JavaMember
uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync*"
fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync"
name: "detectAnomalyWithResponseAsync"
nameWithType: "AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync"
members:
- uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(java.util.UUID,com.azure.ai.anomalydetector.models.DetectionRequest)"
  fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest)"
  name: "detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest)"
  nameWithType: "AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest)"
  summary: "Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Detect anomaly request."
    name: "detectionRequest"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectionRequest?alt=com.azure.ai.anomalydetector.models.DetectionRequest&text=DetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DetectAnomalyResponse> detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.DetectAnomalyResponse?alt=com.azure.ai.anomalydetector.models.DetectAnomalyResponse&text=DetectAnomalyResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(java.util.UUID,com.azure.ai.anomalydetector.models.DetectionRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest, Context context)"
  name: "detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest, Context context)"
  nameWithType: "AnomalyDetectorClientImpl.detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest, Context context)"
  summary: "Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Detect anomaly request."
    name: "detectionRequest"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectionRequest?alt=com.azure.ai.anomalydetector.models.DetectionRequest&text=DetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DetectAnomalyResponse> detectAnomalyWithResponseAsync(UUID modelId, DetectionRequest detectionRequest, Context context)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.DetectAnomalyResponse?alt=com.azure.ai.anomalydetector.models.DetectAnomalyResponse&text=DetectAnomalyResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.anomalydetector.implementation"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.2
