### YamlMime:JavaType
uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services"
fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services"
name: "Services"
nameWithType: "Services"
summary: "Type representing Services."
syntax: "public interface Services"
methods:
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.appplatform.v2020_07_01.NameAvailabilityParameters)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  name: "checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  nameWithType: "Services.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region"
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the operation."
    name: "availabilityParameters"
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.NameAvailabilityParameters?alt=com.microsoft.azure.management.appplatform.v2020_07_01.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<NameAvailability> checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.NameAvailability?alt=com.microsoft.azure.management.appplatform.v2020_07_01.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.createOrUpdateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "Services.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Create a new Service or update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the create or update operation"
    name: "resource"
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner?alt=com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResource> createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Create a new Service or update an exiting Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.deleteAsync(String resourceGroupName, String serviceName)"
  name: "deleteAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Services.deleteAsync(String resourceGroupName, String serviceName)"
  summary: "Operation to delete a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName)"
  desc: "Operation to delete a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.disableTestEndpointAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  name: "disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Services.disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  summary: "Disable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable disableTestEndpointAsync(String resourceGroupName, String serviceName)"
  desc: "Disable test endpoint functionality for a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.enableTestEndpointAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  name: "enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Services.enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  summary: "Enable test endpoint functionality for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TestKeys> enableTestEndpointAsync(String resourceGroupName, String serviceName)"
  desc: "Enable test endpoint functionality for a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys?alt=com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Services.getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  summary: "Get a Service and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResource> getByResourceGroupAsync(String resourceGroupName, String serviceName)"
  desc: "Get a Service and its properties."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listAsync()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listAsync()"
  name: "listAsync()"
  nameWithType: "Services.listAsync()"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResource> listAsync()"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listByResourceGroupAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listByResourceGroupAsync(String resourceGroupName)"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "Services.listByResourceGroupAsync(String resourceGroupName)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResource> listByResourceGroupAsync(String resourceGroupName)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listTestKeysAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.listTestKeysAsync(String resourceGroupName, String serviceName)"
  name: "listTestKeysAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Services.listTestKeysAsync(String resourceGroupName, String serviceName)"
  summary: "List test keys for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TestKeys> listTestKeysAsync(String resourceGroupName, String serviceName)"
  desc: "List test keys for a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys?alt=com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.regenerateTestKeyAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.appplatform.v2020_07_01.TestKeyType)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)"
  name: "regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)"
  nameWithType: "Services.regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)"
  summary: "Regenerate a test key for a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the test key. Possible values include: 'Primary', 'Secondary'"
    name: "keyType"
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.TestKeyType?alt=com.microsoft.azure.management.appplatform.v2020_07_01.TestKeyType&text=TestKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TestKeys> regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)"
  desc: "Regenerate a test key for a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys?alt=com.microsoft.azure.management.appplatform.v2020_07_01.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.updateAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Services.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  name: "updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  nameWithType: "Services.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  summary: "Operation to update an exiting Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the update operation"
    name: "resource"
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner?alt=com.microsoft.azure.management.appplatform.v2020_07_01.implementation.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResource> updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)"
  desc: "Operation to update an exiting Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Services."
metadata: {}
package: "com.microsoft.azure.management.appplatform.v2020_07_01"
artifact: com.microsoft.azure.appplatform.v2020_07_01:azure-mgmt-appplatform:1.0.0-beta
