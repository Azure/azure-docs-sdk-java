### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar*"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar"
name: "deserializeTypedFromScalar"
nameWithType: "AsArrayTypeDeserializer.deserializeTypedFromScalar"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)"
  name: "deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)"
  nameWithType: "AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)"
  summary: "Method called to let this type deserializer handle deserialization of \"typed\" object, when value itself is serialized as a scalar JSON value (something other than Array or Object), regardless of Java type. Method needs to figure out intended polymorphic type, locate <xref uid=\"com.fasterxml.jackson.databind.JsonDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonDeserializer\"></xref> to use, and call it with JSON data to deserializer (which does not contain type information)."
  overridden: "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  parameters:
  - name: "jp"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
