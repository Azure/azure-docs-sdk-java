### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.TypeBase
  id: TypeBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.TypeBase.TypeBase(com.fasterxml.jackson.databind.type.TypeBase)
  - com.fasterxml.jackson.databind.type.TypeBase.TypeBase(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.type.TypeBase._bindings
  - com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  - com.fasterxml.jackson.databind.type.TypeBase._superClass
  - com.fasterxml.jackson.databind.type.TypeBase._superInterfaces
  - com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  - com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  - com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  - com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  - com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  langs:
  - java
  name: TypeBase
  nameWithType: TypeBase
  fullName: com.fasterxml.jackson.databind.type.TypeBase
  type: Class
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public abstract class TypeBase extends JavaType implements JsonSerializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.type.ResolvedType
  - com.fasterxml.jackson.databind.JavaType
  implements:
  - com.fasterxml.jackson.databind.JsonSerializable
  inheritedMembers:
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  - com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  - com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.containedType(int)
  - com.fasterxml.jackson.databind.JavaType.containedTypeCount()
  - com.fasterxml.jackson.databind.JavaType.containedTypeName(int)
  - com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  - com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.getBindings()
  - com.fasterxml.jackson.databind.JavaType.getContentType()
  - com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JavaType.getInterfaces()
  - com.fasterxml.jackson.databind.JavaType.getKeyType()
  - com.fasterxml.jackson.databind.JavaType.getParameterSource()
  - com.fasterxml.jackson.databind.JavaType.getRawClass()
  - com.fasterxml.jackson.databind.JavaType.getReferencedType()
  - com.fasterxml.jackson.databind.JavaType.getSuperClass()
  - com.fasterxml.jackson.databind.JavaType.hasContentType()
  - com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  - com.fasterxml.jackson.databind.JavaType.hasHandlers()
  - com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  - com.fasterxml.jackson.databind.JavaType.hashCode()
  - com.fasterxml.jackson.databind.JavaType.isAbstract()
  - com.fasterxml.jackson.databind.JavaType.isArrayType()
  - com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  - com.fasterxml.jackson.databind.JavaType.isConcrete()
  - com.fasterxml.jackson.databind.JavaType.isContainerType()
  - com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  - com.fasterxml.jackson.databind.JavaType.isEnumType()
  - com.fasterxml.jackson.databind.JavaType.isFinal()
  - com.fasterxml.jackson.databind.JavaType.isInterface()
  - com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  - com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  - com.fasterxml.jackson.databind.JavaType.isPrimitive()
  - com.fasterxml.jackson.databind.JavaType.isThrowable()
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.JavaType.toString()
  - com.fasterxml.jackson.databind.JavaType.useStaticType()
  - com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  - com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.TypeBase.TypeBase(com.fasterxml.jackson.databind.type.TypeBase)
  id: TypeBase(com.fasterxml.jackson.databind.type.TypeBase)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: TypeBase(TypeBase base)
  nameWithType: TypeBase.TypeBase(TypeBase base)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.TypeBase(TypeBase base)
  overload: com.fasterxml.jackson.databind.type.TypeBase.TypeBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: Copy-constructor used when refining/upgrading type instances.
  syntax:
    content: protected TypeBase(TypeBase base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.type.TypeBase
- uid: com.fasterxml.jackson.databind.type.TypeBase.TypeBase(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  id: TypeBase(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: TypeBase(Class<?> raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int hash, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: TypeBase.TypeBase(Class<?> raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int hash, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.TypeBase(Class<?> raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int hash, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.type.TypeBase.TypeBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: Main constructor to use by extending classes.
  syntax:
    content: protected TypeBase(Class<?> raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int hash, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: raw
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: hash
      type: int
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBase._bindings
  id: _bindings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: _bindings
  nameWithType: TypeBase._bindings
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bindings
  type: Field
  package: com.fasterxml.jackson.databind.type
  summary: Bindings in effect for this type instance; possibly empty. Needed when resolving types declared in members of this type (if any).
  syntax:
    content: protected final TypeBindings _bindings
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  id: _bogusSuperClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: _bogusSuperClass(Class<?> cls)
  nameWithType: TypeBase._bogusSuperClass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Internal helper method used to figure out nominal super-class for deprecated factory methods / constructors, where we are not given properly resolved supertype hierarchy. Will basically give \`JavaType\` for \`java.lang.Object\` for classes other than \`java.lafgn.Object\`; null for others.
  syntax:
    content: protected static JavaType _bogusSuperClass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  id: _classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: _classSignature(Class<?> cls, StringBuilder sb, boolean trailingSemicolon)
  nameWithType: TypeBase._classSignature(Class<?> cls, StringBuilder sb, boolean trailingSemicolon)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(Class<?> cls, StringBuilder sb, boolean trailingSemicolon)
  overload: com.fasterxml.jackson.databind.type.TypeBase._classSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected static StringBuilder _classSignature(Class<?> cls, StringBuilder sb, boolean trailingSemicolon)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: sb
      type: java.lang.StringBuilder
    - id: trailingSemicolon
      type: boolean
      description: >-
        Whether to add trailing semicolon for non-primitive
           (reference) types or not
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.TypeBase._superClass
  id: _superClass
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: _superClass
  nameWithType: TypeBase._superClass
  fullName: com.fasterxml.jackson.databind.type.TypeBase._superClass
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final JavaType _superClass
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBase._superInterfaces
  id: _superInterfaces
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: _superInterfaces
  nameWithType: TypeBase._superInterfaces
  fullName: com.fasterxml.jackson.databind.type.TypeBase._superInterfaces
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final JavaType[] _superInterfaces
    return:
      type: com.fasterxml.jackson.databind.JavaType[]
- uid: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  id: buildCanonicalName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: buildCanonicalName()
  nameWithType: TypeBase.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  overload: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected String buildCanonicalName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  id: containedType(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: containedType(int index)
  nameWithType: TypeBase.containedType(int index)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedType(int index)
  overload: com.fasterxml.jackson.databind.type.TypeBase.containedType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing definitions of contained ("child") types.
  syntax:
    content: public JavaType containedType(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  id: containedTypeCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: containedTypeCount()
  nameWithType: TypeBase.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  overload: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for checking how many contained types this type has. Contained types are usually generic types, so that generic Maps have 2 contained types.
  syntax:
    content: public int containedTypeCount()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  id: containedTypeName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: containedTypeName(int index)
  nameWithType: TypeBase.containedTypeName(int index)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int index)
  overload: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing name of type variable in indicated position. If no name is bound, will use placeholders (derived from 0-based index); if no type variable or argument exists with given index, null is returned.
  syntax:
    content: public String containedTypeName(int index)
    parameters:
    - id: index
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  id: findSuperType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: findSuperType(Class<?> rawTarget)
  nameWithType: TypeBase.findSuperType(Class<?> rawTarget)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(Class<?> rawTarget)
  overload: com.fasterxml.jackson.databind.type.TypeBase.findSuperType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method that may be called to find representation of given type within type hierarchy of this type: either this type (if this type has given erased type), one of its supertypes that has the erased types, or null if target is neither this type or any of its supertypes.'
  syntax:
    content: public final JavaType findSuperType(Class<?> rawTarget)
    parameters:
    - id: rawTarget
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  id: findTypeParameters(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: findTypeParameters(Class<?> expType)
  nameWithType: TypeBase.findTypeParameters(Class<?> expType)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(Class<?> expType)
  overload: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method that may be used to find paramaterization this type has for given type-erased generic target type.
  syntax:
    content: public JavaType[] findTypeParameters(Class<?> expType)
    parameters:
    - id: expType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType[]
- uid: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  id: getBindings()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: getBindings()
  nameWithType: TypeBase.getBindings()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  overload: com.fasterxml.jackson.databind.type.TypeBase.getBindings*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public TypeBindings getBindings()
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  id: getErasedSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: getErasedSignature(StringBuilder sb)
  nameWithType: TypeBase.getErasedSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public abstract StringBuilder getErasedSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  id: getGenericSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: getGenericSignature(StringBuilder sb)
  nameWithType: TypeBase.getGenericSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public abstract StringBuilder getGenericSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  id: getInterfaces()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: getInterfaces()
  nameWithType: TypeBase.getInterfaces()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  overload: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Accessor for finding fully resolved interfaces this type implements, if any; empty array if none.
  syntax:
    content: public List<JavaType> getInterfaces()
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
- uid: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  id: getSuperClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: getSuperClass()
  nameWithType: TypeBase.getSuperClass()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  overload: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Accessor for finding fully resolved parent class of this type, if it has one; null if not.
  syntax:
    content: public JavaType getSuperClass()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: serialize(JsonGenerator gen, SerializerProvider provider)
  nameWithType: TypeBase.serialize(JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serialize(JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.type.TypeBase.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Serialization method called when no additional type information is to be included in serialization.
  syntax:
    content: public void serialize(JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: TypeBase.serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: >-
    Serialization method called when additional type information is expected to be included in serialization, for deserialization to use.


    Usually implementation consists of a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypePrefix</xref> followed by serialization of contents, followed by a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypeSuffix</xref>). Details of the type id argument to pass depend on shape of JSON Object used (Array, Object or scalar like String/Number/Boolean).


    Note that some types (most notably, "natural" types: String, Integer, Double and Boolean) never include type information.
  syntax:
    content: public void serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  id: toCanonical()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBase
  langs:
  - java
  name: toCanonical()
  nameWithType: TypeBase.toCanonical()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  overload: com.fasterxml.jackson.databind.type.TypeBase.toCanonical*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method that can be used to serialize type into form from which it can be fully deserialized from at a later point (using `TypeFactory` from mapper package). For simple types this is same as calling <xref uid="java.lang.Class.getName" data-throw-if-not-resolved="false">Class#getName</xref>, but for structured types it may additionally contain type information about contents.
  syntax:
    content: public String toCanonical()
    return:
      type: java.lang.String
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBase.TypeBase*
  name: TypeBase
  nameWithType: TypeBase.TypeBase
  fullName: com.fasterxml.jackson.databind.type.TypeBase.TypeBase
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBase.toCanonical*
  name: toCanonical
  nameWithType: TypeBase.toCanonical
  fullName: com.fasterxml.jackson.databind.type.TypeBase.toCanonical
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName*
  name: buildCanonicalName
  nameWithType: TypeBase.buildCanonicalName
  fullName: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature*
  name: getGenericSignature
  nameWithType: TypeBase.getGenericSignature
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature*
  name: getErasedSignature
  nameWithType: TypeBase.getErasedSignature
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.getBindings*
  name: getBindings
  nameWithType: TypeBase.getBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getBindings
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount*
  name: containedTypeCount
  nameWithType: TypeBase.containedTypeCount
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedType*
  name: containedType
  nameWithType: TypeBase.containedType
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName*
  name: containedTypeName
  nameWithType: TypeBase.containedTypeName
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass*
  name: getSuperClass
  nameWithType: TypeBase.getSuperClass
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass
  package: com.fasterxml.jackson.databind.type
- uid: java.util.List<com.fasterxml.jackson.databind.JavaType>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces*
  name: getInterfaces
  nameWithType: TypeBase.getInterfaces
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType*
  name: findSuperType
  nameWithType: TypeBase.findSuperType
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters*
  name: findTypeParameters
  nameWithType: TypeBase.findTypeParameters
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters
  package: com.fasterxml.jackson.databind.type
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType*
  name: serializeWithType
  nameWithType: TypeBase.serializeWithType
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.type.TypeBase.serialize*
  name: serialize
  nameWithType: TypeBase.serialize
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serialize
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature*
  name: _classSignature
  nameWithType: TypeBase._classSignature
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass*
  name: _bogusSuperClass
  nameWithType: TypeBase._bogusSuperClass
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  name: JavaType.isJavaLangObject()
  nameWithType: JavaType.isJavaLangObject()
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass()
  name: JavaType.getRawClass()
  nameWithType: JavaType.getRawClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  name: JavaType.isCollectionLikeType()
  nameWithType: JavaType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JavaType.containedType(int)
  name: JavaType.containedType(int)
  nameWithType: JavaType.containedType(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedType(int)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType()
  name: JavaType.getKeyType()
  nameWithType: JavaType.getKeyType()
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType()
- uid: com.fasterxml.jackson.databind.JavaType.getBindings()
  name: JavaType.getBindings()
  nameWithType: JavaType.getBindings()
  fullName: com.fasterxml.jackson.databind.JavaType.getBindings()
- uid: com.fasterxml.jackson.databind.JavaType.isFinal()
  name: JavaType.isFinal()
  nameWithType: JavaType.isFinal()
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal()
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType()
  name: JavaType.isEnumType()
  nameWithType: JavaType.isEnumType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)
  name: JavaType.findTypeParameters(Class<?>)
  nameWithType: JavaType.findTypeParameters(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  name: JavaType.getContentTypeHandler()
  nameWithType: JavaType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withContentType(JavaType)
  nameWithType: JavaType.withContentType(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.JavaType.getInterfaces()
  name: JavaType.getInterfaces()
  nameWithType: JavaType.getInterfaces()
  fullName: com.fasterxml.jackson.databind.JavaType.getInterfaces()
- uid: com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)
  name: JavaType.findSuperType(Class<?>)
  nameWithType: JavaType.findSuperType(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  name: JavaType.<T>getValueHandler()
  nameWithType: JavaType.<T>getValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.isInterface()
  name: JavaType.isInterface()
  nameWithType: JavaType.isInterface()
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  name: JavaType.<T>getTypeHandler()
  nameWithType: JavaType.<T>getTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  name: JavaType.getGenericSignature()
  nameWithType: JavaType.getGenericSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
- uid: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  name: JavaType.withTypeHandler(Object)
  nameWithType: JavaType.withTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  name: JavaType._narrow(Class<?>)
  nameWithType: JavaType._narrow(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete()
  name: JavaType.isConcrete()
  nameWithType: JavaType.isConcrete()
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete()
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  name: JavaType.forcedNarrowBy(Class<?>)
  nameWithType: JavaType.forcedNarrowBy(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.getSuperClass()
  name: JavaType.getSuperClass()
  nameWithType: JavaType.getSuperClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getSuperClass()
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeName(int)
  name: JavaType.containedTypeName(int)
  nameWithType: JavaType.containedTypeName(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeName(int)
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  name: JavaType.isPrimitive()
  nameWithType: JavaType.isPrimitive()
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive()
- uid: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  name: JavaType.equals(Object)
  nameWithType: JavaType.equals(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.getContentType()
  name: JavaType.getContentType()
  nameWithType: JavaType.getContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType()
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  name: JavaType.getReferencedType()
  nameWithType: JavaType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType()
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withHandlersFrom(JavaType)
  nameWithType: JavaType.withHandlersFrom(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  name: JavaType.containedTypeOrUnknown(int)
  nameWithType: JavaType.containedTypeOrUnknown(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  name: JavaType.hasGenericTypes()
  nameWithType: JavaType.hasGenericTypes()
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType()
  name: JavaType.useStaticType()
  nameWithType: JavaType.useStaticType()
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  name: ResolvedType.toCanonical()
  nameWithType: ResolvedType.toCanonical()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  name: ResolvedType.isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)
  name: JavaType.getGenericSignature(StringBuilder)
  nameWithType: JavaType.getGenericSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)
- uid: com.fasterxml.jackson.databind.JavaType.hashCode()
  name: JavaType.hashCode()
  nameWithType: JavaType.hashCode()
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode()
- uid: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  name: JavaType.withStaticTyping()
  nameWithType: JavaType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeCount()
  name: JavaType.containedTypeCount()
  nameWithType: JavaType.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeCount()
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  name: JavaType.getErasedSignature()
  nameWithType: JavaType.getErasedSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)
  name: JavaType.getErasedSignature(StringBuilder)
  nameWithType: JavaType.getErasedSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  nameWithType: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.hasContentType()
  name: JavaType.hasContentType()
  nameWithType: JavaType.hasContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.hasContentType()
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType()
  name: JavaType.isArrayType()
  nameWithType: JavaType.isArrayType()
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  name: JavaType.withContentTypeHandler(Object)
  nameWithType: JavaType.withContentTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSubTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSubTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  name: JavaType.hasHandlers()
  nameWithType: JavaType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers()
- uid: com.fasterxml.jackson.databind.JavaType.toString()
  name: JavaType.toString()
  nameWithType: JavaType.toString()
  fullName: com.fasterxml.jackson.databind.JavaType.toString()
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  name: JavaType.getContentValueHandler()
  nameWithType: JavaType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  name: JavaType.getParameterSource()
  nameWithType: JavaType.getParameterSource()
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource()
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  name: JavaType.isMapLikeType()
  nameWithType: JavaType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  name: JavaType.hasValueHandler()
  nameWithType: JavaType.hasValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  name: JavaType.withValueHandler(Object)
  nameWithType: JavaType.withValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isContainerType()
  name: JavaType.isContainerType()
  nameWithType: JavaType.isContainerType()
  fullName: com.fasterxml.jackson.databind.JavaType.isContainerType()
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract()
  name: JavaType.isAbstract()
  nameWithType: JavaType.isAbstract()
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract()
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable()
  name: JavaType.isThrowable()
  nameWithType: JavaType.isThrowable()
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable()
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  name: JavaType.hasRawClass(Class<?>)
  nameWithType: JavaType.hasRawClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSuperTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  name: JavaType.isEnumImplType()
  nameWithType: JavaType.isEnumImplType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  name: JavaType.withContentValueHandler(Object)
  nameWithType: JavaType.withContentValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class
  name: JavaType.findTypeParameters(Class
  nameWithType: JavaType.findTypeParameters(Class
  fullName: com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class
  name: JavaType.findSuperType(Class
  nameWithType: JavaType.findSuperType(Class
  fullName: com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class
- uid: T>getValueHandler()
  name: T>getValueHandler()
  nameWithType: T>getValueHandler()
  fullName: T>getValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.
  name: JavaType.
  nameWithType: JavaType.
  fullName: com.fasterxml.jackson.databind.JavaType.
- uid: T>getTypeHandler()
  name: T>getTypeHandler()
  nameWithType: T>getTypeHandler()
  fullName: T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
  name: JavaType._narrow(Class
  nameWithType: JavaType._narrow(Class
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
  name: JavaType.forcedNarrowBy(Class
  nameWithType: JavaType.forcedNarrowBy(Class
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
  name: JavaType.refine(Class
  nameWithType: JavaType.refine(Class
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: ?>,TypeBindings,JavaType,JavaType[])
  nameWithType: ?>,TypeBindings,JavaType,JavaType[])
  fullName: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
  name: JavaType.isTypeOrSubTypeOf(Class
  nameWithType: JavaType.isTypeOrSubTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
  name: JavaType.hasRawClass(Class
  nameWithType: JavaType.hasRawClass(Class
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
  name: JavaType.isTypeOrSuperTypeOf(Class
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
