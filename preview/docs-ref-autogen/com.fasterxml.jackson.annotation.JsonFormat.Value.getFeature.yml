### YamlMime:JavaMember
uid: "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature*"
fullName: "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature"
name: "getFeature"
nameWithType: "JsonFormat.Value.getFeature"
members:
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(JsonFormat.Feature f)"
  name: "getFeature(JsonFormat.Feature f)"
  nameWithType: "JsonFormat.Value.getFeature(JsonFormat.Feature f)"
  summary: "Accessor for checking whether this format value has specific setting for given feature. Result is 3-valued with either \\`null\\`, <xref uid=\"java.lang.Boolean.TRUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean#TRUE\"></xref> or <xref uid=\"java.lang.Boolean.FALSE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean#FALSE\"></xref>, indicating 'yes/no/dunno' choices, where \\`null\\` (\"dunno\") indicates that the default handling should be used based on global defaults, and there is no format override."
  parameters:
  - name: "f"
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonFormat.Feature?alt=com.fasterxml.jackson.annotation.JsonFormat.Feature&text=Feature\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Boolean getFeature(JsonFormat.Feature f)"
  returns:
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
