### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  id: BeanDeserializerBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Set<java.lang.String>,boolean,boolean)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.TEMP_PROPERTY_NAME
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._anySetter
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._arrayDelegateDeserializer
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._backRefs
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanProperties
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanType
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._externalTypeIdHandler
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignorableProps
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignoreAllUnknown
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._injectables
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._needViewProcesing
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._nonStandardCreation
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._objectIdReader
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._propertyBasedCreator
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._serializationShape
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._subDeserializers
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._unwrappedPropertyHandler
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._valueInstantiator
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase._vanillaProcessing
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference(java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(int)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty(java.lang.String)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown(boolean)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
  langs:
  - java
  name: BeanDeserializerBase
  nameWithType: BeanDeserializerBase
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: Base class for `BeanDeserializer`.
  syntax:
    content: public abstract class BeanDeserializerBase extends StdDeserializer<Object> implements ContextualDeserializer, ResolvableDeserializer, ValueInstantiator.Gettable, Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonDeserializer
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer
  implements:
  - com.fasterxml.jackson.databind.deser.ContextualDeserializer
  - com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  - com.fasterxml.jackson.databind.deser.ValueInstantiator.Gettable
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  - com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  - com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  - com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected BeanDeserializerBase(BeanDeserializerBase src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src, boolean ignoreAllUnknown)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, boolean ignoreAllUnknown)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, boolean ignoreAllUnknown)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected BeanDeserializerBase(BeanDeserializerBase src, boolean ignoreAllUnknown)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
    - id: ignoreAllUnknown
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src, BeanPropertyMap beanProps)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, BeanPropertyMap beanProps)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, BeanPropertyMap beanProps)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected BeanDeserializerBase(BeanDeserializerBase src, BeanPropertyMap beanProps)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
    - id: beanProps
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src, ObjectIdReader oir)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, ObjectIdReader oir)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, ObjectIdReader oir)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public BeanDeserializerBase(BeanDeserializerBase src, ObjectIdReader oir)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
    - id: oir
      type: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src, NameTransformer unwrapper)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, NameTransformer unwrapper)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, NameTransformer unwrapper)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected BeanDeserializerBase(BeanDeserializerBase src, NameTransformer unwrapper)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
    - id: unwrapper
      type: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set<java.lang.String>)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBase src, Set<String> ignorableProps)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, Set<String> ignorableProps)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBase src, Set<String> ignorableProps)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public BeanDeserializerBase(BeanDeserializerBase src, Set<String> ignorableProps)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
    - id: ignorableProps
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Set<java.lang.String>,boolean,boolean)
  id: BeanDeserializerBase(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Set<java.lang.String>,boolean,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: BeanDeserializerBase(BeanDeserializerBuilder builder, BeanDescription beanDesc, BeanPropertyMap properties, Map<String,SettableBeanProperty> backRefs, Set<String> ignorableProps, boolean ignoreAllUnknown, boolean hasViews)
  nameWithType: BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBuilder builder, BeanDescription beanDesc, BeanPropertyMap properties, Map<String,SettableBeanProperty> backRefs, Set<String> ignorableProps, boolean ignoreAllUnknown, boolean hasViews)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase(BeanDeserializerBuilder builder, BeanDescription beanDesc, BeanPropertyMap properties, Map<String,SettableBeanProperty> backRefs, Set<String> ignorableProps, boolean ignoreAllUnknown, boolean hasViews)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  summary: Constructor used when initially building a deserializer instance, given a <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder" data-throw-if-not-resolved="false">BeanDeserializerBuilder</xref> that contains configuration.
  syntax:
    content: protected BeanDeserializerBase(BeanDeserializerBuilder builder, BeanDescription beanDesc, BeanPropertyMap properties, Map<String,SettableBeanProperty> backRefs, Set<String> ignorableProps, boolean ignoreAllUnknown, boolean hasViews)
    parameters:
    - id: builder
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: properties
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    - id: backRefs
      type: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: ignorableProps
      type: java.util.Set<java.lang.String>
    - id: ignoreAllUnknown
      type: boolean
    - id: hasViews
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.TEMP_PROPERTY_NAME
  id: TEMP_PROPERTY_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: TEMP_PROPERTY_NAME
  nameWithType: BeanDeserializerBase.TEMP_PROPERTY_NAME
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.TEMP_PROPERTY_NAME
  type: Field
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected static final PropertyName TEMP_PROPERTY_NAME
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._anySetter
  id: _anySetter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _anySetter
  nameWithType: BeanDeserializerBase._anySetter
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._anySetter
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Fallback setter used for handling any properties that are not mapped to regular setters. If setter is not null, it will be called once for each such property.
  syntax:
    content: protected SettableAnyProperty _anySetter
    return:
      type: com.fasterxml.jackson.databind.deser.SettableAnyProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._arrayDelegateDeserializer
  id: _arrayDelegateDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _arrayDelegateDeserializer
  nameWithType: BeanDeserializerBase._arrayDelegateDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._arrayDelegateDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Deserializer that is used iff array-delegate-based creator is to be used for deserializing from JSON Object.
  syntax:
    content: protected JsonDeserializer<Object> _arrayDelegateDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._backRefs
  id: _backRefs
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _backRefs
  nameWithType: BeanDeserializerBase._backRefs
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._backRefs
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: We may also have one or more back reference fields (usually zero or one).
  syntax:
    content: protected final Map<String,SettableBeanProperty> _backRefs
    return:
      type: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanProperties
  id: _beanProperties
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _beanProperties
  nameWithType: BeanDeserializerBase._beanProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanProperties
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Mapping of property names to properties, built when all properties to use have been successfully resolved.
  syntax:
    content: protected final BeanPropertyMap _beanProperties
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanType
  id: _beanType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _beanType
  nameWithType: BeanDeserializerBase._beanType
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanType
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Declared type of the bean this deserializer handles.
  syntax:
    content: protected final JavaType _beanType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  id: _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _convertObjectId(JsonParser p, DeserializationContext ctxt, Object rawId, JsonDeserializer<Object> idDeser)
  nameWithType: BeanDeserializerBase._convertObjectId(JsonParser p, DeserializationContext ctxt, Object rawId, JsonDeserializer<Object> idDeser)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId(JsonParser p, DeserializationContext ctxt, Object rawId, JsonDeserializer<Object> idDeser)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method we need to do necessary conversion from whatever native object id type is, into declared type that Jackson internals expect. This may be simple cast (for String ids), or something more complicated; in latter case we may need to create bogus content buffer to allow use of id deserializer.
  syntax:
    content: protected Object _convertObjectId(JsonParser p, DeserializationContext ctxt, Object rawId, JsonDeserializer<Object> idDeser)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: rawId
      type: java.lang.Object
    - id: idDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer
  id: _delegateDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _delegateDeserializer
  nameWithType: BeanDeserializerBase._delegateDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Deserializer that is used iff delegate-based creator is to be used for deserializing from JSON Object.
  syntax:
    content: protected JsonDeserializer<Object> _delegateDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _deserializeUsingPropertyBased(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase._deserializeUsingPropertyBased(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected abstract Object _deserializeUsingPropertyBased(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._externalTypeIdHandler
  id: _externalTypeIdHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _externalTypeIdHandler
  nameWithType: BeanDeserializerBase._externalTypeIdHandler
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._externalTypeIdHandler
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Handler that we need iff any of properties uses external type id.
  syntax:
    content: protected ExternalTypeHandler _externalTypeIdHandler
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: _findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _findPropertyUnwrapper(DeserializationContext ctxt, SettableBeanProperty prop)
  nameWithType: BeanDeserializerBase._findPropertyUnwrapper(DeserializationContext ctxt, SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper(DeserializationContext ctxt, SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: 'Helper method called to see if given property might be so-called unwrapped property: these require special handling.'
  syntax:
    content: protected NameTransformer _findPropertyUnwrapper(DeserializationContext ctxt, SettableBeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.util.NameTransformer
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  id: _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _findSubclassDeserializer(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  nameWithType: BeanDeserializerBase._findSubclassDeserializer(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method called to (try to) locate deserializer for given sub-type of type that this deserializer handles.
  syntax:
    content: protected JsonDeserializer<Object> _findSubclassDeserializer(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    - id: unknownTokens
      type: com.fasterxml.jackson.databind.util.TokenBuffer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
  id: _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _handleTypedObjectId(JsonParser p, DeserializationContext ctxt, Object pojo, Object rawId)
  nameWithType: BeanDeserializerBase._handleTypedObjectId(JsonParser p, DeserializationContext ctxt, Object pojo, Object rawId)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId(JsonParser p, DeserializationContext ctxt, Object pojo, Object rawId)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Offlined method called to handle "native" Object Id that has been read and known to be associated with given deserialized POJO.
  syntax:
    content: protected Object _handleTypedObjectId(JsonParser p, DeserializationContext ctxt, Object pojo, Object rawId)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: pojo
      type: java.lang.Object
    - id: rawId
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignorableProps
  id: _ignorableProps
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _ignorableProps
  nameWithType: BeanDeserializerBase._ignorableProps
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignorableProps
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: 'In addition to properties that are set, we will also keep track of recognized but ignorable properties: these will be skipped without errors or warnings.'
  syntax:
    content: protected final Set<String> _ignorableProps
    return:
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignoreAllUnknown
  id: _ignoreAllUnknown
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _ignoreAllUnknown
  nameWithType: BeanDeserializerBase._ignoreAllUnknown
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignoreAllUnknown
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Flag that can be set to ignore and skip unknown properties. If set, will not throw an exception for unknown properties.
  syntax:
    content: protected final boolean _ignoreAllUnknown
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._injectables
  id: _injectables
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _injectables
  nameWithType: BeanDeserializerBase._injectables
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._injectables
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: List of <xref uid="com.fasterxml.jackson.databind.deser.impl.ValueInjector" data-throw-if-not-resolved="false">ValueInjector</xref>s, if any injectable values are expected by the bean; otherwise null. This includes injectors used for injecting values via setters and fields, but not ones passed through constructor parameters.
  syntax:
    content: protected final ValueInjector[] _injectables
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ValueInjector[]
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._needViewProcesing
  id: _needViewProcesing
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _needViewProcesing
  nameWithType: BeanDeserializerBase._needViewProcesing
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._needViewProcesing
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Flag that indicates that some aspect of deserialization depends on active view used (if any)
  syntax:
    content: protected final boolean _needViewProcesing
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._nonStandardCreation
  id: _nonStandardCreation
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _nonStandardCreation
  nameWithType: BeanDeserializerBase._nonStandardCreation
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._nonStandardCreation
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Flag that is set to mark cases where deserialization from Object value using otherwise "standard" property binding will need to use non-default creation method: namely, either "full" delegation (array-delegation does not apply), or properties-based Creator method is used.


    Note that flag is somewhat mis-named as it is not affected by scalar-delegating creators; it only has effect on Object Value binding.
  syntax:
    content: protected boolean _nonStandardCreation
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._objectIdReader
  id: _objectIdReader
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _objectIdReader
  nameWithType: BeanDeserializerBase._objectIdReader
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._objectIdReader
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: If an Object Id is to be used for value handled by this deserializer, this reader is used for handling.
  syntax:
    content: protected final ObjectIdReader _objectIdReader
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._propertyBasedCreator
  id: _propertyBasedCreator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _propertyBasedCreator
  nameWithType: BeanDeserializerBase._propertyBasedCreator
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._propertyBasedCreator
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: If the bean needs to be instantiated using constructor or factory method that takes one or more named properties as argument(s), this creator is used for instantiation. This value gets resolved during general resolution.
  syntax:
    content: protected PropertyBasedCreator _propertyBasedCreator
    return:
      type: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: _replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _replaceProperty(BeanPropertyMap props, SettableBeanProperty[] creatorProps, SettableBeanProperty origProp, SettableBeanProperty newProp)
  nameWithType: BeanDeserializerBase._replaceProperty(BeanPropertyMap props, SettableBeanProperty[] creatorProps, SettableBeanProperty origProp, SettableBeanProperty newProp)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty(BeanPropertyMap props, SettableBeanProperty[] creatorProps, SettableBeanProperty origProp, SettableBeanProperty newProp)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected void _replaceProperty(BeanPropertyMap props, SettableBeanProperty[] creatorProps, SettableBeanProperty origProp, SettableBeanProperty newProp)
    parameters:
    - id: props
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    - id: creatorProps
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty[]
    - id: origProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _resolveInnerClassValuedProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  nameWithType: BeanDeserializerBase._resolveInnerClassValuedProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method that will handle gruesome details of dealing with properties that have non-static inner class as value...
  syntax:
    content: protected SettableBeanProperty _resolveInnerClassValuedProperty(DeserializationContext ctxt, SettableBeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _resolveManagedReferenceProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  nameWithType: BeanDeserializerBase._resolveManagedReferenceProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method called to see if given property is part of 'managed' property pair (managed + back reference), and if so, handle resolution details.
  syntax:
    content: protected SettableBeanProperty _resolveManagedReferenceProperty(DeserializationContext ctxt, SettableBeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  id: _resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _resolveMergeAndNullSettings(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  nameWithType: BeanDeserializerBase._resolveMergeAndNullSettings(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected SettableBeanProperty _resolveMergeAndNullSettings(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: propMetadata
      type: com.fasterxml.jackson.databind.PropertyMetadata
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _resolvedObjectIdProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  nameWithType: BeanDeserializerBase._resolvedObjectIdProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty(DeserializationContext ctxt, SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that wraps given property with <xref uid="com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty" data-throw-if-not-resolved="false">ObjectIdReferenceProperty</xref> in case where object id resolution is required.
  syntax:
    content: protected SettableBeanProperty _resolvedObjectIdProperty(DeserializationContext ctxt, SettableBeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._serializationShape
  id: _serializationShape
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _serializationShape
  nameWithType: BeanDeserializerBase._serializationShape
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._serializationShape
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Requested shape from bean class annotations.
  syntax:
    content: protected final JsonFormat.Shape _serializationShape
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._subDeserializers
  id: _subDeserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _subDeserializers
  nameWithType: BeanDeserializerBase._subDeserializers
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._subDeserializers
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Lazily constructed map used to contain deserializers needed for polymorphic subtypes. Note that this is **only needed** for polymorphic types, that is, when the actual type is not statically known. For other types this remains null.
  syntax:
    content: protected transient HashMap<ClassKey,JsonDeserializer<Object>> _subDeserializers
    return:
      type: java.util.HashMap<com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._unwrappedPropertyHandler
  id: _unwrappedPropertyHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _unwrappedPropertyHandler
  nameWithType: BeanDeserializerBase._unwrappedPropertyHandler
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._unwrappedPropertyHandler
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: If one of properties has "unwrapped" value, we need separate helper object
  syntax:
    content: protected UnwrappedPropertyHandler _unwrappedPropertyHandler
    return:
      type: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._valueInstantiator
  id: _valueInstantiator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _valueInstantiator
  nameWithType: BeanDeserializerBase._valueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._valueInstantiator
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Object that handles details of constructing initial bean value (to which bind data to), unless instance is passed (via updateValue())
  syntax:
    content: protected final ValueInstantiator _valueInstantiator
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._vanillaProcessing
  id: _vanillaProcessing
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: _vanillaProcessing
  nameWithType: BeanDeserializerBase._vanillaProcessing
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._vanillaProcessing
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Flag that indicates that no "special features" whatsoever are enabled, so the simplest processing is possible.
  syntax:
    content: protected boolean _vanillaProcessing
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer()
  id: asArrayDeserializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: asArrayDeserializer()
  nameWithType: BeanDeserializerBase.asArrayDeserializer()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Fluent factory for creating a variant that can handle POJO output as a JSON Array. Implementations may ignore this request if no such input is possible.
  syntax:
    content: protected abstract BeanDeserializerBase asArrayDeserializer()
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: createContextual(DeserializationContext ctxt, BeanProperty property)
  nameWithType: BeanDeserializerBase.createContextual(DeserializationContext ctxt, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual(DeserializationContext ctxt, BeanProperty property)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Although most of post-processing is done in resolve(), we only get access to referring property's annotations here; and this is needed to support per-property ObjectIds. We will also consider Shape transformations (read from Array) at this point, since it may come from either Class definition or property.
  syntax:
    content: public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties()
  id: creatorProperties()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: creatorProperties()
  nameWithType: BeanDeserializerBase.creatorProperties()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Accessor for finding properties that represents values to pass through property-based creator method (constructor or factory method)
  syntax:
    content: public Iterator<SettableBeanProperty> creatorProperties()
    return:
      type: java.util.Iterator<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public Object deserializeFromArray(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromBoolean(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromBoolean(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to deserialize POJO value from a JSON boolean value (true, false)
  syntax:
    content: public Object deserializeFromBoolean(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromDouble(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromDouble(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to deserialize POJO value from a JSON floating-point number.
  syntax:
    content: public Object deserializeFromDouble(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromEmbedded(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromEmbedded(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public Object deserializeFromEmbedded(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromNumber(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromNumber(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public Object deserializeFromNumber(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromObject(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromObject(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: General version used when handling needs more advanced features.
  syntax:
    content: public abstract Object deserializeFromObject(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromObjectId(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromObjectId(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called in cases where it looks like we got an Object Id to parse and use as a reference.
  syntax:
    content: protected Object deserializeFromObjectId(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromObjectUsingNonDefault(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromObjectUsingNonDefault(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Object deserializeFromObjectUsingNonDefault(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeFromString(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeFromString(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public Object deserializeFromString(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeWithObjectId(JsonParser p, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.deserializeWithObjectId(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Alternative deserialization method used when we expect to see Object Id; if so, we will need to ensure that the Id is seen before anything else, to ensure that it is available for solving references, even if JSON itself is not ordered that way. This may require buffering in some cases, but usually just a simple lookup to ensure that ordering is correct.
  syntax:
    content: protected Object deserializeWithObjectId(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  id: deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  nameWithType: BeanDeserializerBase.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Base implementation that does not assume specific type inclusion mechanism. Sub-classes are expected to override this method if they are to handle type information.
  syntax:
    content: public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference(java.lang.String)
  id: findBackReference(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: findBackReference(String logicalName)
  nameWithType: BeanDeserializerBase.findBackReference(String logicalName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference(String logicalName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method needed by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> to properly link managed- and back-reference pairs.
  syntax:
    content: public SettableBeanProperty findBackReference(String logicalName)
    parameters:
    - id: logicalName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: findConvertingDeserializer(DeserializationContext ctxt, SettableBeanProperty prop)
  nameWithType: BeanDeserializerBase.findConvertingDeserializer(DeserializationContext ctxt, SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer(DeserializationContext ctxt, SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Helper method that can be used to see if specified property is annotated to indicate use of a converter for property value (in case of container types, it is container type itself, not key or content type).


    NOTE: returned deserializer is NOT yet contextualized, caller needs to take care to do that.
  syntax:
    content: protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt, SettableBeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(com.fasterxml.jackson.databind.PropertyName)
  id: findProperty(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: findProperty(PropertyName propertyName)
  nameWithType: BeanDeserializerBase.findProperty(PropertyName propertyName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(PropertyName propertyName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public SettableBeanProperty findProperty(PropertyName propertyName)
    parameters:
    - id: propertyName
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(int)
  id: findProperty(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: findProperty(int propertyIndex)
  nameWithType: BeanDeserializerBase.findProperty(int propertyIndex)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(int propertyIndex)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Alternate find method that tries to locate a property with given `property index`. Note that access by index is not necessarily faster than by name, since properties are not directly indexable; however, for most instances difference is not significant as number of properties is low.
  syntax:
    content: public SettableBeanProperty findProperty(int propertyIndex)
    parameters:
    - id: propertyIndex
      type: int
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(java.lang.String)
  id: findProperty(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: findProperty(String propertyName)
  nameWithType: BeanDeserializerBase.findProperty(String propertyName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(String propertyName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Accessor for finding the property with given name, if POJO has one. Name used is the external name, i.e. name used in external data representation (JSON).
  syntax:
    content: public SettableBeanProperty findProperty(String propertyName)
    parameters:
    - id: propertyName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass()
  id: getBeanClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getBeanClass()
  nameWithType: BeanDeserializerBase.getBeanClass()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public final Class<?> getBeanClass()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern()
  id: getEmptyAccessPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getEmptyAccessPattern()
  nameWithType: BeanDeserializerBase.getEmptyAccessPattern()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: This method may be called in conjunction with calls to <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)" data-throw-if-not-resolved="false">#getEmptyValue(DeserializationContext)</xref>, to check whether it needs to be called just once (static values), or each time empty value is needed.
  syntax:
    content: public AccessPattern getEmptyAccessPattern()
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  id: getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getEmptyValue(DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.getEmptyValue(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to determine value to be used for "empty" values (most commonly when deserializing from empty JSON Strings). Usually this is same as <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullValue" data-throw-if-not-resolved="false">#getNullValue</xref> (which in turn is usually simply Java null), but it can be overridden for specific types. Or, if type should never be converted from empty String, method can also throw an exception.


    This method may be called once, or multiple times, depending on what <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern()" data-throw-if-not-resolved="false">#getEmptyAccessPattern()</xref> returns.


    Default implementation simply calls <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullValue" data-throw-if-not-resolved="false">#getNullValue</xref> and returns value.
  syntax:
    content: public Object getEmptyValue(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames()
  id: getKnownPropertyNames()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getKnownPropertyNames()
  nameWithType: BeanDeserializerBase.getKnownPropertyNames()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that will either return null to indicate that type being deserializers has no concept of properties; or a collection of identifiers for which `toString` will give external property name. This is only to be used for error reporting and diagnostics purposes (most commonly, to accompany "unknown property" exception).
  syntax:
    content: public Collection<Object> getKnownPropertyNames()
    return:
      type: java.util.Collection<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern()
  id: getNullAccessPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getNullAccessPattern()
  nameWithType: BeanDeserializerBase.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    This method may be called in conjunction with calls to <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullValue*" data-throw-if-not-resolved="false">#getNullValue(DeserializationContext)</xref>, to check whether it needs to be called just once (static values), or each time empty value is needed.


    Default implementation indicates that "null value" to use for input null is simply Java \`null\` for all deserializers, unless overridden by sub-classes. This information may be used as optimization.
  syntax:
    content: public AccessPattern getNullAccessPattern()
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader()
  id: getObjectIdReader()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getObjectIdReader()
  nameWithType: BeanDeserializerBase.getObjectIdReader()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Overridden to return true for those instances that are handling value for which Object Identity handling is enabled (either via value type or referring property).
  syntax:
    content: public ObjectIdReader getObjectIdReader()
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount()
  id: getPropertyCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getPropertyCount()
  nameWithType: BeanDeserializerBase.getPropertyCount()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Accessor for checking number of deserialized properties.
  syntax:
    content: public int getPropertyCount()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator()
  id: getValueInstantiator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getValueInstantiator()
  nameWithType: BeanDeserializerBase.getValueInstantiator()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public ValueInstantiator getValueInstantiator()
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType()
  id: getValueType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: getValueType()
  nameWithType: BeanDeserializerBase.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Exact structured type this deserializer handles, if known.
  syntax:
    content: public JavaType getValueType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  id: handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handleIgnoredProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  nameWithType: BeanDeserializerBase.handleIgnoredProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called when an explicitly ignored property (one specified with a name to match, either by property annotation or class annotation) is encountered.
  syntax:
    content: protected void handleIgnoredProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: beanOrClass
      type: java.lang.Object
    - id: propName
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  id: handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  nameWithType: BeanDeserializerBase.handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: 'Method called in cases where we may have polymorphic deserialization case: that is, type of Creator-constructed bean is not the type of deserializer itself. It should be a sub-class or implementation class; either way, we may have more specific deserializer to use for handling it.'
  syntax:
    content: protected Object handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
      description: >-
        (optional) If not null, parser that has more properties to handle
           (in addition to buffered properties); if null, all properties are passed
           in buffer
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    - id: unknownTokens
      type: com.fasterxml.jackson.databind.util.TokenBuffer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  id: handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handleUnknownProperties(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  nameWithType: BeanDeserializerBase.handleUnknownProperties(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to handle set of one or more unknown properties, stored in their entirety in given <xref uid="com.fasterxml.jackson.databind.util.TokenBuffer" data-throw-if-not-resolved="false">TokenBuffer</xref> (as field entries, name and value).
  syntax:
    content: protected Object handleUnknownProperties(DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    - id: unknownTokens
      type: com.fasterxml.jackson.databind.util.TokenBuffer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  id: handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  nameWithType: BeanDeserializerBase.handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called when a JSON property is encountered that has not matching setter, any-setter or field, and thus cannot be assigned.
  syntax:
    content: protected void handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object beanOrClass, String propName)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: beanOrClass
      type: java.lang.Object
    - id: propName
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  id: handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handleUnknownVanilla(JsonParser p, DeserializationContext ctxt, Object beanOrBuilder, String propName)
  nameWithType: BeanDeserializerBase.handleUnknownVanilla(JsonParser p, DeserializationContext ctxt, Object beanOrBuilder, String propName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(JsonParser p, DeserializationContext ctxt, Object beanOrBuilder, String propName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method called for an unknown property, when using "vanilla" processing.
  syntax:
    content: protected void handleUnknownVanilla(JsonParser p, DeserializationContext ctxt, Object beanOrBuilder, String propName)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: beanOrBuilder
      type: java.lang.Object
      description: >-
        Either POJO instance (if constructed), or builder
           (in case of builder-based approach), that has property we haven't been
           able to handle yet.
    - id: propName
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType()
  id: handledType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: handledType()
  nameWithType: BeanDeserializerBase.handledType()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method for accessing type of values this deserializer produces. Note that this information is not guaranteed to be exact -- it may be a more generic (super-type) -- but it should not be incorrect (return a non-related type).


    Default implementation will return null, which means almost same same as returning `Object.class` would; that is, that nothing is known about handled type.
  syntax:
    content: public Class<?> handledType()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty(java.lang.String)
  id: hasProperty(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: hasProperty(String propertyName)
  nameWithType: BeanDeserializerBase.hasProperty(String propertyName)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty(String propertyName)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public boolean hasProperty(String propertyName)
    parameters:
    - id: propertyName
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews()
  id: hasViews()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: hasViews()
  nameWithType: BeanDeserializerBase.hasViews()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public boolean hasViews()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  id: injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: injectValues(DeserializationContext ctxt, Object bean)
  nameWithType: BeanDeserializerBase.injectValues(DeserializationContext ctxt, Object bean)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues(DeserializationContext ctxt, Object bean)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected void injectValues(DeserializationContext ctxt, Object bean)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable()
  id: isCachable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: isCachable()
  nameWithType: BeanDeserializerBase.isCachable()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to see if deserializer instance is cachable and usable for other properties of same type (type for which instance was created).


    Note that cached instances are still resolved on per-property basis, if instance implements <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ResolvableDeserializer</xref>: cached instance is just as the base. This means that in most cases it is safe to cache instances; however, it only makes sense to cache instances if instantiation is expensive, or if instances are heavy-weight.


    Default implementation returns false, to indicate that no caching is done.
  syntax:
    content: public boolean isCachable()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties()
  id: properties()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: properties()
  nameWithType: BeanDeserializerBase.properties()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Accessor for iterating over properties this deserializer uses; with the exception that properties passed via Creator methods (specifically, "property-based constructor") are not included, but can be accessed separate by calling <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties*" data-throw-if-not-resolved="false">#creatorProperties</xref>
  syntax:
    content: public Iterator<SettableBeanProperty> properties()
    return:
      type: java.util.Iterator<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: replaceProperty(SettableBeanProperty original, SettableBeanProperty replacement)
  nameWithType: BeanDeserializerBase.replaceProperty(SettableBeanProperty original, SettableBeanProperty replacement)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty(SettableBeanProperty original, SettableBeanProperty replacement)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that can be used to replace an existing property with a modified one.


    NOTE: only ever use this method if you know what you are doing; incorrect usage can break deserializer.
  syntax:
    content: public void replaceProperty(SettableBeanProperty original, SettableBeanProperty replacement)
    parameters:
    - id: original
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
      description: Property to replace
    - id: replacement
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
      description: Property to replace it with
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  id: resolve(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: resolve(DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.resolve(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to finalize setup of this deserializer, after deserializer itself has been registered. This is needed to handle recursive and transitive dependencies.
  syntax:
    content: public void resolve(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  id: supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: supportsUpdate(DeserializationConfig config)
  nameWithType: BeanDeserializerBase.supportsUpdate(DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate(DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Introspection method that may be called to see whether deserializer supports update of an existing value (aka "merging") or not. Return value should either be <xref uid="java.lang.Boolean.FALSE" data-throw-if-not-resolved="false">Boolean#FALSE</xref> if update is not supported at all (immutable values); <xref uid="java.lang.Boolean.TRUE" data-throw-if-not-resolved="false">Boolean#TRUE</xref> if update should usually work (regular POJOs, for example), or `null` if this is either not known, or may sometimes work.


    Information gathered is typically used to either prevent merging update for property (either by skipping, if based on global defaults; or by exception during deserialization construction if explicit attempt made) if <xref uid="java.lang.Boolean.FALSE" data-throw-if-not-resolved="false">Boolean#FALSE</xref> returned, or inclusion if <xref uid="java.lang.Boolean.TRUE" data-throw-if-not-resolved="false">Boolean#TRUE</xref> is specified. If "unknown" case (`null` returned) behavior is to exclude property if global defaults used; or to allow if explicit per-type or property merging is defined.


    Default implementation returns `null` to allow explicit per-type or per-property attempts.
  syntax:
    content: public Boolean supportsUpdate(DeserializationConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  id: unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: unwrappingDeserializer(NameTransformer unwrapper)
  nameWithType: BeanDeserializerBase.unwrappingDeserializer(NameTransformer unwrapper)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer(NameTransformer unwrapper)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that will return deserializer instance that is able to handle "unwrapped" value instances If no unwrapped instance can be constructed, will simply return this object as-is.


    Default implementation just returns 'this' indicating that no unwrapped variant exists
  syntax:
    content: public abstract JsonDeserializer<Object> unwrappingDeserializer(NameTransformer unwrapper)
    parameters:
    - id: unwrapper
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  id: withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: withBeanProperties(BeanPropertyMap props)
  nameWithType: BeanDeserializerBase.withBeanProperties(BeanPropertyMap props)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties(BeanPropertyMap props)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Mutant factory method that custom sub-classes must override; not left as abstract to prevent more drastic backwards compatibility problems.
  syntax:
    content: public BeanDeserializerBase withBeanProperties(BeanPropertyMap props)
    parameters:
    - id: props
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties(java.util.Set<java.lang.String>)
  id: withIgnorableProperties(java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: withIgnorableProperties(Set<String> ignorableProps)
  nameWithType: BeanDeserializerBase.withIgnorableProperties(Set<String> ignorableProps)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties(Set<String> ignorableProps)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract BeanDeserializerBase withIgnorableProperties(Set<String> ignorableProps)
    parameters:
    - id: ignorableProps
      type: java.util.Set<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown(boolean)
  id: withIgnoreAllUnknown(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: withIgnoreAllUnknown(boolean ignoreUnknown)
  nameWithType: BeanDeserializerBase.withIgnoreAllUnknown(boolean ignoreUnknown)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown(boolean ignoreUnknown)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public BeanDeserializerBase withIgnoreAllUnknown(boolean ignoreUnknown)
    parameters:
    - id: ignoreUnknown
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  id: withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: withObjectIdReader(ObjectIdReader oir)
  nameWithType: BeanDeserializerBase.withObjectIdReader(ObjectIdReader oir)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader(ObjectIdReader oir)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract BeanDeserializerBase withObjectIdReader(ObjectIdReader oir)
    parameters:
    - id: oir
      type: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  id: wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that will modify caught exception (passed in as argument) as necessary to include reference information, and to ensure it is a subtype of <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>, or an unchecked exception.


    Rules for wrapping and unwrapping are bit complicated; essentially:

     *  Errors are to be passed as is (if uncovered via unwrapping)
     *  "Plain" IOExceptions (ones that are not of type <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> are to be passed as is
  syntax:
    content: public void wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
    parameters:
    - id: t
      type: java.lang.Throwable
    - id: bean
      type: java.lang.Object
    - id: fieldName
      type: java.lang.String
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
  id: wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerBase
  langs:
  - java
  name: wrapInstantiationProblem(Throwable t, DeserializationContext ctxt)
  nameWithType: BeanDeserializerBase.wrapInstantiationProblem(Throwable t, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem(Throwable t, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Object wrapInstantiationProblem(Throwable t, DeserializationContext ctxt)
    parameters:
    - id: t
      type: java.lang.Throwable
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
  name: BeanDeserializerBuilder
  nameWithType: BeanDeserializerBuilder
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  name: BeanPropertyMap
  nameWithType: BeanPropertyMap
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '>'
    fullName: '>'
- uid: java.util.Set<java.lang.String>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase*
  name: BeanDeserializerBase
  nameWithType: BeanDeserializerBase.BeanDeserializerBase
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.BeanDeserializerBase
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
  name: ObjectIdReader
  nameWithType: ObjectIdReader
  fullName: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer*
  name: unwrappingDeserializer
  nameWithType: BeanDeserializerBase.unwrappingDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.unwrappingDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader*
  name: withObjectIdReader
  nameWithType: BeanDeserializerBase.withObjectIdReader
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withObjectIdReader
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties*
  name: withIgnorableProperties
  nameWithType: BeanDeserializerBase.withIgnorableProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnorableProperties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown*
  name: withIgnoreAllUnknown
  nameWithType: BeanDeserializerBase.withIgnoreAllUnknown
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withIgnoreAllUnknown
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties*
  name: withBeanProperties
  nameWithType: BeanDeserializerBase.withBeanProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.withBeanProperties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer*
  name: asArrayDeserializer
  nameWithType: BeanDeserializerBase.asArrayDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.asArrayDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve*
  name: resolve
  nameWithType: BeanDeserializerBase.resolve
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  name: SettableBeanProperty
  nameWithType: SettableBeanProperty
  fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty*
  name: _replaceProperty
  nameWithType: BeanDeserializerBase._replaceProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer*
  name: findConvertingDeserializer
  nameWithType: BeanDeserializerBase.findConvertingDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual*
  name: createContextual
  nameWithType: BeanDeserializerBase.createContextual
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.createContextual
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty*
  name: _resolveManagedReferenceProperty
  nameWithType: BeanDeserializerBase._resolveManagedReferenceProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty*
  name: _resolvedObjectIdProperty
  nameWithType: BeanDeserializerBase._resolvedObjectIdProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper*
  name: _findPropertyUnwrapper
  nameWithType: BeanDeserializerBase._findPropertyUnwrapper
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty*
  name: _resolveInnerClassValuedProperty
  nameWithType: BeanDeserializerBase._resolveInnerClassValuedProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.PropertyMetadata
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings*
  name: _resolveMergeAndNullSettings
  nameWithType: BeanDeserializerBase._resolveMergeAndNullSettings
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.util.AccessPattern
  name: AccessPattern
  nameWithType: AccessPattern
  fullName: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern*
  name: getNullAccessPattern
  nameWithType: BeanDeserializerBase.getNullAccessPattern
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getNullAccessPattern
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern*
  name: getEmptyAccessPattern
  nameWithType: BeanDeserializerBase.getEmptyAccessPattern
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyAccessPattern
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue*
  name: getEmptyValue
  nameWithType: BeanDeserializerBase.getEmptyValue
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable*
  name: isCachable
  nameWithType: BeanDeserializerBase.isCachable
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.isCachable
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate*
  name: supportsUpdate
  nameWithType: BeanDeserializerBase.supportsUpdate
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.supportsUpdate
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType*
  name: handledType
  nameWithType: BeanDeserializerBase.handledType
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handledType
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader*
  name: getObjectIdReader
  nameWithType: BeanDeserializerBase.getObjectIdReader
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getObjectIdReader
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty*
  name: hasProperty
  nameWithType: BeanDeserializerBase.hasProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews*
  name: hasViews
  nameWithType: BeanDeserializerBase.hasViews
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasViews
  package: com.fasterxml.jackson.databind.deser
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount*
  name: getPropertyCount
  nameWithType: BeanDeserializerBase.getPropertyCount
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getPropertyCount
  package: com.fasterxml.jackson.databind.deser
- uid: java.util.Collection<java.lang.Object>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames*
  name: getKnownPropertyNames
  nameWithType: BeanDeserializerBase.getKnownPropertyNames
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass*
  name: getBeanClass
  nameWithType: BeanDeserializerBase.getBeanClass
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getBeanClass
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType*
  name: getValueType
  nameWithType: BeanDeserializerBase.getValueType
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueType
  package: com.fasterxml.jackson.databind.deser
- uid: java.util.Iterator<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties*
  name: properties
  nameWithType: BeanDeserializerBase.properties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties*
  name: creatorProperties
  nameWithType: BeanDeserializerBase.creatorProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty*
  name: findProperty
  nameWithType: BeanDeserializerBase.findProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference*
  name: findBackReference
  nameWithType: BeanDeserializerBase.findBackReference
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator
  name: ValueInstantiator
  nameWithType: ValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator*
  name: getValueInstantiator
  nameWithType: BeanDeserializerBase.getValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getValueInstantiator
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty*
  name: replaceProperty
  nameWithType: BeanDeserializerBase.replaceProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.replaceProperty
  package: com.fasterxml.jackson.databind.deser
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject*
  name: deserializeFromObject
  nameWithType: BeanDeserializerBase.deserializeFromObject
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObject
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType*
  name: deserializeWithType
  nameWithType: BeanDeserializerBase.deserializeWithType
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId*
  name: _handleTypedObjectId
  nameWithType: BeanDeserializerBase._handleTypedObjectId
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId*
  name: _convertObjectId
  nameWithType: BeanDeserializerBase._convertObjectId
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId*
  name: deserializeWithObjectId
  nameWithType: BeanDeserializerBase.deserializeWithObjectId
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId*
  name: deserializeFromObjectId
  nameWithType: BeanDeserializerBase.deserializeFromObjectId
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault*
  name: deserializeFromObjectUsingNonDefault
  nameWithType: BeanDeserializerBase.deserializeFromObjectUsingNonDefault
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased*
  name: _deserializeUsingPropertyBased
  nameWithType: BeanDeserializerBase._deserializeUsingPropertyBased
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._deserializeUsingPropertyBased
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber*
  name: deserializeFromNumber
  nameWithType: BeanDeserializerBase.deserializeFromNumber
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString*
  name: deserializeFromString
  nameWithType: BeanDeserializerBase.deserializeFromString
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble*
  name: deserializeFromDouble
  nameWithType: BeanDeserializerBase.deserializeFromDouble
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean*
  name: deserializeFromBoolean
  nameWithType: BeanDeserializerBase.deserializeFromBoolean
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray*
  name: deserializeFromArray
  nameWithType: BeanDeserializerBase.deserializeFromArray
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded*
  name: deserializeFromEmbedded
  nameWithType: BeanDeserializerBase.deserializeFromEmbedded
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues*
  name: injectValues
  nameWithType: BeanDeserializerBase.injectValues
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.util.TokenBuffer
  name: TokenBuffer
  nameWithType: TokenBuffer
  fullName: com.fasterxml.jackson.databind.util.TokenBuffer
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties*
  name: handleUnknownProperties
  nameWithType: BeanDeserializerBase.handleUnknownProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla*
  name: handleUnknownVanilla
  nameWithType: BeanDeserializerBase.handleUnknownVanilla
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty*
  name: handleUnknownProperty
  nameWithType: BeanDeserializerBase.handleUnknownProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty*
  name: handleIgnoredProperty
  nameWithType: BeanDeserializerBase.handleIgnoredProperty
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic*
  name: handlePolymorphic
  nameWithType: BeanDeserializerBase.handlePolymorphic
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer*
  name: _findSubclassDeserializer
  nameWithType: BeanDeserializerBase._findSubclassDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findSubclassDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow*
  name: wrapAndThrow
  nameWithType: BeanDeserializerBase.wrapAndThrow
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem*
  name: wrapInstantiationProblem
  nameWithType: BeanDeserializerBase.wrapInstantiationProblem
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.annotation.JsonFormat.Shape
  name: JsonFormat.Shape
  nameWithType: JsonFormat.Shape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Shape
- uid: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
  name: PropertyBasedCreator
  nameWithType: PropertyBasedCreator
  fullName: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
- uid: com.fasterxml.jackson.databind.deser.impl.ValueInjector[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.impl.ValueInjector
    name: ValueInjector
    fullName: com.fasterxml.jackson.databind.deser.impl.ValueInjector
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.SettableAnyProperty
  name: SettableAnyProperty
  nameWithType: SettableAnyProperty
  fullName: com.fasterxml.jackson.databind.deser.SettableAnyProperty
- uid: java.util.HashMap<com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.type.ClassKey
    name: ClassKey
    fullName: com.fasterxml.jackson.databind.type.ClassKey
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler
  name: UnwrappedPropertyHandler
  nameWithType: UnwrappedPropertyHandler
  fullName: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  name: ExternalTypeHandler
  nameWithType: ExternalTypeHandler
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer<java.lang.Object>
  name: StdDeserializer<Object>
  nameWithType: StdDeserializer<Object>
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  name: ContextualDeserializer
  nameWithType: ContextualDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  name: ResolvableDeserializer
  nameWithType: ResolvableDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator.Gettable
  name: ValueInstantiator.Gettable
  nameWithType: ValueInstantiator.Gettable
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator.Gettable
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  nameWithType: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  name: StdDeserializer._isPosInf(String)
  nameWithType: StdDeserializer._isPosInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  name: JsonDeserializer.getDelegatee()
  nameWithType: JsonDeserializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getNullValue(DeserializationContext)
  nameWithType: JsonDeserializer.getNullValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  name: StdDeserializer._isNaN(String)
  nameWithType: StdDeserializer._isNaN(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  name: StdDeserializer._isIntNumber(String)
  nameWithType: StdDeserializer._isIntNumber(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  name: StdDeserializer._isNegInf(String)
  nameWithType: StdDeserializer._isNegInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  name: StdDeserializer._byteOverflow(int)
  nameWithType: StdDeserializer._byteOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  name: StdDeserializer._coercedTypeDesc()
  nameWithType: StdDeserializer._coercedTypeDesc()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  name: StdDeserializer._nonNullNumber(Number)
  nameWithType: StdDeserializer._nonNullNumber(Number)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  name: StdDeserializer.parseDouble(String)
  nameWithType: StdDeserializer.parseDouble(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  name: JsonDeserializer.isCachable()
  nameWithType: JsonDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  nameWithType: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  name: StdDeserializer._hasTextualNull(String)
  nameWithType: StdDeserializer._hasTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  name: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  nameWithType: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  name: JsonDeserializer.findBackReference(String)
  nameWithType: JsonDeserializer.findBackReference(String)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  name: StdDeserializer.getValueType()
  nameWithType: StdDeserializer.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(String,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(String,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  name: JsonDeserializer.supportsUpdate(DeserializationConfig)
  nameWithType: JsonDeserializer.supportsUpdate(DeserializationConfig)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  name: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  nameWithType: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  name: StdDeserializer.handledType()
  nameWithType: StdDeserializer.handledType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  name: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  nameWithType: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  name: StdDeserializer._isEmptyOrTextualNull(String)
  nameWithType: StdDeserializer._isEmptyOrTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  name: JsonDeserializer.getEmptyAccessPattern()
  nameWithType: JsonDeserializer.getEmptyAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  nameWithType: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  name: JsonDeserializer.getNullValue()
  nameWithType: JsonDeserializer.getNullValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  name: StdDeserializer._shortOverflow(int)
  nameWithType: StdDeserializer._shortOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  name: JsonDeserializer.getObjectIdReader()
  nameWithType: JsonDeserializer.getObjectIdReader()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  nameWithType: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  name: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  nameWithType: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseString(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseString(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdDeserializer._neitherNull(Object,Object)
  nameWithType: StdDeserializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  name: JsonDeserializer.getEmptyValue()
  nameWithType: JsonDeserializer.getEmptyValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getEmptyValue(DeserializationContext)
  nameWithType: JsonDeserializer.getEmptyValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  name: JsonDeserializer.getKnownPropertyNames()
  nameWithType: JsonDeserializer.getKnownPropertyNames()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  name: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  nameWithType: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  nameWithType: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  name: StdDeserializer._intOverflow(long)
  nameWithType: StdDeserializer._intOverflow(long)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  name: JsonDeserializer.getNullAccessPattern()
  nameWithType: JsonDeserializer.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.getValueType(DeserializationContext)
  nameWithType: StdDeserializer.getValueType(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  name: StdDeserializer.getValueClass()
  nameWithType: StdDeserializer.getValueClass()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  name: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  nameWithType: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
- uid: java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty
  name: String,SettableBeanProperty
  nameWithType: String,SettableBeanProperty
  fullName: java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonDeserializer
  name: ClassKey,JsonDeserializer
  nameWithType: ClassKey,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  name: StdDeserializer
  nameWithType: StdDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
- uid: ?>,java.lang.String)
  name: ?>,String)
  nameWithType: ?>,String)
  fullName: ?>,java.lang.String)
