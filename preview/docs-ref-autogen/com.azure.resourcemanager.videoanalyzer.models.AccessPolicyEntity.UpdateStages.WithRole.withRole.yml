### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.UpdateStages.WithRole.withRole*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.UpdateStages.WithRole.withRole"
name: "withRole"
nameWithType: "AccessPolicyEntity.UpdateStages.WithRole.withRole"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.UpdateStages.WithRole.withRole(com.azure.resourcemanager.videoanalyzer.models.AccessPolicyRole)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.UpdateStages.WithRole.withRole(AccessPolicyRole role)"
  name: "withRole(AccessPolicyRole role)"
  nameWithType: "AccessPolicyEntity.UpdateStages.WithRole.withRole(AccessPolicyRole role)"
  summary: "Specifies the role property: Defines the access level granted by this policy.."
  parameters:
  - description: "Defines the access level granted by this policy."
    name: "role"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyRole?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyRole&text=AccessPolicyRole\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyEntity.Update withRole(AccessPolicyRole role)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.Update?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.3
