### YamlMime:JavaType
uid: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace"
fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace"
name: "ScopeNamespace"
nameWithType: "ScopeNamespace"
summary: "Specifies that the scope of the extension is Namespace."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ScopeNamespace"
constructors:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.ScopeNamespace()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.ScopeNamespace()"
  name: "ScopeNamespace()"
  nameWithType: "ScopeNamespace.ScopeNamespace()"
  syntax: "public ScopeNamespace()"
methods:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.targetNamespace()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.targetNamespace()"
  name: "targetNamespace()"
  nameWithType: "ScopeNamespace.targetNamespace()"
  summary: "Get the target<wbr>Namespace property: Namespace where the extension will be created for an Namespace scoped extension."
  syntax: "public String targetNamespace()"
  desc: "Get the targetNamespace property: Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it will be created."
  returns:
    description: "the targetNamespace value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.validate()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.validate()"
  name: "validate()"
  nameWithType: "ScopeNamespace.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.withTargetNamespace(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace.withTargetNamespace(String targetNamespace)"
  name: "withTargetNamespace(String targetNamespace)"
  nameWithType: "ScopeNamespace.withTargetNamespace(String targetNamespace)"
  summary: "Set the target<wbr>Namespace property: Namespace where the extension will be created for an Namespace scoped extension."
  parameters:
  - description: "the targetNamespace value to set."
    name: "targetNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ScopeNamespace withTargetNamespace(String targetNamespace)"
  desc: "Set the targetNamespace property: Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it will be created."
  returns:
    description: "the ScopeNamespace object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace?alt=com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace&text=ScopeNamespace\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies that the scope of the extension is Namespace."
metadata: {}
package: "com.azure.resourcemanager.kubernetesconfiguration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-kubernetesconfiguration:1.0.0-beta.3
