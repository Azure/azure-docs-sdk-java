### YamlMime:ManagedReference
items:
- uid: com.azure.core.experimental.serializer.JsonSerializer
  id: JsonSerializer
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer
  children:
  - com.azure.core.experimental.serializer.JsonSerializer.<S>serialize(S,java.lang.Object)
  - com.azure.core.experimental.serializer.JsonSerializer.<T>deserialize(java.io.InputStream,java.lang.Class<T>)
  - com.azure.core.experimental.serializer.JsonSerializer.<T>deserializeTree(com.azure.core.experimental.serializer.JsonNode,java.lang.Class<T>)
  - com.azure.core.experimental.serializer.JsonSerializer.serializeTree(java.io.OutputStream,com.azure.core.experimental.serializer.JsonNode)
  - com.azure.core.experimental.serializer.JsonSerializer.toTree(java.io.InputStream)
  - com.azure.core.experimental.serializer.JsonSerializer.toTree(java.lang.Object)
  langs:
  - java
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.azure.core.experimental.serializer.JsonSerializer
  type: Interface
  package: com.azure.core.experimental.serializer
  summary: Generic interface covering basic JSON serialization and deserialization methods.
  syntax:
    content: public interface JsonSerializer extends ObjectSerializer
  implements:
  - com.azure.core.experimental.serializer.ObjectSerializer
- uid: com.azure.core.experimental.serializer.JsonSerializer.<S>serialize(S,java.lang.Object)
  id: <S>serialize(S,java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: <S>serialize(S stream, Object value)
  nameWithType: JsonSerializer.<S>serialize(S stream, Object value)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<S>serialize(S stream, Object value)
  overload: com.azure.core.experimental.serializer.JsonSerializer.serialize*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Writes an object's JSON into a stream..
  syntax:
    content: public abstract Mono<S> <S>serialize(S stream, Object value)
    parameters:
    - id: stream
      type: S
      description: <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> where the object's JSON will be written.
    - id: value
      type: java.lang.Object
      description: The object.
    return:
      type: reactor.core.publisher.Mono<S>
      description: The stream where the object's JSON was written.
- uid: com.azure.core.experimental.serializer.JsonSerializer.<T>deserialize(java.io.InputStream,java.lang.Class<T>)
  id: <T>deserialize(java.io.InputStream,java.lang.Class<T>)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: <T>deserialize(InputStream stream, Class<T> clazz)
  nameWithType: JsonSerializer.<T>deserialize(InputStream stream, Class<T> clazz)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<T>deserialize(InputStream stream, Class<T> clazz)
  overload: com.azure.core.experimental.serializer.JsonSerializer.deserialize*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Reads a JSON stream into its object representation.
  syntax:
    content: public abstract Mono<T> <T>deserialize(InputStream stream, Class<T> clazz)
    parameters:
    - id: stream
      type: java.io.InputStream
      description: JSON stream.
    - id: clazz
      type: java.lang.Class<T>
      description: <xref uid="java.lang.Class" data-throw-if-not-resolved="false">Class</xref> representing the object.
    return:
      type: reactor.core.publisher.Mono<T>
      description: The object represented by the deserialized JSON stream.
- uid: com.azure.core.experimental.serializer.JsonSerializer.<T>deserializeTree(com.azure.core.experimental.serializer.JsonNode,java.lang.Class<T>)
  id: <T>deserializeTree(com.azure.core.experimental.serializer.JsonNode,java.lang.Class<T>)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: <T>deserializeTree(JsonNode jsonNode, Class<T> clazz)
  nameWithType: JsonSerializer.<T>deserializeTree(JsonNode jsonNode, Class<T> clazz)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<T>deserializeTree(JsonNode jsonNode, Class<T> clazz)
  overload: com.azure.core.experimental.serializer.JsonSerializer.deserializeTree*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Reads a JSON tree into its object representation.
  syntax:
    content: public abstract Mono<T> <T>deserializeTree(JsonNode jsonNode, Class<T> clazz)
    parameters:
    - id: jsonNode
      type: com.azure.core.experimental.serializer.JsonNode
      description: The JSON tree.
    - id: clazz
      type: java.lang.Class<T>
      description: <xref uid="java.lang.Class" data-throw-if-not-resolved="false">Class</xref> representing the object.
    return:
      type: reactor.core.publisher.Mono<T>
      description: The object represented by the deserialized JSON tree.
- uid: com.azure.core.experimental.serializer.JsonSerializer.serializeTree(java.io.OutputStream,com.azure.core.experimental.serializer.JsonNode)
  id: serializeTree(java.io.OutputStream,com.azure.core.experimental.serializer.JsonNode)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: serializeTree(OutputStream stream, JsonNode jsonNode)
  nameWithType: JsonSerializer.serializeTree(OutputStream stream, JsonNode jsonNode)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.serializeTree(OutputStream stream, JsonNode jsonNode)
  overload: com.azure.core.experimental.serializer.JsonSerializer.serializeTree*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Writes a JSON tree into a stream.
  syntax:
    content: public abstract Mono<OutputStream> serializeTree(OutputStream stream, JsonNode jsonNode)
    parameters:
    - id: stream
      type: java.io.OutputStream
      description: <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> where the JSON tree will be written.
    - id: jsonNode
      type: com.azure.core.experimental.serializer.JsonNode
      description: The JSON tree.
    return:
      type: reactor.core.publisher.Mono<java.io.OutputStream>
      description: The stream where the JSON tree was written.
- uid: com.azure.core.experimental.serializer.JsonSerializer.toTree(java.io.InputStream)
  id: toTree(java.io.InputStream)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: toTree(InputStream stream)
  nameWithType: JsonSerializer.toTree(InputStream stream)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.toTree(InputStream stream)
  overload: com.azure.core.experimental.serializer.JsonSerializer.toTree*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Reads a JSON stream into its JSON tree representation.
  syntax:
    content: public abstract Mono<JsonNode> toTree(InputStream stream)
    parameters:
    - id: stream
      type: java.io.InputStream
      description: JSON stream.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.experimental.serializer.JsonNode>
      description: The JSON tree representing the deserialized JSON byte array.
- uid: com.azure.core.experimental.serializer.JsonSerializer.toTree(java.lang.Object)
  id: toTree(java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.JsonSerializer
  langs:
  - java
  name: toTree(Object value)
  nameWithType: JsonSerializer.toTree(Object value)
  fullName: com.azure.core.experimental.serializer.JsonSerializer.toTree(Object value)
  overload: com.azure.core.experimental.serializer.JsonSerializer.toTree*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Writes an object into its JSON tree representation.
  syntax:
    content: public abstract Mono<JsonNode> toTree(Object value)
    parameters:
    - id: value
      type: java.lang.Object
      description: The object.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.experimental.serializer.JsonNode>
      description: The JSON tree representing the object.
references:
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.JsonSerializer.deserialize*
  name: <T>deserialize
  nameWithType: JsonSerializer.<T>deserialize
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<T>deserialize
  package: com.azure.core.experimental.serializer
- uid: com.azure.core.experimental.serializer.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.azure.core.experimental.serializer.JsonNode
- uid: com.azure.core.experimental.serializer.JsonSerializer.deserializeTree*
  name: <T>deserializeTree
  nameWithType: JsonSerializer.<T>deserializeTree
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<T>deserializeTree
  package: com.azure.core.experimental.serializer
- uid: S
  spec.java:
  - uid: S
    name: S
    fullName: S
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: reactor.core.publisher.Mono<S>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: S
    name: S
    fullName: S
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.JsonSerializer.serialize*
  name: <S>serialize
  nameWithType: JsonSerializer.<S>serialize
  fullName: com.azure.core.experimental.serializer.JsonSerializer.<S>serialize
  package: com.azure.core.experimental.serializer
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: reactor.core.publisher.Mono<java.io.OutputStream>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.JsonSerializer.serializeTree*
  name: serializeTree
  nameWithType: JsonSerializer.serializeTree
  fullName: com.azure.core.experimental.serializer.JsonSerializer.serializeTree
  package: com.azure.core.experimental.serializer
- uid: reactor.core.publisher.Mono<com.azure.core.experimental.serializer.JsonNode>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.experimental.serializer.JsonNode
    name: JsonNode
    fullName: com.azure.core.experimental.serializer.JsonNode
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.JsonSerializer.toTree*
  name: toTree
  nameWithType: JsonSerializer.toTree
  fullName: com.azure.core.experimental.serializer.JsonSerializer.toTree
  package: com.azure.core.experimental.serializer
- uid: com.azure.core.experimental.serializer.ObjectSerializer
  name: ObjectSerializer
  nameWithType: ObjectSerializer
  fullName: com.azure.core.experimental.serializer.ObjectSerializer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
