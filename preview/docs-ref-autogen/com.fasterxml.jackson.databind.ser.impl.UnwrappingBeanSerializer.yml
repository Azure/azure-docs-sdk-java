### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  id: UnwrappingBeanSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl
  children:
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer._nameTransformer
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString()
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  langs:
  - java
  name: UnwrappingBeanSerializer
  nameWithType: UnwrappingBeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  type: Class
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public class UnwrappingBeanSerializer extends BeanSerializerBase implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  - com.fasterxml.jackson.databind.ser.std.StdSerializer
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: UnwrappingBeanSerializer(UnwrappingBeanSerializer src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected UnwrappingBeanSerializer(UnwrappingBeanSerializer src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  id: UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter)
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  id: UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter, Object filterId)
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter, Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter, Object filterId)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public UnwrappingBeanSerializer(UnwrappingBeanSerializer src, ObjectIdWriter objectIdWriter, Object filterId)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    - id: filterId
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set<java.lang.String>)
  id: UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: UnwrappingBeanSerializer(UnwrappingBeanSerializer src, Set<String> toIgnore)
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(UnwrappingBeanSerializer src, Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected UnwrappingBeanSerializer(UnwrappingBeanSerializer src, Set<String> toIgnore)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
    - id: toIgnore
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  id: UnwrappingBeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: UnwrappingBeanSerializer(BeanSerializerBase src, NameTransformer transformer)
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer(BeanSerializerBase src, NameTransformer transformer)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer(BeanSerializerBase src, NameTransformer transformer)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Constructor used for creating unwrapping instance of a standard `BeanSerializer`
  syntax:
    content: public UnwrappingBeanSerializer(BeanSerializerBase src, NameTransformer transformer)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: transformer
      type: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer._nameTransformer
  id: _nameTransformer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: _nameTransformer
  nameWithType: UnwrappingBeanSerializer._nameTransformer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer._nameTransformer
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Transformer used to add prefix and/or suffix for properties of unwrapped POJO.
  syntax:
    content: protected final NameTransformer _nameTransformer
    return:
      type: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer()
  id: asArraySerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: asArraySerializer()
  nameWithType: UnwrappingBeanSerializer.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer()
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: JSON Array output cannot be done if unwrapping operation is requested; so implementation will simply return 'this'.
  syntax:
    content: protected BeanSerializerBase asArraySerializer()
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer()
  id: isUnwrappingSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: isUnwrappingSerializer()
  nameWithType: UnwrappingBeanSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer()
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Accessor for checking whether this serializer is an "unwrapping" serializer; this is necessary to know since it may also require caller to suppress writing of the leading property name.
  syntax:
    content: public boolean isUnwrappingSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  nameWithType: UnwrappingBeanSerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Main serialization method that will delegate actual output to configured <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> instances.
  syntax:
    content: public final void serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: UnwrappingBeanSerializer.serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Method that can be called to ask implementation to serialize values of type this serializer handles, using specified type serializer for embedding necessary type information.


    Default implementation will throw <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref> to indicate that proper type handling needs to be implemented.


    For simple datatypes written as a single scalar value (JSON String, Number, Boolean), implementation would look like:


    ```java

    // note: method to call depends on whether this type is serialized as JSON scalar, object or Array!
      typeSer.writeTypePrefixForScalar(value, gen);
      serialize(value, gen, provider);
      typeSer.writeTypeSuffixForScalar(value, gen);
    ```


    and implementations for type serialized as JSON Arrays or Objects would differ slightly, as `START-ARRAY`/`END-ARRAY` and `START-OBJECT`/`END-OBJECT` pairs need to be properly handled with respect to serializing of contents.
  syntax:
    content: public void serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: toString()
  nameWithType: UnwrappingBeanSerializer.toString()
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString()
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  id: unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: unwrappingSerializer(NameTransformer transformer)
  nameWithType: UnwrappingBeanSerializer.unwrappingSerializer(NameTransformer transformer)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer(NameTransformer transformer)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Method that will return serializer instance that produces "unwrapped" serialization, if applicable for type being serialized (which is the case for some serializers that produce JSON Objects as output). If no unwrapped serializer can be constructed, will simply return serializer as-is.


    Default implementation just returns serializer as-is, indicating that no unwrapped variant exists
  syntax:
    content: public JsonSerializer<Object> unwrappingSerializer(NameTransformer transformer)
    parameters:
    - id: transformer
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId(java.lang.Object)
  id: withFilterId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: withFilterId(Object filterId)
  nameWithType: UnwrappingBeanSerializer.withFilterId(Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId(Object filterId)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with different filter id (used with `JsonFilter` annotation)
  syntax:
    content: public BeanSerializerBase withFilterId(Object filterId)
    parameters:
    - id: filterId
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals(java.util.Set<java.lang.String>)
  id: withIgnorals(java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: withIgnorals(Set<String> toIgnore)
  nameWithType: UnwrappingBeanSerializer.withIgnorals(Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals(Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with additional set of properties to ignore (from properties this instance otherwise has)
  syntax:
    content: protected BeanSerializerBase withIgnorals(Set<String> toIgnore)
    parameters:
    - id: toIgnore
      type: java.util.Set<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  id: withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: withObjectIdWriter(ObjectIdWriter objectIdWriter)
  nameWithType: UnwrappingBeanSerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with different <xref uid="com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter" data-throw-if-not-resolved="false">ObjectIdWriter</xref>.
  syntax:
    content: public BeanSerializerBase withObjectIdWriter(ObjectIdWriter objectIdWriter)
    parameters:
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer
  langs:
  - java
  name: withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: UnwrappingBeanSerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Mutant factory used for creating a new instance with modified set of properties.


    Note: in 2.11.x, need to keep non-abstract for slightly better compatibility (XML module extends)
  syntax:
    content: protected BeanSerializerBase withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
references:
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  name: BeanSerializerBase
  nameWithType: BeanSerializerBase
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer*
  name: UnwrappingBeanSerializer
  nameWithType: UnwrappingBeanSerializer.UnwrappingBeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.UnwrappingBeanSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.util.Set<java.lang.String>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    name: BeanPropertyWriter
    fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer*
  name: unwrappingSerializer
  nameWithType: UnwrappingBeanSerializer.unwrappingSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.unwrappingSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer*
  name: isUnwrappingSerializer
  nameWithType: UnwrappingBeanSerializer.isUnwrappingSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.isUnwrappingSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter*
  name: withObjectIdWriter
  nameWithType: UnwrappingBeanSerializer.withObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withObjectIdWriter
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId*
  name: withFilterId
  nameWithType: UnwrappingBeanSerializer.withFilterId
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withFilterId
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals*
  name: withIgnorals
  nameWithType: UnwrappingBeanSerializer.withIgnorals
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withIgnorals
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties*
  name: withProperties
  nameWithType: UnwrappingBeanSerializer.withProperties
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.withProperties
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer*
  name: asArraySerializer
  nameWithType: UnwrappingBeanSerializer.asArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.asArraySerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize*
  name: serialize
  nameWithType: UnwrappingBeanSerializer.serialize
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialize
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType*
  name: serializeWithType
  nameWithType: UnwrappingBeanSerializer.serializeWithType
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString*
  name: toString
  nameWithType: UnwrappingBeanSerializer.toString
  fullName: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.toString
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  name: BeanSerializerBase.asArraySerializer()
  nameWithType: BeanSerializerBase.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  name: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  nameWithType: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  nameWithType: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  name: BeanSerializerBase.usesObjectId()
  nameWithType: BeanSerializerBase.usesObjectId()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  name: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  nameWithType: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.resolve(SerializerProvider)
  nameWithType: BeanSerializerBase.resolve(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  name: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  nameWithType: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  name: StdSerializer._nonEmpty(Collection<?>)
  nameWithType: StdSerializer._nonEmpty(Collection<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  name: StdSerializer.handledType()
  nameWithType: StdSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  name: StdSerializer.createSchemaNode(String,boolean)
  nameWithType: StdSerializer.createSchemaNode(String,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  nameWithType: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  name: BeanSerializerBase.getSchema(SerializerProvider,Type)
  nameWithType: BeanSerializerBase.getSchema(SerializerProvider,Type)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  name: BeanSerializerBase.withFilterId(Object)
  nameWithType: BeanSerializerBase.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  name: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  nameWithType: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  name: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  nameWithType: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  name: BeanSerializerBase._customTypeId(Object)
  nameWithType: BeanSerializerBase._customTypeId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  name: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  nameWithType: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  name: BeanSerializerBase.withIgnorals(String[])
  nameWithType: BeanSerializerBase.withIgnorals(String[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  name: BeanSerializerBase.properties()
  nameWithType: BeanSerializerBase.properties()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  name: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  nameWithType: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  name: StdSerializer.createSchemaNode(String)
  nameWithType: StdSerializer.createSchemaNode(String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  name: BeanSerializerBase.withIgnorals(Set<String>)
  nameWithType: BeanSerializerBase.withIgnorals(Set<String>)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdSerializer._neitherNull(Object,Object)
  nameWithType: StdSerializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
  name: StdSerializer._nonEmpty(Collection
  nameWithType: StdSerializer._nonEmpty(Collection
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.isDefaultSerializer(JsonSerializer
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
  name: BeanSerializerBase.withIgnorals(Set
  nameWithType: BeanSerializerBase.withIgnorals(Set
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
