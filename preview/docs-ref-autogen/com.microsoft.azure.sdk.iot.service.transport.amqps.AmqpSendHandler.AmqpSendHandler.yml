### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler*"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler"
name: "AmqpSendHandler"
nameWithType: "AmqpSendHandler.AmqpSendHandler"
members:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  name: "AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  nameWithType: "AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  summary: "Constructor to set up connection parameters and initialize handshaker for transport"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  name: "AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  nameWithType: "AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  summary: "Constructor to set up connection parameters and initialize handshaker for transport"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the proxy options to tunnel through, if a proxy should be used."
    name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
type: "constructor"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
