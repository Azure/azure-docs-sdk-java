### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.datalake.models.RolePermissions
  id: RolePermissions
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models
  children:
  - com.azure.storage.file.datalake.models.RolePermissions.RolePermissions()
  - com.azure.storage.file.datalake.models.RolePermissions.equals(java.lang.Object)
  - com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission()
  - com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission()
  - com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission()
  - com.azure.storage.file.datalake.models.RolePermissions.hashCode()
  - com.azure.storage.file.datalake.models.RolePermissions.parseOctal(int)
  - com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic(java.lang.String,boolean)
  - com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission(boolean)
  - com.azure.storage.file.datalake.models.RolePermissions.setReadPermission(boolean)
  - com.azure.storage.file.datalake.models.RolePermissions.setWritePermission(boolean)
  - com.azure.storage.file.datalake.models.RolePermissions.toOctal()
  - com.azure.storage.file.datalake.models.RolePermissions.toSymbolic()
  langs:
  - java
  name: RolePermissions
  nameWithType: RolePermissions
  fullName: com.azure.storage.file.datalake.models.RolePermissions
  type: Class
  package: com.azure.storage.file.datalake.models
  summary: Represents the POSIX-style permissions on given resource for an arbitrary role. Each role can have any combination of read, write, and execute permissions. Manipulating resource permissions is only supported when ADLS interop and Hierarchical Namespace are enabled.
  syntax:
    content: public class RolePermissions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions()
  id: RolePermissions()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: RolePermissions()
  nameWithType: RolePermissions.RolePermissions()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions()
  overload: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions*
  type: Constructor
  package: com.azure.storage.file.datalake.models
  summary: Initializes an instance of `RolePermissions` with all values set to false.
  syntax:
    content: public RolePermissions()
- uid: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions(com.azure.storage.file.datalake.models.RolePermissions)
  id: RolePermissions(com.azure.storage.file.datalake.models.RolePermissions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: RolePermissions(RolePermissions other)
  nameWithType: RolePermissions.RolePermissions(RolePermissions other)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions(RolePermissions other)
  overload: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions*
  type: Constructor
  package: com.azure.storage.file.datalake.models
  summary: Package-private constructor for use by PathAccessControlEntry
  syntax:
    content: " RolePermissions(RolePermissions other)"
    parameters:
    - id: other
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref>
- uid: com.azure.storage.file.datalake.models.RolePermissions.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: equals(Object o)
  nameWithType: RolePermissions.equals(Object o)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.equals(Object o)
  overload: com.azure.storage.file.datalake.models.RolePermissions.equals*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission()
  id: hasExecutePermission()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: hasExecutePermission()
  nameWithType: RolePermissions.hasExecutePermission()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission()
  overload: com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public boolean hasExecutePermission()
    return:
      type: boolean
      description: the execute permission status
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission()
  id: hasReadPermission()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: hasReadPermission()
  nameWithType: RolePermissions.hasReadPermission()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission()
  overload: com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public boolean hasReadPermission()
    return:
      type: boolean
      description: the read permission status
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission()
  id: hasWritePermission()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: hasWritePermission()
  nameWithType: RolePermissions.hasWritePermission()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission()
  overload: com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public boolean hasWritePermission()
    return:
      type: boolean
      description: the write permission status
- uid: com.azure.storage.file.datalake.models.RolePermissions.hashCode()
  id: hashCode()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: hashCode()
  nameWithType: RolePermissions.hashCode()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hashCode()
  overload: com.azure.storage.file.datalake.models.RolePermissions.hashCode*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.storage.file.datalake.models.RolePermissions.parseOctal(int)
  id: parseOctal(int)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: parseOctal(int octal)
  nameWithType: RolePermissions.parseOctal(int octal)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.parseOctal(int octal)
  overload: com.azure.storage.file.datalake.models.RolePermissions.parseOctal*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Convert an octal representation of permissions for a given role into an `RolePermissions` instance.
  syntax:
    content: public static RolePermissions parseOctal(int octal)
    parameters:
    - id: octal
      type: int
      description: The octal digit representing the permissions for the given role.
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: An <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> instance with appropriate fields set.
- uid: com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic(java.lang.String,boolean)
  id: parseSymbolic(java.lang.String,boolean)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: parseSymbolic(String str, boolean allowStickyBit)
  nameWithType: RolePermissions.parseSymbolic(String str, boolean allowStickyBit)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic(String str, boolean allowStickyBit)
  overload: com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Convert a symbolic representation of permissions for a given role into an `RolePermissions` instance.
  syntax:
    content: public static RolePermissions parseSymbolic(String str, boolean allowStickyBit)
    parameters:
    - id: str
      type: java.lang.String
      description: The string representing the permissions for the given role.
    - id: allowStickyBit
      type: boolean
      description: >-
        Indicates whether or not the parsing should tolerate the sticky bit. The sticky bit is only
         valid as the last character of permissions for "other" in a <code>String</code> representing full permissions for a
         resource.
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: An <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> instance with appropriate fields set.
- uid: com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission(boolean)
  id: setExecutePermission(boolean)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: setExecutePermission(boolean hasExecutePermission)
  nameWithType: RolePermissions.setExecutePermission(boolean hasExecutePermission)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission(boolean hasExecutePermission)
  overload: com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the execute permission status.
  syntax:
    content: public RolePermissions setExecutePermission(boolean hasExecutePermission)
    parameters:
    - id: hasExecutePermission
      type: boolean
      description: Permission status to set
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the updated RolePermissions object
- uid: com.azure.storage.file.datalake.models.RolePermissions.setReadPermission(boolean)
  id: setReadPermission(boolean)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: setReadPermission(boolean hasReadPermission)
  nameWithType: RolePermissions.setReadPermission(boolean hasReadPermission)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setReadPermission(boolean hasReadPermission)
  overload: com.azure.storage.file.datalake.models.RolePermissions.setReadPermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the read permission status.
  syntax:
    content: public RolePermissions setReadPermission(boolean hasReadPermission)
    parameters:
    - id: hasReadPermission
      type: boolean
      description: Permission status to set
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the updated RolePermissions object
- uid: com.azure.storage.file.datalake.models.RolePermissions.setWritePermission(boolean)
  id: setWritePermission(boolean)
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: setWritePermission(boolean hasWritePermission)
  nameWithType: RolePermissions.setWritePermission(boolean hasWritePermission)
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setWritePermission(boolean hasWritePermission)
  overload: com.azure.storage.file.datalake.models.RolePermissions.setWritePermission*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the write permission status.
  syntax:
    content: public RolePermissions setWritePermission(boolean hasWritePermission)
    parameters:
    - id: hasWritePermission
      type: boolean
      description: Permission status to set
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the updated RolePermissions object
- uid: com.azure.storage.file.datalake.models.RolePermissions.toOctal()
  id: toOctal()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: toOctal()
  nameWithType: RolePermissions.toOctal()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.toOctal()
  overload: com.azure.storage.file.datalake.models.RolePermissions.toOctal*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Converts the `RolePermissions` instance into its octal representation.
  syntax:
    content: public String toOctal()
    return:
      type: java.lang.String
      description: The <code>String</code> representation of the permissions.
- uid: com.azure.storage.file.datalake.models.RolePermissions.toSymbolic()
  id: toSymbolic()
  artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
  parent: com.azure.storage.file.datalake.models.RolePermissions
  langs:
  - java
  name: toSymbolic()
  nameWithType: RolePermissions.toSymbolic()
  fullName: com.azure.storage.file.datalake.models.RolePermissions.toSymbolic()
  overload: com.azure.storage.file.datalake.models.RolePermissions.toSymbolic*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Converts the `RolePermissions` instance into its symbolic representation.
  syntax:
    content: public String toSymbolic()
    return:
      type: java.lang.String
      description: The <code>String</code> representation of the permission.
references:
- uid: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions*
  name: RolePermissions
  nameWithType: RolePermissions.RolePermissions
  fullName: com.azure.storage.file.datalake.models.RolePermissions.RolePermissions
  package: com.azure.storage.file.datalake.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.storage.file.datalake.models.RolePermissions.parseOctal*
  name: parseOctal
  nameWithType: RolePermissions.parseOctal
  fullName: com.azure.storage.file.datalake.models.RolePermissions.parseOctal
  package: com.azure.storage.file.datalake.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic*
  name: parseSymbolic
  nameWithType: RolePermissions.parseSymbolic
  fullName: com.azure.storage.file.datalake.models.RolePermissions.parseSymbolic
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.toOctal*
  name: toOctal
  nameWithType: RolePermissions.toOctal
  fullName: com.azure.storage.file.datalake.models.RolePermissions.toOctal
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.toSymbolic*
  name: toSymbolic
  nameWithType: RolePermissions.toSymbolic
  fullName: com.azure.storage.file.datalake.models.RolePermissions.toSymbolic
  package: com.azure.storage.file.datalake.models
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.storage.file.datalake.models.RolePermissions.equals*
  name: equals
  nameWithType: RolePermissions.equals
  fullName: com.azure.storage.file.datalake.models.RolePermissions.equals
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.hashCode*
  name: hashCode
  nameWithType: RolePermissions.hashCode
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hashCode
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission*
  name: hasReadPermission
  nameWithType: RolePermissions.hasReadPermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasReadPermission
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission*
  name: hasWritePermission
  nameWithType: RolePermissions.hasWritePermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasWritePermission
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission*
  name: hasExecutePermission
  nameWithType: RolePermissions.hasExecutePermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.hasExecutePermission
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.setReadPermission*
  name: setReadPermission
  nameWithType: RolePermissions.setReadPermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setReadPermission
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.setWritePermission*
  name: setWritePermission
  nameWithType: RolePermissions.setWritePermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setWritePermission
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission*
  name: setExecutePermission
  nameWithType: RolePermissions.setExecutePermission
  fullName: com.azure.storage.file.datalake.models.RolePermissions.setExecutePermission
  package: com.azure.storage.file.datalake.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
