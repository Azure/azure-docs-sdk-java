### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromNull*"
fullName: "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromNull"
name: "deserializeFromNull"
nameWithType: "BeanDeserializer.deserializeFromNull"
members:
- uid: "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromNull(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  fullName: "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromNull(JsonParser p, DeserializationContext ctxt)"
  name: "deserializeFromNull(JsonParser p, DeserializationContext ctxt)"
  nameWithType: "BeanDeserializer.deserializeFromNull(JsonParser p, DeserializationContext ctxt)"
  summary: "Helper method called for rare case of pointing to <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NULL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NULL\"></xref> token. While this is most often an erroneous condition, there is one specific case with XML handling where polymorphic type with no properties is exposed as such, and should be handled same as empty Object."
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object deserializeFromNull(JsonParser p, DeserializationContext ctxt)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
