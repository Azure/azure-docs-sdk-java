### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages"
fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages"
name: "ListManagementImages"
nameWithType: "ListManagementImages"
summary: "An instance of this class provides access to all the operations defined in List<wbr>Management<wbr>Images."
syntax: "public interface **ListManagementImages**"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImage()"
  name: "addImage()"
  nameWithType: "ListManagementImages.addImage()"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  syntax: "public abstract ListManagementImages.ListManagementImagesAddImageDefinitionStages.WithListId addImage()"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the first stage of the addImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageDefinitionStages.WithListId?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageDefinitionStages.WithListId&text=WithListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImage(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  name: "addImage(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  nameWithType: "ListManagementImages.addImage(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter&text=AddImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Image addImage(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the Image object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageAsync(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  name: "addImageAsync(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  nameWithType: "ListManagementImages.addImageAsync(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageOptionalParameter&text=AddImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Image> addImageAsync(String listId, AddImageOptionalParameter addImageOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the observable to the Image object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInput()"
  name: "addImageFileInput()"
  nameWithType: "ListManagementImages.addImageFileInput()"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  syntax: "public abstract ListManagementImages.ListManagementImagesAddImageFileInputDefinitionStages.WithListId addImageFileInput()"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the first stage of the addImageFileInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageFileInputDefinitionStages.WithListId?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageFileInputDefinitionStages.WithListId&text=WithListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInput(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInput(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  name: "addImageFileInput(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  nameWithType: "ListManagementImages.addImageFileInput(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter&text=AddImageFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Image addImageFileInput(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the Image object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInputAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageFileInputAsync(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  name: "addImageFileInputAsync(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  nameWithType: "ListManagementImages.addImageFileInputAsync(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageFileInputOptionalParameter&text=AddImageFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Image> addImageFileInputAsync(String listId, byte[] imageStream, AddImageFileInputOptionalParameter addImageFileInputOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the observable to the Image object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInput()"
  name: "addImageUrlInput()"
  nameWithType: "ListManagementImages.addImageUrlInput()"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  syntax: "public abstract ListManagementImages.ListManagementImagesAddImageUrlInputDefinitionStages.WithListId addImageUrlInput()"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the first stage of the addImageUrlInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageUrlInputDefinitionStages.WithListId?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.ListManagementImagesAddImageUrlInputDefinitionStages.WithListId&text=WithListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInput(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInput(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  name: "addImageUrlInput(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  nameWithType: "ListManagementImages.addImageUrlInput(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter&text=AddImageUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Image addImageUrlInput(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the Image object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInputAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.addImageUrlInputAsync(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  name: "addImageUrlInputAsync(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  nameWithType: "ListManagementImages.addImageUrlInputAsync(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  summary: "Add an image to the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addImageUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.AddImageUrlInputOptionalParameter&text=AddImageUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Image> addImageUrlInputAsync(String listId, String contentType, BodyModelModel imageUrl, AddImageUrlInputOptionalParameter addImageUrlInputOptionalParameter)"
  desc: "Add an image to the list with list Id equal to list Id passed."
  returns:
    description: "the observable to the Image object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteAllImages(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteAllImages(String listId)"
  name: "deleteAllImages(String listId)"
  nameWithType: "ListManagementImages.deleteAllImages(String listId)"
  summary: "Deletes all images from the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract String deleteAllImages(String listId)"
  desc: "Deletes all images from the list with list Id equal to list Id passed."
  returns:
    description: "the String object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteAllImagesAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteAllImagesAsync(String listId)"
  name: "deleteAllImagesAsync(String listId)"
  nameWithType: "ListManagementImages.deleteAllImagesAsync(String listId)"
  summary: "Deletes all images from the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Observable<String> deleteAllImagesAsync(String listId)"
  desc: "Deletes all images from the list with list Id equal to list Id passed."
  returns:
    description: "the observable to the String object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteImage(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteImage(String listId, String imageId)"
  name: "deleteImage(String listId, String imageId)"
  nameWithType: "ListManagementImages.deleteImage(String listId, String imageId)"
  summary: "Deletes an image from the list with list Id and image Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the image."
    name: "imageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract String deleteImage(String listId, String imageId)"
  desc: "Deletes an image from the list with list Id and image Id passed."
  returns:
    description: "the String object if successful."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteImageAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.deleteImageAsync(String listId, String imageId)"
  name: "deleteImageAsync(String listId, String imageId)"
  nameWithType: "ListManagementImages.deleteImageAsync(String listId, String imageId)"
  summary: "Deletes an image from the list with list Id and image Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the image."
    name: "imageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Observable<String> deleteImageAsync(String listId, String imageId)"
  desc: "Deletes an image from the list with list Id and image Id passed."
  returns:
    description: "the observable to the String object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.getAllImageIds(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.getAllImageIds(String listId)"
  name: "getAllImageIds(String listId)"
  nameWithType: "ListManagementImages.getAllImageIds(String listId)"
  summary: "Gets all image Ids from the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ImageIds getAllImageIds(String listId)"
  desc: "Gets all image Ids from the list with list Id equal to list Id passed."
  returns:
    description: "the ImageIds object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ImageIds?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ImageIds&text=ImageIds\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.getAllImageIdsAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages.getAllImageIdsAsync(String listId)"
  name: "getAllImageIdsAsync(String listId)"
  nameWithType: "ListManagementImages.getAllImageIdsAsync(String listId)"
  summary: "Gets all image Ids from the list with list Id equal to list Id passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "List Id of the image list."
    name: "listId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Observable<ImageIds> getAllImageIdsAsync(String listId)"
  desc: "Gets all image Ids from the list with list Id equal to list Id passed."
  returns:
    description: "the observable to the ImageIds object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ImageIds?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ImageIds&text=ImageIds\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ListManagementImages."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.contentmoderator"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-contentmoderator:1.0.3-beta
