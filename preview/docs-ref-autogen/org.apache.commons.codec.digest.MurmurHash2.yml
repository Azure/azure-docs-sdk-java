### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.digest.MurmurHash2
  id: MurmurHash2
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest
  children:
  - org.apache.commons.codec.digest.MurmurHash2.hash32(byte[],int)
  - org.apache.commons.codec.digest.MurmurHash2.hash32(byte[],int,int)
  - org.apache.commons.codec.digest.MurmurHash2.hash32(java.lang.String)
  - org.apache.commons.codec.digest.MurmurHash2.hash32(java.lang.String,int,int)
  - org.apache.commons.codec.digest.MurmurHash2.hash64(byte[],int)
  - org.apache.commons.codec.digest.MurmurHash2.hash64(byte[],int,int)
  - org.apache.commons.codec.digest.MurmurHash2.hash64(java.lang.String)
  - org.apache.commons.codec.digest.MurmurHash2.hash64(java.lang.String,int,int)
  langs:
  - java
  name: MurmurHash2
  nameWithType: MurmurHash2
  fullName: org.apache.commons.codec.digest.MurmurHash2
  type: Class
  package: org.apache.commons.codec.digest
  summary: MurmurHash2 yields a 32-bit or 64-bit value. MurmurHash is a non-cryptographic hash function suitable for general hash-based lookup. The name comes from two basic operations, multiply (MU) and rotate (R), used in its inner loop. Unlike cryptographic hash functions, it is not specifically designed to be difficult to reverse by an adversary, making it unsuitable for cryptographic purposes. This is a re-implementation of the original C code plus some additional features. Public domain.
  syntax:
    content: public final class MurmurHash2
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.digest.MurmurHash2.MurmurHash2()
  id: MurmurHash2()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: MurmurHash2()
  nameWithType: MurmurHash2.MurmurHash2()
  fullName: org.apache.commons.codec.digest.MurmurHash2.MurmurHash2()
  overload: org.apache.commons.codec.digest.MurmurHash2.MurmurHash2*
  type: Constructor
  package: org.apache.commons.codec.digest
  syntax:
    content: private MurmurHash2()
- uid: org.apache.commons.codec.digest.MurmurHash2.hash32(byte[],int)
  id: hash32(byte[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash32(byte[] data, int length)
  nameWithType: MurmurHash2.hash32(byte[] data, int length)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash32(byte[] data, int length)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash32*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 32 bit hash from byte array with default seed value.
  syntax:
    content: public static int hash32(byte[] data, int length)
    parameters:
    - id: data
      type: byte[]
      description: byte array to hash
    - id: length
      type: int
      description: length of the array to hash
    return:
      type: int
      description: 32 bit hash of the given array
- uid: org.apache.commons.codec.digest.MurmurHash2.hash32(byte[],int,int)
  id: hash32(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash32(byte[] data, int length, int seed)
  nameWithType: MurmurHash2.hash32(byte[] data, int length, int seed)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash32(byte[] data, int length, int seed)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash32*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 32 bit hash from byte array of the given length and seed.
  syntax:
    content: public static int hash32(byte[] data, int length, int seed)
    parameters:
    - id: data
      type: byte[]
      description: byte array to hash
    - id: length
      type: int
      description: length of the array to hash
    - id: seed
      type: int
      description: initial seed value
    return:
      type: int
      description: 32 bit hash of the given array
- uid: org.apache.commons.codec.digest.MurmurHash2.hash32(java.lang.String)
  id: hash32(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash32(String text)
  nameWithType: MurmurHash2.hash32(String text)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash32(String text)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash32*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 32 bit hash from a string.
  syntax:
    content: public static int hash32(String text)
    parameters:
    - id: text
      type: java.lang.String
      description: string to hash
    return:
      type: int
      description: 32 bit hash of the given string
- uid: org.apache.commons.codec.digest.MurmurHash2.hash32(java.lang.String,int,int)
  id: hash32(java.lang.String,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash32(String text, int from, int length)
  nameWithType: MurmurHash2.hash32(String text, int from, int length)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash32(String text, int from, int length)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash32*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 32 bit hash from a substring.
  syntax:
    content: public static int hash32(String text, int from, int length)
    parameters:
    - id: text
      type: java.lang.String
      description: string to hash
    - id: from
      type: int
      description: starting index
    - id: length
      type: int
      description: length of the substring to hash
    return:
      type: int
      description: 32 bit hash of the given string
- uid: org.apache.commons.codec.digest.MurmurHash2.hash64(byte[],int)
  id: hash64(byte[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash64(byte[] data, int length)
  nameWithType: MurmurHash2.hash64(byte[] data, int length)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash64(byte[] data, int length)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash64*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 64 bit hash from byte array with default seed value.
  syntax:
    content: public static long hash64(byte[] data, int length)
    parameters:
    - id: data
      type: byte[]
      description: byte array to hash
    - id: length
      type: int
      description: length of the array to hash
    return:
      type: long
      description: 64 bit hash of the given string
- uid: org.apache.commons.codec.digest.MurmurHash2.hash64(byte[],int,int)
  id: hash64(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash64(byte[] data, int length, int seed)
  nameWithType: MurmurHash2.hash64(byte[] data, int length, int seed)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash64(byte[] data, int length, int seed)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash64*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 64 bit hash from byte array of the given length and seed.
  syntax:
    content: public static long hash64(byte[] data, int length, int seed)
    parameters:
    - id: data
      type: byte[]
      description: byte array to hash
    - id: length
      type: int
      description: length of the array to hash
    - id: seed
      type: int
      description: initial seed value
    return:
      type: long
      description: 64 bit hash of the given array
- uid: org.apache.commons.codec.digest.MurmurHash2.hash64(java.lang.String)
  id: hash64(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash64(String text)
  nameWithType: MurmurHash2.hash64(String text)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash64(String text)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash64*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 64 bit hash from a string.
  syntax:
    content: public static long hash64(String text)
    parameters:
    - id: text
      type: java.lang.String
      description: string to hash
    return:
      type: long
      description: 64 bit hash of the given string
- uid: org.apache.commons.codec.digest.MurmurHash2.hash64(java.lang.String,int,int)
  id: hash64(java.lang.String,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.digest.MurmurHash2
  langs:
  - java
  name: hash64(String text, int from, int length)
  nameWithType: MurmurHash2.hash64(String text, int from, int length)
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash64(String text, int from, int length)
  overload: org.apache.commons.codec.digest.MurmurHash2.hash64*
  type: Method
  package: org.apache.commons.codec.digest
  summary: Generates 64 bit hash from a substring.
  syntax:
    content: public static long hash64(String text, int from, int length)
    parameters:
    - id: text
      type: java.lang.String
      description: string to hash
    - id: from
      type: int
      description: starting index
    - id: length
      type: int
      description: length of the substring to hash
    return:
      type: long
      description: 64 bit hash of the given array
references:
- uid: org.apache.commons.codec.digest.MurmurHash2.MurmurHash2*
  name: MurmurHash2
  nameWithType: MurmurHash2.MurmurHash2
  fullName: org.apache.commons.codec.digest.MurmurHash2.MurmurHash2
  package: org.apache.commons.codec.digest
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.commons.codec.digest.MurmurHash2.hash32*
  name: hash32
  nameWithType: MurmurHash2.hash32
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash32
  package: org.apache.commons.codec.digest
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: org.apache.commons.codec.digest.MurmurHash2.hash64*
  name: hash64
  nameWithType: MurmurHash2.hash64
  fullName: org.apache.commons.codec.digest.MurmurHash2.hash64
  package: org.apache.commons.codec.digest
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
