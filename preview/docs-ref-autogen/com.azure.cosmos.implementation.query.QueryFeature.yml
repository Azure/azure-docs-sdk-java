### YamlMime:JavaEnum
uid: "com.azure.cosmos.implementation.query.QueryFeature"
fullName: "com.azure.cosmos.implementation.query.QueryFeature"
name: "QueryFeature"
nameWithType: "QueryFeature"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum QueryFeature extends Enum<QueryFeature>"
fields:
- uid: "com.azure.cosmos.implementation.query.QueryFeature.Aggregate"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.Aggregate"
  name: "Aggregate"
  nameWithType: "QueryFeature.Aggregate"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.CompositeAggregate"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.CompositeAggregate"
  name: "CompositeAggregate"
  nameWithType: "QueryFeature.CompositeAggregate"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.Distinct"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.Distinct"
  name: "Distinct"
  nameWithType: "QueryFeature.Distinct"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.GroupBy"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.GroupBy"
  name: "GroupBy"
  nameWithType: "QueryFeature.GroupBy"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.MultipleAggregates"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.MultipleAggregates"
  name: "MultipleAggregates"
  nameWithType: "QueryFeature.MultipleAggregates"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.MultipleOrderBy"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.MultipleOrderBy"
  name: "MultipleOrderBy"
  nameWithType: "QueryFeature.MultipleOrderBy"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.NonValueAggregate"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.NonValueAggregate"
  name: "NonValueAggregate"
  nameWithType: "QueryFeature.NonValueAggregate"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.None"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.None"
  name: "None"
  nameWithType: "QueryFeature.None"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.OffsetAndLimit"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.OffsetAndLimit"
  name: "OffsetAndLimit"
  nameWithType: "QueryFeature.OffsetAndLimit"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.OrderBy"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.OrderBy"
  name: "OrderBy"
  nameWithType: "QueryFeature.OrderBy"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.Top"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.Top"
  name: "Top"
  nameWithType: "QueryFeature.Top"
methods:
- uid: "com.azure.cosmos.implementation.query.QueryFeature.valueOf(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "QueryFeature.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueryFeature valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.QueryFeature?alt=com.azure.cosmos.implementation.query.QueryFeature&text=QueryFeature\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.query.QueryFeature.values()"
  fullName: "com.azure.cosmos.implementation.query.QueryFeature.values()"
  name: "values()"
  nameWithType: "QueryFeature.values()"
  syntax: "public static QueryFeature[] values()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.QueryFeature?alt=com.azure.cosmos.implementation.query.QueryFeature&text=QueryFeature\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
