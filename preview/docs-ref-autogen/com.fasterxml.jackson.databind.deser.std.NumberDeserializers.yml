### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers"
fullName: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers"
name: "NumberDeserializers"
nameWithType: "NumberDeserializers"
summary: "Container class for deserializers that handle core JDK primitive (and matching wrapper) types, as well as standard \"big\" numeric types. Note that this includes types such as <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Boolean\"></xref> and <xref uid=\"java.lang.Character\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Character\"></xref> which are not strictly numeric, but are part of primitive/wrapper types."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class NumberDeserializers"
constructors:
- "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializers()"
methods:
- "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.find(java.lang.Class<?>,java.lang.String)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.deser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
