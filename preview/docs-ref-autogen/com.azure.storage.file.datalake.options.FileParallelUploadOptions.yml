### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.options.FileParallelUploadOptions"
fullName: "com.azure.storage.file.datalake.options.FileParallelUploadOptions"
name: "FileParallelUploadOptions"
nameWithType: "FileParallelUploadOptions"
summary: "Extended options that may be passed when uploading a file in parallel."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FileParallelUploadOptions"
constructors:
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.FileParallelUploadOptions(java.io.InputStream,long)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.FileParallelUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
methods:
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getDataFlux()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getDataStream()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getHeaders()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getLength()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getMetadata()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getParallelTransferOptions()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getPermissions()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getRequestConditions()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.getUmask()"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setHeaders(com.azure.storage.file.datalake.models.PathHttpHeaders)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setParallelTransferOptions(com.azure.storage.common.ParallelTransferOptions)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setPermissions(java.lang.String)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setRequestConditions(com.azure.storage.file.datalake.models.DataLakeRequestConditions)"
- "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setUmask(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
