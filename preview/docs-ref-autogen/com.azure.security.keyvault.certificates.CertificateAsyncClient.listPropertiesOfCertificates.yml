### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates"
name: "listPropertiesOfCertificates"
nameWithType: "CertificateAsyncClient.listPropertiesOfCertificates"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates()"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates()"
  name: "listPropertiesOfCertificates()"
  nameWithType: "CertificateAsyncClient.listPropertiesOfCertificates()"
  summary: "List certificates in a the key vault. Retrieves the set of certificates resources in the key vault and the individual certificate response in the flux is represented by <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> as only the certificate identifier, thumbprint, attributes and tags are provided in the response. The policy and individual certificate versions are not listed in the response. This operation requires the certificates/list permission.\n\nIt is possible to get certificates with all the properties excluding the policy from this information. Convert the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> using <xref uid=\"com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateAsyncClient#getCertificateVersion(String, String)\"></xref> within <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux#flatMap(Function)\"></xref>.\n\n```java\ncertificateAsyncClient.listPropertiesOfCertificates()\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificate -> certificateAsyncClient.getCertificateVersion(certificate.getName(),\n         certificate.getVersion())\n         .subscribe(certificateResponse -> System.out.printf(\"Received certificate with name %s and key id %s\",\n             certificateResponse.getName(), certificateResponse.getKeyId())));\n```"
  syntax: "public PagedFlux<CertificateProperties> listPropertiesOfCertificates()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> for all the certificates in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates(boolean)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificates(boolean includePending)"
  name: "listPropertiesOfCertificates(boolean includePending)"
  nameWithType: "CertificateAsyncClient.listPropertiesOfCertificates(boolean includePending)"
  summary: "List certificates in a the key vault. Retrieves the set of certificates resources in the key vault and the individual certificate response in the flux is represented by <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> as only the certificate identifier, thumbprint, attributes and tags are provided in the response. The policy and individual certificate versions are not listed in the response. This operation requires the certificates/list permission.\n\nIt is possible to get certificates with all the properties excluding the policy from this information. Convert the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> using <xref uid=\"com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateAsyncClient#getCertificateVersion(String, String)\"></xref> within <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux#flatMap(Function)\"></xref>.\n\n```java\ncertificateAsyncClient.listPropertiesOfCertificates()\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificate -> certificateAsyncClient.getCertificateVersion(certificate.getName(),\n         certificate.getVersion())\n         .subscribe(certificateResponse -> System.out.printf(\"Received certificate with name %s and key id %s\",\n             certificateResponse.getName(), certificateResponse.getKeyId())));\n```"
  parameters:
  - description: "indicate if pending certificates should be included in the results."
    name: "includePending"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<CertificateProperties> listPropertiesOfCertificates(boolean includePending)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> for all the certificates in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
