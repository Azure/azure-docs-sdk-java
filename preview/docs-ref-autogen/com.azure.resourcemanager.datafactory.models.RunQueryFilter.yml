### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter"
fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter"
name: "RunQueryFilter"
nameWithType: "RunQueryFilter"
summary: "Query filter option for listing runs."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RunQueryFilter"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.RunQueryFilter()"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.RunQueryFilter()"
  name: "RunQueryFilter()"
  nameWithType: "RunQueryFilter.RunQueryFilter()"
  syntax: "public RunQueryFilter()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.operand()"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.operand()"
  name: "operand()"
  nameWithType: "RunQueryFilter.operand()"
  summary: "Get the operand property: Parameter name to be used for filter."
  syntax: "public RunQueryFilterOperand operand()"
  desc: "Get the operand property: Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status."
  returns:
    description: "the operand value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand&text=RunQueryFilterOperand\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.operator()"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.operator()"
  name: "operator()"
  nameWithType: "RunQueryFilter.operator()"
  summary: "Get the operator property: Operator to be used for filter."
  syntax: "public RunQueryFilterOperator operator()"
  desc: "Get the operator property: Operator to be used for filter."
  returns:
    description: "the operator value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator&text=RunQueryFilterOperator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.validate()"
  name: "validate()"
  nameWithType: "RunQueryFilter.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.values()"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.values()"
  name: "values()"
  nameWithType: "RunQueryFilter.values()"
  summary: "Get the values property: List of filter values."
  syntax: "public List<String> values()"
  desc: "Get the values property: List of filter values."
  returns:
    description: "the values value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand(com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand)"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand(RunQueryFilterOperand operand)"
  name: "withOperand(RunQueryFilterOperand operand)"
  nameWithType: "RunQueryFilter.withOperand(RunQueryFilterOperand operand)"
  summary: "Set the operand property: Parameter name to be used for filter."
  parameters:
  - description: "the operand value to set."
    name: "operand"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand&text=RunQueryFilterOperand\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunQueryFilter withOperand(RunQueryFilterOperand operand)"
  desc: "Set the operand property: Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status."
  returns:
    description: "the RunQueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilter?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilter&text=RunQueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperator(com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator)"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperator(RunQueryFilterOperator operator)"
  name: "withOperator(RunQueryFilterOperator operator)"
  nameWithType: "RunQueryFilter.withOperator(RunQueryFilterOperator operator)"
  summary: "Set the operator property: Operator to be used for filter."
  parameters:
  - description: "the operator value to set."
    name: "operator"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilterOperator&text=RunQueryFilterOperator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunQueryFilter withOperator(RunQueryFilterOperator operator)"
  desc: "Set the operator property: Operator to be used for filter."
  returns:
    description: "the RunQueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilter?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilter&text=RunQueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withValues(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withValues(List<String> values)"
  name: "withValues(List<String> values)"
  nameWithType: "RunQueryFilter.withValues(List<String> values)"
  summary: "Set the values property: List of filter values."
  parameters:
  - description: "the values value to set."
    name: "values"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RunQueryFilter withValues(List<String> values)"
  desc: "Set the values property: List of filter values."
  returns:
    description: "the RunQueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilter?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilter&text=RunQueryFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Query filter option for listing runs."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
