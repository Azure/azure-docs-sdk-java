### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync"
name: "tagImageWithServiceResponseAsync"
nameWithType: "ComputerVisionImpl.tagImageWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  name: "tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  nameWithType: "ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "tagImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter&text=TagImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  returns:
    description: "the observable to the TagResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language, String modelVersion)"
  name: "tagImageWithServiceResponseAsync(String url, String language, String modelVersion)"
  nameWithType: "ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language, String modelVersion)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional parameter to specify the version of the AI model. Accepted values are: \"latest\", \"2021-04-01\". Defaults to \"latest\"."
    name: "modelVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, String language, String modelVersion)"
  returns:
    description: "the observable to the TagResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.6-beta
