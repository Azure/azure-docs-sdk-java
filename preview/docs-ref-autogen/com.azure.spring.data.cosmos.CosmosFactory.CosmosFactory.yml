### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.CosmosFactory.CosmosFactory*"
fullName: "com.azure.spring.data.cosmos.CosmosFactory.CosmosFactory"
name: "CosmosFactory"
nameWithType: "CosmosFactory.CosmosFactory"
members:
- uid: "com.azure.spring.data.cosmos.CosmosFactory.CosmosFactory(com.azure.cosmos.CosmosAsyncClient,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.CosmosFactory.CosmosFactory(CosmosAsyncClient cosmosAsyncClient, String databaseName)"
  name: "CosmosFactory(CosmosAsyncClient cosmosAsyncClient, String databaseName)"
  nameWithType: "CosmosFactory.CosmosFactory(CosmosAsyncClient cosmosAsyncClient, String databaseName)"
  summary: "Validate config and initialization"
  parameters:
  - description: "cosmosAsyncClient"
    name: "cosmosAsyncClient"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  - description: "databaseName"
    name: "databaseName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosFactory(CosmosAsyncClient cosmosAsyncClient, String databaseName)"
type: "constructor"
metadata: {}
package: "com.azure.spring.data.cosmos"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
