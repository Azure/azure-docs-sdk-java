### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextTokenWithBuffering*"
fullName: "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextTokenWithBuffering"
name: "_nextTokenWithBuffering"
nameWithType: "FilteringParserDelegate._nextTokenWithBuffering"
members:
- uid: "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext)"
  fullName: "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextTokenWithBuffering(TokenFilterContext buffRoot)"
  name: "_nextTokenWithBuffering(TokenFilterContext buffRoot)"
  nameWithType: "FilteringParserDelegate._nextTokenWithBuffering(TokenFilterContext buffRoot)"
  summary: "Method called when a new potentially included context is found."
  parameters:
  - name: "buffRoot"
    type: "<xref href=\"com.fasterxml.jackson.core.filter.TokenFilterContext?alt=com.fasterxml.jackson.core.filter.TokenFilterContext&text=TokenFilterContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final JsonToken _nextTokenWithBuffering(TokenFilterContext buffRoot)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.filter"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
