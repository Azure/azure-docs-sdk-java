### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense"
fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense"
name: "ContentKeyPolicyPlayReadyLicense"
nameWithType: "ContentKeyPolicyPlayReadyLicense"
summary: "The Play<wbr>Ready license."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContentKeyPolicyPlayReadyLicense"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  name: "ContentKeyPolicyPlayReadyLicense()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.ContentKeyPolicyPlayReadyLicense()"
  syntax: "public ContentKeyPolicyPlayReadyLicense()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  name: "allowTestDevices()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.allowTestDevices()"
  summary: "Get the allow<wbr>Test<wbr>Devices property: A flag indicating whether test devices can use the license."
  syntax: "public boolean allowTestDevices()"
  desc: "Get the allowTestDevices property: A flag indicating whether test devices can use the license."
  returns:
    description: "the allowTestDevices value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.beginDate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.beginDate()"
  name: "beginDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.beginDate()"
  summary: "Get the begin<wbr>Date property: The begin date of license."
  syntax: "public OffsetDateTime beginDate()"
  desc: "Get the beginDate property: The begin date of license."
  returns:
    description: "the beginDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  name: "contentKeyLocation()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.contentKeyLocation()"
  summary: "Get the content<wbr>Key<wbr>Location property: The content key location."
  syntax: "public ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation()"
  desc: "Get the contentKeyLocation property: The content key location."
  returns:
    description: "the contentKeyLocation value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentKeyLocation?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentKeyLocation&text=ContentKeyPolicyPlayReadyContentKeyLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.contentType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.contentType()"
  name: "contentType()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.contentType()"
  summary: "Get the content<wbr>Type property: The Play<wbr>Ready content type."
  syntax: "public ContentKeyPolicyPlayReadyContentType contentType()"
  desc: "Get the contentType property: The PlayReady content type."
  returns:
    description: "the contentType value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentType&text=ContentKeyPolicyPlayReadyContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.expirationDate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.expirationDate()"
  name: "expirationDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.expirationDate()"
  summary: "Get the expiration<wbr>Date property: The expiration date of license."
  syntax: "public OffsetDateTime expirationDate()"
  desc: "Get the expirationDate property: The expiration date of license."
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  name: "gracePeriod()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.gracePeriod()"
  summary: "Get the grace<wbr>Period property: The grace period of license."
  syntax: "public Duration gracePeriod()"
  desc: "Get the gracePeriod property: The grace period of license."
  returns:
    description: "the gracePeriod value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.licenseType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.licenseType()"
  name: "licenseType()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.licenseType()"
  summary: "Get the license<wbr>Type property: The license type."
  syntax: "public ContentKeyPolicyPlayReadyLicenseType licenseType()"
  desc: "Get the licenseType property: The license type."
  returns:
    description: "the licenseType value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicenseType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicenseType&text=ContentKeyPolicyPlayReadyLicenseType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.playRight()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.playRight()"
  name: "playRight()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.playRight()"
  summary: "Get the play<wbr>Right property: The license Play<wbr>Right."
  syntax: "public ContentKeyPolicyPlayReadyPlayRight playRight()"
  desc: "Get the playRight property: The license PlayRight."
  returns:
    description: "the playRight value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyPlayRight?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyPlayRight&text=ContentKeyPolicyPlayReadyPlayRight\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  name: "relativeBeginDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.relativeBeginDate()"
  summary: "Get the relative<wbr>Begin<wbr>Date property: The relative begin date of license."
  syntax: "public Duration relativeBeginDate()"
  desc: "Get the relativeBeginDate property: The relative begin date of license."
  returns:
    description: "the relativeBeginDate value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  name: "relativeExpirationDate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.relativeExpirationDate()"
  summary: "Get the relative<wbr>Expiration<wbr>Date property: The relative expiration date of license."
  syntax: "public Duration relativeExpirationDate()"
  desc: "Get the relativeExpirationDate property: The relative expiration date of license."
  returns:
    description: "the relativeExpirationDate value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.validate()"
  name: "validate()"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean allowTestDevices)"
  name: "withAllowTestDevices(boolean allowTestDevices)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withAllowTestDevices(boolean allowTestDevices)"
  summary: "Set the allow<wbr>Test<wbr>Devices property: A flag indicating whether test devices can use the license."
  parameters:
  - description: "the allowTestDevices value to set."
    name: "allowTestDevices"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withAllowTestDevices(boolean allowTestDevices)"
  desc: "Set the allowTestDevices property: A flag indicating whether test devices can use the license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withBeginDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withBeginDate(OffsetDateTime beginDate)"
  name: "withBeginDate(OffsetDateTime beginDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withBeginDate(OffsetDateTime beginDate)"
  summary: "Set the begin<wbr>Date property: The begin date of license."
  parameters:
  - description: "the beginDate value to set."
    name: "beginDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withBeginDate(OffsetDateTime beginDate)"
  desc: "Set the beginDate property: The begin date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentKeyLocation)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  name: "withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  summary: "Set the content<wbr>Key<wbr>Location property: The content key location."
  parameters:
  - description: "the contentKeyLocation value to set."
    name: "contentKeyLocation"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentKeyLocation?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentKeyLocation&text=ContentKeyPolicyPlayReadyContentKeyLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withContentKeyLocation(ContentKeyPolicyPlayReadyContentKeyLocation contentKeyLocation)"
  desc: "Set the contentKeyLocation property: The content key location."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withContentType(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  name: "withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  summary: "Set the content<wbr>Type property: The Play<wbr>Ready content type."
  parameters:
  - description: "the contentType value to set."
    name: "contentType"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyContentType&text=ContentKeyPolicyPlayReadyContentType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withContentType(ContentKeyPolicyPlayReadyContentType contentType)"
  desc: "Set the contentType property: The PlayReady content type."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withExpirationDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withExpirationDate(OffsetDateTime expirationDate)"
  name: "withExpirationDate(OffsetDateTime expirationDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withExpirationDate(OffsetDateTime expirationDate)"
  summary: "Set the expiration<wbr>Date property: The expiration date of license."
  parameters:
  - description: "the expirationDate value to set."
    name: "expirationDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withExpirationDate(OffsetDateTime expirationDate)"
  desc: "Set the expirationDate property: The expiration date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withGracePeriod(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withGracePeriod(Duration gracePeriod)"
  name: "withGracePeriod(Duration gracePeriod)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withGracePeriod(Duration gracePeriod)"
  summary: "Set the grace<wbr>Period property: The grace period of license."
  parameters:
  - description: "the gracePeriod value to set."
    name: "gracePeriod"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withGracePeriod(Duration gracePeriod)"
  desc: "Set the gracePeriod property: The grace period of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withLicenseType(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicenseType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  name: "withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  summary: "Set the license<wbr>Type property: The license type."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicenseType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicenseType&text=ContentKeyPolicyPlayReadyLicenseType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withLicenseType(ContentKeyPolicyPlayReadyLicenseType licenseType)"
  desc: "Set the licenseType property: The license type."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withPlayRight(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyPlayRight)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  name: "withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  summary: "Set the play<wbr>Right property: The license Play<wbr>Right."
  parameters:
  - description: "the playRight value to set."
    name: "playRight"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyPlayRight?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyPlayRight&text=ContentKeyPolicyPlayReadyPlayRight\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withPlayRight(ContentKeyPolicyPlayReadyPlayRight playRight)"
  desc: "Set the playRight property: The license PlayRight."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(Duration relativeBeginDate)"
  name: "withRelativeBeginDate(Duration relativeBeginDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withRelativeBeginDate(Duration relativeBeginDate)"
  summary: "Set the relative<wbr>Begin<wbr>Date property: The relative begin date of license."
  parameters:
  - description: "the relativeBeginDate value to set."
    name: "relativeBeginDate"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withRelativeBeginDate(Duration relativeBeginDate)"
  desc: "Set the relativeBeginDate property: The relative begin date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(Duration relativeExpirationDate)"
  name: "withRelativeExpirationDate(Duration relativeExpirationDate)"
  nameWithType: "ContentKeyPolicyPlayReadyLicense.withRelativeExpirationDate(Duration relativeExpirationDate)"
  summary: "Set the relative<wbr>Expiration<wbr>Date property: The relative expiration date of license."
  parameters:
  - description: "the relativeExpirationDate value to set."
    name: "relativeExpirationDate"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyPlayReadyLicense withRelativeExpirationDate(Duration relativeExpirationDate)"
  desc: "Set the relativeExpirationDate property: The relative expiration date of license."
  returns:
    description: "the ContentKeyPolicyPlayReadyLicense object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyPlayReadyLicense&text=ContentKeyPolicyPlayReadyLicense\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The PlayReady license."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
