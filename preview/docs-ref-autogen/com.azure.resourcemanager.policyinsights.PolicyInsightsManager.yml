### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager"
fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager"
name: "PolicyInsightsManager"
nameWithType: "PolicyInsightsManager"
summary: "Entry point to Policy<wbr>Insights<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PolicyInsightsManager"
methods:
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.attestations()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.attestations()"
  name: "attestations()"
  nameWithType: "PolicyInsightsManager.attestations()"
  syntax: "public Attestations attestations()"
  returns:
    description: "Resource collection API of Attestations."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestations?alt=com.azure.resourcemanager.policyinsights.models.Attestations&text=Attestations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "PolicyInsightsManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Policy<wbr>Insights service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PolicyInsightsManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of PolicyInsights service API entry point."
  returns:
    description: "the PolicyInsights service API instance."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.PolicyInsightsManager?alt=com.azure.resourcemanager.policyinsights.PolicyInsightsManager&text=PolicyInsightsManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.configure()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.configure()"
  name: "configure()"
  nameWithType: "PolicyInsightsManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Policy<wbr>Insights<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static PolicyInsightsManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create PolicyInsightsManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.PolicyInsightsManager.Configurable?alt=com.azure.resourcemanager.policyinsights.PolicyInsightsManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.operations()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.operations()"
  name: "operations()"
  nameWithType: "PolicyInsightsManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Operations?alt=com.azure.resourcemanager.policyinsights.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyEvents()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyEvents()"
  name: "policyEvents()"
  nameWithType: "PolicyInsightsManager.policyEvents()"
  syntax: "public PolicyEvents policyEvents()"
  returns:
    description: "Resource collection API of PolicyEvents."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PolicyEvents?alt=com.azure.resourcemanager.policyinsights.models.PolicyEvents&text=PolicyEvents\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyMetadatas()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyMetadatas()"
  name: "policyMetadatas()"
  nameWithType: "PolicyInsightsManager.policyMetadatas()"
  syntax: "public PolicyMetadatas policyMetadatas()"
  returns:
    description: "Resource collection API of PolicyMetadatas."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PolicyMetadatas?alt=com.azure.resourcemanager.policyinsights.models.PolicyMetadatas&text=PolicyMetadatas\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyRestrictions()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyRestrictions()"
  name: "policyRestrictions()"
  nameWithType: "PolicyInsightsManager.policyRestrictions()"
  syntax: "public PolicyRestrictions policyRestrictions()"
  returns:
    description: "Resource collection API of PolicyRestrictions."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PolicyRestrictions?alt=com.azure.resourcemanager.policyinsights.models.PolicyRestrictions&text=PolicyRestrictions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyStates()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyStates()"
  name: "policyStates()"
  nameWithType: "PolicyInsightsManager.policyStates()"
  syntax: "public PolicyStates policyStates()"
  returns:
    description: "Resource collection API of PolicyStates."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PolicyStates?alt=com.azure.resourcemanager.policyinsights.models.PolicyStates&text=PolicyStates\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyTrackedResources()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.policyTrackedResources()"
  name: "policyTrackedResources()"
  nameWithType: "PolicyInsightsManager.policyTrackedResources()"
  syntax: "public PolicyTrackedResources policyTrackedResources()"
  returns:
    description: "Resource collection API of PolicyTrackedResources."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PolicyTrackedResources?alt=com.azure.resourcemanager.policyinsights.models.PolicyTrackedResources&text=PolicyTrackedResources\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.remediations()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.remediations()"
  name: "remediations()"
  nameWithType: "PolicyInsightsManager.remediations()"
  syntax: "public Remediations remediations()"
  returns:
    description: "Resource collection API of Remediations."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediations?alt=com.azure.resourcemanager.policyinsights.models.Remediations&text=Remediations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.serviceClient()"
  fullName: "com.azure.resourcemanager.policyinsights.PolicyInsightsManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "PolicyInsightsManager.serviceClient()"
  syntax: "public PolicyInsightsClient serviceClient()"
  returns:
    description: "Wrapped service client PolicyInsightsClient providing direct access to the underlying auto-generated API\n     implementation, based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.PolicyInsightsClient?alt=com.azure.resourcemanager.policyinsights.fluent.PolicyInsightsClient&text=PolicyInsightsClient\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to PolicyInsightsManager."
metadata: {}
package: "com.azure.resourcemanager.policyinsights"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
