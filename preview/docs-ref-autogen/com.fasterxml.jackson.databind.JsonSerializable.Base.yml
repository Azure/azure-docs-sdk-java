### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base
  id: Base
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.JsonSerializable.Base.Base()
  - com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: JsonSerializable.Base
  nameWithType: JsonSerializable.Base
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Base class with minimal implementation, as well as couple of extension methods that core Jackson databinding makes use of. Use of this base class is strongly recommended over directly implementing <xref uid="com.fasterxml.jackson.databind.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>.
  syntax:
    content: public abstract static class JsonSerializable.Base implements JsonSerializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.JsonSerializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.Base()
  id: Base()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonSerializable.Base
  langs:
  - java
  name: Base()
  nameWithType: JsonSerializable.Base.Base()
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.Base()
  overload: com.fasterxml.jackson.databind.JsonSerializable.Base.Base*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public Base()
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  id: isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonSerializable.Base
  langs:
  - java
  name: isEmpty(SerializerProvider serializers)
  nameWithType: JsonSerializable.Base.isEmpty(SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that may be called on instance to determine if it is considered "empty" for purposes of serialization filtering or not.
  syntax:
    content: public boolean isEmpty(SerializerProvider serializers)
    parameters:
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    return:
      type: boolean
references:
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.Base*
  name: Base
  nameWithType: JsonSerializable.Base.Base
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.Base
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty*
  name: isEmpty
  nameWithType: JsonSerializable.Base.isEmpty
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
