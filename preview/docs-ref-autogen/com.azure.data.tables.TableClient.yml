### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.TableClient
  id: TableClient
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables
  children:
  - com.azure.data.tables.TableClient.create()
  - com.azure.data.tables.TableClient.create(java.time.Duration)
  - com.azure.data.tables.TableClient.createEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableClient.createEntity(com.azure.data.tables.models.TableEntity,java.time.Duration)
  - com.azure.data.tables.TableClient.createEntityWithResponse(com.azure.data.tables.models.TableEntity,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.createWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.delete()
  - com.azure.data.tables.TableClient.delete(java.time.Duration)
  - com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String)
  - com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String,java.lang.String,java.time.Duration)
  - com.azure.data.tables.TableClient.deleteEntityWithResponse(java.lang.String,java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.getAccountName()
  - com.azure.data.tables.TableClient.getApiVersion()
  - com.azure.data.tables.TableClient.getEntity(java.lang.String,java.lang.String)
  - com.azure.data.tables.TableClient.getEntityWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.getTableName()
  - com.azure.data.tables.TableClient.getTableUrl()
  - com.azure.data.tables.TableClient.listEntities()
  - com.azure.data.tables.TableClient.listEntities(com.azure.data.tables.models.ListEntitiesOptions)
  - com.azure.data.tables.TableClient.listEntities(com.azure.data.tables.models.ListEntitiesOptions,java.time.Duration)
  - com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode)
  - com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  - com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  - com.azure.data.tables.TableClient.updateEntityWithResponse(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  - com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  - com.azure.data.tables.TableClient.upsertEntityWithResponse(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: TableClient
  nameWithType: TableClient
  fullName: com.azure.data.tables.TableClient
  type: Class
  package: com.azure.data.tables
  summary: sync client for table operations
  syntax:
    content: public class TableClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.TableClient.TableClient(com.azure.data.tables.TableAsyncClient)
  id: TableClient(com.azure.data.tables.TableAsyncClient)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: TableClient(TableAsyncClient client)
  nameWithType: TableClient.TableClient(TableAsyncClient client)
  fullName: com.azure.data.tables.TableClient.TableClient(TableAsyncClient client)
  overload: com.azure.data.tables.TableClient.TableClient*
  type: Constructor
  package: com.azure.data.tables
  syntax:
    content: " TableClient(TableAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.data.tables.TableAsyncClient
- uid: com.azure.data.tables.TableClient.create()
  id: create()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: create()
  nameWithType: TableClient.create()
  fullName: com.azure.data.tables.TableClient.create()
  overload: com.azure.data.tables.TableClient.create*
  type: Method
  package: com.azure.data.tables
  summary: creates new table with the name of this client
  syntax:
    content: public void create()
- uid: com.azure.data.tables.TableClient.create(java.time.Duration)
  id: create(java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: create(Duration timeout)
  nameWithType: TableClient.create(Duration timeout)
  fullName: com.azure.data.tables.TableClient.create(Duration timeout)
  overload: com.azure.data.tables.TableClient.create*
  type: Method
  package: com.azure.data.tables
  summary: creates new table with the name of this client
  syntax:
    content: public void create(Duration timeout)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for operation to complete.
- uid: com.azure.data.tables.TableClient.createEntity(com.azure.data.tables.models.TableEntity)
  id: createEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: createEntity(TableEntity tableEntity)
  nameWithType: TableClient.createEntity(TableEntity tableEntity)
  fullName: com.azure.data.tables.TableClient.createEntity(TableEntity tableEntity)
  overload: com.azure.data.tables.TableClient.createEntity*
  type: Method
  package: com.azure.data.tables
  summary: insert a TableEntity with the given properties and return that TableEntity. Property map must include rowKey and partitionKey
  syntax:
    content: public void createEntity(TableEntity tableEntity)
    parameters:
    - id: tableEntity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to add
- uid: com.azure.data.tables.TableClient.createEntity(com.azure.data.tables.models.TableEntity,java.time.Duration)
  id: createEntity(com.azure.data.tables.models.TableEntity,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: createEntity(TableEntity tableEntity, Duration timeout)
  nameWithType: TableClient.createEntity(TableEntity tableEntity, Duration timeout)
  fullName: com.azure.data.tables.TableClient.createEntity(TableEntity tableEntity, Duration timeout)
  overload: com.azure.data.tables.TableClient.createEntity*
  type: Method
  package: com.azure.data.tables
  summary: insert a TableEntity with the given properties and return that TableEntity. Property map must include rowKey and partitionKey
  syntax:
    content: public void createEntity(TableEntity tableEntity, Duration timeout)
    parameters:
    - id: tableEntity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to add
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
- uid: com.azure.data.tables.TableClient.createEntityWithResponse(com.azure.data.tables.models.TableEntity,java.time.Duration,com.azure.core.util.Context)
  id: createEntityWithResponse(com.azure.data.tables.models.TableEntity,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: createEntityWithResponse(TableEntity tableEntity, Duration timeout, Context context)
  nameWithType: TableClient.createEntityWithResponse(TableEntity tableEntity, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.createEntityWithResponse(TableEntity tableEntity, Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.createEntityWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: insert a TableEntity with the given properties and return that TableEntity. Property map must include rowKey and partitionKey
  syntax:
    content: public Response<Void> createEntityWithResponse(TableEntity tableEntity, Duration timeout, Context context)
    parameters:
    - id: tableEntity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to add
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response
- uid: com.azure.data.tables.TableClient.createWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: createWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: createWithResponse(Duration timeout, Context context)
  nameWithType: TableClient.createWithResponse(Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.createWithResponse(Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.createWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: creates a new table with the name of this client
  syntax:
    content: public Response<Void> createWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.data.tables.TableClient.delete()
  id: delete()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: delete()
  nameWithType: TableClient.delete()
  fullName: com.azure.data.tables.TableClient.delete()
  overload: com.azure.data.tables.TableClient.delete*
  type: Method
  package: com.azure.data.tables
  summary: deletes the table with the name of this client
  syntax:
    content: public void delete()
- uid: com.azure.data.tables.TableClient.delete(java.time.Duration)
  id: delete(java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: delete(Duration timeout)
  nameWithType: TableClient.delete(Duration timeout)
  fullName: com.azure.data.tables.TableClient.delete(Duration timeout)
  overload: com.azure.data.tables.TableClient.delete*
  type: Method
  package: com.azure.data.tables
  summary: deletes the table with the name of this client
  syntax:
    content: public void delete(Duration timeout)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for operation to complete.
- uid: com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String)
  id: deleteEntity(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: deleteEntity(String partitionKey, String rowKey)
  nameWithType: TableClient.deleteEntity(String partitionKey, String rowKey)
  fullName: com.azure.data.tables.TableClient.deleteEntity(String partitionKey, String rowKey)
  overload: com.azure.data.tables.TableClient.deleteEntity*
  type: Method
  package: com.azure.data.tables
  summary: deletes the entity with the given partition key and row key
  syntax:
    content: public void deleteEntity(String partitionKey, String rowKey)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key
    - id: rowKey
      type: java.lang.String
      description: the row key
- uid: com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String,java.lang.String)
  id: deleteEntity(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: deleteEntity(String partitionKey, String rowKey, String eTag)
  nameWithType: TableClient.deleteEntity(String partitionKey, String rowKey, String eTag)
  fullName: com.azure.data.tables.TableClient.deleteEntity(String partitionKey, String rowKey, String eTag)
  overload: com.azure.data.tables.TableClient.deleteEntity*
  type: Method
  package: com.azure.data.tables
  summary: deletes the entity with the given partition key and row key
  syntax:
    content: public void deleteEntity(String partitionKey, String rowKey, String eTag)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key
    - id: rowKey
      type: java.lang.String
      description: the row key
    - id: eTag
      type: java.lang.String
      description: the eTag of the entity, the delete will only occur if this matches the entity in the service
- uid: com.azure.data.tables.TableClient.deleteEntity(java.lang.String,java.lang.String,java.lang.String,java.time.Duration)
  id: deleteEntity(java.lang.String,java.lang.String,java.lang.String,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: deleteEntity(String partitionKey, String rowKey, String eTag, Duration timeout)
  nameWithType: TableClient.deleteEntity(String partitionKey, String rowKey, String eTag, Duration timeout)
  fullName: com.azure.data.tables.TableClient.deleteEntity(String partitionKey, String rowKey, String eTag, Duration timeout)
  overload: com.azure.data.tables.TableClient.deleteEntity*
  type: Method
  package: com.azure.data.tables
  summary: deletes the given entity
  syntax:
    content: public void deleteEntity(String partitionKey, String rowKey, String eTag, Duration timeout)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key
    - id: rowKey
      type: java.lang.String
      description: the row key
    - id: eTag
      type: java.lang.String
      description: the eTag of the entity, the delete will only occur if this matches the entity in the service
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
- uid: com.azure.data.tables.TableClient.deleteEntityWithResponse(java.lang.String,java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: deleteEntityWithResponse(java.lang.String,java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: deleteEntityWithResponse(String partitionKey, String rowKey, String eTag, Duration timeout, Context context)
  nameWithType: TableClient.deleteEntityWithResponse(String partitionKey, String rowKey, String eTag, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.deleteEntityWithResponse(String partitionKey, String rowKey, String eTag, Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.deleteEntityWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: deletes the given entity
  syntax:
    content: public Response<Void> deleteEntityWithResponse(String partitionKey, String rowKey, String eTag, Duration timeout, Context context)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key
    - id: rowKey
      type: java.lang.String
      description: the row key
    - id: eTag
      type: java.lang.String
      description: the eTag of the entity, the delete will only occur if this matches the entity in the service
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response
- uid: com.azure.data.tables.TableClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: deleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: deleteWithResponse(Duration timeout, Context context)
  nameWithType: TableClient.deleteWithResponse(Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.deleteWithResponse(Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.deleteWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: deletes the table with the name of this client
  syntax:
    content: public Response<Void> deleteWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.data.tables.TableClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getAccountName()
  nameWithType: TableClient.getAccountName()
  fullName: com.azure.data.tables.TableClient.getAccountName()
  overload: com.azure.data.tables.TableClient.getAccountName*
  type: Method
  package: com.azure.data.tables
  summary: returns the account for this table
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: a string of the account name
- uid: com.azure.data.tables.TableClient.getApiVersion()
  id: getApiVersion()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getApiVersion()
  nameWithType: TableClient.getApiVersion()
  fullName: com.azure.data.tables.TableClient.getApiVersion()
  overload: com.azure.data.tables.TableClient.getApiVersion*
  type: Method
  package: com.azure.data.tables
  summary: returns the version
  syntax:
    content: public TablesServiceVersion getApiVersion()
    return:
      type: com.azure.data.tables.TablesServiceVersion
      description: the version
- uid: com.azure.data.tables.TableClient.getEntity(java.lang.String,java.lang.String)
  id: getEntity(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getEntity(String partitionKey, String rowKey)
  nameWithType: TableClient.getEntity(String partitionKey, String rowKey)
  fullName: com.azure.data.tables.TableClient.getEntity(String partitionKey, String rowKey)
  overload: com.azure.data.tables.TableClient.getEntity*
  type: Method
  package: com.azure.data.tables
  summary: gets the entity which fits the given criteria
  syntax:
    content: public TableEntity getEntity(String partitionKey, String rowKey)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key of the entity
    - id: rowKey
      type: java.lang.String
      description: the row key of the entity
    return:
      type: com.azure.data.tables.models.TableEntity
      description: the table entity
- uid: com.azure.data.tables.TableClient.getEntityWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getEntityWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getEntityWithResponse(String partitionKey, String rowKey, Context context)
  nameWithType: TableClient.getEntityWithResponse(String partitionKey, String rowKey, Context context)
  fullName: com.azure.data.tables.TableClient.getEntityWithResponse(String partitionKey, String rowKey, Context context)
  overload: com.azure.data.tables.TableClient.getEntityWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: gets the entity which fits the given criteria
  syntax:
    content: public Response<TableEntity> getEntityWithResponse(String partitionKey, String rowKey, Context context)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: the partition key of the entity
    - id: rowKey
      type: java.lang.String
      description: the row key of the entity
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<com.azure.data.tables.models.TableEntity>
      description: a mono of the response with the table entity
- uid: com.azure.data.tables.TableClient.getTableName()
  id: getTableName()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getTableName()
  nameWithType: TableClient.getTableName()
  fullName: com.azure.data.tables.TableClient.getTableName()
  overload: com.azure.data.tables.TableClient.getTableName*
  type: Method
  package: com.azure.data.tables
  summary: returns the table name associated with the client\*
  syntax:
    content: public String getTableName()
    return:
      type: java.lang.String
      description: table name
- uid: com.azure.data.tables.TableClient.getTableUrl()
  id: getTableUrl()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: getTableUrl()
  nameWithType: TableClient.getTableUrl()
  fullName: com.azure.data.tables.TableClient.getTableUrl()
  overload: com.azure.data.tables.TableClient.getTableUrl*
  type: Method
  package: com.azure.data.tables
  summary: returns Url of this table
  syntax:
    content: public String getTableUrl()
    return:
      type: java.lang.String
      description: Url
- uid: com.azure.data.tables.TableClient.listEntities()
  id: listEntities()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: listEntities()
  nameWithType: TableClient.listEntities()
  fullName: com.azure.data.tables.TableClient.listEntities()
  overload: com.azure.data.tables.TableClient.listEntities*
  type: Method
  package: com.azure.data.tables
  summary: Queries and returns all entities in the given table
  syntax:
    content: public PagedIterable<TableEntity> listEntities()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableEntity>
      description: a list of the tables that fit the query
- uid: com.azure.data.tables.TableClient.listEntities(com.azure.data.tables.models.ListEntitiesOptions)
  id: listEntities(com.azure.data.tables.models.ListEntitiesOptions)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: listEntities(ListEntitiesOptions options)
  nameWithType: TableClient.listEntities(ListEntitiesOptions options)
  fullName: com.azure.data.tables.TableClient.listEntities(ListEntitiesOptions options)
  overload: com.azure.data.tables.TableClient.listEntities*
  type: Method
  package: com.azure.data.tables
  summary: Queries and returns entities in the given table using the odata QueryOptions
  syntax:
    content: public PagedIterable<TableEntity> listEntities(ListEntitiesOptions options)
    parameters:
    - id: options
      type: com.azure.data.tables.models.ListEntitiesOptions
      description: the odata query object
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableEntity>
      description: a list of the tables that fit the query
- uid: com.azure.data.tables.TableClient.listEntities(com.azure.data.tables.models.ListEntitiesOptions,java.time.Duration)
  id: listEntities(com.azure.data.tables.models.ListEntitiesOptions,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: listEntities(ListEntitiesOptions options, Duration timeout)
  nameWithType: TableClient.listEntities(ListEntitiesOptions options, Duration timeout)
  fullName: com.azure.data.tables.TableClient.listEntities(ListEntitiesOptions options, Duration timeout)
  overload: com.azure.data.tables.TableClient.listEntities*
  type: Method
  package: com.azure.data.tables
  summary: Queries and returns entities in the given table using the odata QueryOptions
  syntax:
    content: public PagedIterable<TableEntity> listEntities(ListEntitiesOptions options, Duration timeout)
    parameters:
    - id: options
      type: com.azure.data.tables.models.ListEntitiesOptions
      description: the odata query object
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableEntity>
      description: a list of the tables that fit the query
- uid: com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity)
  id: updateEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: updateEntity(TableEntity entity)
  nameWithType: TableClient.updateEntity(TableEntity entity)
  fullName: com.azure.data.tables.TableClient.updateEntity(TableEntity entity)
  overload: com.azure.data.tables.TableClient.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: if UpdateMode is MERGE, merges or fails if the entity doesn't exist. If UpdateMode is REPLACE replaces or fails if the entity doesn't exist
  syntax:
    content: public void updateEntity(TableEntity entity)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to update
- uid: com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode)
  id: updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode)
  nameWithType: TableClient.updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode)
  fullName: com.azure.data.tables.TableClient.updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode)
  overload: com.azure.data.tables.TableClient.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: if UpdateMode is MERGE, merges or fails if the entity doesn't exist. If UpdateMode is REPLACE replaces or fails if the entity doesn't exist
  syntax:
    content: public void updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to update
    - id: ifUnchanged
      type: boolean
      description: if the eTag of the entity must match the entity in the service or not
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: which type of update to execute
- uid: com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  id: updateEntity(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout)
  nameWithType: TableClient.updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout)
  fullName: com.azure.data.tables.TableClient.updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout)
  overload: com.azure.data.tables.TableClient.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: if UpdateMode is MERGE, merges or fails if the entity doesn't exist. If UpdateMode is REPLACE replaces or fails if the entity doesn't exist
  syntax:
    content: public void updateEntity(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to update
    - id: ifUnchanged
      type: boolean
      description: if the eTag of the entity must match the entity in the service or not
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: which type of update to execute
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
- uid: com.azure.data.tables.TableClient.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  id: updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: updateEntity(TableEntity entity, UpdateMode updateMode)
  nameWithType: TableClient.updateEntity(TableEntity entity, UpdateMode updateMode)
  fullName: com.azure.data.tables.TableClient.updateEntity(TableEntity entity, UpdateMode updateMode)
  overload: com.azure.data.tables.TableClient.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: if UpdateMode is MERGE, merges or fails if the entity doesn't exist. If UpdateMode is REPLACE replaces or fails if the entity doesn't exist
  syntax:
    content: public void updateEntity(TableEntity entity, UpdateMode updateMode)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to update
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: which type of update to execute
- uid: com.azure.data.tables.TableClient.updateEntityWithResponse(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  id: updateEntityWithResponse(com.azure.data.tables.models.TableEntity,boolean,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: updateEntityWithResponse(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout, Context context)
  nameWithType: TableClient.updateEntityWithResponse(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.updateEntityWithResponse(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.updateEntityWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: if UpdateMode is MERGE, merges or fails if the entity doesn't exist. If UpdateMode is REPLACE replaces or fails if the entity doesn't exist
  syntax:
    content: public Response<Void> updateEntityWithResponse(TableEntity entity, boolean ifUnchanged, UpdateMode updateMode, Duration timeout, Context context)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: the entity to update
    - id: ifUnchanged
      type: boolean
      description: if the eTag of the entity must match the entity in the service or not
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: which type of update to execute
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response
- uid: com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity)
  id: upsertEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: upsertEntity(TableEntity entity)
  nameWithType: TableClient.upsertEntity(TableEntity entity)
  fullName: com.azure.data.tables.TableClient.upsertEntity(TableEntity entity)
  overload: com.azure.data.tables.TableClient.upsertEntity*
  type: Method
  package: com.azure.data.tables
  summary: based on Mode it either inserts or merges if exists or inserts or merges if exists
  syntax:
    content: public void upsertEntity(TableEntity entity)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: entity to upsert
- uid: com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  id: upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: upsertEntity(TableEntity entity, UpdateMode updateMode)
  nameWithType: TableClient.upsertEntity(TableEntity entity, UpdateMode updateMode)
  fullName: com.azure.data.tables.TableClient.upsertEntity(TableEntity entity, UpdateMode updateMode)
  overload: com.azure.data.tables.TableClient.upsertEntity*
  type: Method
  package: com.azure.data.tables
  summary: based on Mode it either inserts or merges if exists or inserts or merges if exists
  syntax:
    content: public void upsertEntity(TableEntity entity, UpdateMode updateMode)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: entity to upsert
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: type of upsert
- uid: com.azure.data.tables.TableClient.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  id: upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: upsertEntity(TableEntity entity, UpdateMode updateMode, Duration timeout)
  nameWithType: TableClient.upsertEntity(TableEntity entity, UpdateMode updateMode, Duration timeout)
  fullName: com.azure.data.tables.TableClient.upsertEntity(TableEntity entity, UpdateMode updateMode, Duration timeout)
  overload: com.azure.data.tables.TableClient.upsertEntity*
  type: Method
  package: com.azure.data.tables
  summary: based on Mode it either inserts or merges if exists or inserts or merges if exists
  syntax:
    content: public void upsertEntity(TableEntity entity, UpdateMode updateMode, Duration timeout)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: entity to upsert
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: type of upsert
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
- uid: com.azure.data.tables.TableClient.upsertEntityWithResponse(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  id: upsertEntityWithResponse(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableClient
  langs:
  - java
  name: upsertEntityWithResponse(TableEntity entity, UpdateMode updateMode, Duration timeout, Context context)
  nameWithType: TableClient.upsertEntityWithResponse(TableEntity entity, UpdateMode updateMode, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableClient.upsertEntityWithResponse(TableEntity entity, UpdateMode updateMode, Duration timeout, Context context)
  overload: com.azure.data.tables.TableClient.upsertEntityWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: based on Mode it either inserts or merges if exists or inserts or merges if exists
  syntax:
    content: public Response<Void> upsertEntityWithResponse(TableEntity entity, UpdateMode updateMode, Duration timeout, Context context)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: entity to upsert
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: type of upsert
    - id: timeout
      type: java.time.Duration
      description: max time for query to execute before erroring out
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response
references:
- uid: com.azure.data.tables.TableAsyncClient
  name: TableAsyncClient
  nameWithType: TableAsyncClient
  fullName: com.azure.data.tables.TableAsyncClient
- uid: com.azure.data.tables.TableClient.TableClient*
  name: TableClient
  nameWithType: TableClient.TableClient
  fullName: com.azure.data.tables.TableClient.TableClient
  package: com.azure.data.tables
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.TableClient.getTableName*
  name: getTableName
  nameWithType: TableClient.getTableName
  fullName: com.azure.data.tables.TableClient.getTableName
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.getAccountName*
  name: getAccountName
  nameWithType: TableClient.getAccountName
  fullName: com.azure.data.tables.TableClient.getAccountName
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.getTableUrl*
  name: getTableUrl
  nameWithType: TableClient.getTableUrl
  fullName: com.azure.data.tables.TableClient.getTableUrl
  package: com.azure.data.tables
- uid: com.azure.data.tables.TablesServiceVersion
  name: TablesServiceVersion
  nameWithType: TablesServiceVersion
  fullName: com.azure.data.tables.TablesServiceVersion
- uid: com.azure.data.tables.TableClient.getApiVersion*
  name: getApiVersion
  nameWithType: TableClient.getApiVersion
  fullName: com.azure.data.tables.TableClient.getApiVersion
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.create*
  name: create
  nameWithType: TableClient.create
  fullName: com.azure.data.tables.TableClient.create
  package: com.azure.data.tables
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableClient.createWithResponse*
  name: createWithResponse
  nameWithType: TableClient.createWithResponse
  fullName: com.azure.data.tables.TableClient.createWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.TableEntity
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.azure.data.tables.models.TableEntity
- uid: com.azure.data.tables.TableClient.createEntity*
  name: createEntity
  nameWithType: TableClient.createEntity
  fullName: com.azure.data.tables.TableClient.createEntity
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.createEntityWithResponse*
  name: createEntityWithResponse
  nameWithType: TableClient.createEntityWithResponse
  fullName: com.azure.data.tables.TableClient.createEntityWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.upsertEntity*
  name: upsertEntity
  nameWithType: TableClient.upsertEntity
  fullName: com.azure.data.tables.TableClient.upsertEntity
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.UpdateMode
  name: UpdateMode
  nameWithType: UpdateMode
  fullName: com.azure.data.tables.models.UpdateMode
- uid: com.azure.data.tables.TableClient.upsertEntityWithResponse*
  name: upsertEntityWithResponse
  nameWithType: TableClient.upsertEntityWithResponse
  fullName: com.azure.data.tables.TableClient.upsertEntityWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.updateEntity*
  name: updateEntity
  nameWithType: TableClient.updateEntity
  fullName: com.azure.data.tables.TableClient.updateEntity
  package: com.azure.data.tables
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.data.tables.TableClient.updateEntityWithResponse*
  name: updateEntityWithResponse
  nameWithType: TableClient.updateEntityWithResponse
  fullName: com.azure.data.tables.TableClient.updateEntityWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.delete*
  name: delete
  nameWithType: TableClient.delete
  fullName: com.azure.data.tables.TableClient.delete
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: TableClient.deleteWithResponse
  fullName: com.azure.data.tables.TableClient.deleteWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.deleteEntity*
  name: deleteEntity
  nameWithType: TableClient.deleteEntity
  fullName: com.azure.data.tables.TableClient.deleteEntity
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient.deleteEntityWithResponse*
  name: deleteEntityWithResponse
  nameWithType: TableClient.deleteEntityWithResponse
  fullName: com.azure.data.tables.TableClient.deleteEntityWithResponse
  package: com.azure.data.tables
- uid: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableEntity>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.TableEntity
    name: TableEntity
    fullName: com.azure.data.tables.models.TableEntity
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableClient.listEntities*
  name: listEntities
  nameWithType: TableClient.listEntities
  fullName: com.azure.data.tables.TableClient.listEntities
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.ListEntitiesOptions
  name: ListEntitiesOptions
  nameWithType: ListEntitiesOptions
  fullName: com.azure.data.tables.models.ListEntitiesOptions
- uid: com.azure.data.tables.TableClient.getEntity*
  name: getEntity
  nameWithType: TableClient.getEntity
  fullName: com.azure.data.tables.TableClient.getEntity
  package: com.azure.data.tables
- uid: com.azure.core.http.rest.Response<com.azure.data.tables.models.TableEntity>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.TableEntity
    name: TableEntity
    fullName: com.azure.data.tables.models.TableEntity
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableClient.getEntityWithResponse*
  name: getEntityWithResponse
  nameWithType: TableClient.getEntityWithResponse
  fullName: com.azure.data.tables.TableClient.getEntityWithResponse
  package: com.azure.data.tables
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
