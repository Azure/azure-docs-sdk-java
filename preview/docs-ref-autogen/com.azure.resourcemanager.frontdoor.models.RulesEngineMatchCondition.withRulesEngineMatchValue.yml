### YamlMime:JavaMember
uid: "com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition.withRulesEngineMatchValue*"
fullName: "com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition.withRulesEngineMatchValue"
name: "withRulesEngineMatchValue"
nameWithType: "RulesEngineMatchCondition.withRulesEngineMatchValue"
members:
- uid: "com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition.withRulesEngineMatchValue(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition.withRulesEngineMatchValue(List<String> rulesEngineMatchValue)"
  name: "withRulesEngineMatchValue(List<String> rulesEngineMatchValue)"
  nameWithType: "RulesEngineMatchCondition.withRulesEngineMatchValue(List<String> rulesEngineMatchValue)"
  summary: "Set the rulesEngineMatchValue property: Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match."
  parameters:
  - description: "the rulesEngineMatchValue value to set."
    name: "rulesEngineMatchValue"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RulesEngineMatchCondition withRulesEngineMatchValue(List<String> rulesEngineMatchValue)"
  returns:
    description: "the RulesEngineMatchCondition object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition?alt=com.azure.resourcemanager.frontdoor.models.RulesEngineMatchCondition&text=RulesEngineMatchCondition\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.frontdoor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.0.0-beta.1
