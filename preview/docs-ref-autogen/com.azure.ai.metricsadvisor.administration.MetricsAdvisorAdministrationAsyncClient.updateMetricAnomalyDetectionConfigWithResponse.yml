### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse"
name: "updateMetricAnomalyDetectionConfigWithResponse"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse(com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration)"
  name: "updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration)"
  summary: "Update a configuration to detect anomalies in the time series of a metric.\n\n**Code sample**\n\n```java\nfinal String detectionConfigId = \"7b8069a1-1564-46da-9f50-b5d0dd9129ab\";\n metricsAdvisorAdminAsyncClient\n     .getMetricAnomalyDetectionConfigWithResponse(detectionConfigId)\n     .flatMap(response -> {\n         AnomalyDetectionConfiguration detectionConfig = response.getValue();\n         detectionConfig.setName(\"updated config name\");\n         detectionConfig.setDescription(\"updated with more detection conditions\");\n         DimensionKey seriesGroupKey = new DimensionKey()\n             .put(\"city\", \"Seoul\");\n         detectionConfig.addSeriesGroupDetectionCondition(\n             new MetricSeriesGroupDetectionCondition(seriesGroupKey)\n                 .setSmartDetectionCondition(new SmartDetectionCondition()\n                     .setSensitivity(10.0)\n                     .setAnomalyDetectorDirection(AnomalyDetectorDirection.UP)\n                     .setSuppressCondition(new SuppressCondition().setMinNumber(2).setMinRatio(2))));\n         return metricsAdvisorAdminAsyncClient\n             .updateMetricAnomalyDetectionConfigWithResponse(detectionConfig);\n     })\n     .subscribe(response -> {\n         AnomalyDetectionConfiguration updatedDetectionConfig = response.getValue();\n         System.out.printf(\"Detection config Id: %s%n\", updatedDetectionConfig.getId());\n         System.out.printf(\"Name: %s%n\", updatedDetectionConfig.getName());\n         System.out.printf(\"Description: %s%n\", updatedDetectionConfig.getDescription());\n         System.out.printf(\"MetricId: %s%n\", updatedDetectionConfig.getMetricId());\n     });\n```"
  parameters:
  - description: "The anomaly detection configuration."
    name: "detectionConfiguration"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AnomalyDetectionConfiguration>> updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> of a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the updated <xref uid=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnomalyDetectionConfiguration\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
