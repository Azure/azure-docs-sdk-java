### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively*"
fullName: "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively"
name: "canHandleBinaryNatively"
nameWithType: "JsonFactory.canHandleBinaryNatively"
members:
- uid: "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively()"
  fullName: "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively()"
  name: "canHandleBinaryNatively()"
  nameWithType: "JsonFactory.canHandleBinaryNatively()"
  summary: "Introspection method that higher-level functionality may call to see whether underlying data format can read and write binary data natively; that is, embeded it as-is without using encodings such as Base64.\n\nDefault implementation returns `false` as JSON does not support native access: all binary content must use Base64 encoding. Most binary formats (like Smile and Avro) support native binary content."
  overridden: "com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()"
  syntax: "public boolean canHandleBinaryNatively()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
