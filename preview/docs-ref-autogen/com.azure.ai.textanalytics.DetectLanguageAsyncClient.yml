### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  id: "DetectLanguageAsyncClient"
  parent: "com.azure.ai.textanalytics"
  children:
  - "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl)"
  - "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "DetectLanguageAsyncClient"
  nameWithType: "DetectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  type: "Class"
  package: "com.azure.ai.textanalytics"
  summary: "Helper class for managing detect language endpoint."
  syntax:
    content: " class DetectLanguageAsyncClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl)"
  id: "DetectLanguageAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl)"
  parent: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  langs:
  - "java"
  name: "DetectLanguageAsyncClient(TextAnalyticsClientImpl service)"
  nameWithType: "DetectLanguageAsyncClient.DetectLanguageAsyncClient(TextAnalyticsClientImpl service)"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient(TextAnalyticsClientImpl service)"
  overload: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics"
  summary: "Create a <xref uid=\"com.azure.ai.textanalytics.DetectLanguageAsyncClient\" data-throw-if-not-resolved=\"false\">DetectLanguageAsyncClient</xref> that sends requests to the Text Analytics services's detect language endpoint."
  syntax:
    content: " DetectLanguageAsyncClient(TextAnalyticsClientImpl service)"
    parameters:
    - id: "service"
      type: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
      description: "The proxy service used to perform REST calls."
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "DetectLanguageAsyncClient.detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Helper function for calling service with max overloaded parameters that a returns <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> which is a paged flux that contains <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">DetectLanguageResult</xref>."
  syntax:
    content: " TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>"
      description: "The list of documents to detect languages for."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">TextAnalyticsRequestOptions</xref> request options."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "The <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">DetectLanguageResult</xref>."
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions,com.azure.core.util.Context)"
  id: "detectLanguageBatchWithContext(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatchWithContext(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options, Context context)"
  nameWithType: "DetectLanguageAsyncClient.detectLanguageBatchWithContext(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options, Context context)"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options, Context context)"
  overload: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Helper function for calling service with max overloaded parameters with <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref> that a returns <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> which is a paged flux that contains <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">DetectLanguageResult</xref>."
  syntax:
    content: " TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatchWithContext(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options, Context context)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>"
      description: "The list of documents to detect languages for."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">TextAnalyticsRequestOptions</xref> request options."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "The <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">DetectLanguageResult</xref>."
references:
- uid: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
  name: "TextAnalyticsClientImpl"
  nameWithType: "TextAnalyticsClientImpl"
  fullName: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient*"
  name: "DetectLanguageAsyncClient"
  nameWithType: "DetectLanguageAsyncClient.DetectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.DetectLanguageAsyncClient"
  package: "com.azure.ai.textanalytics"
- uid: "java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
    name: "DetectLanguageInput"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
  name: "TextAnalyticsRequestOptions"
  nameWithType: "TextAnalyticsRequestOptions"
  fullName: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch*"
  name: "detectLanguageBatch"
  nameWithType: "DetectLanguageAsyncClient.detectLanguageBatch"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatch"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext*"
  name: "detectLanguageBatchWithContext"
  nameWithType: "DetectLanguageAsyncClient.detectLanguageBatchWithContext"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient.detectLanguageBatchWithContext"
  package: "com.azure.ai.textanalytics"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  name: "DetectLanguageInput"
  nameWithType: "DetectLanguageInput"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  name: "DetectLanguageResult"
  nameWithType: "DetectLanguageResult"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  name: "TextAnalyticsPagedFlux"
  nameWithType: "TextAnalyticsPagedFlux"
  fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
