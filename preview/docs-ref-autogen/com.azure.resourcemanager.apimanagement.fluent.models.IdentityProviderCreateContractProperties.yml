### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties"
name: "IdentityProviderCreateContractProperties"
nameWithType: "IdentityProviderCreateContractProperties"
summary: "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.allowedTenants()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.authority()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.passwordResetPolicyName()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.profileEditingPolicyName()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.signinPolicyName()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.signinTenant()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.signupPolicyName()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.type()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.validate()"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withAllowedTenants(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withAuthority(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withPasswordResetPolicyName(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withProfileEditingPolicyName(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSigninPolicyName(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSigninTenant(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSignupPolicyName(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withType(com.azure.resourcemanager.apimanagement.models.IdentityProviderType)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class IdentityProviderCreateContractProperties extends IdentityProviderBaseParameters"
constructors:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.IdentityProviderCreateContractProperties()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.IdentityProviderCreateContractProperties()"
  name: "IdentityProviderCreateContractProperties()"
  nameWithType: "IdentityProviderCreateContractProperties.IdentityProviderCreateContractProperties()"
  syntax: "public IdentityProviderCreateContractProperties()"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.clientId()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.clientId()"
  name: "clientId()"
  nameWithType: "IdentityProviderCreateContractProperties.clientId()"
  summary: "Get the clientId property: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
  syntax: "public String clientId()"
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.clientSecret()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.clientSecret()"
  name: "clientSecret()"
  nameWithType: "IdentityProviderCreateContractProperties.clientSecret()"
  summary: "Get the clientSecret property: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  syntax: "public String clientSecret()"
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.validate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.validate()"
  name: "validate()"
  nameWithType: "IdentityProviderCreateContractProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withAllowedTenants(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withAllowedTenants(List<String> allowedTenants)"
  name: "withAllowedTenants(List<String> allowedTenants)"
  nameWithType: "IdentityProviderCreateContractProperties.withAllowedTenants(List<String> allowedTenants)"
  summary: "Set the allowedTenants property: List of Allowed Tenants when configuring Azure Active Directory login."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withAllowedTenants(java.util.List<java.lang.String>)"
  parameters:
  - name: "allowedTenants"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IdentityProviderCreateContractProperties withAllowedTenants(List<String> allowedTenants)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withAuthority(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withAuthority(String authority)"
  name: "withAuthority(String authority)"
  nameWithType: "IdentityProviderCreateContractProperties.withAuthority(String authority)"
  summary: "Set the authority property: OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withAuthority(java.lang.String)"
  parameters:
  - name: "authority"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withAuthority(String authority)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withClientId(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withClientId(String clientId)"
  name: "withClientId(String clientId)"
  nameWithType: "IdentityProviderCreateContractProperties.withClientId(String clientId)"
  summary: "Set the clientId property: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withClientId(String clientId)"
  returns:
    description: "the IdentityProviderCreateContractProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withClientSecret(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withClientSecret(String clientSecret)"
  name: "withClientSecret(String clientSecret)"
  nameWithType: "IdentityProviderCreateContractProperties.withClientSecret(String clientSecret)"
  summary: "Set the clientSecret property: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withClientSecret(String clientSecret)"
  returns:
    description: "the IdentityProviderCreateContractProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withPasswordResetPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withPasswordResetPolicyName(String passwordResetPolicyName)"
  name: "withPasswordResetPolicyName(String passwordResetPolicyName)"
  nameWithType: "IdentityProviderCreateContractProperties.withPasswordResetPolicyName(String passwordResetPolicyName)"
  summary: "Set the passwordResetPolicyName property: Password Reset Policy Name. Only applies to AAD B2C Identity Provider."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withPasswordResetPolicyName(java.lang.String)"
  parameters:
  - name: "passwordResetPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withPasswordResetPolicyName(String passwordResetPolicyName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withProfileEditingPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withProfileEditingPolicyName(String profileEditingPolicyName)"
  name: "withProfileEditingPolicyName(String profileEditingPolicyName)"
  nameWithType: "IdentityProviderCreateContractProperties.withProfileEditingPolicyName(String profileEditingPolicyName)"
  summary: "Set the profileEditingPolicyName property: Profile Editing Policy Name. Only applies to AAD B2C Identity Provider."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withProfileEditingPolicyName(java.lang.String)"
  parameters:
  - name: "profileEditingPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withProfileEditingPolicyName(String profileEditingPolicyName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSigninPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSigninPolicyName(String signinPolicyName)"
  name: "withSigninPolicyName(String signinPolicyName)"
  nameWithType: "IdentityProviderCreateContractProperties.withSigninPolicyName(String signinPolicyName)"
  summary: "Set the signinPolicyName property: Signin Policy Name. Only applies to AAD B2C Identity Provider."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSigninPolicyName(java.lang.String)"
  parameters:
  - name: "signinPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withSigninPolicyName(String signinPolicyName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSigninTenant(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSigninTenant(String signinTenant)"
  name: "withSigninTenant(String signinTenant)"
  nameWithType: "IdentityProviderCreateContractProperties.withSigninTenant(String signinTenant)"
  summary: "Set the signinTenant property: The TenantId to use instead of Common when logging into Active Directory."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSigninTenant(java.lang.String)"
  parameters:
  - name: "signinTenant"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withSigninTenant(String signinTenant)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSignupPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withSignupPolicyName(String signupPolicyName)"
  name: "withSignupPolicyName(String signupPolicyName)"
  nameWithType: "IdentityProviderCreateContractProperties.withSignupPolicyName(String signupPolicyName)"
  summary: "Set the signupPolicyName property: Signup Policy Name. Only applies to AAD B2C Identity Provider."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withSignupPolicyName(java.lang.String)"
  parameters:
  - name: "signupPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withSignupPolicyName(String signupPolicyName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withType(com.azure.resourcemanager.apimanagement.models.IdentityProviderType)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties.withType(IdentityProviderType type)"
  name: "withType(IdentityProviderType type)"
  nameWithType: "IdentityProviderCreateContractProperties.withType(IdentityProviderType type)"
  summary: "Set the type property: Identity Provider Type identifier."
  overridden: "com.azure.resourcemanager.apimanagement.models.IdentityProviderBaseParameters.withType(com.azure.resourcemanager.apimanagement.models.IdentityProviderType)"
  parameters:
  - name: "type"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.IdentityProviderType?alt=com.azure.resourcemanager.apimanagement.models.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderCreateContractProperties withType(IdentityProviderType type)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderCreateContractProperties&text=IdentityProviderCreateContractProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
