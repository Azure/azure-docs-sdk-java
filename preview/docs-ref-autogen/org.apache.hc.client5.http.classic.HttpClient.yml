### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.classic.HttpClient
  id: HttpClient
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic
  children:
  - org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  - org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  - org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  - org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  - org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.ClassicHttpRequest)
  - org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest)
  - org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: HttpClient
  nameWithType: HttpClient
  fullName: org.apache.hc.client5.http.classic.HttpClient
  type: Interface
  package: org.apache.hc.client5.http.classic
  summary: This interface represents only the most basic contract for HTTP request execution. It imposes no restrictions or particular details on the request execution process and leaves the specifics of state management, authentication and redirect handling up to individual implementations.
  syntax:
    content: public interface HttpClient
- uid: org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  id: <T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: <T>execute(ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  nameWithType: HttpClient.<T>execute(ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  fullName: org.apache.hc.client5.http.classic.HttpClient.<T>execute(ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: >-
    Executes HTTP request using the default context and processes the response using the given response handler.


    Implementing classes are required to ensure that the content entity associated with the response is fully consumed and the underlying connection is released back to the connection manager automatically in all cases relieving individual <xref uid="org.apache.hc.core5.http.io.HttpClientResponseHandler" data-throw-if-not-resolved="false">HttpClientResponseHandler</xref>s from having to manage resource deallocation internally.
  syntax:
    content: public abstract T <T>execute(ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: responseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>
      description: the response handler
    return:
      type: T
      description: the response object as generated by the response handler.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  id: <T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  nameWithType: HttpClient.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  fullName: org.apache.hc.client5.http.classic.HttpClient.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: >-
    Executes HTTP request using the given context and processes the response using the given response handler.


    Implementing classes are required to ensure that the content entity associated with the response is fully consumed and the underlying connection is released back to the connection manager automatically in all cases relieving individual <xref uid="org.apache.hc.core5.http.io.HttpClientResponseHandler" data-throw-if-not-resolved="false">HttpClientResponseHandler</xref>s from having to manage resource deallocation internally.
  syntax:
    content: public abstract T <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: >-
        the context to use for the execution, or
                          <code>null</code> to use the default context
    - id: responseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>
      description: the response handler
    return:
      type: T
      description: the response object as generated by the response handler.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  id: <T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: <T>execute(HttpHost target, ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  nameWithType: HttpClient.<T>execute(HttpHost target, ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  fullName: org.apache.hc.client5.http.classic.HttpClient.<T>execute(HttpHost target, ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: >-
    Executes HTTP request to the target using the default context and processes the response using the given response handler.


    Implementing classes are required to ensure that the content entity associated with the response is fully consumed and the underlying connection is released back to the connection manager automatically in all cases relieving individual <xref uid="org.apache.hc.core5.http.io.HttpClientResponseHandler" data-throw-if-not-resolved="false">HttpClientResponseHandler</xref>s from having to manage resource deallocation internally.
  syntax:
    content: public abstract T <T>execute(HttpHost target, ClassicHttpRequest request, HttpClientResponseHandler<? extends T> responseHandler)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: >-
        the target host for the request.
                          Implementations may accept <code>null</code>
                          if they can still determine a route, for example
                          to a default target or by inspecting the request.
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: responseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>
      description: the response handler
    return:
      type: T
      description: the response object as generated by the response handler.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.<T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  id: <T>execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: <T>execute(HttpHost target, ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  nameWithType: HttpClient.<T>execute(HttpHost target, ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  fullName: org.apache.hc.client5.http.classic.HttpClient.<T>execute(HttpHost target, ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: >-
    Executes HTTP request to the target using the given context and processes the response using the given response handler.


    Implementing classes are required to ensure that the content entity associated with the response is fully consumed and the underlying connection is released back to the connection manager automatically in all cases relieving individual <xref uid="org.apache.hc.core5.http.io.HttpClientResponseHandler" data-throw-if-not-resolved="false">HttpClientResponseHandler</xref>s from having to manage resource deallocation internally.
  syntax:
    content: public abstract T <T>execute(HttpHost target, ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<? extends T> responseHandler)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: >-
        the target host for the request.
                          Implementations may accept <code>null</code>
                          if they can still determine a route, for example
                          to a default target or by inspecting the request.
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: >-
        the context to use for the execution, or
                          <code>null</code> to use the default context
    - id: responseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>
      description: the response handler
    return:
      type: T
      description: the response object as generated by the response handler.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.ClassicHttpRequest)
  id: execute(org.apache.hc.core5.http.ClassicHttpRequest)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: execute(ClassicHttpRequest request)
  nameWithType: HttpClient.execute(ClassicHttpRequest request)
  fullName: org.apache.hc.client5.http.classic.HttpClient.execute(ClassicHttpRequest request)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Executes HTTP request using the default context.
  syntax:
    content: public abstract HttpResponse execute(ClassicHttpRequest request)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    return:
      type: org.apache.hc.core5.http.HttpResponse
      description: >-
        the response to the request. This is always a final response,
                  never an intermediate response with an 1xx status code.
                  Whether redirects or authentication challenges will be returned
                  or handled automatically depends on the implementation and
                  configuration of this client.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  id: execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: execute(ClassicHttpRequest request, HttpContext context)
  nameWithType: HttpClient.execute(ClassicHttpRequest request, HttpContext context)
  fullName: org.apache.hc.client5.http.classic.HttpClient.execute(ClassicHttpRequest request, HttpContext context)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Executes HTTP request using the given context.
  syntax:
    content: public abstract HttpResponse execute(ClassicHttpRequest request, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: >-
        the context to use for the execution, or
                          <code>null</code> to use the default context
    return:
      type: org.apache.hc.core5.http.HttpResponse
      description: >-
        the response to the request. This is always a final response,
                  never an intermediate response with an 1xx status code.
                  Whether redirects or authentication challenges will be returned
                  or handled automatically depends on the implementation and
                  configuration of this client.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest)
  id: execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: execute(HttpHost target, ClassicHttpRequest request)
  nameWithType: HttpClient.execute(HttpHost target, ClassicHttpRequest request)
  fullName: org.apache.hc.client5.http.classic.HttpClient.execute(HttpHost target, ClassicHttpRequest request)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Executes HTTP request using the default context.
  syntax:
    content: public abstract ClassicHttpResponse execute(HttpHost target, ClassicHttpRequest request)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: >-
        the target host for the request.
                          Implementations may accept <code>null</code>
                          if they can still determine a route, for example
                          to a default target or by inspecting the request.
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    return:
      type: org.apache.hc.core5.http.ClassicHttpResponse
      description: >-
        the response to the request. This is always a final response,
                  never an intermediate response with an 1xx status code.
                  Whether redirects or authentication challenges will be returned
                  or handled automatically depends on the implementation and
                  configuration of this client.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
- uid: org.apache.hc.client5.http.classic.HttpClient.execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  id: execute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.HttpClient
  langs:
  - java
  name: execute(HttpHost target, ClassicHttpRequest request, HttpContext context)
  nameWithType: HttpClient.execute(HttpHost target, ClassicHttpRequest request, HttpContext context)
  fullName: org.apache.hc.client5.http.classic.HttpClient.execute(HttpHost target, ClassicHttpRequest request, HttpContext context)
  overload: org.apache.hc.client5.http.classic.HttpClient.execute*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Executes HTTP request using the given context.
  syntax:
    content: public abstract HttpResponse execute(HttpHost target, ClassicHttpRequest request, HttpContext context)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: >-
        the target host for the request.
                          Implementations may accept <code>null</code>
                          if they can still determine a route, for example
                          to a default target or by inspecting the request.
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: >-
        the context to use for the execution, or
                          <code>null</code> to use the default context
    return:
      type: org.apache.hc.core5.http.HttpResponse
      description: >-
        the response to the request. This is always a final response,
                  never an intermediate response with an 1xx status code.
                  Whether redirects or authentication challenges will be returned
                  or handled automatically depends on the implementation and
                  configuration of this client.
  exceptions:
  - type: java.io.IOException
    description: in case of a problem or the connection was aborted
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.ClassicHttpRequest
  name: ClassicHttpRequest
  nameWithType: ClassicHttpRequest
  fullName: org.apache.hc.core5.http.ClassicHttpRequest
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.client5.http.classic.HttpClient.execute*
  name: execute
  nameWithType: HttpClient.execute
  fullName: org.apache.hc.client5.http.classic.HttpClient.execute
  package: org.apache.hc.client5.http.classic
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.core5.http.ClassicHttpResponse
  name: ClassicHttpResponse
  nameWithType: ClassicHttpResponse
  fullName: org.apache.hc.core5.http.ClassicHttpResponse
- uid: org.apache.hc.core5.http.io.HttpClientResponseHandler<? extends T>
  spec.java:
  - uid: org.apache.hc.core5.http.io.HttpClientResponseHandler
    name: HttpClientResponseHandler
    fullName: org.apache.hc.core5.http.io.HttpClientResponseHandler
  - name: <
    fullName: <
  - uid: '? extends T'
    name: '? extends T'
    fullName: '? extends T'
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: '? extends T'
  name: '? extends T'
  nameWithType: '? extends T'
  fullName: '? extends T'
- uid: org.apache.hc.core5.http.io.HttpClientResponseHandler
  name: HttpClientResponseHandler
  nameWithType: HttpClientResponseHandler
  fullName: org.apache.hc.core5.http.io.HttpClientResponseHandler
