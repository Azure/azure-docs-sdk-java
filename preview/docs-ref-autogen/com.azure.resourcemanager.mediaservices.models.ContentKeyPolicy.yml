### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy"
fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy"
name: "ContentKeyPolicy"
nameWithType: "ContentKeyPolicy"
summary: "An immutable client-side representation of Content<wbr>Key<wbr>Policy."
syntax: "public interface ContentKeyPolicy"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.created()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.created()"
  name: "created()"
  nameWithType: "ContentKeyPolicy.created()"
  summary: "Gets the created property: The creation date of the Policy."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime created()"
  desc: "Gets the created property: The creation date of the Policy."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.description()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.description()"
  name: "description()"
  nameWithType: "ContentKeyPolicy.description()"
  summary: "Gets the description property: A description for the Policy."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: A description for the Policy."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.getPolicyPropertiesWithSecrets()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.getPolicyPropertiesWithSecrets()"
  name: "getPolicyPropertiesWithSecrets()"
  nameWithType: "ContentKeyPolicy.getPolicyPropertiesWithSecrets()"
  summary: "Get a Content Key Policy including secret values."
  modifiers:
  - "abstract"
  syntax: "public abstract ContentKeyPolicyProperties getPolicyPropertiesWithSecrets()"
  desc: "Get a Content Key Policy including secret values."
  returns:
    description: "a Content Key Policy including secret values."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyProperties?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyProperties&text=ContentKeyPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.getPolicyPropertiesWithSecretsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.getPolicyPropertiesWithSecretsWithResponse(Context context)"
  name: "getPolicyPropertiesWithSecretsWithResponse(Context context)"
  nameWithType: "ContentKeyPolicy.getPolicyPropertiesWithSecretsWithResponse(Context context)"
  summary: "Get a Content Key Policy including secret values."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ContentKeyPolicyProperties> getPolicyPropertiesWithSecretsWithResponse(Context context)"
  desc: "Get a Content Key Policy including secret values."
  returns:
    description: "a Content Key Policy including secret values along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyProperties?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyProperties&text=ContentKeyPolicyProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.id()"
  name: "id()"
  nameWithType: "ContentKeyPolicy.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.innerModel()"
  name: "innerModel()"
  nameWithType: "ContentKeyPolicy.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>mediaservices.<wbr>fluent.<wbr>models.<wbr>Content<wbr>Key<wbr>Policy<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ContentKeyPolicyInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.ContentKeyPolicyInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.ContentKeyPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.ContentKeyPolicyInner&text=ContentKeyPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.lastModified()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.lastModified()"
  name: "lastModified()"
  nameWithType: "ContentKeyPolicy.lastModified()"
  summary: "Gets the last<wbr>Modified property: The last modified date of the Policy."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastModified()"
  desc: "Gets the lastModified property: The last modified date of the Policy."
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.name()"
  name: "name()"
  nameWithType: "ContentKeyPolicy.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.options()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.options()"
  name: "options()"
  nameWithType: "ContentKeyPolicy.options()"
  summary: "Gets the options property: The Key Policy options."
  modifiers:
  - "abstract"
  syntax: "public abstract List<ContentKeyPolicyOption> options()"
  desc: "Gets the options property: The Key Policy options."
  returns:
    description: "the options value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyOption?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyOption&text=ContentKeyPolicyOption\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.policyId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.policyId()"
  name: "policyId()"
  nameWithType: "ContentKeyPolicy.policyId()"
  summary: "Gets the policy<wbr>Id property: The legacy Policy ID."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID policyId()"
  desc: "Gets the policyId property: The legacy Policy ID."
  returns:
    description: "the policyId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.refresh()"
  name: "refresh()"
  nameWithType: "ContentKeyPolicy.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract ContentKeyPolicy refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy&text=ContentKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "ContentKeyPolicy.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ContentKeyPolicy refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy&text=ContentKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.resourceGroupName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "ContentKeyPolicy.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.systemData()"
  name: "systemData()"
  nameWithType: "ContentKeyPolicy.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.type()"
  name: "type()"
  nameWithType: "ContentKeyPolicy.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.update()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.update()"
  name: "update()"
  nameWithType: "ContentKeyPolicy.update()"
  summary: "Begins update for the Content<wbr>Key<wbr>Policy resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ContentKeyPolicy.Update update()"
  desc: "Begins update for the ContentKeyPolicy resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.Update?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of ContentKeyPolicy."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
