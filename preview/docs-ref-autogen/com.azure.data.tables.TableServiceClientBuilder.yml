### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.TableServiceClientBuilder
  id: TableServiceClientBuilder
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables
  children:
  - com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder()
  - com.azure.data.tables.TableServiceClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()
  - com.azure.data.tables.TableServiceClientBuilder.buildClient()
  - com.azure.data.tables.TableServiceClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.data.tables.TableServiceClientBuilder.connectionString(java.lang.String)
  - com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.data.tables.TableServiceClientBuilder.endpoint(java.lang.String)
  - com.azure.data.tables.TableServiceClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.data.tables.TableServiceClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.data.tables.TableServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.data.tables.TableServiceClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  - com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)
  - com.azure.data.tables.TableServiceClientBuilder.serviceVersion(com.azure.data.tables.TablesServiceVersion)
  langs:
  - java
  name: TableServiceClientBuilder
  nameWithType: TableServiceClientBuilder
  fullName: com.azure.data.tables.TableServiceClientBuilder
  type: Class
  package: com.azure.data.tables
  summary: This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid="com.azure.data.tables.TableServiceClient" data-throw-if-not-resolved="false">TableServiceClient</xref> and <xref uid="com.azure.data.tables.TableServiceAsyncClient" data-throw-if-not-resolved="false">TableServiceAsyncClient</xref> objects. Call <xref uid="com.azure.data.tables.TableServiceClientBuilder.buildClient()" data-throw-if-not-resolved="false">#buildClient()</xref> or <xref uid="com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()" data-throw-if-not-resolved="false">#buildAsyncClient()</xref>, respectively, to construct an instance of the desired client.
  syntax:
    content: public class TableServiceClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder()
  id: TableServiceClientBuilder()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: TableServiceClientBuilder()
  nameWithType: TableServiceClientBuilder.TableServiceClientBuilder()
  fullName: com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder()
  overload: com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder*
  type: Constructor
  package: com.azure.data.tables
  summary: Creates a builder instance that is able to configure and construct <xref uid="com.azure.data.tables.TableServiceClient" data-throw-if-not-resolved="false">TableServiceClient</xref> and <xref uid="com.azure.data.tables.TableServiceAsyncClient" data-throw-if-not-resolved="false">TableServiceAsyncClient</xref> objects.
  syntax:
    content: public TableServiceClientBuilder()
- uid: com.azure.data.tables.TableServiceClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy pipelinePolicy)
  nameWithType: TableServiceClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  fullName: com.azure.data.tables.TableServiceClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  overload: com.azure.data.tables.TableServiceClientBuilder.addPolicy*
  type: Method
  package: com.azure.data.tables
  summary: Adds a pipeline policy to apply on each request sent. The policy will be added after the retry policy. If the method is called multiple times, all policies will be added and their order preserved.
  syntax:
    content: public TableServiceClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)
    parameters:
    - id: pipelinePolicy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: A pipeline policy
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()
  id: buildAsyncClient()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: buildAsyncClient()
  nameWithType: TableServiceClientBuilder.buildAsyncClient()
  fullName: com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()
  overload: com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient*
  type: Method
  package: com.azure.data.tables
  summary: Creates a <xref uid="com.azure.data.tables.TableServiceAsyncClient" data-throw-if-not-resolved="false">TableServiceAsyncClient</xref> based on options set in the builder.
  syntax:
    content: public TableServiceAsyncClient buildAsyncClient()
    return:
      type: com.azure.data.tables.TableServiceAsyncClient
      description: A <xref uid="com.azure.data.tables.TableServiceAsyncClient" data-throw-if-not-resolved="false">TableServiceAsyncClient</xref> created from the configurations in this builder.
- uid: com.azure.data.tables.TableServiceClientBuilder.buildClient()
  id: buildClient()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: buildClient()
  nameWithType: TableServiceClientBuilder.buildClient()
  fullName: com.azure.data.tables.TableServiceClientBuilder.buildClient()
  overload: com.azure.data.tables.TableServiceClientBuilder.buildClient*
  type: Method
  package: com.azure.data.tables
  summary: Creates a <xref uid="com.azure.data.tables.TableServiceClient" data-throw-if-not-resolved="false">TableServiceClient</xref> based on options set in the builder.
  syntax:
    content: public TableServiceClient buildClient()
    return:
      type: com.azure.data.tables.TableServiceClient
      description: A <xref uid="com.azure.data.tables.TableServiceClient" data-throw-if-not-resolved="false">TableServiceClient</xref> created from the configurations in this builder.
- uid: com.azure.data.tables.TableServiceClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: TableServiceClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.data.tables.TableServiceClientBuilder.configuration(Configuration configuration)
  overload: com.azure.data.tables.TableServiceClientBuilder.configuration*
  type: Method
  package: com.azure.data.tables
  summary: >-
    Sets the configuration object used to retrieve environment configuration values during building of the client. The default configuration store is a clone of the <xref uid="Configuration#getGlobalConfiguration()" data-throw-if-not-resolved="false">global
     configuration store</xref>, use <xref uid="com.azure.core.util.Configuration.NONE" data-throw-if-not-resolved="false">Configuration#NONE</xref> to bypass using configuration settings during construction.
  syntax:
    content: public TableServiceClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: Configuration store used to retrieve environment configurations.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.connectionString(java.lang.String)
  id: connectionString(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: connectionString(String connectionString)
  nameWithType: TableServiceClientBuilder.connectionString(String connectionString)
  fullName: com.azure.data.tables.TableServiceClientBuilder.connectionString(String connectionString)
  overload: com.azure.data.tables.TableServiceClientBuilder.connectionString*
  type: Method
  package: com.azure.data.tables
  summary: Sets the connection string to connect to the service.
  syntax:
    content: public TableServiceClientBuilder connectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: Connection string of the storage or CosmosDB table API account.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: TableServiceClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.data.tables.TableServiceClientBuilder.credential(TokenCredential credential)
  overload: com.azure.data.tables.TableServiceClientBuilder.credential*
  type: Method
  package: com.azure.data.tables
  summary: Sets the <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public TableServiceClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> used to authorize requests sent to the service.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: TableServiceClientBuilder.endpoint(String endpoint)
  fullName: com.azure.data.tables.TableServiceClientBuilder.endpoint(String endpoint)
  overload: com.azure.data.tables.TableServiceClientBuilder.endpoint*
  type: Method
  package: com.azure.data.tables
  summary: Sets the service endpoint.
  syntax:
    content: public TableServiceClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: The URL of the storage or CosmosDB table API account endpoint.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: TableServiceClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.data.tables.TableServiceClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.data.tables.TableServiceClientBuilder.httpClient*
  type: Method
  package: com.azure.data.tables
  summary: Sets the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for sending and receiving requests to and from the service.
  syntax:
    content: public TableServiceClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: The <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for requests.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: TableServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.data.tables.TableServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.data.tables.TableServiceClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.data.tables
  summary: Sets the logging configuration to use when sending and receiving requests to and from the service. If a `logLevel` is not provided, default value of <xref uid="" data-throw-if-not-resolved="false">HttpLogDetailLevel#NONE</xref> is set.
  syntax:
    content: public TableServiceClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving requests to and from the service.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline pipeline)
  nameWithType: TableServiceClientBuilder.pipeline(HttpPipeline pipeline)
  fullName: com.azure.data.tables.TableServiceClientBuilder.pipeline(HttpPipeline pipeline)
  overload: com.azure.data.tables.TableServiceClientBuilder.pipeline*
  type: Method
  package: com.azure.data.tables
  summary: Sets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for the service client. If `pipeline` is set, all other settings are ignored, aside from `endpoint`.
  syntax:
    content: public TableServiceClientBuilder pipeline(HttpPipeline pipeline)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for sending service requests and receiving responses.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  id: retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: retryOptions(RequestRetryOptions retryOptions)
  nameWithType: TableServiceClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  fullName: com.azure.data.tables.TableServiceClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  overload: com.azure.data.tables.TableServiceClientBuilder.retryOptions*
  type: Method
  package: com.azure.data.tables
  summary: Sets the request retry options for all the requests made through the client.
  syntax:
    content: public TableServiceClientBuilder retryOptions(RequestRetryOptions retryOptions)
    parameters:
    - id: retryOptions
      type: com.azure.storage.common.policy.RequestRetryOptions
      description: <xref uid="com.azure.storage.common.policy.RequestRetryOptions" data-throw-if-not-resolved="false">RequestRetryOptions</xref>.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)
  id: sasToken(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: sasToken(String sasToken)
  nameWithType: TableServiceClientBuilder.sasToken(String sasToken)
  fullName: com.azure.data.tables.TableServiceClientBuilder.sasToken(String sasToken)
  overload: com.azure.data.tables.TableServiceClientBuilder.sasToken*
  type: Method
  package: com.azure.data.tables
  summary: Sets the SAS token used to authorize requests sent to the service.
  syntax:
    content: public TableServiceClientBuilder sasToken(String sasToken)
    parameters:
    - id: sasToken
      type: java.lang.String
      description: The SAS token to use for authenticating requests.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
- uid: com.azure.data.tables.TableServiceClientBuilder.serviceVersion(com.azure.data.tables.TablesServiceVersion)
  id: serviceVersion(com.azure.data.tables.TablesServiceVersion)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClientBuilder
  langs:
  - java
  name: serviceVersion(TablesServiceVersion version)
  nameWithType: TableServiceClientBuilder.serviceVersion(TablesServiceVersion version)
  fullName: com.azure.data.tables.TableServiceClientBuilder.serviceVersion(TablesServiceVersion version)
  overload: com.azure.data.tables.TableServiceClientBuilder.serviceVersion*
  type: Method
  package: com.azure.data.tables
  summary: Sets the <xref uid="com.azure.data.tables.TablesServiceVersion" data-throw-if-not-resolved="false">TablesServiceVersion</xref> that is used when making API requests. If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version. Targeting a specific service version may also mean that the service will return an error for newer APIs.
  syntax:
    content: public TableServiceClientBuilder serviceVersion(TablesServiceVersion version)
    parameters:
    - id: version
      type: com.azure.data.tables.TablesServiceVersion
      description: The <xref uid="com.azure.data.tables.TablesServiceVersion" data-throw-if-not-resolved="false">TablesServiceVersion</xref> of the service to be used when making requests.
    return:
      type: com.azure.data.tables.TableServiceClientBuilder
      description: The updated <code>TableServiceClientBuilder</code>.
references:
- uid: com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder*
  name: TableServiceClientBuilder
  nameWithType: TableServiceClientBuilder.TableServiceClientBuilder
  fullName: com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient
  name: TableServiceClient
  nameWithType: TableServiceClient
  fullName: com.azure.data.tables.TableServiceClient
- uid: com.azure.data.tables.TableServiceClientBuilder.buildClient*
  name: buildClient
  nameWithType: TableServiceClientBuilder.buildClient
  fullName: com.azure.data.tables.TableServiceClientBuilder.buildClient
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceAsyncClient
  name: TableServiceAsyncClient
  nameWithType: TableServiceAsyncClient
  fullName: com.azure.data.tables.TableServiceAsyncClient
- uid: com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient*
  name: buildAsyncClient
  nameWithType: TableServiceClientBuilder.buildAsyncClient
  fullName: com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient
  package: com.azure.data.tables
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.TableServiceClientBuilder.connectionString*
  name: connectionString
  nameWithType: TableServiceClientBuilder.connectionString
  fullName: com.azure.data.tables.TableServiceClientBuilder.connectionString
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClientBuilder.endpoint*
  name: endpoint
  nameWithType: TableServiceClientBuilder.endpoint
  fullName: com.azure.data.tables.TableServiceClientBuilder.endpoint
  package: com.azure.data.tables
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.data.tables.TableServiceClientBuilder.pipeline*
  name: pipeline
  nameWithType: TableServiceClientBuilder.pipeline
  fullName: com.azure.data.tables.TableServiceClientBuilder.pipeline
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClientBuilder.sasToken*
  name: sasToken
  nameWithType: TableServiceClientBuilder.sasToken
  fullName: com.azure.data.tables.TableServiceClientBuilder.sasToken
  package: com.azure.data.tables
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.data.tables.TableServiceClientBuilder.configuration*
  name: configuration
  nameWithType: TableServiceClientBuilder.configuration
  fullName: com.azure.data.tables.TableServiceClientBuilder.configuration
  package: com.azure.data.tables
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.data.tables.TableServiceClientBuilder.credential*
  name: credential
  nameWithType: TableServiceClientBuilder.credential
  fullName: com.azure.data.tables.TableServiceClientBuilder.credential
  package: com.azure.data.tables
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.data.tables.TableServiceClientBuilder.httpClient*
  name: httpClient
  nameWithType: TableServiceClientBuilder.httpClient
  fullName: com.azure.data.tables.TableServiceClientBuilder.httpClient
  package: com.azure.data.tables
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.data.tables.TableServiceClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: TableServiceClientBuilder.httpLogOptions
  fullName: com.azure.data.tables.TableServiceClientBuilder.httpLogOptions
  package: com.azure.data.tables
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.data.tables.TableServiceClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: TableServiceClientBuilder.addPolicy
  fullName: com.azure.data.tables.TableServiceClientBuilder.addPolicy
  package: com.azure.data.tables
- uid: com.azure.data.tables.TablesServiceVersion
  name: TablesServiceVersion
  nameWithType: TablesServiceVersion
  fullName: com.azure.data.tables.TablesServiceVersion
- uid: com.azure.data.tables.TableServiceClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: TableServiceClientBuilder.serviceVersion
  fullName: com.azure.data.tables.TableServiceClientBuilder.serviceVersion
  package: com.azure.data.tables
- uid: com.azure.storage.common.policy.RequestRetryOptions
  spec.java:
  - uid: com.azure.storage.common.policy.RequestRetryOptions
    name: RequestRetryOptions
    fullName: com.azure.storage.common.policy.RequestRetryOptions
- uid: com.azure.data.tables.TableServiceClientBuilder.retryOptions*
  name: retryOptions
  nameWithType: TableServiceClientBuilder.retryOptions
  fullName: com.azure.data.tables.TableServiceClientBuilder.retryOptions
  package: com.azure.data.tables
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
