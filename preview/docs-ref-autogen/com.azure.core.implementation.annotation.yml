### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.annotation
  id: annotation
  children:
  - com.azure.core.implementation.annotation.Beta
  - com.azure.core.implementation.annotation.BodyParam
  - com.azure.core.implementation.annotation.Delete
  - com.azure.core.implementation.annotation.ExpectedResponses
  - com.azure.core.implementation.annotation.Fluent
  - com.azure.core.implementation.annotation.FormParam
  - com.azure.core.implementation.annotation.Get
  - com.azure.core.implementation.annotation.Head
  - com.azure.core.implementation.annotation.HeaderCollection
  - com.azure.core.implementation.annotation.HeaderParam
  - com.azure.core.implementation.annotation.Headers
  - com.azure.core.implementation.annotation.Host
  - com.azure.core.implementation.annotation.HostParam
  - com.azure.core.implementation.annotation.Immutable
  - com.azure.core.implementation.annotation.JsonFlatten
  - com.azure.core.implementation.annotation.Patch
  - com.azure.core.implementation.annotation.PathParam
  - com.azure.core.implementation.annotation.Post
  - com.azure.core.implementation.annotation.Put
  - com.azure.core.implementation.annotation.QueryParam
  - com.azure.core.implementation.annotation.ResumeOperation
  - com.azure.core.implementation.annotation.ReturnType
  - com.azure.core.implementation.annotation.ReturnValueWireType
  - com.azure.core.implementation.annotation.ServiceClient
  - com.azure.core.implementation.annotation.ServiceClientBuilder
  - com.azure.core.implementation.annotation.ServiceInterface
  - com.azure.core.implementation.annotation.ServiceMethod
  - com.azure.core.implementation.annotation.SkipParentValidation
  - com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
  - com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  href: com.azure.core.implementation.annotation.yml
  langs:
  - java
  name: com.azure.core.implementation.annotation
  nameWithType: com.azure.core.implementation.annotation
  fullName: com.azure.core.implementation.annotation
  type: Namespace
  source:
    remote:
      path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/Beta.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/Beta.java
    startLine: 3
  summary: "<p>Package containing annotations for client side methods that maps to REST APIs. </p>"
  syntax:
    content: package com.azure.core.implementation.annotation
references:
- uid: com.azure.core.implementation.annotation.Beta
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Beta.yml
  name: Beta
  nameWithType: Beta
  fullName: com.azure.core.implementation.annotation.Beta
  type: Interface
  summary: "<p>Beta(\"introducing Foo which eventually replaces Bar\") </p>"
  syntax:
    content: public interface Beta
- uid: com.azure.core.implementation.annotation.BodyParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.BodyParam.yml
  name: BodyParam
  nameWithType: BodyParam
  fullName: com.azure.core.implementation.annotation.BodyParam
  type: Interface
  summary: "<p>POST(\"formdata/stream/uploadfile\") void uploadFileViaBody((\"application/octet-stream\") FileInputStream fileContent); </p>"
  syntax:
    content: public interface BodyParam
- uid: com.azure.core.implementation.annotation.Delete
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Delete.yml
  name: Delete
  nameWithType: Delete
  fullName: com.azure.core.implementation.annotation.Delete
  type: Interface
  summary: "<p>Delete({vaultBaseUrl}/secrets/{secretName}) void delete((\"vaultBaseUrl\" encoded = true) String vaultBaseUrl, (\"secretName\") String secretName); </p>"
  syntax:
    content: public interface Delete
- uid: com.azure.core.implementation.annotation.ExpectedResponses
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ExpectedResponses.yml
  name: ExpectedResponses
  nameWithType: ExpectedResponses
  fullName: com.azure.core.implementation.annotation.ExpectedResponses
  type: Interface
  summary: "<p>POST(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\") void getUploadUrlForEntityType((\"resourceGroupName\") String resourceGroupName, (\"hubName\") String hubName, (\"subscriptionId\") String subscriptionId,  GetImageUploadUrlInputInner parameters); </p>"
  syntax:
    content: public interface ExpectedResponses
- uid: com.azure.core.implementation.annotation.Fluent
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Fluent.yml
  name: Fluent
  nameWithType: Fluent
  fullName: com.azure.core.implementation.annotation.Fluent
  type: Interface
  summary: "<p>Annotation given to all classes that are expected to provide a fluent API to end users. If a class has this annotation, checks can be made to ensure all API meets this expectation. Similarly, classes that are not annotated with this annotation should not have fluent APIs. </p>"
  syntax:
    content: public interface Fluent
- uid: com.azure.core.implementation.annotation.FormParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.FormParam.yml
  name: FormParam
  nameWithType: FormParam
  fullName: com.azure.core.implementation.annotation.FormParam
  type: Interface
  summary: "<p>POST(\"spellcheck\") { Observable&lt;Response&lt;ResponseBody&gt;&gt;} spellChecker((\"X-BingApis-SDK\") String xBingApisSDK, (\"UserId\") String userId, (\"Text\") String text);</p>\r\n<p>The value of parameter text will be encoded and encoded value will be added to the form data sent to the API.</p>"
  syntax:
    content: public interface FormParam
- uid: com.azure.core.implementation.annotation.Get
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Get.yml
  name: Get
  nameWithType: Get
  fullName: com.azure.core.implementation.annotation.Get
  type: Interface
  summary: "<p>Get({nextLink}) { List&lt;VirtualMachine&gt;} listNext((\"nextLink\") String nextLink); </p>"
  syntax:
    content: public interface Get
- uid: com.azure.core.implementation.annotation.Head
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Head.yml
  name: Head
  nameWithType: Head
  fullName: com.azure.core.implementation.annotation.Head
  type: Interface
  summary: "<p>Head(<a href=\"https://management.azure.com/{storageAccountId}\">https://management.azure.com/{storageAccountId}</a>) boolean checkNameAvailability((\"nextLink\") String storageAccountId); </p>"
  syntax:
    content: public interface Head
- uid: com.azure.core.implementation.annotation.HeaderCollection
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.HeaderCollection.yml
  name: HeaderCollection
  nameWithType: HeaderCollection
  fullName: com.azure.core.implementation.annotation.HeaderCollection
  type: Interface
  summary: "<p>Annotation on a deserialized header type that indicates that the property should be treated as a header collection with the provided prefix. </p>"
  syntax:
    content: public interface HeaderCollection
- uid: com.azure.core.implementation.annotation.HeaderParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.HeaderParam.yml
  name: HeaderParam
  nameWithType: HeaderParam
  fullName: com.azure.core.implementation.annotation.HeaderParam
  type: Interface
  summary: "<p>Replaces the header with the value of its target. The value specified here replaces headers specified statically in the <xref uid=\"com.azure.core.implementation.annotation.Headers\" data-throw-if-not-resolved=\"false\">Headers</xref>. If the parameter this annotation is attached to is a Map type, then this will be treated as a header collection. In that case each of the entries in the argument's map will be individual header values that use the value of this annotation as a prefix to their key/header name.</p>\r\n<p>\r\n  <b>Example 1:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@PUT(\"{functionId}\") \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  createOrReplace((\"functionId\", encoded = true) String functionId,  FunctionInner function, (\"If-Match\") String ifMatch);</pre>\r\n</p>\r\n<p>\"If-Match: user passed value\" will show up as one of the headers.</p>\r\n<p>\r\n  <b>Example 2:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@\r\n    </code> GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\")\r\n<code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  list((\"subscriptionId\") String subscriptionId, (\"accept-language\") String acceptLanguage, (\"User-Agent\") String userAgent);</pre>\r\n</p>\r\n<p>\"accept-language\" generated by the HTTP client will be overwritten by the user passed value.</p>\r\n<p>\r\n  <b>Example 3:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\") \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  list((\"subscriptionId\") String subscriptionId, (\"Authorization\") String token);</pre>\r\n</p>\r\n<p>The token parameter will replace the effect of any credentials in the HTTP pipeline.</p>\r\n<p>\r\n  <b>Example 4:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@PUT(\"{containerName}/{blob}\") \r\n    </code>\r\n    <code>@ExpectedResponses({200}) \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;BlobSetMetadataHeaders, Void&gt;&gt; setMetadata(@HostParam(\"url\") String url, @QueryParam(\"timeout\") Integer timeout, @HeaderParam(\"x-ms-meta-\") Map&lt;String, String&gt; metadata, @HeaderParam(\"x-ms-lease-id\") String leaseId, @HeaderParam(\"If-Modified-Since\") String ifModifiedSince, @HeaderParam(\"If-Unmodified-Since\") String ifUnmodifiedSince, @HeaderParam(\"If-Match\") String ifMatches, @HeaderParam(\"If-None-Match\") String ifNoneMatch, @HeaderParam(\"x-ms-version\") String version, @HeaderParam(\"x-ms-client-request-id\") String requestId, @QueryParam(\"comp\") String comp); \r\n    </code>\r\n  </pre>\r\n</p>\r\n<p>The metadata parameter will be expanded out so that each entry becomes \"x-ms-meta-{@literal &lt;entryKey&gt;}: {@literal &lt;entryValue&gt;}\".</p>"
  syntax:
    content: public interface HeaderParam
- uid: com.azure.core.implementation.annotation.Headers
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Headers.yml
  name: Headers
  nameWithType: Headers
  fullName: com.azure.core.implementation.annotation.Headers
  type: Interface
  summary: "<p>POST(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\") void getUploadUrlForEntityType((\"resourceGroupName\") String resourceGroupName, (\"hubName\") String hubName, (\"subscriptionId\") String subscriptionId,  GetImageUploadUrlInputInner parameters); </p>"
  syntax:
    content: public interface Headers
- uid: com.azure.core.implementation.annotation.Host
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Host.yml
  name: Host
  nameWithType: Host
  fullName: com.azure.core.implementation.annotation.Host
  type: Interface
  summary: "<p>GET(\"secrets/{secretName}\") Secret get((\"vaultName\") String vaultName, (\"secretName\") String secretName); } </p>"
  syntax:
    content: public interface Host
- uid: com.azure.core.implementation.annotation.HostParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.HostParam.yml
  name: HostParam
  nameWithType: HostParam
  fullName: com.azure.core.implementation.annotation.HostParam
  type: Interface
  summary: "<p>GET(\"secrets/{secretName}\") Secret get( String vaultName, (\"secretName\") String secretName); } </p>"
  syntax:
    content: public interface HostParam
- uid: com.azure.core.implementation.annotation.Immutable
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Immutable.yml
  name: Immutable
  nameWithType: Immutable
  fullName: com.azure.core.implementation.annotation.Immutable
  type: Interface
  summary: "<p>Annotation given to all immutable classes. If a class has this annotation, checks can be made to ensure all fields in this class are final. </p>"
  syntax:
    content: public interface Immutable
- uid: com.azure.core.implementation.annotation.JsonFlatten
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.JsonFlatten.yml
  name: JsonFlatten
  nameWithType: JsonFlatten
  fullName: com.azure.core.implementation.annotation.JsonFlatten
  type: Interface
  summary: "<p>Annotation used for flattening properties separated by '.'. E.g. a property with JsonProperty value \"properties.value\" will have \"value\" property under the \"properties\" tree on the wire. </p>"
  syntax:
    content: public interface JsonFlatten
- uid: com.azure.core.implementation.annotation.Patch
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Patch.yml
  name: Patch
  nameWithType: Patch
  fullName: com.azure.core.implementation.annotation.Patch
  type: Interface
  summary: "<p>Patch({vaultBaseUrl}/secrets/{secretName}) Secret patch((\"vaultBaseUrl\" encoded = true) String vaultBaseUrl, (\"secretName\") String secretName,  SecretUpdateParameters updateParameters); </p>"
  syntax:
    content: public interface Patch
- uid: com.azure.core.implementation.annotation.PathParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.PathParam.yml
  name: PathParam
  nameWithType: PathParam
  fullName: com.azure.core.implementation.annotation.PathParam
  type: Interface
  summary: "<p>GET(\"http://wq.com/foo/{subpath}/values\") String getValues((value = \"subpath\", encoded = true) String param1);</p>\r\n<p>In this case, if consumer pass \"a/b\" as the value for param1 then the resolved url looks as expected: \"&lt;code&gt;http://wq.com/foo/a/b/values&lt;/code&gt;\".</p>"
  syntax:
    content: public interface PathParam
- uid: com.azure.core.implementation.annotation.Post
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Post.yml
  name: Post
  nameWithType: Post
  fullName: com.azure.core.implementation.annotation.Post
  type: Interface
  summary: "<p>Post(<a href=\"https://{functionApp}.azurewebsites.net/admin/functions/{name}/keys/{keyName}\">https://{functionApp}.azurewebsites.net/admin/functions/{name}/keys/{keyName}</a>) NameValuePair generateFunctionKey((\"functionApp\") String functionApp, (\"name\") String function, (\"keyName\") String keyName); </p>"
  syntax:
    content: public interface Post
- uid: com.azure.core.implementation.annotation.Put
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Put.yml
  name: Put
  nameWithType: Put
  fullName: com.azure.core.implementation.annotation.Put
  type: Interface
  summary: "<p>Put({vaultBaseUrl}/secrets/{secretName}) Secret createOrUpdate((\"vaultBaseUrl\" encoded = true) String vaultBaseUrl, (\"secretName\") String secretName,  SecretCreateParameters secret); </p>"
  syntax:
    content: public interface Put
- uid: com.azure.core.implementation.annotation.QueryParam
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.QueryParam.yml
  name: QueryParam
  nameWithType: QueryParam
  fullName: com.azure.core.implementation.annotation.QueryParam
  type: Interface
  summary: "<p>GET(\"http://wq.com/foo/{subpath}/values\") String getValues((\"subpath\") String param, (\"query\", encoded = true) String query);</p>\r\n<p>In this case, if consumer pass \"a=b\" as the value for param1 then the resolved url looks as expected: \"&lt;code&gt;http://wq.com/foo/paramblah/values?connectionString=a=b&lt;/code&gt;\"</p>"
  syntax:
    content: public interface QueryParam
- uid: com.azure.core.implementation.annotation.ResumeOperation
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ResumeOperation.yml
  name: ResumeOperation
  nameWithType: ResumeOperation
  fullName: com.azure.core.implementation.annotation.ResumeOperation
  type: Interface
  summary: "<p>Annotation for method representing continuation operation. </p>"
  syntax:
    content: public interface ResumeOperation
- uid: com.azure.core.implementation.annotation.ReturnType
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ReturnType.yml
  name: ReturnType
  nameWithType: ReturnType
  fullName: com.azure.core.implementation.annotation.ReturnType
  type: Enum
  summary: "<p>Enumeration of return types used with <xref uid=\"com.azure.core.implementation.annotation.ServiceMethod\" data-throw-if-not-resolved=\"false\">ServiceMethod</xref> annotation to indicate if a method is expected to return a single item or a collection </p>"
  syntax:
    content: public enum ReturnType
- uid: com.azure.core.implementation.annotation.ReturnValueWireType
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ReturnValueWireType.yml
  name: ReturnValueWireType
  nameWithType: ReturnValueWireType
  fullName: com.azure.core.implementation.annotation.ReturnValueWireType
  type: Interface
  summary: "<p>Annotation for the type that will be used to deserialize the return value of a REST API response. Supported values are:</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.core.implementation.Base64Url\" data-throw-if-not-resolved=\"false\">com.azure.core.implementation.Base64Url</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.core.implementation.DateTimeRfc1123\" data-throw-if-not-resolved=\"false\">com.azure.core.implementation.DateTimeRfc1123</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.core.implementation.UnixTime\" data-throw-if-not-resolved=\"false\">com.azure.core.implementation.UnixTime</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.core.http.rest.Page\" data-throw-if-not-resolved=\"false\">com.azure.core.http.rest.Page</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">List&lt;T&gt;</xref> where<code>T \r\n    </code> can be one of the four values above. </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>"
  syntax:
    content: public interface ReturnValueWireType
- uid: com.azure.core.implementation.annotation.ServiceClient
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ServiceClient.yml
  name: ServiceClient
  nameWithType: ServiceClient
  fullName: com.azure.core.implementation.annotation.ServiceClient
  type: Interface
  summary: "<p>Annotation given to all service client classes. </p>"
  syntax:
    content: public interface ServiceClient
- uid: com.azure.core.implementation.annotation.ServiceClientBuilder
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ServiceClientBuilder.yml
  name: ServiceClientBuilder
  nameWithType: ServiceClientBuilder
  fullName: com.azure.core.implementation.annotation.ServiceClientBuilder
  type: Interface
  summary: "<p>Annotation given to all service client builder classes. </p>"
  syntax:
    content: public interface ServiceClientBuilder
- uid: com.azure.core.implementation.annotation.ServiceInterface
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ServiceInterface.yml
  name: ServiceInterface
  nameWithType: ServiceInterface
  fullName: com.azure.core.implementation.annotation.ServiceInterface
  type: Interface
  summary: "<p>Annotation to give the service interfaces a name that correlates to the service that is usable in a programmatic way. </p>"
  syntax:
    content: public interface ServiceInterface
- uid: com.azure.core.implementation.annotation.ServiceMethod
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.ServiceMethod.yml
  name: ServiceMethod
  nameWithType: ServiceMethod
  fullName: com.azure.core.implementation.annotation.ServiceMethod
  type: Interface
  summary: "<p>Annotation given to all service client methods that perform network operations. All methods with this annotation should be contained in class annotated with <xref uid=\"com.azure.core.implementation.annotation.ServiceClient\" data-throw-if-not-resolved=\"false\">ServiceClient</xref></p>"
  syntax:
    content: public interface ServiceMethod
- uid: com.azure.core.implementation.annotation.SkipParentValidation
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.SkipParentValidation.yml
  name: SkipParentValidation
  nameWithType: SkipParentValidation
  fullName: com.azure.core.implementation.annotation.SkipParentValidation
  type: Interface
  summary: "<p>Annotation to notify the validator to skip validation for the properties in the parent class. </p>"
  syntax:
    content: public interface SkipParentValidation
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType.yml
  name: UnexpectedResponseExceptionType
  nameWithType: UnexpectedResponseExceptionType
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
  type: Interface
  summary: "<p>POST(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\") void getUploadUrlForEntityType((\"resourceGroupName\") String resourceGroupName, (\"hubName\") String hubName, (\"subscriptionId\") String subscriptionId,  GetImageUploadUrlInputInner parameters); </p>\r\n<p>If multiple annotations share the same HTTP status code or there is multiple default annotations the exception from the last annotation in the top to bottom order will be used. </p>"
  syntax:
    content: public interface UnexpectedResponseExceptionType
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.yml
  name: UnexpectedResponseExceptionTypes
  nameWithType: UnexpectedResponseExceptionTypes
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  type: Interface
  summary: "<p>The<code>@Repeatable \r\n    </code> container annotation for <xref uid=\"com.azure.core.implementation.annotation.UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"false\">UnexpectedResponseExceptionType</xref>. This allows methods to have different exceptions to be thrown or returned based on the response status codes returned from a REST API. </p>"
  syntax:
    content: public interface UnexpectedResponseExceptionTypes
