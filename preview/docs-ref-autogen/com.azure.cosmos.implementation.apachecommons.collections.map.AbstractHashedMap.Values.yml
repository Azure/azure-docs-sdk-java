### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  id: Values
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.Values(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<?,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.clear()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.contains(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.iterator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.size()
  langs:
  - java
  name: AbstractHashedMap.Values<V>
  nameWithType: AbstractHashedMap.Values<V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Values implementation.
  syntax:
    content: protected static class AbstractHashedMap.Values<V> extends AbstractCollection<V>
    typeParameters:
    - id: V
  inheritance:
  - java.lang.Object
  - java.util.AbstractCollection
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.util.AbstractCollection.<T>toArray(T[])
  - java.util.AbstractCollection.add(E)
  - java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
  - java.util.AbstractCollection.clear()
  - java.util.AbstractCollection.contains(java.lang.Object)
  - java.util.AbstractCollection.containsAll(java.util.Collection<?>)
  - java.util.AbstractCollection.isEmpty()
  - java.util.AbstractCollection.iterator()
  - java.util.AbstractCollection.remove(java.lang.Object)
  - java.util.AbstractCollection.removeAll(java.util.Collection<?>)
  - java.util.AbstractCollection.retainAll(java.util.Collection<?>)
  - java.util.AbstractCollection.size()
  - java.util.AbstractCollection.toArray()
  - java.util.AbstractCollection.toString()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.Values(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<?,V>)
  id: Values(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<?,V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  langs:
  - java
  name: Values(AbstractHashedMap<?,V> parent)
  nameWithType: AbstractHashedMap.Values<V>.Values(AbstractHashedMap<?,V> parent)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.Values(AbstractHashedMap<?,V> parent)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.Values*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: protected Values(AbstractHashedMap<?,V> parent)
    parameters:
    - id: parent
      type: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<?,V>
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  langs:
  - java
  name: clear()
  nameWithType: AbstractHashedMap.Values<V>.clear()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.clear()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.clear*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.contains(java.lang.Object)
  id: contains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  langs:
  - java
  name: contains(Object value)
  nameWithType: AbstractHashedMap.Values<V>.contains(Object value)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.contains(Object value)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.contains*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public boolean contains(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  langs:
  - java
  name: iterator()
  nameWithType: AbstractHashedMap.Values<V>.iterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.iterator()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.iterator*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public Iterator<V> iterator()
    return:
      type: java.util.Iterator<V>
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values
  langs:
  - java
  name: size()
  nameWithType: AbstractHashedMap.Values<V>.size()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.size()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.size*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public int size()
    return:
      type: int
references:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<?,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
    name: AbstractHashedMap
    fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.Values*
  name: Values
  nameWithType: AbstractHashedMap.Values<V>.Values
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.Values
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.size*
  name: size
  nameWithType: AbstractHashedMap.Values<V>.size
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.size
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.clear*
  name: clear
  nameWithType: AbstractHashedMap.Values<V>.clear
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.clear
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.contains*
  name: contains
  nameWithType: AbstractHashedMap.Values<V>.contains
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.contains
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Iterator<V>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values.iterator*
  name: iterator
  nameWithType: AbstractHashedMap.Values<V>.iterator
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.Values<V>.iterator
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: java.util.AbstractCollection<V>
  name: AbstractCollection<V>
  nameWithType: AbstractCollection<V>
  fullName: java.util.AbstractCollection<V>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.util.AbstractCollection.contains(java.lang.Object)
  name: AbstractCollection.contains(Object)
  nameWithType: AbstractCollection.contains(Object)
  fullName: java.util.AbstractCollection.contains(java.lang.Object)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.util.AbstractCollection.toArray()
  name: AbstractCollection.toArray()
  nameWithType: AbstractCollection.toArray()
  fullName: java.util.AbstractCollection.toArray()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.util.AbstractCollection.iterator()
  name: AbstractCollection.iterator()
  nameWithType: AbstractCollection.iterator()
  fullName: java.util.AbstractCollection.iterator()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.util.AbstractCollection.add(E)
  name: AbstractCollection.add(E)
  nameWithType: AbstractCollection.add(E)
  fullName: java.util.AbstractCollection.add(E)
- uid: java.util.AbstractCollection.size()
  name: AbstractCollection.size()
  nameWithType: AbstractCollection.size()
  fullName: java.util.AbstractCollection.size()
- uid: java.util.AbstractCollection.containsAll(java.util.Collection<?>)
  name: AbstractCollection.containsAll(Collection<?>)
  nameWithType: AbstractCollection.containsAll(Collection<?>)
  fullName: java.util.AbstractCollection.containsAll(java.util.Collection<?>)
- uid: java.util.AbstractCollection.isEmpty()
  name: AbstractCollection.isEmpty()
  nameWithType: AbstractCollection.isEmpty()
  fullName: java.util.AbstractCollection.isEmpty()
- uid: java.util.AbstractCollection.toString()
  name: AbstractCollection.toString()
  nameWithType: AbstractCollection.toString()
  fullName: java.util.AbstractCollection.toString()
- uid: java.util.AbstractCollection.clear()
  name: AbstractCollection.clear()
  nameWithType: AbstractCollection.clear()
  fullName: java.util.AbstractCollection.clear()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.util.AbstractCollection.removeAll(java.util.Collection<?>)
  name: AbstractCollection.removeAll(Collection<?>)
  nameWithType: AbstractCollection.removeAll(Collection<?>)
  fullName: java.util.AbstractCollection.removeAll(java.util.Collection<?>)
- uid: java.util.AbstractCollection.retainAll(java.util.Collection<?>)
  name: AbstractCollection.retainAll(Collection<?>)
  nameWithType: AbstractCollection.retainAll(Collection<?>)
  fullName: java.util.AbstractCollection.retainAll(java.util.Collection<?>)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
  name: AbstractCollection.addAll(Collection<? extends E>)
  nameWithType: AbstractCollection.addAll(Collection<? extends E>)
  fullName: java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
- uid: java.util.AbstractCollection.<T>toArray(T[])
  name: AbstractCollection.<T>toArray(T[])
  nameWithType: AbstractCollection.<T>toArray(T[])
  fullName: java.util.AbstractCollection.<T>toArray(T[])
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.AbstractCollection.remove(java.lang.Object)
  name: AbstractCollection.remove(Object)
  nameWithType: AbstractCollection.remove(Object)
  fullName: java.util.AbstractCollection.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
  name: AbstractHashedMap
  nameWithType: AbstractHashedMap
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
- uid: ?,V
  name: ?,V
  nameWithType: ?,V
  fullName: ?,V
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.util.AbstractCollection
  name: AbstractCollection
  nameWithType: AbstractCollection
  fullName: java.util.AbstractCollection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: java.util.AbstractCollection.containsAll(java.util.Collection
  name: AbstractCollection.containsAll(Collection
  nameWithType: AbstractCollection.containsAll(Collection
  fullName: java.util.AbstractCollection.containsAll(java.util.Collection
- uid: java.util.AbstractCollection.removeAll(java.util.Collection
  name: AbstractCollection.removeAll(Collection
  nameWithType: AbstractCollection.removeAll(Collection
  fullName: java.util.AbstractCollection.removeAll(java.util.Collection
- uid: java.util.AbstractCollection.retainAll(java.util.Collection
  name: AbstractCollection.retainAll(Collection
  nameWithType: AbstractCollection.retainAll(Collection
  fullName: java.util.AbstractCollection.retainAll(java.util.Collection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: java.util.AbstractCollection.addAll(java.util.Collection
  name: AbstractCollection.addAll(Collection
  nameWithType: AbstractCollection.addAll(Collection
  fullName: java.util.AbstractCollection.addAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: java.util.AbstractCollection.
  name: AbstractCollection.
  nameWithType: AbstractCollection.
  fullName: java.util.AbstractCollection.
