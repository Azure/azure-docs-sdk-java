### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomalyDimensionValues*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomalyDimensionValues"
name: "listAnomalyDimensionValues"
nameWithType: "MetricsAdvisorAsyncClient.listAnomalyDimensionValues"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomalyDimensionValues(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,com.azure.ai.metricsadvisor.models.ListAnomalyDimensionValuesOptions)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorAsyncClient.listAnomalyDimensionValues(String detectionConfigurationId, String dimensionName, OffsetDateTime startTime, OffsetDateTime endTime, ListAnomalyDimensionValuesOptions options)"
  name: "listAnomalyDimensionValues(String detectionConfigurationId, String dimensionName, OffsetDateTime startTime, OffsetDateTime endTime, ListAnomalyDimensionValuesOptions options)"
  nameWithType: "MetricsAdvisorAsyncClient.listAnomalyDimensionValues(String detectionConfigurationId, String dimensionName, OffsetDateTime startTime, OffsetDateTime endTime, ListAnomalyDimensionValuesOptions options)"
  summary: "Fetch dimension values that have anomalies.\n\n**Code sample**\n\n```java\nfinal String detectionConfigurationId = \"c0f2539f-b804-4ab9-a70f-0da0c89c76d8\";\n final String dimensionName = \"Dim1\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n final ListAnomalyDimensionValuesOptions options\n     = new ListAnomalyDimensionValuesOptions()\n     .setTop(10);\n \n metricsAdvisorAsyncClient.listAnomalyDimensionValues(detectionConfigurationId,\n     dimensionName,\n     startTime, endTime, options)\n     .subscribe(dimensionValue -> {\n         System.out.printf(\"DataFeedDimension Value: %s%n\", dimensionValue);\n     });\n```"
  parameters:
  - description: "Identifies the configuration used to detect the anomalies."
    name: "detectionConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The dimension name to retrieve the values for."
    name: "dimensionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The start time of the time range within which the anomalies were identified."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "The end time of the time range within which the anomalies were identified."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListAnomalyDimensionValuesOptions?alt=com.azure.ai.metricsadvisor.models.ListAnomalyDimensionValuesOptions&text=ListAnomalyDimensionValuesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<String> listAnomalyDimensionValues(String detectionConfigurationId, String dimensionName, OffsetDateTime startTime, OffsetDateTime endTime, ListAnomalyDimensionValuesOptions options)"
  returns:
    description: "The dimension values with anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.3
