### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.JsonSerializer.serialize*"
fullName: "com.fasterxml.jackson.databind.JsonSerializer<T>.serialize"
name: "serialize"
nameWithType: "JsonSerializer<T>.serialize"
members:
- uid: "com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer<T>.serialize(T value, JsonGenerator gen, SerializerProvider serializers)"
  name: "serialize(T value, JsonGenerator gen, SerializerProvider serializers)"
  nameWithType: "JsonSerializer<T>.serialize(T value, JsonGenerator gen, SerializerProvider serializers)"
  summary: "Method that can be called to ask implementation to serialize values of type this serializer handles."
  parameters:
  - description: "Value to serialize; can <b>not</b> be null."
    name: "value"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "Generator used to output resulting Json content"
    name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provider that can be used to get serializers for\n   serializing Objects value contains, if any."
    name: "serializers"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider serializers)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
