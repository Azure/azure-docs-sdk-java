### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl.withExistingFactory*"
fullName: "com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl.withExistingFactory"
name: "withExistingFactory"
nameWithType: "DataFlowResourceImpl.withExistingFactory"
members:
- uid: "com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl.withExistingFactory(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl.withExistingFactory(String resourceGroupName, String factoryName)"
  name: "withExistingFactory(String resourceGroupName, String factoryName)"
  nameWithType: "DataFlowResourceImpl.withExistingFactory(String resourceGroupName, String factoryName)"
  summary: "Specifies resourceGroupName, factoryName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowResourceImpl withExistingFactory(String resourceGroupName, String factoryName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl?alt=com.azure.resourcemanager.datafactory.implementation.DataFlowResourceImpl&text=DataFlowResourceImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
