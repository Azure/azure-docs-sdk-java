### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl"
fullName: "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl"
name: "LoggerContractImpl"
nameWithType: "LoggerContractImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LoggerContractImpl implements LoggerContract, LoggerContract.Definition, LoggerContract.Update"
methods:
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.apply()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.create()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.credentials()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.description()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.id()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.innerModel()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.isBuffered()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.loggerType()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.name()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.refresh()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.resourceId()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.type()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.update()"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withCredentials(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withDescription(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withExistingService(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withIfMatch(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withIsBuffered(java.lang.Boolean)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withLoggerType(com.azure.resourcemanager.apimanagement.models.LoggerType)"
- "com.azure.resourcemanager.apimanagement.implementation.LoggerContractImpl.withResourceId(java.lang.String)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.apimanagement.models.LoggerContract.Definition?alt=com.azure.resourcemanager.apimanagement.models.LoggerContract.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.apimanagement.models.LoggerContract.Update?alt=com.azure.resourcemanager.apimanagement.models.LoggerContract.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.apimanagement.models.LoggerContract?alt=com.azure.resourcemanager.apimanagement.models.LoggerContract&text=LoggerContract\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.1
