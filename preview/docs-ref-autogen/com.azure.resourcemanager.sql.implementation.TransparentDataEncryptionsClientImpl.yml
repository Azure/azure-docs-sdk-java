### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  id: TransparentDataEncryptionsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation
  children:
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  langs:
  - java
  name: TransparentDataEncryptionsClientImpl
  nameWithType: TransparentDataEncryptionsClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  type: Class
  package: com.azure.resourcemanager.sql.implementation
  summary: An instance of this class provides access to all the operations defined in TransparentDataEncryptionsClient.
  syntax:
    content: public final class TransparentDataEncryptionsClientImpl implements TransparentDataEncryptionsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.sql.fluent.TransparentDataEncryptionsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  id: TransparentDataEncryptionsClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: TransparentDataEncryptionsClientImpl(SqlManagementClientImpl client)
  nameWithType: TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl(SqlManagementClientImpl client)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl(SqlManagementClientImpl client)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.sql.implementation
  summary: Initializes an instance of TransparentDataEncryptionsClientImpl.
  syntax:
    content: " TransparentDataEncryptionsClientImpl(SqlManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdate(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: public TransparentDataEncryptionInner createOrUpdate(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which setting the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
      description: represents a database transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: public Mono<TransparentDataEncryptionInner> createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which setting the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
      description: represents a database transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: public Mono<TransparentDataEncryptionInner> createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which setting the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    - id: status
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus
      description: The status of the database transparent data encryption.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
      description: represents a database transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus,com.azure.core.util.Context)
  id: createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: createOrUpdateWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status, Context context)
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status, Context context)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: public Response<TransparentDataEncryptionInner> createOrUpdateWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which setting the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    - id: status
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus
      description: The status of the database transparent data encryption.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
      description: represents a database transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: public Mono<Response<TransparentDataEncryptionInner>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, TransparentDataEncryptionStatus status)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which setting the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    - id: status
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus
      description: The status of the database transparent data encryption.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>>
      description: represents a database transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  id: get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  nameWithType: TransparentDataEncryptionsClientImpl.get(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a database's transparent data encryption configuration.
  syntax:
    content: public TransparentDataEncryptionInner get(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
      description: a database's transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  nameWithType: TransparentDataEncryptionsClientImpl.getAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a database's transparent data encryption configuration.
  syntax:
    content: public Mono<TransparentDataEncryptionInner> getAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
      description: a database's transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, Context context)
  nameWithType: TransparentDataEncryptionsClientImpl.getWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a database's transparent data encryption configuration.
  syntax:
    content: public Response<TransparentDataEncryptionInner> getWithResponse(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
      description: a database's transparent data encryption configuration.
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TransparentDataEncryptionName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  nameWithType: TransparentDataEncryptionsClientImpl.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
  overload: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a database's transparent data encryption configuration.
  syntax:
    content: public Mono<Response<TransparentDataEncryptionInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, TransparentDataEncryptionName transparentDataEncryptionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database for which the transparent data encryption applies.
    - id: transparentDataEncryptionName
      type: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
      description: The name of the transparent data encryption configuration.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>>
      description: a database's transparent data encryption configuration.
references:
- uid: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
  name: SqlManagementClientImpl
  nameWithType: SqlManagementClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl*
  name: TransparentDataEncryptionsClientImpl
  nameWithType: TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.TransparentDataEncryptionsClientImpl
  package: com.azure.resourcemanager.sql.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
  name: TransparentDataEncryptionName
  nameWithType: TransparentDataEncryptionName
  fullName: com.azure.resourcemanager.sql.models.TransparentDataEncryptionName
- uid: com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus
  name: TransparentDataEncryptionStatus
  nameWithType: TransparentDataEncryptionStatus
  fullName: com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
    name: TransparentDataEncryptionInner
    fullName: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
    name: TransparentDataEncryptionInner
    fullName: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
  name: TransparentDataEncryptionInner
  nameWithType: TransparentDataEncryptionInner
  fullName: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
    name: TransparentDataEncryptionInner
    fullName: com.azure.resourcemanager.sql.fluent.models.TransparentDataEncryptionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse*
  name: createOrUpdateWithResponse
  nameWithType: TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.createOrUpdateWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: TransparentDataEncryptionsClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync*
  name: getAsync
  nameWithType: TransparentDataEncryptionsClientImpl.getAsync
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get*
  name: get
  nameWithType: TransparentDataEncryptionsClientImpl.get
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.get
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: TransparentDataEncryptionsClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.TransparentDataEncryptionsClientImpl.getWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.TransparentDataEncryptionsClient
  name: TransparentDataEncryptionsClient
  nameWithType: TransparentDataEncryptionsClient
  fullName: com.azure.resourcemanager.sql.fluent.TransparentDataEncryptionsClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
