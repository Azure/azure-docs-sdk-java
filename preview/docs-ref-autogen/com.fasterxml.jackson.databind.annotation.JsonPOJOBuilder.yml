### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  id: JsonPOJOBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation
  children:
  - com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_BUILD_METHOD
  - com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_WITH_PREFIX
  - com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.Value
  - com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName()
  - com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix()
  langs:
  - java
  name: JsonPOJOBuilder
  nameWithType: JsonPOJOBuilder
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  type: Interface
  package: com.fasterxml.jackson.databind.annotation
  summary: >-
    Annotation used to configure details of a Builder class: instances of which are used as Builders for deserialized POJO values, instead of POJOs being instantiated using constructors or factory methods. Note that this annotation is NOT used to define what is the Builder class for a POJO: rather, this is determined by <xref uid="com.fasterxml.jackson.databind.annotation.JsonDeserialize.builder*" data-throw-if-not-resolved="false">JsonDeserialize#builder</xref> property of <xref uid="com.fasterxml.jackson.databind.annotation.JsonDeserialize" data-throw-if-not-resolved="false">JsonDeserialize</xref>.


    Annotation is typically used if the naming convention of a Builder class is different from defaults:

     *  By default, setters are expected to have names like \`withName()\` (for property "name"); override by <xref uid="com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix()" data-throw-if-not-resolved="false">#withPrefix()</xref> property.

    In addition to configuration using this annotation, note that many other configuration annotations are also applied to Builders, for example <xref uid="com.fasterxml.jackson.annotation.JsonIgnoreProperties" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonIgnoreProperties</xref> can be used to ignore "unknown" properties.
  syntax:
    content: public interface JsonPOJOBuilder implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_BUILD_METHOD
  id: DEFAULT_BUILD_METHOD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  langs:
  - java
  name: DEFAULT_BUILD_METHOD
  nameWithType: JsonPOJOBuilder.DEFAULT_BUILD_METHOD
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_BUILD_METHOD
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: public static final String DEFAULT_BUILD_METHOD
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_WITH_PREFIX
  id: DEFAULT_WITH_PREFIX
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  langs:
  - java
  name: DEFAULT_WITH_PREFIX
  nameWithType: JsonPOJOBuilder.DEFAULT_WITH_PREFIX
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.DEFAULT_WITH_PREFIX
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: public static final String DEFAULT_WITH_PREFIX
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName()
  id: buildMethodName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  langs:
  - java
  name: buildMethodName()
  nameWithType: JsonPOJOBuilder.buildMethodName()
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName()
  overload: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName*
  type: Method
  package: com.fasterxml.jackson.databind.annotation
  summary: >-
    Property to use for re-defining which zero-argument method is considered the actual "build-method": method called after all data has been bound, and the actual instance needs to be instantiated.


    Default value is "build".
  syntax:
    content: public abstract String buildMethodName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix()
  id: withPrefix()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder
  langs:
  - java
  name: withPrefix()
  nameWithType: JsonPOJOBuilder.withPrefix()
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix()
  overload: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix*
  type: Method
  package: com.fasterxml.jackson.databind.annotation
  summary: >-
    Property used for (re)defining name prefix to use for auto-detecting "with-methods": methods that are similar to "set-methods" (in that they take an argument), but that may also return the new builder instance to use (which may be 'this', or a new modified builder instance). Note that in addition to this prefix, it is also possible to use <xref uid="com.fasterxml.jackson.annotation.JsonProperty" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonProperty</xref> annotation to indicate "with-methods" (as well as <xref uid="com.fasterxml.jackson.annotation.JsonSetter" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonSetter</xref>).


    Default value is "with", so that method named "withValue()" would be used for binding JSON property "value" (using type indicated by the argument; or one defined with annotations.
  syntax:
    content: public abstract String withPrefix()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName*
  name: buildMethodName
  nameWithType: JsonPOJOBuilder.buildMethodName
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.buildMethodName
  package: com.fasterxml.jackson.databind.annotation
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix*
  name: withPrefix
  nameWithType: JsonPOJOBuilder.withPrefix
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.withPrefix
  package: com.fasterxml.jackson.databind.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.Value
  name: JsonPOJOBuilder.Value
  nameWithType: JsonPOJOBuilder.Value
  fullName: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.Value
