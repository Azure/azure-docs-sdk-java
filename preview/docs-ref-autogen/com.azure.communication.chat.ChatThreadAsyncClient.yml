### YamlMime:ManagedReference
items:
- uid: com.azure.communication.chat.ChatThreadAsyncClient
  id: ChatThreadAsyncClient
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat
  children:
  - com.azure.communication.chat.ChatThreadAsyncClient.addMembers(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId()
  - com.azure.communication.chat.ChatThreadAsyncClient.getMessage(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.listMembers()
  - com.azure.communication.chat.ChatThreadAsyncClient.listMessages()
  - com.azure.communication.chat.ChatThreadAsyncClient.listMessages(com.azure.communication.chat.models.ListChatMessagesOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts()
  - com.azure.communication.chat.ChatThreadAsyncClient.removeMember(com.azure.communication.common.CommunicationUser)
  - com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse(com.azure.communication.common.CommunicationUser)
  - com.azure.communication.chat.ChatThreadAsyncClient.sendMessage(com.azure.communication.chat.models.SendChatMessageOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse(com.azure.communication.chat.models.SendChatMessageOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse(java.lang.String)
  - com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification()
  - com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse()
  - com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread(com.azure.communication.chat.models.UpdateChatThreadOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse(com.azure.communication.chat.models.UpdateChatThreadOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.updateMessage(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  - com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  langs:
  - java
  name: ChatThreadAsyncClient
  nameWithType: ChatThreadAsyncClient
  fullName: com.azure.communication.chat.ChatThreadAsyncClient
  type: Class
  package: com.azure.communication.chat
  summary: Async Client that supports chat thread operations.
  syntax:
    content: public final class ChatThreadAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.communication.chat.ChatThreadAsyncClient.ChatThreadAsyncClient(com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl,java.lang.String)
  id: ChatThreadAsyncClient(com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: ChatThreadAsyncClient(AzureCommunicationChatServiceImpl chatServiceClient, String chatThreadId)
  nameWithType: ChatThreadAsyncClient.ChatThreadAsyncClient(AzureCommunicationChatServiceImpl chatServiceClient, String chatThreadId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.ChatThreadAsyncClient(AzureCommunicationChatServiceImpl chatServiceClient, String chatThreadId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.ChatThreadAsyncClient*
  type: Constructor
  package: com.azure.communication.chat
  syntax:
    content: " ChatThreadAsyncClient(AzureCommunicationChatServiceImpl chatServiceClient, String chatThreadId)"
    parameters:
    - id: chatServiceClient
      type: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
    - id: chatThreadId
      type: java.lang.String
- uid: com.azure.communication.chat.ChatThreadAsyncClient.addMembers(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  id: addMembers(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: addMembers(AddChatThreadMembersOptions options)
  nameWithType: ChatThreadAsyncClient.addMembers(AddChatThreadMembersOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.addMembers(AddChatThreadMembersOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.addMembers*
  type: Method
  package: com.azure.communication.chat
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Void> addMembers(AddChatThreadMembersOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.AddChatThreadMembersOptions
      description: Options for adding thread members.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  id: addMembersWithResponse(com.azure.communication.chat.models.AddChatThreadMembersOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: addMembersWithResponse(AddChatThreadMembersOptions options)
  nameWithType: ChatThreadAsyncClient.addMembersWithResponse(AddChatThreadMembersOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse(AddChatThreadMembersOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Response<Void>> addMembersWithResponse(AddChatThreadMembersOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.AddChatThreadMembersOptions
      description: Options for adding thread members.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage(java.lang.String)
  id: deleteMessage(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: deleteMessage(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.deleteMessage(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage*
  type: Method
  package: com.azure.communication.chat
  summary: Deletes a message.
  syntax:
    content: public Mono<Void> deleteMessage(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse(java.lang.String)
  id: deleteMessageWithResponse(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: deleteMessageWithResponse(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.deleteMessageWithResponse(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Deletes a message.
  syntax:
    content: public Mono<Response<Void>> deleteMessageWithResponse(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId()
  id: getChatThreadId()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: getChatThreadId()
  nameWithType: ChatThreadAsyncClient.getChatThreadId()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId*
  type: Method
  package: com.azure.communication.chat
  summary: Get the thread id property.
  syntax:
    content: public String getChatThreadId()
    return:
      type: java.lang.String
      description: the thread id value.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getMessage(java.lang.String)
  id: getMessage(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: getMessage(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.getMessage(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getMessage(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.getMessage*
  type: Method
  package: com.azure.communication.chat
  summary: Gets a message by id.
  syntax:
    content: public Mono<ChatMessage> getMessage(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.models.ChatMessage>
      description: a message by id.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse(java.lang.String)
  id: getMessageWithResponse(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: getMessageWithResponse(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.getMessageWithResponse(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Gets a message by id.
  syntax:
    content: public Mono<Response<ChatMessage>> getMessageWithResponse(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.ChatMessage>>
      description: a message by id.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listMembers()
  id: listMembers()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: listMembers()
  nameWithType: ChatThreadAsyncClient.listMembers()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listMembers()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.listMembers*
  type: Method
  package: com.azure.communication.chat
  summary: Gets the members of a thread.
  syntax:
    content: public PagedFlux<ChatThreadMember> listMembers()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadMember>
      description: the members of a thread.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listMessages()
  id: listMessages()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: listMessages()
  nameWithType: ChatThreadAsyncClient.listMessages()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listMessages()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.listMessages*
  type: Method
  package: com.azure.communication.chat
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedFlux<ChatMessage> listMessages()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatMessage>
      description: a paged list of messages from a thread.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listMessages(com.azure.communication.chat.models.ListChatMessagesOptions)
  id: listMessages(com.azure.communication.chat.models.ListChatMessagesOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: listMessages(ListChatMessagesOptions listMessagesOptions)
  nameWithType: ChatThreadAsyncClient.listMessages(ListChatMessagesOptions listMessagesOptions)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listMessages(ListChatMessagesOptions listMessagesOptions)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.listMessages*
  type: Method
  package: com.azure.communication.chat
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedFlux<ChatMessage> listMessages(ListChatMessagesOptions listMessagesOptions)
    parameters:
    - id: listMessagesOptions
      type: com.azure.communication.chat.models.ListChatMessagesOptions
      description: The request options.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatMessage>
      description: a paged list of messages from a thread.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts()
  id: listReadReceipts()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: listReadReceipts()
  nameWithType: ChatThreadAsyncClient.listReadReceipts()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts*
  type: Method
  package: com.azure.communication.chat
  summary: Gets read receipts for a thread.
  syntax:
    content: public PagedFlux<ReadReceipt> listReadReceipts()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ReadReceipt>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.removeMember(com.azure.communication.common.CommunicationUser)
  id: removeMember(com.azure.communication.common.CommunicationUser)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: removeMember(CommunicationUser user)
  nameWithType: ChatThreadAsyncClient.removeMember(CommunicationUser user)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.removeMember(CommunicationUser user)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.removeMember*
  type: Method
  package: com.azure.communication.chat
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Void> removeMember(CommunicationUser user)
    parameters:
    - id: user
      type: com.azure.communication.common.CommunicationUser
      description: User identity of the thread member to remove from the thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse(com.azure.communication.common.CommunicationUser)
  id: removeMemberWithResponse(com.azure.communication.common.CommunicationUser)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: removeMemberWithResponse(CommunicationUser user)
  nameWithType: ChatThreadAsyncClient.removeMemberWithResponse(CommunicationUser user)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse(CommunicationUser user)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Response<Void>> removeMemberWithResponse(CommunicationUser user)
    parameters:
    - id: user
      type: com.azure.communication.common.CommunicationUser
      description: User identity of the thread member to remove from the thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendMessage(com.azure.communication.chat.models.SendChatMessageOptions)
  id: sendMessage(com.azure.communication.chat.models.SendChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendMessage(SendChatMessageOptions options)
  nameWithType: ChatThreadAsyncClient.sendMessage(SendChatMessageOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendMessage(SendChatMessageOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendMessage*
  type: Method
  package: com.azure.communication.chat
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<SendChatMessageResult> sendMessage(SendChatMessageOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Options for sending the message.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.models.SendChatMessageResult>
      description: the response.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse(com.azure.communication.chat.models.SendChatMessageOptions)
  id: sendMessageWithResponse(com.azure.communication.chat.models.SendChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendMessageWithResponse(SendChatMessageOptions options)
  nameWithType: ChatThreadAsyncClient.sendMessageWithResponse(SendChatMessageOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse(SendChatMessageOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<Response<SendChatMessageResult>> sendMessageWithResponse(SendChatMessageOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Options for sending the message.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.SendChatMessageResult>>
      description: the response.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt(java.lang.String)
  id: sendReadReceipt(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendReadReceipt(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.sendReadReceipt(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt*
  type: Method
  package: com.azure.communication.chat
  summary: Posts a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendReadReceipt(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The id of the chat message that was read.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse(java.lang.String)
  id: sendReadReceiptWithResponse(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendReadReceiptWithResponse(String chatMessageId)
  nameWithType: ChatThreadAsyncClient.sendReadReceiptWithResponse(String chatMessageId)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse(String chatMessageId)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Posts a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendReadReceiptWithResponse(String chatMessageId)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The id of the chat message that was read.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification()
  id: sendTypingNotification()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendTypingNotification()
  nameWithType: ChatThreadAsyncClient.sendTypingNotification()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification*
  type: Method
  package: com.azure.communication.chat
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendTypingNotification()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse()
  id: sendTypingNotificationWithResponse()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: sendTypingNotificationWithResponse()
  nameWithType: ChatThreadAsyncClient.sendTypingNotificationWithResponse()
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse()
  overload: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendTypingNotificationWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread(com.azure.communication.chat.models.UpdateChatThreadOptions)
  id: updateChatThread(com.azure.communication.chat.models.UpdateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: updateChatThread(UpdateChatThreadOptions options)
  nameWithType: ChatThreadAsyncClient.updateChatThread(UpdateChatThreadOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread(UpdateChatThreadOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread*
  type: Method
  package: com.azure.communication.chat
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Void> updateChatThread(UpdateChatThreadOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Options for updating a chat thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse(com.azure.communication.chat.models.UpdateChatThreadOptions)
  id: updateChatThreadWithResponse(com.azure.communication.chat.models.UpdateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: updateChatThreadWithResponse(UpdateChatThreadOptions options)
  nameWithType: ChatThreadAsyncClient.updateChatThreadWithResponse(UpdateChatThreadOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse(UpdateChatThreadOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Response<Void>> updateChatThreadWithResponse(UpdateChatThreadOptions options)
    parameters:
    - id: options
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Options for updating a chat thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateMessage(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  id: updateMessage(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: updateMessage(String chatMessageId, UpdateChatMessageOptions options)
  nameWithType: ChatThreadAsyncClient.updateMessage(String chatMessageId, UpdateChatMessageOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateMessage(String chatMessageId, UpdateChatMessageOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.updateMessage*
  type: Method
  package: com.azure.communication.chat
  summary: Updates a message.
  syntax:
    content: public Mono<Void> updateMessage(String chatMessageId, UpdateChatMessageOptions options)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: options
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Options for updating the message.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  id: updateMessageWithResponse(java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.ChatThreadAsyncClient
  langs:
  - java
  name: updateMessageWithResponse(String chatMessageId, UpdateChatMessageOptions options)
  nameWithType: ChatThreadAsyncClient.updateMessageWithResponse(String chatMessageId, UpdateChatMessageOptions options)
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse(String chatMessageId, UpdateChatMessageOptions options)
  overload: com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse*
  type: Method
  package: com.azure.communication.chat
  summary: Updates a message.
  syntax:
    content: public Mono<Response<Void>> updateMessageWithResponse(String chatMessageId, UpdateChatMessageOptions options)
    parameters:
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: options
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Options for updating the message.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
references:
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  name: AzureCommunicationChatServiceImpl
  nameWithType: AzureCommunicationChatServiceImpl
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.communication.chat.ChatThreadAsyncClient.ChatThreadAsyncClient*
  name: ChatThreadAsyncClient
  nameWithType: ChatThreadAsyncClient.ChatThreadAsyncClient
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.ChatThreadAsyncClient
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId*
  name: getChatThreadId
  nameWithType: ChatThreadAsyncClient.getChatThreadId
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getChatThreadId
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.models.UpdateChatThreadOptions
  name: UpdateChatThreadOptions
  nameWithType: UpdateChatThreadOptions
  fullName: com.azure.communication.chat.models.UpdateChatThreadOptions
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread*
  name: updateChatThread
  nameWithType: ChatThreadAsyncClient.updateChatThread
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThread
  package: com.azure.communication.chat
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse*
  name: updateChatThreadWithResponse
  nameWithType: ChatThreadAsyncClient.updateChatThreadWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateChatThreadWithResponse
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.models.AddChatThreadMembersOptions
  name: AddChatThreadMembersOptions
  nameWithType: AddChatThreadMembersOptions
  fullName: com.azure.communication.chat.models.AddChatThreadMembersOptions
- uid: com.azure.communication.chat.ChatThreadAsyncClient.addMembers*
  name: addMembers
  nameWithType: ChatThreadAsyncClient.addMembers
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.addMembers
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse*
  name: addMembersWithResponse
  nameWithType: ChatThreadAsyncClient.addMembersWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.addMembersWithResponse
  package: com.azure.communication.chat
- uid: com.azure.communication.common.CommunicationUser
  spec.java:
  - uid: com.azure.communication.common.CommunicationUser
    name: CommunicationUser
    fullName: com.azure.communication.common.CommunicationUser
- uid: com.azure.communication.chat.ChatThreadAsyncClient.removeMember*
  name: removeMember
  nameWithType: ChatThreadAsyncClient.removeMember
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.removeMember
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse*
  name: removeMemberWithResponse
  nameWithType: ChatThreadAsyncClient.removeMemberWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.removeMemberWithResponse
  package: com.azure.communication.chat
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadMember>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatThreadMember
    name: ChatThreadMember
    fullName: com.azure.communication.chat.models.ChatThreadMember
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listMembers*
  name: listMembers
  nameWithType: ChatThreadAsyncClient.listMembers
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listMembers
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.models.SendChatMessageOptions
  name: SendChatMessageOptions
  nameWithType: SendChatMessageOptions
  fullName: com.azure.communication.chat.models.SendChatMessageOptions
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.models.SendChatMessageResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.SendChatMessageResult
    name: SendChatMessageResult
    fullName: com.azure.communication.chat.models.SendChatMessageResult
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendMessage*
  name: sendMessage
  nameWithType: ChatThreadAsyncClient.sendMessage
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendMessage
  package: com.azure.communication.chat
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.SendChatMessageResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.SendChatMessageResult
    name: SendChatMessageResult
    fullName: com.azure.communication.chat.models.SendChatMessageResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse*
  name: sendMessageWithResponse
  nameWithType: ChatThreadAsyncClient.sendMessageWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendMessageWithResponse
  package: com.azure.communication.chat
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.models.ChatMessage>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.models.ChatMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getMessage*
  name: getMessage
  nameWithType: ChatThreadAsyncClient.getMessage
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getMessage
  package: com.azure.communication.chat
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.ChatMessage>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.models.ChatMessage
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse*
  name: getMessageWithResponse
  nameWithType: ChatThreadAsyncClient.getMessageWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.getMessageWithResponse
  package: com.azure.communication.chat
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatMessage>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.models.ChatMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listMessages*
  name: listMessages
  nameWithType: ChatThreadAsyncClient.listMessages
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listMessages
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.models.ListChatMessagesOptions
  name: ListChatMessagesOptions
  nameWithType: ListChatMessagesOptions
  fullName: com.azure.communication.chat.models.ListChatMessagesOptions
- uid: com.azure.communication.chat.models.UpdateChatMessageOptions
  name: UpdateChatMessageOptions
  nameWithType: UpdateChatMessageOptions
  fullName: com.azure.communication.chat.models.UpdateChatMessageOptions
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateMessage*
  name: updateMessage
  nameWithType: ChatThreadAsyncClient.updateMessage
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateMessage
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse*
  name: updateMessageWithResponse
  nameWithType: ChatThreadAsyncClient.updateMessageWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.updateMessageWithResponse
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage*
  name: deleteMessage
  nameWithType: ChatThreadAsyncClient.deleteMessage
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessage
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse*
  name: deleteMessageWithResponse
  nameWithType: ChatThreadAsyncClient.deleteMessageWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.deleteMessageWithResponse
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification*
  name: sendTypingNotification
  nameWithType: ChatThreadAsyncClient.sendTypingNotification
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotification
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse*
  name: sendTypingNotificationWithResponse
  nameWithType: ChatThreadAsyncClient.sendTypingNotificationWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendTypingNotificationWithResponse
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt*
  name: sendReadReceipt
  nameWithType: ChatThreadAsyncClient.sendReadReceipt
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceipt
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse*
  name: sendReadReceiptWithResponse
  nameWithType: ChatThreadAsyncClient.sendReadReceiptWithResponse
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.sendReadReceiptWithResponse
  package: com.azure.communication.chat
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ReadReceipt>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ReadReceipt
    name: ReadReceipt
    fullName: com.azure.communication.chat.models.ReadReceipt
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts*
  name: listReadReceipts
  nameWithType: ChatThreadAsyncClient.listReadReceipts
  fullName: com.azure.communication.chat.ChatThreadAsyncClient.listReadReceipts
  package: com.azure.communication.chat
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.communication.chat.models.ChatThreadMember
  name: ChatThreadMember
  nameWithType: ChatThreadMember
  fullName: com.azure.communication.chat.models.ChatThreadMember
- uid: com.azure.communication.chat.models.SendChatMessageResult
  name: SendChatMessageResult
  nameWithType: SendChatMessageResult
  fullName: com.azure.communication.chat.models.SendChatMessageResult
- uid: com.azure.communication.chat.models.ChatMessage
  name: ChatMessage
  nameWithType: ChatMessage
  fullName: com.azure.communication.chat.models.ChatMessage
- uid: com.azure.communication.chat.models.ReadReceipt
  name: ReadReceipt
  nameWithType: ReadReceipt
  fullName: com.azure.communication.chat.models.ReadReceipt
