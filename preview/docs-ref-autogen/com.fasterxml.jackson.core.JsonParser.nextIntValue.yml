### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.nextIntValue*"
fullName: "com.fasterxml.jackson.core.JsonParser.nextIntValue"
name: "nextIntValue"
nameWithType: "JsonParser.nextIntValue"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.nextIntValue(int)"
  fullName: "com.fasterxml.jackson.core.JsonParser.nextIntValue(int defaultValue)"
  name: "nextIntValue(int defaultValue)"
  nameWithType: "JsonParser.nextIntValue(int defaultValue)"
  summary: "Method that fetches next token (as if calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.nextToken*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#nextToken\"></xref>) and if it is <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_INT\"></xref> returns 32-bit int value; otherwise returns specified default value It is functionally equivalent to:\n\n```java\nreturn (nextToken() == JsonToken.VALUE_NUMBER_INT) ? getIntValue() : defaultValue;\n```\n\nbut may be faster for parser to process, and can therefore be used if caller expects to get an int value next from input.\n\nNOTE: value checks are performed similar to <xref uid=\"com.fasterxml.jackson.core.JsonParser.getIntValue()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getIntValue()\"></xref>"
  parameters:
  - description: "Value to return if next token is NOT of type <code>JsonToken.VALUE_NUMBER_INT</code>"
    name: "defaultValue"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int nextIntValue(int defaultValue)"
  exceptions:
  - description: "for low-level read issues, or\n   <xref uid=\"JsonParseException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParseException\"></xref> for decoding problems"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Integer (<code>int</code>) value of the <code>JsonToken.VALUE_NUMBER_INT</code> token parser advanced\n   to; or <code>defaultValue</code> if next token is of some other type"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
