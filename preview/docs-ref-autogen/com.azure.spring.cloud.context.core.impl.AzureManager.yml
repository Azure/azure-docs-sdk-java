### YamlMime:JavaType
uid: "com.azure.spring.cloud.context.core.impl.AzureManager"
fullName: "com.azure.spring.cloud.context.core.impl.AzureManager<T,K>"
name: "AzureManager<T,K>"
nameWithType: "AzureManager<T,K>"
summary: "Abstract Azure resource manager."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class AzureManager<T,K> implements ResourceManager<T,K>"
constructors:
- "com.azure.spring.cloud.context.core.impl.AzureManager.AzureManager(com.microsoft.azure.management.Azure,com.azure.spring.cloud.context.core.config.AzureProperties)"
fields:
- "com.azure.spring.cloud.context.core.impl.AzureManager.azure"
- "com.azure.spring.cloud.context.core.impl.AzureManager.azureProperties"
methods:
- "com.azure.spring.cloud.context.core.impl.AzureManager.create(K)"
- "com.azure.spring.cloud.context.core.impl.AzureManager.exists(K)"
- "com.azure.spring.cloud.context.core.impl.AzureManager.get(K)"
- "com.azure.spring.cloud.context.core.impl.AzureManager.getOrCreate(K)"
type: "class"
typeParameters:
- name: "T"
- name: "K"
implements:
- "<xref href=\"com.azure.spring.cloud.context.core.api.ResourceManager?alt=com.azure.spring.cloud.context.core.api.ResourceManager&text=ResourceManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.cloud.context.core.impl"
artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
