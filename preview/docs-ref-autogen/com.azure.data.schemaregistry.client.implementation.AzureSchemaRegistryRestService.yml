### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  id: AzureSchemaRegistryRestService
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation
  children:
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups()
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups(com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync()
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync(com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync()
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync(com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost()
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline()
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(java.lang.String)
  - com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: AzureSchemaRegistryRestService
  nameWithType: AzureSchemaRegistryRestService
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  type: Class
  package: com.azure.data.schemaregistry.client.implementation
  summary: Initializes a new instance of the AzureSchemaRegistryRestService type.
  syntax:
    content: public final class AzureSchemaRegistryRestService
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService()
  id: AzureSchemaRegistryRestService()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: AzureSchemaRegistryRestService()
  nameWithType: AzureSchemaRegistryRestService.AzureSchemaRegistryRestService()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService*
  type: Constructor
  package: com.azure.data.schemaregistry.client.implementation
  summary: Initializes an instance of AzureSchemaRegistryRestService client.
  syntax:
    content: " AzureSchemaRegistryRestService()"
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService(com.azure.core.http.HttpPipeline)
  id: AzureSchemaRegistryRestService(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: AzureSchemaRegistryRestService(HttpPipeline httpPipeline)
  nameWithType: AzureSchemaRegistryRestService.AzureSchemaRegistryRestService(HttpPipeline httpPipeline)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService(HttpPipeline httpPipeline)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService*
  type: Constructor
  package: com.azure.data.schemaregistry.client.implementation
  summary: Initializes an instance of AzureSchemaRegistryRestService client.
  syntax:
    content: " AzureSchemaRegistryRestService(HttpPipeline httpPipeline)"
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  id: createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroup(String groupName, SchemaGroup body)
  nameWithType: AzureSchemaRegistryRestService.createGroup(String groupName, SchemaGroup body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(String groupName, SchemaGroup body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public void createGroup(String groupName, SchemaGroup body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  id: createGroup(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroup(String groupName, SchemaGroup body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createGroup(String groupName, SchemaGroup body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup(String groupName, SchemaGroup body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public void createGroup(String groupName, SchemaGroup body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  id: createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroupAsync(String groupName, SchemaGroup body)
  nameWithType: AzureSchemaRegistryRestService.createGroupAsync(String groupName, SchemaGroup body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(String groupName, SchemaGroup body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public Mono<Void> createGroupAsync(String groupName, SchemaGroup body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  id: createGroupAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroupAsync(String groupName, SchemaGroup body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createGroupAsync(String groupName, SchemaGroup body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync(String groupName, SchemaGroup body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public Mono<Void> createGroupAsync(String groupName, SchemaGroup body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  id: createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroupWithResponseAsync(String groupName, SchemaGroup body)
  nameWithType: AzureSchemaRegistryRestService.createGroupWithResponseAsync(String groupName, SchemaGroup body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(String groupName, SchemaGroup body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public Mono<CreateGroupResponse> createGroupWithResponseAsync(String groupName, SchemaGroup body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  id: createGroupWithResponseAsync(java.lang.String,com.azure.data.schemaregistry.client.implementation.models.SchemaGroup,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createGroupWithResponseAsync(String groupName, SchemaGroup body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createGroupWithResponseAsync(String groupName, SchemaGroup body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync(String groupName, SchemaGroup body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Create schema group with specified schema type in registry namespace.
  syntax:
    content: public Mono<CreateGroupResponse> createGroupWithResponseAsync(String groupName, SchemaGroup body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: body
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchema(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.createSchema(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public SchemaId createSchema(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaId
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: createSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchema(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createSchema(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public SchemaId createSchema(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaId
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public Mono<SchemaId> createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaId>
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: createSchemaAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public Mono<SchemaId> createSchemaAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaId>
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public Mono<CreateSchemaResponse> createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse>
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: createSchemaWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Register schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1. If schema with identical content already exists, existing schema's ID is returned.
  syntax:
    content: public Mono<CreateSchemaResponse> createSchemaWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse>
      description: the response.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(java.lang.String)
  id: deleteGroup(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroup(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteGroup(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public void deleteGroup(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(java.lang.String,com.azure.core.util.Context)
  id: deleteGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroup(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteGroup(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public void deleteGroup(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(java.lang.String)
  id: deleteGroupAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroupAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteGroupAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public Mono<Void> deleteGroupAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroupAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteGroupAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public Mono<Void> deleteGroupAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(java.lang.String)
  id: deleteGroupWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroupWithResponseAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public Mono<Response<Void>> deleteGroupWithResponseAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteGroupWithResponseAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema group in schema registry namespace.
  syntax:
    content: public Mono<Response<Void>> deleteGroupWithResponseAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(java.lang.String,java.lang.String)
  id: deleteSchema(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchema(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchema(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public void deleteSchema(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchema(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchema(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public void deleteSchema(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(java.lang.String,java.lang.String)
  id: deleteSchemaAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public Mono<Void> deleteSchemaAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public Mono<Void> deleteSchemaAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(java.lang.String,java.lang.String,int)
  id: deleteSchemaVersion(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersion(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersion(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public void deleteSchemaVersion(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: deleteSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public void deleteSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(java.lang.String,java.lang.String,int)
  id: deleteSchemaVersionAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public Mono<Void> deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: deleteSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public Mono<Void> deleteSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  id: deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public Mono<Response<Void>> deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: deleteSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete specified version of schema.
  syntax:
    content: public Mono<Response<Void>> deleteSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteSchemaWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaWithResponseAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public Mono<Response<Void>> deleteSchemaWithResponseAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Delete schema.
  syntax:
    content: public Mono<Response<Void>> deleteSchemaWithResponseAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(java.lang.String)
  id: deleteSchemasByGroup(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroup(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroup(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public void deleteSchemasByGroup(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  id: deleteSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroup(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroup(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public void deleteSchemasByGroup(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(java.lang.String)
  id: deleteSchemasByGroupAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroupAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public Mono<Void> deleteSchemasByGroupAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroupAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public Mono<Void> deleteSchemasByGroupAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(java.lang.String)
  id: deleteSchemasByGroupWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroupWithResponseAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public Mono<Response<Void>> deleteSchemasByGroupWithResponseAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: deleteSchemasByGroupWithResponseAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Deletes all schemas under specified group name.
  syntax:
    content: public Mono<Response<Void>> deleteSchemasByGroupWithResponseAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(java.lang.String)
  id: getGroup(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroup(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getGroup(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public SchemaGroup getGroup(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(java.lang.String,com.azure.core.util.Context)
  id: getGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroup(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroup(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public SchemaGroup getGroup(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(java.lang.String)
  id: getGroupAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getGroupAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public Mono<SchemaGroup> getGroupAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: getGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroupAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public Mono<SchemaGroup> getGroupAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(java.lang.String)
  id: getGroupWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupWithResponseAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getGroupWithResponseAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public Mono<Response<SchemaGroup>> getGroupWithResponseAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>>
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupWithResponseAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroupWithResponseAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema group description in registry namespace.
  syntax:
    content: public Mono<Response<SchemaGroup>> getGroupWithResponseAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>>
      description: schema group description in registry namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups()
  id: getGroups()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroups()
  nameWithType: AzureSchemaRegistryRestService.getGroups()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public List<String> getGroups()
    return:
      type: java.util.List<java.lang.String>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups(com.azure.core.util.Context)
  id: getGroups(com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroups(Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroups(Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups(Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public List<String> getGroups(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.util.List<java.lang.String>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync()
  id: getGroupsAsync()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupsAsync()
  nameWithType: AzureSchemaRegistryRestService.getGroupsAsync()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public Mono<List<String>> getGroupsAsync()
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.String>>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync(com.azure.core.util.Context)
  id: getGroupsAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupsAsync(Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroupsAsync(Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync(Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public Mono<List<String>> getGroupsAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.String>>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync()
  id: getGroupsWithResponseAsync()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupsWithResponseAsync()
  nameWithType: AzureSchemaRegistryRestService.getGroupsWithResponseAsync()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public Mono<Response<List<String>>> getGroupsWithResponseAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<java.lang.String>>>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync(com.azure.core.util.Context)
  id: getGroupsWithResponseAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getGroupsWithResponseAsync(Context context)
  nameWithType: AzureSchemaRegistryRestService.getGroupsWithResponseAsync(Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync(Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get all schema groups in namespace.
  syntax:
    content: public Mono<Response<List<String>>> getGroupsWithResponseAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<java.lang.String>>>
      description: all schema groups in namespace.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost()
  id: getHost()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getHost()
  nameWithType: AzureSchemaRegistryRestService.getHost()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Gets server parameter.
  syntax:
    content: public String getHost()
    return:
      type: java.lang.String
      description: the host value.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: AzureSchemaRegistryRestService.getHttpPipeline()
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline()
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Gets The HTTP pipeline to send requests through.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: the httpPipeline value.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public SchemaId getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaId
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getIdBySchemaContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public SchemaId getIdBySchemaContent(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.data.schemaregistry.client.implementation.models.SchemaId
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public Mono<SchemaId> getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaId>
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getIdBySchemaContentAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public Mono<SchemaId> getIdBySchemaContentAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaId>
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public Mono<GetIdBySchemaContentResponse> getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse>
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getIdBySchemaContentWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get ID for schema with matching byte content and schema type.
  syntax:
    content: public Mono<GetIdBySchemaContentResponse> getIdBySchemaContentWithResponseAsync(String groupName, String schemaName, String xSchemaType, String body, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: xSchemaType
      type: java.lang.String
      description: The xSchemaType parameter.
    - id: body
      type: java.lang.String
      description: schema content.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse>
      description: iD for schema with matching byte content and schema type.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(java.lang.String,java.lang.String)
  id: getLatestSchema(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchema(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchema(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public String getLatestSchema(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: java.lang.String
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getLatestSchema(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchema(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchema(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public String getLatestSchema(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.lang.String
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(java.lang.String,java.lang.String)
  id: getLatestSchemaAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchemaAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public Mono<String> getLatestSchemaAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getLatestSchemaAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchemaAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public Mono<String> getLatestSchemaAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String)
  id: getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchemaWithResponseAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public Mono<GetLatestSchemaResponse> getLatestSchemaWithResponseAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse>
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getLatestSchemaWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getLatestSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get latest version of schema.
  syntax:
    content: public Mono<GetLatestSchemaResponse> getLatestSchemaWithResponseAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse>
      description: latest version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(java.lang.String)
  id: getSchemaById(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaById(String schemaId)
  nameWithType: AzureSchemaRegistryRestService.getSchemaById(String schemaId)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(String schemaId)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public String getSchemaById(String schemaId)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    return:
      type: java.lang.String
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(java.lang.String,com.azure.core.util.Context)
  id: getSchemaById(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaById(String schemaId, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaById(String schemaId, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById(String schemaId, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public String getSchemaById(String schemaId, Context context)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.lang.String
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(java.lang.String)
  id: getSchemaByIdAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaByIdAsync(String schemaId)
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdAsync(String schemaId)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(String schemaId)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public Mono<String> getSchemaByIdAsync(String schemaId)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(java.lang.String,com.azure.core.util.Context)
  id: getSchemaByIdAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaByIdAsync(String schemaId, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdAsync(String schemaId, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync(String schemaId, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public Mono<String> getSchemaByIdAsync(String schemaId, Context context)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(java.lang.String)
  id: getSchemaByIdWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaByIdWithResponseAsync(String schemaId)
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(String schemaId)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(String schemaId)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public Mono<GetSchemaByIdResponse> getSchemaByIdWithResponseAsync(String schemaId)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse>
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getSchemaByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaByIdWithResponseAsync(String schemaId, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(String schemaId, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync(String schemaId, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get schema by schema ID.
  syntax:
    content: public Mono<GetSchemaByIdResponse> getSchemaByIdWithResponseAsync(String schemaId, Context context)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: schema ID referencing specific schema in registry namespace.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse>
      description: schema by schema ID.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(java.lang.String,java.lang.String,int)
  id: getSchemaVersion(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersion(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersion(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public String getSchemaVersion(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    return:
      type: java.lang.String
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: getSchemaVersion(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public String getSchemaVersion(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.lang.String
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(java.lang.String,java.lang.String,int)
  id: getSchemaVersionAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public Mono<String> getSchemaVersionAsync(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: getSchemaVersionAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public Mono<String> getSchemaVersionAsync(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  id: getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public Mono<GetSchemaVersionResponse> getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse>
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: getSchemaVersionWithResponseAsync(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get specified version of schema.
  syntax:
    content: public Mono<GetSchemaVersionResponse> getSchemaVersionWithResponseAsync(String groupName, String schemaName, int versionNumber, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: versionNumber
      type: int
      description: version number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse>
      description: specified version of schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(java.lang.String,java.lang.String)
  id: getSchemaVersions(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersions(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersions(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public List<Integer> getSchemaVersions(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: java.util.List<java.lang.Integer>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSchemaVersions(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersions(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersions(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public List<Integer> getSchemaVersions(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.util.List<java.lang.Integer>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(java.lang.String,java.lang.String)
  id: getSchemaVersionsAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionsAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public Mono<List<Integer>> getSchemaVersionsAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.Integer>>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSchemaVersionsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionsAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public Mono<List<Integer>> getSchemaVersionsAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.Integer>>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String)
  id: getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionsWithResponseAsync(String groupName, String schemaName)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(String groupName, String schemaName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(String groupName, String schemaName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public Mono<GetSchemaVersionsResponse> getSchemaVersionsWithResponseAsync(String groupName, String schemaName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSchemaVersionsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemaVersionsWithResponseAsync(String groupName, String schemaName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(String groupName, String schemaName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync(String groupName, String schemaName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Get list of versions for specified schema.
  syntax:
    content: public Mono<GetSchemaVersionsResponse> getSchemaVersionsWithResponseAsync(String groupName, String schemaName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: schemaName
      type: java.lang.String
      description: schema name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse>
      description: list of versions for specified schema.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(java.lang.String)
  id: getSchemasByGroup(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroup(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroup(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public List<String> getSchemasByGroup(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: java.util.List<java.lang.String>
      description: array of String.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  id: getSchemasByGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroup(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroup(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public List<String> getSchemasByGroup(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: java.util.List<java.lang.String>
      description: array of String.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(java.lang.String)
  id: getSchemasByGroupAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroupAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public Mono<List<String>> getSchemasByGroupAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.String>>
      description: array of String.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: getSchemasByGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroupAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public Mono<List<String>> getSchemasByGroupAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.util.List<java.lang.String>>
      description: array of String.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(java.lang.String)
  id: getSchemasByGroupWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroupWithResponseAsync(String groupName)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(String groupName)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(String groupName)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public Mono<GetSchemasByGroupResponse> getSchemasByGroupWithResponseAsync(String groupName)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse>
      description: array of String.
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getSchemasByGroupWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  langs:
  - java
  name: getSchemasByGroupWithResponseAsync(String groupName, Context context)
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(String groupName, Context context)
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync(String groupName, Context context)
  overload: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync*
  type: Method
  package: com.azure.data.schemaregistry.client.implementation
  summary: Returns schema by group name.
  syntax:
    content: public Mono<GetSchemasByGroupResponse> getSchemasByGroupWithResponseAsync(String groupName, Context context)
    parameters:
    - id: groupName
      type: java.lang.String
      description: schema group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse>
      description: array of String.
references:
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService*
  name: AzureSchemaRegistryRestService
  nameWithType: AzureSchemaRegistryRestService.AzureSchemaRegistryRestService
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.AzureSchemaRegistryRestService
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost*
  name: getHost
  nameWithType: AzureSchemaRegistryRestService.getHost
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHost
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: AzureSchemaRegistryRestService.getHttpPipeline
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getHttpPipeline
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<java.lang.String>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync*
  name: getGroupsWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getGroupsWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<java.util.List<java.lang.String>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync*
  name: getGroupsAsync
  nameWithType: AzureSchemaRegistryRestService.getGroupsAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupsAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups*
  name: getGroups
  nameWithType: AzureSchemaRegistryRestService.getGroups
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroups
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse
    name: GetSchemaByIdResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync*
  name: getSchemaByIdWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<java.lang.String>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync*
  name: getSchemaByIdAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaByIdAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaByIdAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById*
  name: getSchemaById
  nameWithType: AzureSchemaRegistryRestService.getSchemaById
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaById
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
    name: SchemaGroup
    fullName: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync*
  name: getGroupWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getGroupWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaGroup>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
    name: SchemaGroup
    fullName: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync*
  name: getGroupAsync
  nameWithType: AzureSchemaRegistryRestService.getGroupAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroupAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
  name: SchemaGroup
  nameWithType: SchemaGroup
  fullName: com.azure.data.schemaregistry.client.implementation.models.SchemaGroup
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup*
  name: getGroup
  nameWithType: AzureSchemaRegistryRestService.getGroup
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getGroup
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse
    name: CreateGroupResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync*
  name: createGroupWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.createGroupWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync*
  name: createGroupAsync
  nameWithType: AzureSchemaRegistryRestService.createGroupAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroupAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup*
  name: createGroup
  nameWithType: AzureSchemaRegistryRestService.createGroup
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createGroup
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync*
  name: deleteGroupWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.deleteGroupWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync*
  name: deleteGroupAsync
  nameWithType: AzureSchemaRegistryRestService.deleteGroupAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroupAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup*
  name: deleteGroup
  nameWithType: AzureSchemaRegistryRestService.deleteGroup
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteGroup
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse
    name: GetSchemasByGroupResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync*
  name: getSchemasByGroupWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync*
  name: getSchemasByGroupAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroupAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroupAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup*
  name: getSchemasByGroup
  nameWithType: AzureSchemaRegistryRestService.getSchemasByGroup
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemasByGroup
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync*
  name: deleteSchemasByGroupWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync*
  name: deleteSchemasByGroupAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroupAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroupAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup*
  name: deleteSchemasByGroup
  nameWithType: AzureSchemaRegistryRestService.deleteSchemasByGroup
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemasByGroup
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse
    name: GetIdBySchemaContentResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync*
  name: getIdBySchemaContentWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.SchemaId>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.SchemaId
    name: SchemaId
    fullName: com.azure.data.schemaregistry.client.implementation.models.SchemaId
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync*
  name: getIdBySchemaContentAsync
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContentAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContentAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.models.SchemaId
  name: SchemaId
  nameWithType: SchemaId
  fullName: com.azure.data.schemaregistry.client.implementation.models.SchemaId
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent*
  name: getIdBySchemaContent
  nameWithType: AzureSchemaRegistryRestService.getIdBySchemaContent
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getIdBySchemaContent
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse
    name: CreateSchemaResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync*
  name: createSchemaWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.createSchemaWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync*
  name: createSchemaAsync
  nameWithType: AzureSchemaRegistryRestService.createSchemaAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchemaAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema*
  name: createSchema
  nameWithType: AzureSchemaRegistryRestService.createSchema
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.createSchema
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse
    name: GetLatestSchemaResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync*
  name: getLatestSchemaWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync*
  name: getLatestSchemaAsync
  nameWithType: AzureSchemaRegistryRestService.getLatestSchemaAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchemaAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema*
  name: getLatestSchema
  nameWithType: AzureSchemaRegistryRestService.getLatestSchema
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getLatestSchema
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync*
  name: deleteSchemaWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync*
  name: deleteSchemaAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema*
  name: deleteSchema
  nameWithType: AzureSchemaRegistryRestService.deleteSchema
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchema
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse
    name: GetSchemaVersionsResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync*
  name: getSchemaVersionsWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: reactor.core.publisher.Mono<java.util.List<java.lang.Integer>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync*
  name: getSchemaVersionsAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionsAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionsAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: java.util.List<java.lang.Integer>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions*
  name: getSchemaVersions
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersions
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersions
  package: com.azure.data.schemaregistry.client.implementation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Mono<com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse
    name: GetSchemaVersionResponse
    fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync*
  name: getSchemaVersionWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync*
  name: getSchemaVersionAsync
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersionAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersionAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion*
  name: getSchemaVersion
  nameWithType: AzureSchemaRegistryRestService.getSchemaVersion
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.getSchemaVersion
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync*
  name: deleteSchemaVersionWithResponseAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionWithResponseAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync*
  name: deleteSchemaVersionAsync
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersionAsync
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersionAsync
  package: com.azure.data.schemaregistry.client.implementation
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion*
  name: deleteSchemaVersion
  nameWithType: AzureSchemaRegistryRestService.deleteSchemaVersion
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService.deleteSchemaVersion
  package: com.azure.data.schemaregistry.client.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse
  name: GetSchemaByIdResponse
  nameWithType: GetSchemaByIdResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaByIdResponse
- uid: com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse
  name: CreateGroupResponse
  nameWithType: CreateGroupResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.CreateGroupResponse
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse
  name: GetSchemasByGroupResponse
  nameWithType: GetSchemasByGroupResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemasByGroupResponse
- uid: com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse
  name: GetIdBySchemaContentResponse
  nameWithType: GetIdBySchemaContentResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetIdBySchemaContentResponse
- uid: com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse
  name: CreateSchemaResponse
  nameWithType: CreateSchemaResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.CreateSchemaResponse
- uid: com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse
  name: GetLatestSchemaResponse
  nameWithType: GetLatestSchemaResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetLatestSchemaResponse
- uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse
  name: GetSchemaVersionsResponse
  nameWithType: GetSchemaVersionsResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionsResponse
- uid: java.lang.Integer
  name: Integer
  nameWithType: Integer
  fullName: java.lang.Integer
- uid: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse
  name: GetSchemaVersionResponse
  nameWithType: GetSchemaVersionResponse
  fullName: com.azure.data.schemaregistry.client.implementation.models.GetSchemaVersionResponse
