### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer*"
fullName: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer"
name: "createKeySerializer"
nameWithType: "SerializerFactory.createKeySerializer"
members:
- uid: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
  fullName: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer(SerializationConfig config, JavaType type, JsonSerializer<Object> defaultImpl)"
  name: "createKeySerializer(SerializationConfig config, JavaType type, JsonSerializer<Object> defaultImpl)"
  nameWithType: "SerializerFactory.createKeySerializer(SerializationConfig config, JavaType type, JsonSerializer<Object> defaultImpl)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializationConfig?alt=com.fasterxml.jackson.databind.SerializationConfig&text=SerializationConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "defaultImpl"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract JsonSerializer<Object> createKeySerializer(SerializationConfig config, JavaType type, JsonSerializer<Object> defaultImpl)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
  fullName: "com.fasterxml.jackson.databind.ser.SerializerFactory.createKeySerializer(SerializerProvider prov, JavaType type, JsonSerializer<Object> defaultImpl)"
  name: "createKeySerializer(SerializerProvider prov, JavaType type, JsonSerializer<Object> defaultImpl)"
  nameWithType: "SerializerFactory.createKeySerializer(SerializerProvider prov, JavaType type, JsonSerializer<Object> defaultImpl)"
  summary: "Method called to create serializer to use for serializing JSON property names (which must be output as `JsonToken.FIELD_NAME`) for Map that has specified declared key type, and is for specified property (or, if property is null, as root value)"
  parameters:
  - name: "prov"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - description: "Declared type for Map keys"
    name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Default key serializer implementation to use, if no custom ones\n    are found (may be null)"
    name: "defaultImpl"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JsonSerializer<Object> createKeySerializer(SerializerProvider prov, JavaType type, JsonSerializer<Object> defaultImpl)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Serializer to use, if factory knows it; null if not (in which case default\n   serializer is to be used)"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
