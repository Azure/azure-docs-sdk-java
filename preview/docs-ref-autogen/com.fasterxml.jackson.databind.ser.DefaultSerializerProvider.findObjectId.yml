### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId*"
fullName: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId"
name: "findObjectId"
nameWithType: "DefaultSerializerProvider.findObjectId"
members:
- uid: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)"
  name: "findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)"
  nameWithType: "DefaultSerializerProvider.findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)"
  summary: "Method called to find the Object Id for given POJO, if one has been generated. Will always return a non-null Object; contents vary depending on whether an Object Id already exists or not."
  overridden: "com.fasterxml.jackson.databind.SerializerProvider.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
  parameters:
  - name: "forPojo"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "generatorType"
    type: "<xref href=\"com.fasterxml.jackson.annotation.ObjectIdGenerator?alt=com.fasterxml.jackson.annotation.ObjectIdGenerator&text=ObjectIdGenerator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public WritableObjectId findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.WritableObjectId?alt=com.fasterxml.jackson.databind.ser.impl.WritableObjectId&text=WritableObjectId\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
