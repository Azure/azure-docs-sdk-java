### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.updateSecretPropertiesWithResponse*"
fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.updateSecretPropertiesWithResponse"
name: "updateSecretPropertiesWithResponse"
nameWithType: "SecretAsyncClient.updateSecretPropertiesWithResponse"
members:
- uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.updateSecretPropertiesWithResponse(com.azure.security.keyvault.secrets.models.SecretProperties)"
  fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.updateSecretPropertiesWithResponse(SecretProperties secretProperties)"
  name: "updateSecretPropertiesWithResponse(SecretProperties secretProperties)"
  nameWithType: "SecretAsyncClient.updateSecretPropertiesWithResponse(SecretProperties secretProperties)"
  summary: "Updates the attributes associated with the secret. The value of the secret in the key vault cannot be changed. Only attributes populated in `secretProperties` are changed. Attributes not specified in the request are not changed. This operation requires the `secrets/set` permission.\n\n**Code sample**\n\nGets latest version of the secret, changes its <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties.setNotBefore(java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> time, and then updates it in the Azure Key Vault. Subscribes to the call asynchronously and prints out the returned secret details when a response is received.\n\n```java\nsecretAsyncClient.getSecret(\"secretName\")\n     .subscribe(secretResponseValue -> {\n         SecretProperties secretProperties = secretResponseValue.getProperties();\n         //Update the not before time of the secret.\n         secretProperties.setNotBefore(OffsetDateTime.now().plusDays(50));\n         secretAsyncClient.updateSecretPropertiesWithResponse(secretProperties)\n             .subscribe(secretResponse ->\n                 System.out.printf(\"Secret's updated not before time %s %n\",\n                     secretResponse.getValue().getNotBefore().toString()));\n     });\n```\n\nThe `secret` is required and its fields <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"name\"></xref> and <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties.getVersion()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"version\"></xref> cannot be null."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secret properties\"></xref> object with updated properties."
    name: "secretProperties"
    type: "<xref href=\"com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SecretProperties>> updateSecretPropertiesWithResponse(SecretProperties secretProperties)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated secret\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
