### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  id: Inclusion
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type
  children:
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PARENT_PROPERTY
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PAYLOAD_PROPERTY
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_OBJECT
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext()
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf(java.lang.String)
  - com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values()
  langs:
  - java
  name: WritableTypeId.Inclusion
  nameWithType: WritableTypeId.Inclusion
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  type: Enum
  package: com.fasterxml.jackson.core.type
  summary: >-
    Enumeration of values that matches enum \`As\` from annotation \`JsonTypeInfo\`: separate definition to avoid dependency between streaming core and annotations packages; also allows more flexibility in case new values needed at this level of internal API.


    NOTE: in most cases this only matters with formats that do NOT have native type id capabilities, and require type id to be included within regular data (whether exposed as Java properties or not). Formats with native types usually use native type id functionality regardless, unless overridden by a feature to use "non-native" type inclusion.
  syntax:
    content: public enum WritableTypeId.Inclusion extends Enum<WritableTypeId.Inclusion>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.Inclusion()
  id: Inclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: Inclusion()
  nameWithType: WritableTypeId.Inclusion.Inclusion()
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.Inclusion()
  overload: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.Inclusion*
  type: Constructor
  package: com.fasterxml.jackson.core.type
  syntax:
    content: private Inclusion()
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY
  id: METADATA_PROPERTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: METADATA_PROPERTY
  nameWithType: WritableTypeId.Inclusion.METADATA_PROPERTY
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY
  type: Field
  package: com.fasterxml.jackson.core.type
  summary: >-
    Inclusion as a property within Object to write, but logically as separate metadata that is not exposed as payload to caller: that is, does not match any of visible properties value object has.


    NOTE: if shape of typed value to write is NOT Object, will instead use <xref uid="com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY" data-throw-if-not-resolved="false">#WRAPPER_ARRAY</xref> inclusion.


    Corresponds to `JsonTypeInfo.As.PROPERTY`.
  syntax:
    content: public static final WritableTypeId.Inclusion METADATA_PROPERTY
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PARENT_PROPERTY
  id: PARENT_PROPERTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: PARENT_PROPERTY
  nameWithType: WritableTypeId.Inclusion.PARENT_PROPERTY
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PARENT_PROPERTY
  type: Field
  package: com.fasterxml.jackson.core.type
  summary: >-
    Inclusion as a property within "parent" Object of value Object to write. This typically requires slightly convoluted processing in which property that contains type id is actually written **after** typed value object itself is written.

    Note that it is illegal to call write method if the current (parent) write context is not Object: no coercion is done for other inclusion types (unlike with other `xxx_PROPERTY` choices. This also means that root values MAY NOT use this type id inclusion mechanism (as they have no parent context).


    Corresponds to `JsonTypeInfo.As.EXTERNAL_PROPERTY`.
  syntax:
    content: public static final WritableTypeId.Inclusion PARENT_PROPERTY
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PAYLOAD_PROPERTY
  id: PAYLOAD_PROPERTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: PAYLOAD_PROPERTY
  nameWithType: WritableTypeId.Inclusion.PAYLOAD_PROPERTY
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PAYLOAD_PROPERTY
  type: Field
  package: com.fasterxml.jackson.core.type
  summary: >-
    Inclusion as a "regular" property within Object to write; this implies that its value should come from regular POJO property on serialization, and be deserialized into such property. This handling, however, is up to databinding.


    Regarding handling, type id is ONLY written as native type id; if no native type ids available, caller is assumed to handle output some other way. This is different from <xref uid="com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY" data-throw-if-not-resolved="false">#METADATA_PROPERTY</xref>.


    NOTE: if shape of typed value to write is NOT Object, will instead use <xref uid="com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY" data-throw-if-not-resolved="false">#WRAPPER_ARRAY</xref> inclusion.


    Corresponds to `JsonTypeInfo.As.EXISTING_PROPERTY`.
  syntax:
    content: public static final WritableTypeId.Inclusion PAYLOAD_PROPERTY
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY
  id: WRAPPER_ARRAY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: WRAPPER_ARRAY
  nameWithType: WritableTypeId.Inclusion.WRAPPER_ARRAY
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY
  type: Field
  package: com.fasterxml.jackson.core.type
  summary: >-
    Inclusion as wrapper Array (1st element type id, 2nd element value).


    Corresponds to `JsonTypeInfo.As.WRAPPER_ARRAY`.
  syntax:
    content: public static final WritableTypeId.Inclusion WRAPPER_ARRAY
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_OBJECT
  id: WRAPPER_OBJECT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: WRAPPER_OBJECT
  nameWithType: WritableTypeId.Inclusion.WRAPPER_OBJECT
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_OBJECT
  type: Field
  package: com.fasterxml.jackson.core.type
  summary: >-
    Inclusion as wrapper Object that has one key/value pair where type id is the key for typed value.


    Corresponds to `JsonTypeInfo.As.WRAPPER_OBJECT`.
  syntax:
    content: public static final WritableTypeId.Inclusion WRAPPER_OBJECT
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext()
  id: requiresObjectContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: requiresObjectContext()
  nameWithType: WritableTypeId.Inclusion.requiresObjectContext()
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext()
  overload: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public boolean requiresObjectContext()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: valueOf(String name)
  nameWithType: WritableTypeId.Inclusion.valueOf(String name)
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf(String name)
  overload: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public static WritableTypeId.Inclusion valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  langs:
  - java
  name: values()
  nameWithType: WritableTypeId.Inclusion.values()
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values()
  overload: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public static WritableTypeId.Inclusion[] values()
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion[]
references:
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.Inclusion*
  name: Inclusion
  nameWithType: WritableTypeId.Inclusion.Inclusion
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.Inclusion
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion[]
  spec.java:
  - uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
    name: Inclusion
    fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values*
  name: values
  nameWithType: WritableTypeId.Inclusion.values
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values
  package: com.fasterxml.jackson.core.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf*
  name: valueOf
  nameWithType: WritableTypeId.Inclusion.valueOf
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf
  package: com.fasterxml.jackson.core.type
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext*
  name: requiresObjectContext
  nameWithType: WritableTypeId.Inclusion.requiresObjectContext
  fullName: com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext
  package: com.fasterxml.jackson.core.type
- uid: java.lang.Enum<com.fasterxml.jackson.core.type.WritableTypeId.Inclusion>
  name: Enum<WritableTypeId.Inclusion>
  nameWithType: Enum<WritableTypeId.Inclusion>
  fullName: java.lang.Enum<com.fasterxml.jackson.core.type.WritableTypeId.Inclusion>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
