### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion"
fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion"
name: "WritableTypeId.Inclusion"
nameWithType: "WritableTypeId.Inclusion"
summary: "Enumeration of values that matches enum \\`As\\` from annotation \\`JsonTypeInfo\\`: separate definition to avoid dependency between streaming core and annotations packages; also allows more flexibility in case new values needed at this level of internal API.\n\nNOTE: in most cases this only matters with formats that do NOT have native type id capabilities, and require type id to be included within regular data (whether exposed as Java properties or not). Formats with native types usually use native type id functionality regardless, unless overridden by a feature to use \"non-native\" type inclusion."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum WritableTypeId.Inclusion extends Enum<WritableTypeId.Inclusion>"
fields:
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY"
  name: "METADATA_PROPERTY"
  nameWithType: "WritableTypeId.Inclusion.METADATA_PROPERTY"
  summary: "Inclusion as a property within Object to write, but logically as separate metadata that is not exposed as payload to caller: that is, does not match any of visible properties value object has.\n\nNOTE: if shape of typed value to write is NOT Object, will instead use <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#WRAPPER_ARRAY\"></xref> inclusion.\n\nCorresponds to `JsonTypeInfo.As.PROPERTY`."
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PARENT_PROPERTY"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PARENT_PROPERTY"
  name: "PARENT_PROPERTY"
  nameWithType: "WritableTypeId.Inclusion.PARENT_PROPERTY"
  summary: "Inclusion as a property within \"parent\" Object of value Object to write. This typically requires slightly convoluted processing in which property that contains type id is actually written **after** typed value object itself is written.\nNote that it is illegal to call write method if the current (parent) write context is not Object: no coercion is done for other inclusion types (unlike with other `xxx_PROPERTY` choices. This also means that root values MAY NOT use this type id inclusion mechanism (as they have no parent context).\n\nCorresponds to `JsonTypeInfo.As.EXTERNAL_PROPERTY`."
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PAYLOAD_PROPERTY"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.PAYLOAD_PROPERTY"
  name: "PAYLOAD_PROPERTY"
  nameWithType: "WritableTypeId.Inclusion.PAYLOAD_PROPERTY"
  summary: "Inclusion as a \"regular\" property within Object to write; this implies that its value should come from regular POJO property on serialization, and be deserialized into such property. This handling, however, is up to databinding.\n\nRegarding handling, type id is ONLY written as native type id; if no native type ids available, caller is assumed to handle output some other way. This is different from <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.METADATA_PROPERTY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#METADATA_PROPERTY\"></xref>.\n\nNOTE: if shape of typed value to write is NOT Object, will instead use <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#WRAPPER_ARRAY\"></xref> inclusion.\n\nCorresponds to `JsonTypeInfo.As.EXISTING_PROPERTY`."
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_ARRAY"
  name: "WRAPPER_ARRAY"
  nameWithType: "WritableTypeId.Inclusion.WRAPPER_ARRAY"
  summary: "Inclusion as wrapper Array (1st element type id, 2nd element value).\n\nCorresponds to `JsonTypeInfo.As.WRAPPER_ARRAY`."
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_OBJECT"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.WRAPPER_OBJECT"
  name: "WRAPPER_OBJECT"
  nameWithType: "WritableTypeId.Inclusion.WRAPPER_OBJECT"
  summary: "Inclusion as wrapper Object that has one key/value pair where type id is the key for typed value.\n\nCorresponds to `JsonTypeInfo.As.WRAPPER_OBJECT`."
methods:
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext()"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.requiresObjectContext()"
  name: "requiresObjectContext()"
  nameWithType: "WritableTypeId.Inclusion.requiresObjectContext()"
  syntax: "public boolean requiresObjectContext()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "WritableTypeId.Inclusion.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WritableTypeId.Inclusion valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.type.WritableTypeId.Inclusion?alt=com.fasterxml.jackson.core.type.WritableTypeId.Inclusion&text=Inclusion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values()"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.Inclusion.values()"
  name: "values()"
  nameWithType: "WritableTypeId.Inclusion.values()"
  syntax: "public static WritableTypeId.Inclusion[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.type.WritableTypeId.Inclusion?alt=com.fasterxml.jackson.core.type.WritableTypeId.Inclusion&text=Inclusion\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.core.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
