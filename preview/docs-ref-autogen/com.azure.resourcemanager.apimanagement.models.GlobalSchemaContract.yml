### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract"
fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract"
name: "GlobalSchemaContract"
nameWithType: "GlobalSchemaContract"
summary: "An immutable client-side representation of Global<wbr>Schema<wbr>Contract."
syntax: "public interface GlobalSchemaContract"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.description()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.description()"
  name: "description()"
  nameWithType: "GlobalSchemaContract.description()"
  summary: "Gets the description property: Free-form schema entity description."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: Free-form schema entity description."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.document()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.document()"
  name: "document()"
  nameWithType: "GlobalSchemaContract.document()"
  summary: "Gets the document property: Global Schema document object for json-based schema formats(e.<wbr>g."
  modifiers:
  - "abstract"
  syntax: "public abstract Object document()"
  desc: "Gets the document property: Global Schema document object for json-based schema formats(e.g. json schema)."
  returns:
    description: "the document value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.id()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.id()"
  name: "id()"
  nameWithType: "GlobalSchemaContract.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.innerModel()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.innerModel()"
  name: "innerModel()"
  nameWithType: "GlobalSchemaContract.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>apimanagement.<wbr>fluent.<wbr>models.<wbr>Global<wbr>Schema<wbr>Contract<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract GlobalSchemaContractInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.apimanagement.fluent.models.GlobalSchemaContractInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.GlobalSchemaContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.GlobalSchemaContractInner&text=GlobalSchemaContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.name()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.name()"
  name: "name()"
  nameWithType: "GlobalSchemaContract.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.refresh()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.refresh()"
  name: "refresh()"
  nameWithType: "GlobalSchemaContract.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract GlobalSchemaContract refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract?alt=com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract&text=GlobalSchemaContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "GlobalSchemaContract.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GlobalSchemaContract refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract?alt=com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract&text=GlobalSchemaContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.schemaType()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.schemaType()"
  name: "schemaType()"
  nameWithType: "GlobalSchemaContract.schemaType()"
  summary: "Gets the schema<wbr>Type property: Schema Type."
  modifiers:
  - "abstract"
  syntax: "public abstract SchemaType schemaType()"
  desc: "Gets the schemaType property: Schema Type. Immutable."
  returns:
    description: "the schemaType value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.SchemaType?alt=com.azure.resourcemanager.apimanagement.models.SchemaType&text=SchemaType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.type()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.type()"
  name: "type()"
  nameWithType: "GlobalSchemaContract.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.update()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.update()"
  name: "update()"
  nameWithType: "GlobalSchemaContract.update()"
  summary: "Begins update for the Global<wbr>Schema<wbr>Contract resource."
  modifiers:
  - "abstract"
  syntax: "public abstract GlobalSchemaContract.Update update()"
  desc: "Begins update for the GlobalSchemaContract resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.Update?alt=com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.value()"
  fullName: "com.azure.resourcemanager.apimanagement.models.GlobalSchemaContract.value()"
  name: "value()"
  nameWithType: "GlobalSchemaContract.value()"
  summary: "Gets the value property: Json-encoded string for non json-based schema."
  modifiers:
  - "abstract"
  syntax: "public abstract Object value()"
  desc: "Gets the value property: Json-encoded string for non json-based schema."
  returns:
    description: "the value value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of GlobalSchemaContract."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
