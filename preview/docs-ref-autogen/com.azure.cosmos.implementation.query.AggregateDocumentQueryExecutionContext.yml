### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext"
  id: "AggregateDocumentQueryExecutionContext"
  parent: "com.azure.cosmos.implementation.query"
  children:
  - "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.<T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.lang.String)"
  - "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.AggregateDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>)"
  - "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.drainAsync(int)"
  - "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.getComponent()"
  langs:
  - "java"
  name: "AggregateDocumentQueryExecutionContext<T>"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>"
  type: "Class"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public class AggregateDocumentQueryExecutionContext<T> implements IDocumentQueryExecutionComponent<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.<T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.lang.String)"
  id: "<T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.lang.String)"
  parent: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "<T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, Collection<AggregateOperator> aggregates, String continuationToken)"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.<T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, Collection<AggregateOperator> aggregates, String continuationToken)"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.<T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, Collection<AggregateOperator> aggregates, String continuationToken)"
  overload: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.createAsync*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public static Flux<IDocumentQueryExecutionComponent<T>> <T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, Collection<AggregateOperator> aggregates, String continuationToken)"
    parameters:
    - id: "createSourceComponentFunction"
      type: "java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>"
    - id: "aggregates"
      type: "java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>"
    - id: "continuationToken"
      type: "java.lang.String"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.AggregateDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>)"
  id: "AggregateDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>)"
  parent: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "AggregateDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, Collection<AggregateOperator> aggregateOperators)"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.AggregateDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, Collection<AggregateOperator> aggregateOperators)"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.AggregateDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, Collection<AggregateOperator> aggregateOperators)"
  overload: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.AggregateDocumentQueryExecutionContext*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public AggregateDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, Collection<AggregateOperator> aggregateOperators)"
    parameters:
    - id: "component"
      type: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>"
    - id: "aggregateOperators"
      type: "java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.drainAsync(int)"
  id: "drainAsync(int)"
  parent: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "drainAsync(int maxPageSize)"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)"
  overload: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.drainAsync*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public Flux<FeedResponse<T>> drainAsync(int maxPageSize)"
    parameters:
    - id: "maxPageSize"
      type: "int"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.getComponent()"
  id: "getComponent()"
  parent: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "getComponent()"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.getComponent()"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.getComponent()"
  overload: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.getComponent*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public IDocumentQueryExecutionComponent<T> getComponent()"
    return:
      type: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>"
references:
- uid: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>"
  spec.java:
  - uid: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
    name: "IDocumentQueryExecutionComponent"
    fullName: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.Collection<com.azure.cosmos.implementation.query.aggregation.AggregateOperator>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.query.aggregation.AggregateOperator"
    name: "AggregateOperator"
    fullName: "com.azure.cosmos.implementation.query.aggregation.AggregateOperator"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.AggregateDocumentQueryExecutionContext*"
  name: "AggregateDocumentQueryExecutionContext"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.AggregateDocumentQueryExecutionContext"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.AggregateDocumentQueryExecutionContext"
  package: "com.azure.cosmos.implementation.query"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.drainAsync*"
  name: "drainAsync"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.drainAsync"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.drainAsync"
  package: "com.azure.cosmos.implementation.query"
- uid: "java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
    name: "IDocumentQueryExecutionComponent"
    fullName: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
    name: "IDocumentQueryExecutionComponent"
    fullName: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.createAsync*"
  name: "<T>createAsync"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.<T>createAsync"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.<T>createAsync"
  package: "com.azure.cosmos.implementation.query"
- uid: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext.getComponent*"
  name: "getComponent"
  nameWithType: "AggregateDocumentQueryExecutionContext<T>.getComponent"
  fullName: "com.azure.cosmos.implementation.query.AggregateDocumentQueryExecutionContext<T>.getComponent"
  package: "com.azure.cosmos.implementation.query"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
  name: "IDocumentQueryExecutionComponent"
  nameWithType: "IDocumentQueryExecutionComponent"
  fullName: "com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "com.azure.cosmos.implementation.query.aggregation.AggregateOperator"
  name: "AggregateOperator"
  nameWithType: "AggregateOperator"
  fullName: "com.azure.cosmos.implementation.query.aggregation.AggregateOperator"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.models.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.models.FeedResponse"
- uid: "java.lang.String,reactor.core.publisher.Flux"
  name: "String,Flux"
  nameWithType: "String,Flux"
  fullName: "java.lang.String,reactor.core.publisher.Flux"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
