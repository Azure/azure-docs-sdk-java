### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference
  id: MapDifference
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.areEqual()
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesDiffering()
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesInCommon()
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnLeft()
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnRight()
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.MapDifference.hashCode()
  langs:
  - java
  name: MapDifference<K,V>
  nameWithType: MapDifference<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: An object representing the differences between two maps.
  syntax:
    content: public interface MapDifference<K,V>
    typeParameters:
    - id: K
    - id: V
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.areEqual()
  id: areEqual()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: areEqual()
  nameWithType: MapDifference<K,V>.areEqual()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.areEqual()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.areEqual*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns `true` if there are no differences between the two maps; that is, if the maps are equal.
  syntax:
    content: public abstract boolean areEqual()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesDiffering()
  id: entriesDiffering()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: entriesDiffering()
  nameWithType: MapDifference<K,V>.entriesDiffering()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesDiffering()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesDiffering*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map describing keys that appear in both maps, but with different values.
  syntax:
    content: public abstract Map<K,MapDifference.ValueDifference<V>> entriesDiffering()
    return:
      type: java.util.Map<K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference<V>>
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesInCommon()
  id: entriesInCommon()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: entriesInCommon()
  nameWithType: MapDifference<K,V>.entriesInCommon()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesInCommon()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesInCommon*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries that appear in both maps; that is, the intersection of the two maps.
  syntax:
    content: public abstract Map<K,V> entriesInCommon()
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnLeft()
  id: entriesOnlyOnLeft()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: entriesOnlyOnLeft()
  nameWithType: MapDifference<K,V>.entriesOnlyOnLeft()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesOnlyOnLeft()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnLeft*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries from the left map whose keys are not present in the right map.
  syntax:
    content: public abstract Map<K,V> entriesOnlyOnLeft()
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnRight()
  id: entriesOnlyOnRight()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: entriesOnlyOnRight()
  nameWithType: MapDifference<K,V>.entriesOnlyOnRight()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesOnlyOnRight()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnRight*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries from the right map whose keys are not present in the left map.
  syntax:
    content: public abstract Map<K,V> entriesOnlyOnRight()
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: equals(Object object)
  nameWithType: MapDifference<K,V>.equals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.equals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Compares the specified object with this instance for equality. Returns `true` if the given object is also a `MapDifference` and the values returned by the <xref uid="com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnLeft()" data-throw-if-not-resolved="false">#entriesOnlyOnLeft()</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnRight()" data-throw-if-not-resolved="false">#entriesOnlyOnRight()</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesInCommon()" data-throw-if-not-resolved="false">#entriesInCommon()</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesDiffering()" data-throw-if-not-resolved="false">#entriesDiffering()</xref> of the two instances are equal.
  syntax:
    content: public abstract boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MapDifference
  langs:
  - java
  name: hashCode()
  nameWithType: MapDifference<K,V>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.MapDifference.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the hash code for this instance. This is defined as the hash code of


    ```java

    Arrays.asList(entriesOnlyOnLeft(), entriesOnlyOnRight(),
         entriesInCommon(), entriesDiffering())
    ```
  syntax:
    content: public abstract int hashCode()
    return:
      type: int
references:
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.areEqual*
  name: areEqual
  nameWithType: MapDifference<K,V>.areEqual
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.areEqual
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<K,V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnLeft*
  name: entriesOnlyOnLeft
  nameWithType: MapDifference<K,V>.entriesOnlyOnLeft
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesOnlyOnLeft
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesOnlyOnRight*
  name: entriesOnlyOnRight
  nameWithType: MapDifference<K,V>.entriesOnlyOnRight
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesOnlyOnRight
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesInCommon*
  name: entriesInCommon
  nameWithType: MapDifference<K,V>.entriesInCommon
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesInCommon
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference<V>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
    name: ValueDifference
    fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.entriesDiffering*
  name: entriesDiffering
  nameWithType: MapDifference<K,V>.entriesDiffering
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.entriesDiffering
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.equals*
  name: equals
  nameWithType: MapDifference<K,V>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.hashCode*
  name: hashCode
  nameWithType: MapDifference<K,V>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  name: MapDifference.ValueDifference<V>
  nameWithType: MapDifference.ValueDifference<V>
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference<V>
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  name: K,MapDifference.ValueDifference
  nameWithType: K,MapDifference.ValueDifference
  fullName: K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
