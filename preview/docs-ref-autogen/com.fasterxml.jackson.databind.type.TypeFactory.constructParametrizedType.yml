### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType"
name: "constructParametrizedType"
nameWithType: "TypeFactory.constructParametrizedType"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType...)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, JavaType[] parameterTypes)"
  name: "constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, JavaType[] parameterTypes)"
  nameWithType: "TypeFactory.constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, JavaType[] parameterTypes)"
  parameters:
  - name: "parametrized"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "parametersFor"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "parameterTypes"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public JavaType constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, JavaType[] parameterTypes)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Class<?>...)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, Class<?>[] parameterClasses)"
  name: "constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, Class<?>[] parameterClasses)"
  nameWithType: "TypeFactory.constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, Class<?>[] parameterClasses)"
  parameters:
  - name: "parametrized"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "parametersFor"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "parameterClasses"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;[]"
  syntax: "public JavaType constructParametrizedType(Class<?> parametrized, Class<?> parametersFor, Class<?>[] parameterClasses)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
