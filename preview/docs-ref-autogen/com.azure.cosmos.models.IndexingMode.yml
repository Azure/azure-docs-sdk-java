### YamlMime:JavaEnum
uid: "com.azure.cosmos.models.IndexingMode"
fullName: "com.azure.cosmos.models.IndexingMode"
name: "IndexingMode"
nameWithType: "IndexingMode"
summary: "Specifies the supported indexing modes in the Azure Cosmos DB database service."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum IndexingMode extends Enum<IndexingMode>"
fields:
- uid: "com.azure.cosmos.models.IndexingMode.CONSISTENT"
  fullName: "com.azure.cosmos.models.IndexingMode.CONSISTENT"
  name: "CONSISTENT"
  nameWithType: "IndexingMode.CONSISTENT"
  summary: "Index is updated synchronously with a create or update operation.\n\nWith consistent indexing, query behavior is the same as the default consistency level for the container. The index is always kept up to date with the data."
- uid: "com.azure.cosmos.models.IndexingMode.LAZY"
  fullName: "com.azure.cosmos.models.IndexingMode.LAZY"
  name: "LAZY"
  nameWithType: "IndexingMode.LAZY"
  summary: "Index is updated asynchronously with respect to a create or update operation.\n\nWith lazy indexing, queries are eventually consistent. The index is updated when the container is idle."
- uid: "com.azure.cosmos.models.IndexingMode.NONE"
  fullName: "com.azure.cosmos.models.IndexingMode.NONE"
  name: "NONE"
  nameWithType: "IndexingMode.NONE"
  summary: "No index is provided.\n\nSetting IndexingMode to \"NONE\" drops the index. Use this if you don't want to maintain the index for a item container, to save the storage cost or improve the write throughput. Your queries will degenerate to scans of the entire container."
methods:
- uid: "com.azure.cosmos.models.IndexingMode.toString()"
  fullName: "com.azure.cosmos.models.IndexingMode.toString()"
  name: "toString()"
  nameWithType: "IndexingMode.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.IndexingMode.valueOf(java.lang.String)"
  fullName: "com.azure.cosmos.models.IndexingMode.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "IndexingMode.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IndexingMode valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.IndexingMode?alt=com.azure.cosmos.models.IndexingMode&text=IndexingMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.IndexingMode.values()"
  fullName: "com.azure.cosmos.models.IndexingMode.values()"
  name: "values()"
  nameWithType: "IndexingMode.values()"
  syntax: "public static IndexingMode[] values()"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.IndexingMode?alt=com.azure.cosmos.models.IndexingMode&text=IndexingMode\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
