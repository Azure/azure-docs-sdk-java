### YamlMime:JavaType
uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes"
fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes"
name: "AzureBasicFileAttributes"
nameWithType: "AzureBasicFileAttributes"
summary: "Provides support for basic file attributes."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureBasicFileAttributes implements BasicFileAttributes"
methods:
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.creationTime()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.creationTime()"
  name: "creationTime()"
  nameWithType: "AzureBasicFileAttributes.creationTime()"
  summary: "Returns the creation time."
  syntax: "public FileTime creationTime()"
  desc: "Returns the creation time. The creation time is the time that the file was created. Returns null if this is a virtual directory."
  returns:
    description: "The creation time or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.fileKey()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.fileKey()"
  name: "fileKey()"
  nameWithType: "AzureBasicFileAttributes.fileKey()"
  summary: "Returns the url of the resource."
  syntax: "public Object fileKey()"
  desc: "Returns the url of the resource."
  returns:
    description: "The file key, which is the url."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isDirectory()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isDirectory()"
  name: "isDirectory()"
  nameWithType: "AzureBasicFileAttributes.isDirectory()"
  summary: "Tells whether the file is a directory."
  syntax: "public boolean isDirectory()"
  desc: "Tells whether the file is a directory.\n\nWill only return true if the directory is a concrete directory. See <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute<?>...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual and concrete directories."
  returns:
    description: "whether the file is a directory"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isOther()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isOther()"
  name: "isOther()"
  nameWithType: "AzureBasicFileAttributes.isOther()"
  summary: "Tells whether the file is something other than a regular file, directory, or symbolic link."
  syntax: "public boolean isOther()"
  desc: "Tells whether the file is something other than a regular file, directory, or symbolic link."
  returns:
    description: "false. No other object types are supported."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isRegularFile()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isRegularFile()"
  name: "isRegularFile()"
  nameWithType: "AzureBasicFileAttributes.isRegularFile()"
  summary: "Tells whether the file is a regular file with opaque content."
  syntax: "public boolean isRegularFile()"
  desc: "Tells whether the file is a regular file with opaque content."
  returns:
    description: "whether the file is a regular file."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isSymbolicLink()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isSymbolicLink()"
  name: "isSymbolicLink()"
  nameWithType: "AzureBasicFileAttributes.isSymbolicLink()"
  summary: "Tells whether the file is a symbolic link."
  syntax: "public boolean isSymbolicLink()"
  desc: "Tells whether the file is a symbolic link."
  returns:
    description: "false. Symbolic links are not supported."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isVirtualDirectory()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.isVirtualDirectory()"
  name: "isVirtualDirectory()"
  nameWithType: "AzureBasicFileAttributes.isVirtualDirectory()"
  summary: "Tells whether the file is a virtual directory."
  syntax: "public boolean isVirtualDirectory()"
  desc: "Tells whether the file is a virtual directory.\n\nSee <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute<?>...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual and concrete directories."
  returns:
    description: "whether the file is a virtual directory"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.lastAccessTime()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.lastAccessTime()"
  name: "lastAccessTime()"
  nameWithType: "AzureBasicFileAttributes.lastAccessTime()"
  summary: "Returns the time of last modification or null if this is a virtual directory"
  syntax: "public FileTime lastAccessTime()"
  desc: "Returns the time of last modification or null if this is a virtual directory\n\nLast access time is not supported by the blob service. In this case, it is typical for implementations to return the <xref uid=\"com.azure.storage.blob.nio.AzureBasicFileAttributes.lastModifiedTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#lastModifiedTime()\"></xref>."
  returns:
    description: "the time of last modification or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.lastModifiedTime()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "AzureBasicFileAttributes.lastModifiedTime()"
  summary: "Returns the time of last modification or null if this is a virtual directory."
  syntax: "public FileTime lastModifiedTime()"
  desc: "Returns the time of last modification or null if this is a virtual directory."
  returns:
    description: "the time of last modification or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBasicFileAttributes.size()"
  fullName: "com.azure.storage.blob.nio.AzureBasicFileAttributes.size()"
  name: "size()"
  nameWithType: "AzureBasicFileAttributes.size()"
  summary: "Returns the size of the file (in bytes)."
  syntax: "public long size()"
  desc: "Returns the size of the file (in bytes)."
  returns:
    description: "the size of the file"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Provides support for basic file attributes.\n\nThe properties available on this type are a strict subset of <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBlobFileAttributes\"></xref>, and the two types have the same network behavior. Therefore, while this type is offered for compliance with the NIO spec, <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBlobFileAttributes\"></xref> is generally preferred.\n\nSome attributes are not supported. Refer to the javadocs on each method for more information.\n\nIf the target file is a virtual directory, most attributes will be set to null."
implements:
- "<xref href=\"java.nio.file.attribute.BasicFileAttributes?alt=java.nio.file.attribute.BasicFileAttributes&text=BasicFileAttributes\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.19
