### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation*"
fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation"
name: "withEnableServerCertificateValidation"
nameWithType: "RestServiceLinkedService.withEnableServerCertificateValidation"
members:
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  name: "withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  nameWithType: "RestServiceLinkedService.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  summary: "Set the enableServerCertificateValidation property: Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the enableServerCertificateValidation value to set."
    name: "enableServerCertificateValidation"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
