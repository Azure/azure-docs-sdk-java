### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
  id: DefaultContentLengthStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl
  children:
  - org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy()
  - org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.INSTANCE
  - org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength(org.apache.hc.core5.http.HttpMessage)
  langs:
  - java
  name: DefaultContentLengthStrategy
  nameWithType: DefaultContentLengthStrategy
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
  type: Class
  package: org.apache.hc.core5.http.impl
  summary: >-
    The default implementation of the content length strategy. This class will throw <xref uid="org.apache.hc.core5.http.ProtocolException" data-throw-if-not-resolved="false">ProtocolException</xref> if it encounters an unsupported transfer encoding, multiple `Content-Length` header values or a malformed `Content-Length` header value.


    This class recognizes "chunked" transfer-coding only.
  syntax:
    content: public class DefaultContentLengthStrategy implements ContentLengthStrategy
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.ContentLengthStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy()
  id: DefaultContentLengthStrategy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
  langs:
  - java
  name: DefaultContentLengthStrategy()
  nameWithType: DefaultContentLengthStrategy.DefaultContentLengthStrategy()
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy()
  overload: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy*
  type: Constructor
  package: org.apache.hc.core5.http.impl
  summary: Creates `DefaultContentLengthStrategy` instance. <xref uid="org.apache.hc.core5.http.ContentLengthStrategy.UNDEFINED" data-throw-if-not-resolved="false">ContentLengthStrategy#UNDEFINED</xref> is used per default when content length is not explicitly specified in the message.
  syntax:
    content: public DefaultContentLengthStrategy()
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.INSTANCE
  id: INSTANCE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
  langs:
  - java
  name: INSTANCE
  nameWithType: DefaultContentLengthStrategy.INSTANCE
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.INSTANCE
  type: Field
  package: org.apache.hc.core5.http.impl
  syntax:
    content: public static final DefaultContentLengthStrategy INSTANCE
    return:
      type: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength(org.apache.hc.core5.http.HttpMessage)
  id: determineLength(org.apache.hc.core5.http.HttpMessage)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy
  langs:
  - java
  name: determineLength(HttpMessage message)
  nameWithType: DefaultContentLengthStrategy.determineLength(HttpMessage message)
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength(HttpMessage message)
  overload: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength*
  type: Method
  package: org.apache.hc.core5.http.impl
  summary: Returns length of the given message in bytes. The returned value must be a non-negative number, <xref uid="org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.CHUNKED" data-throw-if-not-resolved="false">#CHUNKED</xref> if the message is chunk coded, or <xref uid="org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.UNDEFINED" data-throw-if-not-resolved="false">#UNDEFINED</xref> if the message is not explicitly delineated.
  syntax:
    content: public long determineLength(HttpMessage message)
    parameters:
    - id: message
      type: org.apache.hc.core5.http.HttpMessage
    return:
      type: long
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy*
  name: DefaultContentLengthStrategy
  nameWithType: DefaultContentLengthStrategy.DefaultContentLengthStrategy
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.DefaultContentLengthStrategy
  package: org.apache.hc.core5.http.impl
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.HttpMessage
  name: HttpMessage
  nameWithType: HttpMessage
  fullName: org.apache.hc.core5.http.HttpMessage
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength*
  name: determineLength
  nameWithType: DefaultContentLengthStrategy.determineLength
  fullName: org.apache.hc.core5.http.impl.DefaultContentLengthStrategy.determineLength
  package: org.apache.hc.core5.http.impl
- uid: org.apache.hc.core5.http.ContentLengthStrategy
  name: ContentLengthStrategy
  nameWithType: ContentLengthStrategy
  fullName: org.apache.hc.core5.http.ContentLengthStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
