### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer*"
fullName: "com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer"
name: "modifySerializer"
nameWithType: "BeanSerializerModifier.modifySerializer"
members:
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)"
  name: "modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)"
  nameWithType: "BeanSerializerModifier.modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.databind.ser.BeanSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BeanSerializerFactory\"></xref> after constructing default bean serializer instance with properties collected and ordered earlier. Implementations can modify or replace given serializer and return serializer to use. Note that although initial serializer being passed is of type <xref uid=\"com.fasterxml.jackson.databind.ser.BeanSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BeanSerializer\"></xref>, modifiers may return serializers of other types; and this is why implementations must check for type before casting.\n\nNOTE: since 2.2, gets called for serializer of those non-POJO types that do not go through any of more specific `modifyXxxSerializer` methods; mostly for JDK types like <xref uid=\"java.util.Iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Iterator\"></xref> and such."
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializationConfig?alt=com.fasterxml.jackson.databind.SerializationConfig&text=SerializationConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "beanDesc"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanDescription?alt=com.fasterxml.jackson.databind.BeanDescription&text=BeanDescription\" data-throw-if-not-resolved=\"False\" />"
  - name: "serializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
