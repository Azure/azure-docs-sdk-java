### YamlMime:JavaType
uid: "com.azure.compute.batch.models.VirtualMachineConfiguration"
fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration"
name: "VirtualMachineConfiguration"
nameWithType: "VirtualMachineConfiguration"
summary: "The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VirtualMachineConfiguration**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration(com.azure.compute.batch.models.ImageReference,java.lang.String)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration(ImageReference imageReference, String nodeAgentSkuId)"
  name: "VirtualMachineConfiguration(ImageReference imageReference, String nodeAgentSkuId)"
  nameWithType: "VirtualMachineConfiguration.VirtualMachineConfiguration(ImageReference imageReference, String nodeAgentSkuId)"
  summary: "Creates an instance of Virtual<wbr>Machine<wbr>Configuration class."
  parameters:
  - description: "the imageReference value to set."
    name: "imageReference"
    type: "<xref href=\"com.azure.compute.batch.models.ImageReference?alt=com.azure.compute.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
  - description: "the nodeAgentSkuId value to set."
    name: "nodeAgentSkuId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VirtualMachineConfiguration(ImageReference imageReference, String nodeAgentSkuId)"
  desc: "Creates an instance of VirtualMachineConfiguration class."
methods:
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "VirtualMachineConfiguration.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Virtual<wbr>Machine<wbr>Configuration from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static VirtualMachineConfiguration fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of VirtualMachineConfiguration from the JsonReader."
  returns:
    description: "An instance of VirtualMachineConfiguration if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getContainerConfiguration()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getContainerConfiguration()"
  name: "getContainerConfiguration()"
  nameWithType: "VirtualMachineConfiguration.getContainerConfiguration()"
  summary: "Get the container<wbr>Configuration property: The container configuration for the Pool."
  syntax: "public ContainerConfiguration getContainerConfiguration()"
  desc: "Get the containerConfiguration property: The container configuration for the Pool. If specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
  returns:
    description: "the containerConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.ContainerConfiguration?alt=com.azure.compute.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getDataDisks()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getDataDisks()"
  name: "getDataDisks()"
  nameWithType: "VirtualMachineConfiguration.getDataDisks()"
  summary: "Get the data<wbr>Disks property: The configuration for data disks attached to the Compute Nodes in the Pool."
  syntax: "public List<DataDisk> getDataDisks()"
  desc: "Get the dataDisks property: The configuration for data disks attached to the Compute Nodes in the Pool. This property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/azure/virtual-machines/linux/classic/attach-disk\\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/azure/virtual-machines/windows/attach-disk-ps\\#add-an-empty-data-disk-to-a-virtual-machine."
  returns:
    description: "the dataDisks value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getDiskEncryptionConfiguration()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getDiskEncryptionConfiguration()"
  name: "getDiskEncryptionConfiguration()"
  nameWithType: "VirtualMachineConfiguration.getDiskEncryptionConfiguration()"
  summary: "Get the disk<wbr>Encryption<wbr>Configuration property: The disk encryption configuration for the pool."
  syntax: "public DiskEncryptionConfiguration getDiskEncryptionConfiguration()"
  desc: "Get the diskEncryptionConfiguration property: The disk encryption configuration for the pool. If specified, encryption is performed on each node in the pool during node provisioning."
  returns:
    description: "the diskEncryptionConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.DiskEncryptionConfiguration?alt=com.azure.compute.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getExtensions()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getExtensions()"
  name: "getExtensions()"
  nameWithType: "VirtualMachineConfiguration.getExtensions()"
  summary: "Get the extensions property: The virtual machine extension for the pool."
  syntax: "public List<VMExtension> getExtensions()"
  desc: "Get the extensions property: The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node."
  returns:
    description: "the extensions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.VMExtension?alt=com.azure.compute.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getImageReference()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getImageReference()"
  name: "getImageReference()"
  nameWithType: "VirtualMachineConfiguration.getImageReference()"
  summary: "Get the image<wbr>Reference property: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use."
  syntax: "public ImageReference getImageReference()"
  desc: "Get the imageReference property: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use."
  returns:
    description: "the imageReference value."
    type: "<xref href=\"com.azure.compute.batch.models.ImageReference?alt=com.azure.compute.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getLicenseType()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getLicenseType()"
  name: "getLicenseType()"
  nameWithType: "VirtualMachineConfiguration.getLicenseType()"
  summary: "Get the license<wbr>Type property: This only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed."
  syntax: "public String getLicenseType()"
  desc: "Get the licenseType property: This only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  returns:
    description: "the licenseType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getNodeAgentSkuId()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getNodeAgentSkuId()"
  name: "getNodeAgentSkuId()"
  nameWithType: "VirtualMachineConfiguration.getNodeAgentSkuId()"
  summary: "Get the node<wbr>Agent<wbr>Sku<wbr>Id property: The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool."
  syntax: "public String getNodeAgentSkuId()"
  desc: "Get the nodeAgentSkuId property: The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool. The Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation."
  returns:
    description: "the nodeAgentSkuId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getNodePlacementConfiguration()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getNodePlacementConfiguration()"
  name: "getNodePlacementConfiguration()"
  nameWithType: "VirtualMachineConfiguration.getNodePlacementConfiguration()"
  summary: "Get the node<wbr>Placement<wbr>Configuration property: The node placement configuration for the pool."
  syntax: "public BatchNodePlacementConfiguration getNodePlacementConfiguration()"
  desc: "Get the nodePlacementConfiguration property: The node placement configuration for the pool. This configuration will specify rules on how nodes in the pool will be physically allocated."
  returns:
    description: "the nodePlacementConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchNodePlacementConfiguration?alt=com.azure.compute.batch.models.BatchNodePlacementConfiguration&text=BatchNodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getOsDisk()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getOsDisk()"
  name: "getOsDisk()"
  nameWithType: "VirtualMachineConfiguration.getOsDisk()"
  summary: "Get the os<wbr>Disk property: Settings for the operating system disk of the Virtual Machine."
  syntax: "public OSDisk getOsDisk()"
  desc: "Get the osDisk property: Settings for the operating system disk of the Virtual Machine."
  returns:
    description: "the osDisk value."
    type: "<xref href=\"com.azure.compute.batch.models.OSDisk?alt=com.azure.compute.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getSecurityProfile()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getSecurityProfile()"
  name: "getSecurityProfile()"
  nameWithType: "VirtualMachineConfiguration.getSecurityProfile()"
  summary: "Get the security<wbr>Profile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  syntax: "public SecurityProfile getSecurityProfile()"
  desc: "Get the securityProfile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  returns:
    description: "the securityProfile value."
    type: "<xref href=\"com.azure.compute.batch.models.SecurityProfile?alt=com.azure.compute.batch.models.SecurityProfile&text=SecurityProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getServiceArtifactReference()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getServiceArtifactReference()"
  name: "getServiceArtifactReference()"
  nameWithType: "VirtualMachineConfiguration.getServiceArtifactReference()"
  summary: "Get the service<wbr>Artifact<wbr>Reference property: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
  syntax: "public ServiceArtifactReference getServiceArtifactReference()"
  desc: "Get the serviceArtifactReference property: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. The service artifact reference id in the form of /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroup\\}/providers/Microsoft.Compute/galleries/\\{galleryName\\}/serviceArtifacts/\\{serviceArtifactName\\}/vmArtifactsProfiles/\\{vmArtifactsProfilesName\\}."
  returns:
    description: "the serviceArtifactReference value."
    type: "<xref href=\"com.azure.compute.batch.models.ServiceArtifactReference?alt=com.azure.compute.batch.models.ServiceArtifactReference&text=ServiceArtifactReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.getWindowsConfiguration()"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.getWindowsConfiguration()"
  name: "getWindowsConfiguration()"
  nameWithType: "VirtualMachineConfiguration.getWindowsConfiguration()"
  summary: "Get the windows<wbr>Configuration property: Windows operating system settings on the virtual machine."
  syntax: "public WindowsConfiguration getWindowsConfiguration()"
  desc: "Get the windowsConfiguration property: Windows operating system settings on the virtual machine. This property must not be specified if the imageReference property specifies a Linux OS Image."
  returns:
    description: "the windowsConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.WindowsConfiguration?alt=com.azure.compute.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setContainerConfiguration(com.azure.compute.batch.models.ContainerConfiguration)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setContainerConfiguration(ContainerConfiguration containerConfiguration)"
  name: "setContainerConfiguration(ContainerConfiguration containerConfiguration)"
  nameWithType: "VirtualMachineConfiguration.setContainerConfiguration(ContainerConfiguration containerConfiguration)"
  summary: "Set the container<wbr>Configuration property: The container configuration for the Pool."
  parameters:
  - description: "the containerConfiguration value to set."
    name: "containerConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.ContainerConfiguration?alt=com.azure.compute.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setContainerConfiguration(ContainerConfiguration containerConfiguration)"
  desc: "Set the containerConfiguration property: The container configuration for the Pool. If specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setDataDisks(java.util.List<com.azure.compute.batch.models.DataDisk>)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setDataDisks(List<DataDisk> dataDisks)"
  name: "setDataDisks(List<DataDisk> dataDisks)"
  nameWithType: "VirtualMachineConfiguration.setDataDisks(List<DataDisk> dataDisks)"
  summary: "Set the data<wbr>Disks property: The configuration for data disks attached to the Compute Nodes in the Pool."
  parameters:
  - description: "the dataDisks value to set."
    name: "dataDisks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration setDataDisks(List<DataDisk> dataDisks)"
  desc: "Set the dataDisks property: The configuration for data disks attached to the Compute Nodes in the Pool. This property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/azure/virtual-machines/linux/classic/attach-disk\\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/azure/virtual-machines/windows/attach-disk-ps\\#add-an-empty-data-disk-to-a-virtual-machine."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setDiskEncryptionConfiguration(com.azure.compute.batch.models.DiskEncryptionConfiguration)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  name: "setDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  nameWithType: "VirtualMachineConfiguration.setDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  summary: "Set the disk<wbr>Encryption<wbr>Configuration property: The disk encryption configuration for the pool."
  parameters:
  - description: "the diskEncryptionConfiguration value to set."
    name: "diskEncryptionConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.DiskEncryptionConfiguration?alt=com.azure.compute.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  desc: "Set the diskEncryptionConfiguration property: The disk encryption configuration for the pool. If specified, encryption is performed on each node in the pool during node provisioning."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setExtensions(java.util.List<com.azure.compute.batch.models.VMExtension>)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setExtensions(List<VMExtension> extensions)"
  name: "setExtensions(List<VMExtension> extensions)"
  nameWithType: "VirtualMachineConfiguration.setExtensions(List<VMExtension> extensions)"
  summary: "Set the extensions property: The virtual machine extension for the pool."
  parameters:
  - description: "the extensions value to set."
    name: "extensions"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.VMExtension?alt=com.azure.compute.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration setExtensions(List<VMExtension> extensions)"
  desc: "Set the extensions property: The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setLicenseType(java.lang.String)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setLicenseType(String licenseType)"
  name: "setLicenseType(String licenseType)"
  nameWithType: "VirtualMachineConfiguration.setLicenseType(String licenseType)"
  summary: "Set the license<wbr>Type property: This only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VirtualMachineConfiguration setLicenseType(String licenseType)"
  desc: "Set the licenseType property: This only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setNodePlacementConfiguration(com.azure.compute.batch.models.BatchNodePlacementConfiguration)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setNodePlacementConfiguration(BatchNodePlacementConfiguration nodePlacementConfiguration)"
  name: "setNodePlacementConfiguration(BatchNodePlacementConfiguration nodePlacementConfiguration)"
  nameWithType: "VirtualMachineConfiguration.setNodePlacementConfiguration(BatchNodePlacementConfiguration nodePlacementConfiguration)"
  summary: "Set the node<wbr>Placement<wbr>Configuration property: The node placement configuration for the pool."
  parameters:
  - description: "the nodePlacementConfiguration value to set."
    name: "nodePlacementConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.BatchNodePlacementConfiguration?alt=com.azure.compute.batch.models.BatchNodePlacementConfiguration&text=BatchNodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setNodePlacementConfiguration(BatchNodePlacementConfiguration nodePlacementConfiguration)"
  desc: "Set the nodePlacementConfiguration property: The node placement configuration for the pool. This configuration will specify rules on how nodes in the pool will be physically allocated."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setOsDisk(com.azure.compute.batch.models.OSDisk)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setOsDisk(OSDisk osDisk)"
  name: "setOsDisk(OSDisk osDisk)"
  nameWithType: "VirtualMachineConfiguration.setOsDisk(OSDisk osDisk)"
  summary: "Set the os<wbr>Disk property: Settings for the operating system disk of the Virtual Machine."
  parameters:
  - description: "the osDisk value to set."
    name: "osDisk"
    type: "<xref href=\"com.azure.compute.batch.models.OSDisk?alt=com.azure.compute.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setOsDisk(OSDisk osDisk)"
  desc: "Set the osDisk property: Settings for the operating system disk of the Virtual Machine."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setSecurityProfile(com.azure.compute.batch.models.SecurityProfile)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setSecurityProfile(SecurityProfile securityProfile)"
  name: "setSecurityProfile(SecurityProfile securityProfile)"
  nameWithType: "VirtualMachineConfiguration.setSecurityProfile(SecurityProfile securityProfile)"
  summary: "Set the security<wbr>Profile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  parameters:
  - description: "the securityProfile value to set."
    name: "securityProfile"
    type: "<xref href=\"com.azure.compute.batch.models.SecurityProfile?alt=com.azure.compute.batch.models.SecurityProfile&text=SecurityProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setSecurityProfile(SecurityProfile securityProfile)"
  desc: "Set the securityProfile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setServiceArtifactReference(com.azure.compute.batch.models.ServiceArtifactReference)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  name: "setServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  nameWithType: "VirtualMachineConfiguration.setServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  summary: "Set the service<wbr>Artifact<wbr>Reference property: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
  parameters:
  - description: "the serviceArtifactReference value to set."
    name: "serviceArtifactReference"
    type: "<xref href=\"com.azure.compute.batch.models.ServiceArtifactReference?alt=com.azure.compute.batch.models.ServiceArtifactReference&text=ServiceArtifactReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  desc: "Set the serviceArtifactReference property: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. The service artifact reference id in the form of /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroup\\}/providers/Microsoft.Compute/galleries/\\{galleryName\\}/serviceArtifacts/\\{serviceArtifactName\\}/vmArtifactsProfiles/\\{vmArtifactsProfilesName\\}."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.setWindowsConfiguration(com.azure.compute.batch.models.WindowsConfiguration)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.setWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  name: "setWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  nameWithType: "VirtualMachineConfiguration.setWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  summary: "Set the windows<wbr>Configuration property: Windows operating system settings on the virtual machine."
  parameters:
  - description: "the windowsConfiguration value to set."
    name: "windowsConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.WindowsConfiguration?alt=com.azure.compute.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration setWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  desc: "Set the windowsConfiguration property: Windows operating system settings on the virtual machine. This property must not be specified if the imageReference property specifies a Linux OS Image."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.VirtualMachineConfiguration.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.VirtualMachineConfiguration.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "VirtualMachineConfiguration.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.VirtualMachineConfiguration?alt=com.azure.compute.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
