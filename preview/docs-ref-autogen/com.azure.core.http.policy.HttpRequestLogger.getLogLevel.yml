### YamlMime:JavaMember
uid: "com.azure.core.http.policy.HttpRequestLogger.getLogLevel*"
fullName: "com.azure.core.http.policy.HttpRequestLogger.getLogLevel"
name: "getLogLevel"
nameWithType: "HttpRequestLogger.getLogLevel"
members:
- uid: "com.azure.core.http.policy.HttpRequestLogger.getLogLevel(com.azure.core.http.policy.HttpRequestLoggingContext)"
  fullName: "com.azure.core.http.policy.HttpRequestLogger.getLogLevel(HttpRequestLoggingContext loggingOptions)"
  name: "getLogLevel(HttpRequestLoggingContext loggingOptions)"
  nameWithType: "HttpRequestLogger.getLogLevel(HttpRequestLoggingContext loggingOptions)"
  summary: "Gets the <xref uid=\"com.azure.core.util.logging.LogLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel\"></xref> used to log the HTTP request.\n\nBy default this will return <xref uid=\"com.azure.core.util.logging.LogLevel.INFORMATIONAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#INFORMATIONAL\"></xref>."
  parameters:
  - description: "The information available during request logging."
    name: "loggingOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpRequestLoggingContext?alt=com.azure.core.http.policy.HttpRequestLoggingContext&text=HttpRequestLoggingContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default LogLevel getLogLevel(HttpRequestLoggingContext loggingOptions)"
  returns:
    description: "The <xref uid=\"com.azure.core.util.logging.LogLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel\"></xref> used to log the HTTP request."
    type: "<xref href=\"com.azure.core.util.logging.LogLevel?alt=com.azure.core.util.logging.LogLevel&text=LogLevel\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.22.0-beta.1
