### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexAsyncClient.getAliasWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexAsyncClient.getAliasWithResponse"
name: "getAliasWithResponse"
nameWithType: "SearchIndexAsyncClient.getAliasWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexAsyncClient.getAliasWithResponse(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.SearchIndexAsyncClient.getAliasWithResponse(String aliasName)"
  name: "getAliasWithResponse(String aliasName)"
  nameWithType: "SearchIndexAsyncClient.getAliasWithResponse(String aliasName)"
  summary: "Gets the Azure Cognitive Search alias.\n\n**Code Sample**\n\nGet the search alias named \"my-alias\".\n\n```java\nsearchIndexAsyncClient.getAliasWithResponse(\"my-alias\")\n     .subscribe(response ->\n         System.out.printf(\"Response status code %d. Retrieved alias '%s' that aliases index '%s'.\",\n             response.getStatusCode(), response.getValue().getName(), response.getValue().getIndexes().get(0)));\n```"
  parameters:
  - description: "name of the alias to get."
    name: "aliasName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SearchAlias>> getAliasWithResponse(String aliasName)"
  returns:
    description: "the retrieved alias."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchAlias?alt=com.azure.search.documents.indexes.models.SearchAlias&text=SearchAlias\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.5.0-beta.7
