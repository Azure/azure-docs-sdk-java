### YamlMime:JavaType
uid: "com.azure.ai.openai.assistants.models.Assistant"
fullName: "com.azure.ai.openai.assistants.models.Assistant"
name: "Assistant"
nameWithType: "Assistant"
summary: "Represents an assistant that can call the model and use tools."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Assistant**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.ai.openai.assistants.models.Assistant.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Assistant.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Assistant from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Assistant fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Assistant from the JsonReader."
  returns:
    description: "An instance of Assistant if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getCreatedAt()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getCreatedAt()"
  name: "getCreatedAt()"
  nameWithType: "Assistant.getCreatedAt()"
  summary: "Get the created<wbr>At property: The Unix timestamp, in seconds, representing when this object was created."
  syntax: "public OffsetDateTime getCreatedAt()"
  desc: "Get the createdAt property: The Unix timestamp, in seconds, representing when this object was created."
  returns:
    description: "the createdAt value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getDescription()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getDescription()"
  name: "getDescription()"
  nameWithType: "Assistant.getDescription()"
  summary: "Get the description property: The description of the assistant."
  syntax: "public String getDescription()"
  desc: "Get the description property: The description of the assistant."
  returns:
    description: "the description value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getId()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getId()"
  name: "getId()"
  nameWithType: "Assistant.getId()"
  summary: "Get the id property: The identifier, which can be referenced in API endpoints."
  syntax: "public String getId()"
  desc: "Get the id property: The identifier, which can be referenced in API endpoints."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getInstructions()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getInstructions()"
  name: "getInstructions()"
  nameWithType: "Assistant.getInstructions()"
  summary: "Get the instructions property: The system instructions for the assistant to use."
  syntax: "public String getInstructions()"
  desc: "Get the instructions property: The system instructions for the assistant to use."
  returns:
    description: "the instructions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getMetadata()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getMetadata()"
  name: "getMetadata()"
  nameWithType: "Assistant.getMetadata()"
  summary: "Get the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format."
  syntax: "public Map<String,String> getMetadata()"
  desc: "Get the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length."
  returns:
    description: "the metadata value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getModel()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getModel()"
  name: "getModel()"
  nameWithType: "Assistant.getModel()"
  summary: "Get the model property: The ID of the model to use."
  syntax: "public String getModel()"
  desc: "Get the model property: The ID of the model to use."
  returns:
    description: "the model value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getName()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getName()"
  name: "getName()"
  nameWithType: "Assistant.getName()"
  summary: "Get the name property: The name of the assistant."
  syntax: "public String getName()"
  desc: "Get the name property: The name of the assistant."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getObject()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getObject()"
  name: "getObject()"
  nameWithType: "Assistant.getObject()"
  summary: "Get the object property: The object type, which is always assistant."
  syntax: "public String getObject()"
  desc: "Get the object property: The object type, which is always assistant."
  returns:
    description: "the object value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getResponseFormat()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getResponseFormat()"
  name: "getResponseFormat()"
  nameWithType: "Assistant.getResponseFormat()"
  summary: "Get the response<wbr>Format property: The response format of the tool calls used by this assistant."
  syntax: "public AssistantsApiResponseFormatOption getResponseFormat()"
  desc: "Get the responseFormat property: The response format of the tool calls used by this assistant."
  returns:
    description: "the responseFormat value."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantsApiResponseFormatOption?alt=com.azure.ai.openai.assistants.models.AssistantsApiResponseFormatOption&text=AssistantsApiResponseFormatOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getTemperature()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getTemperature()"
  name: "getTemperature()"
  nameWithType: "Assistant.getTemperature()"
  summary: "Get the temperature property: What sampling temperature to use, between 0 and 2."
  syntax: "public Double getTemperature()"
  desc: "Get the temperature property: What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."
  returns:
    description: "the temperature value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getToolResources()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getToolResources()"
  name: "getToolResources()"
  nameWithType: "Assistant.getToolResources()"
  summary: "Get the tool<wbr>Resources property: A set of resources that are used by the assistant's tools."
  syntax: "public ToolResources getToolResources()"
  desc: "Get the toolResources property: A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the \\`code\\_interpreter\\` tool requires a list of file IDs, while the \\`file\\_search\\` tool requires a list of vector store IDs."
  returns:
    description: "the toolResources value."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ToolResources?alt=com.azure.ai.openai.assistants.models.ToolResources&text=ToolResources\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getTools()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getTools()"
  name: "getTools()"
  nameWithType: "Assistant.getTools()"
  summary: "Get the tools property: The collection of tools enabled for the assistant."
  syntax: "public List<ToolDefinition> getTools()"
  desc: "Get the tools property: The collection of tools enabled for the assistant."
  returns:
    description: "the tools value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.assistants.models.ToolDefinition?alt=com.azure.ai.openai.assistants.models.ToolDefinition&text=ToolDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.models.Assistant.getTopP()"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.getTopP()"
  name: "getTopP()"
  nameWithType: "Assistant.getTopP()"
  summary: "Get the topP property: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top\\_p probability mass."
  syntax: "public Double getTopP()"
  desc: "Get the topP property: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top\\_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both."
  returns:
    description: "the topP value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
- uid: "com.azure.ai.openai.assistants.models.Assistant.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.ai.openai.assistants.models.Assistant.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Assistant.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents an assistant that can call the model and use tools."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.ai.openai.assistants.models"
artifact: com.azure:azure-ai-openai-assistants:1.0.0-beta.3
