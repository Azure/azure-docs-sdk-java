### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  id: MapJoiner
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.util.Map<?,?>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.util.Map<?,?>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.util.Map<?,?>)
  - com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull(java.lang.String)
  langs:
  - java
  name: Joiner.MapJoiner
  nameWithType: Joiner.MapJoiner
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  type: Class
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    An object that joins map entries in the same manner as `Joiner` joins iterables and arrays. Like `Joiner`, it is thread-safe and immutable.


    In addition to operating on `Map` instances, `MapJoiner` can operate on `Multimap` entries in two distinct modes:

     *  To output a separate entry for each key-value pair, pass `multimap.entries()` to a `MapJoiner` method that accepts entries as input, and receive output of the form `key1=A&key1=B&key2=C`.
     *  To output a single entry for each key, pass `multimap.asMap()` to a `MapJoiner` method that accepts a map as input, and receive output of the form `key1=[A, B]&key2=C`.
  syntax:
    content: public static final class Joiner.MapJoiner
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  id: <A>appendTo(A,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: <A>appendTo(A appendable, Iterable<? extends Map.Entry<?,?>> entries)
  nameWithType: Joiner.MapJoiner.<A>appendTo(A appendable, Iterable<? extends Map.Entry<?,?>> entries)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A appendable, Iterable<? extends Map.Entry<?,?>> entries)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry in `entries`, using the previously configured separator and key-value separator, to `appendable`.
  syntax:
    content: public A <A>appendTo(A appendable, Iterable<? extends Map.Entry<?,?>> entries)
    parameters:
    - id: appendable
      type: A
    - id: entries
      type: java.lang.Iterable<? extends java.util.Map.Entry<?,?>>
    return:
      type: A
  exceptions:
  - type: java.io.IOException
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  id: <A>appendTo(A,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: <A>appendTo(A appendable, Iterator<? extends Map.Entry<?,?>> parts)
  nameWithType: Joiner.MapJoiner.<A>appendTo(A appendable, Iterator<? extends Map.Entry<?,?>> parts)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A appendable, Iterator<? extends Map.Entry<?,?>> parts)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry in `entries`, using the previously configured separator and key-value separator, to `appendable`.
  syntax:
    content: public A <A>appendTo(A appendable, Iterator<? extends Map.Entry<?,?>> parts)
    parameters:
    - id: appendable
      type: A
    - id: parts
      type: java.util.Iterator<? extends java.util.Map.Entry<?,?>>
    return:
      type: A
  exceptions:
  - type: java.io.IOException
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A,java.util.Map<?,?>)
  id: <A>appendTo(A,java.util.Map<?,?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: <A>appendTo(A appendable, Map<?,?> map)
  nameWithType: Joiner.MapJoiner.<A>appendTo(A appendable, Map<?,?> map)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo(A appendable, Map<?,?> map)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry of `map`, using the previously configured separator and key-value separator, to `appendable`.
  syntax:
    content: public A <A>appendTo(A appendable, Map<?,?> map)
    parameters:
    - id: appendable
      type: A
    - id: map
      type: java.util.Map<?,?>
    return:
      type: A
  exceptions:
  - type: java.io.IOException
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.MapJoiner(com.azure.cosmos.implementation.guava25.base.Joiner,java.lang.String)
  id: MapJoiner(com.azure.cosmos.implementation.guava25.base.Joiner,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: MapJoiner(Joiner joiner, String keyValueSeparator)
  nameWithType: Joiner.MapJoiner.MapJoiner(Joiner joiner, String keyValueSeparator)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.MapJoiner(Joiner joiner, String keyValueSeparator)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.MapJoiner*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: private MapJoiner(Joiner joiner, String keyValueSeparator)
    parameters:
    - id: joiner
      type: com.azure.cosmos.implementation.guava25.base.Joiner
    - id: keyValueSeparator
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  id: appendTo(java.lang.StringBuilder,java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: appendTo(StringBuilder builder, Iterable<? extends Map.Entry<?,?>> entries)
  nameWithType: Joiner.MapJoiner.appendTo(StringBuilder builder, Iterable<? extends Map.Entry<?,?>> entries)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(StringBuilder builder, Iterable<? extends Map.Entry<?,?>> entries)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry in `entries`, using the previously configured separator and key-value separator, to `builder`. Identical to <xref uid="" data-throw-if-not-resolved="false">#appendTo(Appendable, Iterable)</xref>, except that it does not throw <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>.
  syntax:
    content: public StringBuilder appendTo(StringBuilder builder, Iterable<? extends Map.Entry<?,?>> entries)
    parameters:
    - id: builder
      type: java.lang.StringBuilder
    - id: entries
      type: java.lang.Iterable<? extends java.util.Map.Entry<?,?>>
    return:
      type: java.lang.StringBuilder
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  id: appendTo(java.lang.StringBuilder,java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: appendTo(StringBuilder builder, Iterator<? extends Map.Entry<?,?>> entries)
  nameWithType: Joiner.MapJoiner.appendTo(StringBuilder builder, Iterator<? extends Map.Entry<?,?>> entries)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(StringBuilder builder, Iterator<? extends Map.Entry<?,?>> entries)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry in `entries`, using the previously configured separator and key-value separator, to `builder`. Identical to <xref uid="" data-throw-if-not-resolved="false">#appendTo(Appendable, Iterable)</xref>, except that it does not throw <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>.
  syntax:
    content: public StringBuilder appendTo(StringBuilder builder, Iterator<? extends Map.Entry<?,?>> entries)
    parameters:
    - id: builder
      type: java.lang.StringBuilder
    - id: entries
      type: java.util.Iterator<? extends java.util.Map.Entry<?,?>>
    return:
      type: java.lang.StringBuilder
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(java.lang.StringBuilder,java.util.Map<?,?>)
  id: appendTo(java.lang.StringBuilder,java.util.Map<?,?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: appendTo(StringBuilder builder, Map<?,?> map)
  nameWithType: Joiner.MapJoiner.appendTo(StringBuilder builder, Map<?,?> map)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo(StringBuilder builder, Map<?,?> map)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Appends the string representation of each entry of `map`, using the previously configured separator and key-value separator, to `builder`. Identical to <xref uid="" data-throw-if-not-resolved="false">#appendTo(Appendable, Map)</xref>, except that it does not throw <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>.
  syntax:
    content: public StringBuilder appendTo(StringBuilder builder, Map<?,?> map)
    parameters:
    - id: builder
      type: java.lang.StringBuilder
    - id: map
      type: java.util.Map<?,?>
    return:
      type: java.lang.StringBuilder
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  id: join(java.lang.Iterable<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: join(Iterable<? extends Map.Entry<?,?>> entries)
  nameWithType: Joiner.MapJoiner.join(Iterable<? extends Map.Entry<?,?>> entries)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(Iterable<? extends Map.Entry<?,?>> entries)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a string containing the string representation of each entry in `entries`, using the previously configured separator and key-value separator.
  syntax:
    content: public String join(Iterable<? extends Map.Entry<?,?>> entries)
    parameters:
    - id: entries
      type: java.lang.Iterable<? extends java.util.Map.Entry<?,?>>
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  id: join(java.util.Iterator<? extends java.util.Map.Entry<?,?>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: join(Iterator<? extends Map.Entry<?,?>> entries)
  nameWithType: Joiner.MapJoiner.join(Iterator<? extends Map.Entry<?,?>> entries)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(Iterator<? extends Map.Entry<?,?>> entries)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a string containing the string representation of each entry in `entries`, using the previously configured separator and key-value separator.
  syntax:
    content: public String join(Iterator<? extends Map.Entry<?,?>> entries)
    parameters:
    - id: entries
      type: java.util.Iterator<? extends java.util.Map.Entry<?,?>>
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(java.util.Map<?,?>)
  id: join(java.util.Map<?,?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: join(Map<?,?> map)
  nameWithType: Joiner.MapJoiner.join(Map<?,?> map)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join(Map<?,?> map)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a string containing the string representation of each entry of `map`, using the previously configured separator and key-value separator.
  syntax:
    content: public String join(Map<?,?> map)
    parameters:
    - id: map
      type: java.util.Map<?,?>
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull(java.lang.String)
  id: useForNull(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
  langs:
  - java
  name: useForNull(String nullText)
  nameWithType: Joiner.MapJoiner.useForNull(String nullText)
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull(String nullText)
  overload: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a map joiner with the same behavior as this one, except automatically substituting `nullText` for any provided null keys or values.
  syntax:
    content: public Joiner.MapJoiner useForNull(String nullText)
    parameters:
    - id: nullText
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner
references:
- uid: com.azure.cosmos.implementation.guava25.base.Joiner
  name: Joiner
  nameWithType: Joiner
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.MapJoiner*
  name: MapJoiner
  nameWithType: Joiner.MapJoiner.MapJoiner
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.MapJoiner
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: java.util.Map<?,?>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.appendTo*
  name: <A>appendTo
  nameWithType: Joiner.MapJoiner.<A>appendTo
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.<A>appendTo
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: java.lang.Iterable<? extends java.util.Map.Entry<?,?>>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '? extends java.util.Map.Entry'
    name: Entry
    fullName: '? extends java.util.Map.Entry'
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.Iterator<? extends java.util.Map.Entry<?,?>>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: '? extends java.util.Map.Entry'
    name: Entry
    fullName: '? extends java.util.Map.Entry'
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join*
  name: join
  nameWithType: Joiner.MapJoiner.join
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.join
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull*
  name: useForNull
  nameWithType: Joiner.MapJoiner.useForNull
  fullName: com.azure.cosmos.implementation.guava25.base.Joiner.MapJoiner.useForNull
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends java.util.Map.Entry'
  name: '? extends Map.Entry'
  nameWithType: '? extends Map.Entry'
  fullName: '? extends java.util.Map.Entry'
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
