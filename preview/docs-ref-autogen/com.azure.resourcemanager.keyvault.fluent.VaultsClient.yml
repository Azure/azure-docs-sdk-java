### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  id: VaultsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent
  children:
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient(com.azure.resourcemanager.keyvault.KeyVaultManagementClient)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.list()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted(com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync()
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  langs:
  - java
  name: VaultsClient
  nameWithType: VaultsClient
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  type: Class
  package: com.azure.resourcemanager.keyvault.fluent
  summary: An instance of this class provides access to all the operations defined in Vaults.
  syntax:
    content: public final class VaultsClient implements InnerSupportsGet<VaultInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient(com.azure.resourcemanager.keyvault.KeyVaultManagementClient)
  id: VaultsClient(com.azure.resourcemanager.keyvault.KeyVaultManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: VaultsClient(KeyVaultManagementClient client)
  nameWithType: VaultsClient.VaultsClient(KeyVaultManagementClient client)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient(KeyVaultManagementClient client)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient*
  type: Constructor
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Initializes an instance of VaultsClient.
  syntax:
    content: public VaultsClient(KeyVaultManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.keyvault.KeyVaultManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public PollerFlux<PollResult<VaultInner>,VaultInner> beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>,com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public PollerFlux<PollResult<VaultInner>,VaultInner> beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>,com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(java.lang.String,java.lang.String)
  id: beginPurgeDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeleted(String vaultName, String location)
  nameWithType: VaultsClient.beginPurgeDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginPurgeDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeleted(String vaultName, String location, Context context)
  nameWithType: VaultsClient.beginPurgeDeleted(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginPurgeDeleted(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String)
  id: beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPolling(String vaultName, String location)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPolling(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void beginPurgeDeletedWithoutPolling(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPurgeDeletedWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPolling(String vaultName, String location, Context context)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPolling(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void beginPurgeDeletedWithoutPolling(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPollingAsync(String vaultName, String location)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Void> beginPurgeDeletedWithoutPollingAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPurgeDeletedWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPollingAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Void> beginPurgeDeletedWithoutPollingAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Response<Void>> beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPurgeDeletedWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Response<Void>> beginPurgeDeletedWithoutPollingWithResponseAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: VaultsClient.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public CheckNameAvailabilityResultInner checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailability(String name, Context context)
  nameWithType: VaultsClient.checkNameAvailability(String name, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(String name, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public CheckNameAvailabilityResultInner checkNameAvailability(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: VaultsClient.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailabilityAsync(String name, Context context)
  nameWithType: VaultsClient.checkNameAvailabilityAsync(String name, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync(String name, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(java.lang.String)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name)
  nameWithType: VaultsClient.checkNameAvailabilityWithResponseAsync(String name)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(String name)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithResponseAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name, Context context)
  nameWithType: VaultsClient.checkNameAvailabilityWithResponseAsync(String name, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(String name, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithResponseAsync(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: delete(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.delete(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public void delete(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: delete(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.delete(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public void delete(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.deleteAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.deleteAsync(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.deleteWithResponseAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.deleteWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.getByResourceGroup(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public VaultInner getByResourceGroup(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.getByResourceGroup(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public VaultInner getByResourceGroup(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.getByResourceGroupAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<VaultInner> getByResourceGroupAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.getByResourceGroupAsync(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<VaultInner> getByResourceGroupAsync(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<Response<VaultInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<Response<VaultInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(java.lang.String,java.lang.String)
  id: getDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeleted(String vaultName, String location)
  nameWithType: VaultsClient.getDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public DeletedVaultInner getDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeleted(String vaultName, String location, Context context)
  nameWithType: VaultsClient.getDeleted(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public DeletedVaultInner getDeleted(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(java.lang.String,java.lang.String)
  id: getDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeletedAsync(String vaultName, String location)
  nameWithType: VaultsClient.getDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<DeletedVaultInner> getDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeletedAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.getDeletedAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<DeletedVaultInner> getDeletedAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  id: getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeletedWithResponseAsync(String vaultName, String location)
  nameWithType: VaultsClient.getDeletedWithResponseAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<Response<DeletedVaultInner>> getDeletedWithResponseAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: getDeletedWithResponseAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.getDeletedWithResponseAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<Response<DeletedVaultInner>> getDeletedWithResponseAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: list()
  nameWithType: VaultsClient.list()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<Resource> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(java.lang.Integer)
  id: list(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: list(Integer top)
  nameWithType: VaultsClient.list(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<Resource> list(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(java.lang.Integer,com.azure.core.util.Context)
  id: list(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: list(Integer top, Context context)
  nameWithType: VaultsClient.list(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<Resource> list(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listAsync()
  nameWithType: VaultsClient.listAsync()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<Resource> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(java.lang.Integer)
  id: listAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listAsync(Integer top)
  nameWithType: VaultsClient.listAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<Resource> listAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(java.lang.Integer,com.azure.core.util.Context)
  id: listAsync(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listAsync(Integer top, Context context)
  nameWithType: VaultsClient.listAsync(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<Resource> listAsync(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: VaultsClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String,java.lang.Integer)
  id: listByResourceGroup(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Integer top)
  nameWithType: VaultsClient.listByResourceGroup(String resourceGroupName, Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(String resourceGroupName, Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName, Integer top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Integer top, Context context)
  nameWithType: VaultsClient.listByResourceGroup(String resourceGroupName, Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup(String resourceGroupName, Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName, Integer top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: VaultsClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedFlux<VaultInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  id: listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Integer top)
  nameWithType: VaultsClient.listByResourceGroupAsync(String resourceGroupName, Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(String resourceGroupName, Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedFlux<VaultInner> listByResourceGroupAsync(String resourceGroupName, Integer top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Integer top, Context context)
  nameWithType: VaultsClient.listByResourceGroupAsync(String resourceGroupName, Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync(String resourceGroupName, Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedFlux<VaultInner> listByResourceGroupAsync(String resourceGroupName, Integer top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink)
  nameWithType: VaultsClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listByResourceGroupNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  nameWithType: VaultsClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer)
  id: listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top)
  nameWithType: VaultsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top, Context context)
  nameWithType: VaultsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Integer top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription()
  id: listBySubscription()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscription()
  nameWithType: VaultsClient.listBySubscription()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<VaultInner> listBySubscription()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(java.lang.Integer)
  id: listBySubscription(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscription(Integer top)
  nameWithType: VaultsClient.listBySubscription(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<VaultInner> listBySubscription(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  id: listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscription(Integer top, Context context)
  nameWithType: VaultsClient.listBySubscription(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<VaultInner> listBySubscription(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync()
  id: listBySubscriptionAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionAsync()
  nameWithType: VaultsClient.listBySubscriptionAsync()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<VaultInner> listBySubscriptionAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(java.lang.Integer)
  id: listBySubscriptionAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionAsync(Integer top)
  nameWithType: VaultsClient.listBySubscriptionAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<VaultInner> listBySubscriptionAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(java.lang.Integer,com.azure.core.util.Context)
  id: listBySubscriptionAsync(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionAsync(Integer top, Context context)
  nameWithType: VaultsClient.listBySubscriptionAsync(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<VaultInner> listBySubscriptionAsync(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(java.lang.String)
  id: listBySubscriptionNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionNextSinglePageAsync(String nextLink)
  nameWithType: VaultsClient.listBySubscriptionNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listBySubscriptionNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listBySubscriptionNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionNextSinglePageAsync(String nextLink, Context context)
  nameWithType: VaultsClient.listBySubscriptionNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listBySubscriptionNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(java.lang.Integer)
  id: listBySubscriptionSinglePageAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionSinglePageAsync(Integer top)
  nameWithType: VaultsClient.listBySubscriptionSinglePageAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listBySubscriptionSinglePageAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  id: listBySubscriptionSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listBySubscriptionSinglePageAsync(Integer top, Context context)
  nameWithType: VaultsClient.listBySubscriptionSinglePageAsync(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public Mono<PagedResponse<VaultInner>> listBySubscriptionSinglePageAsync(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted()
  id: listDeleted()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeleted()
  nameWithType: VaultsClient.listDeleted()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedIterable<DeletedVaultInner> listDeleted()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted(com.azure.core.util.Context)
  id: listDeleted(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeleted(Context context)
  nameWithType: VaultsClient.listDeleted(Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted(Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedIterable<DeletedVaultInner> listDeleted(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync()
  id: listDeletedAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedAsync()
  nameWithType: VaultsClient.listDeletedAsync()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedFlux<DeletedVaultInner> listDeletedAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync(com.azure.core.util.Context)
  id: listDeletedAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedAsync(Context context)
  nameWithType: VaultsClient.listDeletedAsync(Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync(Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedFlux<DeletedVaultInner> listDeletedAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(java.lang.String)
  id: listDeletedNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedNextSinglePageAsync(String nextLink)
  nameWithType: VaultsClient.listDeletedNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<DeletedVaultInner>> listDeletedNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listDeletedNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedNextSinglePageAsync(String nextLink, Context context)
  nameWithType: VaultsClient.listDeletedNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<DeletedVaultInner>> listDeletedNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync()
  id: listDeletedSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedSinglePageAsync()
  nameWithType: VaultsClient.listDeletedSinglePageAsync()
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync()
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public Mono<PagedResponse<DeletedVaultInner>> listDeletedSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync(com.azure.core.util.Context)
  id: listDeletedSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listDeletedSinglePageAsync(Context context)
  nameWithType: VaultsClient.listDeletedSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public Mono<PagedResponse<DeletedVaultInner>> listDeletedSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: VaultsClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<Resource>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.core.management.Resource>>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: VaultsClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<Resource>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.core.management.Resource>>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(java.lang.Integer)
  id: listSinglePageAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listSinglePageAsync(Integer top)
  nameWithType: VaultsClient.listSinglePageAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public Mono<PagedResponse<Resource>> listSinglePageAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.core.management.Resource>>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: listSinglePageAsync(Integer top, Context context)
  nameWithType: VaultsClient.listSinglePageAsync(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public Mono<PagedResponse<Resource>> listSinglePageAsync(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.core.management.Resource>>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(java.lang.String,java.lang.String)
  id: purgeDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeleted(String vaultName, String location)
  nameWithType: VaultsClient.purgeDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void purgeDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeleted(String vaultName, String location, Context context)
  nameWithType: VaultsClient.purgeDeleted(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void purgeDeleted(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(java.lang.String,java.lang.String)
  id: purgeDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeletedAsync(String vaultName, String location)
  nameWithType: VaultsClient.purgeDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Void> purgeDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: purgeDeletedAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeletedAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.purgeDeletedAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Void> purgeDeletedAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  id: purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeletedWithResponseAsync(String vaultName, String location)
  nameWithType: VaultsClient.purgeDeletedWithResponseAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> purgeDeletedWithResponseAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: purgeDeletedWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: purgeDeletedWithResponseAsync(String vaultName, String location, Context context)
  nameWithType: VaultsClient.purgeDeletedWithResponseAsync(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> purgeDeletedWithResponseAsync(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClient.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public VaultInner update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: update(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  nameWithType: VaultsClient.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public VaultInner update(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClient.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public VaultAccessPolicyParametersInner updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  id: updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  nameWithType: VaultsClient.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public VaultAccessPolicyParametersInner updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClient.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultAccessPolicyParametersInner> updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  id: updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  nameWithType: VaultsClient.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultAccessPolicyParametersInner> updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClient.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultAccessPolicyParametersInner>> updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  id: updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  nameWithType: VaultsClient.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultAccessPolicyParametersInner>> updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClient.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  nameWithType: VaultsClient.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClient.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultInner>> updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  nameWithType: VaultsClient.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.fluent
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultInner>> updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
      description: resource information with extended details.
references:
- uid: com.azure.resourcemanager.keyvault.KeyVaultManagementClient
  name: KeyVaultManagementClient
  nameWithType: KeyVaultManagementClient
  fullName: com.azure.resourcemanager.keyvault.KeyVaultManagementClient
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient*
  name: VaultsClient
  nameWithType: VaultsClient.VaultsClient
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.VaultsClient
  package: com.azure.resourcemanager.keyvault.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
  name: VaultCreateOrUpdateParameters
  nameWithType: VaultCreateOrUpdateParameters
  fullName: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: VaultsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>,com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: VaultsClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: VaultsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  name: VaultInner
  nameWithType: VaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: VaultsClient.createOrUpdate
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.createOrUpdate
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
  name: VaultPatchParameters
  nameWithType: VaultPatchParameters
  fullName: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: VaultsClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync*
  name: updateAsync
  nameWithType: VaultsClient.updateAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update*
  name: update
  nameWithType: VaultsClient.update
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.update
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: VaultsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync*
  name: deleteAsync
  nameWithType: VaultsClient.deleteAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.deleteAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete*
  name: delete
  nameWithType: VaultsClient.delete
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.delete
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: VaultsClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: VaultsClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: VaultsClient.getByResourceGroup
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getByResourceGroup
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
  name: AccessPolicyUpdateKind
  nameWithType: AccessPolicyUpdateKind
  fullName: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
- uid: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
  name: VaultAccessPolicyProperties
  nameWithType: VaultAccessPolicyProperties
  fullName: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
    name: VaultAccessPolicyParametersInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync*
  name: updateAccessPolicyWithResponseAsync
  nameWithType: VaultsClient.updateAccessPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
    name: VaultAccessPolicyParametersInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync*
  name: updateAccessPolicyAsync
  nameWithType: VaultsClient.updateAccessPolicyAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicyAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
  name: VaultAccessPolicyParametersInner
  nameWithType: VaultAccessPolicyParametersInner
  fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultAccessPolicyParametersInner
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy*
  name: updateAccessPolicy
  nameWithType: VaultsClient.updateAccessPolicy
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.updateAccessPolicy
  package: com.azure.resourcemanager.keyvault.fluent
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: VaultsClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: VaultsClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: VaultsClient.listByResourceGroup
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroup
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync*
  name: listBySubscriptionSinglePageAsync
  nameWithType: VaultsClient.listBySubscriptionSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync*
  name: listBySubscriptionAsync
  nameWithType: VaultsClient.listBySubscriptionAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription*
  name: listBySubscription
  nameWithType: VaultsClient.listBySubscription
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscription
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync*
  name: listDeletedSinglePageAsync
  nameWithType: VaultsClient.listDeletedSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync*
  name: listDeletedAsync
  nameWithType: VaultsClient.listDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted*
  name: listDeleted
  nameWithType: VaultsClient.listDeleted
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeleted
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync*
  name: getDeletedWithResponseAsync
  nameWithType: VaultsClient.getDeletedWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync*
  name: getDeletedAsync
  nameWithType: VaultsClient.getDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeletedAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
  name: DeletedVaultInner
  nameWithType: DeletedVaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.inner.DeletedVaultInner
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted*
  name: getDeleted
  nameWithType: VaultsClient.getDeleted
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.getDeleted
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync*
  name: purgeDeletedWithResponseAsync
  nameWithType: VaultsClient.purgeDeletedWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted*
  name: beginPurgeDeleted
  nameWithType: VaultsClient.beginPurgeDeleted
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeleted
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync*
  name: purgeDeletedAsync
  nameWithType: VaultsClient.purgeDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeletedAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted*
  name: purgeDeleted
  nameWithType: VaultsClient.purgeDeleted
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.purgeDeleted
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.core.management.Resource>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.core.management.Resource
    name: Resource
    fullName: com.azure.core.management.Resource
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: VaultsClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.Resource
    name: Resource
    fullName: com.azure.core.management.Resource
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync*
  name: listAsync
  nameWithType: VaultsClient.listAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.core.management.Resource
    name: Resource
    fullName: com.azure.core.management.Resource
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list*
  name: list
  nameWithType: VaultsClient.list
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.list
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: VaultsClient.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: VaultsClient.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
  name: CheckNameAvailabilityResultInner
  nameWithType: CheckNameAvailabilityResultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.inner.CheckNameAvailabilityResultInner
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: VaultsClient.checkNameAvailability
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: VaultsClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync*
  name: beginPurgeDeletedWithoutPollingWithResponseAsync
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync*
  name: beginPurgeDeletedWithoutPollingAsync
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPollingAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPollingAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling*
  name: beginPurgeDeletedWithoutPolling
  nameWithType: VaultsClient.beginPurgeDeletedWithoutPolling
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.beginPurgeDeletedWithoutPolling
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync*
  name: listByResourceGroupNextSinglePageAsync
  nameWithType: VaultsClient.listByResourceGroupNextSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listByResourceGroupNextSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync*
  name: listBySubscriptionNextSinglePageAsync
  nameWithType: VaultsClient.listBySubscriptionNextSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listBySubscriptionNextSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync*
  name: listDeletedNextSinglePageAsync
  nameWithType: VaultsClient.listDeletedNextSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listDeletedNextSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: VaultsClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.keyvault.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
  name: InnerSupportsGet<VaultInner>
  nameWithType: InnerSupportsGet<VaultInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>,com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
  name: VaultInner>,VaultInner
  nameWithType: VaultInner>,VaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.inner.VaultInner>,com.azure.resourcemanager.keyvault.fluent.inner.VaultInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.Resource
  name: Resource
  nameWithType: Resource
  fullName: com.azure.core.management.Resource
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
