### YamlMime:JavaType
uid: "com.azure.resourcemanager.botservice.fluent.BotsClient"
fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient"
name: "BotsClient"
nameWithType: "BotsClient"
summary: "An instance of this class provides access to all the operations defined in Bots<wbr>Client."
syntax: "public interface BotsClient"
methods:
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.botservice.fluent.models.BotInner)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.create(String resourceGroupName, String resourceName, BotInner parameters)"
  name: "create(String resourceGroupName, String resourceName, BotInner parameters)"
  nameWithType: "BotsClient.create(String resourceGroupName, String resourceName, BotInner parameters)"
  summary: "Creates a Bot Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters to provide for the created bot."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BotInner create(String resourceGroupName, String resourceName, BotInner parameters)"
  desc: "Creates a Bot Service. Bot Service is a resource group wide resource type."
  returns:
    description: "bot resource definition."
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.createWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.botservice.fluent.models.BotInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.createWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  name: "createWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  nameWithType: "BotsClient.createWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  summary: "Creates a Bot Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters to provide for the created bot."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BotInner> createWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  desc: "Creates a Bot Service. Bot Service is a resource group wide resource type."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.delete(String resourceGroupName, String resourceName)"
  name: "delete(String resourceGroupName, String resourceName)"
  nameWithType: "BotsClient.delete(String resourceGroupName, String resourceName)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String resourceName)"
  desc: "Deletes a Bot Service from the resource group."
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "BotsClient.deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Deletes a Bot Service from the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.getByResourceGroup(String resourceGroupName, String resourceName)"
  name: "getByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "BotsClient.getByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BotInner getByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition."
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "BotsClient.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BotInner> getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.getCheckNameAvailability(com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  name: "getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  nameWithType: "BotsClient.getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  summary: "Check whether a bot name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request body parameters to provide for the check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody&text=CheckNameAvailabilityRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResponseBodyInner getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  desc: "Check whether a bot name is available."
  returns:
    description: "the response body returned for a request to Bot Service Management to check availability of a bot name."
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.CheckNameAvailabilityResponseBodyInner?alt=com.azure.resourcemanager.botservice.fluent.models.CheckNameAvailabilityResponseBodyInner&text=CheckNameAvailabilityResponseBodyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.getCheckNameAvailabilityWithResponse(com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  name: "getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  nameWithType: "BotsClient.getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  summary: "Check whether a bot name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request body parameters to provide for the check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody&text=CheckNameAvailabilityRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResponseBodyInner> getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  desc: "Check whether a bot name is available."
  returns:
    description: "the response body returned for a request to Bot Service Management to check availability of a bot name\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.CheckNameAvailabilityResponseBodyInner?alt=com.azure.resourcemanager.botservice.fluent.models.CheckNameAvailabilityResponseBodyInner&text=CheckNameAvailabilityResponseBodyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.list()"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.list()"
  name: "list()"
  nameWithType: "BotsClient.list()"
  summary: "Returns all the resources of a particular type belonging to a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<BotInner> list()"
  desc: "Returns all the resources of a particular type belonging to a subscription."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "BotsClient.list(Context context)"
  summary: "Returns all the resources of a particular type belonging to a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BotInner> list(Context context)"
  desc: "Returns all the resources of a particular type belonging to a subscription."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "BotsClient.listByResourceGroup(String resourceGroupName)"
  summary: "Returns all the resources of a particular type belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BotInner> listByResourceGroup(String resourceGroupName)"
  desc: "Returns all the resources of a particular type belonging to a resource group."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "BotsClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Returns all the resources of a particular type belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BotInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Returns all the resources of a particular type belonging to a resource group."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.botservice.fluent.models.BotInner)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.update(String resourceGroupName, String resourceName, BotInner parameters)"
  name: "update(String resourceGroupName, String resourceName, BotInner parameters)"
  nameWithType: "BotsClient.update(String resourceGroupName, String resourceName, BotInner parameters)"
  summary: "Updates a Bot Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters to provide for the created bot."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BotInner update(String resourceGroupName, String resourceName, BotInner parameters)"
  desc: "Updates a Bot Service."
  returns:
    description: "bot resource definition."
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.fluent.BotsClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.botservice.fluent.models.BotInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.fluent.BotsClient.updateWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  name: "updateWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  nameWithType: "BotsClient.updateWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  summary: "Updates a Bot Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters to provide for the created bot."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BotInner> updateWithResponse(String resourceGroupName, String resourceName, BotInner parameters, Context context)"
  desc: "Updates a Bot Service."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.fluent.models.BotInner?alt=com.azure.resourcemanager.botservice.fluent.models.BotInner&text=BotInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in BotsClient."
metadata: {}
package: "com.azure.resourcemanager.botservice.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-botservice:1.0.0-beta.5
