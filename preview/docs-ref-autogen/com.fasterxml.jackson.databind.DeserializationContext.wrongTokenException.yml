### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException"
name: "wrongTokenException"
nameWithType: "DeserializationContext.wrongTokenException"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(JsonParser p, JsonToken expToken, String msg)"
  name: "wrongTokenException(JsonParser p, JsonToken expToken, String msg)"
  nameWithType: "DeserializationContext.wrongTokenException(JsonParser p, JsonToken expToken, String msg)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonMappingException wrongTokenException(JsonParser p, JsonToken expToken, String msg)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(JsonParser p, JavaType targetType, JsonToken expToken, String extra)"
  name: "wrongTokenException(JsonParser p, JavaType targetType, JsonToken expToken, String extra)"
  nameWithType: "DeserializationContext.wrongTokenException(JsonParser p, JavaType targetType, JsonToken expToken, String extra)"
  summary: "Helper method for constructing <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> to indicate that the token encountered was of type different than what **should** be seen at that position, usually within a sequence of expected tokens. Note that most of the time this method should NOT be directly called; instead, <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#reportWrongTokenException\"></xref> should be called and will call this method as necessary."
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "targetType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "extra"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonMappingException wrongTokenException(JsonParser p, JavaType targetType, JsonToken expToken, String extra)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(JsonParser p, Class<?> targetType, JsonToken expToken, String extra)"
  name: "wrongTokenException(JsonParser p, Class<?> targetType, JsonToken expToken, String extra)"
  nameWithType: "DeserializationContext.wrongTokenException(JsonParser p, Class<?> targetType, JsonToken expToken, String extra)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "targetType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "extra"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonMappingException wrongTokenException(JsonParser p, Class<?> targetType, JsonToken expToken, String extra)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
