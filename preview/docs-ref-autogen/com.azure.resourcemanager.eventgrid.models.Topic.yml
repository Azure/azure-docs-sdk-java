### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.Topic"
fullName: "com.azure.resourcemanager.eventgrid.models.Topic"
name: "Topic"
nameWithType: "Topic"
summary: "An immutable client-side representation of Topic."
syntax: "public interface Topic"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.dataResidencyBoundary()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.dataResidencyBoundary()"
  name: "dataResidencyBoundary()"
  nameWithType: "Topic.dataResidencyBoundary()"
  summary: "Gets the dataResidencyBoundary property: Data Residency Boundary of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract DataResidencyBoundary dataResidencyBoundary()"
  returns:
    description: "the dataResidencyBoundary value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary?alt=com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary&text=DataResidencyBoundary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "Topic.disableLocalAuth()"
  summary: "Gets the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean disableLocalAuth()"
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.endpoint()"
  name: "endpoint()"
  nameWithType: "Topic.endpoint()"
  summary: "Gets the endpoint property: Endpoint for the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract String endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.id()"
  name: "id()"
  nameWithType: "Topic.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.identity()"
  name: "identity()"
  nameWithType: "Topic.identity()"
  summary: "Gets the identity property: Identity information for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityInfo identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "Topic.inboundIpRules()"
  summary: "Gets the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract List<InboundIpRule> inboundIpRules()"
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.innerModel()"
  name: "innerModel()"
  nameWithType: "Topic.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.TopicInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract TopicInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.inputSchema()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.inputSchema()"
  name: "inputSchema()"
  nameWithType: "Topic.inputSchema()"
  summary: "Gets the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract InputSchema inputSchema()"
  returns:
    description: "the inputSchema value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.inputSchemaMapping()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.inputSchemaMapping()"
  name: "inputSchemaMapping()"
  nameWithType: "Topic.inputSchemaMapping()"
  summary: "Gets the inputSchemaMapping property: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
  modifiers:
  - "abstract"
  syntax: "public abstract InputSchemaMapping inputSchemaMapping()"
  returns:
    description: "the inputSchemaMapping value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.listSharedAccessKeys()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.listSharedAccessKeys()"
  name: "listSharedAccessKeys()"
  nameWithType: "Topic.listSharedAccessKeys()"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  syntax: "public abstract TopicSharedAccessKeys listSharedAccessKeys()"
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.listSharedAccessKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.listSharedAccessKeysWithResponse(Context context)"
  name: "listSharedAccessKeysWithResponse(Context context)"
  nameWithType: "Topic.listSharedAccessKeysWithResponse(Context context)"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TopicSharedAccessKeys> listSharedAccessKeysWithResponse(Context context)"
  returns:
    description: "shared access keys of the Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.location()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.location()"
  name: "location()"
  nameWithType: "Topic.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.metricResourceId()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.metricResourceId()"
  name: "metricResourceId()"
  nameWithType: "Topic.metricResourceId()"
  summary: "Gets the metricResourceId property: Metric resource id for the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract String metricResourceId()"
  returns:
    description: "the metricResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.name()"
  name: "name()"
  nameWithType: "Topic.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "Topic.privateEndpointConnections()"
  summary: "Gets the privateEndpointConnections property: The privateEndpointConnections property."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrivateEndpointConnection> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection?alt=com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection&text=PrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Topic.provisioningState()"
  summary: "Gets the provisioningState property: Provisioning state of the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract TopicProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicProvisioningState&text=TopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "Topic.publicNetworkAccess()"
  summary: "Gets the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.refresh()"
  name: "refresh()"
  nameWithType: "Topic.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Topic refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Topic.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Topic refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.regenerateKey(com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "Topic.regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeys regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest)"
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.regenerateKey(com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "Topic.regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeys regenerateKey(TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.region()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.region()"
  name: "region()"
  nameWithType: "Topic.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.regionName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.regionName()"
  name: "regionName()"
  nameWithType: "Topic.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.resourceGroupName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Topic.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.systemData()"
  name: "systemData()"
  nameWithType: "Topic.systemData()"
  summary: "Gets the systemData property: The system metadata relating to Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.tags()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.tags()"
  name: "tags()"
  nameWithType: "Topic.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.type()"
  name: "type()"
  nameWithType: "Topic.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.update()"
  name: "update()"
  nameWithType: "Topic.update()"
  summary: "Begins update for the Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Topic.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic.Update?alt=com.azure.resourcemanager.eventgrid.models.Topic.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
