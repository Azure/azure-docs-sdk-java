### YamlMime:JavaType
uid: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithTarget"
fullName: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithTarget"
name: "License.UpdateStages.WithTarget"
nameWithType: "License.UpdateStages.WithTarget"
summary: "The stage of the License update allowing to specify target."
syntax: "public static interface **License.UpdateStages.WithTarget**"
methods:
- uid: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithTarget.withTarget(com.azure.resourcemanager.hybridcompute.models.LicenseTarget)"
  fullName: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithTarget.withTarget(LicenseTarget target)"
  name: "withTarget(LicenseTarget target)"
  nameWithType: "License.UpdateStages.WithTarget.withTarget(LicenseTarget target)"
  summary: "Specifies the target property: Describes the license target server.."
  modifiers:
  - "abstract"
  parameters:
  - description: "Describes the license target server."
    name: "target"
    type: "<xref href=\"com.azure.resourcemanager.hybridcompute.models.LicenseTarget?alt=com.azure.resourcemanager.hybridcompute.models.LicenseTarget&text=LicenseTarget\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract License.Update withTarget(LicenseTarget target)"
  desc: "Specifies the target property: Describes the license target server.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.hybridcompute.models.License.Update?alt=com.azure.resourcemanager.hybridcompute.models.License.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the License update allowing to specify target."
metadata: {}
package: "com.azure.resourcemanager.hybridcompute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridcompute:1.0.0-beta.3
