### YamlMime:JavaType
uid: "com.azure.ai.translation.text.TextTranslationAsyncClient"
fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient"
name: "TextTranslationAsyncClient"
nameWithType: "TextTranslationAsyncClient"
summary: "Initializes a new instance of the asynchronous Text<wbr>Translation<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **TextTranslationAsyncClient**"
methods:
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundaries(java.util.List<com.azure.ai.translation.text.models.InputTextItem>)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundaries(List<InputTextItem> content)"
  name: "findSentenceBoundaries(List<InputTextItem> content)"
  nameWithType: "TextTranslationAsyncClient.findSentenceBoundaries(List<InputTextItem> content)"
  summary: "Find Sentence Boundaries."
  parameters:
  - description: "Array of the text for which values the sentence boundaries will be calculated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<List<BreakSentenceItem>> findSentenceBoundaries(List<InputTextItem> content)"
  desc: "Find Sentence Boundaries."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.BreakSentenceItem?alt=com.azure.ai.translation.text.models.BreakSentenceItem&text=BreakSentenceItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundaries(java.util.List<com.azure.ai.translation.text.models.InputTextItem>,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundaries(List<InputTextItem> content, String clientTraceId, String language, String script)"
  name: "findSentenceBoundaries(List<InputTextItem> content, String clientTraceId, String language, String script)"
  nameWithType: "TextTranslationAsyncClient.findSentenceBoundaries(List<InputTextItem> content, String clientTraceId, String language, String script)"
  summary: "Find Sentence Boundaries."
  parameters:
  - description: "Array of the text for which values the sentence boundaries will be calculated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Language tag identifying the language of the input text. If a code isn't specified, automatic\n     language detection will be applied."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Script tag identifying the script used by the input text. If a script isn't specified, the default\n     script of the language will be assumed."
    name: "script"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<List<BreakSentenceItem>> findSentenceBoundaries(List<InputTextItem> content, String clientTraceId, String language, String script)"
  desc: "Find Sentence Boundaries."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.BreakSentenceItem?alt=com.azure.ai.translation.text.models.BreakSentenceItem&text=BreakSentenceItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundariesWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.findSentenceBoundariesWithResponse(BinaryData content, RequestOptions requestOptions)"
  name: "findSentenceBoundariesWithResponse(BinaryData content, RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.findSentenceBoundariesWithResponse(BinaryData content, RequestOptions requestOptions)"
  summary: "Find Sentence Boundaries."
  parameters:
  - description: "Array of the text for which values the sentence boundaries will be calculated."
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> findSentenceBoundariesWithResponse(BinaryData content, RequestOptions requestOptions)"
  desc: "Find Sentence Boundaries.\n\n**Query Parameters**\n\n    | -------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n    | Name     | Type   | Required | Description                                                                                                                                |\n    | language | String | No       | Language tag identifying the language of the input text. If a code isn't specified, automatic language detection will be applied.          |\n    | script   | String | No       | Script tag identifying the script used by the input text. If a script isn't specified, the default script of the language will be assumed. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                               |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         detectedLanguage (Optional): {\n             language: String (Required)\n             score: double (Required)\n         }\n         sentLen (Required): [\n             int (Required)\n         ]\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguages()"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguages()"
  name: "getLanguages()"
  nameWithType: "TextTranslationAsyncClient.getLanguages()"
  summary: "Gets the set of languages currently supported by other operations of the Translator."
  syntax: "public Mono<GetLanguagesResult> getLanguages()"
  desc: "Gets the set of languages currently supported by other operations of the Translator."
  returns:
    description: "the set of languages currently supported by other operations of the Translator on successful completion\n     of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.text.models.GetLanguagesResult?alt=com.azure.ai.translation.text.models.GetLanguagesResult&text=GetLanguagesResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguages(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguages(String clientTraceId, String scope, String acceptLanguage, String ifNoneMatch)"
  name: "getLanguages(String clientTraceId, String scope, String acceptLanguage, String ifNoneMatch)"
  nameWithType: "TextTranslationAsyncClient.getLanguages(String clientTraceId, String scope, String acceptLanguage, String ifNoneMatch)"
  summary: "Gets the set of languages currently supported by other operations of the Translator."
  parameters:
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A comma-separated list of names defining the group of languages to return. Allowed group names are:\n     `translation`, `transliteration` and `dictionary`. If no scope is given, then all groups are returned, which\n     is equivalent to passing `scope=translation,transliteration,dictionary`. To decide which set of supported\n     languages is appropriate for your scenario, see the description of the [response object](#response-body)."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The language to use for user interface strings. Some of the fields in the response are\n     names of languages or names of regions. Use this parameter to define the language in which these names are\n     returned. The language is specified by providing a well-formed BCP 47 language tag. For instance, use the\n     value `fr` to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.\n     Names are provided in the English language when a target language is not specified or when localization is\n     not available."
    name: "acceptLanguage"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Passing the value of the ETag response header in an If-None-Match field will allow the service\n     to optimize the response. If the resource has not been modified, the service will return status code 304 and\n     an empty response body."
    name: "ifNoneMatch"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<GetLanguagesResult> getLanguages(String clientTraceId, String scope, String acceptLanguage, String ifNoneMatch)"
  desc: "Gets the set of languages currently supported by other operations of the Translator."
  returns:
    description: "the set of languages currently supported by other operations of the Translator on successful completion\n     of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.text.models.GetLanguagesResult?alt=com.azure.ai.translation.text.models.GetLanguagesResult&text=GetLanguagesResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguagesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.getLanguagesWithResponse(RequestOptions requestOptions)"
  name: "getLanguagesWithResponse(RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.getLanguagesWithResponse(RequestOptions requestOptions)"
  summary: "Gets the set of languages currently supported by other operations of the Translator."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getLanguagesWithResponse(RequestOptions requestOptions)"
  desc: "Gets the set of languages currently supported by other operations of the Translator.\n\n**Query Parameters**\n\n    | ----- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name  | Type   | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n    | scope | String | No       | A comma-separated list of names defining the group of languages to return. Allowed group names are: \\`translation\\`, \\`transliteration\\` and \\`dictionary\\`. If no scope is given, then all groups are returned, which is equivalent to passing \\`scope=translation,transliteration,dictionary\\`. To decide which set of supported languages is appropriate for your scenario, see the description of the \\[response object\\](\\#response-body). |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- ||\n    | Name            | Type   | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n    | Accept-Language | String | No       | The language to use for user interface strings. Some of the fields in the response are names of languages or names of regions. Use this parameter to define the language in which these names are returned. The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value \\`fr\\` to request names in French or use the value \\`zh-Hant\\` to request names in Chinese Traditional. Names are provided in the English language when a target language is not specified or when localization is not available. |\n    | If-None-Match   | String | No       | Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response. If the resource has not been modified, the service will return status code 304 and an empty response body.                                                                                                                                                                                                                                                                                                                 |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     translation (Optional): {\n         String (Optional): {\n             name: String (Required)\n             nativeName: String (Required)\n             dir: String (Required)\n         }\n     }\n     transliteration (Optional): {\n         String (Optional): {\n             name: String (Required)\n             nativeName: String (Required)\n             scripts (Required): [\n                  (Required){\n                     code: String (Required)\n                     name: String (Required)\n                     nativeName: String (Required)\n                     dir: String (Required)\n                     toScripts (Required): [\n                          (Required){\n                             code: String (Required)\n                             name: String (Required)\n                             nativeName: String (Required)\n                             dir: String (Required)\n                         }\n                     ]\n                 }\n             ]\n         }\n     }\n     dictionary (Optional): {\n         String (Optional): {\n             name: String (Required)\n             nativeName: String (Required)\n             dir: String (Required)\n             translations (Required): [\n                  (Required){\n                     name: String (Required)\n                     nativeName: String (Required)\n                     dir: String (Required)\n                     code: String (Required)\n                 }\n             ]\n         }\n     }\n }\n```"
  returns:
    description: "the set of languages currently supported by other operations of the Translator along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntries(java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.InputTextItem>)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntries(String from, String to, List<InputTextItem> content)"
  name: "lookupDictionaryEntries(String from, String to, List<InputTextItem> content)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryEntries(String from, String to, List<InputTextItem> content)"
  summary: "Lookup Dictionary Entries."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<List<DictionaryLookupItem>> lookupDictionaryEntries(String from, String to, List<InputTextItem> content)"
  desc: "Lookup Dictionary Entries."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryLookupItem?alt=com.azure.ai.translation.text.models.DictionaryLookupItem&text=DictionaryLookupItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntries(java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.InputTextItem>,java.lang.String)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntries(String from, String to, List<InputTextItem> content, String clientTraceId)"
  name: "lookupDictionaryEntries(String from, String to, List<InputTextItem> content, String clientTraceId)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryEntries(String from, String to, List<InputTextItem> content, String clientTraceId)"
  summary: "Lookup Dictionary Entries."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<List<DictionaryLookupItem>> lookupDictionaryEntries(String from, String to, List<InputTextItem> content, String clientTraceId)"
  desc: "Lookup Dictionary Entries."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryLookupItem?alt=com.azure.ai.translation.text.models.DictionaryLookupItem&text=DictionaryLookupItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntriesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryEntriesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  name: "lookupDictionaryEntriesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryEntriesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  summary: "Lookup Dictionary Entries."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> lookupDictionaryEntriesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  desc: "Lookup Dictionary Entries.\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                               |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         normalizedSource: String (Required)\n         displaySource: String (Required)\n         translations (Required): [\n              (Required){\n                 normalizedTarget: String (Required)\n                 displayTarget: String (Required)\n                 posTag: String (Required)\n                 confidence: double (Required)\n                 prefixWord: String (Required)\n                 backTranslations (Required): [\n                      (Required){\n                         normalizedText: String (Required)\n                         displayText: String (Required)\n                         numExamples: int (Required)\n                         frequencyCount: int (Required)\n                     }\n                 ]\n             }\n         ]\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamples(java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.DictionaryExampleTextItem>)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content)"
  name: "lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content)"
  summary: "Lookup Dictionary Examples."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryExampleTextItem?alt=com.azure.ai.translation.text.models.DictionaryExampleTextItem&text=DictionaryExampleTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<List<DictionaryExampleItem>> lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content)"
  desc: "Lookup Dictionary Examples."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryExampleItem?alt=com.azure.ai.translation.text.models.DictionaryExampleItem&text=DictionaryExampleItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamples(java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.DictionaryExampleTextItem>,java.lang.String)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content, String clientTraceId)"
  name: "lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content, String clientTraceId)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content, String clientTraceId)"
  summary: "Lookup Dictionary Examples."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryExampleTextItem?alt=com.azure.ai.translation.text.models.DictionaryExampleTextItem&text=DictionaryExampleTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<List<DictionaryExampleItem>> lookupDictionaryExamples(String from, String to, List<DictionaryExampleTextItem> content, String clientTraceId)"
  desc: "Lookup Dictionary Examples."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.DictionaryExampleItem?alt=com.azure.ai.translation.text.models.DictionaryExampleItem&text=DictionaryExampleItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamplesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.lookupDictionaryExamplesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  name: "lookupDictionaryExamplesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.lookupDictionaryExamplesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  summary: "Lookup Dictionary Examples."
  parameters:
  - description: "Specifies the language of the input text. The source language must be one of the supported languages\n     included in the dictionary scope."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the dictionary scope."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be sent to dictionary."
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> lookupDictionaryExamplesWithResponse(String from, String to, BinaryData content, RequestOptions requestOptions)"
  desc: "Lookup Dictionary Examples.\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                               |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n         translation: String (Required)\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         normalizedSource: String (Required)\n         normalizedTarget: String (Required)\n         examples (Required): [\n              (Required){\n                 sourcePrefix: String (Required)\n                 sourceTerm: String (Required)\n                 sourceSuffix: String (Required)\n                 targetPrefix: String (Required)\n                 targetTerm: String (Required)\n                 targetSuffix: String (Required)\n             }\n         ]\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.translate(java.util.List<java.lang.String>,java.util.List<com.azure.ai.translation.text.models.InputTextItem>)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.translate(List<String> to, List<InputTextItem> content)"
  name: "translate(List<String> to, List<InputTextItem> content)"
  nameWithType: "TextTranslationAsyncClient.translate(List<String> to, List<InputTextItem> content)"
  summary: "Translate Text."
  parameters:
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the translation scope. For example, use to=de to translate to German. It's possible to translate\n     to multiple languages simultaneously by repeating the parameter in the query string. For example, use\n     to=de&amp;to=it to translate to German and Italian."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Array of the text to be translated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<List<TranslatedTextItem>> translate(List<String> to, List<InputTextItem> content)"
  desc: "Translate Text."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.TranslatedTextItem?alt=com.azure.ai.translation.text.models.TranslatedTextItem&text=TranslatedTextItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.translate(java.util.List<java.lang.String>,java.util.List<com.azure.ai.translation.text.models.InputTextItem>,java.lang.String,java.lang.String,com.azure.ai.translation.text.models.TextType,java.lang.String,com.azure.ai.translation.text.models.ProfanityAction,com.azure.ai.translation.text.models.ProfanityMarker,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.translate(List<String> to, List<InputTextItem> content, String clientTraceId, String from, TextType textType, String category, ProfanityAction profanityAction, ProfanityMarker profanityMarker, Boolean includeAlignment, Boolean includeSentenceLength, String suggestedFrom, String fromScript, String toScript, Boolean allowFallback)"
  name: "translate(List<String> to, List<InputTextItem> content, String clientTraceId, String from, TextType textType, String category, ProfanityAction profanityAction, ProfanityMarker profanityMarker, Boolean includeAlignment, Boolean includeSentenceLength, String suggestedFrom, String fromScript, String toScript, Boolean allowFallback)"
  nameWithType: "TextTranslationAsyncClient.translate(List<String> to, List<InputTextItem> content, String clientTraceId, String from, TextType textType, String category, ProfanityAction profanityAction, ProfanityMarker profanityMarker, Boolean includeAlignment, Boolean includeSentenceLength, String suggestedFrom, String fromScript, String toScript, Boolean allowFallback)"
  summary: "Translate Text."
  parameters:
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the translation scope. For example, use to=de to translate to German. It's possible to translate\n     to multiple languages simultaneously by repeating the parameter in the query string. For example, use\n     to=de&amp;to=it to translate to German and Italian."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Array of the text to be translated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the language of the input text. Find which languages are available to translate from by\n     looking up supported languages using the translation scope. If the from parameter isn't specified, automatic\n     language detection is applied to determine the source language.\n     <p>You must use the from parameter rather than autodetection when using the dynamic dictionary feature. Note:\n     the dynamic dictionary feature is case-sensitive."
    name: "from"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a\n     well-formed, complete element. Possible values are: plain (default) or html."
    name: "textType"
    type: "<xref href=\"com.azure.ai.translation.text.models.TextType?alt=com.azure.ai.translation.text.models.TextType&text=TextType\" data-throw-if-not-resolved=\"False\" />"
  - description: "A string specifying the category (domain) of the translation. This parameter is used to get\n     translations from a customized system built with Custom Translator. Add the Category ID from your Custom\n     Translator project details to this parameter to use your deployed customized system. Default value is:\n     general."
    name: "category"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies how profanities should be treated in translations. Possible values are: NoAction\n     (default), Marked or Deleted."
    name: "profanityAction"
    type: "<xref href=\"com.azure.ai.translation.text.models.ProfanityAction?alt=com.azure.ai.translation.text.models.ProfanityAction&text=ProfanityAction\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies how profanities should be marked in translations. Possible values are: Asterisk\n     (default) or Tag."
    name: "profanityMarker"
    type: "<xref href=\"com.azure.ai.translation.text.models.ProfanityMarker?alt=com.azure.ai.translation.text.models.ProfanityMarker&text=ProfanityMarker\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies whether to include alignment projection from source text to translated text.\n     Possible values are: true or false (default)."
    name: "includeAlignment"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specifies whether to include sentence boundaries for the input text and the\n     translated text. Possible values are: true or false (default)."
    name: "includeSentenceLength"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Specifies a fallback language if the language of the input text can't be identified.\n     Language autodetection is applied when the from parameter is omitted. If detection fails, the suggestedFrom\n     language will be assumed."
    name: "suggestedFrom"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the script of the input text."
    name: "fromScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the script of the translated text."
    name: "toScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies that the service is allowed to fall back to a general system when a custom system\n     doesn't exist. Possible values are: true (default) or false.\n     <p>allowFallback=false specifies that the translation should only use systems trained for the category\n     specified by the request. If a translation for language X to language Y requires chaining through a pivot\n     language E, then all the systems in the chain (X \\u2192 E and E \\u2192 Y) will need to be custom and have the same\n     category. If no system is found with the specific category, the request will return a 400 status code.\n     allowFallback=true specifies that the service is allowed to fall back to a general system when a custom\n     system doesn't exist."
    name: "allowFallback"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Mono<List<TranslatedTextItem>> translate(List<String> to, List<InputTextItem> content, String clientTraceId, String from, TextType textType, String category, ProfanityAction profanityAction, ProfanityMarker profanityMarker, Boolean includeAlignment, Boolean includeSentenceLength, String suggestedFrom, String fromScript, String toScript, Boolean allowFallback)"
  desc: "Translate Text."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.TranslatedTextItem?alt=com.azure.ai.translation.text.models.TranslatedTextItem&text=TranslatedTextItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.translateWithResponse(java.util.List<java.lang.String>,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.translateWithResponse(List<String> to, BinaryData content, RequestOptions requestOptions)"
  name: "translateWithResponse(List<String> to, BinaryData content, RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.translateWithResponse(List<String> to, BinaryData content, RequestOptions requestOptions)"
  summary: "Translate Text."
  parameters:
  - description: "Specifies the language of the output text. The target language must be one of the supported languages\n     included in the translation scope. For example, use to=de to translate to German. It's possible to translate\n     to multiple languages simultaneously by repeating the parameter in the query string. For example, use\n     to=de&amp;to=it to translate to German and Italian."
    name: "to"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Array of the text to be translated."
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> translateWithResponse(List<String> to, BinaryData content, RequestOptions requestOptions)"
  desc: "Translate Text.\n\n**Query Parameters**\n\n    | --------------------- | ------- | -------- ||\n    | Name                  | Type    | Required | Description|\n    | from                  | String  | No       | Specifies the language of the input text. Find which languages are available to translate from by looking up supported languages using the translation scope. If the from parameter isn't specified, automatic language detection is applied to determine the source language. You must use the from parameter rather than autodetection when using the dynamic dictionary feature. Note: the dynamic dictionary feature is case-sensitive.                                                                                                                                                                                                                                                                                      |\n    | textType              | String  | No       | Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed, complete element. Possible values are: plain (default) or html. Allowed values: \"plain\", \"html|\n    | category              | String  | No       | A string specifying the category (domain) of the translation. This parameter is used to get translations from a customized system built with Custom Translator. Add the Category ID from your Custom Translator project details to this parameter to use your deployed customized system. Default value is: general.                                                                                                                                                                                                                                                                                                                                                                                                             |\n    | profanityAction       | String  | No       | Specifies how profanities should be treated in translations. Possible values are: NoAction (default), Marked or Deleted. Allowed values: \"NoAction\", \"Marked\", \"Deleted|\n    | profanityMarker       | String  | No       | Specifies how profanities should be marked in translations. Possible values are: Asterisk (default) or Tag. . Allowed values: \"Asterisk\", \"Tag|\n    | includeAlignment      | Boolean | No       | Specifies whether to include alignment projection from source text to translated text. Possible values are: true or false (default|\n    | includeSentenceLength | Boolean | No       | Specifies whether to include sentence boundaries for the input text and the translated text. Possible values are: true or false (default|\n    | suggestedFrom         | String  | No       | Specifies a fallback language if the language of the input text can't be identified. Language autodetection is applied when the from parameter is omitted. If detection fails, the suggestedFrom language will be assumed.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n    | fromScript            | String  | No       | Specifies the script of the input text|\n    | toScript              | String  | No       | Specifies the script of the translated text|\n    | allowFallback         | Boolean | No       | Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. Possible values are: true (default) or false. allowFallback=false specifies that the translation should only use systems trained for the category specified by the request. If a translation for language X to language Y requires chaining through a pivot language E, then all the systems in the chain (X \\\\u2192 E and E \\\\u2192 Y) will need to be custom and have the same category. If no system is found with the specific category, the request will return a 400 status code. allowFallback=true specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                               |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         detectedLanguage (Optional): {\n             language: String (Required)\n             score: double (Required)\n         }\n         translations (Required): [\n              (Required){\n                 to: String (Required)\n                 text: String (Required)\n                 transliteration (Optional): {\n                     text: String (Required)\n                     script: String (Required)\n                 }\n                 alignment (Optional): {\n                     proj: String (Required)\n                 }\n                 sentLen (Optional): {\n                     srcSentLen (Required): [\n                         int (Required)\n                     ]\n                     transSentLen (Required): [\n                         int (Required)\n                     ]\n                 }\n             }\n         ]\n         sourceText (Optional): {\n             text: String (Required)\n         }\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterate(java.lang.String,java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.InputTextItem>)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterate(String language, String fromScript, String toScript, List<InputTextItem> content)"
  name: "transliterate(String language, String fromScript, String toScript, List<InputTextItem> content)"
  nameWithType: "TextTranslationAsyncClient.transliterate(String language, String fromScript, String toScript, List<InputTextItem> content)"
  summary: "Transliterate Text."
  parameters:
  - description: "Specifies the language of the text to convert from one script to another. Possible languages are\n     listed in the transliteration scope obtained by querying the service for its supported languages."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the script used by the input text. Look up supported languages using the\n     transliteration scope, to find input scripts available for the selected language."
    name: "fromScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the output script. Look up supported languages using the transliteration scope, to find\n     output scripts available for the selected combination of input language and input script."
    name: "toScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be transliterated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<List<TransliteratedText>> transliterate(String language, String fromScript, String toScript, List<InputTextItem> content)"
  desc: "Transliterate Text."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.TransliteratedText?alt=com.azure.ai.translation.text.models.TransliteratedText&text=TransliteratedText\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterate(java.lang.String,java.lang.String,java.lang.String,java.util.List<com.azure.ai.translation.text.models.InputTextItem>,java.lang.String)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterate(String language, String fromScript, String toScript, List<InputTextItem> content, String clientTraceId)"
  name: "transliterate(String language, String fromScript, String toScript, List<InputTextItem> content, String clientTraceId)"
  nameWithType: "TextTranslationAsyncClient.transliterate(String language, String fromScript, String toScript, List<InputTextItem> content, String clientTraceId)"
  summary: "Transliterate Text."
  parameters:
  - description: "Specifies the language of the text to convert from one script to another. Possible languages are\n     listed in the transliteration scope obtained by querying the service for its supported languages."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the script used by the input text. Look up supported languages using the\n     transliteration scope, to find input scripts available for the selected language."
    name: "fromScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the output script. Look up supported languages using the transliteration scope, to find\n     output scripts available for the selected combination of input language and input script."
    name: "toScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be transliterated."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.InputTextItem?alt=com.azure.ai.translation.text.models.InputTextItem&text=InputTextItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A client-generated GUID to uniquely identify the request."
    name: "clientTraceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<List<TransliteratedText>> transliterate(String language, String fromScript, String toScript, List<InputTextItem> content, String clientTraceId)"
  desc: "Transliterate Text."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.translation.text.models.TransliteratedText?alt=com.azure.ai.translation.text.models.TransliteratedText&text=TransliteratedText\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.text.TextTranslationAsyncClient.transliterateWithResponse(String language, String fromScript, String toScript, BinaryData content, RequestOptions requestOptions)"
  name: "transliterateWithResponse(String language, String fromScript, String toScript, BinaryData content, RequestOptions requestOptions)"
  nameWithType: "TextTranslationAsyncClient.transliterateWithResponse(String language, String fromScript, String toScript, BinaryData content, RequestOptions requestOptions)"
  summary: "Transliterate Text."
  parameters:
  - description: "Specifies the language of the text to convert from one script to another. Possible languages are\n     listed in the transliteration scope obtained by querying the service for its supported languages."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the script used by the input text. Look up supported languages using the\n     transliteration scope, to find input scripts available for the selected language."
    name: "fromScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Specifies the output script. Look up supported languages using the transliteration scope, to find\n     output scripts available for the selected combination of input language and input script."
    name: "toScript"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Array of the text to be transliterated."
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> transliterateWithResponse(String language, String fromScript, String toScript, BinaryData content, RequestOptions requestOptions)"
  desc: "Transliterate Text.\n\n**Header Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                               |\n    | X-ClientTraceId | String | No       | A client-generated GUID to uniquely identify the request. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         text: String (Required)\n         script: String (Required)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous TextTranslationClient type."
metadata: {}
package: "com.azure.ai.translation.text"
artifact: com.azure:azure-ai-translation-text:1.0.0-beta.1
