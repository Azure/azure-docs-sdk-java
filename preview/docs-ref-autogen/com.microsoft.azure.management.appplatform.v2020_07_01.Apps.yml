### YamlMime:JavaType
uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps"
fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps"
name: "Apps"
nameWithType: "Apps"
summary: "Type representing Apps."
syntax: "public interface Apps extends SupportsCreating<AppResource.DefinitionStages.Blank>, HasInner<AppsInner>"
methods:
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.deleteAsync(String resourceGroupName, String serviceName, String appName)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String appName)"
  nameWithType: "Apps.deleteAsync(String resourceGroupName, String serviceName, String appName)"
  summary: "Operation to delete an App."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the App resource."
    name: "appName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String appName)"
  desc: "Operation to delete an App."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.getAsync(String resourceGroupName, String serviceName, String appName)"
  name: "getAsync(String resourceGroupName, String serviceName, String appName)"
  nameWithType: "Apps.getAsync(String resourceGroupName, String serviceName, String appName)"
  summary: "Get an App and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the App resource."
    name: "appName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AppResource> getAsync(String resourceGroupName, String serviceName, String appName)"
  desc: "Get an App and its properties."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.AppResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.AppResource&text=AppResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.getResourceUploadUrlAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.getResourceUploadUrlAsync(String resourceGroupName, String serviceName, String appName)"
  name: "getResourceUploadUrlAsync(String resourceGroupName, String serviceName, String appName)"
  nameWithType: "Apps.getResourceUploadUrlAsync(String resourceGroupName, String serviceName, String appName)"
  summary: "Get an resource upload URL for an App, which may be artifacts or source archive."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the App resource."
    name: "appName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ResourceUploadDefinition> getResourceUploadUrlAsync(String resourceGroupName, String serviceName, String appName)"
  desc: "Get an resource upload URL for an App, which may be artifacts or source archive."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.ResourceUploadDefinition?alt=com.microsoft.azure.management.appplatform.v2020_07_01.ResourceUploadDefinition&text=ResourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.listAsync(String resourceGroupName, String serviceName)"
  name: "listAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Apps.listAsync(String resourceGroupName, String serviceName)"
  summary: "Handles requests to list all resources in a Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AppResource> listAsync(String resourceGroupName, String serviceName)"
  desc: "Handles requests to list all resources in a Service."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.AppResource?alt=com.microsoft.azure.management.appplatform.v2020_07_01.AppResource&text=AppResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.validateDomainAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.Apps.validateDomainAsync(String resourceGroupName, String serviceName, String appName, String name)"
  name: "validateDomainAsync(String resourceGroupName, String serviceName, String appName, String name)"
  nameWithType: "Apps.validateDomainAsync(String resourceGroupName, String serviceName, String appName, String name)"
  summary: "Check the resource name is valid as well as not in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the App resource."
    name: "appName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name to be validated"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CustomDomainValidateResult> validateDomainAsync(String resourceGroupName, String serviceName, String appName, String name)"
  desc: "Check the resource name is valid as well as not in use."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.CustomDomainValidateResult?alt=com.microsoft.azure.management.appplatform.v2020_07_01.CustomDomainValidateResult&text=CustomDomainValidateResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Apps."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.AppResource.DefinitionStages.Blank?alt=com.microsoft.azure.management.appplatform.v2020_07_01.AppResource.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.implementation.AppsInner?alt=com.microsoft.azure.management.appplatform.v2020_07_01.implementation.AppsInner&text=AppsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.appplatform.v2020_07_01"
artifact: com.microsoft.azure.appplatform.v2020_07_01:azure-mgmt-appplatform:1.0.0-beta
