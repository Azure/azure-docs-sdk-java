### YamlMime:JavaType
uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource"
fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource"
name: "SqlContainerGetPropertiesResource"
nameWithType: "SqlContainerGetPropertiesResource"
summary: "The Sql<wbr>Container<wbr>Get<wbr>Properties<wbr>Resource model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource&text=SqlContainerResource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.analyticalStorageTtl()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.analyticalStorageTtl&text=analyticalStorageTtl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.clientEncryptionPolicy()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.clientEncryptionPolicy&text=clientEncryptionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.computedProperties()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.computedProperties&text=computedProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.conflictResolutionPolicy()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.conflictResolutionPolicy&text=conflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.createMode()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.createMode&text=createMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.defaultTtl()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.defaultTtl&text=defaultTtl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.id()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.id&text=id\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.indexingPolicy()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.indexingPolicy&text=indexingPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.materializedViewDefinition()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.materializedViewDefinition&text=materializedViewDefinition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.partitionKey()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.partitionKey&text=partitionKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.restoreParameters()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.restoreParameters&text=restoreParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.uniqueKeyPolicy()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.uniqueKeyPolicy&text=uniqueKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.validate()?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withAnalyticalStorageTtl(java.lang.Long)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withAnalyticalStorageTtl&text=withAnalyticalStorageTtl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withClientEncryptionPolicy(com.azure.resourcemanager.cosmos.models.ClientEncryptionPolicy)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withClientEncryptionPolicy&text=withClientEncryptionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withComputedProperties(java.util.List<com.azure.resourcemanager.cosmos.models.ComputedProperty>)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withComputedProperties&text=withComputedProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withConflictResolutionPolicy(com.azure.resourcemanager.cosmos.models.ConflictResolutionPolicy)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withConflictResolutionPolicy&text=withConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withCreateMode(com.azure.resourcemanager.cosmos.models.CreateMode)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withCreateMode&text=withCreateMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withDefaultTtl(java.lang.Integer)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withDefaultTtl&text=withDefaultTtl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withId(java.lang.String)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withId&text=withId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withIndexingPolicy(com.azure.resourcemanager.cosmos.models.IndexingPolicy)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withIndexingPolicy&text=withIndexingPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withMaterializedViewDefinition(com.azure.resourcemanager.cosmos.models.MaterializedViewDefinition)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withMaterializedViewDefinition&text=withMaterializedViewDefinition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withPartitionKey(com.azure.resourcemanager.cosmos.models.ContainerPartitionKey)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withPartitionKey&text=withPartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withRestoreParameters(com.azure.resourcemanager.cosmos.models.ResourceRestoreParameters)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withRestoreParameters&text=withRestoreParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource.withUniqueKeyPolicy(com.azure.resourcemanager.cosmos.models.UniqueKeyPolicy)?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource.withUniqueKeyPolicy&text=withUniqueKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SqlContainerGetPropertiesResource**</br> extends <xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerResource&text=SqlContainerResource\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.SqlContainerGetPropertiesResource()"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.SqlContainerGetPropertiesResource()"
  name: "SqlContainerGetPropertiesResource()"
  nameWithType: "SqlContainerGetPropertiesResource.SqlContainerGetPropertiesResource()"
  summary: "Creates an instance of Sql<wbr>Container<wbr>Get<wbr>Properties<wbr>Resource class."
  syntax: "public SqlContainerGetPropertiesResource()"
  desc: "Creates an instance of SqlContainerGetPropertiesResource class."
methods:
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.etag()"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.etag()"
  name: "etag()"
  nameWithType: "SqlContainerGetPropertiesResource.etag()"
  summary: "Get the etag property: A system generated property representing the resource etag required for optimistic concurrency control."
  syntax: "public String etag()"
  desc: "Get the etag property: A system generated property representing the resource etag required for optimistic concurrency control."
  returns:
    description: "the etag value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SqlContainerGetPropertiesResource.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Sql<wbr>Container<wbr>Get<wbr>Properties<wbr>Resource from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlContainerGetPropertiesResource fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SqlContainerGetPropertiesResource from the JsonReader."
  returns:
    description: "An instance of SqlContainerGetPropertiesResource if the JsonReader was pointing to an instance of it, or\n null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.rid()"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.rid()"
  name: "rid()"
  nameWithType: "SqlContainerGetPropertiesResource.rid()"
  summary: "Get the rid property: A system generated property."
  syntax: "public String rid()"
  desc: "Get the rid property: A system generated property. A unique identifier."
  returns:
    description: "the rid value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SqlContainerGetPropertiesResource.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.ts()"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.ts()"
  name: "ts()"
  nameWithType: "SqlContainerGetPropertiesResource.ts()"
  summary: "Get the ts property: A system generated property that denotes the last updated timestamp of the resource."
  syntax: "public Float ts()"
  desc: "Get the ts property: A system generated property that denotes the last updated timestamp of the resource."
  returns:
    description: "the ts value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.validate()"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.validate()"
  name: "validate()"
  nameWithType: "SqlContainerGetPropertiesResource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withAnalyticalStorageTtl(java.lang.Long)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withAnalyticalStorageTtl(Long analyticalStorageTtl)"
  name: "withAnalyticalStorageTtl(Long analyticalStorageTtl)"
  nameWithType: "SqlContainerGetPropertiesResource.withAnalyticalStorageTtl(Long analyticalStorageTtl)"
  summary: "Set the analytical<wbr>Storage<wbr>Ttl property: Analytical TTL."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withAnalyticalStorageTtl(java.lang.Long)"
  parameters:
  - name: "analyticalStorageTtl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public SqlContainerGetPropertiesResource withAnalyticalStorageTtl(Long analyticalStorageTtl)"
  desc: "Set the analyticalStorageTtl property: Analytical TTL."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withClientEncryptionPolicy(com.azure.resourcemanager.cosmos.models.ClientEncryptionPolicy)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withClientEncryptionPolicy(ClientEncryptionPolicy clientEncryptionPolicy)"
  name: "withClientEncryptionPolicy(ClientEncryptionPolicy clientEncryptionPolicy)"
  nameWithType: "SqlContainerGetPropertiesResource.withClientEncryptionPolicy(ClientEncryptionPolicy clientEncryptionPolicy)"
  summary: "Set the client<wbr>Encryption<wbr>Policy property: The client encryption policy for the container."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withClientEncryptionPolicy(com.azure.resourcemanager.cosmos.models.ClientEncryptionPolicy)"
  parameters:
  - name: "clientEncryptionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ClientEncryptionPolicy?alt=com.azure.resourcemanager.cosmos.models.ClientEncryptionPolicy&text=ClientEncryptionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withClientEncryptionPolicy(ClientEncryptionPolicy clientEncryptionPolicy)"
  desc: "Set the clientEncryptionPolicy property: The client encryption policy for the container."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withComputedProperties(java.util.List<com.azure.resourcemanager.cosmos.models.ComputedProperty>)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withComputedProperties(List<ComputedProperty> computedProperties)"
  name: "withComputedProperties(List<ComputedProperty> computedProperties)"
  nameWithType: "SqlContainerGetPropertiesResource.withComputedProperties(List<ComputedProperty> computedProperties)"
  summary: "Set the computed<wbr>Properties property: List of computed properties."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withComputedProperties(java.util.List<com.azure.resourcemanager.cosmos.models.ComputedProperty>)"
  parameters:
  - name: "computedProperties"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.cosmos.models.ComputedProperty?alt=com.azure.resourcemanager.cosmos.models.ComputedProperty&text=ComputedProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SqlContainerGetPropertiesResource withComputedProperties(List<ComputedProperty> computedProperties)"
  desc: "Set the computedProperties property: List of computed properties."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withConflictResolutionPolicy(com.azure.resourcemanager.cosmos.models.ConflictResolutionPolicy)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withConflictResolutionPolicy(ConflictResolutionPolicy conflictResolutionPolicy)"
  name: "withConflictResolutionPolicy(ConflictResolutionPolicy conflictResolutionPolicy)"
  nameWithType: "SqlContainerGetPropertiesResource.withConflictResolutionPolicy(ConflictResolutionPolicy conflictResolutionPolicy)"
  summary: "Set the conflict<wbr>Resolution<wbr>Policy property: The conflict resolution policy for the container."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withConflictResolutionPolicy(com.azure.resourcemanager.cosmos.models.ConflictResolutionPolicy)"
  parameters:
  - name: "conflictResolutionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ConflictResolutionPolicy?alt=com.azure.resourcemanager.cosmos.models.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withConflictResolutionPolicy(ConflictResolutionPolicy conflictResolutionPolicy)"
  desc: "Set the conflictResolutionPolicy property: The conflict resolution policy for the container."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withCreateMode(com.azure.resourcemanager.cosmos.models.CreateMode)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withCreateMode(CreateMode createMode)"
  name: "withCreateMode(CreateMode createMode)"
  nameWithType: "SqlContainerGetPropertiesResource.withCreateMode(CreateMode createMode)"
  summary: "Set the create<wbr>Mode property: Enum to indicate the mode of resource creation."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withCreateMode(com.azure.resourcemanager.cosmos.models.CreateMode)"
  parameters:
  - name: "createMode"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.CreateMode?alt=com.azure.resourcemanager.cosmos.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withCreateMode(CreateMode createMode)"
  desc: "Set the createMode property: Enum to indicate the mode of resource creation."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withDefaultTtl(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withDefaultTtl(Integer defaultTtl)"
  name: "withDefaultTtl(Integer defaultTtl)"
  nameWithType: "SqlContainerGetPropertiesResource.withDefaultTtl(Integer defaultTtl)"
  summary: "Set the default<wbr>Ttl property: Default time to live."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withDefaultTtl(java.lang.Integer)"
  parameters:
  - name: "defaultTtl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public SqlContainerGetPropertiesResource withDefaultTtl(Integer defaultTtl)"
  desc: "Set the defaultTtl property: Default time to live."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withId(String id)"
  name: "withId(String id)"
  nameWithType: "SqlContainerGetPropertiesResource.withId(String id)"
  summary: "Set the id property: Name of the Cosmos DB SQL container."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SqlContainerGetPropertiesResource withId(String id)"
  desc: "Set the id property: Name of the Cosmos DB SQL container."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withIndexingPolicy(com.azure.resourcemanager.cosmos.models.IndexingPolicy)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withIndexingPolicy(IndexingPolicy indexingPolicy)"
  name: "withIndexingPolicy(IndexingPolicy indexingPolicy)"
  nameWithType: "SqlContainerGetPropertiesResource.withIndexingPolicy(IndexingPolicy indexingPolicy)"
  summary: "Set the indexing<wbr>Policy property: The configuration of the indexing policy."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withIndexingPolicy(com.azure.resourcemanager.cosmos.models.IndexingPolicy)"
  parameters:
  - name: "indexingPolicy"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.IndexingPolicy?alt=com.azure.resourcemanager.cosmos.models.IndexingPolicy&text=IndexingPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withIndexingPolicy(IndexingPolicy indexingPolicy)"
  desc: "Set the indexingPolicy property: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withMaterializedViewDefinition(com.azure.resourcemanager.cosmos.models.MaterializedViewDefinition)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withMaterializedViewDefinition(MaterializedViewDefinition materializedViewDefinition)"
  name: "withMaterializedViewDefinition(MaterializedViewDefinition materializedViewDefinition)"
  nameWithType: "SqlContainerGetPropertiesResource.withMaterializedViewDefinition(MaterializedViewDefinition materializedViewDefinition)"
  summary: "Set the materialized<wbr>View<wbr>Definition property: The configuration for defining Materialized Views."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withMaterializedViewDefinition(com.azure.resourcemanager.cosmos.models.MaterializedViewDefinition)"
  parameters:
  - name: "materializedViewDefinition"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.MaterializedViewDefinition?alt=com.azure.resourcemanager.cosmos.models.MaterializedViewDefinition&text=MaterializedViewDefinition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withMaterializedViewDefinition(MaterializedViewDefinition materializedViewDefinition)"
  desc: "Set the materializedViewDefinition property: The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withPartitionKey(com.azure.resourcemanager.cosmos.models.ContainerPartitionKey)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withPartitionKey(ContainerPartitionKey partitionKey)"
  name: "withPartitionKey(ContainerPartitionKey partitionKey)"
  nameWithType: "SqlContainerGetPropertiesResource.withPartitionKey(ContainerPartitionKey partitionKey)"
  summary: "Set the partition<wbr>Key property: The configuration of the partition key to be used for partitioning data into multiple partitions."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withPartitionKey(com.azure.resourcemanager.cosmos.models.ContainerPartitionKey)"
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ContainerPartitionKey?alt=com.azure.resourcemanager.cosmos.models.ContainerPartitionKey&text=ContainerPartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withPartitionKey(ContainerPartitionKey partitionKey)"
  desc: "Set the partitionKey property: The configuration of the partition key to be used for partitioning data into multiple partitions."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withRestoreParameters(com.azure.resourcemanager.cosmos.models.ResourceRestoreParameters)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withRestoreParameters(ResourceRestoreParameters restoreParameters)"
  name: "withRestoreParameters(ResourceRestoreParameters restoreParameters)"
  nameWithType: "SqlContainerGetPropertiesResource.withRestoreParameters(ResourceRestoreParameters restoreParameters)"
  summary: "Set the restore<wbr>Parameters property: Parameters to indicate the information about the restore."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withRestoreParameters(com.azure.resourcemanager.cosmos.models.ResourceRestoreParameters)"
  parameters:
  - name: "restoreParameters"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.ResourceRestoreParameters?alt=com.azure.resourcemanager.cosmos.models.ResourceRestoreParameters&text=ResourceRestoreParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withRestoreParameters(ResourceRestoreParameters restoreParameters)"
  desc: "Set the restoreParameters property: Parameters to indicate the information about the restore."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withUniqueKeyPolicy(com.azure.resourcemanager.cosmos.models.UniqueKeyPolicy)"
  fullName: "com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource.withUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  name: "withUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  nameWithType: "SqlContainerGetPropertiesResource.withUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  summary: "Set the unique<wbr>Key<wbr>Policy property: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
  overridden: "com.azure.resourcemanager.cosmos.models.SqlContainerResource.withUniqueKeyPolicy(com.azure.resourcemanager.cosmos.models.UniqueKeyPolicy)"
  parameters:
  - name: "uniqueKeyPolicy"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.UniqueKeyPolicy?alt=com.azure.resourcemanager.cosmos.models.UniqueKeyPolicy&text=UniqueKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlContainerGetPropertiesResource withUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  desc: "Set the uniqueKeyPolicy property: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource?alt=com.azure.resourcemanager.cosmos.models.SqlContainerGetPropertiesResource&text=SqlContainerGetPropertiesResource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SqlContainerGetPropertiesResource model."
metadata: {}
package: "com.azure.resourcemanager.cosmos.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.43.0-beta.1
