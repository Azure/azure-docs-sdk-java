### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  id: RxPartitionKeyRangeCache
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches
  children:
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(com.azure.cosmos.implementation.AsyncDocumentClient,com.azure.cosmos.implementation.caches.RxCollectionCache)
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)
  langs:
  - java
  name: RxPartitionKeyRangeCache
  nameWithType: RxPartitionKeyRangeCache
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  type: Class
  package: com.azure.cosmos.implementation.caches
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public class RxPartitionKeyRangeCache implements IPartitionKeyRangeCache
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(com.azure.cosmos.implementation.AsyncDocumentClient,com.azure.cosmos.implementation.caches.RxCollectionCache)
  id: RxPartitionKeyRangeCache(com.azure.cosmos.implementation.AsyncDocumentClient,com.azure.cosmos.implementation.caches.RxCollectionCache)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)
  nameWithType: RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache*
  type: Constructor
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)
    parameters:
    - id: client
      type: com.azure.cosmos.implementation.AsyncDocumentClient
    - id: collectionCache
      type: com.azure.cosmos.implementation.caches.RxCollectionCache
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  id: tryGetOverlappingRangesAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)
  nameWithType: RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public Mono<Utils.ValueHolder<List<PartitionKeyRange>>> tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)
    parameters:
    - id: metaDataDiagnosticsContext
      type: com.azure.cosmos.implementation.MetadataDiagnosticsContext
    - id: collectionRid
      type: java.lang.String
    - id: range
      type: com.azure.cosmos.implementation.routing.Range<java.lang.String>
    - id: forceRefresh
      type: boolean
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>>>
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  id: tryGetPartitionKeyRangeByIdAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: tryGetPartitionKeyRangeByIdAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)
  nameWithType: RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public Mono<Utils.ValueHolder<PartitionKeyRange>> tryGetPartitionKeyRangeByIdAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)
    parameters:
    - id: metaDataDiagnosticsContext
      type: com.azure.cosmos.implementation.MetadataDiagnosticsContext
    - id: collectionResourceId
      type: java.lang.String
    - id: partitionKeyRangeId
      type: java.lang.String
    - id: forceRefresh
      type: boolean
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.PartitionKeyRange>>
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  id: tryGetRangeByPartitionKeyRangeId(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: tryGetRangeByPartitionKeyRangeId(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)
  nameWithType: RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public Mono<Utils.ValueHolder<PartitionKeyRange>> tryGetRangeByPartitionKeyRangeId(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)
    parameters:
    - id: metaDataDiagnosticsContext
      type: com.azure.cosmos.implementation.MetadataDiagnosticsContext
    - id: collectionRid
      type: java.lang.String
    - id: partitionKeyRangeId
      type: java.lang.String
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.PartitionKeyRange>>
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  id: tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)
  nameWithType: RxPartitionKeyRangeCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public Mono<Utils.ValueHolder<CollectionRoutingMap>> tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)
    parameters:
    - id: metaDataDiagnosticsContext
      type: com.azure.cosmos.implementation.MetadataDiagnosticsContext
    - id: collectionRid
      type: java.lang.String
    - id: previousValue
      type: com.azure.cosmos.implementation.routing.CollectionRoutingMap
    - id: forceRefreshCollectionRoutingMap
      type: boolean
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.routing.CollectionRoutingMap>>
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)
  id: tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache
  langs:
  - java
  name: tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)
  nameWithType: RxPartitionKeyRangeCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: public Mono<Utils.ValueHolder<CollectionRoutingMap>> tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)
    parameters:
    - id: metaDataDiagnosticsContext
      type: com.azure.cosmos.implementation.MetadataDiagnosticsContext
    - id: collectionRid
      type: java.lang.String
    - id: previousValue
      type: com.azure.cosmos.implementation.routing.CollectionRoutingMap
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.routing.CollectionRoutingMap>>
references:
- uid: com.azure.cosmos.implementation.AsyncDocumentClient
  name: AsyncDocumentClient
  nameWithType: AsyncDocumentClient
  fullName: com.azure.cosmos.implementation.AsyncDocumentClient
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache
  name: RxCollectionCache
  nameWithType: RxCollectionCache
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache*
  name: RxPartitionKeyRangeCache
  nameWithType: RxPartitionKeyRangeCache.RxPartitionKeyRangeCache
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache
  package: com.azure.cosmos.implementation.caches
- uid: com.azure.cosmos.implementation.MetadataDiagnosticsContext
  name: MetadataDiagnosticsContext
  nameWithType: MetadataDiagnosticsContext
  fullName: com.azure.cosmos.implementation.MetadataDiagnosticsContext
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.routing.CollectionRoutingMap
  name: CollectionRoutingMap
  nameWithType: CollectionRoutingMap
  fullName: com.azure.cosmos.implementation.routing.CollectionRoutingMap
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.routing.CollectionRoutingMap>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Utils.ValueHolder
    name: ValueHolder
    fullName: com.azure.cosmos.implementation.Utils.ValueHolder
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.routing.CollectionRoutingMap
    name: CollectionRoutingMap
    fullName: com.azure.cosmos.implementation.routing.CollectionRoutingMap
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync*
  name: tryLookupAsync
  nameWithType: RxPartitionKeyRangeCache.tryLookupAsync
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryLookupAsync
  package: com.azure.cosmos.implementation.caches
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.routing.Range<java.lang.String>
  spec.java:
  - uid: com.azure.cosmos.implementation.routing.Range
    name: Range
    fullName: com.azure.cosmos.implementation.routing.Range
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Utils.ValueHolder
    name: ValueHolder
    fullName: com.azure.cosmos.implementation.Utils.ValueHolder
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync*
  name: tryGetOverlappingRangesAsync
  nameWithType: RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync
  package: com.azure.cosmos.implementation.caches
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.PartitionKeyRange>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Utils.ValueHolder
    name: ValueHolder
    fullName: com.azure.cosmos.implementation.Utils.ValueHolder
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync*
  name: tryGetPartitionKeyRangeByIdAsync
  nameWithType: RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync
  package: com.azure.cosmos.implementation.caches
- uid: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId*
  name: tryGetRangeByPartitionKeyRangeId
  nameWithType: RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId
  fullName: com.azure.cosmos.implementation.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId
  package: com.azure.cosmos.implementation.caches
- uid: com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
  name: IPartitionKeyRangeCache
  nameWithType: IPartitionKeyRangeCache
  fullName: com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.azure.cosmos.implementation.Utils.ValueHolder
  name: Utils.ValueHolder
  nameWithType: Utils.ValueHolder
  fullName: com.azure.cosmos.implementation.Utils.ValueHolder
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.implementation.routing.Range
  name: Range
  nameWithType: Range
  fullName: com.azure.cosmos.implementation.routing.Range
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
