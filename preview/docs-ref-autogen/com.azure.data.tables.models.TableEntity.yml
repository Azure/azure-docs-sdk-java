### YamlMime:JavaType
uid: "com.azure.data.tables.models.TableEntity"
fullName: "com.azure.data.tables.models.TableEntity"
name: "TableEntity"
nameWithType: "TableEntity"
summary: "An entity within a table. A `TableEntity` can be used directly when interacting with the Tables service, with methods on the <xref uid=\"com.azure.data.tables.TableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.tables.TableClient\"></xref> and <xref uid=\"com.azure.data.tables.TableAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.tables.TableAsyncClient\"></xref> classes that accept and return `TableEntity` instances. After creating an instance, call the <xref uid=\"com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addProperty(String, Object)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.addProperties(java.util.Map&lt;java.lang.String,java.lang.Object&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addProperties(Map)\"></xref> methods to add properties to the entity. When retrieving an entity from the service, call the <xref uid=\"com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProperty(String)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.getProperties()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProperties()\"></xref> methods to access the entity's properties. As an alternative, developers can also create a subclass of `TableEntity` and add property getters and setters to it. If the properties' types are compatible with the Table service, they will automatically be included in any write operations, and will automatically be populated in any read operations. Any properties that expose enum types will be converted to string values for write operations, and will be converted back into enum values for read operations. See [Property Types][] for more information about data types supported by the Tables service.\n\n\n[Property Types]: https://msdn.microsoft.com/library/azure/dd179338.aspx#property-types"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TableEntity"
constructors:
- "com.azure.data.tables.models.TableEntity.TableEntity(java.lang.String,java.lang.String)"
methods:
- "com.azure.data.tables.models.TableEntity.addProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)"
- "com.azure.data.tables.models.TableEntity.getETag()"
- "com.azure.data.tables.models.TableEntity.getPartitionKey()"
- "com.azure.data.tables.models.TableEntity.getProperties()"
- "com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)"
- "com.azure.data.tables.models.TableEntity.getRowKey()"
- "com.azure.data.tables.models.TableEntity.getTimestamp()"
type: "class"
metadata: {}
package: "com.azure.data.tables.models"
artifact: com.azure:azure-data-tables:12.0.0-beta.3
