### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.models.TableEntity
  id: TableEntity
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models
  children:
  - com.azure.data.tables.models.TableEntity.TableEntity(java.lang.String,java.lang.String)
  - com.azure.data.tables.models.TableEntity.addProperties(java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)
  - com.azure.data.tables.models.TableEntity.getETag()
  - com.azure.data.tables.models.TableEntity.getPartitionKey()
  - com.azure.data.tables.models.TableEntity.getProperties()
  - com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)
  - com.azure.data.tables.models.TableEntity.getRowKey()
  - com.azure.data.tables.models.TableEntity.getTimestamp()
  langs:
  - java
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.azure.data.tables.models.TableEntity
  type: Class
  package: com.azure.data.tables.models
  summary: >-
    An entity within a table. A `TableEntity` can be used directly when interacting with the Tables service, with methods on the <xref uid="com.azure.data.tables.TableClient" data-throw-if-not-resolved="false">com.azure.data.tables.TableClient</xref> and <xref uid="com.azure.data.tables.TableAsyncClient" data-throw-if-not-resolved="false">com.azure.data.tables.TableAsyncClient</xref> classes that accept and return `TableEntity` instances. After creating an instance, call the <xref uid="com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)" data-throw-if-not-resolved="false">#addProperty(String, Object)</xref> or <xref uid="com.azure.data.tables.models.TableEntity.addProperties(java.util.Map&lt;java.lang.String,java.lang.Object&gt;)" data-throw-if-not-resolved="false">#addProperties(Map)</xref> methods to add properties to the entity. When retrieving an entity from the service, call the <xref uid="com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)" data-throw-if-not-resolved="false">#getProperty(String)</xref> or <xref uid="com.azure.data.tables.models.TableEntity.getProperties()" data-throw-if-not-resolved="false">#getProperties()</xref> methods to access the entity's properties. As an alternative, developers can also create a subclass of `TableEntity` and add property getters and setters to it. If the properties' types are compatible with the Table service, they will automatically be included in any write operations, and will automatically be populated in any read operations. Any properties that expose enum types will be converted to string values for write operations, and will be converted back into enum values for read operations. See [Property Types][] for more information about data types supported by the Tables service.



    [Property Types]: https://msdn.microsoft.com/library/azure/dd179338.aspx#property-types
  syntax:
    content: public class TableEntity
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.models.TableEntity.TableEntity()
  id: TableEntity()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: TableEntity()
  nameWithType: TableEntity.TableEntity()
  fullName: com.azure.data.tables.models.TableEntity.TableEntity()
  overload: com.azure.data.tables.models.TableEntity.TableEntity*
  type: Constructor
  package: com.azure.data.tables.models
  syntax:
    content: private TableEntity()
- uid: com.azure.data.tables.models.TableEntity.TableEntity(java.lang.String,java.lang.String)
  id: TableEntity(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: TableEntity(String partitionKey, String rowKey)
  nameWithType: TableEntity.TableEntity(String partitionKey, String rowKey)
  fullName: com.azure.data.tables.models.TableEntity.TableEntity(String partitionKey, String rowKey)
  overload: com.azure.data.tables.models.TableEntity.TableEntity*
  type: Constructor
  package: com.azure.data.tables.models
  summary: Construct a new `TableEntity`.
  syntax:
    content: public TableEntity(String partitionKey, String rowKey)
    parameters:
    - id: partitionKey
      type: java.lang.String
      description: The partition key of the entity.
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
- uid: com.azure.data.tables.models.TableEntity.addProperties(java.util.Map<java.lang.String,java.lang.Object>)
  id: addProperties(java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: addProperties(Map<String,Object> properties)
  nameWithType: TableEntity.addProperties(Map<String,Object> properties)
  fullName: com.azure.data.tables.models.TableEntity.addProperties(Map<String,Object> properties)
  overload: com.azure.data.tables.models.TableEntity.addProperties*
  type: Method
  package: com.azure.data.tables.models
  summary: Adds the contents of the provided map to the entity's properties map.
  syntax:
    content: public final TableEntity addProperties(Map<String,Object> properties)
    parameters:
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: The map of properties to add.
    return:
      type: com.azure.data.tables.models.TableEntity
      description: The updated <xref uid="com.azure.data.tables.models.TableEntity" data-throw-if-not-resolved="false">TableEntity</xref>.
- uid: com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)
  id: addProperty(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: addProperty(String key, Object value)
  nameWithType: TableEntity.addProperty(String key, Object value)
  fullName: com.azure.data.tables.models.TableEntity.addProperty(String key, Object value)
  overload: com.azure.data.tables.models.TableEntity.addProperty*
  type: Method
  package: com.azure.data.tables.models
  summary: Adds a single property to the entity's properties map.
  syntax:
    content: public final TableEntity addProperty(String key, Object value)
    parameters:
    - id: key
      type: java.lang.String
      description: Key for the property.
    - id: value
      type: java.lang.Object
      description: Value of the property.
    return:
      type: com.azure.data.tables.models.TableEntity
      description: The updated <xref uid="com.azure.data.tables.models.TableEntity" data-throw-if-not-resolved="false">TableEntity</xref>.
- uid: com.azure.data.tables.models.TableEntity.getETag()
  id: getETag()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getETag()
  nameWithType: TableEntity.getETag()
  fullName: com.azure.data.tables.models.TableEntity.getETag()
  overload: com.azure.data.tables.models.TableEntity.getETag*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets the entity's eTag. The eTag is automatically populated by the service. New `TableEntity` instances will not have an eTag, but an eTag will be present on any `TableEntity` returned from the service.
  syntax:
    content: public final String getETag()
    return:
      type: java.lang.String
      description: The entity's eTag.
- uid: com.azure.data.tables.models.TableEntity.getPartitionKey()
  id: getPartitionKey()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getPartitionKey()
  nameWithType: TableEntity.getPartitionKey()
  fullName: com.azure.data.tables.models.TableEntity.getPartitionKey()
  overload: com.azure.data.tables.models.TableEntity.getPartitionKey*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets the entity's partition key.
  syntax:
    content: public final String getPartitionKey()
    return:
      type: java.lang.String
      description: The entity's partition key.
- uid: com.azure.data.tables.models.TableEntity.getProperties()
  id: getProperties()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getProperties()
  nameWithType: TableEntity.getProperties()
  fullName: com.azure.data.tables.models.TableEntity.getProperties()
  overload: com.azure.data.tables.models.TableEntity.getProperties*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets the map of the entity's properties. Only properties that have been added by calling <xref uid="com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)" data-throw-if-not-resolved="false">#addProperty(String, Object)</xref> or <xref uid="com.azure.data.tables.models.TableEntity.addProperties(java.util.Map&lt;java.lang.String,java.lang.Object&gt;)" data-throw-if-not-resolved="false">#addProperties(Map)</xref> will be returned from this method. Calling this method on a subclass of `TableEntity` will not retrieve properties which are being supplied via a getter methods on the subclass.
  syntax:
    content: public final Map<String,Object> getProperties()
    return:
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: A map of all properties representing this entity, including system properties.
- uid: com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)
  id: getProperty(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getProperty(String key)
  nameWithType: TableEntity.getProperty(String key)
  fullName: com.azure.data.tables.models.TableEntity.getProperty(String key)
  overload: com.azure.data.tables.models.TableEntity.getProperty*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets a single property from the entity's properties map. Only properties that have been added by calling <xref uid="com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)" data-throw-if-not-resolved="false">#addProperty(String, Object)</xref> or <xref uid="com.azure.data.tables.models.TableEntity.addProperties(java.util.Map&lt;java.lang.String,java.lang.Object&gt;)" data-throw-if-not-resolved="false">#addProperties(Map)</xref> will be returned from this method. Calling this method on a subclass of `TableEntity` will not retrieve a property which is being supplied via a getter method on the subclass.
  syntax:
    content: public final Object getProperty(String key)
    parameters:
    - id: key
      type: java.lang.String
      description: Key for the property.
    return:
      type: java.lang.Object
      description: Value of the property.
- uid: com.azure.data.tables.models.TableEntity.getRowKey()
  id: getRowKey()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getRowKey()
  nameWithType: TableEntity.getRowKey()
  fullName: com.azure.data.tables.models.TableEntity.getRowKey()
  overload: com.azure.data.tables.models.TableEntity.getRowKey*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets the entity's row key.
  syntax:
    content: public final String getRowKey()
    return:
      type: java.lang.String
      description: The entity's row key.
- uid: com.azure.data.tables.models.TableEntity.getTimestamp()
  id: getTimestamp()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.models.TableEntity
  langs:
  - java
  name: getTimestamp()
  nameWithType: TableEntity.getTimestamp()
  fullName: com.azure.data.tables.models.TableEntity.getTimestamp()
  overload: com.azure.data.tables.models.TableEntity.getTimestamp*
  type: Method
  package: com.azure.data.tables.models
  summary: Gets the entity's timestamp. The timestamp is automatically populated by the service. New `TableEntity` instances will not have a timestamp, but a timestamp will be present on any `TableEntity` returned from the service.
  syntax:
    content: public final OffsetDateTime getTimestamp()
    return:
      type: java.time.OffsetDateTime
      description: The entity's timestamp.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.models.TableEntity.TableEntity*
  name: TableEntity
  nameWithType: TableEntity.TableEntity
  fullName: com.azure.data.tables.models.TableEntity.TableEntity
  package: com.azure.data.tables.models
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.data.tables.models.TableEntity.getProperty*
  name: getProperty
  nameWithType: TableEntity.getProperty
  fullName: com.azure.data.tables.models.TableEntity.getProperty
  package: com.azure.data.tables.models
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.models.TableEntity.getProperties*
  name: getProperties
  nameWithType: TableEntity.getProperties
  fullName: com.azure.data.tables.models.TableEntity.getProperties
  package: com.azure.data.tables.models
- uid: com.azure.data.tables.models.TableEntity.addProperty*
  name: addProperty
  nameWithType: TableEntity.addProperty
  fullName: com.azure.data.tables.models.TableEntity.addProperty
  package: com.azure.data.tables.models
- uid: com.azure.data.tables.models.TableEntity.addProperties*
  name: addProperties
  nameWithType: TableEntity.addProperties
  fullName: com.azure.data.tables.models.TableEntity.addProperties
  package: com.azure.data.tables.models
- uid: com.azure.data.tables.models.TableEntity.getRowKey*
  name: getRowKey
  nameWithType: TableEntity.getRowKey
  fullName: com.azure.data.tables.models.TableEntity.getRowKey
  package: com.azure.data.tables.models
- uid: com.azure.data.tables.models.TableEntity.getPartitionKey*
  name: getPartitionKey
  nameWithType: TableEntity.getPartitionKey
  fullName: com.azure.data.tables.models.TableEntity.getPartitionKey
  package: com.azure.data.tables.models
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.data.tables.models.TableEntity.getTimestamp*
  name: getTimestamp
  nameWithType: TableEntity.getTimestamp
  fullName: com.azure.data.tables.models.TableEntity.getTimestamp
  package: com.azure.data.tables.models
- uid: com.azure.data.tables.models.TableEntity.getETag*
  name: getETag
  nameWithType: TableEntity.getETag
  fullName: com.azure.data.tables.models.TableEntity.getETag
  package: com.azure.data.tables.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
