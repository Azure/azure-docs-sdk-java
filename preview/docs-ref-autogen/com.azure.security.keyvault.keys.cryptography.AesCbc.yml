### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc
  id: AesCbc
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography
  children:
  - com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc(java.lang.String,int)
  - com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[],byte[],byte[],byte[])
  - com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[],byte[],byte[],byte[],java.security.Provider)
  - com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[],byte[],byte[])
  - com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[],byte[],byte[],java.security.Provider)
  langs:
  - java
  name: AesCbc
  nameWithType: AesCbc
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc
  type: Class
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: abstract class AesCbc extends SymmetricEncryptionAlgorithm
  inheritance:
  - java.lang.Object
  - com.azure.security.keyvault.keys.cryptography.Algorithm
  - com.azure.security.keyvault.keys.cryptography.LocalEncryptionAlgorithm
  - com.azure.security.keyvault.keys.cryptography.SymmetricEncryptionAlgorithm
  inheritedMembers:
  - com.azure.security.keyvault.keys.cryptography.Algorithm.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc(java.lang.String,int)
  id: AesCbc(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography.AesCbc
  langs:
  - java
  name: AesCbc(String name, int size)
  nameWithType: AesCbc.AesCbc(String name, int size)
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc(String name, int size)
  overload: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc*
  type: Constructor
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: protected AesCbc(String name, int size)
    parameters:
    - id: name
      type: java.lang.String
    - id: size
      type: int
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[],byte[],byte[],byte[])
  id: createDecryptor(byte[],byte[],byte[],byte[])
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography.AesCbc
  langs:
  - java
  name: createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  nameWithType: AesCbc.createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  overload: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: public ICryptoTransform createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
    parameters:
    - id: key
      type: byte[]
    - id: iv
      type: byte[]
    - id: authenticationData
      type: byte[]
    - id: authenticationTag
      type: byte[]
    return:
      type: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
  exceptions:
  - type: java.security.InvalidKeyException
  - type: java.security.NoSuchAlgorithmException
  - type: javax.crypto.NoSuchPaddingException
  - type: java.security.InvalidAlgorithmParameterException
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[],byte[],byte[],byte[],java.security.Provider)
  id: createDecryptor(byte[],byte[],byte[],byte[],java.security.Provider)
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography.AesCbc
  langs:
  - java
  name: createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  nameWithType: AesCbc.createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  overload: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: public ICryptoTransform createDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
    parameters:
    - id: key
      type: byte[]
    - id: iv
      type: byte[]
    - id: authenticationData
      type: byte[]
    - id: authenticationTag
      type: byte[]
    - id: provider
      type: java.security.Provider
    return:
      type: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
  exceptions:
  - type: java.security.InvalidKeyException
  - type: java.security.NoSuchAlgorithmException
  - type: javax.crypto.NoSuchPaddingException
  - type: java.security.InvalidAlgorithmParameterException
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[],byte[],byte[])
  id: createEncryptor(byte[],byte[],byte[])
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography.AesCbc
  langs:
  - java
  name: createEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  nameWithType: AesCbc.createEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  overload: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: public ICryptoTransform createEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
    parameters:
    - id: key
      type: byte[]
    - id: iv
      type: byte[]
    - id: authenticationData
      type: byte[]
    return:
      type: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
  exceptions:
  - type: java.security.InvalidKeyException
  - type: java.security.NoSuchAlgorithmException
  - type: javax.crypto.NoSuchPaddingException
  - type: java.security.InvalidAlgorithmParameterException
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[],byte[],byte[],java.security.Provider)
  id: createEncryptor(byte[],byte[],byte[],java.security.Provider)
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.1
  parent: com.azure.security.keyvault.keys.cryptography.AesCbc
  langs:
  - java
  name: createEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  nameWithType: AesCbc.createEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  overload: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: public ICryptoTransform createEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
    parameters:
    - id: key
      type: byte[]
    - id: iv
      type: byte[]
    - id: authenticationData
      type: byte[]
    - id: provider
      type: java.security.Provider
    return:
      type: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
  exceptions:
  - type: java.security.InvalidKeyException
  - type: java.security.NoSuchAlgorithmException
  - type: javax.crypto.NoSuchPaddingException
  - type: java.security.InvalidAlgorithmParameterException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc*
  name: AesCbc
  nameWithType: AesCbc.AesCbc
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbc
  package: com.azure.security.keyvault.keys.cryptography
- uid: java.security.InvalidKeyException
  spec.java:
  - uid: java.security.InvalidKeyException
    name: InvalidKeyException
    fullName: java.security.InvalidKeyException
- uid: java.security.NoSuchAlgorithmException
  spec.java:
  - uid: java.security.NoSuchAlgorithmException
    name: NoSuchAlgorithmException
    fullName: java.security.NoSuchAlgorithmException
- uid: javax.crypto.NoSuchPaddingException
  spec.java:
  - uid: javax.crypto.NoSuchPaddingException
    name: NoSuchPaddingException
    fullName: javax.crypto.NoSuchPaddingException
- uid: java.security.InvalidAlgorithmParameterException
  spec.java:
  - uid: java.security.InvalidAlgorithmParameterException
    name: InvalidAlgorithmParameterException
    fullName: java.security.InvalidAlgorithmParameterException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: com.azure.security.keyvault.keys.cryptography.ICryptoTransform
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor*
  name: createEncryptor
  nameWithType: AesCbc.createEncryptor
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createEncryptor
  package: com.azure.security.keyvault.keys.cryptography
- uid: java.security.Provider
  spec.java:
  - uid: java.security.Provider
    name: Provider
    fullName: java.security.Provider
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor*
  name: createDecryptor
  nameWithType: AesCbc.createDecryptor
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.createDecryptor
  package: com.azure.security.keyvault.keys.cryptography
- uid: com.azure.security.keyvault.keys.cryptography.SymmetricEncryptionAlgorithm
  name: SymmetricEncryptionAlgorithm
  nameWithType: SymmetricEncryptionAlgorithm
  fullName: com.azure.security.keyvault.keys.cryptography.SymmetricEncryptionAlgorithm
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.keys.cryptography.Algorithm.getName()
  name: Algorithm.getName()
  nameWithType: Algorithm.getName()
  fullName: com.azure.security.keyvault.keys.cryptography.Algorithm.getName()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbcDecryptor
  name: AesCbc.AesCbcDecryptor
  nameWithType: AesCbc.AesCbcDecryptor
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbcDecryptor
- uid: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbcEncryptor
  name: AesCbc.AesCbcEncryptor
  nameWithType: AesCbc.AesCbcEncryptor
  fullName: com.azure.security.keyvault.keys.cryptography.AesCbc.AesCbcEncryptor
