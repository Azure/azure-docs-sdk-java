### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder"
fullName: "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder"
name: "CharEscaperBuilder"
nameWithType: "CharEscaperBuilder"
summary: "Simple helper class to build a \"sparse\" array of objects based on the indexes that were added to it. The array will be from 0 to the maximum index given. All non-set indexes will contain null (so it's not really a sparse array, just a pseudo sparse array). The builder can also return a CharEscaper based on the generated array."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CharEscaperBuilder"
constructors:
- "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder()"
methods:
- "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape(char,java.lang.String)"
- "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes(char[],java.lang.String)"
- "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray()"
- "com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
