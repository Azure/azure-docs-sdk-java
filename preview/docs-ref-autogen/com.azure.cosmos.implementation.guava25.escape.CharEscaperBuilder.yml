### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  id: CharEscaperBuilder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape
  children:
  - com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder()
  - com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape(char,java.lang.String)
  - com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes(char[],java.lang.String)
  - com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray()
  - com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper()
  langs:
  - java
  name: CharEscaperBuilder
  nameWithType: CharEscaperBuilder
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  type: Class
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Simple helper class to build a "sparse" array of objects based on the indexes that were added to it. The array will be from 0 to the maximum index given. All non-set indexes will contain null (so it's not really a sparse array, just a pseudo sparse array). The builder can also return a CharEscaper based on the generated array.
  syntax:
    content: public final class CharEscaperBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder()
  id: CharEscaperBuilder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  langs:
  - java
  name: CharEscaperBuilder()
  nameWithType: CharEscaperBuilder.CharEscaperBuilder()
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder()
  overload: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Construct a new sparse array builder.
  syntax:
    content: public CharEscaperBuilder()
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape(char,java.lang.String)
  id: addEscape(char,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  langs:
  - java
  name: addEscape(char c, String r)
  nameWithType: CharEscaperBuilder.addEscape(char c, String r)
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape(char c, String r)
  overload: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Add a new mapping from an index to an object to the escaping.
  syntax:
    content: public CharEscaperBuilder addEscape(char c, String r)
    parameters:
    - id: c
      type: char
    - id: r
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes(char[],java.lang.String)
  id: addEscapes(char[],java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  langs:
  - java
  name: addEscapes(char[] cs, String r)
  nameWithType: CharEscaperBuilder.addEscapes(char[] cs, String r)
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes(char[] cs, String r)
  overload: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Add multiple mappings at once for a particular index.
  syntax:
    content: public CharEscaperBuilder addEscapes(char[] cs, String r)
    parameters:
    - id: cs
      type: char[]
    - id: r
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray()
  id: toArray()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  langs:
  - java
  name: toArray()
  nameWithType: CharEscaperBuilder.toArray()
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray()
  overload: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Convert this builder into an array of char\[\]s where the maximum index is the value of the highest character that has been seen. The array will be sparse in the sense that any unseen index will default to null.
  syntax:
    content: public char[][] toArray()
    return:
      type: char[][]
      description: a "sparse" array that holds the replacement mappings.
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper()
  id: toEscaper()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder
  langs:
  - java
  name: toEscaper()
  nameWithType: CharEscaperBuilder.toEscaper()
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper()
  overload: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Convert this builder into a char escaper which is just a decorator around the underlying array of replacement char\[\]s.
  syntax:
    content: public Escaper toEscaper()
    return:
      type: com.azure.cosmos.implementation.guava25.escape.Escaper
      description: an escaper that escapes based on the underlying array.
references:
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder*
  name: CharEscaperBuilder
  nameWithType: CharEscaperBuilder.CharEscaperBuilder
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.CharEscaperBuilder
  package: com.azure.cosmos.implementation.guava25.escape
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape*
  name: addEscape
  nameWithType: CharEscaperBuilder.addEscape
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscape
  package: com.azure.cosmos.implementation.guava25.escape
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes*
  name: addEscapes
  nameWithType: CharEscaperBuilder.addEscapes
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.addEscapes
  package: com.azure.cosmos.implementation.guava25.escape
- uid: char[][]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray*
  name: toArray
  nameWithType: CharEscaperBuilder.toArray
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toArray
  package: com.azure.cosmos.implementation.guava25.escape
- uid: com.azure.cosmos.implementation.guava25.escape.Escaper
  name: Escaper
  nameWithType: Escaper
  fullName: com.azure.cosmos.implementation.guava25.escape.Escaper
- uid: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper*
  name: toEscaper
  nameWithType: CharEscaperBuilder.toEscaper
  fullName: com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder.toEscaper
  package: com.azure.cosmos.implementation.guava25.escape
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
