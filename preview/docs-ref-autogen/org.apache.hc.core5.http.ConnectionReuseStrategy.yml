### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.ConnectionReuseStrategy
  id: ConnectionReuseStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http
  children:
  - org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: ConnectionReuseStrategy
  nameWithType: ConnectionReuseStrategy
  fullName: org.apache.hc.core5.http.ConnectionReuseStrategy
  type: Interface
  package: org.apache.hc.core5.http
  summary: >-
    Interface for deciding whether a connection can be re-used for subsequent requests and should be kept alive.


    Implementations of this interface must be thread-safe. Access to shared data must be synchronized as methods of this interface may be executed from multiple threads.
  syntax:
    content: public interface ConnectionReuseStrategy
- uid: org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  id: keepAlive(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ConnectionReuseStrategy
  langs:
  - java
  name: keepAlive(HttpRequest request, HttpResponse response, HttpContext context)
  nameWithType: ConnectionReuseStrategy.keepAlive(HttpRequest request, HttpResponse response, HttpContext context)
  fullName: org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive(HttpRequest request, HttpResponse response, HttpContext context)
  overload: org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive*
  type: Method
  package: org.apache.hc.core5.http
  summary: >-
    Decides whether a connection can be kept open after a request. If this method returns `false`, the caller MUST close the connection to correctly comply with the HTTP protocol. If it returns `true`, the caller SHOULD attempt to keep the connection open for reuse with another request.


    One can use the HTTP context to retrieve additional objects that may be relevant for the keep-alive strategy: the actual HTTP connection, the original HTTP request, target host if known, number of times the connection has been reused already and so on.


    If the connection is already closed, `false` is returned. The stale connection check MUST NOT be triggered by a connection reuse strategy.
  syntax:
    content: public abstract boolean keepAlive(HttpRequest request, HttpResponse response, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
      description: The last request transmitted over that connection.
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: The last response transmitted over that connection.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: >-
        the context in which the connection is being
                  used.
    return:
      type: boolean
      description: >-
        <code>true</code> if the connection is allowed to be reused, or
                 <code>false</code> if it MUST NOT be reused
references:
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive*
  name: keepAlive
  nameWithType: ConnectionReuseStrategy.keepAlive
  fullName: org.apache.hc.core5.http.ConnectionReuseStrategy.keepAlive
  package: org.apache.hc.core5.http
