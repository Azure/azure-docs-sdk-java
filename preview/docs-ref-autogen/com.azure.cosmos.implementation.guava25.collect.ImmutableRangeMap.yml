### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  id: ImmutableRangeMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>builder()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>copyOf(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>of()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>of(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<T,K,V>toImmutableRangeMap(java.util.function.Function<? super T,com.azure.cosmos.implementation.guava25.collect.Range<K>>,java.util.function.Function<? super T,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asMapOfRanges()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.get(K)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.getEntry(K)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.put(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putAll(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putCoalescing(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.remove(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.span()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.subRangeMap(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toString()
  langs:
  - java
  name: ImmutableRangeMap<K,V>
  nameWithType: ImmutableRangeMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A <xref uid="com.azure.cosmos.implementation.guava25.collect.RangeMap" data-throw-if-not-resolved="false">RangeMap</xref> whose contents will never change, with many other important properties detailed at <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableCollection" data-throw-if-not-resolved="false">ImmutableCollection</xref>.
  syntax:
    content: public class ImmutableRangeMap<K,V> implements RangeMap<K,V>, Serializable
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>builder()
  id: <K,V>builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: <K,V>builder()
  nameWithType: ImmutableRangeMap<K,V>.<K,V>builder()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>builder()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.builder*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new builder for an immutable range map.
  syntax:
    content: public static ImmutableRangeMap.Builder<K,V> <K,V>builder()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>copyOf(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>)
  id: <K,V>copyOf(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: <K,V>copyOf(RangeMap<K,? extends V> rangeMap)
  nameWithType: ImmutableRangeMap<K,V>.<K,V>copyOf(RangeMap<K,? extends V> rangeMap)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>copyOf(RangeMap<K,? extends V> rangeMap)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.copyOf*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public static ImmutableRangeMap<K,V> <K,V>copyOf(RangeMap<K,? extends V> rangeMap)
    parameters:
    - id: rangeMap
      type: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>of()
  id: <K,V>of()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: <K,V>of()
  nameWithType: ImmutableRangeMap<K,V>.<K,V>of()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>of()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.of*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an empty immutable range map.
  syntax:
    content: public static ImmutableRangeMap<K,V> <K,V>of()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>of(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  id: <K,V>of(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: <K,V>of(Range<K> range, V value)
  nameWithType: ImmutableRangeMap<K,V>.<K,V>of(Range<K> range, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>of(Range<K> range, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.of*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an immutable range map mapping a single range to a single value.
  syntax:
    content: public static ImmutableRangeMap<K,V> <K,V>of(Range<K> range, V value)
    parameters:
    - id: range
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
    - id: value
      type: V
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<T,K,V>toImmutableRangeMap(java.util.function.Function<? super T,com.azure.cosmos.implementation.guava25.collect.Range<K>>,java.util.function.Function<? super T,? extends V>)
  id: <T,K,V>toImmutableRangeMap(java.util.function.Function<? super T,com.azure.cosmos.implementation.guava25.collect.Range<K>>,java.util.function.Function<? super T,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: <T,K,V>toImmutableRangeMap(Function<? super T,Range<K>> keyFunction, Function<? super T,? extends V> valueFunction)
  nameWithType: ImmutableRangeMap<K,V>.<T,K,V>toImmutableRangeMap(Function<? super T,Range<K>> keyFunction, Function<? super T,? extends V> valueFunction)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<T,K,V>toImmutableRangeMap(Function<? super T,Range<K>> keyFunction, Function<? super T,? extends V> valueFunction)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toImmutableRangeMap*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a `Collector` that accumulates the input elements into a new `ImmutableRangeMap`. As in <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder" data-throw-if-not-resolved="false">Builder</xref>, overlapping ranges are not permitted.
  syntax:
    content: public static Collector<T,?,ImmutableRangeMap<K,V>> <T,K,V>toImmutableRangeMap(Function<? super T,Range<K>> keyFunction, Function<? super T,? extends V> valueFunction)
    parameters:
    - id: keyFunction
      type: java.util.function.Function<? super T,com.azure.cosmos.implementation.guava25.collect.Range<K>>
    - id: valueFunction
      type: java.util.function.Function<? super T,? extends V>
    return:
      type: java.util.stream.Collector<T,?,com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.ImmutableRangeMap(com.azure.cosmos.implementation.guava25.collect.ImmutableList<com.azure.cosmos.implementation.guava25.collect.Range<K>>,com.azure.cosmos.implementation.guava25.collect.ImmutableList<V>)
  id: ImmutableRangeMap(com.azure.cosmos.implementation.guava25.collect.ImmutableList<com.azure.cosmos.implementation.guava25.collect.Range<K>>,com.azure.cosmos.implementation.guava25.collect.ImmutableList<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: ImmutableRangeMap(ImmutableList<Range<K>> ranges, ImmutableList<V> values)
  nameWithType: ImmutableRangeMap<K,V>.ImmutableRangeMap(ImmutableList<Range<K>> ranges, ImmutableList<V> values)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.ImmutableRangeMap(ImmutableList<Range<K>> ranges, ImmutableList<V> values)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.ImmutableRangeMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: " ImmutableRangeMap(ImmutableList<Range<K>> ranges, ImmutableList<V> values)"
    parameters:
    - id: ranges
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableList<com.azure.cosmos.implementation.guava25.collect.Range<K>>
    - id: values
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableList<V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges()
  id: asDescendingMapOfRanges()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: asDescendingMapOfRanges()
  nameWithType: ImmutableRangeMap<K,V>.asDescendingMapOfRanges()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asDescendingMapOfRanges()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this range map as an unmodifiable `Map, V>`. Modifications to this range map are guaranteed to read through to the returned `Map`.


    The returned `Map` iterates over entries in descending order of the bounds of the `Range` entries.


    It is guaranteed that no empty ranges will be in the returned `Map`.
  syntax:
    content: public ImmutableMap<Range<K>,V> asDescendingMapOfRanges()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMap<com.azure.cosmos.implementation.guava25.collect.Range<K>,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asMapOfRanges()
  id: asMapOfRanges()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: asMapOfRanges()
  nameWithType: ImmutableRangeMap<K,V>.asMapOfRanges()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asMapOfRanges()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asMapOfRanges*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this range map as an unmodifiable `Map, V>`. Modifications to this range map are guaranteed to read through to the returned `Map`.


    The returned `Map` iterates over entries in ascending order of the bounds of the `Range` entries.


    It is guaranteed that no empty ranges will be in the returned `Map`.
  syntax:
    content: public ImmutableMap<Range<K>,V> asMapOfRanges()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMap<com.azure.cosmos.implementation.guava25.collect.Range<K>,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: clear()
  nameWithType: ImmutableRangeMap<K,V>.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.clear()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.clear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the `RangeMap` unmodified.
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: equals(Object o)
  nameWithType: ImmutableRangeMap<K,V>.equals(Object o)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.equals(Object o)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns `true` if `obj` is another `RangeMap` that has an equivalent <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asMapOfRanges()" data-throw-if-not-resolved="false">#asMapOfRanges()</xref>.
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.get(K)
  id: get(K)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: get(K key)
  nameWithType: ImmutableRangeMap<K,V>.get(K key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.get(K key)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.get*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the value associated with the specified key, or `null` if there is no such value.


    Specifically, if any range in this range map contains the specified key, the value associated with that range is returned.
  syntax:
    content: public V get(K key)
    parameters:
    - id: key
      type: K
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.getEntry(K)
  id: getEntry(K)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: getEntry(K key)
  nameWithType: ImmutableRangeMap<K,V>.getEntry(K key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.getEntry(K key)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.getEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the range containing this key and its associated value, if such a range is present in the range map, or `null` otherwise.
  syntax:
    content: public Map.Entry<Range<K>,V> getEntry(K key)
    parameters:
    - id: key
      type: K
    return:
      type: java.util.Map.Entry<com.azure.cosmos.implementation.guava25.collect.Range<K>,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: hashCode()
  nameWithType: ImmutableRangeMap<K,V>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns `asMapOfRanges().hashCode()`.
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.put(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  id: put(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: put(Range<K> range, V value)
  nameWithType: ImmutableRangeMap<K,V>.put(Range<K> range, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.put(Range<K> range, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the `RangeMap` unmodified.
  syntax:
    content: public void put(Range<K> range, V value)
    parameters:
    - id: range
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
    - id: value
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putAll(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>)
  id: putAll(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: putAll(RangeMap<K,V> rangeMap)
  nameWithType: ImmutableRangeMap<K,V>.putAll(RangeMap<K,V> rangeMap)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.putAll(RangeMap<K,V> rangeMap)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the `RangeMap` unmodified.
  syntax:
    content: public void putAll(RangeMap<K,V> rangeMap)
    parameters:
    - id: rangeMap
      type: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putCoalescing(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  id: putCoalescing(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: putCoalescing(Range<K> range, V value)
  nameWithType: ImmutableRangeMap<K,V>.putCoalescing(Range<K> range, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.putCoalescing(Range<K> range, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putCoalescing*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the `RangeMap` unmodified.
  syntax:
    content: public void putCoalescing(Range<K> range, V value)
    parameters:
    - id: range
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
    - id: value
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.remove(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  id: remove(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: remove(Range<K> range)
  nameWithType: ImmutableRangeMap<K,V>.remove(Range<K> range)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.remove(Range<K> range)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the `RangeMap` unmodified.
  syntax:
    content: public void remove(Range<K> range)
    parameters:
    - id: range
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.span()
  id: span()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: span()
  nameWithType: ImmutableRangeMap<K,V>.span()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.span()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.span*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the minimal range <xref uid="com.azure.cosmos.implementation.guava25.collect.Range.encloses(com.azure.cosmos.implementation.guava25.collect.Range&lt;C&gt;)" data-throw-if-not-resolved="false">enclosing</xref> the ranges in this `RangeMap`.
  syntax:
    content: public Range<K> span()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.subRangeMap(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  id: subRangeMap(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: subRangeMap(Range<K> range)
  nameWithType: ImmutableRangeMap<K,V>.subRangeMap(Range<K> range)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.subRangeMap(Range<K> range)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.subRangeMap*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of the part of this range map that intersects with `range`.


    For example, if `rangeMap` had the entries `[1, 5] => "foo", (6, 8) => "bar", (10, \u221e) => "baz"` then `rangeMap.subRangeMap(Range.open(3, 12))` would return a range map with the entries `(3, 5] => "foo", (6, 8) => "bar", (10, 12) => "baz"`.


    The returned range map supports all optional operations that this range map supports, except for `asMapOfRanges().iterator().remove()`.


    The returned range map will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on an attempt to insert a range not <xref uid="com.azure.cosmos.implementation.guava25.collect.Range.encloses(com.azure.cosmos.implementation.guava25.collect.Range&lt;C&gt;)" data-throw-if-not-resolved="false">enclosed</xref> by `range`.
  syntax:
    content: public ImmutableRangeMap<K,V> subRangeMap(Range<K> range)
    parameters:
    - id: range
      type: com.azure.cosmos.implementation.guava25.collect.Range<K>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  langs:
  - java
  name: toString()
  nameWithType: ImmutableRangeMap<K,V>.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.toString()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a readable string representation of this range map.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableList<com.azure.cosmos.implementation.guava25.collect.Range<K>>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableList
    name: ImmutableList
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableList
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.guava25.collect.Range
    name: Range
    fullName: com.azure.cosmos.implementation.guava25.collect.Range
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableList<V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableList
    name: ImmutableList
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableList
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.ImmutableRangeMap*
  name: ImmutableRangeMap
  nameWithType: ImmutableRangeMap<K,V>.ImmutableRangeMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.ImmutableRangeMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.function.Function<? super T,com.azure.cosmos.implementation.guava25.collect.Range<K>>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: '? super T'
    name: '? super T'
    fullName: '? super T'
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.guava25.collect.Range
    name: Range
    fullName: com.azure.cosmos.implementation.guava25.collect.Range
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.function.Function<? super T,? extends V>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: '? super T'
    name: '? super T'
    fullName: '? super T'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: java.util.stream.Collector<T,?,com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>>
  spec.java:
  - uid: java.util.stream.Collector
    name: Collector
    fullName: java.util.stream.Collector
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
    name: ImmutableRangeMap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toImmutableRangeMap*
  name: <T,K,V>toImmutableRangeMap
  nameWithType: ImmutableRangeMap<K,V>.<T,K,V>toImmutableRangeMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<T,K,V>toImmutableRangeMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
    name: ImmutableRangeMap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.of*
  name: <K,V>of
  nameWithType: ImmutableRangeMap<K,V>.<K,V>of
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>of
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Range<K>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Range
    name: Range
    fullName: com.azure.cosmos.implementation.guava25.collect.Range
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.RangeMap
    name: RangeMap
    fullName: com.azure.cosmos.implementation.guava25.collect.RangeMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.copyOf*
  name: <K,V>copyOf
  nameWithType: ImmutableRangeMap<K,V>.<K,V>copyOf
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>copyOf
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder
    name: Builder
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.builder*
  name: <K,V>builder
  nameWithType: ImmutableRangeMap<K,V>.<K,V>builder
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>builder
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.get*
  name: get
  nameWithType: ImmutableRangeMap<K,V>.get
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.get
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map.Entry<com.azure.cosmos.implementation.guava25.collect.Range<K>,V>
  spec.java:
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.guava25.collect.Range
    name: Range
    fullName: com.azure.cosmos.implementation.guava25.collect.Range
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.getEntry*
  name: getEntry
  nameWithType: ImmutableRangeMap<K,V>.getEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.getEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.span*
  name: span
  nameWithType: ImmutableRangeMap<K,V>.span
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.span
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.put*
  name: put
  nameWithType: ImmutableRangeMap<K,V>.put
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.put
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putCoalescing*
  name: putCoalescing
  nameWithType: ImmutableRangeMap<K,V>.putCoalescing
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.putCoalescing
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.RangeMap
    name: RangeMap
    fullName: com.azure.cosmos.implementation.guava25.collect.RangeMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.putAll*
  name: putAll
  nameWithType: ImmutableRangeMap<K,V>.putAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.putAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.clear*
  name: clear
  nameWithType: ImmutableRangeMap<K,V>.clear
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.clear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.remove*
  name: remove
  nameWithType: ImmutableRangeMap<K,V>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap<com.azure.cosmos.implementation.guava25.collect.Range<K>,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
    name: ImmutableMap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.guava25.collect.Range
    name: Range
    fullName: com.azure.cosmos.implementation.guava25.collect.Range
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asMapOfRanges*
  name: asMapOfRanges
  nameWithType: ImmutableRangeMap<K,V>.asMapOfRanges
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asMapOfRanges
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges*
  name: asDescendingMapOfRanges
  nameWithType: ImmutableRangeMap<K,V>.asDescendingMapOfRanges
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asDescendingMapOfRanges
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.subRangeMap*
  name: subRangeMap
  nameWithType: ImmutableRangeMap<K,V>.subRangeMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.subRangeMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.hashCode*
  name: hashCode
  nameWithType: ImmutableRangeMap<K,V>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.equals*
  name: equals
  nameWithType: ImmutableRangeMap<K,V>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.toString*
  name: toString
  nameWithType: ImmutableRangeMap<K,V>.toString
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.toString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder
  name: ImmutableRangeMap.Builder<K,V>
  nameWithType: ImmutableRangeMap.Builder<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableList
  name: ImmutableList
  nameWithType: ImmutableList
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableList
- uid: com.azure.cosmos.implementation.guava25.collect.Range
  name: Range
  nameWithType: Range
  fullName: com.azure.cosmos.implementation.guava25.collect.Range
- uid: '? super T,com.azure.cosmos.implementation.guava25.collect.Range'
  name: '? super T,Range'
  nameWithType: '? super T,Range'
  fullName: '? super T,com.azure.cosmos.implementation.guava25.collect.Range'
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
- uid: '? super T,? extends V'
  name: '? super T,? extends V'
  nameWithType: '? super T,? extends V'
  fullName: '? super T,? extends V'
- uid: T,?,com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
  name: T,?,ImmutableRangeMap
  nameWithType: T,?,ImmutableRangeMap
  fullName: T,?,com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.stream.Collector
  name: Collector
  nameWithType: Collector
  fullName: java.util.stream.Collector
- uid: com.azure.cosmos.implementation.guava25.collect.RangeMap
  name: RangeMap
  nameWithType: RangeMap
  fullName: com.azure.cosmos.implementation.guava25.collect.RangeMap
- uid: K,? extends V
  name: K,? extends V
  nameWithType: K,? extends V
  fullName: K,? extends V
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: K>,V
  name: K>,V
  nameWithType: K>,V
  fullName: K>,V
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
  name: ImmutableMap
  nameWithType: ImmutableMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
