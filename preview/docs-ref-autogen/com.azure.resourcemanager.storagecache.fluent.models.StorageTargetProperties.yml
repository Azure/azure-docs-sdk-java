### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties"
fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties"
name: "StorageTargetProperties"
nameWithType: "StorageTargetProperties"
summary: "Properties of the Storage Target."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StorageTargetProperties"
constructors:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.StorageTargetProperties()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.StorageTargetProperties()"
  name: "StorageTargetProperties()"
  nameWithType: "StorageTargetProperties.StorageTargetProperties()"
  syntax: "public StorageTargetProperties()"
methods:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.allocationPercentage()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.allocationPercentage()"
  name: "allocationPercentage()"
  nameWithType: "StorageTargetProperties.allocationPercentage()"
  summary: "Get the allocation<wbr>Percentage property: The percentage of cache space allocated for this storage target."
  syntax: "public Integer allocationPercentage()"
  desc: "Get the allocationPercentage property: The percentage of cache space allocated for this storage target."
  returns:
    description: "the allocationPercentage value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.blobNfs()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.blobNfs()"
  name: "blobNfs()"
  nameWithType: "StorageTargetProperties.blobNfs()"
  summary: "Get the blob<wbr>Nfs property: Properties when target<wbr>Type is blob<wbr>Nfs."
  syntax: "public BlobNfsTarget blobNfs()"
  desc: "Get the blobNfs property: Properties when targetType is blobNfs."
  returns:
    description: "the blobNfs value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.BlobNfsTarget?alt=com.azure.resourcemanager.storagecache.models.BlobNfsTarget&text=BlobNfsTarget\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.clfs()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.clfs()"
  name: "clfs()"
  nameWithType: "StorageTargetProperties.clfs()"
  summary: "Get the clfs property: Properties when target<wbr>Type is clfs."
  syntax: "public ClfsTarget clfs()"
  desc: "Get the clfs property: Properties when targetType is clfs."
  returns:
    description: "the clfs value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ClfsTarget?alt=com.azure.resourcemanager.storagecache.models.ClfsTarget&text=ClfsTarget\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.junctions()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.junctions()"
  name: "junctions()"
  nameWithType: "StorageTargetProperties.junctions()"
  summary: "Get the junctions property: List of Cache namespace junctions to target for namespace associations."
  syntax: "public List<NamespaceJunction> junctions()"
  desc: "Get the junctions property: List of Cache namespace junctions to target for namespace associations."
  returns:
    description: "the junctions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.NamespaceJunction?alt=com.azure.resourcemanager.storagecache.models.NamespaceJunction&text=NamespaceJunction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.nfs3()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.nfs3()"
  name: "nfs3()"
  nameWithType: "StorageTargetProperties.nfs3()"
  summary: "Get the nfs3 property: Properties when target<wbr>Type is nfs3."
  syntax: "public Nfs3Target nfs3()"
  desc: "Get the nfs3 property: Properties when targetType is nfs3."
  returns:
    description: "the nfs3 value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.Nfs3Target?alt=com.azure.resourcemanager.storagecache.models.Nfs3Target&text=Nfs3Target\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "StorageTargetProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: ARM provisioning state, see https://github.<wbr>com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.<wbr>md\\#provisioningstate-property."
  syntax: "public ProvisioningStateType provisioningState()"
  desc: "Get the provisioningState property: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md\\#provisioningstate-property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ProvisioningStateType?alt=com.azure.resourcemanager.storagecache.models.ProvisioningStateType&text=ProvisioningStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.state()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.state()"
  name: "state()"
  nameWithType: "StorageTargetProperties.state()"
  summary: "Get the state property: Storage target operational state."
  syntax: "public OperationalStateType state()"
  desc: "Get the state property: Storage target operational state."
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.OperationalStateType?alt=com.azure.resourcemanager.storagecache.models.OperationalStateType&text=OperationalStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.targetType()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.targetType()"
  name: "targetType()"
  nameWithType: "StorageTargetProperties.targetType()"
  summary: "Get the target<wbr>Type property: Type of the Storage Target."
  syntax: "public StorageTargetType targetType()"
  desc: "Get the targetType property: Type of the Storage Target."
  returns:
    description: "the targetType value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.StorageTargetType?alt=com.azure.resourcemanager.storagecache.models.StorageTargetType&text=StorageTargetType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.unknown()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.unknown()"
  name: "unknown()"
  nameWithType: "StorageTargetProperties.unknown()"
  summary: "Get the unknown property: Properties when target<wbr>Type is unknown."
  syntax: "public UnknownTarget unknown()"
  desc: "Get the unknown property: Properties when targetType is unknown."
  returns:
    description: "the unknown value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.UnknownTarget?alt=com.azure.resourcemanager.storagecache.models.UnknownTarget&text=UnknownTarget\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.validate()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.validate()"
  name: "validate()"
  nameWithType: "StorageTargetProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withBlobNfs(com.azure.resourcemanager.storagecache.models.BlobNfsTarget)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withBlobNfs(BlobNfsTarget blobNfs)"
  name: "withBlobNfs(BlobNfsTarget blobNfs)"
  nameWithType: "StorageTargetProperties.withBlobNfs(BlobNfsTarget blobNfs)"
  summary: "Set the blob<wbr>Nfs property: Properties when target<wbr>Type is blob<wbr>Nfs."
  parameters:
  - description: "the blobNfs value to set."
    name: "blobNfs"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.BlobNfsTarget?alt=com.azure.resourcemanager.storagecache.models.BlobNfsTarget&text=BlobNfsTarget\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withBlobNfs(BlobNfsTarget blobNfs)"
  desc: "Set the blobNfs property: Properties when targetType is blobNfs."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withClfs(com.azure.resourcemanager.storagecache.models.ClfsTarget)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withClfs(ClfsTarget clfs)"
  name: "withClfs(ClfsTarget clfs)"
  nameWithType: "StorageTargetProperties.withClfs(ClfsTarget clfs)"
  summary: "Set the clfs property: Properties when target<wbr>Type is clfs."
  parameters:
  - description: "the clfs value to set."
    name: "clfs"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ClfsTarget?alt=com.azure.resourcemanager.storagecache.models.ClfsTarget&text=ClfsTarget\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withClfs(ClfsTarget clfs)"
  desc: "Set the clfs property: Properties when targetType is clfs."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withJunctions(java.util.List<com.azure.resourcemanager.storagecache.models.NamespaceJunction>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withJunctions(List<NamespaceJunction> junctions)"
  name: "withJunctions(List<NamespaceJunction> junctions)"
  nameWithType: "StorageTargetProperties.withJunctions(List<NamespaceJunction> junctions)"
  summary: "Set the junctions property: List of Cache namespace junctions to target for namespace associations."
  parameters:
  - description: "the junctions value to set."
    name: "junctions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.NamespaceJunction?alt=com.azure.resourcemanager.storagecache.models.NamespaceJunction&text=NamespaceJunction\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StorageTargetProperties withJunctions(List<NamespaceJunction> junctions)"
  desc: "Set the junctions property: List of Cache namespace junctions to target for namespace associations."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withNfs3(com.azure.resourcemanager.storagecache.models.Nfs3Target)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withNfs3(Nfs3Target nfs3)"
  name: "withNfs3(Nfs3Target nfs3)"
  nameWithType: "StorageTargetProperties.withNfs3(Nfs3Target nfs3)"
  summary: "Set the nfs3 property: Properties when target<wbr>Type is nfs3."
  parameters:
  - description: "the nfs3 value to set."
    name: "nfs3"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.Nfs3Target?alt=com.azure.resourcemanager.storagecache.models.Nfs3Target&text=Nfs3Target\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withNfs3(Nfs3Target nfs3)"
  desc: "Set the nfs3 property: Properties when targetType is nfs3."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withState(com.azure.resourcemanager.storagecache.models.OperationalStateType)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withState(OperationalStateType state)"
  name: "withState(OperationalStateType state)"
  nameWithType: "StorageTargetProperties.withState(OperationalStateType state)"
  summary: "Set the state property: Storage target operational state."
  parameters:
  - description: "the state value to set."
    name: "state"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.OperationalStateType?alt=com.azure.resourcemanager.storagecache.models.OperationalStateType&text=OperationalStateType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withState(OperationalStateType state)"
  desc: "Set the state property: Storage target operational state."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withTargetType(com.azure.resourcemanager.storagecache.models.StorageTargetType)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withTargetType(StorageTargetType targetType)"
  name: "withTargetType(StorageTargetType targetType)"
  nameWithType: "StorageTargetProperties.withTargetType(StorageTargetType targetType)"
  summary: "Set the target<wbr>Type property: Type of the Storage Target."
  parameters:
  - description: "the targetType value to set."
    name: "targetType"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.StorageTargetType?alt=com.azure.resourcemanager.storagecache.models.StorageTargetType&text=StorageTargetType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withTargetType(StorageTargetType targetType)"
  desc: "Set the targetType property: Type of the Storage Target."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withUnknown(com.azure.resourcemanager.storagecache.models.UnknownTarget)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties.withUnknown(UnknownTarget unknown)"
  name: "withUnknown(UnknownTarget unknown)"
  nameWithType: "StorageTargetProperties.withUnknown(UnknownTarget unknown)"
  summary: "Set the unknown property: Properties when target<wbr>Type is unknown."
  parameters:
  - description: "the unknown value to set."
    name: "unknown"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.UnknownTarget?alt=com.azure.resourcemanager.storagecache.models.UnknownTarget&text=UnknownTarget\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StorageTargetProperties withUnknown(UnknownTarget unknown)"
  desc: "Set the unknown property: Properties when targetType is unknown."
  returns:
    description: "the StorageTargetProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties?alt=com.azure.resourcemanager.storagecache.fluent.models.StorageTargetProperties&text=StorageTargetProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the Storage Target."
metadata: {}
package: "com.azure.resourcemanager.storagecache.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0-beta.6
