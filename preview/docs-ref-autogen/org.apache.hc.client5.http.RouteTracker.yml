### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.RouteTracker
  id: RouteTracker
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http
  children:
  - org.apache.hc.client5.http.RouteTracker.RouteTracker(org.apache.hc.client5.http.HttpRoute)
  - org.apache.hc.client5.http.RouteTracker.RouteTracker(org.apache.hc.core5.http.HttpHost,java.net.InetAddress)
  - org.apache.hc.client5.http.RouteTracker.clone()
  - org.apache.hc.client5.http.RouteTracker.connectProxy(org.apache.hc.core5.http.HttpHost,boolean)
  - org.apache.hc.client5.http.RouteTracker.connectTarget(boolean)
  - org.apache.hc.client5.http.RouteTracker.equals(java.lang.Object)
  - org.apache.hc.client5.http.RouteTracker.getHopCount()
  - org.apache.hc.client5.http.RouteTracker.getHopTarget(int)
  - org.apache.hc.client5.http.RouteTracker.getLayerType()
  - org.apache.hc.client5.http.RouteTracker.getLocalAddress()
  - org.apache.hc.client5.http.RouteTracker.getProxyHost()
  - org.apache.hc.client5.http.RouteTracker.getTargetHost()
  - org.apache.hc.client5.http.RouteTracker.getTunnelType()
  - org.apache.hc.client5.http.RouteTracker.hashCode()
  - org.apache.hc.client5.http.RouteTracker.isConnected()
  - org.apache.hc.client5.http.RouteTracker.isLayered()
  - org.apache.hc.client5.http.RouteTracker.isSecure()
  - org.apache.hc.client5.http.RouteTracker.isTunnelled()
  - org.apache.hc.client5.http.RouteTracker.layerProtocol(boolean)
  - org.apache.hc.client5.http.RouteTracker.reset()
  - org.apache.hc.client5.http.RouteTracker.toRoute()
  - org.apache.hc.client5.http.RouteTracker.toString()
  - org.apache.hc.client5.http.RouteTracker.tunnelProxy(org.apache.hc.core5.http.HttpHost,boolean)
  - org.apache.hc.client5.http.RouteTracker.tunnelTarget(boolean)
  langs:
  - java
  name: RouteTracker
  nameWithType: RouteTracker
  fullName: org.apache.hc.client5.http.RouteTracker
  type: Class
  package: org.apache.hc.client5.http
  summary: Helps tracking the steps in establishing a route.
  syntax:
    content: public final class RouteTracker implements RouteInfo, Cloneable
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.RouteInfo
  - java.lang.Cloneable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.RouteTracker.RouteTracker(org.apache.hc.client5.http.HttpRoute)
  id: RouteTracker(org.apache.hc.client5.http.HttpRoute)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: RouteTracker(HttpRoute route)
  nameWithType: RouteTracker.RouteTracker(HttpRoute route)
  fullName: org.apache.hc.client5.http.RouteTracker.RouteTracker(HttpRoute route)
  overload: org.apache.hc.client5.http.RouteTracker.RouteTracker*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new tracker for the given route. Only target and origin are taken from the route, everything else remains to be tracked.
  syntax:
    content: public RouteTracker(HttpRoute route)
    parameters:
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
      description: the route to track
- uid: org.apache.hc.client5.http.RouteTracker.RouteTracker(org.apache.hc.core5.http.HttpHost,java.net.InetAddress)
  id: RouteTracker(org.apache.hc.core5.http.HttpHost,java.net.InetAddress)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: RouteTracker(HttpHost target, InetAddress local)
  nameWithType: RouteTracker.RouteTracker(HttpHost target, InetAddress local)
  fullName: org.apache.hc.client5.http.RouteTracker.RouteTracker(HttpHost target, InetAddress local)
  overload: org.apache.hc.client5.http.RouteTracker.RouteTracker*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new route tracker. The target and origin need to be specified at creation time.
  syntax:
    content: public RouteTracker(HttpHost target, InetAddress local)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: local
      type: java.net.InetAddress
      description: >-
        the local address to route from, or
                          <code>null</code> for the default
- uid: org.apache.hc.client5.http.RouteTracker.clone()
  id: clone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: clone()
  nameWithType: RouteTracker.clone()
  fullName: org.apache.hc.client5.http.RouteTracker.clone()
  overload: org.apache.hc.client5.http.RouteTracker.clone*
  type: Method
  package: org.apache.hc.client5.http
  syntax:
    content: public Object clone()
    return:
      type: java.lang.Object
  exceptions:
  - type: java.lang.CloneNotSupportedException
- uid: org.apache.hc.client5.http.RouteTracker.connectProxy(org.apache.hc.core5.http.HttpHost,boolean)
  id: connectProxy(org.apache.hc.core5.http.HttpHost,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: connectProxy(HttpHost proxy, boolean secure)
  nameWithType: RouteTracker.connectProxy(HttpHost proxy, boolean secure)
  fullName: org.apache.hc.client5.http.RouteTracker.connectProxy(HttpHost proxy, boolean secure)
  overload: org.apache.hc.client5.http.RouteTracker.connectProxy*
  type: Method
  package: org.apache.hc.client5.http
  summary: Tracks connecting to the first proxy.
  syntax:
    content: public final void connectProxy(HttpHost proxy, boolean secure)
    parameters:
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
      description: the proxy connected to
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.RouteTracker.connectTarget(boolean)
  id: connectTarget(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: connectTarget(boolean secure)
  nameWithType: RouteTracker.connectTarget(boolean secure)
  fullName: org.apache.hc.client5.http.RouteTracker.connectTarget(boolean secure)
  overload: org.apache.hc.client5.http.RouteTracker.connectTarget*
  type: Method
  package: org.apache.hc.client5.http
  summary: Tracks connecting to the target.
  syntax:
    content: public final void connectTarget(boolean secure)
    parameters:
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.RouteTracker.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: equals(Object o)
  nameWithType: RouteTracker.equals(Object o)
  fullName: org.apache.hc.client5.http.RouteTracker.equals(Object o)
  overload: org.apache.hc.client5.http.RouteTracker.equals*
  type: Method
  package: org.apache.hc.client5.http
  summary: Compares this tracked route to another.
  syntax:
    content: public final boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
      description: the object to compare with
    return:
      type: boolean
      description: >-
        <code>true</code> if the argument is the same tracked route,
                  <code>false</code>
- uid: org.apache.hc.client5.http.RouteTracker.getHopCount()
  id: getHopCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getHopCount()
  nameWithType: RouteTracker.getHopCount()
  fullName: org.apache.hc.client5.http.RouteTracker.getHopCount()
  overload: org.apache.hc.client5.http.RouteTracker.getHopCount*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the number of hops in this route. A direct route has one hop. A route through a proxy has two hops. A route through a chain of *n* proxies has *n+1* hops.
  syntax:
    content: public final int getHopCount()
    return:
      type: int
- uid: org.apache.hc.client5.http.RouteTracker.getHopTarget(int)
  id: getHopTarget(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getHopTarget(int hop)
  nameWithType: RouteTracker.getHopTarget(int hop)
  fullName: org.apache.hc.client5.http.RouteTracker.getHopTarget(int hop)
  overload: org.apache.hc.client5.http.RouteTracker.getHopTarget*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the target of a hop in this route. The target of the last hop is the <xref uid="org.apache.hc.client5.http.RouteTracker.getTargetHost*" data-throw-if-not-resolved="false">target host</xref>, the target of previous hops is the respective proxy in the chain. For a route through exactly one proxy, target of hop 0 is the proxy and target of hop 1 is the target host.
  syntax:
    content: public final HttpHost getHopTarget(int hop)
    parameters:
    - id: hop
      type: int
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.RouteTracker.getLayerType()
  id: getLayerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getLayerType()
  nameWithType: RouteTracker.getLayerType()
  fullName: org.apache.hc.client5.http.RouteTracker.getLayerType()
  overload: org.apache.hc.client5.http.RouteTracker.getLayerType*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the layering type of this route. In the presence of proxies, only layering over an end-to-end tunnel is considered.
  syntax:
    content: public final RouteInfo.LayerType getLayerType()
    return:
      type: org.apache.hc.client5.http.RouteInfo.LayerType
- uid: org.apache.hc.client5.http.RouteTracker.getLocalAddress()
  id: getLocalAddress()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getLocalAddress()
  nameWithType: RouteTracker.getLocalAddress()
  fullName: org.apache.hc.client5.http.RouteTracker.getLocalAddress()
  overload: org.apache.hc.client5.http.RouteTracker.getLocalAddress*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the local address to connect from.
  syntax:
    content: public final InetAddress getLocalAddress()
    return:
      type: java.net.InetAddress
- uid: org.apache.hc.client5.http.RouteTracker.getProxyHost()
  id: getProxyHost()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getProxyHost()
  nameWithType: RouteTracker.getProxyHost()
  fullName: org.apache.hc.client5.http.RouteTracker.getProxyHost()
  overload: org.apache.hc.client5.http.RouteTracker.getProxyHost*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the first proxy host.
  syntax:
    content: public final HttpHost getProxyHost()
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.RouteTracker.getTargetHost()
  id: getTargetHost()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getTargetHost()
  nameWithType: RouteTracker.getTargetHost()
  fullName: org.apache.hc.client5.http.RouteTracker.getTargetHost()
  overload: org.apache.hc.client5.http.RouteTracker.getTargetHost*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the target host.
  syntax:
    content: public final HttpHost getTargetHost()
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.RouteTracker.getTunnelType()
  id: getTunnelType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: getTunnelType()
  nameWithType: RouteTracker.getTunnelType()
  fullName: org.apache.hc.client5.http.RouteTracker.getTunnelType()
  overload: org.apache.hc.client5.http.RouteTracker.getTunnelType*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the tunnel type of this route. If there is a proxy chain, only end-to-end tunnels are considered.
  syntax:
    content: public final RouteInfo.TunnelType getTunnelType()
    return:
      type: org.apache.hc.client5.http.RouteInfo.TunnelType
- uid: org.apache.hc.client5.http.RouteTracker.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: hashCode()
  nameWithType: RouteTracker.hashCode()
  fullName: org.apache.hc.client5.http.RouteTracker.hashCode()
  overload: org.apache.hc.client5.http.RouteTracker.hashCode*
  type: Method
  package: org.apache.hc.client5.http
  summary: Generates a hash code for this tracked route. Route trackers are modifiable and should therefore not be used as lookup keys. Use <xref uid="org.apache.hc.client5.http.RouteTracker.toRoute*" data-throw-if-not-resolved="false">toRoute</xref> to obtain an unmodifiable representation of the tracked route.
  syntax:
    content: public final int hashCode()
    return:
      type: int
      description: the hash code
- uid: org.apache.hc.client5.http.RouteTracker.isConnected()
  id: isConnected()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: isConnected()
  nameWithType: RouteTracker.isConnected()
  fullName: org.apache.hc.client5.http.RouteTracker.isConnected()
  overload: org.apache.hc.client5.http.RouteTracker.isConnected*
  type: Method
  package: org.apache.hc.client5.http
  syntax:
    content: public final boolean isConnected()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.RouteTracker.isLayered()
  id: isLayered()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: isLayered()
  nameWithType: RouteTracker.isLayered()
  fullName: org.apache.hc.client5.http.RouteTracker.isLayered()
  overload: org.apache.hc.client5.http.RouteTracker.isLayered*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route includes a layered protocol. In the presence of proxies, only layering over an end-to-end tunnel is considered.
  syntax:
    content: public final boolean isLayered()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.RouteTracker.isSecure()
  id: isSecure()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: isSecure()
  nameWithType: RouteTracker.isSecure()
  fullName: org.apache.hc.client5.http.RouteTracker.isSecure()
  overload: org.apache.hc.client5.http.RouteTracker.isSecure*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route is secure.
  syntax:
    content: public final boolean isSecure()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.RouteTracker.isTunnelled()
  id: isTunnelled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: isTunnelled()
  nameWithType: RouteTracker.isTunnelled()
  fullName: org.apache.hc.client5.http.RouteTracker.isTunnelled()
  overload: org.apache.hc.client5.http.RouteTracker.isTunnelled*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route is tunnelled through a proxy. If there is a proxy chain, only end-to-end tunnels are considered.
  syntax:
    content: public final boolean isTunnelled()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.RouteTracker.layerProtocol(boolean)
  id: layerProtocol(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: layerProtocol(boolean secure)
  nameWithType: RouteTracker.layerProtocol(boolean secure)
  fullName: org.apache.hc.client5.http.RouteTracker.layerProtocol(boolean secure)
  overload: org.apache.hc.client5.http.RouteTracker.layerProtocol*
  type: Method
  package: org.apache.hc.client5.http
  summary: Tracks layering a protocol.
  syntax:
    content: public final void layerProtocol(boolean secure)
    parameters:
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.RouteTracker.reset()
  id: reset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: reset()
  nameWithType: RouteTracker.reset()
  fullName: org.apache.hc.client5.http.RouteTracker.reset()
  overload: org.apache.hc.client5.http.RouteTracker.reset*
  type: Method
  package: org.apache.hc.client5.http
  syntax:
    content: public void reset()
- uid: org.apache.hc.client5.http.RouteTracker.toRoute()
  id: toRoute()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: toRoute()
  nameWithType: RouteTracker.toRoute()
  fullName: org.apache.hc.client5.http.RouteTracker.toRoute()
  overload: org.apache.hc.client5.http.RouteTracker.toRoute*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the tracked route. If a route has been tracked, it is <xref uid="org.apache.hc.client5.http.RouteTracker.isConnected*" data-throw-if-not-resolved="false">connected</xref>. If not connected, nothing has been tracked so far.
  syntax:
    content: public final HttpRoute toRoute()
    return:
      type: org.apache.hc.client5.http.HttpRoute
      description: >-
        the tracked route, or
                  <code>null</code> if nothing has been tracked so far
- uid: org.apache.hc.client5.http.RouteTracker.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: toString()
  nameWithType: RouteTracker.toString()
  fullName: org.apache.hc.client5.http.RouteTracker.toString()
  overload: org.apache.hc.client5.http.RouteTracker.toString*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains a description of the tracked route.
  syntax:
    content: public final String toString()
    return:
      type: java.lang.String
      description: a human-readable representation of the tracked route
- uid: org.apache.hc.client5.http.RouteTracker.tunnelProxy(org.apache.hc.core5.http.HttpHost,boolean)
  id: tunnelProxy(org.apache.hc.core5.http.HttpHost,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: tunnelProxy(HttpHost proxy, boolean secure)
  nameWithType: RouteTracker.tunnelProxy(HttpHost proxy, boolean secure)
  fullName: org.apache.hc.client5.http.RouteTracker.tunnelProxy(HttpHost proxy, boolean secure)
  overload: org.apache.hc.client5.http.RouteTracker.tunnelProxy*
  type: Method
  package: org.apache.hc.client5.http
  summary: Tracks tunnelling to a proxy in a proxy chain. This will extend the tracked proxy chain, but it does not mark the route as tunnelled. Only end-to-end tunnels are considered there.
  syntax:
    content: public final void tunnelProxy(HttpHost proxy, boolean secure)
    parameters:
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
      description: the proxy tunnelled to
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.RouteTracker.tunnelTarget(boolean)
  id: tunnelTarget(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.RouteTracker
  langs:
  - java
  name: tunnelTarget(boolean secure)
  nameWithType: RouteTracker.tunnelTarget(boolean secure)
  fullName: org.apache.hc.client5.http.RouteTracker.tunnelTarget(boolean secure)
  overload: org.apache.hc.client5.http.RouteTracker.tunnelTarget*
  type: Method
  package: org.apache.hc.client5.http
  summary: Tracks tunnelling to the target.
  syntax:
    content: public final void tunnelTarget(boolean secure)
    parameters:
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is secure,
                          <code>false</code> otherwise
references:
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: java.net.InetAddress
  spec.java:
  - uid: java.net.InetAddress
    name: InetAddress
    fullName: java.net.InetAddress
- uid: org.apache.hc.client5.http.RouteTracker.RouteTracker*
  name: RouteTracker
  nameWithType: RouteTracker.RouteTracker
  fullName: org.apache.hc.client5.http.RouteTracker.RouteTracker
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute
  name: HttpRoute
  nameWithType: HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute
- uid: org.apache.hc.client5.http.RouteTracker.reset*
  name: reset
  nameWithType: RouteTracker.reset
  fullName: org.apache.hc.client5.http.RouteTracker.reset
  package: org.apache.hc.client5.http
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.RouteTracker.connectTarget*
  name: connectTarget
  nameWithType: RouteTracker.connectTarget
  fullName: org.apache.hc.client5.http.RouteTracker.connectTarget
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.connectProxy*
  name: connectProxy
  nameWithType: RouteTracker.connectProxy
  fullName: org.apache.hc.client5.http.RouteTracker.connectProxy
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.tunnelTarget*
  name: tunnelTarget
  nameWithType: RouteTracker.tunnelTarget
  fullName: org.apache.hc.client5.http.RouteTracker.tunnelTarget
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.tunnelProxy*
  name: tunnelProxy
  nameWithType: RouteTracker.tunnelProxy
  fullName: org.apache.hc.client5.http.RouteTracker.tunnelProxy
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.layerProtocol*
  name: layerProtocol
  nameWithType: RouteTracker.layerProtocol
  fullName: org.apache.hc.client5.http.RouteTracker.layerProtocol
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.getTargetHost*
  name: getTargetHost
  nameWithType: RouteTracker.getTargetHost
  fullName: org.apache.hc.client5.http.RouteTracker.getTargetHost
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.getLocalAddress*
  name: getLocalAddress
  nameWithType: RouteTracker.getLocalAddress
  fullName: org.apache.hc.client5.http.RouteTracker.getLocalAddress
  package: org.apache.hc.client5.http
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.RouteTracker.getHopCount*
  name: getHopCount
  nameWithType: RouteTracker.getHopCount
  fullName: org.apache.hc.client5.http.RouteTracker.getHopCount
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.getHopTarget*
  name: getHopTarget
  nameWithType: RouteTracker.getHopTarget
  fullName: org.apache.hc.client5.http.RouteTracker.getHopTarget
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.getProxyHost*
  name: getProxyHost
  nameWithType: RouteTracker.getProxyHost
  fullName: org.apache.hc.client5.http.RouteTracker.getProxyHost
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.isConnected*
  name: isConnected
  nameWithType: RouteTracker.isConnected
  fullName: org.apache.hc.client5.http.RouteTracker.isConnected
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteInfo.TunnelType
  name: RouteInfo.TunnelType
  nameWithType: RouteInfo.TunnelType
  fullName: org.apache.hc.client5.http.RouteInfo.TunnelType
- uid: org.apache.hc.client5.http.RouteTracker.getTunnelType*
  name: getTunnelType
  nameWithType: RouteTracker.getTunnelType
  fullName: org.apache.hc.client5.http.RouteTracker.getTunnelType
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.isTunnelled*
  name: isTunnelled
  nameWithType: RouteTracker.isTunnelled
  fullName: org.apache.hc.client5.http.RouteTracker.isTunnelled
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteInfo.LayerType
  name: RouteInfo.LayerType
  nameWithType: RouteInfo.LayerType
  fullName: org.apache.hc.client5.http.RouteInfo.LayerType
- uid: org.apache.hc.client5.http.RouteTracker.getLayerType*
  name: getLayerType
  nameWithType: RouteTracker.getLayerType
  fullName: org.apache.hc.client5.http.RouteTracker.getLayerType
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.isLayered*
  name: isLayered
  nameWithType: RouteTracker.isLayered
  fullName: org.apache.hc.client5.http.RouteTracker.isLayered
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.isSecure*
  name: isSecure
  nameWithType: RouteTracker.isSecure
  fullName: org.apache.hc.client5.http.RouteTracker.isSecure
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.toRoute*
  name: toRoute
  nameWithType: RouteTracker.toRoute
  fullName: org.apache.hc.client5.http.RouteTracker.toRoute
  package: org.apache.hc.client5.http
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.client5.http.RouteTracker.equals*
  name: equals
  nameWithType: RouteTracker.equals
  fullName: org.apache.hc.client5.http.RouteTracker.equals
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.RouteTracker.hashCode*
  name: hashCode
  nameWithType: RouteTracker.hashCode
  fullName: org.apache.hc.client5.http.RouteTracker.hashCode
  package: org.apache.hc.client5.http
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.RouteTracker.toString*
  name: toString
  nameWithType: RouteTracker.toString
  fullName: org.apache.hc.client5.http.RouteTracker.toString
  package: org.apache.hc.client5.http
- uid: java.lang.CloneNotSupportedException
  spec.java:
  - uid: java.lang.CloneNotSupportedException
    name: CloneNotSupportedException
    fullName: java.lang.CloneNotSupportedException
- uid: org.apache.hc.client5.http.RouteTracker.clone*
  name: clone
  nameWithType: RouteTracker.clone
  fullName: org.apache.hc.client5.http.RouteTracker.clone
  package: org.apache.hc.client5.http
- uid: java.lang.Cloneable
  name: Cloneable
  nameWithType: Cloneable
  fullName: java.lang.Cloneable
- uid: org.apache.hc.client5.http.RouteInfo
  name: RouteInfo
  nameWithType: RouteInfo
  fullName: org.apache.hc.client5.http.RouteInfo
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
