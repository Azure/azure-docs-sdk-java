### YamlMime:JavaMember
uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setValidateAfterInactivity*"
fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setValidateAfterInactivity"
name: "setValidateAfterInactivity"
nameWithType: "PoolingAsyncClientConnectionManager.setValidateAfterInactivity"
members:
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setValidateAfterInactivity(TimeValue validateAfterInactivity)"
  name: "setValidateAfterInactivity(TimeValue validateAfterInactivity)"
  nameWithType: "PoolingAsyncClientConnectionManager.setValidateAfterInactivity(TimeValue validateAfterInactivity)"
  summary: "Defines period of inactivity after which persistent connections must be re-validated prior to being <xref uid=\"#lease(String, HttpRoute, Object, Timeout,\n FutureCallback)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#lease(String, HttpRoute, Object, Timeout,\n FutureCallback)\"></xref> leased\\} to the consumer. Negative values passed to this method disable connection validation. This check helps detect connections that have become stale (half-closed) while kept inactive in the pool."
  parameters:
  - name: "validateAfterInactivity"
    type: "<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setValidateAfterInactivity(TimeValue validateAfterInactivity)"
type: "method"
metadata: {}
package: "org.apache.hc.client5.http.impl.nio"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
