### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates"
name: "withTrustedCertificates"
nameWithType: "TlsEndpoint.withTrustedCertificates"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates(com.azure.resourcemanager.videoanalyzer.models.CertificateSource)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates(CertificateSource trustedCertificates)"
  name: "withTrustedCertificates(CertificateSource trustedCertificates)"
  nameWithType: "TlsEndpoint.withTrustedCertificates(CertificateSource trustedCertificates)"
  summary: "Set the trustedCertificates property: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
  parameters:
  - description: "the trustedCertificates value to set."
    name: "trustedCertificates"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.CertificateSource?alt=com.azure.resourcemanager.videoanalyzer.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withTrustedCertificates(CertificateSource trustedCertificates)"
  returns:
    description: "the TlsEndpoint object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.3
