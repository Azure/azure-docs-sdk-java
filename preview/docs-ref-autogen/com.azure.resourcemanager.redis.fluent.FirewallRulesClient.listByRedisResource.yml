### YamlMime:JavaMember
uid: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource*"
fullName: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource"
name: "listByRedisResource"
nameWithType: "FirewallRulesClient.listByRedisResource"
members:
- uid: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource(String resourceGroupName, String cacheName)"
  name: "listByRedisResource(String resourceGroupName, String cacheName)"
  nameWithType: "FirewallRulesClient.listByRedisResource(String resourceGroupName, String cacheName)"
  summary: "Gets all firewall rules in the specified redis cache."
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Redis cache."
    name: "cacheName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RedisFirewallRuleInner> listByRedisResource(String resourceGroupName, String cacheName)"
  returns:
    description: "all firewall rules in the specified redis cache."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisFirewallRuleInner?alt=com.azure.resourcemanager.redis.fluent.models.RedisFirewallRuleInner&text=RedisFirewallRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redis.fluent.FirewallRulesClient.listByRedisResource(String resourceGroupName, String cacheName, Context context)"
  name: "listByRedisResource(String resourceGroupName, String cacheName, Context context)"
  nameWithType: "FirewallRulesClient.listByRedisResource(String resourceGroupName, String cacheName, Context context)"
  summary: "Gets all firewall rules in the specified redis cache."
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Redis cache."
    name: "cacheName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RedisFirewallRuleInner> listByRedisResource(String resourceGroupName, String cacheName, Context context)"
  returns:
    description: "all firewall rules in the specified redis cache."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisFirewallRuleInner?alt=com.azure.resourcemanager.redis.fluent.models.RedisFirewallRuleInner&text=RedisFirewallRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.redis.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
