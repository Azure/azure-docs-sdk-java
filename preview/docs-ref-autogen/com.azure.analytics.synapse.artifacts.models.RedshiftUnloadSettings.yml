### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings"
fullName: "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings"
name: "RedshiftUnloadSettings"
nameWithType: "RedshiftUnloadSettings"
summary: "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RedshiftUnloadSettings"
constructors:
- "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings.RedshiftUnloadSettings()"
methods:
- "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings.getBucketName()"
- "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings.getS3LinkedServiceName()"
- "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings.setBucketName(java.lang.Object)"
- "com.azure.analytics.synapse.artifacts.models.RedshiftUnloadSettings.setS3LinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.4
