### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient"
fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient"
name: "SparkConfigurationClient"
nameWithType: "SparkConfigurationClient"
summary: "Initializes a new instance of the synchronous ArtifactsClient type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkConfigurationClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  name: "createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  nameWithType: "SparkConfigurationClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkConfigurationResource createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  returns:
    description: "spark Configuration resource type."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  name: "createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  nameWithType: "SparkConfigurationClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for update, for which it should\n     match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkConfigurationResource createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  returns:
    description: "spark Configuration resource type."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfigurationWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch, Context context)"
  name: "createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch, Context context)"
  nameWithType: "SparkConfigurationClient.createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch, Context context)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for update, for which it should\n     match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SparkConfigurationResource> createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch, Context context)"
  returns:
    description: "spark Configuration resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.deleteSparkConfiguration(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.deleteSparkConfiguration(String sparkConfigurationName)"
  name: "deleteSparkConfiguration(String sparkConfigurationName)"
  nameWithType: "SparkConfigurationClient.deleteSparkConfiguration(String sparkConfigurationName)"
  summary: "Deletes a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteSparkConfiguration(String sparkConfigurationName)"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.deleteSparkConfigurationWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.deleteSparkConfigurationWithResponse(String sparkConfigurationName, Context context)"
  name: "deleteSparkConfigurationWithResponse(String sparkConfigurationName, Context context)"
  nameWithType: "SparkConfigurationClient.deleteSparkConfigurationWithResponse(String sparkConfigurationName, Context context)"
  summary: "Deletes a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteSparkConfigurationWithResponse(String sparkConfigurationName, Context context)"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfiguration(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfiguration(String sparkConfigurationName)"
  name: "getSparkConfiguration(String sparkConfigurationName)"
  nameWithType: "SparkConfigurationClient.getSparkConfiguration(String sparkConfigurationName)"
  summary: "Gets a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkConfigurationResource getSparkConfiguration(String sparkConfigurationName)"
  returns:
    description: "a sparkConfiguration."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfiguration(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  name: "getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  nameWithType: "SparkConfigurationClient.getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  summary: "Gets a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches\n     the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkConfigurationResource getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  returns:
    description: "a sparkConfiguration."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch, Context context)"
  name: "getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch, Context context)"
  nameWithType: "SparkConfigurationClient.getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch, Context context)"
  summary: "Gets a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches\n     the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SparkConfigurationResource> getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch, Context context)"
  returns:
    description: "a sparkConfiguration along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationsByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationsByWorkspace()"
  name: "getSparkConfigurationsByWorkspace()"
  nameWithType: "SparkConfigurationClient.getSparkConfigurationsByWorkspace()"
  summary: "Lists sparkconfigurations."
  syntax: "public PagedIterable<SparkConfigurationResource> getSparkConfigurationsByWorkspace()"
  returns:
    description: "a list of sparkconfiguration resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationsByWorkspace(com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.getSparkConfigurationsByWorkspace(Context context)"
  name: "getSparkConfigurationsByWorkspace(Context context)"
  nameWithType: "SparkConfigurationClient.getSparkConfigurationsByWorkspace(Context context)"
  summary: "Lists sparkconfigurations."
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SparkConfigurationResource> getSparkConfigurationsByWorkspace(Context context)"
  returns:
    description: "a list of sparkconfiguration resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.renameSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  name: "renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  nameWithType: "SparkConfigurationClient.renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  summary: "Renames a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.renameSparkConfigurationWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationClient.renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request, Context context)"
  name: "renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request, Context context)"
  nameWithType: "SparkConfigurationClient.renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request, Context context)"
  summary: "Renames a sparkConfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request, Context context)"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
