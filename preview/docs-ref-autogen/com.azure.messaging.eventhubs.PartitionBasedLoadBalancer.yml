### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer"
  id: "PartitionBasedLoadBalancer"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer(com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.EventHubAsyncClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.messaging.eventhubs.PartitionPumpManager,java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)"
  - "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance()"
  langs:
  - "java"
  name: "PartitionBasedLoadBalancer"
  nameWithType: "PartitionBasedLoadBalancer"
  fullName: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "This class is responsible for balancing the load of processing events from all partitions of an Event Hub by distributing the number of partitions uniformly among all the active <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessors</xref>.\n\nThis load balancer will retrieve partition ownership details from the <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\">CheckpointStore</xref> to find the number of active <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorCients</xref>. It uses the last modified time to decide if an EventProcessor is active. If a partition ownership entry has not be updated for a specified duration of time, the owner of that partition is considered inactive and the partition is available for other EventProcessors to own."
  syntax:
    content: "final class PartitionBasedLoadBalancer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer(com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.EventHubAsyncClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.messaging.eventhubs.PartitionPumpManager,java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)"
  id: "PartitionBasedLoadBalancer(com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.EventHubAsyncClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.messaging.eventhubs.PartitionPumpManager,java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)"
  parent: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer"
  langs:
  - "java"
  name: "PartitionBasedLoadBalancer(CheckpointStore checkpointStore, EventHubAsyncClient eventHubAsyncClient, String fullyQualifiedNamespace, String eventHubName, String consumerGroupName, String ownerId, long inactiveTimeLimitInSeconds, PartitionPumpManager partitionPumpManager, Consumer<ErrorContext> processError)"
  nameWithType: "PartitionBasedLoadBalancer.PartitionBasedLoadBalancer(CheckpointStore checkpointStore, EventHubAsyncClient eventHubAsyncClient, String fullyQualifiedNamespace, String eventHubName, String consumerGroupName, String ownerId, long inactiveTimeLimitInSeconds, PartitionPumpManager partitionPumpManager, Consumer<ErrorContext> processError)"
  fullName: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer(CheckpointStore checkpointStore, EventHubAsyncClient eventHubAsyncClient, String fullyQualifiedNamespace, String eventHubName, String consumerGroupName, String ownerId, long inactiveTimeLimitInSeconds, PartitionPumpManager partitionPumpManager, Consumer<ErrorContext> processError)"
  overload: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an instance of PartitionBasedLoadBalancer for the given Event Hub name and consumer group."
  syntax:
    content: " PartitionBasedLoadBalancer(CheckpointStore checkpointStore, EventHubAsyncClient eventHubAsyncClient, String fullyQualifiedNamespace, String eventHubName, String consumerGroupName, String ownerId, long inactiveTimeLimitInSeconds, PartitionPumpManager partitionPumpManager, Consumer<ErrorContext> processError)"
    parameters:
    - id: "checkpointStore"
      type: "com.azure.messaging.eventhubs.CheckpointStore"
      description: "The partition manager that this load balancer will use to read/update ownership details."
    - id: "eventHubAsyncClient"
      type: "com.azure.messaging.eventhubs.EventHubAsyncClient"
      description: "The asynchronous Event Hub client used to consume events."
    - id: "fullyQualifiedNamespace"
      type: "java.lang.String"
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The Event Hub name the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> is associated with."
    - id: "consumerGroupName"
      type: "java.lang.String"
      description: "The consumer group name the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> is associated with."
    - id: "ownerId"
      type: "java.lang.String"
      description: "The identifier of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> that owns this load balancer."
    - id: "inactiveTimeLimitInSeconds"
      type: "long"
      description: "The time in seconds to wait for an update on an ownership record before\n assuming the owner of the partition is inactive."
    - id: "partitionPumpManager"
      type: "com.azure.messaging.eventhubs.PartitionPumpManager"
      description: "The partition pump manager that keeps track of all EventHubConsumers and partitions\n that this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> is processing."
    - id: "processError"
      type: "java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>"
      description: "The callback that will be called when an error occurs while running the load balancer."
- uid: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance()"
  id: "loadBalance()"
  parent: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer"
  langs:
  - "java"
  name: "loadBalance()"
  nameWithType: "PartitionBasedLoadBalancer.loadBalance()"
  fullName: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance()"
  overload: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "This is the main method responsible for load balancing. This method is expected to be invoked by the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> periodically. Every call to this method will result in this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref> owning **at most one** new partition.\n\nThe load is considered balanced when no active EventProcessor owns 2 partitions more than any other active EventProcessor. Given that each invocation to this method results in ownership claim of at most one partition, this algorithm converges gradually towards a steady state.\n\nWhen a new partition is claimed, this method is also responsible for starting a partition pump that creates an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> for processing events from that partition."
  syntax:
    content: " void loadBalance()"
references:
- uid: "com.azure.messaging.eventhubs.CheckpointStore"
  name: "CheckpointStore"
  nameWithType: "CheckpointStore"
  fullName: "com.azure.messaging.eventhubs.CheckpointStore"
- uid: "com.azure.messaging.eventhubs.EventHubAsyncClient"
  name: "EventHubAsyncClient"
  nameWithType: "EventHubAsyncClient"
  fullName: "com.azure.messaging.eventhubs.EventHubAsyncClient"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.messaging.eventhubs.PartitionPumpManager"
  name: "PartitionPumpManager"
  nameWithType: "PartitionPumpManager"
  fullName: "com.azure.messaging.eventhubs.PartitionPumpManager"
- uid: "java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>"
  spec.java:
  - uid: "java.util.function.Consumer"
    name: "Consumer"
    fullName: "java.util.function.Consumer"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.models.ErrorContext"
    name: "ErrorContext"
    fullName: "com.azure.messaging.eventhubs.models.ErrorContext"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer*"
  name: "PartitionBasedLoadBalancer"
  nameWithType: "PartitionBasedLoadBalancer.PartitionBasedLoadBalancer"
  fullName: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.PartitionBasedLoadBalancer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance*"
  name: "loadBalance"
  nameWithType: "PartitionBasedLoadBalancer.loadBalance"
  fullName: "com.azure.messaging.eventhubs.PartitionBasedLoadBalancer.loadBalance"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.function.Consumer"
  name: "Consumer"
  nameWithType: "Consumer"
  fullName: "java.util.function.Consumer"
- uid: "com.azure.messaging.eventhubs.models.ErrorContext"
  name: "ErrorContext"
  nameWithType: "ErrorContext"
  fullName: "com.azure.messaging.eventhubs.models.ErrorContext"
