### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.TokenStreamFactory
  id: TokenStreamFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory()
  - com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(java.io.DataOutput)
  - com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(java.net.URL)
  - com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()
  - com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync()
  - com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  - com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.Writer)
  - com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser()
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[])
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[],int,int)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[])
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[],int,int)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.DataInput)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.File)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.InputStream)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.Reader)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.lang.String)
  - com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.net.URL)
  - com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures()
  - com.fasterxml.jackson.core.TokenStreamFactory.getFormatName()
  - com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures()
  - com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType()
  - com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType()
  - com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures()
  - com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures()
  - com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering()
  langs:
  - java
  name: TokenStreamFactory
  nameWithType: TokenStreamFactory
  fullName: com.fasterxml.jackson.core.TokenStreamFactory
  type: Class
  package: com.fasterxml.jackson.core
  summary: Intermediate base class for actual format-specific factories for constructing parsers (reading) and generators (writing). Although full power will only be available with Jackson 3, skeletal implementation added in 2.10 to help conversion of code for 2.x to 3.x migration of projects depending on Jackson
  syntax:
    content: public abstract class TokenStreamFactory implements Versioned, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.Versioned
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory()
  id: TokenStreamFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: TokenStreamFactory()
  nameWithType: TokenStreamFactory.TokenStreamFactory()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: public TokenStreamFactory()
- uid: com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(java.io.DataOutput)
  id: _createDataOutputWrapper(java.io.DataOutput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: _createDataOutputWrapper(DataOutput out)
  nameWithType: TokenStreamFactory._createDataOutputWrapper(DataOutput out)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(DataOutput out)
  overload: com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected OutputStream _createDataOutputWrapper(DataOutput out)
    parameters:
    - id: out
      type: java.io.DataOutput
    return:
      type: java.io.OutputStream
- uid: com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(java.net.URL)
  id: _optimizedStreamFromURL(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: _optimizedStreamFromURL(URL url)
  nameWithType: TokenStreamFactory._optimizedStreamFromURL(URL url)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(URL url)
  overload: com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Helper methods used for constructing an optimal stream for parsers to use, when input is to be read from an URL. This helps when reading file content via URL.
  syntax:
    content: protected InputStream _optimizedStreamFromURL(URL url)
    parameters:
    - id: url
      type: java.net.URL
    return:
      type: java.io.InputStream
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()
  id: canHandleBinaryNatively()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: canHandleBinaryNatively()
  nameWithType: TokenStreamFactory.canHandleBinaryNatively()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Introspection method that higher-level functionality may call to see whether underlying data format can read and write binary data natively; that is, embeded it as-is without using encodings such as Base64.


    Default implementation returns `false` as JSON does not support native access: all binary content must use Base64 encoding. Most binary formats (like Smile and Avro) support native binary content.
  syntax:
    content: public abstract boolean canHandleBinaryNatively()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync()
  id: canParseAsync()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: canParseAsync()
  nameWithType: TokenStreamFactory.canParseAsync()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Introspection method that can be used to check whether this factory can create non-blocking parsers: parsers that do not use blocking I/O abstractions but instead use a <xref uid="com.fasterxml.jackson.core.async.NonBlockingInputFeeder" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.async.NonBlockingInputFeeder</xref>.'
  syntax:
    content: public abstract boolean canParseAsync()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  id: canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: canUseSchema(FormatSchema schema)
  nameWithType: TokenStreamFactory.canUseSchema(FormatSchema schema)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(FormatSchema schema)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that can be used to quickly check whether given schema is something that parsers and/or generators constructed by this factory could use. Note that this means possible use, at the level of data format (i.e. schema is for same data format as parsers and generators this factory constructs); individual schema instances may have further usage restrictions.
  syntax:
    content: public abstract boolean canUseSchema(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput)
  id: createGenerator(java.io.DataOutput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(DataOutput out)
  nameWithType: TokenStreamFactory.createGenerator(DataOutput out)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(DataOutput out)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(DataOutput out)
    parameters:
    - id: out
      type: java.io.DataOutput
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)
  id: createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(DataOutput out, JsonEncoding enc)
  nameWithType: TokenStreamFactory.createGenerator(DataOutput out, JsonEncoding enc)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(DataOutput out, JsonEncoding enc)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(DataOutput out, JsonEncoding enc)
    parameters:
    - id: out
      type: java.io.DataOutput
    - id: enc
      type: com.fasterxml.jackson.core.JsonEncoding
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  id: createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(File f, JsonEncoding enc)
  nameWithType: TokenStreamFactory.createGenerator(File f, JsonEncoding enc)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(File f, JsonEncoding enc)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(File f, JsonEncoding enc)
    parameters:
    - id: f
      type: java.io.File
    - id: enc
      type: com.fasterxml.jackson.core.JsonEncoding
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream)
  id: createGenerator(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(OutputStream out)
  nameWithType: TokenStreamFactory.createGenerator(OutputStream out)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(OutputStream out)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  id: createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(OutputStream out, JsonEncoding enc)
  nameWithType: TokenStreamFactory.createGenerator(OutputStream out, JsonEncoding enc)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(OutputStream out, JsonEncoding enc)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(OutputStream out, JsonEncoding enc)
    parameters:
    - id: out
      type: java.io.OutputStream
    - id: enc
      type: com.fasterxml.jackson.core.JsonEncoding
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.Writer)
  id: createGenerator(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createGenerator(Writer w)
  nameWithType: TokenStreamFactory.createGenerator(Writer w)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(Writer w)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonGenerator createGenerator(Writer w)
    parameters:
    - id: w
      type: java.io.Writer
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser()
  id: createNonBlockingByteArrayParser()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createNonBlockingByteArrayParser()
  nameWithType: TokenStreamFactory.createNonBlockingByteArrayParser()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createNonBlockingByteArrayParser()
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[])
  id: createParser(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(byte[] data)
  nameWithType: TokenStreamFactory.createParser(byte[] data)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[] data)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(byte[] data)
    parameters:
    - id: data
      type: byte[]
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[],int,int)
  id: createParser(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(byte[] data, int offset, int len)
  nameWithType: TokenStreamFactory.createParser(byte[] data, int offset, int len)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[] data, int offset, int len)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(byte[] data, int offset, int len)
    parameters:
    - id: data
      type: byte[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[])
  id: createParser(char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(char[] content)
  nameWithType: TokenStreamFactory.createParser(char[] content)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[] content)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(char[] content)
    parameters:
    - id: content
      type: char[]
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[],int,int)
  id: createParser(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(char[] content, int offset, int len)
  nameWithType: TokenStreamFactory.createParser(char[] content, int offset, int len)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[] content, int offset, int len)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(char[] content, int offset, int len)
    parameters:
    - id: content
      type: char[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.DataInput)
  id: createParser(java.io.DataInput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(DataInput in)
  nameWithType: TokenStreamFactory.createParser(DataInput in)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(DataInput in)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(DataInput in)
    parameters:
    - id: in
      type: java.io.DataInput
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.File)
  id: createParser(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(File f)
  nameWithType: TokenStreamFactory.createParser(File f)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(File f)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(File f)
    parameters:
    - id: f
      type: java.io.File
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.InputStream)
  id: createParser(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(InputStream in)
  nameWithType: TokenStreamFactory.createParser(InputStream in)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(InputStream in)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(InputStream in)
    parameters:
    - id: in
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.Reader)
  id: createParser(java.io.Reader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(Reader r)
  nameWithType: TokenStreamFactory.createParser(Reader r)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(Reader r)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(Reader r)
    parameters:
    - id: r
      type: java.io.Reader
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.lang.String)
  id: createParser(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(String content)
  nameWithType: TokenStreamFactory.createParser(String content)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(String content)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(String content)
    parameters:
    - id: content
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.net.URL)
  id: createParser(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: createParser(URL url)
  nameWithType: TokenStreamFactory.createParser(URL url)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser(URL url)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract JsonParser createParser(URL url)
    parameters:
    - id: url
      type: java.net.URL
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures()
  id: getFormatGeneratorFeatures()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getFormatGeneratorFeatures()
  nameWithType: TokenStreamFactory.getFormatGeneratorFeatures()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract int getFormatGeneratorFeatures()
    return:
      type: int
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatName()
  id: getFormatName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getFormatName()
  nameWithType: TokenStreamFactory.getFormatName()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatName()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getFormatName*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that returns short textual id identifying format this factory supports.
  syntax:
    content: public abstract String getFormatName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures()
  id: getFormatParserFeatures()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getFormatParserFeatures()
  nameWithType: TokenStreamFactory.getFormatParserFeatures()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract int getFormatParserFeatures()
    return:
      type: int
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType()
  id: getFormatReadFeatureType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getFormatReadFeatureType()
  nameWithType: TokenStreamFactory.getFormatReadFeatureType()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for accessing kind of <xref uid="? extends com.fasterxml.jackson.core.FormatFeature" data-throw-if-not-resolved="false">FormatFeature</xref> that a parser <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> produced by this factory would accept, if any; `null` returned if none.
  syntax:
    content: public abstract Class<? extends FormatFeature> getFormatReadFeatureType()
    return:
      type: java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature>
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType()
  id: getFormatWriteFeatureType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getFormatWriteFeatureType()
  nameWithType: TokenStreamFactory.getFormatWriteFeatureType()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for accessing kind of <xref uid="? extends com.fasterxml.jackson.core.FormatFeature" data-throw-if-not-resolved="false">FormatFeature</xref> that a parser <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> produced by this factory would accept, if any; `null` returned if none.
  syntax:
    content: public abstract Class<? extends FormatFeature> getFormatWriteFeatureType()
    return:
      type: java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature>
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures()
  id: getGeneratorFeatures()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getGeneratorFeatures()
  nameWithType: TokenStreamFactory.getGeneratorFeatures()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract int getGeneratorFeatures()
    return:
      type: int
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures()
  id: getParserFeatures()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: getParserFeatures()
  nameWithType: TokenStreamFactory.getParserFeatures()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract int getParserFeatures()
    return:
      type: int
- uid: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: isEnabled(JsonGenerator.Feature f)
  nameWithType: TokenStreamFactory.isEnabled(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract boolean isEnabled(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: isEnabled(JsonParser.Feature f)
  nameWithType: TokenStreamFactory.isEnabled(JsonParser.Feature f)
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(JsonParser.Feature f)
  overload: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract boolean isEnabled(JsonParser.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonParser.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering()
  id: requiresPropertyOrdering()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.TokenStreamFactory
  langs:
  - java
  name: requiresPropertyOrdering()
  nameWithType: TokenStreamFactory.requiresPropertyOrdering()
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering()
  overload: com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Introspection method that higher-level functionality may call to see whether underlying data format requires a stable ordering of object properties or not. This is usually used for determining whether to force a stable ordering (like alphabetic ordering by name) if no ordering if explicitly specified.


    Default implementation returns `false` as JSON does NOT require stable ordering. Formats that require ordering include positional textual formats like `CSV`, and schema-based binary formats like `Avro`.
  syntax:
    content: public abstract boolean requiresPropertyOrdering()
    return:
      type: boolean
references:
- uid: com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory*
  name: TokenStreamFactory
  nameWithType: TokenStreamFactory.TokenStreamFactory
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory
  package: com.fasterxml.jackson.core
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering*
  name: requiresPropertyOrdering
  nameWithType: TokenStreamFactory.requiresPropertyOrdering
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively*
  name: canHandleBinaryNatively
  nameWithType: TokenStreamFactory.canHandleBinaryNatively
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync*
  name: canParseAsync
  nameWithType: TokenStreamFactory.canParseAsync
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync
  package: com.fasterxml.jackson.core
- uid: java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends com.fasterxml.jackson.core.FormatFeature'
    name: FormatFeature
    fullName: '? extends com.fasterxml.jackson.core.FormatFeature'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType*
  name: getFormatReadFeatureType
  nameWithType: TokenStreamFactory.getFormatReadFeatureType
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType*
  name: getFormatWriteFeatureType
  nameWithType: TokenStreamFactory.getFormatWriteFeatureType
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.FormatSchema
  name: FormatSchema
  nameWithType: FormatSchema
  fullName: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema*
  name: canUseSchema
  nameWithType: TokenStreamFactory.canUseSchema
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema
  package: com.fasterxml.jackson.core
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatName*
  name: getFormatName
  nameWithType: TokenStreamFactory.getFormatName
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatName
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonParser.Feature
  name: JsonParser.Feature
  nameWithType: JsonParser.Feature
  fullName: com.fasterxml.jackson.core.JsonParser.Feature
- uid: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled*
  name: isEnabled
  nameWithType: TokenStreamFactory.isEnabled
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.isEnabled
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures*
  name: getParserFeatures
  nameWithType: TokenStreamFactory.getParserFeatures
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures*
  name: getGeneratorFeatures
  nameWithType: TokenStreamFactory.getGeneratorFeatures
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures*
  name: getFormatParserFeatures
  nameWithType: TokenStreamFactory.getFormatParserFeatures
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures*
  name: getFormatGeneratorFeatures
  nameWithType: TokenStreamFactory.getFormatGeneratorFeatures
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures
  package: com.fasterxml.jackson.core
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createParser*
  name: createParser
  nameWithType: TokenStreamFactory.createParser
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createParser
  package: com.fasterxml.jackson.core
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: java.io.DataInput
  spec.java:
  - uid: java.io.DataInput
    name: DataInput
    fullName: java.io.DataInput
- uid: java.io.File
  spec.java:
  - uid: java.io.File
    name: File
    fullName: java.io.File
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: java.io.Reader
  spec.java:
  - uid: java.io.Reader
    name: Reader
    fullName: java.io.Reader
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser*
  name: createNonBlockingByteArrayParser
  nameWithType: TokenStreamFactory.createNonBlockingByteArrayParser
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser
  package: com.fasterxml.jackson.core
- uid: java.io.DataOutput
  spec.java:
  - uid: java.io.DataOutput
    name: DataOutput
    fullName: java.io.DataOutput
- uid: com.fasterxml.jackson.core.JsonEncoding
  name: JsonEncoding
  nameWithType: JsonEncoding
  fullName: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator*
  name: createGenerator
  nameWithType: TokenStreamFactory.createGenerator
  fullName: com.fasterxml.jackson.core.TokenStreamFactory.createGenerator
  package: com.fasterxml.jackson.core
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper*
  name: _createDataOutputWrapper
  nameWithType: TokenStreamFactory._createDataOutputWrapper
  fullName: com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL*
  name: _optimizedStreamFromURL
  nameWithType: TokenStreamFactory._optimizedStreamFromURL
  fullName: com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Versioned
  name: Versioned
  nameWithType: Versioned
  fullName: com.fasterxml.jackson.core.Versioned
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: '? extends com.fasterxml.jackson.core.FormatFeature'
  name: '? extends FormatFeature'
  nameWithType: '? extends FormatFeature'
  fullName: '? extends com.fasterxml.jackson.core.FormatFeature'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
