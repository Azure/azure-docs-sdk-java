### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.TokenStreamFactory"
fullName: "com.fasterxml.jackson.core.TokenStreamFactory"
name: "TokenStreamFactory"
nameWithType: "TokenStreamFactory"
summary: "Intermediate base class for actual format-specific factories for constructing parsers (reading) and generators (writing). Although full power will only be available with Jackson 3, skeletal implementation added in 2.10 to help conversion of code for 2.x to 3.x migration of projects depending on Jackson"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class TokenStreamFactory implements Versioned, Serializable"
constructors:
- "com.fasterxml.jackson.core.TokenStreamFactory.TokenStreamFactory()"
methods:
- "com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(java.io.DataOutput)"
- "com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(java.net.URL)"
- "com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()"
- "com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync()"
- "com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser()"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[])"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[],int,int)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[])"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[],int,int)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.DataInput)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.File)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.Reader)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.lang.String)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.net.URL)"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatName()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering()"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.core.Versioned?alt=com.fasterxml.jackson.core.Versioned&text=Versioned\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
