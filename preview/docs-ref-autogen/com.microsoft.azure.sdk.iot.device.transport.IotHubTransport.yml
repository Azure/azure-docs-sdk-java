### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport"
fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport"
name: "IotHubTransport"
nameWithType: "IotHubTransport"
summary: "Manages queueing of message sending, receiving and callbacks."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IotHubTransport implements IotHubListener"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport(com.microsoft.azure.sdk.iot.device.DeviceClientConfig,com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)"
  name: "IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)"
  nameWithType: "IotHubTransport.IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)"
  summary: "Constructor for an Iot<wbr>Hub<wbr>Transport object with default values"
  parameters:
  - description: "the config used for opening connections, retrieving retry policy, and checking protocol"
    name: "defaultConfig"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceIOConnectionStatusChangeCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback&text=IotHubConnectionStatusChangeCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)"
  exceptions:
  - description: "if defaultConfig is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor for an IotHubTransport object with default values"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)"
  name: "addMessage(Message message, IotHubEventCallback callback, Object callbackContext)"
  nameWithType: "IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)"
  summary: "Adds a message to the transport queue."
  parameters:
  - description: "the message to be sent."
    name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback to be invoked when a response for the\n message is received."
    name: "callback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to be passed in when the callback is\n invoked."
    name: "callbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)"
  desc: "Adds a message to the transport queue."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason,java.lang.Throwable)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close(IotHubConnectionStatusChangeReason reason, Throwable cause)"
  name: "close(IotHubConnectionStatusChangeReason reason, Throwable cause)"
  nameWithType: "IotHubTransport.close(IotHubConnectionStatusChangeReason reason, Throwable cause)"
  summary: "Closes all resources used to communicate with an IoT Hub."
  parameters:
  - description: "the reason to close this connection, to be reported over connection status change callback"
    name: "reason"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason&text=IotHubConnectionStatusChangeReason\" data-throw-if-not-resolved=\"False\" />"
  - description: "the cause of why this connection is closing, to be reported over connection status change callback"
    name: "cause"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void close(IotHubConnectionStatusChangeReason reason, Throwable cause)"
  exceptions:
  - description: "if an error occurs in closing the transport."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException&text=DeviceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Closes all resources used to communicate with an IoT Hub. Once `close()` is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol()"
  name: "getProtocol()"
  nameWithType: "IotHubTransport.getProtocol()"
  syntax: "public IotHubClientProtocol getProtocol()"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock()"
  name: "getReceiveThreadLock()"
  nameWithType: "IotHubTransport.getReceiveThreadLock()"
  syntax: "public Object getReceiveThreadLock()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock()"
  name: "getSendThreadLock()"
  nameWithType: "IotHubTransport.getSendThreadLock()"
  syntax: "public Object getSendThreadLock()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()"
  name: "handleMessage()"
  nameWithType: "IotHubTransport.handleMessage()"
  summary: "Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub."
  syntax: "public void handleMessage()"
  exceptions:
  - description: "if the server could not be reached."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException&text=DeviceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.\n\nIf no message callback is set, the function will do nothing."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute()"
  name: "hasCallbacksToExecute()"
  nameWithType: "IotHubTransport.hasCallbacksToExecute()"
  syntax: "public boolean hasCallbacksToExecute()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend()"
  name: "hasMessagesToSend()"
  nameWithType: "IotHubTransport.hasMessagesToSend()"
  syntax: "public boolean hasMessagesToSend()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle()"
  name: "hasReceivedMessagesToHandle()"
  nameWithType: "IotHubTransport.hasReceivedMessagesToHandle()"
  syntax: "public boolean hasReceivedMessagesToHandle()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()"
  name: "invokeCallbacks()"
  nameWithType: "IotHubTransport.invokeCallbacks()"
  summary: "Invokes the callbacks for all completed requests."
  syntax: "public void invokeCallbacks()"
  desc: "Invokes the callbacks for all completed requests."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed()"
  name: "isClosed()"
  nameWithType: "IotHubTransport.isClosed()"
  syntax: "public boolean isClosed()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()"
  name: "isEmpty()"
  nameWithType: "IotHubTransport.isEmpty()"
  summary: "Returns `true` if the transport has no more messages to handle, and `false` otherwise."
  syntax: "public boolean isEmpty()"
  desc: "Returns `true` if the transport has no more messages to handle, and `false` otherwise."
  returns:
    description: "<code>true</code> if the transport has no more messages to handle,\n and <code>false</code> otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(String connectionId)"
  name: "onConnectionEstablished(String connectionId)"
  nameWithType: "IotHubTransport.onConnectionEstablished(String connectionId)"
  summary: "Callback to be fired when the connection has been successfully established"
  parameters:
  - name: "connectionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionEstablished(String connectionId)"
  desc: "Callback to be fired when the connection has been successfully established"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(java.lang.Throwable,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(Throwable e, String connectionId)"
  name: "onConnectionLost(Throwable e, String connectionId)"
  nameWithType: "IotHubTransport.onConnectionLost(Throwable e, String connectionId)"
  summary: "Callback to be fired when connection has been lost"
  parameters:
  - name: "e"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  - name: "connectionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionLost(Throwable e, String connectionId)"
  desc: "Callback to be fired when connection has been lost"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,java.lang.Throwable)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived(IotHubTransportMessage message, Throwable e)"
  name: "onMessageReceived(IotHubTransportMessage message, Throwable e)"
  nameWithType: "IotHubTransport.onMessageReceived(IotHubTransportMessage message, Throwable e)"
  summary: "Callback to be fired when a transport message has been received."
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  - name: "e"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageReceived(IotHubTransportMessage message, Throwable e)"
  desc: "Callback to be fired when a transport message has been received."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent(com.microsoft.azure.sdk.iot.device.Message,java.lang.Throwable)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent(Message message, Throwable e)"
  name: "onMessageSent(Message message, Throwable e)"
  nameWithType: "IotHubTransport.onMessageSent(Message message, Throwable e)"
  summary: "Callback to be fired when a message that the transport client sent has been acknowledged by Iot Hub"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - name: "e"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageSent(Message message, Throwable e)"
  desc: "Callback to be fired when a message that the transport client sent has been acknowledged by Iot Hub"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(java.util.Collection<com.microsoft.azure.sdk.iot.device.DeviceClientConfig>)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(Collection<DeviceClientConfig> deviceClientConfigs)"
  name: "open(Collection<DeviceClientConfig> deviceClientConfigs)"
  nameWithType: "IotHubTransport.open(Collection<DeviceClientConfig> deviceClientConfigs)"
  summary: "Establishes a communication channel with an IoT Hub."
  parameters:
  - description: "the configs for the devices to open"
    name: "deviceClientConfigs"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void open(Collection<DeviceClientConfig> deviceClientConfigs)"
  exceptions:
  - description: "if a communication channel cannot be\n established."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException&text=DeviceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing. If reconnection is occurring when this is called, this function shall block and wait for the reconnection to finish before trying to open the connection"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)"
  name: "registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)"
  nameWithType: "IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)"
  summary: "Registers a callback to be executed whenever the connection to the IoT Hub is lost or established."
  parameters:
  - description: "the callback to be called."
    name: "callback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback&text=IotHubConnectionStateCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "a context to be passed to the callback. Can be\n <code>null</code> if no callback is provided."
    name: "callbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)"
  desc: "Registers a callback to be executed whenever the connection to the IoT Hub is lost or established."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  name: "registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  nameWithType: "IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  summary: "Registers a callback to be executed whenever the connection status to the IoT Hub has changed."
  parameters:
  - description: "the callback to be called. Can be null if callbackContext is not null"
    name: "callback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback&text=IotHubConnectionStatusChangeCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "a context to be passed to the callback. Can be <code>null</code>."
    name: "callbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  desc: "Registers a callback to be executed whenever the connection status to the IoT Hub has changed."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()"
  name: "sendMessages()"
  nameWithType: "IotHubTransport.sendMessages()"
  summary: "Sends all messages on the transport queue."
  syntax: "public void sendMessages()"
  desc: "Sends all messages on the transport queue. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt."
type: "class"
desc: "Manages queueing of message sending, receiving and callbacks. Manages notifying users of connection status change updates"
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubListener?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubListener&text=IotHubListener\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
