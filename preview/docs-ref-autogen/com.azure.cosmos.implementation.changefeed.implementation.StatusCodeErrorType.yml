### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  id: "StatusCodeErrorType"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.MAX_ITEM_COUNT_TOO_LARGE"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_NOT_FOUND"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_SPLIT"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.TRANSIENT_ERROR"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.UNDEFINED"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf(java.lang.String)"
  - "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values()"
  langs:
  - "java"
  name: "StatusCodeErrorType"
  nameWithType: "StatusCodeErrorType"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  type: "Enum"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Groups types of status code errors returned while processing the change feeds."
  syntax:
    content: " enum StatusCodeErrorType extends Enum<StatusCodeErrorType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.MAX_ITEM_COUNT_TOO_LARGE"
  id: "MAX_ITEM_COUNT_TOO_LARGE"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "MAX_ITEM_COUNT_TOO_LARGE"
  nameWithType: "StatusCodeErrorType.MAX_ITEM_COUNT_TOO_LARGE"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.MAX_ITEM_COUNT_TOO_LARGE"
  type: "Field"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static final StatusCodeErrorType MAX_ITEM_COUNT_TOO_LARGE"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_NOT_FOUND"
  id: "PARTITION_NOT_FOUND"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "PARTITION_NOT_FOUND"
  nameWithType: "StatusCodeErrorType.PARTITION_NOT_FOUND"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_NOT_FOUND"
  type: "Field"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static final StatusCodeErrorType PARTITION_NOT_FOUND"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_SPLIT"
  id: "PARTITION_SPLIT"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "PARTITION_SPLIT"
  nameWithType: "StatusCodeErrorType.PARTITION_SPLIT"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.PARTITION_SPLIT"
  type: "Field"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static final StatusCodeErrorType PARTITION_SPLIT"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.StatusCodeErrorType()"
  id: "StatusCodeErrorType()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "StatusCodeErrorType()"
  nameWithType: "StatusCodeErrorType.StatusCodeErrorType()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.StatusCodeErrorType()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.StatusCodeErrorType*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "private StatusCodeErrorType()"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.TRANSIENT_ERROR"
  id: "TRANSIENT_ERROR"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "TRANSIENT_ERROR"
  nameWithType: "StatusCodeErrorType.TRANSIENT_ERROR"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.TRANSIENT_ERROR"
  type: "Field"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static final StatusCodeErrorType TRANSIENT_ERROR"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.UNDEFINED"
  id: "UNDEFINED"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "UNDEFINED"
  nameWithType: "StatusCodeErrorType.UNDEFINED"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.UNDEFINED"
  type: "Field"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static final StatusCodeErrorType UNDEFINED"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "StatusCodeErrorType.valueOf(String name)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf(String name)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static StatusCodeErrorType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values()"
  id: "values()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "StatusCodeErrorType.values()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public static StatusCodeErrorType[] values()"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType[]"
references:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.StatusCodeErrorType*"
  name: "StatusCodeErrorType"
  nameWithType: "StatusCodeErrorType.StatusCodeErrorType"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.StatusCodeErrorType"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType[]"
  spec.java:
  - uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
    name: "StatusCodeErrorType"
    fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values*"
  name: "values"
  nameWithType: "StatusCodeErrorType.values"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.values"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf*"
  name: "valueOf"
  nameWithType: "StatusCodeErrorType.valueOf"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType.valueOf"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.Enum<com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType>"
  name: "Enum<StatusCodeErrorType>"
  nameWithType: "Enum<StatusCodeErrorType>"
  fullName: "java.lang.Enum<com.azure.cosmos.implementation.changefeed.implementation.StatusCodeErrorType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
