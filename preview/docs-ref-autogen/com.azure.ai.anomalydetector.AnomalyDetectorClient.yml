### YamlMime:JavaType
uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient"
fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient"
name: "AnomalyDetectorClient"
nameWithType: "AnomalyDetectorClient"
summary: "Initializes a new instance of the synchronous Anomaly<wbr>Detector<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class AnomalyDetectorClient"
methods:
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.deleteMultivariateModel(java.util.UUID)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.deleteMultivariateModel(UUID modelId)"
  name: "deleteMultivariateModel(UUID modelId)"
  nameWithType: "AnomalyDetectorClient.deleteMultivariateModel(UUID modelId)"
  summary: "Delete an existing multivariate model according to the model<wbr>Id."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public void deleteMultivariateModel(UUID modelId)"
  desc: "Delete an existing multivariate model according to the modelId."
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.deleteMultivariateModelWithResponse(java.util.UUID,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.deleteMultivariateModelWithResponse(UUID modelId, Context context)"
  name: "deleteMultivariateModelWithResponse(UUID modelId, Context context)"
  nameWithType: "AnomalyDetectorClient.deleteMultivariateModelWithResponse(UUID modelId, Context context)"
  summary: "Delete an existing multivariate model according to the model<wbr>Id."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteMultivariateModelWithResponse(UUID modelId, Context context)"
  desc: "Delete an existing multivariate model according to the modelId."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectAnomaly(java.util.UUID,com.azure.ai.anomalydetector.models.DetectionRequest)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectAnomaly(UUID modelId, DetectionRequest body)"
  name: "detectAnomaly(UUID modelId, DetectionRequest body)"
  nameWithType: "AnomalyDetectorClient.detectAnomaly(UUID modelId, DetectionRequest body)"
  summary: "Submit detection multivariate anomaly task with the trained model of model<wbr>Id, the input schema should be the same with the training request."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Detect anomaly request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectionRequest?alt=com.azure.ai.anomalydetector.models.DetectionRequest&text=DetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void detectAnomaly(UUID modelId, DetectionRequest body)"
  desc: "Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value."
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectAnomalyWithResponse(java.util.UUID,com.azure.ai.anomalydetector.models.DetectionRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectAnomalyWithResponse(UUID modelId, DetectionRequest body, Context context)"
  name: "detectAnomalyWithResponse(UUID modelId, DetectionRequest body, Context context)"
  nameWithType: "AnomalyDetectorClient.detectAnomalyWithResponse(UUID modelId, DetectionRequest body, Context context)"
  summary: "Submit detection multivariate anomaly task with the trained model of model<wbr>Id, the input schema should be the same with the training request."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Detect anomaly request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectionRequest?alt=com.azure.ai.anomalydetector.models.DetectionRequest&text=DetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DetectAnomalyResponse detectAnomalyWithResponse(UUID modelId, DetectionRequest body, Context context)"
  desc: "Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectAnomalyResponse?alt=com.azure.ai.anomalydetector.models.DetectAnomalyResponse&text=DetectAnomalyResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint(ChangePointDetectRequest body)"
  name: "detectChangePoint(ChangePointDetectRequest body)"
  nameWithType: "AnomalyDetectorClient.detectChangePoint(ChangePointDetectRequest body)"
  summary: "Evaluate change point score of every series point."
  parameters:
  - description: "Time series points and granularity is needed. Advanced model parameters can also be set in the\n     request if needed."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectRequest?alt=com.azure.ai.anomalydetector.models.ChangePointDetectRequest&text=ChangePointDetectRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangePointDetectResponse detectChangePoint(ChangePointDetectRequest body)"
  desc: "Evaluate change point score of every series point."
  returns:
    description: "the response of change point detection."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectResponse?alt=com.azure.ai.anomalydetector.models.ChangePointDetectResponse&text=ChangePointDetectResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)"
  name: "detectChangePointWithResponse(ChangePointDetectRequest body, Context context)"
  nameWithType: "AnomalyDetectorClient.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)"
  summary: "Evaluate change point score of every series point."
  parameters:
  - description: "Time series points and granularity is needed. Advanced model parameters can also be set in the\n     request if needed."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectRequest?alt=com.azure.ai.anomalydetector.models.ChangePointDetectRequest&text=ChangePointDetectRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ChangePointDetectResponse> detectChangePointWithResponse(ChangePointDetectRequest body, Context context)"
  desc: "Evaluate change point score of every series point."
  returns:
    description: "the response of change point detection."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectResponse?alt=com.azure.ai.anomalydetector.models.ChangePointDetectResponse&text=ChangePointDetectResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries(DetectRequest body)"
  name: "detectEntireSeries(DetectRequest body)"
  nameWithType: "AnomalyDetectorClient.detectEntireSeries(DetectRequest body)"
  summary: "This operation generates a model with an entire series, each point is detected with the same model."
  parameters:
  - description: "Time series points and period if needed. Advanced model parameters can also be set in the request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectRequest?alt=com.azure.ai.anomalydetector.models.DetectRequest&text=DetectRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EntireDetectResponse detectEntireSeries(DetectRequest body)"
  desc: "This operation generates a model with an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series."
  returns:
    description: "the response of entire anomaly detection."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.EntireDetectResponse?alt=com.azure.ai.anomalydetector.models.EntireDetectResponse&text=EntireDetectResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse(DetectRequest body, Context context)"
  name: "detectEntireSeriesWithResponse(DetectRequest body, Context context)"
  nameWithType: "AnomalyDetectorClient.detectEntireSeriesWithResponse(DetectRequest body, Context context)"
  summary: "This operation generates a model with an entire series, each point is detected with the same model."
  parameters:
  - description: "Time series points and period if needed. Advanced model parameters can also be set in the request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectRequest?alt=com.azure.ai.anomalydetector.models.DetectRequest&text=DetectRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<EntireDetectResponse> detectEntireSeriesWithResponse(DetectRequest body, Context context)"
  desc: "This operation generates a model with an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series."
  returns:
    description: "the response of entire anomaly detection."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.EntireDetectResponse?alt=com.azure.ai.anomalydetector.models.EntireDetectResponse&text=EntireDetectResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint(DetectRequest body)"
  name: "detectLastPoint(DetectRequest body)"
  nameWithType: "AnomalyDetectorClient.detectLastPoint(DetectRequest body)"
  summary: "This operation generates a model using points before the latest one."
  parameters:
  - description: "Time series points and period if needed. Advanced model parameters can also be set in the request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectRequest?alt=com.azure.ai.anomalydetector.models.DetectRequest&text=DetectRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LastDetectResponse detectLastPoint(DetectRequest body)"
  desc: "This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics."
  returns:
    description: "the response of last anomaly detection."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.LastDetectResponse?alt=com.azure.ai.anomalydetector.models.LastDetectResponse&text=LastDetectResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse(DetectRequest body, Context context)"
  name: "detectLastPointWithResponse(DetectRequest body, Context context)"
  nameWithType: "AnomalyDetectorClient.detectLastPointWithResponse(DetectRequest body, Context context)"
  summary: "This operation generates a model using points before the latest one."
  parameters:
  - description: "Time series points and period if needed. Advanced model parameters can also be set in the request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectRequest?alt=com.azure.ai.anomalydetector.models.DetectRequest&text=DetectRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<LastDetectResponse> detectLastPointWithResponse(DetectRequest body, Context context)"
  desc: "This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics."
  returns:
    description: "the response of last anomaly detection."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.LastDetectResponse?alt=com.azure.ai.anomalydetector.models.LastDetectResponse&text=LastDetectResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.exportModel(java.util.UUID)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.exportModel(UUID modelId)"
  name: "exportModel(UUID modelId)"
  nameWithType: "AnomalyDetectorClient.exportModel(UUID modelId)"
  summary: "Export multivariate anomaly detection model based on model<wbr>Id."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public InputStream exportModel(UUID modelId)"
  desc: "Export multivariate anomaly detection model based on modelId."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.exportModelWithResponse(java.util.UUID,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.exportModelWithResponse(UUID modelId, Context context)"
  name: "exportModelWithResponse(UUID modelId, Context context)"
  nameWithType: "AnomalyDetectorClient.exportModelWithResponse(UUID modelId, Context context)"
  summary: "Export multivariate anomaly detection model based on model<wbr>Id."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamResponse exportModelWithResponse(UUID modelId, Context context)"
  desc: "Export multivariate anomaly detection model based on modelId."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getDetectionResult(java.util.UUID)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getDetectionResult(UUID resultId)"
  name: "getDetectionResult(UUID resultId)"
  nameWithType: "AnomalyDetectorClient.getDetectionResult(UUID resultId)"
  summary: "Get multivariate anomaly detection result based on result<wbr>Id returned by the Detect<wbr>Anomaly<wbr>Async api."
  parameters:
  - description: "Result identifier."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public DetectionResult getDetectionResult(UUID resultId)"
  desc: "Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
  returns:
    description: "multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DetectionResult?alt=com.azure.ai.anomalydetector.models.DetectionResult&text=DetectionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getDetectionResultWithResponse(java.util.UUID,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getDetectionResultWithResponse(UUID resultId, Context context)"
  name: "getDetectionResultWithResponse(UUID resultId, Context context)"
  nameWithType: "AnomalyDetectorClient.getDetectionResultWithResponse(UUID resultId, Context context)"
  summary: "Get multivariate anomaly detection result based on result<wbr>Id returned by the Detect<wbr>Anomaly<wbr>Async api."
  parameters:
  - description: "Result identifier."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DetectionResult> getDetectionResultWithResponse(UUID resultId, Context context)"
  desc: "Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
  returns:
    description: "multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.DetectionResult?alt=com.azure.ai.anomalydetector.models.DetectionResult&text=DetectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getMultivariateModel(java.util.UUID)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getMultivariateModel(UUID modelId)"
  name: "getMultivariateModel(UUID modelId)"
  nameWithType: "AnomalyDetectorClient.getMultivariateModel(UUID modelId)"
  summary: "Get detailed information of multivariate model, including the training status and variables used in the model."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  syntax: "public Model getMultivariateModel(UUID modelId)"
  desc: "Get detailed information of multivariate model, including the training status and variables used in the model."
  returns:
    description: "detailed information of multivariate model, including the training status and variables used in the\n     model."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.Model?alt=com.azure.ai.anomalydetector.models.Model&text=Model\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getMultivariateModelWithResponse(java.util.UUID,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.getMultivariateModelWithResponse(UUID modelId, Context context)"
  name: "getMultivariateModelWithResponse(UUID modelId, Context context)"
  nameWithType: "AnomalyDetectorClient.getMultivariateModelWithResponse(UUID modelId, Context context)"
  summary: "Get detailed information of multivariate model, including the training status and variables used in the model."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Model> getMultivariateModelWithResponse(UUID modelId, Context context)"
  desc: "Get detailed information of multivariate model, including the training status and variables used in the model."
  returns:
    description: "detailed information of multivariate model, including the training status and variables used in the\n     model."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.Model?alt=com.azure.ai.anomalydetector.models.Model&text=Model\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.lastDetectAnomaly(java.util.UUID,com.azure.ai.anomalydetector.models.LastDetectionRequest)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.lastDetectAnomaly(UUID modelId, LastDetectionRequest body)"
  name: "lastDetectAnomaly(UUID modelId, LastDetectionRequest body)"
  nameWithType: "AnomalyDetectorClient.lastDetectAnomaly(UUID modelId, LastDetectionRequest body)"
  summary: "Synchronized API for anomaly detection."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Request for last detection."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.LastDetectionRequest?alt=com.azure.ai.anomalydetector.models.LastDetectionRequest&text=LastDetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LastDetectionResult lastDetectAnomaly(UUID modelId, LastDetectionRequest body)"
  desc: "Synchronized API for anomaly detection."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.LastDetectionResult?alt=com.azure.ai.anomalydetector.models.LastDetectionResult&text=LastDetectionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.lastDetectAnomalyWithResponse(java.util.UUID,com.azure.ai.anomalydetector.models.LastDetectionRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.lastDetectAnomalyWithResponse(UUID modelId, LastDetectionRequest body, Context context)"
  name: "lastDetectAnomalyWithResponse(UUID modelId, LastDetectionRequest body, Context context)"
  nameWithType: "AnomalyDetectorClient.lastDetectAnomalyWithResponse(UUID modelId, LastDetectionRequest body, Context context)"
  summary: "Synchronized API for anomaly detection."
  parameters:
  - description: "Model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Request for last detection."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.LastDetectionRequest?alt=com.azure.ai.anomalydetector.models.LastDetectionRequest&text=LastDetectionRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<LastDetectionResult> lastDetectAnomalyWithResponse(UUID modelId, LastDetectionRequest body, Context context)"
  desc: "Synchronized API for anomaly detection."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.LastDetectionResult?alt=com.azure.ai.anomalydetector.models.LastDetectionResult&text=LastDetectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.listMultivariateModel(java.lang.Integer,java.lang.Integer)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.listMultivariateModel(Integer skip, Integer top)"
  name: "listMultivariateModel(Integer skip, Integer top)"
  nameWithType: "AnomalyDetectorClient.listMultivariateModel(Integer skip, Integer top)"
  summary: "List models of a subscription."
  parameters:
  - description: "$skip indicates how many models will be skipped."
    name: "skip"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "$top indicates how many models will be fetched."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public PagedIterable<ModelSnapshot> listMultivariateModel(Integer skip, Integer top)"
  desc: "List models of a subscription."
  returns:
    description: "response of listing models."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ModelSnapshot?alt=com.azure.ai.anomalydetector.models.ModelSnapshot&text=ModelSnapshot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.listMultivariateModel(java.lang.Integer,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.listMultivariateModel(Integer skip, Integer top, Context context)"
  name: "listMultivariateModel(Integer skip, Integer top, Context context)"
  nameWithType: "AnomalyDetectorClient.listMultivariateModel(Integer skip, Integer top, Context context)"
  summary: "List models of a subscription."
  parameters:
  - description: "$skip indicates how many models will be skipped."
    name: "skip"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "$top indicates how many models will be fetched."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ModelSnapshot> listMultivariateModel(Integer skip, Integer top, Context context)"
  desc: "List models of a subscription."
  returns:
    description: "response of listing models."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ModelSnapshot?alt=com.azure.ai.anomalydetector.models.ModelSnapshot&text=ModelSnapshot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.trainMultivariateModel(com.azure.ai.anomalydetector.models.ModelInfo)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.trainMultivariateModel(ModelInfo body)"
  name: "trainMultivariateModel(ModelInfo body)"
  nameWithType: "AnomalyDetectorClient.trainMultivariateModel(ModelInfo body)"
  summary: "Create and train a multivariate anomaly detection model."
  parameters:
  - description: "Training request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void trainMultivariateModel(ModelInfo body)"
  desc: "Create and train a multivariate anomaly detection model. The request must include a source parameter to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be in a single CSV file in which the first column is timestamp and the second column is value."
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorClient.trainMultivariateModelWithResponse(com.azure.ai.anomalydetector.models.ModelInfo,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorClient.trainMultivariateModelWithResponse(ModelInfo body, Context context)"
  name: "trainMultivariateModelWithResponse(ModelInfo body, Context context)"
  nameWithType: "AnomalyDetectorClient.trainMultivariateModelWithResponse(ModelInfo body, Context context)"
  summary: "Create and train a multivariate anomaly detection model."
  parameters:
  - description: "Training request."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TrainMultivariateModelResponse trainMultivariateModelWithResponse(ModelInfo body, Context context)"
  desc: "Create and train a multivariate anomaly detection model. The request must include a source parameter to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be in a single CSV file in which the first column is timestamp and the second column is value."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.TrainMultivariateModelResponse?alt=com.azure.ai.anomalydetector.models.TrainMultivariateModelResponse&text=TrainMultivariateModelResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the synchronous AnomalyDetectorClient type."
metadata: {}
package: "com.azure.ai.anomalydetector"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.4
