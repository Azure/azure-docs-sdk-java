### YamlMime:ManagedReference
items:
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient
  id: AnomalyDetectorClient
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector
  children:
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  langs:
  - java
  name: AnomalyDetectorClient
  nameWithType: AnomalyDetectorClient
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient
  type: Class
  package: com.azure.ai.anomalydetector
  summary: Initializes a new instance of the synchronous AnomalyDetectorClient type.
  syntax:
    content: public final class AnomalyDetectorClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.AnomalyDetectorClient(com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl)
  id: AnomalyDetectorClient(com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: AnomalyDetectorClient(AnomalyDetectorClientImpl serviceClient)
  nameWithType: AnomalyDetectorClient.AnomalyDetectorClient(AnomalyDetectorClientImpl serviceClient)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.AnomalyDetectorClient(AnomalyDetectorClientImpl serviceClient)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.AnomalyDetectorClient*
  type: Constructor
  package: com.azure.ai.anomalydetector
  summary: Initializes an instance of AnomalyDetectorClient client.
  syntax:
    content: " AnomalyDetectorClient(AnomalyDetectorClientImpl serviceClient)"
    parameters:
    - id: serviceClient
      type: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectChangePoint(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorClient.detectChangePoint(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: Evaluate change point score of every series point.
  syntax:
    content: public ChangePointDetectResponse detectChangePoint(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  id: detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  nameWithType: AnomalyDetectorClient.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Response<ChangePointDetectResponse> detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectEntireSeries(DetectRequest body)
  nameWithType: AnomalyDetectorClient.detectEntireSeries(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public EntireDetectResponse detectEntireSeries(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectEntireSeriesWithResponse(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClient.detectEntireSeriesWithResponse(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Response<EntireDetectResponse> detectEntireSeriesWithResponse(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectLastPoint(DetectRequest body)
  nameWithType: AnomalyDetectorClient.detectLastPoint(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public LastDetectResponse detectLastPoint(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: com.azure.ai.anomalydetector.models.LastDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorClient
  langs:
  - java
  name: detectLastPointWithResponse(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClient.detectLastPointWithResponse(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Response<LastDetectResponse> detectLastPointWithResponse(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>
      description: the response.
references:
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  name: AnomalyDetectorClientImpl
  nameWithType: AnomalyDetectorClientImpl
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.AnomalyDetectorClient*
  name: AnomalyDetectorClient
  nameWithType: AnomalyDetectorClient.AnomalyDetectorClient
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.AnomalyDetectorClient
  package: com.azure.ai.anomalydetector
- uid: com.azure.ai.anomalydetector.models.DetectRequest
  name: DetectRequest
  nameWithType: DetectRequest
  fullName: com.azure.ai.anomalydetector.models.DetectRequest
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
  name: EntireDetectResponse
  nameWithType: EntireDetectResponse
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries*
  name: detectEntireSeries
  nameWithType: AnomalyDetectorClient.detectEntireSeries
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeries
  package: com.azure.ai.anomalydetector
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse*
  name: detectEntireSeriesWithResponse
  nameWithType: AnomalyDetectorClient.detectEntireSeriesWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectEntireSeriesWithResponse
  package: com.azure.ai.anomalydetector
- uid: com.azure.ai.anomalydetector.models.LastDetectResponse
  name: LastDetectResponse
  nameWithType: LastDetectResponse
  fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint*
  name: detectLastPoint
  nameWithType: AnomalyDetectorClient.detectLastPoint
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPoint
  package: com.azure.ai.anomalydetector
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse*
  name: detectLastPointWithResponse
  nameWithType: AnomalyDetectorClient.detectLastPointWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectLastPointWithResponse
  package: com.azure.ai.anomalydetector
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
  name: ChangePointDetectRequest
  nameWithType: ChangePointDetectRequest
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  name: ChangePointDetectResponse
  nameWithType: ChangePointDetectResponse
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint*
  name: detectChangePoint
  nameWithType: AnomalyDetectorClient.detectChangePoint
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePoint
  package: com.azure.ai.anomalydetector
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse*
  name: detectChangePointWithResponse
  nameWithType: AnomalyDetectorClient.detectChangePointWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorClient.detectChangePointWithResponse
  package: com.azure.ai.anomalydetector
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
