### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Asset"
fullName: "com.azure.resourcemanager.mediaservices.models.Asset"
name: "Asset"
nameWithType: "Asset"
summary: "An immutable client-side representation of Asset."
syntax: "public interface Asset"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.alternateId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.alternateId()"
  name: "alternateId()"
  nameWithType: "Asset.alternateId()"
  summary: "Gets the alternate<wbr>Id property: The alternate ID of the Asset."
  modifiers:
  - "abstract"
  syntax: "public abstract String alternateId()"
  desc: "Gets the alternateId property: The alternate ID of the Asset."
  returns:
    description: "the alternateId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.assetId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.assetId()"
  name: "assetId()"
  nameWithType: "Asset.assetId()"
  summary: "Gets the asset<wbr>Id property: The Asset ID."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID assetId()"
  desc: "Gets the assetId property: The Asset ID."
  returns:
    description: "the assetId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.container()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.container()"
  name: "container()"
  nameWithType: "Asset.container()"
  summary: "Gets the container property: The name of the asset blob container."
  modifiers:
  - "abstract"
  syntax: "public abstract String container()"
  desc: "Gets the container property: The name of the asset blob container."
  returns:
    description: "the container value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.created()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.created()"
  name: "created()"
  nameWithType: "Asset.created()"
  summary: "Gets the created property: The creation date of the Asset."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime created()"
  desc: "Gets the created property: The creation date of the Asset."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.description()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.description()"
  name: "description()"
  nameWithType: "Asset.description()"
  summary: "Gets the description property: The Asset description."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: The Asset description."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.getEncryptionKey()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.getEncryptionKey()"
  name: "getEncryptionKey()"
  nameWithType: "Asset.getEncryptionKey()"
  summary: "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
  modifiers:
  - "abstract"
  syntax: "public abstract StorageEncryptedAssetDecryptionData getEncryptionKey()"
  desc: "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
  returns:
    description: "the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageEncryptedAssetDecryptionData?alt=com.azure.resourcemanager.mediaservices.models.StorageEncryptedAssetDecryptionData&text=StorageEncryptedAssetDecryptionData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.getEncryptionKeyWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.getEncryptionKeyWithResponse(Context context)"
  name: "getEncryptionKeyWithResponse(Context context)"
  nameWithType: "Asset.getEncryptionKeyWithResponse(Context context)"
  summary: "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<StorageEncryptedAssetDecryptionData> getEncryptionKeyWithResponse(Context context)"
  desc: "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API."
  returns:
    description: "the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageEncryptedAssetDecryptionData?alt=com.azure.resourcemanager.mediaservices.models.StorageEncryptedAssetDecryptionData&text=StorageEncryptedAssetDecryptionData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.id()"
  name: "id()"
  nameWithType: "Asset.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.innerModel()"
  name: "innerModel()"
  nameWithType: "Asset.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>mediaservices.<wbr>fluent.<wbr>models.<wbr>Asset<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract AssetInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.AssetInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.AssetInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.AssetInner&text=AssetInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.lastModified()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.lastModified()"
  name: "lastModified()"
  nameWithType: "Asset.lastModified()"
  summary: "Gets the last<wbr>Modified property: The last modified date of the Asset."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastModified()"
  desc: "Gets the lastModified property: The last modified date of the Asset."
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.listContainerSas(com.azure.resourcemanager.mediaservices.models.ListContainerSasInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.listContainerSas(ListContainerSasInput parameters)"
  name: "listContainerSas(ListContainerSasInput parameters)"
  nameWithType: "Asset.listContainerSas(ListContainerSasInput parameters)"
  summary: "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListContainerSasInput?alt=com.azure.resourcemanager.mediaservices.models.ListContainerSasInput&text=ListContainerSasInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AssetContainerSas listContainerSas(ListContainerSasInput parameters)"
  desc: "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys."
  returns:
    description: "the Asset Storage container SAS URLs."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AssetContainerSas?alt=com.azure.resourcemanager.mediaservices.models.AssetContainerSas&text=AssetContainerSas\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.listContainerSasWithResponse(com.azure.resourcemanager.mediaservices.models.ListContainerSasInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.listContainerSasWithResponse(ListContainerSasInput parameters, Context context)"
  name: "listContainerSasWithResponse(ListContainerSasInput parameters, Context context)"
  nameWithType: "Asset.listContainerSasWithResponse(ListContainerSasInput parameters, Context context)"
  summary: "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListContainerSasInput?alt=com.azure.resourcemanager.mediaservices.models.ListContainerSasInput&text=ListContainerSasInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AssetContainerSas> listContainerSasWithResponse(ListContainerSasInput parameters, Context context)"
  desc: "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys."
  returns:
    description: "the Asset Storage container SAS URLs along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.AssetContainerSas?alt=com.azure.resourcemanager.mediaservices.models.AssetContainerSas&text=AssetContainerSas\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.listStreamingLocators()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.listStreamingLocators()"
  name: "listStreamingLocators()"
  nameWithType: "Asset.listStreamingLocators()"
  summary: "Lists Streaming Locators which are associated with this asset."
  modifiers:
  - "abstract"
  syntax: "public abstract ListStreamingLocatorsResponse listStreamingLocators()"
  desc: "Lists Streaming Locators which are associated with this asset."
  returns:
    description: "the Streaming Locators associated with this Asset."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListStreamingLocatorsResponse?alt=com.azure.resourcemanager.mediaservices.models.ListStreamingLocatorsResponse&text=ListStreamingLocatorsResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.listStreamingLocatorsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.listStreamingLocatorsWithResponse(Context context)"
  name: "listStreamingLocatorsWithResponse(Context context)"
  nameWithType: "Asset.listStreamingLocatorsWithResponse(Context context)"
  summary: "Lists Streaming Locators which are associated with this asset."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ListStreamingLocatorsResponse> listStreamingLocatorsWithResponse(Context context)"
  desc: "Lists Streaming Locators which are associated with this asset."
  returns:
    description: "the Streaming Locators associated with this Asset along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.ListStreamingLocatorsResponse?alt=com.azure.resourcemanager.mediaservices.models.ListStreamingLocatorsResponse&text=ListStreamingLocatorsResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.name()"
  name: "name()"
  nameWithType: "Asset.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.refresh()"
  name: "refresh()"
  nameWithType: "Asset.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Asset refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Asset?alt=com.azure.resourcemanager.mediaservices.models.Asset&text=Asset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Asset.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Asset refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Asset?alt=com.azure.resourcemanager.mediaservices.models.Asset&text=Asset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.resourceGroupName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Asset.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.storageAccountName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.storageAccountName()"
  name: "storageAccountName()"
  nameWithType: "Asset.storageAccountName()"
  summary: "Gets the storage<wbr>Account<wbr>Name property: The name of the storage account."
  modifiers:
  - "abstract"
  syntax: "public abstract String storageAccountName()"
  desc: "Gets the storageAccountName property: The name of the storage account."
  returns:
    description: "the storageAccountName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.storageEncryptionFormat()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.storageEncryptionFormat()"
  name: "storageEncryptionFormat()"
  nameWithType: "Asset.storageEncryptionFormat()"
  summary: "Gets the storage<wbr>Encryption<wbr>Format property: The Asset encryption format."
  modifiers:
  - "abstract"
  syntax: "public abstract AssetStorageEncryptionFormat storageEncryptionFormat()"
  desc: "Gets the storageEncryptionFormat property: The Asset encryption format. One of None or MediaStorageEncryption."
  returns:
    description: "the storageEncryptionFormat value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AssetStorageEncryptionFormat?alt=com.azure.resourcemanager.mediaservices.models.AssetStorageEncryptionFormat&text=AssetStorageEncryptionFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.systemData()"
  name: "systemData()"
  nameWithType: "Asset.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.type()"
  name: "type()"
  nameWithType: "Asset.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Asset.update()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Asset.update()"
  name: "update()"
  nameWithType: "Asset.update()"
  summary: "Begins update for the Asset resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Asset.Update update()"
  desc: "Begins update for the Asset resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Asset.Update?alt=com.azure.resourcemanager.mediaservices.models.Asset.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Asset."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
