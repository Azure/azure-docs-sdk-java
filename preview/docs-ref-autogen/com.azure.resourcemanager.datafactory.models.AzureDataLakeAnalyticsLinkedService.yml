### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService"
name: "AzureDataLakeAnalyticsLinkedService"
nameWithType: "AzureDataLakeAnalyticsLinkedService"
summary: "Azure Data Lake Analytics linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDataLakeAnalyticsLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.AzureDataLakeAnalyticsLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.AzureDataLakeAnalyticsLinkedService()"
  name: "AzureDataLakeAnalyticsLinkedService()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.AzureDataLakeAnalyticsLinkedService()"
  syntax: "public AzureDataLakeAnalyticsLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.accountName()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.accountName()"
  name: "accountName()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.accountName()"
  summary: "Get the accountName property: The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
  syntax: "public Object accountName()"
  returns:
    description: "the accountName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.dataLakeAnalyticsUri()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.dataLakeAnalyticsUri()"
  name: "dataLakeAnalyticsUri()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.dataLakeAnalyticsUri()"
  summary: "Get the dataLakeAnalyticsUri property: Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
  syntax: "public Object dataLakeAnalyticsUri()"
  returns:
    description: "the dataLakeAnalyticsUri value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.resourceGroupName()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.resourceGroupName()"
  summary: "Get the resourceGroupName property: Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
  syntax: "public Object resourceGroupName()"
  returns:
    description: "the resourceGroupName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.servicePrincipalId()"
  summary: "Get the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
  syntax: "public Object servicePrincipalId()"
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.servicePrincipalKey()"
  summary: "Get the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Analytics account."
  syntax: "public SecretBase servicePrincipalKey()"
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.subscriptionId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.subscriptionId()"
  name: "subscriptionId()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.subscriptionId()"
  summary: "Get the subscriptionId property: Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
  syntax: "public Object subscriptionId()"
  returns:
    description: "the subscriptionId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.tenant()"
  name: "tenant()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.tenant()"
  summary: "Get the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  syntax: "public Object tenant()"
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.validate()"
  name: "validate()"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withAccountName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withAccountName(Object accountName)"
  name: "withAccountName(Object accountName)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withAccountName(Object accountName)"
  summary: "Set the accountName property: The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the accountName value to set."
    name: "accountName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withAccountName(Object accountName)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDataLakeAnalyticsLinkedService withAnnotations(List<Object> annotations)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connectVia property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withDataLakeAnalyticsUri(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withDataLakeAnalyticsUri(Object dataLakeAnalyticsUri)"
  name: "withDataLakeAnalyticsUri(Object dataLakeAnalyticsUri)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withDataLakeAnalyticsUri(Object dataLakeAnalyticsUri)"
  summary: "Set the dataLakeAnalyticsUri property: Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
  parameters:
  - description: "the dataLakeAnalyticsUri value to set."
    name: "dataLakeAnalyticsUri"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withDataLakeAnalyticsUri(Object dataLakeAnalyticsUri)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDataLakeAnalyticsLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withResourceGroupName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withResourceGroupName(Object resourceGroupName)"
  name: "withResourceGroupName(Object resourceGroupName)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withResourceGroupName(Object resourceGroupName)"
  summary: "Set the resourceGroupName property: Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
  parameters:
  - description: "the resourceGroupName value to set."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withResourceGroupName(Object resourceGroupName)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withServicePrincipalId(Object servicePrincipalId)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Analytics account."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withServicePrincipalKey(SecretBase servicePrincipalKey)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withSubscriptionId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withSubscriptionId(Object subscriptionId)"
  name: "withSubscriptionId(Object subscriptionId)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withSubscriptionId(Object subscriptionId)"
  summary: "Set the subscriptionId property: Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
  parameters:
  - description: "the subscriptionId value to set."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withSubscriptionId(Object subscriptionId)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "AzureDataLakeAnalyticsLinkedService.withTenant(Object tenant)"
  summary: "Set the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeAnalyticsLinkedService withTenant(Object tenant)"
  returns:
    description: "the AzureDataLakeAnalyticsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDataLakeAnalyticsLinkedService&text=AzureDataLakeAnalyticsLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
