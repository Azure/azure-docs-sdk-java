### YamlMime:JavaType
uid: "com.azure.communication.callingserver.CallConnectionAsync"
fullName: "com.azure.communication.callingserver.CallConnectionAsync"
name: "CallConnectionAsync"
nameWithType: "CallConnectionAsync"
summary: "Asynchronous client that supports call connection operations."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CallConnectionAsync"
methods:
- uid: "com.azure.communication.callingserver.CallConnectionAsync.addParticipant(com.azure.communication.common.CommunicationIdentifier,java.lang.String,java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.addParticipant(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  name: "addParticipant(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  nameWithType: "CallConnectionAsync.addParticipant(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  summary: "Add a participant to the call."
  parameters:
  - description: "Added participant."
    name: "participant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "The phone number to use when adding a phone number participant."
    name: "alternateCallerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value to identify context of the operation. This is used to co-relate other\n                         communications related to this operation"
    name: "operationContext"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AddParticipantResult> addParticipant(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  desc: "Add a participant to the call."
  returns:
    description: "Response for a successful add participant request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.AddParticipantResult?alt=com.azure.communication.callingserver.models.AddParticipantResult&text=AddParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.addParticipantWithResponse(com.azure.communication.common.CommunicationIdentifier,java.lang.String,java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.addParticipantWithResponse(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  name: "addParticipantWithResponse(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  nameWithType: "CallConnectionAsync.addParticipantWithResponse(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  summary: "Add a participant to the call."
  parameters:
  - description: "Added participant."
    name: "participant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "The phone number to use when adding a phone number participant."
    name: "alternateCallerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value to identify context of the operation. This is used to co-relate other\n                         communications related to this operation"
    name: "operationContext"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AddParticipantResult>> addParticipantWithResponse(CommunicationIdentifier participant, String alternateCallerId, String operationContext)"
  desc: "Add a participant to the call."
  returns:
    description: "Response for a successful add participant request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.AddParticipantResult?alt=com.azure.communication.callingserver.models.AddParticipantResult&text=AddParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.cancelAllMediaOperations(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.cancelAllMediaOperations(String operationContext)"
  name: "cancelAllMediaOperations(String operationContext)"
  nameWithType: "CallConnectionAsync.cancelAllMediaOperations(String operationContext)"
  summary: "Cancel all media operations in the call."
  parameters:
  - description: "The value to identify context of the operation. This is used to co-relate other\n                         communications related to this operation"
    name: "operationContext"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CancelAllMediaOperationsResult> cancelAllMediaOperations(String operationContext)"
  desc: "Cancel all media operations in the call."
  returns:
    description: "Response payload of the cancel all media operations."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.CancelAllMediaOperationsResult?alt=com.azure.communication.callingserver.models.CancelAllMediaOperationsResult&text=CancelAllMediaOperationsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.cancelAllMediaOperationsWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.cancelAllMediaOperationsWithResponse(String operationContext)"
  name: "cancelAllMediaOperationsWithResponse(String operationContext)"
  nameWithType: "CallConnectionAsync.cancelAllMediaOperationsWithResponse(String operationContext)"
  summary: "Cancel all media operations in the call."
  parameters:
  - description: "The value to identify context of the operation. This is used to co-relate other\n                         communications related to this operation"
    name: "operationContext"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CancelAllMediaOperationsResult>> cancelAllMediaOperationsWithResponse(String operationContext)"
  desc: "Cancel all media operations in the call."
  returns:
    description: "Response payload of the cancel all media operations."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.CancelAllMediaOperationsResult?alt=com.azure.communication.callingserver.models.CancelAllMediaOperationsResult&text=CancelAllMediaOperationsResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.getCallConnectionId()"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.getCallConnectionId()"
  name: "getCallConnectionId()"
  nameWithType: "CallConnectionAsync.getCallConnectionId()"
  summary: "Get the call connection id property."
  syntax: "public String getCallConnectionId()"
  desc: "Get the call connection id property."
  returns:
    description: "Call connection id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.hangup()"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.hangup()"
  name: "hangup()"
  nameWithType: "CallConnectionAsync.hangup()"
  summary: "Hangup a call."
  syntax: "public Mono<Void> hangup()"
  desc: "Hangup a call."
  returns:
    description: "Response for a successful hangup request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.hangupWithResponse()"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.hangupWithResponse()"
  name: "hangupWithResponse()"
  nameWithType: "CallConnectionAsync.hangupWithResponse()"
  summary: "Hangup a call."
  syntax: "public Mono<Response<Void>> hangupWithResponse()"
  desc: "Hangup a call."
  returns:
    description: "Response for a successful hangup request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.playAudio(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.playAudio(String audioFileUri, boolean loop, String audioFileId, String callbackUri, String operationContext)"
  name: "playAudio(String audioFileUri, boolean loop, String audioFileId, String callbackUri, String operationContext)"
  nameWithType: "CallConnectionAsync.playAudio(String audioFileUri, boolean loop, String audioFileId, String callbackUri, String operationContext)"
  summary: "Play audio in a call."
  parameters:
  - description: "The media resource uri of the play audio request. Currently only Wave file (.wav) format\n                     audio prompts are supported. More specifically, the audio content in the wave file must\n                     be mono (single-channel), 16-bit samples with a 16,000 (16KHz) sampling rate."
    name: "audioFileUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The flag indicating whether audio file needs to be played in loop or not."
    name: "loop"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An id for the media in the AudioFileUri, using which we cache the media."
    name: "audioFileId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "call back uri to receive notifications."
    name: "callbackUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value to identify context of the operation. This is used to co-relate other\n                         communications related to this operation"
    name: "operationContext"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PlayAudioResult> playAudio(String audioFileUri, boolean loop, String audioFileId, String callbackUri, String operationContext)"
  desc: "Play audio in a call."
  returns:
    description: "Response payload for play audio operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.PlayAudioResult?alt=com.azure.communication.callingserver.models.PlayAudioResult&text=PlayAudioResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.playAudio(java.lang.String,com.azure.communication.callingserver.models.PlayAudioOptions)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.playAudio(String audioFileUri, PlayAudioOptions playAudioOptions)"
  name: "playAudio(String audioFileUri, PlayAudioOptions playAudioOptions)"
  nameWithType: "CallConnectionAsync.playAudio(String audioFileUri, PlayAudioOptions playAudioOptions)"
  summary: "Play audio in a call."
  parameters:
  - description: "The media resource uri of the play audio request. Currently only Wave file (.wav) format\n                     audio prompts are supported. More specifically, the audio content in the wave file must\n                     be mono (single-channel), 16-bit samples with a 16,000 (16KHz) sampling rate."
    name: "audioFileUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options for play audio."
    name: "playAudioOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.PlayAudioOptions?alt=com.azure.communication.callingserver.models.PlayAudioOptions&text=PlayAudioOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PlayAudioResult> playAudio(String audioFileUri, PlayAudioOptions playAudioOptions)"
  desc: "Play audio in a call."
  returns:
    description: "Response payload for play audio operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.PlayAudioResult?alt=com.azure.communication.callingserver.models.PlayAudioResult&text=PlayAudioResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.playAudioWithResponse(java.lang.String,com.azure.communication.callingserver.models.PlayAudioOptions)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.playAudioWithResponse(String audioFileUri, PlayAudioOptions playAudioOptions)"
  name: "playAudioWithResponse(String audioFileUri, PlayAudioOptions playAudioOptions)"
  nameWithType: "CallConnectionAsync.playAudioWithResponse(String audioFileUri, PlayAudioOptions playAudioOptions)"
  summary: "Play audio in a call."
  parameters:
  - description: "The media resource uri of the play audio request. Currently only Wave file (.wav) format\n                     audio prompts are supported. More specifically, the audio content in the wave file must\n                     be mono (single-channel), 16-bit samples with a 16,000 (16KHz) sampling rate."
    name: "audioFileUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options for play audio."
    name: "playAudioOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.PlayAudioOptions?alt=com.azure.communication.callingserver.models.PlayAudioOptions&text=PlayAudioOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PlayAudioResult>> playAudioWithResponse(String audioFileUri, PlayAudioOptions playAudioOptions)"
  desc: "Play audio in a call."
  returns:
    description: "Response payload for play audio operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.models.PlayAudioResult?alt=com.azure.communication.callingserver.models.PlayAudioResult&text=PlayAudioResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.removeParticipant(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.removeParticipant(String participantId)"
  name: "removeParticipant(String participantId)"
  nameWithType: "CallConnectionAsync.removeParticipant(String participantId)"
  summary: "Remove a participant from the call."
  parameters:
  - description: "Participant id."
    name: "participantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> removeParticipant(String participantId)"
  desc: "Remove a participant from the call."
  returns:
    description: "Response for a successful remove participant request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallConnectionAsync.removeParticipantWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallConnectionAsync.removeParticipantWithResponse(String participantId)"
  name: "removeParticipantWithResponse(String participantId)"
  nameWithType: "CallConnectionAsync.removeParticipantWithResponse(String participantId)"
  summary: "Remove a participant from the call."
  parameters:
  - description: "Participant id."
    name: "participantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> removeParticipantWithResponse(String participantId)"
  desc: "Remove a participant from the call."
  returns:
    description: "Response for a successful remove participant request."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Asynchronous client that supports call connection operations."
metadata: {}
package: "com.azure.communication.callingserver"
artifact: com.azure:azure-communication-callingserver:1.0.0-beta.4
