### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.util.CharArrayBuffer
  id: CharArrayBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util
  children:
  - org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer(int)
  - org.apache.hc.core5.util.CharArrayBuffer.append(byte[],int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.append(char)
  - org.apache.hc.core5.util.CharArrayBuffer.append(char[],int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.append(java.lang.Object)
  - org.apache.hc.core5.util.CharArrayBuffer.append(java.lang.String)
  - org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.ByteArrayBuffer,int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer)
  - org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.array()
  - org.apache.hc.core5.util.CharArrayBuffer.capacity()
  - org.apache.hc.core5.util.CharArrayBuffer.charAt(int)
  - org.apache.hc.core5.util.CharArrayBuffer.clear()
  - org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity(int)
  - org.apache.hc.core5.util.CharArrayBuffer.indexOf(int)
  - org.apache.hc.core5.util.CharArrayBuffer.indexOf(int,int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.isEmpty()
  - org.apache.hc.core5.util.CharArrayBuffer.isFull()
  - org.apache.hc.core5.util.CharArrayBuffer.length()
  - org.apache.hc.core5.util.CharArrayBuffer.setLength(int)
  - org.apache.hc.core5.util.CharArrayBuffer.subSequence(int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.substring(int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed(int,int)
  - org.apache.hc.core5.util.CharArrayBuffer.toCharArray()
  - org.apache.hc.core5.util.CharArrayBuffer.toString()
  langs:
  - java
  name: CharArrayBuffer
  nameWithType: CharArrayBuffer
  fullName: org.apache.hc.core5.util.CharArrayBuffer
  type: Class
  package: org.apache.hc.core5.util
  summary: A resizable char array.
  syntax:
    content: public final class CharArrayBuffer implements CharSequence, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.CharSequence
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer(int)
  id: CharArrayBuffer(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: CharArrayBuffer(int capacity)
  nameWithType: CharArrayBuffer.CharArrayBuffer(int capacity)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer(int capacity)
  overload: org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer*
  type: Constructor
  package: org.apache.hc.core5.util
  summary: Creates an instance of <xref uid="org.apache.hc.core5.util.CharArrayBuffer" data-throw-if-not-resolved="false">CharArrayBuffer</xref> with the given initial capacity.
  syntax:
    content: public CharArrayBuffer(int capacity)
    parameters:
    - id: capacity
      type: int
      description: the capacity
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(byte[],int,int)
  id: append(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(byte[] b, int off, int len)
  nameWithType: CharArrayBuffer.append(byte[] b, int off, int len)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(byte[] b, int off, int len)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Appends `len` bytes to this buffer from the given source array starting at index `off`. The capacity of the buffer is increased, if necessary, to accommodate all `len` bytes.


    The bytes are converted to chars using simple cast.
  syntax:
    content: public void append(byte[] b, int off, int len)
    parameters:
    - id: b
      type: byte[]
      description: the bytes to be appended.
    - id: off
      type: int
      description: the index of the first byte to append.
    - id: len
      type: int
      description: the number of bytes to append.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(char)
  id: append(char)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(char ch)
  nameWithType: CharArrayBuffer.append(char ch)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(char ch)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends `ch` char to this buffer. The capacity of the buffer is increased, if necessary, to accommodate the additional char.
  syntax:
    content: public void append(char ch)
    parameters:
    - id: ch
      type: char
      description: the char to be appended.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(char[],int,int)
  id: append(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(char[] b, int off, int len)
  nameWithType: CharArrayBuffer.append(char[] b, int off, int len)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(char[] b, int off, int len)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends `len` chars to this buffer from the given source array starting at index `off`. The capacity of the buffer is increased, if necessary, to accommodate all `len` chars.
  syntax:
    content: public void append(char[] b, int off, int len)
    parameters:
    - id: b
      type: char[]
      description: the chars to be appended.
    - id: off
      type: int
      description: the index of the first char to append.
    - id: len
      type: int
      description: the number of chars to append.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(java.lang.Object)
  id: append(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(Object obj)
  nameWithType: CharArrayBuffer.append(Object obj)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(Object obj)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends chars of the textual representation of the given object to this buffer. The capacity of the buffer is increased, if necessary, to accommodate all chars.
  syntax:
    content: public void append(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
      description: the object.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(java.lang.String)
  id: append(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(String str)
  nameWithType: CharArrayBuffer.append(String str)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(String str)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends chars of the given string to this buffer. The capacity of the buffer is increased, if necessary, to accommodate all chars.
  syntax:
    content: public void append(String str)
    parameters:
    - id: str
      type: java.lang.String
      description: the string.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.ByteArrayBuffer,int,int)
  id: append(org.apache.hc.core5.util.ByteArrayBuffer,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(ByteArrayBuffer b, int off, int len)
  nameWithType: CharArrayBuffer.append(ByteArrayBuffer b, int off, int len)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(ByteArrayBuffer b, int off, int len)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Appends `len` bytes to this buffer from the given source array starting at index `off`. The capacity of the buffer is increased, if necessary, to accommodate all `len` bytes.


    The bytes are converted to chars using simple cast.
  syntax:
    content: public void append(ByteArrayBuffer b, int off, int len)
    parameters:
    - id: b
      type: org.apache.hc.core5.util.ByteArrayBuffer
      description: the bytes to be appended.
    - id: off
      type: int
      description: the index of the first byte to append.
    - id: len
      type: int
      description: the number of bytes to append.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer)
  id: append(org.apache.hc.core5.util.CharArrayBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(CharArrayBuffer b)
  nameWithType: CharArrayBuffer.append(CharArrayBuffer b)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(CharArrayBuffer b)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends all chars to this buffer from the given source buffer starting at index `0`. The capacity of the destination buffer is increased, if necessary, to accommodate all <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref> chars.
  syntax:
    content: public void append(CharArrayBuffer b)
    parameters:
    - id: b
      type: org.apache.hc.core5.util.CharArrayBuffer
      description: the source buffer to be appended.
- uid: org.apache.hc.core5.util.CharArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  id: append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: append(CharArrayBuffer b, int off, int len)
  nameWithType: CharArrayBuffer.append(CharArrayBuffer b, int off, int len)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append(CharArrayBuffer b, int off, int len)
  overload: org.apache.hc.core5.util.CharArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends `len` chars to this buffer from the given source buffer starting at index `off`. The capacity of the destination buffer is increased, if necessary, to accommodate all `len` chars.
  syntax:
    content: public void append(CharArrayBuffer b, int off, int len)
    parameters:
    - id: b
      type: org.apache.hc.core5.util.CharArrayBuffer
      description: the source buffer to be appended.
    - id: off
      type: int
      description: the index of the first char to append.
    - id: len
      type: int
      description: the number of chars to append.
- uid: org.apache.hc.core5.util.CharArrayBuffer.array()
  id: array()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: array()
  nameWithType: CharArrayBuffer.array()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.array()
  overload: org.apache.hc.core5.util.CharArrayBuffer.array*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns reference to the underlying char array.
  syntax:
    content: public char[] array()
    return:
      type: char[]
      description: the char array.
- uid: org.apache.hc.core5.util.CharArrayBuffer.capacity()
  id: capacity()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: capacity()
  nameWithType: CharArrayBuffer.capacity()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.capacity()
  overload: org.apache.hc.core5.util.CharArrayBuffer.capacity*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the current capacity. The capacity is the amount of storage available for newly appended chars, beyond which an allocation will occur.
  syntax:
    content: public int capacity()
    return:
      type: int
      description: the current capacity
- uid: org.apache.hc.core5.util.CharArrayBuffer.charAt(int)
  id: charAt(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: charAt(int i)
  nameWithType: CharArrayBuffer.charAt(int i)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.charAt(int i)
  overload: org.apache.hc.core5.util.CharArrayBuffer.charAt*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the `char` value in this buffer at the specified index. The index argument must be greater than or equal to `0`, and less than the length of this buffer.
  syntax:
    content: public char charAt(int i)
    parameters:
    - id: i
      type: int
      description: the index of the desired char value.
    return:
      type: char
      description: the char value at the specified index.
- uid: org.apache.hc.core5.util.CharArrayBuffer.clear()
  id: clear()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: clear()
  nameWithType: CharArrayBuffer.clear()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.clear()
  overload: org.apache.hc.core5.util.CharArrayBuffer.clear*
  type: Method
  package: org.apache.hc.core5.util
  summary: Clears content of the buffer. The underlying char array is not resized.
  syntax:
    content: public void clear()
- uid: org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity(int)
  id: ensureCapacity(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: ensureCapacity(int required)
  nameWithType: CharArrayBuffer.ensureCapacity(int required)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity(int required)
  overload: org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity*
  type: Method
  package: org.apache.hc.core5.util
  summary: Ensures that the capacity is at least equal to the specified minimum. If the current capacity is less than the argument, then a new internal array is allocated with greater capacity. If the `required` argument is non-positive, this method takes no action.
  syntax:
    content: public void ensureCapacity(int required)
    parameters:
    - id: required
      type: int
      description: the minimum required capacity.
- uid: org.apache.hc.core5.util.CharArrayBuffer.indexOf(int)
  id: indexOf(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: indexOf(int ch)
  nameWithType: CharArrayBuffer.indexOf(int ch)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.indexOf(int ch)
  overload: org.apache.hc.core5.util.CharArrayBuffer.indexOf*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the index within this buffer of the first occurrence of the specified character, starting the search at `0` and finishing at <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>. If no such character occurs in this buffer within those bounds, `-1` is returned.
  syntax:
    content: public int indexOf(int ch)
    parameters:
    - id: ch
      type: int
      description: the char to search for.
    return:
      type: int
      description: >-
        the index of the first occurrence of the character in the
           buffer, or <code>-1</code> if the character does not occur.
- uid: org.apache.hc.core5.util.CharArrayBuffer.indexOf(int,int,int)
  id: indexOf(int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: indexOf(int ch, int from, int to)
  nameWithType: CharArrayBuffer.indexOf(int ch, int from, int to)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.indexOf(int ch, int from, int to)
  overload: org.apache.hc.core5.util.CharArrayBuffer.indexOf*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Returns the index within this buffer of the first occurrence of the specified character, starting the search at the specified `beginIndex` and finishing at `endIndex`. If no such character occurs in this buffer within the specified bounds, `-1` is returned.


    There is no restriction on the value of `beginIndex` and `endIndex`. If `beginIndex` is negative, it has the same effect as if it were zero. If `endIndex` is greater than <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>, it has the same effect as if it were <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>. If the `beginIndex` is greater than the `endIndex`, `-1` is returned.
  syntax:
    content: public int indexOf(int ch, int from, int to)
    parameters:
    - id: ch
      type: int
      description: the char to search for.
    - id: from
      type: int
      description: the index to start the search from.
    - id: to
      type: int
      description: the index to finish the search at.
    return:
      type: int
      description: >-
        the index of the first occurrence of the character in the buffer
           within the given bounds, or <code>-1</code> if the character does
           not occur.
- uid: org.apache.hc.core5.util.CharArrayBuffer.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: isEmpty()
  nameWithType: CharArrayBuffer.isEmpty()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.isEmpty()
  overload: org.apache.hc.core5.util.CharArrayBuffer.isEmpty*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns `true` if this buffer is empty, that is, its <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref> is equal to `0`.
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
      description: >-
        <code>true</code> if this buffer is empty, <code>false</code>
           otherwise.
- uid: org.apache.hc.core5.util.CharArrayBuffer.isFull()
  id: isFull()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: isFull()
  nameWithType: CharArrayBuffer.isFull()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.isFull()
  overload: org.apache.hc.core5.util.CharArrayBuffer.isFull*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns `true` if this buffer is full, that is, its <xref uid="org.apache.hc.core5.util.CharArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref> is equal to its <xref uid="org.apache.hc.core5.util.CharArrayBuffer.capacity()" data-throw-if-not-resolved="false">#capacity()</xref>.
  syntax:
    content: public boolean isFull()
    return:
      type: boolean
      description: >-
        <code>true</code> if this buffer is full, <code>false</code>
           otherwise.
- uid: org.apache.hc.core5.util.CharArrayBuffer.length()
  id: length()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: length()
  nameWithType: CharArrayBuffer.length()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.length()
  overload: org.apache.hc.core5.util.CharArrayBuffer.length*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the length of the buffer (char count).
  syntax:
    content: public int length()
    return:
      type: int
      description: the length of the buffer
- uid: org.apache.hc.core5.util.CharArrayBuffer.setLength(int)
  id: setLength(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: setLength(int len)
  nameWithType: CharArrayBuffer.setLength(int len)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.setLength(int len)
  overload: org.apache.hc.core5.util.CharArrayBuffer.setLength*
  type: Method
  package: org.apache.hc.core5.util
  summary: Sets the length of the buffer. The new length value is expected to be less than the current capacity and greater than or equal to `0`.
  syntax:
    content: public void setLength(int len)
    parameters:
    - id: len
      type: int
      description: the new length
- uid: org.apache.hc.core5.util.CharArrayBuffer.subSequence(int,int)
  id: subSequence(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: subSequence(int beginIndex, int endIndex)
  nameWithType: CharArrayBuffer.subSequence(int beginIndex, int endIndex)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.subSequence(int beginIndex, int endIndex)
  overload: org.apache.hc.core5.util.CharArrayBuffer.subSequence*
  type: Method
  package: org.apache.hc.core5.util
  syntax:
    content: public CharSequence subSequence(int beginIndex, int endIndex)
    parameters:
    - id: beginIndex
      type: int
    - id: endIndex
      type: int
    return:
      type: java.lang.CharSequence
- uid: org.apache.hc.core5.util.CharArrayBuffer.substring(int,int)
  id: substring(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: substring(int beginIndex, int endIndex)
  nameWithType: CharArrayBuffer.substring(int beginIndex, int endIndex)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.substring(int beginIndex, int endIndex)
  overload: org.apache.hc.core5.util.CharArrayBuffer.substring*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns a substring of this buffer. The substring begins at the specified `beginIndex` and extends to the character at index `endIndex - 1`.
  syntax:
    content: public String substring(int beginIndex, int endIndex)
    parameters:
    - id: beginIndex
      type: int
      description: the beginning index, inclusive.
    - id: endIndex
      type: int
      description: the ending index, exclusive.
    return:
      type: java.lang.String
      description: the specified substring.
- uid: org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed(int,int)
  id: substringTrimmed(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: substringTrimmed(int beginIndex, int endIndex)
  nameWithType: CharArrayBuffer.substringTrimmed(int beginIndex, int endIndex)
  fullName: org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed(int beginIndex, int endIndex)
  overload: org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns a substring of this buffer with leading and trailing whitespace omitted. The substring begins with the first non-whitespace character from `beginIndex` and extends to the last non-whitespace character with the index lesser than `endIndex`.
  syntax:
    content: public String substringTrimmed(int beginIndex, int endIndex)
    parameters:
    - id: beginIndex
      type: int
      description: the beginning index, inclusive.
    - id: endIndex
      type: int
      description: the ending index, exclusive.
    return:
      type: java.lang.String
      description: the specified substring.
- uid: org.apache.hc.core5.util.CharArrayBuffer.toCharArray()
  id: toCharArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: toCharArray()
  nameWithType: CharArrayBuffer.toCharArray()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.toCharArray()
  overload: org.apache.hc.core5.util.CharArrayBuffer.toCharArray*
  type: Method
  package: org.apache.hc.core5.util
  summary: Converts the content of this buffer to an array of chars.
  syntax:
    content: public char[] toCharArray()
    return:
      type: char[]
      description: char array
- uid: org.apache.hc.core5.util.CharArrayBuffer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.CharArrayBuffer
  langs:
  - java
  name: toString()
  nameWithType: CharArrayBuffer.toString()
  fullName: org.apache.hc.core5.util.CharArrayBuffer.toString()
  overload: org.apache.hc.core5.util.CharArrayBuffer.toString*
  type: Method
  package: org.apache.hc.core5.util
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer*
  name: CharArrayBuffer
  nameWithType: CharArrayBuffer.CharArrayBuffer
  fullName: org.apache.hc.core5.util.CharArrayBuffer.CharArrayBuffer
  package: org.apache.hc.core5.util
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.util.CharArrayBuffer.append*
  name: append
  nameWithType: CharArrayBuffer.append
  fullName: org.apache.hc.core5.util.CharArrayBuffer.append
  package: org.apache.hc.core5.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.util.ByteArrayBuffer
  name: ByteArrayBuffer
  nameWithType: ByteArrayBuffer
  fullName: org.apache.hc.core5.util.ByteArrayBuffer
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.util.CharArrayBuffer.clear*
  name: clear
  nameWithType: CharArrayBuffer.clear
  fullName: org.apache.hc.core5.util.CharArrayBuffer.clear
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.toCharArray*
  name: toCharArray
  nameWithType: CharArrayBuffer.toCharArray
  fullName: org.apache.hc.core5.util.CharArrayBuffer.toCharArray
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.charAt*
  name: charAt
  nameWithType: CharArrayBuffer.charAt
  fullName: org.apache.hc.core5.util.CharArrayBuffer.charAt
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.array*
  name: array
  nameWithType: CharArrayBuffer.array
  fullName: org.apache.hc.core5.util.CharArrayBuffer.array
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.capacity*
  name: capacity
  nameWithType: CharArrayBuffer.capacity
  fullName: org.apache.hc.core5.util.CharArrayBuffer.capacity
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.length*
  name: length
  nameWithType: CharArrayBuffer.length
  fullName: org.apache.hc.core5.util.CharArrayBuffer.length
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity*
  name: ensureCapacity
  nameWithType: CharArrayBuffer.ensureCapacity
  fullName: org.apache.hc.core5.util.CharArrayBuffer.ensureCapacity
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.setLength*
  name: setLength
  nameWithType: CharArrayBuffer.setLength
  fullName: org.apache.hc.core5.util.CharArrayBuffer.setLength
  package: org.apache.hc.core5.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.util.CharArrayBuffer.isEmpty*
  name: isEmpty
  nameWithType: CharArrayBuffer.isEmpty
  fullName: org.apache.hc.core5.util.CharArrayBuffer.isEmpty
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.isFull*
  name: isFull
  nameWithType: CharArrayBuffer.isFull
  fullName: org.apache.hc.core5.util.CharArrayBuffer.isFull
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.indexOf*
  name: indexOf
  nameWithType: CharArrayBuffer.indexOf
  fullName: org.apache.hc.core5.util.CharArrayBuffer.indexOf
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.substring*
  name: substring
  nameWithType: CharArrayBuffer.substring
  fullName: org.apache.hc.core5.util.CharArrayBuffer.substring
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed*
  name: substringTrimmed
  nameWithType: CharArrayBuffer.substringTrimmed
  fullName: org.apache.hc.core5.util.CharArrayBuffer.substringTrimmed
  package: org.apache.hc.core5.util
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: org.apache.hc.core5.util.CharArrayBuffer.subSequence*
  name: subSequence
  nameWithType: CharArrayBuffer.subSequence
  fullName: org.apache.hc.core5.util.CharArrayBuffer.subSequence
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.CharArrayBuffer.toString*
  name: toString
  nameWithType: CharArrayBuffer.toString
  fullName: org.apache.hc.core5.util.CharArrayBuffer.toString
  package: org.apache.hc.core5.util
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
