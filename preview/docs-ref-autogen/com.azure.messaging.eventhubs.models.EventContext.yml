### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.models.EventContext"
fullName: "com.azure.messaging.eventhubs.models.EventContext"
name: "EventContext"
nameWithType: "EventContext"
summary: "A class that contains <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> and the partition information the event belongs to."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventContext"
constructors:
- uid: "com.azure.messaging.eventhubs.models.EventContext.EventContext(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  name: "EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  nameWithType: "EventContext.EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  summary: "Creates an instance of <xref uid=\"com.azure.messaging.eventhubs.models.EventContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventContext\"></xref>."
  parameters:
  - description: "The partition information associated with the received event."
    name: "partitionContext"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.PartitionContext?alt=com.azure.messaging.eventhubs.models.PartitionContext&text=PartitionContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "The event received from Event Hub."
    name: "eventData"
    type: "<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The checkpoint store that is used for updating checkpoints."
    name: "checkpointStore"
    type: "<xref href=\"com.azure.messaging.eventhubs.CheckpointStore?alt=com.azure.messaging.eventhubs.CheckpointStore&text=CheckpointStore\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties of the last enqueued event in this partition. If <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)\"></xref> is set to <code>false</code>, this will be\n <code>null</code>."
    name: "lastEnqueuedEventProperties"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties?alt=com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties&text=LastEnqueuedEventProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  desc: "Creates an instance of <xref uid=\"com.azure.messaging.eventhubs.models.EventContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventContext\"></xref>."
methods:
- uid: "com.azure.messaging.eventhubs.models.EventContext.getEventData()"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.getEventData()"
  name: "getEventData()"
  nameWithType: "EventContext.getEventData()"
  summary: "Returns the event data received from Event Hub."
  syntax: "public EventData getEventData()"
  desc: "Returns the event data received from Event Hub."
  returns:
    description: "The event data received from Event Hub."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties()"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties()"
  name: "getLastEnqueuedEventProperties()"
  nameWithType: "EventContext.getLastEnqueuedEventProperties()"
  summary: "Returns the properties of the last enqueued event in this partition."
  syntax: "public LastEnqueuedEventProperties getLastEnqueuedEventProperties()"
  desc: "Returns the properties of the last enqueued event in this partition. If <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)\"></xref> is set to `false`, this method will return `null`."
  returns:
    description: "The properties of the last enqueued event in this partition. If\n <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)\"></xref> is\n set to <code>false</code>, this method will return <code>null</code>."
    type: "<xref href=\"com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties?alt=com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties&text=LastEnqueuedEventProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.EventContext.getPartitionContext()"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.getPartitionContext()"
  name: "getPartitionContext()"
  nameWithType: "EventContext.getPartitionContext()"
  summary: "Returns the partition information associated with the received event."
  syntax: "public PartitionContext getPartitionContext()"
  desc: "Returns the partition information associated with the received event."
  returns:
    description: "The partition information of the received event."
    type: "<xref href=\"com.azure.messaging.eventhubs.models.PartitionContext?alt=com.azure.messaging.eventhubs.models.PartitionContext&text=PartitionContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint()"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint()"
  name: "updateCheckpoint()"
  nameWithType: "EventContext.updateCheckpoint()"
  summary: "Updates the checkpoint synchronously for this partition using the event data."
  syntax: "public void updateCheckpoint()"
  desc: "Updates the checkpoint synchronously for this partition using the event data. This will serve as the last known successfully processed event in this partition if the update is successful."
- uid: "com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync()"
  fullName: "com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync()"
  name: "updateCheckpointAsync()"
  nameWithType: "EventContext.updateCheckpointAsync()"
  summary: "Updates the checkpoint asynchronously for this partition using the event data in this <xref uid=\"com.azure.messaging.eventhubs.models.EventContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventContext\"></xref>."
  syntax: "public Mono<Void> updateCheckpointAsync()"
  desc: "Updates the checkpoint asynchronously for this partition using the event data in this <xref uid=\"com.azure.messaging.eventhubs.models.EventContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventContext\"></xref>. This will serve as the last known successfully processed event in this partition if the update is successful."
  returns:
    description: "a representation of deferred execution of this call."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A class that contains <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> and the partition information the event belongs to. This is given to the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processEvent\"></xref> handler each time an event is received from the Event Hub. This class also includes methods to update checkpoint in <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> and retrieve the last enqueued event information."
metadata: {}
package: "com.azure.messaging.eventhubs.models"
artifact: com.azure:azure-messaging-eventhubs:5.13.0-beta.1
