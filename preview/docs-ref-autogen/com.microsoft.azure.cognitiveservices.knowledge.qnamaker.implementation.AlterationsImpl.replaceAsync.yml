### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync*"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync"
name: "replaceAsync"
nameWithType: "AlterationsImpl.replaceAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync(List<AlterationsDTO> wordAlterations)"
  name: "replaceAsync(List<AlterationsDTO> wordAlterations)"
  nameWithType: "AlterationsImpl.replaceAsync(List<AlterationsDTO> wordAlterations)"
  summary: "Replace alterations data."
  parameters:
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Observable<Void> replaceAsync(List<AlterationsDTO> wordAlterations)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponse\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.AlterationsImpl.replaceAsync(List<AlterationsDTO> wordAlterations, ServiceCallback<Void> serviceCallback)"
  name: "replaceAsync(List<AlterationsDTO> wordAlterations, ServiceCallback<Void> serviceCallback)"
  nameWithType: "AlterationsImpl.replaceAsync(List<AlterationsDTO> wordAlterations, ServiceCallback<Void> serviceCallback)"
  summary: "Replace alterations data."
  parameters:
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServiceFuture<Void> replaceAsync(List<AlterationsDTO> wordAlterations, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
