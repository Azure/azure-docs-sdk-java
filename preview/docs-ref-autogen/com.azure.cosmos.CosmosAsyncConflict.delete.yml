### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncConflict.delete*"
fullName: "com.azure.cosmos.CosmosAsyncConflict.delete"
name: "delete"
nameWithType: "CosmosAsyncConflict.delete"
members:
- uid: "com.azure.cosmos.CosmosAsyncConflict.delete(com.azure.cosmos.models.CosmosConflictRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncConflict.delete(CosmosConflictRequestOptions options)"
  name: "delete(CosmosConflictRequestOptions options)"
  nameWithType: "CosmosAsyncConflict.delete(CosmosConflictRequestOptions options)"
  summary: "Reads all conflicts in a container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will contain one or several feed response pages of the read conflicts. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the feed options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosConflictRequestOptions?alt=com.azure.cosmos.models.CosmosConflictRequestOptions&text=CosmosConflictRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosConflictResponse> delete(CosmosConflictRequestOptions options)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing one or several feed response pages of the\n read conflicts or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosConflictResponse?alt=com.azure.cosmos.models.CosmosConflictResponse&text=CosmosConflictResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
