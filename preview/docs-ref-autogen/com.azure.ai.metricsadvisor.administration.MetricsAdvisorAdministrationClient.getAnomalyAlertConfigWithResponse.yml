### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse"
name: "getAnomalyAlertConfigWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse(String alertConfigurationId, Context context)"
  name: "getAnomalyAlertConfigWithResponse(String alertConfigurationId, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.getAnomalyAlertConfigWithResponse(String alertConfigurationId, Context context)"
  summary: "Get the anomaly alert configuration identified by `alertConfigurationId`.\n\n**Code sample**\n\n```java\nString alertConfigId = \"1p0f8er30-6e6e-4391-b78f-bpfdfee1e6f5\";\n \n Response<AnomalyAlertConfiguration> alertConfigurationResponse\n     = metricsAdvisorAdminClient.getAnomalyAlertConfigWithResponse(alertConfigId, Context.NONE);\n \n System.out.printf(\"DataPoint Anomaly alert creation operation status: %s%n\",\n     alertConfigurationResponse.getStatusCode());\n final AnomalyAlertConfiguration anomalyAlertConfiguration = alertConfigurationResponse.getValue();\n System.out.printf(\"DataPoint Anomaly alert configuration Id: %s%n\", anomalyAlertConfiguration.getId());\n System.out.printf(\"DataPoint Anomaly alert configuration description: %s%n\",\n     anomalyAlertConfiguration.getDescription());\n System.out.printf(\"DataPoint Anomaly alert configuration hook ids: %s%n\",\n     anomalyAlertConfiguration.getIdOfHooksToAlert());\n System.out.printf(\"DataPoint Anomaly alert configuration cross metrics operator: %s%n\",\n     anomalyAlertConfiguration.getCrossMetricsOperator().toString());\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<AnomalyAlertConfiguration> getAnomalyAlertConfigWithResponse(String alertConfigurationId, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"response\"></xref> containing the <xref uid=\"com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnomalyAlertConfiguration\"></xref> identified by the given id."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyAlertConfiguration&text=AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
