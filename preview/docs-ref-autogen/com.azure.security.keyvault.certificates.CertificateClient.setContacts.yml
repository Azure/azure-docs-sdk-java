### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateClient.setContacts*"
fullName: "com.azure.security.keyvault.certificates.CertificateClient.setContacts"
name: "setContacts"
nameWithType: "CertificateClient.setContacts"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateClient.setContacts(java.util.List<com.azure.security.keyvault.certificates.models.CertificateContact>)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.setContacts(List<CertificateContact> contacts)"
  name: "setContacts(List<CertificateContact> contacts)"
  nameWithType: "CertificateClient.setContacts(List<CertificateContact> contacts)"
  summary: "Sets the certificate contacts on the key vault. This operation requires the `certificates/managecontacts` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.certificates.models.LifetimeAction\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LifetimeAction\"></xref> of type <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicyAction.EMAIL_CONTACTS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicyAction#EMAIL_CONTACTS\"></xref> set on a <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicy\"></xref> emails the contacts set on the vault when triggered.\n\n**Code Samples**\n\nSets the certificate contacts in the Azure Key Vault. Prints out the returned contacts details.\n\n```java\nCertificateContact contactToAdd = new CertificateContact().setName(\"user\").setEmail(\"useremail{@literal @}exmaple.com\");\n for (CertificateContact contact : certificateClient.setContacts(Arrays.asList(contactToAdd))) {\n     System.out.printf(\"Added contact with name %s and email %s to key vault\", contact.getName(),\n         contact.getEmail());\n }\n```"
  parameters:
  - description: "The list of contacts to set on the vault."
    name: "contacts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PagedIterable<CertificateContact> setContacts(List<CertificateContact> contacts)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing all of the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateContact\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate contacts\"></xref> in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.CertificateClient.setContacts(java.util.List<com.azure.security.keyvault.certificates.models.CertificateContact>,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.setContacts(List<CertificateContact> contacts, Context context)"
  name: "setContacts(List<CertificateContact> contacts, Context context)"
  nameWithType: "CertificateClient.setContacts(List<CertificateContact> contacts, Context context)"
  summary: "Sets the certificate contacts on the key vault. This operation requires the `certificates/managecontacts` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.certificates.models.LifetimeAction\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LifetimeAction\"></xref> of type <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicyAction.EMAIL_CONTACTS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicyAction#EMAIL_CONTACTS\"></xref> set on a <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicy\"></xref> emails the contacts set on the vault when triggered.\n\n**Code Samples**\n\nSets the certificate contacts in the Azure Key Vault. Prints out the returned contacts details.\n\n```java\nCertificateContact sampleContact = new CertificateContact().setName(\"user\").setEmail(\"useremail{@literal @}exmaple.com\");\n for (CertificateContact contact : certificateClient.setContacts(Arrays.asList(sampleContact),\n     new Context(key1, value1))) {\n     System.out.printf(\"Added contact with name %s and email %s to key vault\", contact.getName(),\n         contact.getEmail());\n }\n```"
  parameters:
  - description: "The list of contacts to set on the vault."
    name: "contacts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<CertificateContact> setContacts(List<CertificateContact> contacts, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing all of the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateContact\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate contacts\"></xref> in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
