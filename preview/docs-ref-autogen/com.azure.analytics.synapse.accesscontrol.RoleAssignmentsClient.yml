### YamlMime:JavaType
uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient"
fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient"
name: "RoleAssignmentsClient"
nameWithType: "RoleAssignmentsClient"
summary: "Initializes a new instance of the synchronous Access<wbr>Control<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RoleAssignmentsClient"
methods:
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.checkPrincipalAccess(com.azure.analytics.synapse.accesscontrol.models.SubjectInfo,java.util.List<com.azure.analytics.synapse.accesscontrol.models.RequiredAction>,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.checkPrincipalAccess(SubjectInfo subject, List<RequiredAction> actions, String scope)"
  name: "checkPrincipalAccess(SubjectInfo subject, List<RequiredAction> actions, String scope)"
  nameWithType: "RoleAssignmentsClient.checkPrincipalAccess(SubjectInfo subject, List<RequiredAction> actions, String scope)"
  summary: "Check if the given principal<wbr>Id has access to perform list of actions at a given scope."
  parameters:
  - description: "Subject details."
    name: "subject"
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SubjectInfo?alt=com.azure.analytics.synapse.accesscontrol.models.SubjectInfo&text=SubjectInfo\" data-throw-if-not-resolved=\"False\" />"
  - description: "List of actions."
    name: "actions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RequiredAction?alt=com.azure.analytics.synapse.accesscontrol.models.RequiredAction&text=RequiredAction\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Scope at which the check access is done."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckPrincipalAccessResponse checkPrincipalAccess(SubjectInfo subject, List<RequiredAction> actions, String scope)"
  desc: "Check if the given principalId has access to perform list of actions at a given scope."
  returns:
    description: "check access response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.CheckPrincipalAccessResponse?alt=com.azure.analytics.synapse.accesscontrol.models.CheckPrincipalAccessResponse&text=CheckPrincipalAccessResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.checkPrincipalAccessWithResponse(com.azure.analytics.synapse.accesscontrol.models.SubjectInfo,java.util.List<com.azure.analytics.synapse.accesscontrol.models.RequiredAction>,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.checkPrincipalAccessWithResponse(SubjectInfo subject, List<RequiredAction> actions, String scope, Context context)"
  name: "checkPrincipalAccessWithResponse(SubjectInfo subject, List<RequiredAction> actions, String scope, Context context)"
  nameWithType: "RoleAssignmentsClient.checkPrincipalAccessWithResponse(SubjectInfo subject, List<RequiredAction> actions, String scope, Context context)"
  summary: "Check if the given principal<wbr>Id has access to perform list of actions at a given scope."
  parameters:
  - description: "Subject details."
    name: "subject"
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SubjectInfo?alt=com.azure.analytics.synapse.accesscontrol.models.SubjectInfo&text=SubjectInfo\" data-throw-if-not-resolved=\"False\" />"
  - description: "List of actions."
    name: "actions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RequiredAction?alt=com.azure.analytics.synapse.accesscontrol.models.RequiredAction&text=RequiredAction\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Scope at which the check access is done."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<CheckPrincipalAccessResponse> checkPrincipalAccessWithResponse(SubjectInfo subject, List<RequiredAction> actions, String scope, Context context)"
  desc: "Check if the given principalId has access to perform list of actions at a given scope."
  returns:
    description: "check access response details."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.CheckPrincipalAccessResponse?alt=com.azure.analytics.synapse.accesscontrol.models.CheckPrincipalAccessResponse&text=CheckPrincipalAccessResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignment(java.lang.String,java.util.UUID,java.util.UUID,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope)"
  name: "createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope)"
  nameWithType: "RoleAssignmentsClient.createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope)"
  summary: "Create role assignment."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Role ID of the Synapse Built-In Role."
    name: "roleId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object ID of the AAD principal or security-group."
    name: "principalId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope at which the role assignment is created."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleAssignmentDetails createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope)"
  desc: "Create role assignment."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails&text=RoleAssignmentDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignment(java.lang.String,java.util.UUID,java.util.UUID,java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType)"
  name: "createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType)"
  nameWithType: "RoleAssignmentsClient.createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType)"
  summary: "Create role assignment."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Role ID of the Synapse Built-In Role."
    name: "roleId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object ID of the AAD principal or security-group."
    name: "principalId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope at which the role assignment is created."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the principal Id: User, Group or ServicePrincipal."
    name: "principalType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleAssignmentDetails createRoleAssignment(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType)"
  desc: "Create role assignment."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails&text=RoleAssignmentDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignmentWithResponse(java.lang.String,java.util.UUID,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.createRoleAssignmentWithResponse(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType, Context context)"
  name: "createRoleAssignmentWithResponse(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType, Context context)"
  nameWithType: "RoleAssignmentsClient.createRoleAssignmentWithResponse(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType, Context context)"
  summary: "Create role assignment."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Role ID of the Synapse Built-In Role."
    name: "roleId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object ID of the AAD principal or security-group."
    name: "principalId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope at which the role assignment is created."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the principal Id: User, Group or ServicePrincipal."
    name: "principalType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RoleAssignmentDetails> createRoleAssignmentWithResponse(String roleAssignmentId, UUID roleId, UUID principalId, String scope, String principalType, Context context)"
  desc: "Create role assignment."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails&text=RoleAssignmentDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentById(java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentById(String roleAssignmentId)"
  name: "deleteRoleAssignmentById(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.deleteRoleAssignmentById(String roleAssignmentId)"
  summary: "Delete role assignment by role assignment Id."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteRoleAssignmentById(String roleAssignmentId)"
  desc: "Delete role assignment by role assignment Id."
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentById(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentById(String roleAssignmentId, String scope)"
  name: "deleteRoleAssignmentById(String roleAssignmentId, String scope)"
  nameWithType: "RoleAssignmentsClient.deleteRoleAssignmentById(String roleAssignmentId, String scope)"
  summary: "Delete role assignment by role assignment Id."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteRoleAssignmentById(String roleAssignmentId, String scope)"
  desc: "Delete role assignment by role assignment Id."
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.deleteRoleAssignmentByIdWithResponse(String roleAssignmentId, String scope, Context context)"
  name: "deleteRoleAssignmentByIdWithResponse(String roleAssignmentId, String scope, Context context)"
  nameWithType: "RoleAssignmentsClient.deleteRoleAssignmentByIdWithResponse(String roleAssignmentId, String scope, Context context)"
  summary: "Delete role assignment by role assignment Id."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteRoleAssignmentByIdWithResponse(String roleAssignmentId, String scope, Context context)"
  desc: "Delete role assignment by role assignment Id."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.getRoleAssignmentById(java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.getRoleAssignmentById(String roleAssignmentId)"
  name: "getRoleAssignmentById(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.getRoleAssignmentById(String roleAssignmentId)"
  summary: "Get role assignment by role assignment Id."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleAssignmentDetails getRoleAssignmentById(String roleAssignmentId)"
  desc: "Get role assignment by role assignment Id."
  returns:
    description: "role assignment by role assignment Id."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails&text=RoleAssignmentDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.getRoleAssignmentByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.getRoleAssignmentByIdWithResponse(String roleAssignmentId, Context context)"
  name: "getRoleAssignmentByIdWithResponse(String roleAssignmentId, Context context)"
  nameWithType: "RoleAssignmentsClient.getRoleAssignmentByIdWithResponse(String roleAssignmentId, Context context)"
  summary: "Get role assignment by role assignment Id."
  parameters:
  - description: "The ID of the role assignment."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RoleAssignmentDetails> getRoleAssignmentByIdWithResponse(String roleAssignmentId, Context context)"
  desc: "Get role assignment by role assignment Id."
  returns:
    description: "role assignment by role assignment Id."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetails&text=RoleAssignmentDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignments()"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignments()"
  name: "listRoleAssignments()"
  nameWithType: "RoleAssignmentsClient.listRoleAssignments()"
  summary: "List role assignments."
  syntax: "public RoleAssignmentDetailsList listRoleAssignments()"
  desc: "List role assignments."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetailsList?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetailsList&text=RoleAssignmentDetailsList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignments(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignments(String roleId, String principalId, String scope, String continuationToken)"
  name: "listRoleAssignments(String roleId, String principalId, String scope, String continuationToken)"
  nameWithType: "RoleAssignmentsClient.listRoleAssignments(String roleId, String principalId, String scope, String continuationToken)"
  summary: "List role assignments."
  parameters:
  - description: "Synapse Built-In Role Id."
    name: "roleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object ID of the AAD principal or security-group."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Continuation token."
    name: "continuationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleAssignmentDetailsList listRoleAssignments(String roleId, String principalId, String scope, String continuationToken)"
  desc: "List role assignments."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetailsList?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentDetailsList&text=RoleAssignmentDetailsList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignmentsWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleAssignmentsClient.listRoleAssignmentsWithResponse(String roleId, String principalId, String scope, String continuationToken, Context context)"
  name: "listRoleAssignmentsWithResponse(String roleId, String principalId, String scope, String continuationToken, Context context)"
  nameWithType: "RoleAssignmentsClient.listRoleAssignmentsWithResponse(String roleId, String principalId, String scope, String continuationToken, Context context)"
  summary: "List role assignments."
  parameters:
  - description: "Synapse Built-In Role Id."
    name: "roleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object ID of the AAD principal or security-group."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Continuation token."
    name: "continuationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleAssignmentsListRoleAssignmentsResponse listRoleAssignmentsWithResponse(String roleId, String principalId, String scope, String continuationToken, Context context)"
  desc: "List role assignments."
  returns:
    description: "role Assignment response details."
    type: "<xref href=\"com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentsListRoleAssignmentsResponse?alt=com.azure.analytics.synapse.accesscontrol.models.RoleAssignmentsListRoleAssignmentsResponse&text=RoleAssignmentsListRoleAssignmentsResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the synchronous AccessControlClient type."
metadata: {}
package: "com.azure.analytics.synapse.accesscontrol"
artifact: com.azure:azure-analytics-synapse-accesscontrol:1.0.0-beta.4
