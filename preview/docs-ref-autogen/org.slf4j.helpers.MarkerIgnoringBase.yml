### YamlMime:JavaType
uid: "org.slf4j.helpers.MarkerIgnoringBase"
fullName: "org.slf4j.helpers.MarkerIgnoringBase"
name: "MarkerIgnoringBase"
nameWithType: "MarkerIgnoringBase"
summary: "This class serves as base for adapters or native implementations of logging systems lacking Marker support. In this implementation, methods taking marker data simply invoke the corresponding method without the Marker argument, discarding any marker data passed as argument."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.slf4j.helpers.NamedLoggerBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.slf4j.helpers.NamedLoggerBase.getName()"
- "org.slf4j.helpers.NamedLoggerBase.readResolve()"
syntax: "public abstract class MarkerIgnoringBase extends NamedLoggerBase implements Logger"
constructors:
- "org.slf4j.helpers.MarkerIgnoringBase.MarkerIgnoringBase()"
methods:
- "org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)"
- "org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
- "org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
- "org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)"
- "org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
- "org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
- "org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)"
- "org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
- "org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
- "org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)"
- "org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)"
- "org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)"
- "org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)"
- "org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)"
- "org.slf4j.helpers.MarkerIgnoringBase.toString()"
- "org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)"
- "org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
- "org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
- "org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)"
- "org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
- "org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
- "org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
type: "class"
implements:
- "<xref href=\"org.slf4j.Logger?alt=org.slf4j.Logger&text=Logger\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.slf4j.helpers"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
