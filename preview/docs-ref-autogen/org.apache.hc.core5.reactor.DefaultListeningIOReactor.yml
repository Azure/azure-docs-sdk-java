### YamlMime:JavaType
uid: "org.apache.hc.core5.reactor.DefaultListeningIOReactor"
fullName: "org.apache.hc.core5.reactor.DefaultListeningIOReactor"
name: "DefaultListeningIOReactor"
nameWithType: "DefaultListeningIOReactor"
summary: "Multi-core I/O reactor that can ask as both <xref uid=\"org.apache.hc.core5.reactor.ConnectionInitiator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionInitiator\"></xref> and <xref uid=\"org.apache.hc.core5.reactor.ConnectionAcceptor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionAcceptor\"></xref>. Internally this I/O reactor distributes newly created I/O session equally across multiple I/O worker threads for a more optimal resource utilization and a better I/O performance. Usually it is recommended to have one worker I/O reactor per physical CPU core."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.hc.core5.reactor.AbstractIOReactorBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.hc.core5.reactor.AbstractIOReactorBase.connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)"
syntax: "public class DefaultListeningIOReactor extends AbstractIOReactorBase implements ConnectionAcceptor"
constructors:
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.DefaultListeningIOReactor(org.apache.hc.core5.reactor.IOEventHandlerFactory)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.DefaultListeningIOReactor(org.apache.hc.core5.reactor.IOEventHandlerFactory,org.apache.hc.core5.reactor.IOReactorConfig,java.util.concurrent.ThreadFactory,java.util.concurrent.ThreadFactory,org.apache.hc.core5.function.Decorator<org.apache.hc.core5.reactor.IOSession>,org.apache.hc.core5.function.Callback<java.lang.Exception>,org.apache.hc.core5.reactor.IOSessionListener,org.apache.hc.core5.function.Callback<org.apache.hc.core5.reactor.IOSession>)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.DefaultListeningIOReactor(org.apache.hc.core5.reactor.IOEventHandlerFactory,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.core5.function.Callback<org.apache.hc.core5.reactor.IOSession>)"
methods:
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.awaitShutdown(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.close()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.close(org.apache.hc.core5.io.CloseMode)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.getEndpoints()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.getStatus()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.initiateShutdown()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.listen(java.net.SocketAddress)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.listen(java.net.SocketAddress,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.ListenerEndpoint>)"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.pause()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.resume()"
- "org.apache.hc.core5.reactor.DefaultListeningIOReactor.start()"
type: "class"
implements:
- "<xref href=\"org.apache.hc.core5.reactor.ConnectionAcceptor?alt=org.apache.hc.core5.reactor.ConnectionAcceptor&text=ConnectionAcceptor\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.hc.core5.reactor"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
