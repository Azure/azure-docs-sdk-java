### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.JsonSerializable
  id: JsonSerializable
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.JsonSerializable.Base
  - com.fasterxml.jackson.databind.JsonSerializable.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.JsonSerializable.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  langs:
  - java
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
  type: Interface
  package: com.fasterxml.jackson.databind
  summary: >-
    Interface that can be implemented by objects that know how to serialize themselves to JSON, using <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> (and <xref uid="com.fasterxml.jackson.databind.SerializerProvider" data-throw-if-not-resolved="false">SerializerProvider</xref> if necessary).


    Note that implementing this interface binds implementing object closely to Jackson API, and that it is often not necessary to do so -- if class is a bean, it can be serialized without implementing this interface.


    Note that while it is possible to just directly implement <xref uid="com.fasterxml.jackson.databind.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>, actual implementations are strongly recommended to instead extend <xref uid="com.fasterxml.jackson.databind.JsonSerializable.Base" data-throw-if-not-resolved="false">JsonSerializable.Base</xref>.
  syntax:
    content: public interface JsonSerializable
- uid: com.fasterxml.jackson.databind.JsonSerializable.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonSerializable
  langs:
  - java
  name: serialize(JsonGenerator gen, SerializerProvider serializers)
  nameWithType: JsonSerializable.serialize(JsonGenerator gen, SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.serialize(JsonGenerator gen, SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.JsonSerializable.serialize*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Serialization method called when no additional type information is to be included in serialization.
  syntax:
    content: public abstract void serialize(JsonGenerator gen, SerializerProvider serializers)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.JsonSerializable.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonSerializable
  langs:
  - java
  name: serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  nameWithType: JsonSerializable.serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.JsonSerializable.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Serialization method called when additional type information is expected to be included in serialization, for deserialization to use.


    Usually implementation consists of a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypePrefix</xref> followed by serialization of contents, followed by a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypeSuffix</xref>). Details of the type id argument to pass depend on shape of JSON Object used (Array, Object or scalar like String/Number/Boolean).


    Note that some types (most notably, "natural" types: String, Integer, Double and Boolean) never include type information.
  syntax:
    content: public abstract void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.JsonSerializable.serialize*
  name: serialize
  nameWithType: JsonSerializable.serialize
  fullName: com.fasterxml.jackson.databind.JsonSerializable.serialize
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializable.serializeWithType*
  name: serializeWithType
  nameWithType: JsonSerializable.serializeWithType
  fullName: com.fasterxml.jackson.databind.JsonSerializable.serializeWithType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base
  name: JsonSerializable.Base
  nameWithType: JsonSerializable.Base
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base
