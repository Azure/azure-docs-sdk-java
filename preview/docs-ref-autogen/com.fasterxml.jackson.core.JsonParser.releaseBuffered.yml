### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.releaseBuffered*"
fullName: "com.fasterxml.jackson.core.JsonParser.releaseBuffered"
name: "releaseBuffered"
nameWithType: "JsonParser.releaseBuffered"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)"
  fullName: "com.fasterxml.jackson.core.JsonParser.releaseBuffered(OutputStream out)"
  name: "releaseBuffered(OutputStream out)"
  nameWithType: "JsonParser.releaseBuffered(OutputStream out)"
  summary: "Method that can be called to push back any content that has been read but not consumed by the parser. This is usually done after reading all content of interest using parser. Content is released by writing it to given stream if possible; if underlying input is byte-based it can released, if not (char-based) it can not."
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int releaseBuffered(OutputStream out)"
  exceptions:
  - description: "if write to stream threw exception"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "-1 if the underlying content source is not byte based\n    (that is, input can not be sent to <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>;\n    otherwise number of bytes released (0 if there was nothing to release)"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)"
  fullName: "com.fasterxml.jackson.core.JsonParser.releaseBuffered(Writer w)"
  name: "releaseBuffered(Writer w)"
  nameWithType: "JsonParser.releaseBuffered(Writer w)"
  summary: "Method that can be called to push back any content that has been read but not consumed by the parser. This is usually done after reading all content of interest using parser. Content is released by writing it to given writer if possible; if underlying input is char-based it can released, if not (byte-based) it can not."
  parameters:
  - name: "w"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int releaseBuffered(Writer w)"
  exceptions:
  - description: "if write using Writer threw exception"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "-1 if the underlying content source is not char-based\n    (that is, input can not be sent to <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>;\n    otherwise number of chars released (0 if there was nothing to release)"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
