### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.SetView<E>"
name: "Sets.SetView<E>"
nameWithType: "Sets.SetView<E>"
summary: "An unmodifiable view of a set which may be backed by other sets; this view will change as the backing sets do. Contains methods to copy the data into a new set which will then remain stable. There is usually no reason to retain a reference of type `SetView`; typically, you either use it as a plain <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref>, or immediately invoke <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#immutableCopy\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copyInto\"></xref> and forget the `SetView` itself."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractSet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.<T>toArray(T[])"
- "java.util.AbstractCollection.add(E)"
- "java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)"
- "java.util.AbstractCollection.clear()"
- "java.util.AbstractCollection.contains(java.lang.Object)"
- "java.util.AbstractCollection.containsAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.isEmpty()"
- "java.util.AbstractCollection.iterator()"
- "java.util.AbstractCollection.remove(java.lang.Object)"
- "java.util.AbstractCollection.retainAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.size()"
- "java.util.AbstractCollection.toArray()"
- "java.util.AbstractCollection.toString()"
- "java.util.AbstractSet.equals(java.lang.Object)"
- "java.util.AbstractSet.hashCode()"
- "java.util.AbstractSet.removeAll(java.util.Collection<?>)"
syntax: "public abstract static class Sets.SetView<E> extends AbstractSet<E>"
methods:
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.<S>copyInto(S)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.clear()"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.immutableCopy()"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.removeIf(java.util.function.Predicate<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.SetView.retainAll(java.util.Collection<?>)"
type: "class"
typeParameters:
- name: "E"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
