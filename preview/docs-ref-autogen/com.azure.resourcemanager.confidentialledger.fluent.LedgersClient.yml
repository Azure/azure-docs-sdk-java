### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient"
fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient"
name: "LedgersClient"
nameWithType: "LedgersClient"
summary: "An instance of this class provides access to all the operations defined in Ledgers<wbr>Client."
syntax: "public interface LedgersClient"
methods:
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  name: "beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  nameWithType: "LedgersClient.beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  summary: "Creates a Confidential Ledger with the specified ledger parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger Create Request Body."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ConfidentialLedgerInner>,ConfidentialLedgerInner> beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  desc: "Creates a Confidential Ledger with the specified ledger parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of confidential Ledger."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  name: "beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  nameWithType: "LedgersClient.beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  summary: "Creates a Confidential Ledger with the specified ledger parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger Create Request Body."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ConfidentialLedgerInner>,ConfidentialLedgerInner> beginCreate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  desc: "Creates a Confidential Ledger with the specified ledger parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of confidential Ledger."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginDelete(String resourceGroupName, String ledgerName)"
  name: "beginDelete(String resourceGroupName, String ledgerName)"
  nameWithType: "LedgersClient.beginDelete(String resourceGroupName, String ledgerName)"
  summary: "Deletes an existing Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String ledgerName)"
  desc: "Deletes an existing Confidential Ledger."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginDelete(String resourceGroupName, String ledgerName, Context context)"
  name: "beginDelete(String resourceGroupName, String ledgerName, Context context)"
  nameWithType: "LedgersClient.beginDelete(String resourceGroupName, String ledgerName, Context context)"
  summary: "Deletes an existing Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String ledgerName, Context context)"
  desc: "Deletes an existing Confidential Ledger."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  name: "beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  nameWithType: "LedgersClient.beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  summary: "Updates properties of Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger request body for Updating Ledger."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ConfidentialLedgerInner>,ConfidentialLedgerInner> beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  desc: "Updates properties of Confidential Ledger."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of confidential Ledger."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  name: "beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  nameWithType: "LedgersClient.beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  summary: "Updates properties of Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger request body for Updating Ledger."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ConfidentialLedgerInner>,ConfidentialLedgerInner> beginUpdate(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  desc: "Updates properties of Confidential Ledger."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of confidential Ledger."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  name: "create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  nameWithType: "LedgersClient.create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  summary: "Creates a Confidential Ledger with the specified ledger parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger Create Request Body."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  desc: "Creates a Confidential Ledger with the specified ledger parameters."
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  name: "create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  nameWithType: "LedgersClient.create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  summary: "Creates a Confidential Ledger with the specified ledger parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger Create Request Body."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner create(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  desc: "Creates a Confidential Ledger with the specified ledger parameters."
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.delete(String resourceGroupName, String ledgerName)"
  name: "delete(String resourceGroupName, String ledgerName)"
  nameWithType: "LedgersClient.delete(String resourceGroupName, String ledgerName)"
  summary: "Deletes an existing Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String ledgerName)"
  desc: "Deletes an existing Confidential Ledger."
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.delete(String resourceGroupName, String ledgerName, Context context)"
  name: "delete(String resourceGroupName, String ledgerName, Context context)"
  nameWithType: "LedgersClient.delete(String resourceGroupName, String ledgerName, Context context)"
  summary: "Deletes an existing Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String ledgerName, Context context)"
  desc: "Deletes an existing Confidential Ledger."
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup(String resourceGroupName, String ledgerName)"
  name: "getByResourceGroup(String resourceGroupName, String ledgerName)"
  nameWithType: "LedgersClient.getByResourceGroup(String resourceGroupName, String ledgerName)"
  summary: "Retrieves the properties of a Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner getByResourceGroup(String resourceGroupName, String ledgerName)"
  desc: "Retrieves the properties of a Confidential Ledger."
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroupWithResponse(String resourceGroupName, String ledgerName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String ledgerName, Context context)"
  nameWithType: "LedgersClient.getByResourceGroupWithResponse(String resourceGroupName, String ledgerName, Context context)"
  summary: "Retrieves the properties of a Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ConfidentialLedgerInner> getByResourceGroupWithResponse(String resourceGroupName, String ledgerName, Context context)"
  desc: "Retrieves the properties of a Confidential Ledger."
  returns:
    description: "confidential Ledger along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.list()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.list()"
  name: "list()"
  nameWithType: "LedgersClient.list()"
  summary: "Retrieves the properties of all Confidential Ledgers."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ConfidentialLedgerInner> list()"
  desc: "Retrieves the properties of all Confidential Ledgers."
  returns:
    description: "object that includes an array of Confidential Ledgers and a possible link for next set as paginated\n     response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.list(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.list(String filter, Context context)"
  name: "list(String filter, Context context)"
  nameWithType: "LedgersClient.list(String filter, Context context)"
  summary: "Retrieves the properties of all Confidential Ledgers."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ConfidentialLedgerInner> list(String filter, Context context)"
  desc: "Retrieves the properties of all Confidential Ledgers."
  returns:
    description: "object that includes an array of Confidential Ledgers and a possible link for next set as paginated\n     response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "LedgersClient.listByResourceGroup(String resourceGroupName)"
  summary: "Retrieves the properties of all Confidential Ledgers."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ConfidentialLedgerInner> listByResourceGroup(String resourceGroupName)"
  desc: "Retrieves the properties of all Confidential Ledgers."
  returns:
    description: "object that includes an array of Confidential Ledgers and a possible link for next set as paginated\n     response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.listByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.listByResourceGroup(String resourceGroupName, String filter, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Context context)"
  nameWithType: "LedgersClient.listByResourceGroup(String resourceGroupName, String filter, Context context)"
  summary: "Retrieves the properties of all Confidential Ledgers."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ConfidentialLedgerInner> listByResourceGroup(String resourceGroupName, String filter, Context context)"
  desc: "Retrieves the properties of all Confidential Ledgers."
  returns:
    description: "object that includes an array of Confidential Ledgers and a possible link for next set as paginated\n     response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  name: "update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  nameWithType: "LedgersClient.update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  summary: "Updates properties of Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger request body for Updating Ledger."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger)"
  desc: "Updates properties of Confidential Ledger."
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  name: "update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  nameWithType: "LedgersClient.update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  summary: "Updates properties of Confidential Ledger."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Confidential Ledger request body for Updating Ledger."
    name: "confidentialLedger"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner update(String resourceGroupName, String ledgerName, ConfidentialLedgerInner confidentialLedger, Context context)"
  desc: "Updates properties of Confidential Ledger."
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in LedgersClient."
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.1
