### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll*"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.findAll"
name: "findAll"
nameWithType: "SimpleReactiveCosmosRepository<T,K>.findAll"
members:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.findAll()"
  name: "findAll()"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.findAll()"
  syntax: "public Flux<T> findAll()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.findAll(PartitionKey partitionKey)"
  name: "findAll(PartitionKey partitionKey)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.findAll(PartitionKey partitionKey)"
  summary: "Returns Flux of items in a specific partition"
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<T> findAll(PartitionKey partitionKey)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll(org.springframework.data.domain.Sort)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.findAll(Sort sort)"
  name: "findAll(Sort sort)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.findAll(Sort sort)"
  parameters:
  - name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<T> findAll(Sort sort)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
