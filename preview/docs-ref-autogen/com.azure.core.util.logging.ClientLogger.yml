### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.logging.ClientLogger
  id: ClientLogger
  parent: com.azure.core.util.logging
  children:
  - com.azure.core.util.logging.ClientLogger.ClientLogger(Class<?>)
  - com.azure.core.util.logging.ClientLogger.ClientLogger(String)
  - com.azure.core.util.logging.ClientLogger.error(String,Object...)
  - com.azure.core.util.logging.ClientLogger.info(String,Object...)
  - com.azure.core.util.logging.ClientLogger.logAndThrow(RuntimeException)
  - com.azure.core.util.logging.ClientLogger.verbose(String,Object...)
  - com.azure.core.util.logging.ClientLogger.warning(String,Object...)
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 33
  package: com.azure.core.util.logging
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{} \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
  inheritance:
  - java.lang.Object
- uid: com.azure.core.util.logging.ClientLogger.ClientLogger(Class<?>)
  id: ClientLogger(Class<?>)
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: ClientLogger(Class<?> clazz)
  nameWithType: ClientLogger.ClientLogger(Class<?> clazz)
  fullName: com.azure.core.util.logging.ClientLogger.ClientLogger(Class<?> clazz)
  overload: com.azure.core.util.logging.ClientLogger.ClientLogger*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 66
  package: com.azure.core.util.logging
  summary: "<p>Retrieves a logger for the passed class using the <xref uid=\"\" data-throw-if-not-resolved=\"false\">LoggerFactory</xref>.</p>\r\n<p></p>"
  syntax:
    content: public ClientLogger(Class<?> clazz)
    parameters:
    - id: clazz
      type: a19781f8
      description: <p>Class creating the logger. </p>
- uid: com.azure.core.util.logging.ClientLogger.ClientLogger(String)
  id: ClientLogger(String)
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: ClientLogger(String className)
  nameWithType: ClientLogger.ClientLogger(String className)
  fullName: com.azure.core.util.logging.ClientLogger.ClientLogger(String className)
  overload: com.azure.core.util.logging.ClientLogger.ClientLogger*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 75
  package: com.azure.core.util.logging
  summary: "<p>Retrieves a logger for the passed class name using the <xref uid=\"\" data-throw-if-not-resolved=\"false\">LoggerFactory</xref>.</p>\r\n<p></p>"
  syntax:
    content: public ClientLogger(String className)
    parameters:
    - id: className
      type: "26831127"
      description: <p>Class name creating the logger. </p>
- uid: com.azure.core.util.logging.ClientLogger.error(String,Object...)
  id: )
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: error(String format, Object... args)
  nameWithType: ClientLogger.error(String format, Object... args)
  fullName: com.azure.core.util.logging.ClientLogger.error(String format, Object... args)
  overload: com.azure.core.util.logging.ClientLogger.error*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 135
  package: com.azure.core.util.logging
  summary: "<p>Logs a formattable message that uses<code>{} \r\n    </code> as the placeholder at<code>error \r\n    </code> log level</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>Logging an error with stack trace { com.azure.core.implementation.util.clientlogger.error}</p>\r\n<p></p>"
  syntax:
    content: public void error(String format, Object... args)
    parameters:
    - id: format
      type: "26831127"
      description: <p>The formattable message to log </p>
    - id: args
      type: 1355eaf1
      description: <p>Arguments for the message, if an exception is being logged last argument is the throwable. </p>
- uid: com.azure.core.util.logging.ClientLogger.info(String,Object...)
  id: )
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: info(String format, Object... args)
  nameWithType: ClientLogger.info(String format, Object... args)
  fullName: com.azure.core.util.logging.ClientLogger.info(String format, Object... args)
  overload: com.azure.core.util.logging.ClientLogger.info*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 105
  package: com.azure.core.util.logging
  summary: "<p>Logs a formattable message that uses<code>{} \r\n    </code> as the placeholder at<code>informational \r\n    </code> log level</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>Logging a message at informational log level { com.azure.core.implementation.util.clientlogger.info}</p>\r\n<p></p>"
  syntax:
    content: public void info(String format, Object... args)
    parameters:
    - id: format
      type: "26831127"
      description: <p>The formattable message to log </p>
    - id: args
      type: 1355eaf1
      description: <p>Arguments for the message, if an exception is being logged last argument is the throwable. </p>
- uid: com.azure.core.util.logging.ClientLogger.logAndThrow(RuntimeException)
  id: logAndThrow(RuntimeException)
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: logAndThrow(RuntimeException runtimeException)
  nameWithType: ClientLogger.logAndThrow(RuntimeException runtimeException)
  fullName: com.azure.core.util.logging.ClientLogger.logAndThrow(RuntimeException runtimeException)
  overload: com.azure.core.util.logging.ClientLogger.logAndThrow*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 157
  package: com.azure.core.util.logging
  summary: "<p>This will log <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref>, if logging is enabled , and throw the runtime exception. </p>"
  syntax:
    content: public void logAndThrow(RuntimeException runtimeException)
    parameters:
    - id: runtimeException
      type: 9b2a4515
      description: >-
        <p>to be thrown. It will do nothing if<code>null 

            </code> is provided. </p>
  exceptions:
  - type: 9b2a4515
    description: <p>which is requested by this call. </p>
- uid: com.azure.core.util.logging.ClientLogger.verbose(String,Object...)
  id: )
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: verbose(String format, Object... args)
  nameWithType: ClientLogger.verbose(String format, Object... args)
  fullName: com.azure.core.util.logging.ClientLogger.verbose(String format, Object... args)
  overload: com.azure.core.util.logging.ClientLogger.verbose*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 90
  package: com.azure.core.util.logging
  summary: "<p>Logs a formattable message that uses<code>{} \r\n    </code> as the placeholder at<code>verbose \r\n    </code> log level</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>Logging a message at verbose log level { com.azure.core.implementation.util.clientlogger.verbose}</p>\r\n<p></p>"
  syntax:
    content: public void verbose(String format, Object... args)
    parameters:
    - id: format
      type: "26831127"
      description: <p>The formattable message to log </p>
    - id: args
      type: 1355eaf1
      description: <p>Arguments for the message, if an exception is being logged last argument is the throwable. </p>
- uid: com.azure.core.util.logging.ClientLogger.warning(String,Object...)
  id: )
  parent: com.azure.core.util.logging.ClientLogger
  href: com.azure.core.util.logging.ClientLogger.yml
  langs:
  - java
  name: warning(String format, Object... args)
  nameWithType: ClientLogger.warning(String format, Object... args)
  fullName: com.azure.core.util.logging.ClientLogger.warning(String format, Object... args)
  overload: com.azure.core.util.logging.ClientLogger.warning*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java
    startLine: 120
  package: com.azure.core.util.logging
  summary: "<p>Logs a formattable message that uses<code>{} \r\n    </code> as the placeholder at<code>warning \r\n    </code> log level</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>Logging a message at warning log level { com.azure.core.implementation.util.clientlogger.warning}</p>\r\n<p></p>"
  syntax:
    content: public void warning(String format, Object... args)
    parameters:
    - id: format
      type: "26831127"
      description: <p>The formattable message to log </p>
    - id: args
      type: 1355eaf1
      description: <p>Arguments for the message, if an exception is being logged last argument is the throwable. </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: com.azure.core.util.logging.ClientLogger.ClientLogger*
  name: ClientLogger
  nameWithType: ClientLogger.ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger.ClientLogger
  package: com.azure.core.util.logging
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 1355eaf1
  spec.java:
  - name: Object...
    fullName: Object...
- uid: com.azure.core.util.logging.ClientLogger.verbose*
  name: verbose
  nameWithType: ClientLogger.verbose
  fullName: com.azure.core.util.logging.ClientLogger.verbose
  package: com.azure.core.util.logging
- uid: com.azure.core.util.logging.ClientLogger.info*
  name: info
  nameWithType: ClientLogger.info
  fullName: com.azure.core.util.logging.ClientLogger.info
  package: com.azure.core.util.logging
- uid: com.azure.core.util.logging.ClientLogger.warning*
  name: warning
  nameWithType: ClientLogger.warning
  fullName: com.azure.core.util.logging.ClientLogger.warning
  package: com.azure.core.util.logging
- uid: com.azure.core.util.logging.ClientLogger.error*
  name: error
  nameWithType: ClientLogger.error
  fullName: com.azure.core.util.logging.ClientLogger.error
  package: com.azure.core.util.logging
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.azure.core.util.logging.ClientLogger.logAndThrow*
  name: logAndThrow
  nameWithType: ClientLogger.logAndThrow
  fullName: com.azure.core.util.logging.ClientLogger.logAndThrow
  package: com.azure.core.util.logging
- uid: com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL
  parent: com.azure.core.util.configuration.BaseConfigurations
  href: com.azure.core.util.configuration.BaseConfigurations.yml
  name: AZURE_LOG_LEVEL
  nameWithType: BaseConfigurations.AZURE_LOG_LEVEL
  fullName: com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL
  type: Field
  summary: "<p>Enable console logging by setting a log level. </p>"
  syntax:
    content: public static final String AZURE_LOG_LEVEL= "AZURE_LOG_LEVEL"
    return:
      type: 3d93591e
