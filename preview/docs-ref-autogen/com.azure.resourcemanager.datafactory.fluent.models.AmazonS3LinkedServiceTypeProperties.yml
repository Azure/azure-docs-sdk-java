### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties"
name: "AmazonS3LinkedServiceTypeProperties"
nameWithType: "AmazonS3LinkedServiceTypeProperties"
summary: "Amazon S3 linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AmazonS3LinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.AmazonS3LinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.AmazonS3LinkedServiceTypeProperties()"
  name: "AmazonS3LinkedServiceTypeProperties()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.AmazonS3LinkedServiceTypeProperties()"
  syntax: "public AmazonS3LinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.accessKeyId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.accessKeyId()"
  name: "accessKeyId()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.accessKeyId()"
  summary: "Get the access<wbr>Key<wbr>Id property: The access key identifier of the Amazon S3 Identity and Access Management (IAM) user."
  syntax: "public Object accessKeyId()"
  desc: "Get the accessKeyId property: The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
  returns:
    description: "the accessKeyId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authentication<wbr>Type property: The authentication type of S3."
  syntax: "public Object authenticationType()"
  desc: "Get the authenticationType property: The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string)."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.secretAccessKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.secretAccessKey()"
  name: "secretAccessKey()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.secretAccessKey()"
  summary: "Get the secret<wbr>Access<wbr>Key property: The secret access key of the Amazon S3 Identity and Access Management (IAM) user."
  syntax: "public SecretBase secretAccessKey()"
  desc: "Get the secretAccessKey property: The secret access key of the Amazon S3 Identity and Access Management (IAM) user."
  returns:
    description: "the secretAccessKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.serviceUrl()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.serviceUrl()"
  name: "serviceUrl()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.serviceUrl()"
  summary: "Get the service<wbr>Url property: This value specifies the endpoint to access with the S3 Connector."
  syntax: "public Object serviceUrl()"
  desc: "Get the serviceUrl property: This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
  returns:
    description: "the serviceUrl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.sessionToken()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.sessionToken()"
  name: "sessionToken()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.sessionToken()"
  summary: "Get the session<wbr>Token property: The session token for the S3 temporary security credential."
  syntax: "public SecretBase sessionToken()"
  desc: "Get the sessionToken property: The session token for the S3 temporary security credential."
  returns:
    description: "the sessionToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withAccessKeyId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withAccessKeyId(Object accessKeyId)"
  name: "withAccessKeyId(Object accessKeyId)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withAccessKeyId(Object accessKeyId)"
  summary: "Set the access<wbr>Key<wbr>Id property: The access key identifier of the Amazon S3 Identity and Access Management (IAM) user."
  parameters:
  - description: "the accessKeyId value to set."
    name: "accessKeyId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withAccessKeyId(Object accessKeyId)"
  desc: "Set the accessKeyId property: The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withAuthenticationType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withAuthenticationType(Object authenticationType)"
  name: "withAuthenticationType(Object authenticationType)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withAuthenticationType(Object authenticationType)"
  summary: "Set the authentication<wbr>Type property: The authentication type of S3."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withAuthenticationType(Object authenticationType)"
  desc: "Set the authenticationType property: The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withSecretAccessKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withSecretAccessKey(SecretBase secretAccessKey)"
  name: "withSecretAccessKey(SecretBase secretAccessKey)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withSecretAccessKey(SecretBase secretAccessKey)"
  summary: "Set the secret<wbr>Access<wbr>Key property: The secret access key of the Amazon S3 Identity and Access Management (IAM) user."
  parameters:
  - description: "the secretAccessKey value to set."
    name: "secretAccessKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withSecretAccessKey(SecretBase secretAccessKey)"
  desc: "Set the secretAccessKey property: The secret access key of the Amazon S3 Identity and Access Management (IAM) user."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withServiceUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withServiceUrl(Object serviceUrl)"
  name: "withServiceUrl(Object serviceUrl)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withServiceUrl(Object serviceUrl)"
  summary: "Set the service<wbr>Url property: This value specifies the endpoint to access with the S3 Connector."
  parameters:
  - description: "the serviceUrl value to set."
    name: "serviceUrl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withServiceUrl(Object serviceUrl)"
  desc: "Set the serviceUrl property: This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withSessionToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties.withSessionToken(SecretBase sessionToken)"
  name: "withSessionToken(SecretBase sessionToken)"
  nameWithType: "AmazonS3LinkedServiceTypeProperties.withSessionToken(SecretBase sessionToken)"
  summary: "Set the session<wbr>Token property: The session token for the S3 temporary security credential."
  parameters:
  - description: "the sessionToken value to set."
    name: "sessionToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3LinkedServiceTypeProperties withSessionToken(SecretBase sessionToken)"
  desc: "Set the sessionToken property: The session token for the S3 temporary security credential."
  returns:
    description: "the AmazonS3LinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonS3LinkedServiceTypeProperties&text=AmazonS3LinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Amazon S3 linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
