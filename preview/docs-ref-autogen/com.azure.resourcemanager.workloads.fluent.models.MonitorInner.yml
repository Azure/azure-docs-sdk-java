### YamlMime:JavaType
uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner"
fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner"
name: "MonitorInner"
nameWithType: "MonitorInner"
summary: "SAP monitor info on Azure (ARM properties and SAP monitor properties)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MonitorInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.MonitorInner()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.MonitorInner()"
  name: "MonitorInner()"
  nameWithType: "MonitorInner.MonitorInner()"
  syntax: "public MonitorInner()"
methods:
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.appLocation()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.appLocation()"
  name: "appLocation()"
  nameWithType: "MonitorInner.appLocation()"
  summary: "Get the app<wbr>Location property: The SAP monitor resources will be deployed in the SAP monitoring region."
  syntax: "public String appLocation()"
  desc: "Get the appLocation property: The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."
  returns:
    description: "the appLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.errors()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.errors()"
  name: "errors()"
  nameWithType: "MonitorInner.errors()"
  summary: "Get the errors property: Defines the SAP monitor errors."
  syntax: "public MonitorPropertiesErrors errors()"
  desc: "Get the errors property: Defines the SAP monitor errors."
  returns:
    description: "the errors value."
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.MonitorPropertiesErrors?alt=com.azure.resourcemanager.workloads.models.MonitorPropertiesErrors&text=MonitorPropertiesErrors\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.identity()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.identity()"
  name: "identity()"
  nameWithType: "MonitorInner.identity()"
  summary: "Get the identity property: Managed service identity (user assigned identities)."
  syntax: "public UserAssignedServiceIdentity identity()"
  desc: "Get the identity property: Managed service identity (user assigned identities)."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity?alt=com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity&text=UserAssignedServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.logAnalyticsWorkspaceArmId()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.logAnalyticsWorkspaceArmId()"
  name: "logAnalyticsWorkspaceArmId()"
  nameWithType: "MonitorInner.logAnalyticsWorkspaceArmId()"
  summary: "Get the log<wbr>Analytics<wbr>Workspace<wbr>Arm<wbr>Id property: The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
  syntax: "public String logAnalyticsWorkspaceArmId()"
  desc: "Get the logAnalyticsWorkspaceArmId property: The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
  returns:
    description: "the logAnalyticsWorkspaceArmId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.managedResourceGroupConfiguration()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.managedResourceGroupConfiguration()"
  name: "managedResourceGroupConfiguration()"
  nameWithType: "MonitorInner.managedResourceGroupConfiguration()"
  summary: "Get the managed<wbr>Resource<wbr>Group<wbr>Configuration property: Managed resource group configuration."
  syntax: "public ManagedRGConfiguration managedResourceGroupConfiguration()"
  desc: "Get the managedResourceGroupConfiguration property: Managed resource group configuration."
  returns:
    description: "the managedResourceGroupConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.ManagedRGConfiguration?alt=com.azure.resourcemanager.workloads.models.ManagedRGConfiguration&text=ManagedRGConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.monitorSubnet()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.monitorSubnet()"
  name: "monitorSubnet()"
  nameWithType: "MonitorInner.monitorSubnet()"
  summary: "Get the monitor<wbr>Subnet property: The subnet which the SAP monitor will be deployed in."
  syntax: "public String monitorSubnet()"
  desc: "Get the monitorSubnet property: The subnet which the SAP monitor will be deployed in."
  returns:
    description: "the monitorSubnet value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.msiArmId()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.msiArmId()"
  name: "msiArmId()"
  nameWithType: "MonitorInner.msiArmId()"
  summary: "Get the msi<wbr>Arm<wbr>Id property: The ARM ID of the MSI used for SAP monitoring."
  syntax: "public String msiArmId()"
  desc: "Get the msiArmId property: The ARM ID of the MSI used for SAP monitoring."
  returns:
    description: "the msiArmId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.provisioningState()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "MonitorInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: State of provisioning of the SAP monitor."
  syntax: "public WorkloadMonitorProvisioningState provisioningState()"
  desc: "Get the provisioningState property: State of provisioning of the SAP monitor."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.WorkloadMonitorProvisioningState?alt=com.azure.resourcemanager.workloads.models.WorkloadMonitorProvisioningState&text=WorkloadMonitorProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.routingPreference()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.routingPreference()"
  name: "routingPreference()"
  nameWithType: "MonitorInner.routingPreference()"
  summary: "Get the routing<wbr>Preference property: Sets the routing preference of the SAP monitor."
  syntax: "public RoutingPreference routingPreference()"
  desc: "Get the routingPreference property: Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."
  returns:
    description: "the routingPreference value."
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.RoutingPreference?alt=com.azure.resourcemanager.workloads.models.RoutingPreference&text=RoutingPreference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.systemData()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.systemData()"
  name: "systemData()"
  nameWithType: "MonitorInner.systemData()"
  summary: "Get the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.validate()"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.validate()"
  name: "validate()"
  nameWithType: "MonitorInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withAppLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withAppLocation(String appLocation)"
  name: "withAppLocation(String appLocation)"
  nameWithType: "MonitorInner.withAppLocation(String appLocation)"
  summary: "Set the app<wbr>Location property: The SAP monitor resources will be deployed in the SAP monitoring region."
  parameters:
  - description: "the appLocation value to set."
    name: "appLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withAppLocation(String appLocation)"
  desc: "Set the appLocation property: The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withIdentity(com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withIdentity(UserAssignedServiceIdentity identity)"
  name: "withIdentity(UserAssignedServiceIdentity identity)"
  nameWithType: "MonitorInner.withIdentity(UserAssignedServiceIdentity identity)"
  summary: "Set the identity property: Managed service identity (user assigned identities)."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity?alt=com.azure.resourcemanager.workloads.models.UserAssignedServiceIdentity&text=UserAssignedServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withIdentity(UserAssignedServiceIdentity identity)"
  desc: "Set the identity property: Managed service identity (user assigned identities)."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "MonitorInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withLogAnalyticsWorkspaceArmId(java.lang.String)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withLogAnalyticsWorkspaceArmId(String logAnalyticsWorkspaceArmId)"
  name: "withLogAnalyticsWorkspaceArmId(String logAnalyticsWorkspaceArmId)"
  nameWithType: "MonitorInner.withLogAnalyticsWorkspaceArmId(String logAnalyticsWorkspaceArmId)"
  summary: "Set the log<wbr>Analytics<wbr>Workspace<wbr>Arm<wbr>Id property: The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
  parameters:
  - description: "the logAnalyticsWorkspaceArmId value to set."
    name: "logAnalyticsWorkspaceArmId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withLogAnalyticsWorkspaceArmId(String logAnalyticsWorkspaceArmId)"
  desc: "Set the logAnalyticsWorkspaceArmId property: The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withManagedResourceGroupConfiguration(com.azure.resourcemanager.workloads.models.ManagedRGConfiguration)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withManagedResourceGroupConfiguration(ManagedRGConfiguration managedResourceGroupConfiguration)"
  name: "withManagedResourceGroupConfiguration(ManagedRGConfiguration managedResourceGroupConfiguration)"
  nameWithType: "MonitorInner.withManagedResourceGroupConfiguration(ManagedRGConfiguration managedResourceGroupConfiguration)"
  summary: "Set the managed<wbr>Resource<wbr>Group<wbr>Configuration property: Managed resource group configuration."
  parameters:
  - description: "the managedResourceGroupConfiguration value to set."
    name: "managedResourceGroupConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.ManagedRGConfiguration?alt=com.azure.resourcemanager.workloads.models.ManagedRGConfiguration&text=ManagedRGConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withManagedResourceGroupConfiguration(ManagedRGConfiguration managedResourceGroupConfiguration)"
  desc: "Set the managedResourceGroupConfiguration property: Managed resource group configuration."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withMonitorSubnet(java.lang.String)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withMonitorSubnet(String monitorSubnet)"
  name: "withMonitorSubnet(String monitorSubnet)"
  nameWithType: "MonitorInner.withMonitorSubnet(String monitorSubnet)"
  summary: "Set the monitor<wbr>Subnet property: The subnet which the SAP monitor will be deployed in."
  parameters:
  - description: "the monitorSubnet value to set."
    name: "monitorSubnet"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withMonitorSubnet(String monitorSubnet)"
  desc: "Set the monitorSubnet property: The subnet which the SAP monitor will be deployed in."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withRoutingPreference(com.azure.resourcemanager.workloads.models.RoutingPreference)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withRoutingPreference(RoutingPreference routingPreference)"
  name: "withRoutingPreference(RoutingPreference routingPreference)"
  nameWithType: "MonitorInner.withRoutingPreference(RoutingPreference routingPreference)"
  summary: "Set the routing<wbr>Preference property: Sets the routing preference of the SAP monitor."
  parameters:
  - description: "the routingPreference value to set."
    name: "routingPreference"
    type: "<xref href=\"com.azure.resourcemanager.workloads.models.RoutingPreference?alt=com.azure.resourcemanager.workloads.models.RoutingPreference&text=RoutingPreference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorInner withRoutingPreference(RoutingPreference routingPreference)"
  desc: "Set the routingPreference property: Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."
  returns:
    description: "the MonitorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.workloads.fluent.models.MonitorInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "MonitorInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MonitorInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "SAP monitor info on Azure (ARM properties and SAP monitor properties)."
metadata: {}
package: "com.azure.resourcemanager.workloads.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-workloads:1.0.0-beta.1
