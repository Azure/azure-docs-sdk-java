### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths*"
fullName: "com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths"
name: "withBackupFilePaths"
nameWithType: "MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths"
members:
- uid: "com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths(List<String> backupFilePaths)"
  name: "withBackupFilePaths(List<String> backupFilePaths)"
  nameWithType: "MigrateSqlServerSqlMIDatabaseInput.withBackupFilePaths(List<String> backupFilePaths)"
  summary: "Set the backupFilePaths property: The list of backup files to be used in case of existing backups."
  parameters:
  - description: "the backupFilePaths value to set."
    name: "backupFilePaths"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MigrateSqlServerSqlMIDatabaseInput withBackupFilePaths(List<String> backupFilePaths)"
  returns:
    description: "the MigrateSqlServerSqlMIDatabaseInput object itself."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput?alt=com.azure.resourcemanager.datamigration.models.MigrateSqlServerSqlMIDatabaseInput&text=MigrateSqlServerSqlMIDatabaseInput\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datamigration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datamigration:1.0.0-beta.1
