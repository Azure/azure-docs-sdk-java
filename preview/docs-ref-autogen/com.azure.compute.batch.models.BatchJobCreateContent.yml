### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchJobCreateContent"
fullName: "com.azure.compute.batch.models.BatchJobCreateContent"
name: "BatchJobCreateContent"
nameWithType: "BatchJobCreateContent"
summary: "Parameters for creating an Azure Batch Job."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchJobCreateContent**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.BatchJobCreateContent(java.lang.String,com.azure.compute.batch.models.BatchPoolInfo)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.BatchJobCreateContent(String id, BatchPoolInfo poolInfo)"
  name: "BatchJobCreateContent(String id, BatchPoolInfo poolInfo)"
  nameWithType: "BatchJobCreateContent.BatchJobCreateContent(String id, BatchPoolInfo poolInfo)"
  summary: "Creates an instance of Batch<wbr>Job<wbr>Create<wbr>Content class."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the poolInfo value to set."
    name: "poolInfo"
    type: "<xref href=\"com.azure.compute.batch.models.BatchPoolInfo?alt=com.azure.compute.batch.models.BatchPoolInfo&text=BatchPoolInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent(String id, BatchPoolInfo poolInfo)"
  desc: "Creates an instance of BatchJobCreateContent class."
methods:
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchJobCreateContent.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Job<wbr>Create<wbr>Content from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchJobCreateContent fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchJobCreateContent from the JsonReader."
  returns:
    description: "An instance of BatchJobCreateContent if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getCommonEnvironmentSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getCommonEnvironmentSettings()"
  name: "getCommonEnvironmentSettings()"
  nameWithType: "BatchJobCreateContent.getCommonEnvironmentSettings()"
  summary: "Get the common<wbr>Environment<wbr>Settings property: The list of common environment variable settings."
  syntax: "public List<EnvironmentSetting> getCommonEnvironmentSettings()"
  desc: "Get the commonEnvironmentSettings property: The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the commonEnvironmentSettings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getConstraints()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getConstraints()"
  name: "getConstraints()"
  nameWithType: "BatchJobCreateContent.getConstraints()"
  summary: "Get the constraints property: The execution constraints for the Job."
  syntax: "public BatchJobConstraints getConstraints()"
  desc: "Get the constraints property: The execution constraints for the Job."
  returns:
    description: "the constraints value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobConstraints?alt=com.azure.compute.batch.models.BatchJobConstraints&text=BatchJobConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getDisplayName()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getDisplayName()"
  name: "getDisplayName()"
  nameWithType: "BatchJobCreateContent.getDisplayName()"
  summary: "Get the display<wbr>Name property: The display name for the Job."
  syntax: "public String getDisplayName()"
  desc: "Get the displayName property: The display name for the Job. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getId()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getId()"
  name: "getId()"
  nameWithType: "BatchJobCreateContent.getId()"
  summary: "Get the id property: A string that uniquely identifies the Job within the Account."
  syntax: "public String getId()"
  desc: "Get the id property: A string that uniquely identifies the Job within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getJobManagerTask()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getJobManagerTask()"
  name: "getJobManagerTask()"
  nameWithType: "BatchJobCreateContent.getJobManagerTask()"
  summary: "Get the job<wbr>Manager<wbr>Task property: Details of a Job Manager Task to be launched when the Job is started."
  syntax: "public BatchJobManagerTask getJobManagerTask()"
  desc: "Get the jobManagerTask property: Details of a Job Manager Task to be launched when the Job is started. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents."
  returns:
    description: "the jobManagerTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getJobPreparationTask()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getJobPreparationTask()"
  name: "getJobPreparationTask()"
  nameWithType: "BatchJobCreateContent.getJobPreparationTask()"
  summary: "Get the job<wbr>Preparation<wbr>Task property: The Job Preparation Task."
  syntax: "public BatchJobPreparationTask getJobPreparationTask()"
  desc: "Get the jobPreparationTask property: The Job Preparation Task. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the jobPreparationTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobPreparationTask?alt=com.azure.compute.batch.models.BatchJobPreparationTask&text=BatchJobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getJobReleaseTask()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getJobReleaseTask()"
  name: "getJobReleaseTask()"
  nameWithType: "BatchJobCreateContent.getJobReleaseTask()"
  summary: "Get the job<wbr>Release<wbr>Task property: The Job Release Task."
  syntax: "public BatchJobReleaseTask getJobReleaseTask()"
  desc: "Get the jobReleaseTask property: The Job Release Task. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation."
  returns:
    description: "the jobReleaseTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getMaxParallelTasks()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getMaxParallelTasks()"
  name: "getMaxParallelTasks()"
  nameWithType: "BatchJobCreateContent.getMaxParallelTasks()"
  summary: "Get the max<wbr>Parallel<wbr>Tasks property: The maximum number of tasks that can be executed in parallel for the job."
  syntax: "public Integer getMaxParallelTasks()"
  desc: "Get the maxParallelTasks property: The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
  returns:
    description: "the maxParallelTasks value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getMetadata()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BatchJobCreateContent.getMetadata()"
  summary: "Get the metadata property: A list of name-value pairs associated with the Job as metadata."
  syntax: "public List<MetadataItem> getMetadata()"
  desc: "Get the metadata property: A list of name-value pairs associated with the Job as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.MetadataItem?alt=com.azure.compute.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getNetworkConfiguration()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getNetworkConfiguration()"
  name: "getNetworkConfiguration()"
  nameWithType: "BatchJobCreateContent.getNetworkConfiguration()"
  summary: "Get the network<wbr>Configuration property: The network configuration for the Job."
  syntax: "public BatchJobNetworkConfiguration getNetworkConfiguration()"
  desc: "Get the networkConfiguration property: The network configuration for the Job."
  returns:
    description: "the networkConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobNetworkConfiguration?alt=com.azure.compute.batch.models.BatchJobNetworkConfiguration&text=BatchJobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getOnAllTasksComplete()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getOnAllTasksComplete()"
  name: "getOnAllTasksComplete()"
  nameWithType: "BatchJobCreateContent.getOnAllTasksComplete()"
  summary: "Get the on<wbr>All<wbr>Tasks<wbr>Complete property: The action the Batch service should take when all Tasks in the Job are in the completed state."
  syntax: "public OnAllBatchTasksComplete getOnAllTasksComplete()"
  desc: "Get the onAllTasksComplete property: The action the Batch service should take when all Tasks in the Job are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
  returns:
    description: "the onAllTasksComplete value."
    type: "<xref href=\"com.azure.compute.batch.models.OnAllBatchTasksComplete?alt=com.azure.compute.batch.models.OnAllBatchTasksComplete&text=OnAllBatchTasksComplete\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getOnTaskFailure()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getOnTaskFailure()"
  name: "getOnTaskFailure()"
  nameWithType: "BatchJobCreateContent.getOnTaskFailure()"
  summary: "Get the on<wbr>Task<wbr>Failure property: The action the Batch service should take when any Task in the Job fails."
  syntax: "public OnBatchTaskFailure getOnTaskFailure()"
  desc: "Get the onTaskFailure property: The action the Batch service should take when any Task in the Job fails. A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
  returns:
    description: "the onTaskFailure value."
    type: "<xref href=\"com.azure.compute.batch.models.OnBatchTaskFailure?alt=com.azure.compute.batch.models.OnBatchTaskFailure&text=OnBatchTaskFailure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getPoolInfo()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getPoolInfo()"
  name: "getPoolInfo()"
  nameWithType: "BatchJobCreateContent.getPoolInfo()"
  summary: "Get the pool<wbr>Info property: The Pool on which the Batch service runs the Job's Tasks."
  syntax: "public BatchPoolInfo getPoolInfo()"
  desc: "Get the poolInfo property: The Pool on which the Batch service runs the Job's Tasks."
  returns:
    description: "the poolInfo value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchPoolInfo?alt=com.azure.compute.batch.models.BatchPoolInfo&text=BatchPoolInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.getPriority()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.getPriority()"
  name: "getPriority()"
  nameWithType: "BatchJobCreateContent.getPriority()"
  summary: "Get the priority property: The priority of the Job."
  syntax: "public Integer getPriority()"
  desc: "Get the priority property: The priority of the Job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
  returns:
    description: "the priority value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.isAllowTaskPreemption()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.isAllowTaskPreemption()"
  name: "isAllowTaskPreemption()"
  nameWithType: "BatchJobCreateContent.isAllowTaskPreemption()"
  summary: "Get the allow<wbr>Task<wbr>Preemption property: Whether Tasks in this job can be preempted by other high priority jobs."
  syntax: "public Boolean isAllowTaskPreemption()"
  desc: "Get the allowTaskPreemption property: Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
  returns:
    description: "the allowTaskPreemption value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.isUsesTaskDependencies()"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.isUsesTaskDependencies()"
  name: "isUsesTaskDependencies()"
  nameWithType: "BatchJobCreateContent.isUsesTaskDependencies()"
  summary: "Get the uses<wbr>Task<wbr>Dependencies property: Whether Tasks in the Job can define dependencies on each other."
  syntax: "public Boolean isUsesTaskDependencies()"
  desc: "Get the usesTaskDependencies property: Whether Tasks in the Job can define dependencies on each other. The default is false."
  returns:
    description: "the usesTaskDependencies value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setAllowTaskPreemption(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setAllowTaskPreemption(Boolean allowTaskPreemption)"
  name: "setAllowTaskPreemption(Boolean allowTaskPreemption)"
  nameWithType: "BatchJobCreateContent.setAllowTaskPreemption(Boolean allowTaskPreemption)"
  summary: "Set the allow<wbr>Task<wbr>Preemption property: Whether Tasks in this job can be preempted by other high priority jobs."
  parameters:
  - description: "the allowTaskPreemption value to set."
    name: "allowTaskPreemption"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobCreateContent setAllowTaskPreemption(Boolean allowTaskPreemption)"
  desc: "Set the allowTaskPreemption property: Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setCommonEnvironmentSettings(java.util.List<com.azure.compute.batch.models.EnvironmentSetting>)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  name: "setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  nameWithType: "BatchJobCreateContent.setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  summary: "Set the common<wbr>Environment<wbr>Settings property: The list of common environment variable settings."
  parameters:
  - description: "the commonEnvironmentSettings value to set."
    name: "commonEnvironmentSettings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobCreateContent setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  desc: "Set the commonEnvironmentSettings property: The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setConstraints(com.azure.compute.batch.models.BatchJobConstraints)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setConstraints(BatchJobConstraints constraints)"
  name: "setConstraints(BatchJobConstraints constraints)"
  nameWithType: "BatchJobCreateContent.setConstraints(BatchJobConstraints constraints)"
  summary: "Set the constraints property: The execution constraints for the Job."
  parameters:
  - description: "the constraints value to set."
    name: "constraints"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobConstraints?alt=com.azure.compute.batch.models.BatchJobConstraints&text=BatchJobConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setConstraints(BatchJobConstraints constraints)"
  desc: "Set the constraints property: The execution constraints for the Job."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setDisplayName(java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setDisplayName(String displayName)"
  name: "setDisplayName(String displayName)"
  nameWithType: "BatchJobCreateContent.setDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The display name for the Job."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobCreateContent setDisplayName(String displayName)"
  desc: "Set the displayName property: The display name for the Job. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setJobManagerTask(com.azure.compute.batch.models.BatchJobManagerTask)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  name: "setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  nameWithType: "BatchJobCreateContent.setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  summary: "Set the job<wbr>Manager<wbr>Task property: Details of a Job Manager Task to be launched when the Job is started."
  parameters:
  - description: "the jobManagerTask value to set."
    name: "jobManagerTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  desc: "Set the jobManagerTask property: Details of a Job Manager Task to be launched when the Job is started. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setJobPreparationTask(com.azure.compute.batch.models.BatchJobPreparationTask)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  name: "setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  nameWithType: "BatchJobCreateContent.setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  summary: "Set the job<wbr>Preparation<wbr>Task property: The Job Preparation Task."
  parameters:
  - description: "the jobPreparationTask value to set."
    name: "jobPreparationTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobPreparationTask?alt=com.azure.compute.batch.models.BatchJobPreparationTask&text=BatchJobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  desc: "Set the jobPreparationTask property: The Job Preparation Task. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setJobReleaseTask(com.azure.compute.batch.models.BatchJobReleaseTask)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  name: "setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  nameWithType: "BatchJobCreateContent.setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  summary: "Set the job<wbr>Release<wbr>Task property: The Job Release Task."
  parameters:
  - description: "the jobReleaseTask value to set."
    name: "jobReleaseTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  desc: "Set the jobReleaseTask property: The Job Release Task. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setMaxParallelTasks(java.lang.Integer)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setMaxParallelTasks(Integer maxParallelTasks)"
  name: "setMaxParallelTasks(Integer maxParallelTasks)"
  nameWithType: "BatchJobCreateContent.setMaxParallelTasks(Integer maxParallelTasks)"
  summary: "Set the max<wbr>Parallel<wbr>Tasks property: The maximum number of tasks that can be executed in parallel for the job."
  parameters:
  - description: "the maxParallelTasks value to set."
    name: "maxParallelTasks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BatchJobCreateContent setMaxParallelTasks(Integer maxParallelTasks)"
  desc: "Set the maxParallelTasks property: The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setMetadata(java.util.List<com.azure.compute.batch.models.MetadataItem>)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setMetadata(List<MetadataItem> metadata)"
  name: "setMetadata(List<MetadataItem> metadata)"
  nameWithType: "BatchJobCreateContent.setMetadata(List<MetadataItem> metadata)"
  summary: "Set the metadata property: A list of name-value pairs associated with the Job as metadata."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.MetadataItem?alt=com.azure.compute.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobCreateContent setMetadata(List<MetadataItem> metadata)"
  desc: "Set the metadata property: A list of name-value pairs associated with the Job as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setNetworkConfiguration(com.azure.compute.batch.models.BatchJobNetworkConfiguration)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  name: "setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  nameWithType: "BatchJobCreateContent.setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration property: The network configuration for the Job."
  parameters:
  - description: "the networkConfiguration value to set."
    name: "networkConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobNetworkConfiguration?alt=com.azure.compute.batch.models.BatchJobNetworkConfiguration&text=BatchJobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration property: The network configuration for the Job."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setOnAllTasksComplete(com.azure.compute.batch.models.OnAllBatchTasksComplete)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  name: "setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  nameWithType: "BatchJobCreateContent.setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  summary: "Set the on<wbr>All<wbr>Tasks<wbr>Complete property: The action the Batch service should take when all Tasks in the Job are in the completed state."
  parameters:
  - description: "the onAllTasksComplete value to set."
    name: "onAllTasksComplete"
    type: "<xref href=\"com.azure.compute.batch.models.OnAllBatchTasksComplete?alt=com.azure.compute.batch.models.OnAllBatchTasksComplete&text=OnAllBatchTasksComplete\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  desc: "Set the onAllTasksComplete property: The action the Batch service should take when all Tasks in the Job are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setOnTaskFailure(com.azure.compute.batch.models.OnBatchTaskFailure)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  name: "setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  nameWithType: "BatchJobCreateContent.setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  summary: "Set the on<wbr>Task<wbr>Failure property: The action the Batch service should take when any Task in the Job fails."
  parameters:
  - description: "the onTaskFailure value to set."
    name: "onTaskFailure"
    type: "<xref href=\"com.azure.compute.batch.models.OnBatchTaskFailure?alt=com.azure.compute.batch.models.OnBatchTaskFailure&text=OnBatchTaskFailure\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobCreateContent setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  desc: "Set the onTaskFailure property: The action the Batch service should take when any Task in the Job fails. A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setPriority(java.lang.Integer)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setPriority(Integer priority)"
  name: "setPriority(Integer priority)"
  nameWithType: "BatchJobCreateContent.setPriority(Integer priority)"
  summary: "Set the priority property: The priority of the Job."
  parameters:
  - description: "the priority value to set."
    name: "priority"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BatchJobCreateContent setPriority(Integer priority)"
  desc: "Set the priority property: The priority of the Job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.setUsesTaskDependencies(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.setUsesTaskDependencies(Boolean usesTaskDependencies)"
  name: "setUsesTaskDependencies(Boolean usesTaskDependencies)"
  nameWithType: "BatchJobCreateContent.setUsesTaskDependencies(Boolean usesTaskDependencies)"
  summary: "Set the uses<wbr>Task<wbr>Dependencies property: Whether Tasks in the Job can define dependencies on each other."
  parameters:
  - description: "the usesTaskDependencies value to set."
    name: "usesTaskDependencies"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobCreateContent setUsesTaskDependencies(Boolean usesTaskDependencies)"
  desc: "Set the usesTaskDependencies property: Whether Tasks in the Job can define dependencies on each other. The default is false."
  returns:
    description: "the BatchJobCreateContent object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobCreateContent.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchJobCreateContent.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchJobCreateContent.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Parameters for creating an Azure Batch Job."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobCreateContent?alt=com.azure.compute.batch.models.BatchJobCreateContent&text=BatchJobCreateContent\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.1
