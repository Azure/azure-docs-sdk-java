### YamlMime:JavaType
uid: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient"
fullName: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient"
name: "RadiologyInsightsAsyncClient"
nameWithType: "RadiologyInsightsAsyncClient"
summary: "Initializes a new instance of the asynchronous Radiology<wbr>Insights<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RadiologyInsightsAsyncClient**"
methods:
- uid: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient.beginInferRadiologyInsights(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient.beginInferRadiologyInsights(BinaryData radiologyInsightsData, RequestOptions requestOptions)"
  name: "beginInferRadiologyInsights(BinaryData radiologyInsightsData, RequestOptions requestOptions)"
  nameWithType: "RadiologyInsightsAsyncClient.beginInferRadiologyInsights(BinaryData radiologyInsightsData, RequestOptions requestOptions)"
  summary: "Create Radiology Insights job Creates a Radiology Insights job with the given request body."
  parameters:
  - description: "Contains the list of patients, and configuration data."
    name: "radiologyInsightsData"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginInferRadiologyInsights(BinaryData radiologyInsightsData, RequestOptions requestOptions)"
  desc: "Create Radiology Insights job Creates a Radiology Insights job with the given request body.\n\n**Header Parameters**\n\n    | ------------------------ | ------ | -------- | -------------------------------------------- |\n    | Name                     | Type   | Required | Description                                  |\n    | repeatability-request-id | String | No       | Repeatability request ID header              |\n    | repeatability-first-sent | String | No       | Repeatability first sent header as HTTP-date |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     patients (Required): [\n          (Required){\n             id: String (Required)\n             info (Optional): {\n                 sex: String(female/male/unspecified) (Optional)\n                 birthDate: LocalDate (Optional)\n                 clinicalInfo (Optional): [\n                      (Optional){\n                         resourceType: String (Required)\n                         id: String (Optional)\n                         meta (Optional): {\n                             versionId: String (Optional)\n                             lastUpdated: String (Optional)\n                             source: String (Optional)\n                             profile (Optional): [\n                                 String (Optional)\n                             ]\n                             security (Optional): [\n                                  (Optional){\n                                     id: String (Optional)\n                                     extension (Optional): [\n                                          (Optional){\n                                             id: String (Optional)\n                                             extension (Optional): [\n                                                 (recursive schema, see above)\n                                             ]\n                                             url: String (Required)\n                                             valueQuantity (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 value: Double (Optional)\n                                                 comparator: String (Optional)\n                                                 unit: String (Optional)\n                                                 system: String (Optional)\n                                                 code: String (Optional)\n                                             }\n                                             valueCodeableConcept (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 coding (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 text: String (Optional)\n                                             }\n                                             valueString: String (Optional)\n                                             valueBoolean: Boolean (Optional)\n                                             valueInteger: Integer (Optional)\n                                             valueRange (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 low (Optional): (recursive schema, see low above)\n                                                 high (Optional): (recursive schema, see high above)\n                                             }\n                                             valueRatio (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 numerator (Optional): (recursive schema, see numerator above)\n                                                 denominator (Optional): (recursive schema, see denominator above)\n                                             }\n                                             valueSampledData (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 origin (Required): (recursive schema, see origin above)\n                                                 period: double (Required)\n                                                 factor: Double (Optional)\n                                                 lowerLimit: Double (Optional)\n                                                 upperLimit: Double (Optional)\n                                                 dimensions: int (Required)\n                                                 data: String (Optional)\n                                             }\n                                             valueTime: String (Optional)\n                                             valueDateTime: String (Optional)\n                                             valuePeriod (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 start: String (Optional)\n                                                 end: String (Optional)\n                                             }\n                                             valueReference (Optional): {\n                                                 id: String (Optional)\n                                                 extension (Optional): [\n                                                     (recursive schema, see above)\n                                                 ]\n                                                 reference: String (Optional)\n                                                 type: String (Optional)\n                                                 identifier (Optional): {\n                                                     id: String (Optional)\n                                                     extension (Optional): [\n                                                         (recursive schema, see above)\n                                                     ]\n                                                     use: String (Optional)\n                                                     type (Optional): (recursive schema, see type above)\n                                                     system: String (Optional)\n                                                     value: String (Optional)\n                                                     period (Optional): (recursive schema, see period above)\n                                                     assigner (Optional): (recursive schema, see assigner above)\n                                                 }\n                                                 display: String (Optional)\n                                             }\n                                         }\n                                     ]\n                                     system: String (Optional)\n                                     version: String (Optional)\n                                     code: String (Optional)\n                                     display: String (Optional)\n                                 }\n                             ]\n                             tag (Optional): [\n                                 (recursive schema, see above)\n                             ]\n                         }\n                         implicitRules: String (Optional)\n                         language: String (Optional)\n                          (Optional): {\n                             String: Object (Required)\n                         }\n                     }\n                 ]\n             }\n             encounters (Optional): [\n                  (Optional){\n                     id: String (Required)\n                     period (Optional): {\n                         start: OffsetDateTime (Optional)\n                         end: OffsetDateTime (Optional)\n                     }\n                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)\n                 }\n             ]\n             patientDocuments (Optional): [\n                  (Optional){\n                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)\n                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)\n                     id: String (Required)\n                     language: String (Optional)\n                     createdDateTime: OffsetDateTime (Optional)\n                     authors (Optional): [\n                          (Optional){\n                             id: String (Optional)\n                             fullName: String (Optional)\n                         }\n                     ]\n                     specialtyType: String(pathology/radiology) (Optional)\n                     administrativeMetadata (Optional): {\n                         orderedProcedures (Optional): [\n                              (Optional){\n                                 extension (Optional): [\n                                     (recursive schema, see above)\n                                 ]\n                                 code (Optional): (recursive schema, see code above)\n                                 description: String (Optional)\n                             }\n                         ]\n                         encounterId: String (Optional)\n                     }\n                     content (Required): {\n                         sourceType: String(inline/reference) (Required)\n                         value: String (Required)\n                     }\n                 }\n             ]\n         }\n     ]\n     configuration (Optional): {\n         verbose: Boolean (Optional)\n         includeEvidence: Boolean (Optional)\n         inferenceTypes (Optional): [\n             String(ageMismatch/lateralityDiscrepancy/sexMismatch/completeOrderDiscrepancy/limitedOrderDiscrepancy/finding/criticalResult/followupRecommendation/followupCommunication/radiologyProcedure) (Optional)\n         ]\n         inferenceOptions (Optional): {\n             followupRecommendationOptions (Optional): {\n                 includeRecommendationsWithNoSpecifiedModality: Boolean (Optional)\n                 includeRecommendationsInReferences: Boolean (Optional)\n                 provideFocusedSentenceEvidence: Boolean (Optional)\n             }\n             findingOptions (Optional): {\n                 provideFocusedSentenceEvidence: Boolean (Optional)\n             }\n         }\n         locale: String (Optional)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     status: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of status details for long running operations."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient.beginInferRadiologyInsights(com.azure.health.insights.radiologyinsights.models.RadiologyInsightsData)"
  fullName: "com.azure.health.insights.radiologyinsights.RadiologyInsightsAsyncClient.beginInferRadiologyInsights(RadiologyInsightsData radiologyInsightsData)"
  name: "beginInferRadiologyInsights(RadiologyInsightsData radiologyInsightsData)"
  nameWithType: "RadiologyInsightsAsyncClient.beginInferRadiologyInsights(RadiologyInsightsData radiologyInsightsData)"
  summary: "Create Radiology Insights job Creates a Radiology Insights job with the given request body."
  parameters:
  - description: "Contains the list of patients, and configuration data."
    name: "radiologyInsightsData"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsData?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsData&text=RadiologyInsightsData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<PollOperationDetails,RadiologyInsightsInferenceResult> beginInferRadiologyInsights(RadiologyInsightsData radiologyInsightsData)"
  desc: "Create Radiology Insights job Creates a Radiology Insights job with the given request body."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of status details for long running operations."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.polling.PollOperationDetails?alt=com.azure.core.util.polling.PollOperationDetails&text=PollOperationDetails\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInferenceResult?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInferenceResult&text=RadiologyInsightsInferenceResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous RadiologyInsightsClient type."
metadata: {}
package: "com.azure.health.insights.radiologyinsights"
artifact: com.azure:azure-health-insights-radiologyinsights:1.0.0-beta.1
