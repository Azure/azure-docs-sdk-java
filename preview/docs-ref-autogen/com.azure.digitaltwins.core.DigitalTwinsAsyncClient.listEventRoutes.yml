### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes*"
fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes"
name: "listEventRoutes"
nameWithType: "DigitalTwinsAsyncClient.listEventRoutes"
members:
- uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes()"
  fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes()"
  name: "listEventRoutes()"
  nameWithType: "DigitalTwinsAsyncClient.listEventRoutes()"
  summary: "List all the event routes that exist in your digital twins instance.\n\n**Code Samples**\n\n```java\ndigitalTwinsAsyncClient.listEventRoutes()\n     .doOnNext(eventRoute -> System.out.println(\"Retrieved event route with Id: \" + eventRoute.getId()))\n     .subscribe();\n```"
  syntax: "public PagedFlux<EventRoute> listEventRoutes()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\">PagedFlux</xref> that contains all the event routes that exist in your digital twins instance.\n This PagedFlux may take multiple service requests to iterate over all event routes."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.digitaltwins.core.models.EventRoute?alt=com.azure.digitaltwins.core.models.EventRoute&text=EventRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes(com.azure.digitaltwins.core.models.EventRoutesListOptions)"
  fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listEventRoutes(EventRoutesListOptions options)"
  name: "listEventRoutes(EventRoutesListOptions options)"
  nameWithType: "DigitalTwinsAsyncClient.listEventRoutes(EventRoutesListOptions options)"
  summary: "List all the event routes that exist in your digital twins instance.\n\n**Code Samples**\n\n```java\ndigitalTwinsAsyncClient.listEventRoutes(new EventRoutesListOptions().setMaxItemCount(5))\n     .doOnNext(eventRoute -> System.out.println(\"Retrieved event route with Id: \" + eventRoute.getId()))\n     .subscribe();\n```"
  parameters:
  - description: "The optional parameters to use when listing event routes. See <xref uid=\"com.azure.digitaltwins.core.models.EventRoutesListOptions\" data-throw-if-not-resolved=\"false\">EventRoutesListOptions</xref> for more details\n on what optional parameters can be set."
    name: "options"
    type: "<xref href=\"com.azure.digitaltwins.core.models.EventRoutesListOptions?alt=com.azure.digitaltwins.core.models.EventRoutesListOptions&text=EventRoutesListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<EventRoute> listEventRoutes(EventRoutesListOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\">PagedFlux</xref> that contains all the event routes that exist in your digital twins instance.\n This PagedFlux may take multiple service requests to iterate over all event routes."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.digitaltwins.core.models.EventRoute?alt=com.azure.digitaltwins.core.models.EventRoute&text=EventRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core"
artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
