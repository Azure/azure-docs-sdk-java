### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonFormat"
fullName: "com.fasterxml.jackson.annotation.JsonFormat"
name: "JsonFormat"
nameWithType: "JsonFormat"
summary: "General-purpose annotation used for configuring details of how values of properties are to be serialized. Unlike most other Jackson annotations, annotation does not have specific universal interpretation: instead, effect depends on datatype of property being annotated (or more specifically, deserializer and serializer being used).\n\nCommon uses include choosing between alternate representations -- for example, whether <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Date\"></xref> is to be serialized as number (Java timestamp) or String (such as ISO-8601 compatible time value) -- as well as configuring exact details with <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.pattern*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#pattern\"></xref> property.\n\nAs of Jackson 2.6, known special handling includes:\n\n *  <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Date\"></xref>: Shape can be <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#STRING\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#NUMBER\"></xref>; pattern may contain <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.text.SimpleDateFormat\"></xref>\\-compatible pattern definition.\n *  Can be used on Classes (types) as well, for modified default behavior, possibly overridden by per-property annotation\n *  <xref uid=\"java.lang.Enum\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Enum\"></xref>s: Shapes <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#STRING\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#NUMBER\"></xref> can be used to change between numeric (index) and textual (name or `toString()`); but it is also possible to use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#OBJECT\"></xref> to serialize (but not deserialize) <xref uid=\"java.lang.Enum\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Enum\"></xref>s as JSON Objects (as if they were POJOs). NOTE: serialization as JSON Object only works with class annotation; will not work as per-property annotation.\n *  <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref>s can be serialized as (and deserialized from) JSON Objects, if <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#OBJECT\"></xref> is used. NOTE: can ONLY be used as class annotation; will not work as per-property annotation.\n *  <xref uid=\"java.lang.Number\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Number\"></xref> subclasses can be serialized as full objects if <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#OBJECT\"></xref> is used. Otherwise the default behavior of serializing to a scalar number value will be preferred. NOTE: can ONLY be used as class annotation; will not work as per-property annotation."
syntax: "public interface JsonFormat implements Annotation"
fields:
- "com.fasterxml.jackson.annotation.JsonFormat.DEFAULT_LOCALE"
- "com.fasterxml.jackson.annotation.JsonFormat.DEFAULT_TIMEZONE"
methods:
- "com.fasterxml.jackson.annotation.JsonFormat.lenient()"
- "com.fasterxml.jackson.annotation.JsonFormat.locale()"
- "com.fasterxml.jackson.annotation.JsonFormat.pattern()"
- "com.fasterxml.jackson.annotation.JsonFormat.shape()"
- "com.fasterxml.jackson.annotation.JsonFormat.timezone()"
- "com.fasterxml.jackson.annotation.JsonFormat.with()"
- "com.fasterxml.jackson.annotation.JsonFormat.without()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
