### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  id: MapDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std
  children:
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._delegateDeserializer
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._hasDefaultCreator
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._ignorableProperties
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._keyDeserializer
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._propertyBasedCreator
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._standardStringKey
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueDeserializer
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueInstantiator
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueTypeDeserializer
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer()
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass()
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator()
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType()
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(java.lang.String[])
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  langs:
  - java
  name: MapDeserializer
  nameWithType: MapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  type: Class
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Basic serializer that can take JSON "Object" structure and construct a <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> instance, with typed contents.


    Note: for untyped content (one indicated by passing Object.class as the type), <xref uid="com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer" data-throw-if-not-resolved="false">UntypedObjectDeserializer</xref> is used instead. It can also construct <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s, but not with specific POJO types, only other containers and primitives/wrappers.
  syntax:
    content: public class MapDeserializer extends ContainerDeserializerBase<Map<Object,Object>> implements ContextualDeserializer, ResolvableDeserializer
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonDeserializer
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase
  implements:
  - com.fasterxml.jackson.databind.deser.ContextualDeserializer
  - com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  - com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  - com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.<BOGUS>wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.findBackReference(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentDeserializer()
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentType()
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyAccessPattern()
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueInstantiator()
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueType()
  - com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  id: MapDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser)
  nameWithType: MapDeserializer.MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser)
    parameters:
    - id: mapType
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueInstantiator
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
    - id: keyDeser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    - id: valueDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    - id: valueTypeDeser
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer)
  id: MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: MapDeserializer(MapDeserializer src)
  nameWithType: MapDeserializer.MapDeserializer(MapDeserializer src)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(MapDeserializer src)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  summary: Copy-constructor that can be used by sub-classes to allow copy-on-write styling copying of settings of an existing instance.
  syntax:
    content: protected MapDeserializer(MapDeserializer src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.std.MapDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  id: MapDeserializer(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: MapDeserializer(MapDeserializer src, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser, NullValueProvider nuller, Set<String> ignorable)
  nameWithType: MapDeserializer.MapDeserializer(MapDeserializer src, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser, NullValueProvider nuller, Set<String> ignorable)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer(MapDeserializer src, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser, NullValueProvider nuller, Set<String> ignorable)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected MapDeserializer(MapDeserializer src, KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser, TypeDeserializer valueTypeDeser, NullValueProvider nuller, Set<String> ignorable)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.std.MapDeserializer
    - id: keyDeser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    - id: valueDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    - id: valueTypeDeser
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: nuller
      type: com.fasterxml.jackson.databind.deser.NullValueProvider
    - id: ignorable
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._delegateDeserializer
  id: _delegateDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _delegateDeserializer
  nameWithType: MapDeserializer._delegateDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._delegateDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: Deserializer that is used iff delegate-based creator is to be used for deserializing from JSON Object.
  syntax:
    content: protected JsonDeserializer<Object> _delegateDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _deserializeUsingCreator(JsonParser p, DeserializationContext ctxt)
  nameWithType: MapDeserializer._deserializeUsingCreator(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public Map<Object,Object> _deserializeUsingCreator(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._hasDefaultCreator
  id: _hasDefaultCreator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _hasDefaultCreator
  nameWithType: MapDeserializer._hasDefaultCreator
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._hasDefaultCreator
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _hasDefaultCreator
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._ignorableProperties
  id: _ignorableProperties
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _ignorableProperties
  nameWithType: MapDeserializer._ignorableProperties
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._ignorableProperties
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Set<String> _ignorableProperties
    return:
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  id: _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)
  nameWithType: MapDeserializer._isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method used to check whether we can just use the default key deserialization, where JSON String becomes Java String.
  syntax:
    content: protected final boolean _isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)
    parameters:
    - id: mapType
      type: com.fasterxml.jackson.databind.JavaType
    - id: keyDeser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._keyDeserializer
  id: _keyDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _keyDeserializer
  nameWithType: MapDeserializer._keyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._keyDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: Key deserializer to use; either passed via constructor (when indicated by annotations), or resolved when <xref uid="com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve*" data-throw-if-not-resolved="false">#resolve</xref> is called;
  syntax:
    content: protected final KeyDeserializer _keyDeserializer
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._propertyBasedCreator
  id: _propertyBasedCreator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _propertyBasedCreator
  nameWithType: MapDeserializer._propertyBasedCreator
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._propertyBasedCreator
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: If the Map is to be instantiated using non-default constructor or factory method that takes one or more named properties as argument(s), this creator is used for instantiation.
  syntax:
    content: protected PropertyBasedCreator _propertyBasedCreator
    return:
      type: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _readAndBind(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  nameWithType: MapDeserializer._readAndBind(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final void _readAndBind(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _readAndBindStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  nameWithType: MapDeserializer._readAndBindStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Optimized method used when keys can be deserialized as plain old <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>s, and there is no custom deserialized specified.
  syntax:
    content: protected final void _readAndBindStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _readAndUpdate(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  nameWithType: MapDeserializer._readAndUpdate(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final void _readAndUpdate(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _readAndUpdateStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  nameWithType: MapDeserializer._readAndUpdateStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Optimized method used when keys can be deserialized as plain old <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>s, and there is no custom deserializer specified.
  syntax:
    content: protected final void _readAndUpdateStringKeyMap(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._standardStringKey
  id: _standardStringKey
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _standardStringKey
  nameWithType: MapDeserializer._standardStringKey
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._standardStringKey
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: Flag set to indicate that the key type is <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref> (or <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref>, for which String is acceptable), **and** that the default Jackson key deserializer would be used. If both are true, can optimize handling.
  syntax:
    content: protected boolean _standardStringKey
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueDeserializer
  id: _valueDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _valueDeserializer
  nameWithType: MapDeserializer._valueDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: Value deserializer.
  syntax:
    content: protected final JsonDeserializer<Object> _valueDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueInstantiator
  id: _valueInstantiator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _valueInstantiator
  nameWithType: MapDeserializer._valueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueInstantiator
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final ValueInstantiator _valueInstantiator
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueTypeDeserializer
  id: _valueTypeDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: _valueTypeDeserializer
  nameWithType: MapDeserializer._valueTypeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueTypeDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: If value instances have polymorphic type information, this is the type deserializer that can handle it
  syntax:
    content: protected final TypeDeserializer _valueTypeDeserializer
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: createContextual(DeserializationContext ctxt, BeanProperty property)
  nameWithType: MapDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to finalize setup of this deserializer, when it is known for which property deserializer is needed for.
  syntax:
    content: public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: deserialize(JsonParser p, DeserializationContext ctxt)
  nameWithType: MapDeserializer.deserialize(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Method that can be called to ask implementation to deserialize JSON content into the value type this serializer handles. Returned instance is to be constructed by method itself.


    Pre-condition for this method is that the parser points to the first event that is part of value to deserializer (and which is never JSON 'null' literal, more on this below): for simple types it may be the only value; and for structured types the Object start marker or a FIELD\_NAME.


    The two possible input conditions for structured types result from polymorphism via fields. In the ordinary case, Jackson calls this method when it has encountered an OBJECT\_START, and the method implementation must advance to the next token to see the first field name. If the application configures polymorphism via a field, then the object looks like the following.


    ```java

    {
              "@class": "class name",
              ...
          }
    ```


    Jackson consumes the two tokens (the @class field name and its value) in order to learn the class and select the deserializer. Thus, the stream is pointing to the FIELD\_NAME for the first field after the @class. Thus, if you want your method to work correctly both with and without polymorphism, you must begin your method with:


    ```java

    if (p.currentToken() == JsonToken.START_OBJECT) {
             p.nextToken();
           }
    ```


    This results in the stream pointing to the field name, so that the two conditions align.


    Post-condition is that the parser will point to the last event that is part of deserialized value (or in case deserialization fails, event that was not recognized or usable, which may be the same event as the one it pointed to upon call).


    Note that this method is never called for JSON null literal, and thus deserializers need (and should) not check for it.
  syntax:
    content: public Map<Object,Object> deserialize(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: deserialize(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  nameWithType: MapDeserializer.deserialize(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Alternate deserialization method (compared to the most commonly used, <xref uid="com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)" data-throw-if-not-resolved="false">#deserialize(JsonParser, DeserializationContext)</xref>), which takes in initialized value instance, to be configured and/or populated by deserializer. Method is not necessarily used (or supported) by all types (it will not work for immutable types, for obvious reasons): most commonly it is used for Collections and Maps. It may be used both with "updating readers" (for POJOs) and when Collections and Maps use "getter as setter".


    Default implementation just throws <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref>, to indicate that types that do not explicitly add support do not necessarily support update-existing-value operation (esp. immutable types)
  syntax:
    content: public Map<Object,Object> deserialize(JsonParser p, DeserializationContext ctxt, Map<Object,Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Map<java.lang.Object,java.lang.Object>
    return:
      type: java.util.Map<java.lang.Object,java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  id: deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  nameWithType: MapDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Base implementation that does not assume specific type inclusion mechanism. Sub-classes are expected to override this method if they are to handle type information.
  syntax:
    content: public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer()
  id: getContentDeserializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: getContentDeserializer()
  nameWithType: MapDeserializer.getContentDeserializer()
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer()
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Accesor for deserializer use for deserializing content values.
  syntax:
    content: public JsonDeserializer<Object> getContentDeserializer()
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass()
  id: getMapClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: getMapClass()
  nameWithType: MapDeserializer.getMapClass()
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass()
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public final Class<?> getMapClass()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator()
  id: getValueInstantiator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: getValueInstantiator()
  nameWithType: MapDeserializer.getValueInstantiator()
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator()
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public ValueInstantiator getValueInstantiator()
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType()
  id: getValueType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: getValueType()
  nameWithType: MapDeserializer.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType()
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Exact structured type this deserializer handles, if known.
  syntax:
    content: public JavaType getValueType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()
  id: isCachable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: isCachable()
  nameWithType: MapDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Turns out that these are expensive enough to create so that caching does make sense.


    IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is a value type deserializer; this caused an issue with 2.4.4 of JAXB Annotations (failing a test). It is also possible that some other settings could make deserializers un-cacheable; but on the other hand, caching can make a big positive difference with performance... so it's a hard choice.
  syntax:
    content: public boolean isCachable()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  id: resolve(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: resolve(DeserializationContext ctxt)
  nameWithType: MapDeserializer.resolve(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called after deserializer instance has been constructed (and registered as necessary by provider objects), but before it has returned it to the caller. Called object can then resolve its dependencies to other types, including self-references (direct or indirect).
  syntax:
    content: public void resolve(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(java.lang.String[])
  id: setIgnorableProperties(java.lang.String[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: setIgnorableProperties(String[] ignorable)
  nameWithType: MapDeserializer.setIgnorableProperties(String[] ignorable)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(String[] ignorable)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public void setIgnorableProperties(String[] ignorable)
    parameters:
    - id: ignorable
      type: java.lang.String[]
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(java.util.Set<java.lang.String>)
  id: setIgnorableProperties(java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: setIgnorableProperties(Set<String> ignorable)
  nameWithType: MapDeserializer.setIgnorableProperties(Set<String> ignorable)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(Set<String> ignorable)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public void setIgnorableProperties(Set<String> ignorable)
    parameters:
    - id: ignorable
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  id: withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.MapDeserializer
  langs:
  - java
  name: withResolved(KeyDeserializer keyDeser, TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser, NullValueProvider nuller, Set<String> ignorable)
  nameWithType: MapDeserializer.withResolved(KeyDeserializer keyDeser, TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser, NullValueProvider nuller, Set<String> ignorable)
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved(KeyDeserializer keyDeser, TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser, NullValueProvider nuller, Set<String> ignorable)
  overload: com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Fluent factory method used to create a copy with slightly different settings. When sub-classing, MUST be overridden.
  syntax:
    content: protected MapDeserializer withResolved(KeyDeserializer keyDeser, TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser, NullValueProvider nuller, Set<String> ignorable)
    parameters:
    - id: keyDeser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    - id: valueTypeDeser
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: valueDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: nuller
      type: com.fasterxml.jackson.databind.deser.NullValueProvider
    - id: ignorable
      type: java.util.Set<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.deser.std.MapDeserializer
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator
  name: ValueInstantiator
  nameWithType: ValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer*
  name: MapDeserializer
  nameWithType: MapDeserializer.MapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.NullValueProvider
  name: NullValueProvider
  nameWithType: NullValueProvider
  fullName: com.fasterxml.jackson.databind.deser.NullValueProvider
- uid: java.util.Set<java.lang.String>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved*
  name: withResolved
  nameWithType: MapDeserializer.withResolved
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved
  package: com.fasterxml.jackson.databind.deser.std
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser*
  name: _isStdKeyDeser
  nameWithType: MapDeserializer._isStdKeyDeser
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties*
  name: setIgnorableProperties
  nameWithType: MapDeserializer.setIgnorableProperties
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve*
  name: resolve
  nameWithType: MapDeserializer.resolve
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual*
  name: createContextual
  nameWithType: MapDeserializer.createContextual
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer*
  name: getContentDeserializer
  nameWithType: MapDeserializer.getContentDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getContentDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator*
  name: getValueInstantiator
  nameWithType: MapDeserializer.getValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueInstantiator
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable*
  name: isCachable
  nameWithType: MapDeserializer.isCachable
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: java.util.Map<java.lang.Object,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize*
  name: deserialize
  nameWithType: MapDeserializer.deserialize
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType*
  name: deserializeWithType
  nameWithType: MapDeserializer.deserializeWithType
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass*
  name: getMapClass
  nameWithType: MapDeserializer.getMapClass
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getMapClass
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType*
  name: getValueType
  nameWithType: MapDeserializer.getValueType
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer.getValueType
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind*
  name: _readAndBind
  nameWithType: MapDeserializer._readAndBind
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap*
  name: _readAndBindStringKeyMap
  nameWithType: MapDeserializer._readAndBindStringKeyMap
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator*
  name: _deserializeUsingCreator
  nameWithType: MapDeserializer._deserializeUsingCreator
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._deserializeUsingCreator
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate*
  name: _readAndUpdate
  nameWithType: MapDeserializer._readAndUpdate
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdate
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap*
  name: _readAndUpdateStringKeyMap
  nameWithType: MapDeserializer._readAndUpdateStringKeyMap
  fullName: com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndUpdateStringKeyMap
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
  name: PropertyBasedCreator
  nameWithType: PropertyBasedCreator
  fullName: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Map<java.lang.Object,java.lang.Object>>
  name: ContainerDeserializerBase<Map<Object,Object>>
  nameWithType: ContainerDeserializerBase<Map<Object,Object>>
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Map<java.lang.Object,java.lang.Object>>
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  name: ContextualDeserializer
  nameWithType: ContextualDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  name: ResolvableDeserializer
  nameWithType: ResolvableDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  nameWithType: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueType()
  name: ContainerDeserializerBase.getValueType()
  nameWithType: ContainerDeserializerBase.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyAccessPattern()
  name: ContainerDeserializerBase.getEmptyAccessPattern()
  nameWithType: ContainerDeserializerBase.getEmptyAccessPattern()
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  name: StdDeserializer._isPosInf(String)
  nameWithType: StdDeserializer._isPosInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  name: JsonDeserializer.getDelegatee()
  nameWithType: JsonDeserializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getNullValue(DeserializationContext)
  nameWithType: JsonDeserializer.getNullValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  name: StdDeserializer._isNaN(String)
  nameWithType: StdDeserializer._isNaN(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  name: StdDeserializer._isIntNumber(String)
  nameWithType: StdDeserializer._isIntNumber(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: ContainerDeserializerBase.getEmptyValue(DeserializationContext)
  nameWithType: ContainerDeserializerBase.getEmptyValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  name: StdDeserializer._isNegInf(String)
  nameWithType: StdDeserializer._isNegInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  name: StdDeserializer._byteOverflow(int)
  nameWithType: StdDeserializer._byteOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  name: ContainerDeserializerBase.supportsUpdate(DeserializationConfig)
  nameWithType: ContainerDeserializerBase.supportsUpdate(DeserializationConfig)
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  name: StdDeserializer._coercedTypeDesc()
  nameWithType: StdDeserializer._coercedTypeDesc()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  name: StdDeserializer._nonNullNumber(Number)
  nameWithType: StdDeserializer._nonNullNumber(Number)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  name: StdDeserializer.parseDouble(String)
  nameWithType: StdDeserializer.parseDouble(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  name: JsonDeserializer.isCachable()
  nameWithType: JsonDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentDeserializer()
  name: ContainerDeserializerBase.getContentDeserializer()
  nameWithType: ContainerDeserializerBase.getContentDeserializer()
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentDeserializer()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  nameWithType: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  name: StdDeserializer._hasTextualNull(String)
  nameWithType: StdDeserializer._hasTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  name: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  nameWithType: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(String,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(String,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  name: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  nameWithType: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  name: StdDeserializer.handledType()
  nameWithType: StdDeserializer.handledType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.<BOGUS>wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
  name: ContainerDeserializerBase.<BOGUS>wrapAndThrow(Throwable,Object,String)
  nameWithType: ContainerDeserializerBase.<BOGUS>wrapAndThrow(Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.<BOGUS>wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  name: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  nameWithType: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  name: StdDeserializer._isEmptyOrTextualNull(String)
  nameWithType: StdDeserializer._isEmptyOrTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentType()
  name: ContainerDeserializerBase.getContentType()
  nameWithType: ContainerDeserializerBase.getContentType()
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  nameWithType: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  name: JsonDeserializer.getNullValue()
  nameWithType: JsonDeserializer.getNullValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  name: StdDeserializer._shortOverflow(int)
  nameWithType: StdDeserializer._shortOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  name: JsonDeserializer.getObjectIdReader()
  nameWithType: JsonDeserializer.getObjectIdReader()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  nameWithType: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  name: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  nameWithType: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseString(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseString(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdDeserializer._neitherNull(Object,Object)
  nameWithType: StdDeserializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  name: JsonDeserializer.getEmptyValue()
  nameWithType: JsonDeserializer.getEmptyValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.findBackReference(java.lang.String)
  name: ContainerDeserializerBase.findBackReference(String)
  nameWithType: ContainerDeserializerBase.findBackReference(String)
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.findBackReference(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueInstantiator()
  name: ContainerDeserializerBase.getValueInstantiator()
  nameWithType: ContainerDeserializerBase.getValueInstantiator()
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getValueInstantiator()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  name: JsonDeserializer.getKnownPropertyNames()
  nameWithType: JsonDeserializer.getKnownPropertyNames()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  name: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  nameWithType: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  nameWithType: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  name: StdDeserializer._intOverflow(long)
  nameWithType: StdDeserializer._intOverflow(long)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  name: JsonDeserializer.getNullAccessPattern()
  nameWithType: JsonDeserializer.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.getValueType(DeserializationContext)
  nameWithType: StdDeserializer.getValueType(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  name: StdDeserializer.getValueClass()
  nameWithType: StdDeserializer.getValueClass()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  name: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  nameWithType: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.lang.String
  name: String
  nameWithType: String
  fullName: java.lang.String
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Object,java.lang.Object
  name: Object,Object
  nameWithType: Object,Object
  fullName: java.lang.Object,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase
  name: ContainerDeserializerBase
  nameWithType: ContainerDeserializerBase
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: BOGUS>wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
  name: BOGUS>wrapAndThrow(Throwable,Object,String)
  nameWithType: BOGUS>wrapAndThrow(Throwable,Object,String)
  fullName: BOGUS>wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.
  name: ContainerDeserializerBase.
  nameWithType: ContainerDeserializerBase.
  fullName: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
- uid: ?>,java.lang.String)
  name: ?>,String)
  nameWithType: ?>,String)
  fullName: ?>,java.lang.String)
