### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileClient.readWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeFileClient.readWithResponse"
name: "readWithResponse"
nameWithType: "DataLakeFileClient.readWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileClient.readWithResponse(java.io.OutputStream,com.azure.storage.file.datalake.models.FileRange,com.azure.storage.file.datalake.models.DownloadRetryOptions,com.azure.storage.file.datalake.models.DataLakeRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileClient.readWithResponse(OutputStream stream, FileRange range, DownloadRetryOptions options, DataLakeRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  name: "readWithResponse(OutputStream stream, FileRange range, DownloadRetryOptions options, DataLakeRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  nameWithType: "DataLakeFileClient.readWithResponse(OutputStream stream, FileRange range, DownloadRetryOptions options, DataLakeRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  summary: "Reads a range of bytes from a file into an output stream.\n\n**Code Samples**\n\n```java\nFileRange range = new FileRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n System.out.printf(\"Download completed with status %d%n\",\n     client.readWithResponse(new ByteArrayOutputStream(), range, options, null, false,\n         timeout, new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.models.FileRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileRange?alt=com.azure.storage.file.datalake.models.FileRange&text=FileRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DownloadRetryOptions?alt=com.azure.storage.file.datalake.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the contentMD5 for the specified file range should be returned."
    name: "getRangeContentMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"java.lang.RuntimeException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileReadResponse readWithResponse(OutputStream stream, FileRange range, DownloadRetryOptions options, DataLakeRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileReadResponse?alt=com.azure.storage.file.datalake.models.FileReadResponse&text=FileReadResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
