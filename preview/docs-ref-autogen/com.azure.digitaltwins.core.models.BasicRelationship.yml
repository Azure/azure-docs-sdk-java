### YamlMime:JavaType
uid: "com.azure.digitaltwins.core.models.BasicRelationship"
fullName: "com.azure.digitaltwins.core.models.BasicRelationship"
name: "BasicRelationship"
nameWithType: "BasicRelationship"
summary: "Although relationships have a user-defined schema, these properties should exist on every instance. This is useful to use as a base class to ensure your custom relationships have the necessary properties."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BasicRelationship"
constructors:
- "com.azure.digitaltwins.core.models.BasicRelationship.BasicRelationship()"
methods:
- "com.azure.digitaltwins.core.models.BasicRelationship.addCustomProperty(java.lang.String,java.lang.Object)"
- "com.azure.digitaltwins.core.models.BasicRelationship.getCustomProperties()"
- "com.azure.digitaltwins.core.models.BasicRelationship.getId()"
- "com.azure.digitaltwins.core.models.BasicRelationship.getName()"
- "com.azure.digitaltwins.core.models.BasicRelationship.getSourceId()"
- "com.azure.digitaltwins.core.models.BasicRelationship.getTargetId()"
- "com.azure.digitaltwins.core.models.BasicRelationship.setId(java.lang.String)"
- "com.azure.digitaltwins.core.models.BasicRelationship.setName(java.lang.String)"
- "com.azure.digitaltwins.core.models.BasicRelationship.setSourceId(java.lang.String)"
- "com.azure.digitaltwins.core.models.BasicRelationship.setTargetId(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.digitaltwins.core.models"
artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
