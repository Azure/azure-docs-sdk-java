### YamlMime:JavaType
uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo"
fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo"
name: "GitHubResourceInfo"
nameWithType: "GitHubResourceInfo"
summary: "Resources created in Git<wbr>Hub repository."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **GitHubResourceInfo**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo?alt=com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo&text=GitHubResourceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.GitHubResourceInfo()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.GitHubResourceInfo()"
  name: "GitHubResourceInfo()"
  nameWithType: "GitHubResourceInfo.GitHubResourceInfo()"
  summary: "Creates an instance of Git<wbr>Hub<wbr>Resource<wbr>Info class."
  syntax: "public GitHubResourceInfo()"
  desc: "Creates an instance of GitHubResourceInfo class."
methods:
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.appInstallationId()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.appInstallationId()"
  name: "appInstallationId()"
  nameWithType: "GitHubResourceInfo.appInstallationId()"
  summary: "Get the app<wbr>Installation<wbr>Id property: Git<wbr>Hub application installation id."
  syntax: "public String appInstallationId()"
  desc: "Get the appInstallationId property: GitHub application installation id."
  returns:
    description: "the appInstallationId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "GitHubResourceInfo.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Git<wbr>Hub<wbr>Resource<wbr>Info from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static GitHubResourceInfo fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the GitHubResourceInfo."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of GitHubResourceInfo from the JsonReader."
  returns:
    description: "An instance of GitHubResourceInfo if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo?alt=com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo&text=GitHubResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "GitHubResourceInfo.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.validate()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.validate()"
  name: "validate()"
  nameWithType: "GitHubResourceInfo.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.withAppInstallationId(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo.withAppInstallationId(String appInstallationId)"
  name: "withAppInstallationId(String appInstallationId)"
  nameWithType: "GitHubResourceInfo.withAppInstallationId(String appInstallationId)"
  summary: "Set the app<wbr>Installation<wbr>Id property: Git<wbr>Hub application installation id."
  parameters:
  - description: "the appInstallationId value to set."
    name: "appInstallationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitHubResourceInfo withAppInstallationId(String appInstallationId)"
  desc: "Set the appInstallationId property: GitHub application installation id."
  returns:
    description: "the GitHubResourceInfo object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo?alt=com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo&text=GitHubResourceInfo\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Resources created in GitHub repository."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo?alt=com.azure.resourcemanager.securityinsights.models.GitHubResourceInfo&text=GitHubResourceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.securityinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.5
