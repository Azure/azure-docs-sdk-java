### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies"
fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies"
name: "AccessPolicies"
nameWithType: "AccessPolicies"
summary: "Resource collection API of Access<wbr>Policies."
syntax: "public interface AccessPolicies"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.define(String name)"
  name: "define(String name)"
  nameWithType: "AccessPolicies.define(String name)"
  summary: "Begins definition for a new Access<wbr>Policy<wbr>Entity resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyEntity.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new AccessPolicyEntity resource."
  returns:
    description: "the first stage of the new AccessPolicyEntity definition."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.DefinitionStages.Blank?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.delete(String resourceGroupName, String accountName, String accessPolicyName)"
  name: "delete(String resourceGroupName, String accountName, String accessPolicyName)"
  nameWithType: "AccessPolicies.delete(String resourceGroupName, String accountName, String accessPolicyName)"
  summary: "Deletes an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Access Policy name."
    name: "accessPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String accountName, String accessPolicyName)"
  desc: "Deletes an existing access policy resource with the given name."
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "AccessPolicies.deleteById(String id)"
  summary: "Deletes an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing access policy resource with the given name."
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "AccessPolicies.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing access policy resource with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.deleteWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  nameWithType: "AccessPolicies.deleteWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  summary: "Deletes an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Access Policy name."
    name: "accessPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  desc: "Deletes an existing access policy resource with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.get(String resourceGroupName, String accountName, String accessPolicyName)"
  name: "get(String resourceGroupName, String accountName, String accessPolicyName)"
  nameWithType: "AccessPolicies.get(String resourceGroupName, String accountName, String accessPolicyName)"
  summary: "Retrieves an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Access Policy name."
    name: "accessPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyEntity get(String resourceGroupName, String accountName, String accessPolicyName)"
  desc: "Retrieves an existing access policy resource with the given name."
  returns:
    description: "access policies help define the authentication rules, and control access to specific video resources."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getById(String id)"
  name: "getById(String id)"
  nameWithType: "AccessPolicies.getById(String id)"
  summary: "Retrieves an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyEntity getById(String id)"
  desc: "Retrieves an existing access policy resource with the given name."
  returns:
    description: "access policies help define the authentication rules, and control access to specific video resources\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "AccessPolicies.getByIdWithResponse(String id, Context context)"
  summary: "Retrieves an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccessPolicyEntity> getByIdWithResponse(String id, Context context)"
  desc: "Retrieves an existing access policy resource with the given name."
  returns:
    description: "access policies help define the authentication rules, and control access to specific video resources\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.getWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  name: "getWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  nameWithType: "AccessPolicies.getWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  summary: "Retrieves an existing access policy resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Access Policy name."
    name: "accessPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccessPolicyEntity> getWithResponse(String resourceGroupName, String accountName, String accessPolicyName, Context context)"
  desc: "Retrieves an existing access policy resource with the given name."
  returns:
    description: "access policies help define the authentication rules, and control access to specific video resources\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.list(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.list(String resourceGroupName, String accountName)"
  name: "list(String resourceGroupName, String accountName)"
  nameWithType: "AccessPolicies.list(String resourceGroupName, String accountName)"
  summary: "Retrieves all existing access policy resources, along with their JSON representations."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AccessPolicyEntity> list(String resourceGroupName, String accountName)"
  desc: "Retrieves all existing access policy resources, along with their JSON representations."
  returns:
    description: "a collection of AccessPolicyEntity items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.list(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.AccessPolicies.list(String resourceGroupName, String accountName, Integer top, Context context)"
  name: "list(String resourceGroupName, String accountName, Integer top, Context context)"
  nameWithType: "AccessPolicies.list(String resourceGroupName, String accountName, Integer top, Context context)"
  summary: "Retrieves all existing access policy resources, along with their JSON representations."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Azure Video Analyzer account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies a non-negative integer n that limits the number of items returned from a collection. The\n     service returns the number of available items up to but not greater than the specified value n."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AccessPolicyEntity> list(String resourceGroupName, String accountName, Integer top, Context context)"
  desc: "Retrieves all existing access policy resources, along with their JSON representations."
  returns:
    description: "a collection of AccessPolicyEntity items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity&text=AccessPolicyEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of AccessPolicies."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
