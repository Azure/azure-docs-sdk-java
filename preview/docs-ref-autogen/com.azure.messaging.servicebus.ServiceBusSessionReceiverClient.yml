### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient"
fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient"
name: "ServiceBusSessionReceiverClient"
nameWithType: "ServiceBusSessionReceiverClient"
summary: "This **synchronous** session receiver client is used to acquire session locks from a queue or topic and create <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> instances that are tied to the locked sessions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ServiceBusSessionReceiverClient**</br> implements <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
methods:
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()"
  name: "acceptNextSession()"
  nameWithType: "ServiceBusSessionReceiverClient.acceptNextSession()"
  summary: "Acquires a session lock for the next available session and creates a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session."
  syntax: "public ServiceBusReceiverClient acceptNextSession()"
  desc: "Acquires a session lock for the next available session and creates a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session. It will wait until a session is available if no one is available immediately."
  returns:
    description: "A <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> that is tied to the available session."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceiverClient?alt=com.azure.messaging.servicebus.ServiceBusReceiverClient&text=ServiceBusReceiverClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(String sessionId)"
  name: "acceptSession(String sessionId)"
  nameWithType: "ServiceBusSessionReceiverClient.acceptSession(String sessionId)"
  summary: "Acquires a session lock for `sessionId` and create a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session."
  parameters:
  - description: "The session id."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ServiceBusReceiverClient acceptSession(String sessionId)"
  desc: "Acquires a session lock for `sessionId` and create a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session. If the session is already locked by another client, an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpException\"></xref> is thrown immediately."
  returns:
    description: "A <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> that is tied to the specified session."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceiverClient?alt=com.azure.messaging.servicebus.ServiceBusReceiverClient&text=ServiceBusReceiverClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.close()"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.close()"
  name: "close()"
  nameWithType: "ServiceBusSessionReceiverClient.close()"
  syntax: "public void close()"
type: "class"
desc: "This **synchronous** session receiver client is used to acquire session locks from a queue or topic and create <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> instances that are tied to the locked sessions. Sessions can be used as a first in first out (FIFO) processing of messages. Queues and topics/subscriptions support Service Bus sessions, however, it must be [enabled at the time of entity creation][].\n\nThe examples shown in this document use a credential object named DefaultAzureCredential for authentication, which is appropriate for most scenarios, including local development and production environments. Additionally, we recommend using [managed identity][] for authentication in production environments. You can find more information on different ways of authenticating and their corresponding credential types in the [Azure Identity documentation\"][Azure Identity documentation].\n\n**Sample: Receive messages from a specific session**\n\nUse <xref uid=\"com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#acceptSession(String)\"></xref> to acquire the lock of a session if you know the session id. <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> is **strongly** recommended so users have control over message settlement.\n\n```java\nTokenCredential credential = new DefaultAzureCredentialBuilder().build();\n\n // 'fullyQualifiedNamespace' will look similar to \"{your-namespace}.servicebus.windows.net\"\n // 'disableAutoComplete' indicates that users will explicitly settle their message.\n ServiceBusSessionReceiverClient sessionReceiver = new ServiceBusClientBuilder()\n     .credential(fullyQualifiedNamespace, credential)\n     .sessionReceiver()\n     .queueName(sessionEnabledQueueName)\n     .disableAutoComplete()\n     .buildClient();\n ServiceBusReceiverClient receiver = sessionReceiver.acceptSession(\"<<my-session-id>>\");\n\n // Keep fetching messages from the session until there are no more messages.\n // The receiveMessage operation returns when either 10 messages have been receiver or, 30 seconds have elapsed.\n boolean hasMoreMessages = true;\n while (hasMoreMessages) {\n     IterableStream<ServiceBusReceivedMessage> messages =\n         receiver.receiveMessages(10, Duration.ofSeconds(30));\n     Iterator<ServiceBusReceivedMessage> iterator = messages.iterator();\n     hasMoreMessages = iterator.hasNext();\n\n     while (iterator.hasNext()) {\n         ServiceBusReceivedMessage message = iterator.next();\n         System.out.printf(\"Session Id: %s. Contents: %s%n.\", message.getSessionId(), message.getBody());\n\n         // Explicitly settle the message using complete, abandon, defer, dead-letter, etc.\n         if (isMessageProcessed) {\n             receiver.complete(message);\n         } else {\n             receiver.abandon(message);\n         }\n     }\n }\n\n // Use the receiver and finally close it along with the sessionReceiver.\n receiver.close();\n sessionReceiver.close();\n```\n\n**Sample: Receive messages from the first available session**\n\nUse <xref uid=\"com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#acceptNextSession()\"></xref> to acquire the lock of the next available session without specifying the session id. <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> is **strongly** recommended so users have control over message settlement.\n\n```java\nTokenCredential credential = new DefaultAzureCredentialBuilder().build();\n\n // 'fullyQualifiedNamespace' will look similar to \"{your-namespace}.servicebus.windows.net\"\n // 'disableAutoComplete' indicates that users will explicitly settle their message.\n ServiceBusSessionReceiverClient sessionReceiver = new ServiceBusClientBuilder()\n     .credential(fullyQualifiedNamespace, credential)\n     .sessionReceiver()\n     .disableAutoComplete()\n     .queueName(sessionEnabledQueueName)\n     .buildClient();\n\n // Creates a client to receive messages from the first available session. It waits until\n // AmqpRetryOptions.getTryTimeout() elapses. If no session is available within that operation timeout, it\n // throws a retriable error. Otherwise, a receiver is returned when a lock on the session is acquired.\n ServiceBusReceiverClient receiver = sessionReceiver.acceptNextSession();\n\n // Use the receiver and finally close it along with the sessionReceiver.\n try {\n     // Keep fetching messages from the session until there are no more messages.\n     // The receiveMessage operation returns when either 10 messages have been receiver or, 30 seconds have elapsed.\n     boolean hasMoreMessages = true;\n     while (hasMoreMessages) {\n         IterableStream<ServiceBusReceivedMessage> messages =\n             receiver.receiveMessages(10, Duration.ofSeconds(30));\n         Iterator<ServiceBusReceivedMessage> iterator = messages.iterator();\n         hasMoreMessages = iterator.hasNext();\n\n         while (iterator.hasNext()) {\n             ServiceBusReceivedMessage message = iterator.next();\n             System.out.printf(\"Session Id: %s. Message: %s%n.\", message.getSessionId(), message.getBody());\n\n             // Explicitly settle the message using complete, abandon, defer, dead-letter, etc.\n             if (isMessageProcessed) {\n                 receiver.complete(message);\n             } else {\n                 receiver.abandon(message);\n             }\n         }\n     }\n } finally {\n     receiver.close();\n     sessionReceiver.close();\n }\n```\n\n\n[enabled at the time of entity creation]: https://learn.microsoft.com/azure/service-bus-messaging/enable-message-sessions\n[managed identity]: https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\n[Azure Identity documentation]: https://learn.microsoft.com/java/api/overview/azure/identity-readme"
implements:
- "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.15.0-beta.4
