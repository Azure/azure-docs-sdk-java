### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  id: "PartitionSupervisorImpl"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver,com.azure.cosmos.implementation.changefeed.PartitionProcessor,com.azure.cosmos.implementation.changefeed.LeaseRenewer,reactor.core.scheduler.Scheduler)"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close()"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException()"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  langs:
  - "java"
  name: "PartitionSupervisorImpl"
  nameWithType: "PartitionSupervisorImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Implementation for <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionSupervisor\" data-throw-if-not-resolved=\"false\">PartitionSupervisor</xref>."
  syntax:
    content: " class PartitionSupervisorImpl implements PartitionSupervisor, Closeable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.PartitionSupervisor"
  - "java.io.Closeable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver,com.azure.cosmos.implementation.changefeed.PartitionProcessor,com.azure.cosmos.implementation.changefeed.LeaseRenewer,reactor.core.scheduler.Scheduler)"
  id: "PartitionSupervisorImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver,com.azure.cosmos.implementation.changefeed.PartitionProcessor,com.azure.cosmos.implementation.changefeed.LeaseRenewer,reactor.core.scheduler.Scheduler)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  langs:
  - "java"
  name: "PartitionSupervisorImpl(Lease lease, ChangeFeedObserver observer, PartitionProcessor processor, LeaseRenewer renewer, Scheduler scheduler)"
  nameWithType: "PartitionSupervisorImpl.PartitionSupervisorImpl(Lease lease, ChangeFeedObserver observer, PartitionProcessor processor, LeaseRenewer renewer, Scheduler scheduler)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl(Lease lease, ChangeFeedObserver observer, PartitionProcessor processor, LeaseRenewer renewer, Scheduler scheduler)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public PartitionSupervisorImpl(Lease lease, ChangeFeedObserver observer, PartitionProcessor processor, LeaseRenewer renewer, Scheduler scheduler)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.implementation.changefeed.Lease"
    - id: "observer"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
    - id: "processor"
      type: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
    - id: "renewer"
      type: "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
    - id: "scheduler"
      type: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close()"
  id: "close()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  langs:
  - "java"
  name: "close()"
  nameWithType: "PartitionSupervisorImpl.close()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public void close()"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException()"
  id: "getResultException()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  langs:
  - "java"
  name: "getResultException()"
  nameWithType: "PartitionSupervisorImpl.getResultException()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public RuntimeException getResultException()"
    return:
      type: "java.lang.RuntimeException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  id: "run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl"
  langs:
  - "java"
  name: "run(CancellationToken shutdownToken)"
  nameWithType: "PartitionSupervisorImpl.run(CancellationToken shutdownToken)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run(CancellationToken shutdownToken)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> run(CancellationToken shutdownToken)"
    parameters:
    - id: "shutdownToken"
      type: "com.azure.cosmos.implementation.changefeed.CancellationToken"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "com.azure.cosmos.implementation.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.implementation.changefeed.Lease"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  name: "ChangeFeedObserver"
  nameWithType: "ChangeFeedObserver"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
  name: "PartitionProcessor"
  nameWithType: "PartitionProcessor"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
  name: "LeaseRenewer"
  nameWithType: "LeaseRenewer"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl*"
  name: "PartitionSupervisorImpl"
  nameWithType: "PartitionSupervisorImpl.PartitionSupervisorImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.PartitionSupervisorImpl"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.CancellationToken"
  name: "CancellationToken"
  nameWithType: "CancellationToken"
  fullName: "com.azure.cosmos.implementation.changefeed.CancellationToken"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run*"
  name: "run"
  nameWithType: "PartitionSupervisorImpl.run"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.run"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.RuntimeException"
  spec.java:
  - uid: "java.lang.RuntimeException"
    name: "RuntimeException"
    fullName: "java.lang.RuntimeException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException*"
  name: "getResultException"
  nameWithType: "PartitionSupervisorImpl.getResultException"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.getResultException"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close*"
  name: "close"
  nameWithType: "PartitionSupervisorImpl.close"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionSupervisorImpl.close"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionSupervisor"
  name: "PartitionSupervisor"
  nameWithType: "PartitionSupervisor"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionSupervisor"
- uid: "java.io.Closeable"
  name: "Closeable"
  nameWithType: "Closeable"
  fullName: "java.io.Closeable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
