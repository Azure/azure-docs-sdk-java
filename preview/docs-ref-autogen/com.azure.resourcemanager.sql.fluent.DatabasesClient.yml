### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient
  id: DatabasesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.rename(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  langs:
  - java
  name: DatabasesClient
  nameWithType: DatabasesClient
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient
  type: Interface
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in DatabasesClient.
  syntax:
    content: public interface DatabasesClient
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  id: beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  id: beginCreateImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  nameWithType: DatabasesClient.beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginCreateImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  id: beginCreateImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.beginCreateImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract PollerFlux<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginCreateImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  nameWithType: DatabasesClient.beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  nameWithType: DatabasesClient.beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginCreateOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  nameWithType: DatabasesClient.beginCreateOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract PollerFlux<PollResult<DatabaseInner>,DatabaseInner> beginCreateOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginDelete(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.beginDelete(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginDeleteAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  id: beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  nameWithType: DatabasesClient.beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  id: beginExport(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  nameWithType: DatabasesClient.beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginExport(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  id: beginExportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginExportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  nameWithType: DatabasesClient.beginExportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract PollerFlux<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginExportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  nameWithType: DatabasesClient.beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  nameWithType: DatabasesClient.beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  id: beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  nameWithType: DatabasesClient.beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  id: beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  nameWithType: DatabasesClient.beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  id: beginImportMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  nameWithType: DatabasesClient.beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract SyncPoller<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginImportMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  id: beginImportMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginImportMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  nameWithType: DatabasesClient.beginImportMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract PollerFlux<PollResult<ImportExportResponseInner>,ImportExportResponseInner> beginImportMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(java.lang.String,java.lang.String,java.lang.String)
  id: beginPause(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginPause(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginPause(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginPause(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginPause(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.beginPause(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginPause(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginPauseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginPauseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginPauseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract PollerFlux<PollResult<DatabaseInner>,DatabaseInner> beginPauseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(java.lang.String,java.lang.String,java.lang.String)
  id: beginResume(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginResume(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginResume(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginResume(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginResume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginResume(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.beginResume(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginResume(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginResumeAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginResumeAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginResumeAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract PollerFlux<PollResult<DatabaseInner>,DatabaseInner> beginResumeAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  nameWithType: DatabasesClient.beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  nameWithType: DatabasesClient.beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<DatabaseInner>,DatabaseInner> beginUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  nameWithType: DatabasesClient.beginUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract PollerFlux<PollResult<DatabaseInner>,DatabaseInner> beginUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  id: beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginUpgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUpgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginUpgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: beginUpgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.beginUpgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginUpgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  id: createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract ImportExportResponseInner createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  id: createImportOperation(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  nameWithType: DatabasesClient.createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract ImportExportResponseInner createImportOperation(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  id: createImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract Mono<ImportExportResponseInner> createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  id: createImportOperationWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createImportOperationWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.createImportOperationWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createImportOperationWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to import into.
    - id: extensionName
      type: com.azure.resourcemanager.sql.models.ExtensionName
      description: The name of the operation to perform.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportExtensionRequest
      description: Import database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  nameWithType: DatabasesClient.createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract DatabaseInner createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  nameWithType: DatabasesClient.createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract DatabaseInner createOrUpdate(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  nameWithType: DatabasesClient.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract Mono<DatabaseInner> createOrUpdateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.DatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  nameWithType: DatabasesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: A database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.delete(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract void delete(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.delete(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract void delete(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.deleteAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes the database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  id: export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  nameWithType: DatabasesClient.export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.export*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract ImportExportResponseInner export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  id: export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  nameWithType: DatabasesClient.export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.export*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract ImportExportResponseInner export(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  id: exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: exportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  nameWithType: DatabasesClient.exportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract Mono<ImportExportResponseInner> exportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  id: exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  nameWithType: DatabasesClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Exports a database to a bacpac.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be exported.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ExportRequest
      description: Export database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String)
  id: failover(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract void failover(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  id: failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  nameWithType: DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract void failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  id: failover(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  nameWithType: DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract void failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String)
  id: failoverAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.failoverAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract Mono<Void> failoverAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  id: failoverAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  nameWithType: DatabasesClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract Mono<Void> failoverAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  id: failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ReplicaType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  nameWithType: DatabasesClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Failovers a database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to failover.
    - id: replicaType
      type: com.azure.resourcemanager.sql.models.ReplicaType
      description: The type of replica to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.get(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.get(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database.
  syntax:
    content: public abstract DatabaseInner get(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.getAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database.
  syntax:
    content: public abstract Mono<DatabaseInner> getAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.getWithResponse(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database.
  syntax:
    content: public abstract Response<DatabaseInner> getWithResponse(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database.
  syntax:
    content: public abstract Mono<Response<DatabaseInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>>
      description: a database.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  id: importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: importMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  nameWithType: DatabasesClient.importMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(String resourceGroupName, String serverName, ImportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract ImportExportResponseInner importMethod(String resourceGroupName, String serverName, ImportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  id: importMethod(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: importMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  nameWithType: DatabasesClient.importMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract ImportExportResponseInner importMethod(String resourceGroupName, String serverName, ImportRequest parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  id: importMethodAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: importMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  nameWithType: DatabasesClient.importMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract Mono<ImportExportResponseInner> importMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  id: importMethodWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportRequest)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: importMethodWithResponseAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  nameWithType: DatabasesClient.importMethodWithResponseAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync(String resourceGroupName, String serverName, ImportRequest parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Imports a bacpac into a new database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> importMethodWithResponseAsync(String resourceGroupName, String serverName, ImportRequest parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ImportRequest
      description: Import database parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: response for Import/Export Get operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(java.lang.String,java.lang.String,java.lang.String)
  id: listByElasticPool(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName)
  nameWithType: DatabasesClient.listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases in an elastic pool.
  syntax:
    content: public abstract PagedIterable<DatabaseInner> listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: elasticPoolName
      type: java.lang.String
      description: The name of the elastic pool.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases in an elastic pool.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByElasticPool(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName, Context context)
  nameWithType: DatabasesClient.listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases in an elastic pool.
  syntax:
    content: public abstract PagedIterable<DatabaseInner> listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: elasticPoolName
      type: java.lang.String
      description: The name of the elastic pool.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases in an elastic pool.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByElasticPoolAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByElasticPoolAsync(String resourceGroupName, String serverName, String elasticPoolName)
  nameWithType: DatabasesClient.listByElasticPoolAsync(String resourceGroupName, String serverName, String elasticPoolName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync(String resourceGroupName, String serverName, String elasticPoolName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases in an elastic pool.
  syntax:
    content: public abstract PagedFlux<DatabaseInner> listByElasticPoolAsync(String resourceGroupName, String serverName, String elasticPoolName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: elasticPoolName
      type: java.lang.String
      description: The name of the elastic pool.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases in an elastic pool.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(java.lang.String,java.lang.String)
  id: listByServer(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByServer(String resourceGroupName, String serverName)
  nameWithType: DatabasesClient.listByServer(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases.
  syntax:
    content: public abstract PagedIterable<DatabaseInner> listByServer(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByServer(String resourceGroupName, String serverName, Context context)
  nameWithType: DatabasesClient.listByServer(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases.
  syntax:
    content: public abstract PagedIterable<DatabaseInner> listByServer(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync(java.lang.String,java.lang.String)
  id: listByServerAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listByServerAsync(String resourceGroupName, String serverName)
  nameWithType: DatabasesClient.listByServerAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of databases.
  syntax:
    content: public abstract PagedFlux<DatabaseInner> listByServerAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a list of databases.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String)
  id: listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetricDefinitions(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.listMetricDefinitions(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metric definitions.
  syntax:
    content: public abstract PagedIterable<MetricDefinitionInner> listMetricDefinitions(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner>
      description: the response to a list database metric definitions request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMetricDefinitions(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetricDefinitions(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.listMetricDefinitions(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metric definitions.
  syntax:
    content: public abstract PagedIterable<MetricDefinitionInner> listMetricDefinitions(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner>
      description: the response to a list database metric definitions request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listMetricDefinitionsAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetricDefinitionsAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.listMetricDefinitionsAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metric definitions.
  syntax:
    content: public abstract PagedFlux<MetricDefinitionInner> listMetricDefinitionsAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner>
      description: the response to a list database metric definitions request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetrics(String resourceGroupName, String serverName, String databaseName, String filter)
  nameWithType: DatabasesClient.listMetrics(String resourceGroupName, String serverName, String databaseName, String filter)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(String resourceGroupName, String serverName, String databaseName, String filter)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metrics.
  syntax:
    content: public abstract PagedIterable<MetricInner> listMetrics(String resourceGroupName, String serverName, String databaseName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: filter
      type: java.lang.String
      description: An OData filter expression that describes a subset of metrics to return.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricInner>
      description: the response to a list database metrics request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetrics(String resourceGroupName, String serverName, String databaseName, String filter, Context context)
  nameWithType: DatabasesClient.listMetrics(String resourceGroupName, String serverName, String databaseName, String filter, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics(String resourceGroupName, String serverName, String databaseName, String filter, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metrics.
  syntax:
    content: public abstract PagedIterable<MetricInner> listMetrics(String resourceGroupName, String serverName, String databaseName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: filter
      type: java.lang.String
      description: An OData filter expression that describes a subset of metrics to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricInner>
      description: the response to a list database metrics request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listMetricsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: listMetricsAsync(String resourceGroupName, String serverName, String databaseName, String filter)
  nameWithType: DatabasesClient.listMetricsAsync(String resourceGroupName, String serverName, String databaseName, String filter)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync(String resourceGroupName, String serverName, String databaseName, String filter)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Returns database metrics.
  syntax:
    content: public abstract PagedFlux<MetricInner> listMetricsAsync(String resourceGroupName, String serverName, String databaseName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: filter
      type: java.lang.String
      description: An OData filter expression that describes a subset of metrics to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.MetricInner>
      description: the response to a list database metrics request.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(java.lang.String,java.lang.String,java.lang.String)
  id: pause(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: pause(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.pause(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract DatabaseInner pause(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: pause(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: pause(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.pause(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract DatabaseInner pause(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: pauseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: pauseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.pauseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract Mono<DatabaseInner> pauseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: pauseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: pauseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.pauseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Pauses a database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> pauseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be paused.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.rename(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: rename(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: rename(String resourceGroupName, String serverName, String databaseName, String id)
  nameWithType: DatabasesClient.rename(String resourceGroupName, String serverName, String databaseName, String id)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.rename(String resourceGroupName, String serverName, String databaseName, String id)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.rename*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Renames a database.
  syntax:
    content: public abstract void rename(String resourceGroupName, String serverName, String databaseName, String id)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to rename.
    - id: id
      type: java.lang.String
      description: The target ID for the resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: renameAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: renameAsync(String resourceGroupName, String serverName, String databaseName, String id)
  nameWithType: DatabasesClient.renameAsync(String resourceGroupName, String serverName, String databaseName, String id)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync(String resourceGroupName, String serverName, String databaseName, String id)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Renames a database.
  syntax:
    content: public abstract Mono<Void> renameAsync(String resourceGroupName, String serverName, String databaseName, String id)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to rename.
    - id: id
      type: java.lang.String
      description: The target ID for the resource.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: renameWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: renameWithResponse(String resourceGroupName, String serverName, String databaseName, String id, Context context)
  nameWithType: DatabasesClient.renameWithResponse(String resourceGroupName, String serverName, String databaseName, String id, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse(String resourceGroupName, String serverName, String databaseName, String id, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Renames a database.
  syntax:
    content: public abstract Response<Void> renameWithResponse(String resourceGroupName, String serverName, String databaseName, String id, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to rename.
    - id: id
      type: java.lang.String
      description: The target ID for the resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: renameWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: renameWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String id)
  nameWithType: DatabasesClient.renameWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String id)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String id)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Renames a database.
  syntax:
    content: public abstract Mono<Response<Void>> renameWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String id)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to rename.
    - id: id
      type: java.lang.String
      description: The target ID for the resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(java.lang.String,java.lang.String,java.lang.String)
  id: resume(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: resume(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.resume(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract DatabaseInner resume(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: resume(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: resume(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.resume(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract DatabaseInner resume(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync(java.lang.String,java.lang.String,java.lang.String)
  id: resumeAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: resumeAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.resumeAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract Mono<DatabaseInner> resumeAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: resumeWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: resumeWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.resumeWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Resumes a database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> resumeWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be resumed.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  nameWithType: DatabasesClient.update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract DatabaseInner update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  nameWithType: DatabasesClient.update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract DatabaseInner update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  nameWithType: DatabasesClient.updateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract Mono<DatabaseInner> updateAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.DatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  nameWithType: DatabasesClient.updateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.DatabaseUpdate
      description: A database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a database resource.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  id: upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract void upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: upgradeDataWarehouse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: DatabasesClient.upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract void upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: upgradeDataWarehouseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: upgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.upgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract Mono<Void> upgradeDataWarehouseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: upgradeDataWarehouseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.fluent.DatabasesClient
  langs:
  - java
  name: upgradeDataWarehouseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: DatabasesClient.upgradeDataWarehouseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Upgrades a data warehouse.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> upgradeDataWarehouseWithResponseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to be upgraded.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.sql.models.ImportRequest
  name: ImportRequest
  nameWithType: ImportRequest
  fullName: com.azure.resourcemanager.sql.models.ImportRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync*
  name: importMethodWithResponseAsync
  nameWithType: DatabasesClient.importMethodWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
    name: ImportExportResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
    name: ImportExportResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync*
  name: beginImportMethodAsync
  nameWithType: DatabasesClient.beginImportMethodAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethodAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
    name: ImportExportResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
    name: ImportExportResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod*
  name: beginImportMethod
  nameWithType: DatabasesClient.beginImportMethod
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginImportMethod
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
    name: ImportExportResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync*
  name: importMethodAsync
  nameWithType: DatabasesClient.importMethodAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethodAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  name: ImportExportResponseInner
  nameWithType: ImportExportResponseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod*
  name: importMethod
  nameWithType: DatabasesClient.importMethod
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.importMethod
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.ExtensionName
  name: ExtensionName
  nameWithType: ExtensionName
  fullName: com.azure.resourcemanager.sql.models.ExtensionName
- uid: com.azure.resourcemanager.sql.models.ImportExtensionRequest
  name: ImportExtensionRequest
  nameWithType: ImportExtensionRequest
  fullName: com.azure.resourcemanager.sql.models.ImportExtensionRequest
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync*
  name: createImportOperationWithResponseAsync
  nameWithType: DatabasesClient.createImportOperationWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync*
  name: beginCreateImportOperationAsync
  nameWithType: DatabasesClient.beginCreateImportOperationAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation*
  name: beginCreateImportOperation
  nameWithType: DatabasesClient.beginCreateImportOperation
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperation
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync*
  name: createImportOperationAsync
  nameWithType: DatabasesClient.createImportOperationAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperationAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation*
  name: createImportOperation
  nameWithType: DatabasesClient.createImportOperation
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createImportOperation
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.ExportRequest
  name: ExportRequest
  nameWithType: ExportRequest
  fullName: com.azure.resourcemanager.sql.models.ExportRequest
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync*
  name: exportWithResponseAsync
  nameWithType: DatabasesClient.exportWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync*
  name: beginExportAsync
  nameWithType: DatabasesClient.beginExportAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExportAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport*
  name: beginExport
  nameWithType: DatabasesClient.beginExport
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginExport
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync*
  name: exportAsync
  nameWithType: DatabasesClient.exportAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.exportAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.export*
  name: export
  nameWithType: DatabasesClient.export
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.export
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.MetricInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.MetricInner
    name: MetricInner
    fullName: com.azure.resourcemanager.sql.fluent.models.MetricInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync*
  name: listMetricsAsync
  nameWithType: DatabasesClient.listMetricsAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricsAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.MetricInner
    name: MetricInner
    fullName: com.azure.resourcemanager.sql.fluent.models.MetricInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics*
  name: listMetrics
  nameWithType: DatabasesClient.listMetrics
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetrics
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
    name: MetricDefinitionInner
    fullName: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync*
  name: listMetricDefinitionsAsync
  nameWithType: DatabasesClient.listMetricDefinitionsAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitionsAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
    name: MetricDefinitionInner
    fullName: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions*
  name: listMetricDefinitions
  nameWithType: DatabasesClient.listMetricDefinitions
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listMetricDefinitions
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync*
  name: listByServerAsync
  nameWithType: DatabasesClient.listByServerAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServerAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer*
  name: listByServer
  nameWithType: DatabasesClient.listByServer
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByServer
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: DatabasesClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync*
  name: getAsync
  nameWithType: DatabasesClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  name: DatabaseInner
  nameWithType: DatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.get*
  name: get
  nameWithType: DatabasesClient.get
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse*
  name: getWithResponse
  nameWithType: DatabasesClient.getWithResponse
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.getWithResponse
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: DatabasesClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: DatabasesClient.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
    name: DatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: DatabasesClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: DatabasesClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: DatabasesClient.createOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.createOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: DatabasesClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: DatabasesClient.beginDeleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDeleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete*
  name: beginDelete
  nameWithType: DatabasesClient.beginDelete
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginDelete
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync*
  name: deleteAsync
  nameWithType: DatabasesClient.deleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.deleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete*
  name: delete
  nameWithType: DatabasesClient.delete
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.delete
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.DatabaseUpdate
  name: DatabaseUpdate
  nameWithType: DatabaseUpdate
  fullName: com.azure.resourcemanager.sql.models.DatabaseUpdate
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: DatabasesClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: DatabasesClient.beginUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate*
  name: beginUpdate
  nameWithType: DatabasesClient.beginUpdate
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync*
  name: updateAsync
  nameWithType: DatabasesClient.updateAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.updateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.update*
  name: update
  nameWithType: DatabasesClient.update
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.update
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync*
  name: listByElasticPoolAsync
  nameWithType: DatabasesClient.listByElasticPoolAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPoolAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool*
  name: listByElasticPool
  nameWithType: DatabasesClient.listByElasticPool
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.listByElasticPool
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync*
  name: pauseWithResponseAsync
  nameWithType: DatabasesClient.pauseWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync*
  name: beginPauseAsync
  nameWithType: DatabasesClient.beginPauseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPauseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause*
  name: beginPause
  nameWithType: DatabasesClient.beginPause
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginPause
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync*
  name: pauseAsync
  nameWithType: DatabasesClient.pauseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pauseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause*
  name: pause
  nameWithType: DatabasesClient.pause
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.pause
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync*
  name: resumeWithResponseAsync
  nameWithType: DatabasesClient.resumeWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync*
  name: beginResumeAsync
  nameWithType: DatabasesClient.beginResumeAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResumeAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume*
  name: beginResume
  nameWithType: DatabasesClient.beginResume
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginResume
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync*
  name: resumeAsync
  nameWithType: DatabasesClient.resumeAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resumeAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume*
  name: resume
  nameWithType: DatabasesClient.resume
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.resume
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync*
  name: upgradeDataWarehouseWithResponseAsync
  nameWithType: DatabasesClient.upgradeDataWarehouseWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync*
  name: beginUpgradeDataWarehouseAsync
  nameWithType: DatabasesClient.beginUpgradeDataWarehouseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse*
  name: beginUpgradeDataWarehouse
  nameWithType: DatabasesClient.beginUpgradeDataWarehouse
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginUpgradeDataWarehouse
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync*
  name: upgradeDataWarehouseAsync
  nameWithType: DatabasesClient.upgradeDataWarehouseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse*
  name: upgradeDataWarehouse
  nameWithType: DatabasesClient.upgradeDataWarehouse
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.upgradeDataWarehouse
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync*
  name: renameWithResponseAsync
  nameWithType: DatabasesClient.renameWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync*
  name: renameAsync
  nameWithType: DatabasesClient.renameAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.rename*
  name: rename
  nameWithType: DatabasesClient.rename
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.rename
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse*
  name: renameWithResponse
  nameWithType: DatabasesClient.renameWithResponse
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.renameWithResponse
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.ReplicaType
  name: ReplicaType
  nameWithType: ReplicaType
  fullName: com.azure.resourcemanager.sql.models.ReplicaType
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync*
  name: failoverWithResponseAsync
  nameWithType: DatabasesClient.failoverWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync*
  name: beginFailoverAsync
  nameWithType: DatabasesClient.beginFailoverAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailoverAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover*
  name: beginFailover
  nameWithType: DatabasesClient.beginFailover
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginFailover
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync*
  name: failoverAsync
  nameWithType: DatabasesClient.failoverAsync
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failoverAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover*
  name: failover
  nameWithType: DatabasesClient.failover
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.failover
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
  name: ImportExportResponseInner>,ImportExportResponseInner
  nameWithType: ImportExportResponseInner>,ImportExportResponseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner>,com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.sql.fluent.models.MetricInner
  name: MetricInner
  nameWithType: MetricInner
  fullName: com.azure.resourcemanager.sql.fluent.models.MetricInner
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
  name: MetricDefinitionInner
  nameWithType: MetricDefinitionInner
  fullName: com.azure.resourcemanager.sql.fluent.models.MetricDefinitionInner
- uid: com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner
  name: DatabaseInner>,DatabaseInner
  nameWithType: DatabaseInner>,DatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseInner>,com.azure.resourcemanager.sql.fluent.models.DatabaseInner
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
