### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosAsyncConflict"
fullName: "com.azure.cosmos.CosmosAsyncConflict"
name: "CosmosAsyncConflict"
nameWithType: "CosmosAsyncConflict"
summary: "Read and delete conflicts"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosAsyncConflict"
methods:
- uid: "com.azure.cosmos.CosmosAsyncConflict.delete(com.azure.cosmos.models.CosmosConflictRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncConflict.delete(CosmosConflictRequestOptions options)"
  name: "delete(CosmosConflictRequestOptions options)"
  nameWithType: "CosmosAsyncConflict.delete(CosmosConflictRequestOptions options)"
  summary: "Deletes a conflict."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosConflictRequestOptions?alt=com.azure.cosmos.models.CosmosConflictRequestOptions&text=CosmosConflictRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosConflictResponse> delete(CosmosConflictRequestOptions options)"
  desc: "Deletes a conflict.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response for the deleted conflict. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response for the deleted\n conflict or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosConflictResponse?alt=com.azure.cosmos.models.CosmosConflictResponse&text=CosmosConflictResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncConflict.getId()"
  fullName: "com.azure.cosmos.CosmosAsyncConflict.getId()"
  name: "getId()"
  nameWithType: "CosmosAsyncConflict.getId()"
  summary: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncConflict\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncConflict\"></xref>"
  syntax: "public String getId()"
  desc: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncConflict\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncConflict\"></xref>"
  returns:
    description: "the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncConflict\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncConflict\"></xref>"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosAsyncConflict.read(com.azure.cosmos.models.CosmosConflictRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncConflict.read(CosmosConflictRequestOptions options)"
  name: "read(CosmosConflictRequestOptions options)"
  nameWithType: "CosmosAsyncConflict.read(CosmosConflictRequestOptions options)"
  summary: "Reads a conflict."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosConflictRequestOptions?alt=com.azure.cosmos.models.CosmosConflictRequestOptions&text=CosmosConflictRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosConflictResponse> read(CosmosConflictRequestOptions options)"
  desc: "Reads a conflict.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the read conflict. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the read\n conflict or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosConflictResponse?alt=com.azure.cosmos.models.CosmosConflictResponse&text=CosmosConflictResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Read and delete conflicts"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.26.0-beta.1
