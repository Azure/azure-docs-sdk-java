### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.polling.PollResponse
  id: PollResponse
  parent: com.azure.core.util.polling
  children:
  - com.azure.core.util.polling.PollResponse.getProperties()
  - com.azure.core.util.polling.PollResponse.getRetryAfter()
  - com.azure.core.util.polling.PollResponse.getStatus()
  - com.azure.core.util.polling.PollResponse.getValue()
  - com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T)
  - com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T,Duration)
  - com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T,Duration,Map<Object, Object>)
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: PollResponse<T>
  nameWithType: PollResponse<T>
  fullName: com.azure.core.util.polling.PollResponse<T>
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 27
  package: com.azure.core.util.polling
  summary: "<p>PollResponse represents a single response from a service for a long-running polling operation. It provides information such as the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">status</xref> of the long-running operation, any <xref uid=\"com.azure.core.util.polling.PollResponse.getValue()\" data-throw-if-not-resolved=\"false\">value</xref> returned in the poll, as well as other useful information provided by the service.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value}</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object with custom status</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.custom.status.value}</p>\r\n<p></p>"
  syntax: &o1
    content: public class PollResponse<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of poll response value.</p>
  inheritance:
  - java.lang.Object
- uid: com.azure.core.util.polling.PollResponse.getProperties()
  id: getProperties()
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: getProperties()
  nameWithType: PollResponse<T>.getProperties()
  fullName: com.azure.core.util.polling.PollResponse<T>.getProperties()
  overload: com.azure.core.util.polling.PollResponse.getProperties*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 150
  package: com.azure.core.util.polling
  summary: "<p>A map of properties provided by the service that will be made available into the next poll operation. </p>"
  syntax:
    content: public Map<Object, Object> getProperties()
    return:
      type: dbcefe12
      description: <p>Map of properties that were returned from the service, and which will be made available into the next poll operation. </p>
- uid: com.azure.core.util.polling.PollResponse.getRetryAfter()
  id: getRetryAfter()
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: getRetryAfter()
  nameWithType: PollResponse<T>.getRetryAfter()
  fullName: com.azure.core.util.polling.PollResponse<T>.getRetryAfter()
  overload: com.azure.core.util.polling.PollResponse.getRetryAfter*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 142
  package: com.azure.core.util.polling
  summary: "<p>Returns the delay the service has requested until the next polling operation is performed. A null or negative value will be taken to mean that the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> should determine on its own when the next poll operation is to occur. </p>"
  syntax:
    content: public Duration getRetryAfter()
    return:
      type: e02a2de0
      description: <p>Duration How long to wait before next retry. </p>
- uid: com.azure.core.util.polling.PollResponse.getStatus()
  id: getStatus()
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: getStatus()
  nameWithType: PollResponse<T>.getStatus()
  fullName: com.azure.core.util.polling.PollResponse<T>.getStatus()
  overload: com.azure.core.util.polling.PollResponse.getStatus*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 123
  package: com.azure.core.util.polling
  summary: "<p>Represents the status of the long-running operation at the time the last polling operation finished successfully. </p>"
  syntax:
    content: public OperationStatus getStatus()
    return:
      type: 79b25c3a
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">OperationStatus</xref> representing the result of the poll operation. </p>
- uid: com.azure.core.util.polling.PollResponse.getValue()
  id: getValue()
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: getValue()
  nameWithType: PollResponse<T>.getValue()
  fullName: com.azure.core.util.polling.PollResponse<T>.getValue()
  overload: com.azure.core.util.polling.PollResponse.getValue*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 133
  package: com.azure.core.util.polling
  summary: "<p>The value returned as a result of the last successful poll operation. This can be any custom user defined object, or null if no value was returned from the service.</p>\r\n<p></p>"
  syntax: &o2
    content: public T getValue()
    return:
      type: 8ce1ecb9
      description: <p>T result of poll operation. </p>
- uid: com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T)
  id: PollResponse(OperationStatus,T)
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: PollResponse(OperationStatus status, T value)
  nameWithType: PollResponse<T>.PollResponse(OperationStatus status, T value)
  fullName: com.azure.core.util.polling.PollResponse<T>.PollResponse(OperationStatus status, T value)
  overload: com.azure.core.util.polling.PollResponse.PollResponse*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 115
  package: com.azure.core.util.polling
  summary: "<p>Creates a new <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> with status and value.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value}</p>\r\n<p></p>"
  syntax:
    content: public PollResponse(OperationStatus status, T value)
    parameters:
    - id: status
      type: 79b25c3a
      description: <p>Mandatory operation status as defined in <xref uid="" data-throw-if-not-resolved="false">OperationStatus</xref>. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>The value as a result of poll operation. This can be any custom user-defined object. Null is also valid. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>status 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T,Duration)
  id: PollResponse(OperationStatus,T,Duration)
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: PollResponse(OperationStatus status, T value, Duration retryAfter)
  nameWithType: PollResponse<T>.PollResponse(OperationStatus status, T value, Duration retryAfter)
  fullName: com.azure.core.util.polling.PollResponse<T>.PollResponse(OperationStatus status, T value, Duration retryAfter)
  overload: com.azure.core.util.polling.PollResponse.PollResponse*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 101
  package: com.azure.core.util.polling
  summary: "<p>Creates a new <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> with status, value and retryAfter.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value.retryAfter}</p>\r\n<p></p>"
  syntax:
    content: public PollResponse(OperationStatus status, T value, Duration retryAfter)
    parameters:
    - id: status
      type: 79b25c3a
      description: <p>Mandatory operation status as defined in <xref uid="" data-throw-if-not-resolved="false">OperationStatus</xref>. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>The value as a result of poll operation. This can be any custom user-defined object. Null is also valid. </p>
    - id: retryAfter
      type: e02a2de0
      description: >-
        <p>Represents the delay the service has requested until the next polling operation is performed. A<code>null 

            </code> , zero or negative value will be taken to mean that the <xref uid="com.azure.core.util.polling.Poller" data-throw-if-not-resolved="false">Poller</xref> should determine on its own when the next poll operation is to occur. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>status 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.core.util.polling.PollResponse.PollResponse(OperationStatus,T,Duration,Map<Object, Object>)
  id: PollResponse(OperationStatus,T,Duration,Map<Object, Object>)
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  langs:
  - java
  name: PollResponse(OperationStatus status, T value, Duration retryAfter, Map<Object, Object> properties)
  nameWithType: PollResponse<T>.PollResponse(OperationStatus status, T value, Duration retryAfter, Map<Object, Object> properties)
  fullName: com.azure.core.util.polling.PollResponse<T>.PollResponse(OperationStatus status, T value, Duration retryAfter, Map<Object, Object> properties)
  overload: com.azure.core.util.polling.PollResponse.PollResponse*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollResponse.java
    startLine: 81
  package: com.azure.core.util.polling
  summary: "<p>Creates a new <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> with status, value, retryAfter and properties.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value.retryAfter.properties}</p>\r\n<p></p>"
  syntax:
    content: public PollResponse(OperationStatus status, T value, Duration retryAfter, Map<Object, Object> properties)
    parameters:
    - id: status
      type: 79b25c3a
      description: <p>Mandatory operation status as defined in <xref uid="" data-throw-if-not-resolved="false">OperationStatus</xref>. </p>
    - id: value
      type: 8ce1ecb9
      description: <p>The value as a result of poll operation. This can be any custom user-defined object. Null is also valid. </p>
    - id: retryAfter
      type: e02a2de0
      description: >-
        <p>Represents the delay the service has requested until the next polling operation is performed. A<code>null 

            </code> , zero or negative value will be taken to mean that the <xref uid="com.azure.core.util.polling.Poller" data-throw-if-not-resolved="false">Poller</xref> should determine on its own when the next poll operation is to occur. </p>
    - id: properties
      type: dbcefe12
      description: <p>A map of properties provided by the service that will be made available into the next poll operation. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>status 

          </code> is<code>null 

          </code> . </p>
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 17c54119
  spec.java:
  - name: NullPointerException
    fullName: NullPointerException
- uid: 79b25c3a
  spec.java:
  - name: OperationStatus
    fullName: OperationStatus
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: dbcefe12
  spec.java:
  - name: Map<Object, Object>
    fullName: Map<Object, Object>
- uid: com.azure.core.util.polling.PollResponse.PollResponse*
  name: PollResponse
  nameWithType: PollResponse<T>.PollResponse
  fullName: com.azure.core.util.polling.PollResponse<T>.PollResponse
  package: com.azure.core.util.polling
- uid: com.azure.core.util.polling.PollResponse.getStatus*
  name: getStatus
  nameWithType: PollResponse<T>.getStatus
  fullName: com.azure.core.util.polling.PollResponse<T>.getStatus
  package: com.azure.core.util.polling
- uid: com.azure.core.util.polling.PollResponse.getValue*
  name: getValue
  nameWithType: PollResponse<T>.getValue
  fullName: com.azure.core.util.polling.PollResponse<T>.getValue
  package: com.azure.core.util.polling
- uid: com.azure.core.util.polling.PollResponse.getRetryAfter*
  name: getRetryAfter
  nameWithType: PollResponse<T>.getRetryAfter
  fullName: com.azure.core.util.polling.PollResponse<T>.getRetryAfter
  package: com.azure.core.util.polling
- uid: com.azure.core.util.polling.PollResponse.getProperties*
  name: getProperties
  nameWithType: PollResponse<T>.getProperties
  fullName: com.azure.core.util.polling.PollResponse<T>.getProperties
  package: com.azure.core.util.polling
- uid: com.azure.core.util.polling.PollResponse
  parent: com.azure.core.util.polling
  href: com.azure.core.util.polling.PollResponse.yml
  name: PollResponse<T>
  nameWithType: PollResponse<T>
  fullName: com.azure.core.util.polling.PollResponse<T>
  type: Class
  summary: "<p>PollResponse represents a single response from a service for a long-running polling operation. It provides information such as the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">status</xref> of the long-running operation, any <xref uid=\"com.azure.core.util.polling.PollResponse.getValue()\" data-throw-if-not-resolved=\"false\">value</xref> returned in the poll, as well as other useful information provided by the service.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value}</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object with custom status</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.custom.status.value}</p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.core.util.polling.Poller
  parent: com.azure.core.util.polling
  href: com.azure.core.util.polling.Poller.yml
  name: Poller<T>
  nameWithType: Poller<T>
  fullName: com.azure.core.util.polling.Poller<T>
  type: Class
  summary: "<p>This class offers API that simplifies the task of executing long-running operations against Azure service. The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> consist of poll operation, cancel operation if supported by Azure service and polling interval. </p>\r\n<p>It provides the following functionality:</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>Querying the current state of long-running operations. </p>\r\n    </li>\r\n    <li>\r\n      <p>Requesting an asynchronous notification for long-running operation's state. </p>\r\n    </li>\r\n    <li>\r\n      <p>Cancelling the long-running operation if cancellation is supported by the service. </p>\r\n    </li>\r\n    <li>\r\n      <p>Triggering a poll operation manually. </p>\r\n    </li>\r\n    <li>\r\n      <p>Enable/Disable auto-polling. </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Auto Polling</b>\r\n</p>\r\n<p>Auto-polling is enabled by-default. It means that the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> starts polling as soon as its instance is created. The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will transparently call the poll operation every polling cycle and track the state of the long-running operation. Azure services can return <xref uid=\"com.azure.core.util.polling.PollResponse.getRetryAfter()\" data-throw-if-not-resolved=\"false\">PollResponse#getRetryAfter()</xref> to override the<code>Poller.pollInterval \r\n    </code> defined in the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref>. The <xref uid=\"com.azure.core.util.polling.Poller.getStatus()\" data-throw-if-not-resolved=\"false\">Poller#getStatus()</xref> represents the status returned by the successful long-running operation at the time the last auto-polling or last manual polling, whichever happened most recently.</p>\r\n<p>\r\n  <b>Disable Auto Polling</b>\r\n</p>\r\n<p>For those scenarios which require manual control of the polling cycle, disable auto-poling by calling<code>setAutoPollingEnabled#false \r\n    </code> and perform manual poll by invoking <xref uid=\"com.azure.core.util.polling.Poller.poll()\" data-throw-if-not-resolved=\"false\">Poller#poll()</xref> function. It will call poll operation once and update the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> with the latest status. </p>\r\n<p>When auto-polling is disabled, the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will not update its status or other information, unless manual polling is triggered by calling <xref uid=\"com.azure.core.util.polling.Poller.poll()\" data-throw-if-not-resolved=\"false\">Poller#poll()</xref> function.</p>\r\n<p>The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will stop polling when the long-running operation is complete or it is disabled. The polling is considered complete based on status defined in <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationStatus</xref>.</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>\r\n  <b>Instantiating and Subscribing to Poll Response</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.instantiationAndSubscribe}</p>\r\n<p>\r\n  <b>Wait/Block for Polling to complete</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.block}</p>\r\n<p>\r\n  <b>Disable auto polling and polling manually</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.poll}</p>\r\n<p></p>"
  syntax:
    content: public class Poller<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of poll response value </p>
- uid: com.azure.core.util.polling.PollResponse.getValue()
  parent: com.azure.core.util.polling.PollResponse
  href: com.azure.core.util.polling.PollResponse.yml
  name: getValue()
  nameWithType: PollResponse<T>.getValue()
  fullName: com.azure.core.util.polling.PollResponse<T>.getValue()
  type: Method
  summary: "<p>The value returned as a result of the last successful poll operation. This can be any custom user defined object, or null if no value was returned from the service.</p>\r\n<p></p>"
  syntax: *o2
