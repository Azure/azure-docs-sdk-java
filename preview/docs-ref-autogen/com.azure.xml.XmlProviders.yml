### YamlMime:JavaType
uid: "com.azure.xml.XmlProviders"
fullName: "com.azure.xml.XmlProviders"
name: "XmlProviders"
nameWithType: "XmlProviders"
summary: "Handles loading an instance of <xref uid=\"com.azure.xml.XmlProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlProvider\"></xref> found on the classpath."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **XmlProviders**"
methods:
- uid: "com.azure.xml.XmlProviders.createReader(byte[])"
  fullName: "com.azure.xml.XmlProviders.createReader(byte[] xml)"
  name: "createReader(byte[] xml)"
  nameWithType: "XmlProviders.createReader(byte[] xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a `byte[]`."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <code>byte[]</code>."
    name: "xml"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static XmlReader createReader(byte[] xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a `byte[]`.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createReader(byte[],boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createReader(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(byte[],boolean)"
  fullName: "com.azure.xml.XmlProviders.createReader(byte[] xml, boolean useDefault)"
  name: "createReader(byte[] xml, boolean useDefault)"
  nameWithType: "XmlProviders.createReader(byte[] xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a `byte[]`."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <code>byte[]</code>."
    name: "xml"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlReader createReader(byte[] xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a `byte[]`."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.io.InputStream)"
  fullName: "com.azure.xml.XmlProviders.createReader(InputStream xml)"
  name: "createReader(InputStream xml)"
  nameWithType: "XmlProviders.createReader(InputStream xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  syntax: "public static XmlReader createReader(InputStream xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createReader(java.io.InputStream,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createReader(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.io.InputStream,boolean)"
  fullName: "com.azure.xml.XmlProviders.createReader(InputStream xml, boolean useDefault)"
  name: "createReader(InputStream xml, boolean useDefault)"
  nameWithType: "XmlProviders.createReader(InputStream xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlReader createReader(InputStream xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.io.Reader)"
  fullName: "com.azure.xml.XmlProviders.createReader(Reader xml)"
  name: "createReader(Reader xml)"
  nameWithType: "XmlProviders.createReader(Reader xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html\">Reader</a>"
  syntax: "public static XmlReader createReader(Reader xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createReader(java.io.Reader,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createReader(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.io.Reader,boolean)"
  fullName: "com.azure.xml.XmlProviders.createReader(Reader xml, boolean useDefault)"
  name: "createReader(Reader xml, boolean useDefault)"
  nameWithType: "XmlProviders.createReader(Reader xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html\">Reader</a>"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlReader createReader(Reader xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.lang.String)"
  fullName: "com.azure.xml.XmlProviders.createReader(String xml)"
  name: "createReader(String xml)"
  nameWithType: "XmlProviders.createReader(String xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static XmlReader createReader(String xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createReader(java.lang.String,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createReader(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createReader(java.lang.String,boolean)"
  fullName: "com.azure.xml.XmlProviders.createReader(String xml, boolean useDefault)"
  name: "createReader(String xml, boolean useDefault)"
  nameWithType: "XmlProviders.createReader(String xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlReader createReader(String xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref> that reads a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlReader\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createWriter(java.io.OutputStream)"
  fullName: "com.azure.xml.XmlProviders.createWriter(OutputStream xml)"
  name: "createWriter(OutputStream xml)"
  nameWithType: "XmlProviders.createWriter(OutputStream xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  syntax: "public static XmlWriter createWriter(OutputStream xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createWriter(java.io.OutputStream,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createWriter(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createWriter(java.io.OutputStream,boolean)"
  fullName: "com.azure.xml.XmlProviders.createWriter(OutputStream xml, boolean useDefault)"
  name: "createWriter(OutputStream xml, boolean useDefault)"
  nameWithType: "XmlProviders.createWriter(OutputStream xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlWriter createWriter(OutputStream xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createWriter(java.io.Writer)"
  fullName: "com.azure.xml.XmlProviders.createWriter(Writer xml)"
  name: "createWriter(Writer xml)"
  nameWithType: "XmlProviders.createWriter(Writer xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/Writer.html\">Writer</a>"
  syntax: "public static XmlWriter createWriter(Writer xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>.\n\nIf a provider could not be found on the classpath this will use the default implementation, effectively the equivalent to <xref uid=\"com.azure.xml.XmlProviders.createWriter(java.io.Writer,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createWriter(xml, true)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlProviders.createWriter(java.io.Writer,boolean)"
  fullName: "com.azure.xml.XmlProviders.createWriter(Writer xml, boolean useDefault)"
  name: "createWriter(Writer xml, boolean useDefault)"
  nameWithType: "XmlProviders.createWriter(Writer xml, boolean useDefault)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The XML represented as an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/Writer.html\">Writer</a>"
  - description: "Whether the default implementation should be used if one could not be found on the classpath."
    name: "useDefault"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static XmlWriter createWriter(Writer xml, boolean useDefault)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to an <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Handles loading an instance of <xref uid=\"com.azure.xml.XmlProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlProvider\"></xref> found on the classpath."
metadata: {}
package: "com.azure.xml"
artifact: com.azure:azure-xml:1.0.0-beta.1
