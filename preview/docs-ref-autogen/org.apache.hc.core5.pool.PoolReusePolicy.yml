### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.pool.PoolReusePolicy
  id: PoolReusePolicy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool
  children:
  - org.apache.hc.core5.pool.PoolReusePolicy.FIFO
  - org.apache.hc.core5.pool.PoolReusePolicy.LIFO
  - org.apache.hc.core5.pool.PoolReusePolicy.valueOf(java.lang.String)
  - org.apache.hc.core5.pool.PoolReusePolicy.values()
  langs:
  - java
  name: PoolReusePolicy
  nameWithType: PoolReusePolicy
  fullName: org.apache.hc.core5.pool.PoolReusePolicy
  type: Enum
  package: org.apache.hc.core5.pool
  summary: Enumeration of pooled connection re-use policies
  syntax:
    content: public enum PoolReusePolicy extends Enum<PoolReusePolicy>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.pool.PoolReusePolicy.FIFO
  id: FIFO
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.PoolReusePolicy
  langs:
  - java
  name: FIFO
  nameWithType: PoolReusePolicy.FIFO
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.FIFO
  type: Field
  package: org.apache.hc.core5.pool
  summary: Re-use all connections equally preventing them from becoming idle and expiring.
  syntax:
    content: public static final PoolReusePolicy FIFO
    return:
      type: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.core5.pool.PoolReusePolicy.LIFO
  id: LIFO
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.PoolReusePolicy
  langs:
  - java
  name: LIFO
  nameWithType: PoolReusePolicy.LIFO
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.LIFO
  type: Field
  package: org.apache.hc.core5.pool
  summary: Re-use as few connections as possible making it possible for connections to become idle and expire.
  syntax:
    content: public static final PoolReusePolicy LIFO
    return:
      type: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.core5.pool.PoolReusePolicy.PoolReusePolicy()
  id: PoolReusePolicy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.PoolReusePolicy
  langs:
  - java
  name: PoolReusePolicy()
  nameWithType: PoolReusePolicy.PoolReusePolicy()
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.PoolReusePolicy()
  overload: org.apache.hc.core5.pool.PoolReusePolicy.PoolReusePolicy*
  type: Constructor
  package: org.apache.hc.core5.pool
  syntax:
    content: private PoolReusePolicy()
- uid: org.apache.hc.core5.pool.PoolReusePolicy.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.PoolReusePolicy
  langs:
  - java
  name: valueOf(String name)
  nameWithType: PoolReusePolicy.valueOf(String name)
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.valueOf(String name)
  overload: org.apache.hc.core5.pool.PoolReusePolicy.valueOf*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public static PoolReusePolicy valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.core5.pool.PoolReusePolicy.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.PoolReusePolicy
  langs:
  - java
  name: values()
  nameWithType: PoolReusePolicy.values()
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.values()
  overload: org.apache.hc.core5.pool.PoolReusePolicy.values*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public static PoolReusePolicy[] values()
    return:
      type: org.apache.hc.core5.pool.PoolReusePolicy[]
references:
- uid: org.apache.hc.core5.pool.PoolReusePolicy.PoolReusePolicy*
  name: PoolReusePolicy
  nameWithType: PoolReusePolicy.PoolReusePolicy
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.PoolReusePolicy
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.PoolReusePolicy[]
  spec.java:
  - uid: org.apache.hc.core5.pool.PoolReusePolicy
    name: PoolReusePolicy
    fullName: org.apache.hc.core5.pool.PoolReusePolicy
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.pool.PoolReusePolicy.values*
  name: values
  nameWithType: PoolReusePolicy.values
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.values
  package: org.apache.hc.core5.pool
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.pool.PoolReusePolicy.valueOf*
  name: valueOf
  nameWithType: PoolReusePolicy.valueOf
  fullName: org.apache.hc.core5.pool.PoolReusePolicy.valueOf
  package: org.apache.hc.core5.pool
- uid: java.lang.Enum<org.apache.hc.core5.pool.PoolReusePolicy>
  name: Enum<PoolReusePolicy>
  nameWithType: Enum<PoolReusePolicy>
  fullName: java.lang.Enum<org.apache.hc.core5.pool.PoolReusePolicy>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
