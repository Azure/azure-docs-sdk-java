### YamlMime:ManagedReference
items:
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable
  id: TextAnalyticsPagedIterable
  artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
  parent: com.azure.ai.textanalytics.util
  children:
  - com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.TextAnalyticsPagedIterable(com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<T>)
  - com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.iterableByPage()
  - com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.streamByPage()
  langs:
  - java
  name: TextAnalyticsPagedIterable<T>
  nameWithType: TextAnalyticsPagedIterable<T>
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>
  type: Class
  package: com.azure.ai.textanalytics.util
  summary: >-
    This class provides utility to iterate over <xref uid="" data-throw-if-not-resolved="false">PagedResponse</xref> using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> and <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> interfaces.


    **Code sample using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref>**


    ```java

    pagedIterable.stream().forEach(item -> System.out.println("Processing item" + item));

    ```


    **Code sample using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> by page**


    ```java

    pagedIterable.streamByPage().forEach(resp -> {
         if (resp.getStatusCode() == HttpURLConnection.HTTP_OK) {
             System.out.printf("Response headers are %s. Url %s%n", resp.getDeserializedHeaders(),
                 resp.getRequest().getUrl());
             resp.getElements().forEach(value -> System.out.printf("Response value is %s%n", value));
         }
     });
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref>**


    ```java

    Iterator<LinkedEntity> iterator = pagedIterable.iterator();
     while (iterator.hasNext()) {
         System.out.println("Processing item" + iterator.next());
     }
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page**


    ```java

    pagedIterable.iterableByPage().forEach(resp -> {
         if (resp.getStatusCode() == HttpURLConnection.HTTP_OK) {
             System.out.printf("Response headers are %s. Url %s%n", resp.getDeserializedHeaders(),
                 resp.getRequest().getUrl());
             resp.getElements().forEach(value -> System.out.printf("Response value is %s%n", value));
         }
     });
    ```
  syntax:
    content: public final class TextAnalyticsPagedIterable<T> extends IterableStream<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.azure.core.util.IterableStream
  inheritedMembers:
  - com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  - com.azure.core.util.IterableStream.iterator()
  - com.azure.core.util.IterableStream.stream()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.TextAnalyticsPagedIterable(com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<T>)
  id: TextAnalyticsPagedIterable(com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<T>)
  artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
  parent: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable
  langs:
  - java
  name: TextAnalyticsPagedIterable(TextAnalyticsPagedFlux<T> textAnalyticsPagedFlux)
  nameWithType: TextAnalyticsPagedIterable<T>.TextAnalyticsPagedIterable(TextAnalyticsPagedFlux<T> textAnalyticsPagedFlux)
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.TextAnalyticsPagedIterable(TextAnalyticsPagedFlux<T> textAnalyticsPagedFlux)
  overload: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.TextAnalyticsPagedIterable*
  type: Constructor
  package: com.azure.ai.textanalytics.util
  summary: Creates instance given <xref uid="com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux" data-throw-if-not-resolved="false">TextAnalyticsPagedFlux</xref>.
  syntax:
    content: public TextAnalyticsPagedIterable(TextAnalyticsPagedFlux<T> textAnalyticsPagedFlux)
    parameters:
    - id: textAnalyticsPagedFlux
      type: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<T>
      description: It used as iterable.
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.iterableByPage()
  id: iterableByPage()
  artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
  parent: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable
  langs:
  - java
  name: iterableByPage()
  nameWithType: TextAnalyticsPagedIterable<T>.iterableByPage()
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.iterableByPage()
  overload: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.iterableByPage*
  type: Method
  package: com.azure.ai.textanalytics.util
  summary: Provides <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> API for <xref uid="com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse" data-throw-if-not-resolved="false">TextAnalyticsPagedResponse</xref>.
  syntax:
    content: public Iterable<TextAnalyticsPagedResponse<T>> iterableByPage()
    return:
      type: java.lang.Iterable<com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse<T>>
      description: <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> of <xref uid="com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse" data-throw-if-not-resolved="false">TextAnalyticsPagedResponse</xref> of <code>T</code>.
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.streamByPage()
  id: streamByPage()
  artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
  parent: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable
  langs:
  - java
  name: streamByPage()
  nameWithType: TextAnalyticsPagedIterable<T>.streamByPage()
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.streamByPage()
  overload: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.streamByPage*
  type: Method
  package: com.azure.ai.textanalytics.util
  summary: Retrieve the <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref>, one page at a time, starting from the next page associated with the given continuation token. To start from first page, use <xref uid="com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.streamByPage()" data-throw-if-not-resolved="false">#streamByPage()</xref> instead.
  syntax:
    content: public Stream<TextAnalyticsPagedResponse<T>> streamByPage()
    return:
      type: java.util.stream.Stream<com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse<T>>
      description: <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> of a <xref uid="com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse" data-throw-if-not-resolved="false">TextAnalyticsPagedResponse</xref> of <code>T</code>.
references:
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<T>
  spec.java:
  - uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux
    name: TextAnalyticsPagedFlux
    fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.TextAnalyticsPagedIterable*
  name: TextAnalyticsPagedIterable
  nameWithType: TextAnalyticsPagedIterable<T>.TextAnalyticsPagedIterable
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.TextAnalyticsPagedIterable
  package: com.azure.ai.textanalytics.util
- uid: java.util.stream.Stream<com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse<T>>
  spec.java:
  - uid: java.util.stream.Stream
    name: Stream
    fullName: java.util.stream.Stream
  - name: <
    fullName: <
  - uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
    name: TextAnalyticsPagedResponse
    fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.streamByPage*
  name: streamByPage
  nameWithType: TextAnalyticsPagedIterable<T>.streamByPage
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.streamByPage
  package: com.azure.ai.textanalytics.util
- uid: java.lang.Iterable<com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse<T>>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
    name: TextAnalyticsPagedResponse
    fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable.iterableByPage*
  name: iterableByPage
  nameWithType: TextAnalyticsPagedIterable<T>.iterableByPage
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedIterable<T>.iterableByPage
  package: com.azure.ai.textanalytics.util
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.azure.core.util.IterableStream<T>
  name: IterableStream<T>
  nameWithType: IterableStream<T>
  fullName: com.azure.core.util.IterableStream<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.util.IterableStream.iterator()
  name: IterableStream.iterator()
  nameWithType: IterableStream.iterator()
  fullName: com.azure.core.util.IterableStream.iterator()
- uid: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  name: IterableStream.<T>of(Iterable<T>)
  nameWithType: IterableStream.<T>of(Iterable<T>)
  fullName: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.util.IterableStream.stream()
  name: IterableStream.stream()
  nameWithType: IterableStream.stream()
  fullName: com.azure.core.util.IterableStream.stream()
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux
  name: TextAnalyticsPagedFlux
  nameWithType: TextAnalyticsPagedFlux
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux
- uid: java.util.stream.Stream
  name: Stream
  nameWithType: Stream
  fullName: java.util.stream.Stream
- uid: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
  name: TextAnalyticsPagedResponse
  nameWithType: TextAnalyticsPagedResponse
  fullName: com.azure.ai.textanalytics.util.TextAnalyticsPagedResponse
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: com.azure.core.util.IterableStream
  name: IterableStream
  nameWithType: IterableStream
  fullName: com.azure.core.util.IterableStream
- uid: com.azure.core.util.IterableStream.
  name: IterableStream.
  nameWithType: IterableStream.
  fullName: com.azure.core.util.IterableStream.
- uid: T>of(java.lang.Iterable
  name: T>of(Iterable
  nameWithType: T>of(Iterable
  fullName: T>of(java.lang.Iterable
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
