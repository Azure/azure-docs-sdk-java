### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  id: OrderValidator
  parent: com.microsoft.azure.eventhubs.sendrecv
  children:
  - com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount()
  - com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError(Throwable)
  - com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive(Iterable<EventData>)
  - com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator(final CompletableFuture<Void>,final int)
  href: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.yml
  langs:
  - java
  name: SendTest.OrderValidator
  nameWithType: SendTest.OrderValidator
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
    startLine: 197
  package: com.microsoft.azure.eventhubs.sendrecv
  syntax:
    content: public class OrderValidator implements PartitionReceiveHandler
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.eventhubs.PartitionReceiveHandler
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount()
  id: getMaxEventCount()
  parent: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  href: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.yml
  langs:
  - java
  name: getMaxEventCount()
  nameWithType: SendTest.OrderValidator.getMaxEventCount()
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount()
  overload: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
    startLine: 209
  package: com.microsoft.azure.eventhubs.sendrecv
  syntax:
    content: public int getMaxEventCount()
    return:
      type: f75371fa
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError(Throwable)
  id: onError(Throwable)
  parent: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  href: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.yml
  langs:
  - java
  name: onError(Throwable error)
  nameWithType: SendTest.OrderValidator.onError(Throwable error)
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError(Throwable error)
  overload: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
    startLine: 231
  package: com.microsoft.azure.eventhubs.sendrecv
  syntax:
    content: public void onError(Throwable error)
    parameters:
    - id: error
      type: a04fafd7
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive(Iterable<EventData>)
  id: onReceive(Iterable<EventData>)
  parent: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  href: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.yml
  langs:
  - java
  name: onReceive(Iterable<EventData> events)
  nameWithType: SendTest.OrderValidator.onReceive(Iterable<EventData> events)
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive(Iterable<EventData> events)
  overload: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
    startLine: 214
  package: com.microsoft.azure.eventhubs.sendrecv
  syntax:
    content: public void onReceive(Iterable<EventData> events)
    parameters:
    - id: events
      type: 2a13b5a5com.microsoft.azure.eventhubs.EventDataa08ddfce
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator(final CompletableFuture<Void>,final int)
  id: OrderValidator(final CompletableFuture<Void>,final int)
  parent: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator
  href: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.yml
  langs:
  - java
  name: OrderValidator(final CompletableFuture<Void> validateSignal, final int netEventCount)
  nameWithType: SendTest.OrderValidator.OrderValidator(final CompletableFuture<Void> validateSignal, final int netEventCount)
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator(final CompletableFuture<Void> validateSignal, final int netEventCount)
  overload: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/sendrecv/SendTest.java
    startLine: 203
  package: com.microsoft.azure.eventhubs.sendrecv
  syntax:
    content: public OrderValidator(final CompletableFuture<Void> validateSignal, final int netEventCount)
    parameters:
    - id: validateSignal
      type: fc984e6f
    - id: netEventCount
      type: cd225469
references:
- uid: fc984e6f
  spec.java:
  - name: final CompletableFuture<Void>
    fullName: final CompletableFuture<Void>
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator*
  name: OrderValidator
  nameWithType: SendTest.OrderValidator.OrderValidator
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.OrderValidator
  package: com.microsoft.azure.eventhubs.sendrecv
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount*
  name: getMaxEventCount
  nameWithType: SendTest.OrderValidator.getMaxEventCount
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.getMaxEventCount
  package: com.microsoft.azure.eventhubs.sendrecv
- uid: 2a13b5a5com.microsoft.azure.eventhubs.EventDataa08ddfce
  spec.java:
  - name: Iterable<
    fullName: Iterable<
  - uid: com.microsoft.azure.eventhubs.EventData
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs.EventData(interface).yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive*
  name: onReceive
  nameWithType: SendTest.OrderValidator.onReceive
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onReceive
  package: com.microsoft.azure.eventhubs.sendrecv
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError*
  name: onError
  nameWithType: SendTest.OrderValidator.onError
  fullName: com.microsoft.azure.eventhubs.sendrecv.SendTest.OrderValidator.onError
  package: com.microsoft.azure.eventhubs.sendrecv
- uid: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionReceiveHandler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Interface
  summary: "<p>The handler to invoke after receiving <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>s from Microsoft Azure EventHubs. Use any implementation of this abstract class to specify user action when using PartitionReceiver's setReceiveHandler().</p>\r\n<p></p>"
  syntax:
    content: public interface PartitionReceiveHandler
- uid: com.microsoft.azure.eventhubs.EventData
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventData(interface).yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: "<p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>\r\n<p>Serializing a received <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</a><pre>\r\ni.   <xref uid=\"com.microsoft.azure.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">getProperties()</xref> - AMQPMessage.ApplicationProperties section\r\nii.  <xref uid=\"com.microsoft.azure.eventhubs.EventData.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> - if AMQPMessage.Body has Data section\r\niii. <xref uid=\"com.microsoft.azure.eventhubs.EventData.getObject()\" data-throw-if-not-resolved=\"false\">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections\r\n</pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>"
  syntax:
    content: public interface EventData
