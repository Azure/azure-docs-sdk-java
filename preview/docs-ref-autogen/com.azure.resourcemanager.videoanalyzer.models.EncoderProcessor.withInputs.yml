### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs"
name: "withInputs"
nameWithType: "EncoderProcessor.withInputs"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs(List<NodeInput> inputs)"
  name: "withInputs(List<NodeInput> inputs)"
  nameWithType: "EncoderProcessor.withInputs(List<NodeInput> inputs)"
  summary: "Set the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  parameters:
  - name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeInput?alt=com.azure.resourcemanager.videoanalyzer.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EncoderProcessor withInputs(List<NodeInput> inputs)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor&text=EncoderProcessor\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.3
