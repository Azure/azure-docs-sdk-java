### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Optional.fromNullable*"
fullName: "com.azure.cosmos.implementation.guava25.base.Optional<T>.<T>fromNullable"
name: "<T>fromNullable"
nameWithType: "Optional<T>.<T>fromNullable"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Optional.<T>fromNullable(T)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Optional<T>.<T>fromNullable(T nullableReference)"
  name: "<T>fromNullable(T nullableReference)"
  nameWithType: "Optional<T>.<T>fromNullable(T nullableReference)"
  summary: "If `nullableReference` is non-null, returns an `Optional` instance containing that reference; otherwise returns <xref uid=\"? extends com.azure.cosmos.implementation.guava25.base.Optional.absent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Optional#absent\"></xref>.\n\n**Comparison to `java.util.Optional`:** this method is equivalent to Java 8's `Optional.ofNullable`."
  parameters:
  - name: "nullableReference"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Optional<T> <T>fromNullable(T nullableReference)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Optional?alt=com.azure.cosmos.implementation.guava25.base.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
