### YamlMime:JavaType
uid: "org.slf4j.LoggerFactory"
fullName: "org.slf4j.LoggerFactory"
name: "LoggerFactory"
nameWithType: "LoggerFactory"
summary: "The `LoggerFactory` is a utility class producing Loggers for various logging APIs, most notably for log4j, logback and JDK 1.4 logging. Other implementations such as <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NOPLogger\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SimpleLogger\"></xref> are also supported.\n\n`LoggerFactory` is essentially a wrapper around an <xref uid=\"org.slf4j.ILoggerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ILoggerFactory\"></xref> instance bound with `LoggerFactory` at compile time.\n\nPlease note that all methods in `LoggerFactory` are static."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LoggerFactory"
methods:
- "org.slf4j.LoggerFactory.getILoggerFactory()"
- "org.slf4j.LoggerFactory.getLogger(java.lang.Class<?>)"
- "org.slf4j.LoggerFactory.getLogger(java.lang.String)"
type: "class"
metadata: {}
package: "org.slf4j"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
