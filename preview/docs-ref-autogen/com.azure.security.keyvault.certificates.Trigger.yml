### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.certificates.Trigger"
  id: "Trigger"
  parent: "com.azure.security.keyvault.certificates"
  children:
  - "com.azure.security.keyvault.certificates.Trigger.Trigger()"
  - "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry()"
  - "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry(java.lang.Integer)"
  - "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage()"
  - "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage(java.lang.Integer)"
  langs:
  - "java"
  name: "Trigger"
  nameWithType: "Trigger"
  fullName: "com.azure.security.keyvault.certificates.Trigger"
  type: "Class"
  package: "com.azure.security.keyvault.certificates"
  summary: "A condition to be satisfied for an action to be executed."
  syntax:
    content: " class Trigger"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.certificates.Trigger.Trigger()"
  id: "Trigger()"
  parent: "com.azure.security.keyvault.certificates.Trigger"
  langs:
  - "java"
  name: "Trigger()"
  nameWithType: "Trigger.Trigger()"
  fullName: "com.azure.security.keyvault.certificates.Trigger.Trigger()"
  overload: "com.azure.security.keyvault.certificates.Trigger.Trigger*"
  type: "Constructor"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: " Trigger()"
- uid: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry()"
  id: "daysBeforeExpiry()"
  parent: "com.azure.security.keyvault.certificates.Trigger"
  langs:
  - "java"
  name: "daysBeforeExpiry()"
  nameWithType: "Trigger.daysBeforeExpiry()"
  fullName: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry()"
  overload: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Get the daysBeforeExpiry value."
  syntax:
    content: " Integer daysBeforeExpiry()"
    return:
      type: "java.lang.Integer"
      description: "the daysBeforeExpiry value"
- uid: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry(java.lang.Integer)"
  id: "daysBeforeExpiry(java.lang.Integer)"
  parent: "com.azure.security.keyvault.certificates.Trigger"
  langs:
  - "java"
  name: "daysBeforeExpiry(Integer daysBeforeExpiry)"
  nameWithType: "Trigger.daysBeforeExpiry(Integer daysBeforeExpiry)"
  fullName: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry(Integer daysBeforeExpiry)"
  overload: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Set the daysBeforeExpiry value."
  syntax:
    content: " Trigger daysBeforeExpiry(Integer daysBeforeExpiry)"
    parameters:
    - id: "daysBeforeExpiry"
      type: "java.lang.Integer"
      description: "the daysBeforeExpiry value to set"
    return:
      type: "com.azure.security.keyvault.certificates.Trigger"
      description: "the Trigger object itself."
- uid: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage()"
  id: "lifetimePercentage()"
  parent: "com.azure.security.keyvault.certificates.Trigger"
  langs:
  - "java"
  name: "lifetimePercentage()"
  nameWithType: "Trigger.lifetimePercentage()"
  fullName: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage()"
  overload: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Get the lifetimePercentage value."
  syntax:
    content: " Integer lifetimePercentage()"
    return:
      type: "java.lang.Integer"
      description: "the lifetimePercentage value"
- uid: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage(java.lang.Integer)"
  id: "lifetimePercentage(java.lang.Integer)"
  parent: "com.azure.security.keyvault.certificates.Trigger"
  langs:
  - "java"
  name: "lifetimePercentage(Integer lifetimePercentage)"
  nameWithType: "Trigger.lifetimePercentage(Integer lifetimePercentage)"
  fullName: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage(Integer lifetimePercentage)"
  overload: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Set the lifetimePercentage value."
  syntax:
    content: " Trigger lifetimePercentage(Integer lifetimePercentage)"
    parameters:
    - id: "lifetimePercentage"
      type: "java.lang.Integer"
      description: "the lifetimePercentage value to set"
    return:
      type: "com.azure.security.keyvault.certificates.Trigger"
      description: "the Trigger object itself."
references:
- uid: "com.azure.security.keyvault.certificates.Trigger.Trigger*"
  name: "Trigger"
  nameWithType: "Trigger.Trigger"
  fullName: "com.azure.security.keyvault.certificates.Trigger.Trigger"
  package: "com.azure.security.keyvault.certificates"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage*"
  name: "lifetimePercentage"
  nameWithType: "Trigger.lifetimePercentage"
  fullName: "com.azure.security.keyvault.certificates.Trigger.lifetimePercentage"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry*"
  name: "daysBeforeExpiry"
  nameWithType: "Trigger.daysBeforeExpiry"
  fullName: "com.azure.security.keyvault.certificates.Trigger.daysBeforeExpiry"
  package: "com.azure.security.keyvault.certificates"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
