### YamlMime:JavaType
uid: "com.azure.resourcemanager.dynatrace.models.TagRule"
fullName: "com.azure.resourcemanager.dynatrace.models.TagRule"
name: "TagRule"
nameWithType: "TagRule"
summary: "An immutable client-side representation of Tag<wbr>Rule."
syntax: "public interface TagRule"
methods:
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.id()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.id()"
  name: "id()"
  nameWithType: "TagRule.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.innerModel()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.innerModel()"
  name: "innerModel()"
  nameWithType: "TagRule.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>dynatrace.<wbr>fluent.<wbr>models.<wbr>Tag<wbr>Rule<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract TagRuleInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.dynatrace.fluent.models.TagRuleInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.TagRuleInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.TagRuleInner&text=TagRuleInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.logRules()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.logRules()"
  name: "logRules()"
  nameWithType: "TagRule.logRules()"
  summary: "Gets the log<wbr>Rules property: Set of rules for sending logs for the Monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract LogRules logRules()"
  desc: "Gets the logRules property: Set of rules for sending logs for the Monitor resource."
  returns:
    description: "the logRules value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LogRules?alt=com.azure.resourcemanager.dynatrace.models.LogRules&text=LogRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.metricRules()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.metricRules()"
  name: "metricRules()"
  nameWithType: "TagRule.metricRules()"
  summary: "Gets the metric<wbr>Rules property: Set of rules for sending metrics for the Monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MetricRules metricRules()"
  desc: "Gets the metricRules property: Set of rules for sending metrics for the Monitor resource."
  returns:
    description: "the metricRules value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MetricRules?alt=com.azure.resourcemanager.dynatrace.models.MetricRules&text=MetricRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.name()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.name()"
  name: "name()"
  nameWithType: "TagRule.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.provisioningState()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.provisioningState()"
  name: "provisioningState()"
  nameWithType: "TagRule.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.ProvisioningState?alt=com.azure.resourcemanager.dynatrace.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.refresh()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.refresh()"
  name: "refresh()"
  nameWithType: "TagRule.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract TagRule refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.TagRule?alt=com.azure.resourcemanager.dynatrace.models.TagRule&text=TagRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "TagRule.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TagRule refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.TagRule?alt=com.azure.resourcemanager.dynatrace.models.TagRule&text=TagRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.resourceGroupName()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "TagRule.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.systemData()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.systemData()"
  name: "systemData()"
  nameWithType: "TagRule.systemData()"
  summary: "Gets the system<wbr>Data property: System metadata for this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: System metadata for this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.type()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.type()"
  name: "type()"
  nameWithType: "TagRule.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.TagRule.update()"
  fullName: "com.azure.resourcemanager.dynatrace.models.TagRule.update()"
  name: "update()"
  nameWithType: "TagRule.update()"
  summary: "Begins update for the Tag<wbr>Rule resource."
  modifiers:
  - "abstract"
  syntax: "public abstract TagRule.Update update()"
  desc: "Begins update for the TagRule resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.TagRule.Update?alt=com.azure.resourcemanager.dynatrace.models.TagRule.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of TagRule."
metadata: {}
package: "com.azure.resourcemanager.dynatrace.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dynatrace:1.0.0-beta.1
