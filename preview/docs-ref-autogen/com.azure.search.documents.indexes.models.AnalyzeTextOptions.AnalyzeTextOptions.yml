### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions*"
fullName: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions"
name: "AnalyzeTextOptions"
nameWithType: "AnalyzeTextOptions.AnalyzeTextOptions"
members:
- uid: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(java.lang.String,com.azure.search.documents.indexes.models.LexicalAnalyzerName)"
  fullName: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalAnalyzerName analyzerName)"
  name: "AnalyzeTextOptions(String text, LexicalAnalyzerName analyzerName)"
  nameWithType: "AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalAnalyzerName analyzerName)"
  summary: "Constructor to <xref uid=\"com.azure.search.documents.indexes.models.AnalyzeTextOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeTextOptions\"></xref> which takes analyzerName."
  parameters:
  - description: "The text break into tokens."
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the analyzer to use to break the given text."
    name: "analyzerName"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName?alt=com.azure.search.documents.indexes.models.LexicalAnalyzerName&text=LexicalAnalyzerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnalyzeTextOptions(String text, LexicalAnalyzerName analyzerName)"
- uid: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(java.lang.String,com.azure.search.documents.indexes.models.LexicalNormalizerName)"
  fullName: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalNormalizerName normalizerName)"
  name: "AnalyzeTextOptions(String text, LexicalNormalizerName normalizerName)"
  nameWithType: "AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalNormalizerName normalizerName)"
  summary: "Constructor to <xref uid=\"com.azure.search.documents.indexes.models.AnalyzeTextOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeTextOptions\"></xref> which takes normalizerName."
  parameters:
  - description: "The text break into tokens."
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the normalizer to use to break the given text."
    name: "normalizerName"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizerName?alt=com.azure.search.documents.indexes.models.LexicalNormalizerName&text=LexicalNormalizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnalyzeTextOptions(String text, LexicalNormalizerName normalizerName)"
- uid: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(java.lang.String,com.azure.search.documents.indexes.models.LexicalTokenizerName)"
  fullName: "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalTokenizerName tokenizerName)"
  name: "AnalyzeTextOptions(String text, LexicalTokenizerName tokenizerName)"
  nameWithType: "AnalyzeTextOptions.AnalyzeTextOptions(String text, LexicalTokenizerName tokenizerName)"
  summary: "Constructor to <xref uid=\"com.azure.search.documents.indexes.models.AnalyzeTextOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeTextOptions\"></xref> which takes tokenizerName."
  parameters:
  - description: "The text break into tokens."
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the tokenizer to use to break the given text."
    name: "tokenizerName"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnalyzeTextOptions(String text, LexicalTokenizerName tokenizerName)"
type: "constructor"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.7
