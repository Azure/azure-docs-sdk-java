### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
name: "DeserializationProblemHandler"
nameWithType: "DeserializationProblemHandler"
summary: "This is the class that can be registered (via <xref uid=\"com.fasterxml.jackson.databind.DeserializationConfig\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationConfig\"></xref> object owner by <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>) to get called when a potentially recoverable problem is encountered during deserialization process. Handlers can try to resolve the problem, throw an exception or just skip the content.\n\nDefault implementations for all methods implemented minimal \"do nothing\" functionality, which is roughly equivalent to not having a registered listener at all. This allows for only implemented handler methods one is interested in, without handling other cases.\n\nNOTE: it is typically **NOT** acceptable to simply do nothing, because this will result in unprocessed tokens being left in token stream (read via <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref>, in case a structured (JSON Object or JSON Array) value is being pointed to by parser."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class DeserializationProblemHandler"
constructors:
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.DeserializationProblemHandler()"
fields:
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED"
methods:
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,java.lang.Object,java.lang.Throwable)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.Object,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,java.lang.String,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,java.lang.Number,java.lang.String)"
- "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,java.lang.String,java.lang.String)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
