### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*"
fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText"
name: "getText"
nameWithType: "NonBlockingJsonParserBase.getText"
members:
- uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()"
  fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()"
  name: "getText()"
  nameWithType: "NonBlockingJsonParserBase.getText()"
  summary: "Method for accessing textual representation of the current event; if no current event (before first call to <xref uid=\"com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.nextToken\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#nextToken\"></xref>, or after encountering end-of-input), returns null. Method can be called for any event."
  overridden: "com.fasterxml.jackson.core.base.ParserMinimalBase.getText()"
  syntax: "public String getText()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)"
  fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(Writer writer)"
  name: "getText(Writer writer)"
  nameWithType: "NonBlockingJsonParserBase.getText(Writer writer)"
  summary: "Method to read the textual representation of the current token in chunks and pass it to the given Writer. Conceptually same as calling:\n\n```java\nwriter.write(parser.getText());\n```\n\nbut should typically be more efficient as longer content does need to be combined into a single `String` to return, and write can occur directly from intermediate buffers Jackson uses."
  overridden: "com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)"
  parameters:
  - name: "writer"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int getText(Writer writer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json.async"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
