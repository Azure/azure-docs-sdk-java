### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary*"
fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary"
name: "_writeBinary"
nameWithType: "WriterBasedJsonGenerator._writeBinary"
members:
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, byte[] input, int inputPtr, int inputEnd)"
  name: "_writeBinary(Base64Variant b64variant, byte[] input, int inputPtr, int inputEnd)"
  nameWithType: "WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, byte[] input, int inputPtr, int inputEnd)"
  parameters:
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  - name: "input"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "inputPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "inputEnd"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final void _writeBinary(Base64Variant b64variant, byte[] input, int inputPtr, int inputEnd)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[])"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer)"
  name: "_writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer)"
  nameWithType: "WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer)"
  parameters:
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  - name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "readBuffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "protected final int _writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer, int bytesLeft)"
  name: "_writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer, int bytesLeft)"
  nameWithType: "WriterBasedJsonGenerator._writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer, int bytesLeft)"
  parameters:
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  - name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "readBuffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "bytesLeft"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final int _writeBinary(Base64Variant b64variant, InputStream data, byte[] readBuffer, int bytesLeft)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
