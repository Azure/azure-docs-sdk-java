### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys"
name: "EndpointKeys"
nameWithType: "EndpointKeys"
summary: "An instance of this class provides access to all the operations defined in Endpoint<wbr>Keys."
syntax: "public interface EndpointKeys"
methods:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.getKeys()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.getKeys()"
  name: "getKeys()"
  nameWithType: "EndpointKeys.getKeys()"
  summary: "Gets endpoint keys for an endpoint."
  modifiers:
  - "abstract"
  syntax: "public abstract EndpointKeysDTO getKeys()"
  desc: "Gets endpoint keys for an endpoint."
  returns:
    description: "the EndpointKeysDTO object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO&text=EndpointKeysDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.getKeysAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.getKeysAsync()"
  name: "getKeysAsync()"
  nameWithType: "EndpointKeys.getKeysAsync()"
  summary: "Gets endpoint keys for an endpoint."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<EndpointKeysDTO> getKeysAsync()"
  desc: "Gets endpoint keys for an endpoint."
  returns:
    description: "the observable to the EndpointKeysDTO object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO&text=EndpointKeysDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.refreshKeys(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.refreshKeys(String keyType)"
  name: "refreshKeys(String keyType)"
  nameWithType: "EndpointKeys.refreshKeys(String keyType)"
  summary: "Re-generates an endpoint key."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of Key."
    name: "keyType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EndpointKeysDTO refreshKeys(String keyType)"
  desc: "Re-generates an endpoint key."
  returns:
    description: "the EndpointKeysDTO object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO&text=EndpointKeysDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.refreshKeysAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.EndpointKeys.refreshKeysAsync(String keyType)"
  name: "refreshKeysAsync(String keyType)"
  nameWithType: "EndpointKeys.refreshKeysAsync(String keyType)"
  summary: "Re-generates an endpoint key."
  modifiers:
  - "abstract"
  parameters:
  - description: "Type of Key."
    name: "keyType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EndpointKeysDTO> refreshKeysAsync(String keyType)"
  desc: "Re-generates an endpoint key."
  returns:
    description: "the observable to the EndpointKeysDTO object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EndpointKeysDTO&text=EndpointKeysDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in EndpointKeys."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
