### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Equivalence.doEquivalent*"
fullName: "com.azure.cosmos.implementation.guava25.base.Equivalence<T>.doEquivalent"
name: "doEquivalent"
nameWithType: "Equivalence<T>.doEquivalent"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Equivalence.doEquivalent(T,T)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Equivalence<T>.doEquivalent(T a, T b)"
  name: "doEquivalent(T a, T b)"
  nameWithType: "Equivalence<T>.doEquivalent(T a, T b)"
  summary: "Implemented by the user to determine whether `a` and `b` are considered equivalent, subject to the requirements specified in <xref uid=\"com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#equivalent\"></xref>.\n\nThis method should not be called except by <xref uid=\"com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#equivalent\"></xref>. When <xref uid=\"com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#equivalent\"></xref> calls this method, `a` and `b` are guaranteed to be distinct, non-null instances."
  parameters:
  - name: "a"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - name: "b"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract boolean doEquivalent(T a, T b)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
