### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.toImmutableRangeSet*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet<C>.<E>toImmutableRangeSet"
name: "<E>toImmutableRangeSet"
nameWithType: "ImmutableRangeSet<C>.<E>toImmutableRangeSet"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<E>toImmutableRangeSet()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet<C>.<E>toImmutableRangeSet()"
  name: "<E>toImmutableRangeSet()"
  nameWithType: "ImmutableRangeSet<C>.<E>toImmutableRangeSet()"
  summary: "Returns a `Collector` that accumulates the input elements into a new `ImmutableRangeSet`. As in <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Builder\"></xref>, overlapping ranges are not permitted and adjacent ranges will be merged."
  syntax: "public static Collector<Range<E>,?,ImmutableRangeSet<E>> <E>toImmutableRangeSet()"
  returns:
    type: "<xref href=\"java.util.stream.Collector?alt=java.util.stream.Collector&text=Collector\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;,?,<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet&text=ImmutableRangeSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
