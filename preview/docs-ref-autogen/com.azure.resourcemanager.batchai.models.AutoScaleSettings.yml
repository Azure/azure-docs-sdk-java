### YamlMime:JavaType
uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings"
fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings"
name: "AutoScaleSettings"
nameWithType: "AutoScaleSettings"
summary: "Auto-scale settings for the cluster."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AutoScaleSettings"
constructors:
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.AutoScaleSettings()"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.AutoScaleSettings()"
  name: "AutoScaleSettings()"
  nameWithType: "AutoScaleSettings.AutoScaleSettings()"
  syntax: "public AutoScaleSettings()"
methods:
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.initialNodeCount()"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.initialNodeCount()"
  name: "initialNodeCount()"
  nameWithType: "AutoScaleSettings.initialNodeCount()"
  summary: "Get the initial<wbr>Node<wbr>Count property: The number of compute nodes to allocate on cluster creation."
  syntax: "public Integer initialNodeCount()"
  desc: "Get the initialNodeCount property: The number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0."
  returns:
    description: "the initialNodeCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.maximumNodeCount()"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.maximumNodeCount()"
  name: "maximumNodeCount()"
  nameWithType: "AutoScaleSettings.maximumNodeCount()"
  summary: "Get the maximum<wbr>Node<wbr>Count property: The maximum number of compute nodes the cluster can have."
  syntax: "public int maximumNodeCount()"
  desc: "Get the maximumNodeCount property: The maximum number of compute nodes the cluster can have."
  returns:
    description: "the maximumNodeCount value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.minimumNodeCount()"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.minimumNodeCount()"
  name: "minimumNodeCount()"
  nameWithType: "AutoScaleSettings.minimumNodeCount()"
  summary: "Get the minimum<wbr>Node<wbr>Count property: The minimum number of compute nodes the Batch AI service will try to allocate for the cluster."
  syntax: "public int minimumNodeCount()"
  desc: "Get the minimumNodeCount property: The minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request."
  returns:
    description: "the minimumNodeCount value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.validate()"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.validate()"
  name: "validate()"
  nameWithType: "AutoScaleSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withInitialNodeCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withInitialNodeCount(Integer initialNodeCount)"
  name: "withInitialNodeCount(Integer initialNodeCount)"
  nameWithType: "AutoScaleSettings.withInitialNodeCount(Integer initialNodeCount)"
  summary: "Set the initial<wbr>Node<wbr>Count property: The number of compute nodes to allocate on cluster creation."
  parameters:
  - description: "the initialNodeCount value to set."
    name: "initialNodeCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutoScaleSettings withInitialNodeCount(Integer initialNodeCount)"
  desc: "Set the initialNodeCount property: The number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0."
  returns:
    description: "the AutoScaleSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.AutoScaleSettings?alt=com.azure.resourcemanager.batchai.models.AutoScaleSettings&text=AutoScaleSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withMaximumNodeCount(int)"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withMaximumNodeCount(int maximumNodeCount)"
  name: "withMaximumNodeCount(int maximumNodeCount)"
  nameWithType: "AutoScaleSettings.withMaximumNodeCount(int maximumNodeCount)"
  summary: "Set the maximum<wbr>Node<wbr>Count property: The maximum number of compute nodes the cluster can have."
  parameters:
  - description: "the maximumNodeCount value to set."
    name: "maximumNodeCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutoScaleSettings withMaximumNodeCount(int maximumNodeCount)"
  desc: "Set the maximumNodeCount property: The maximum number of compute nodes the cluster can have."
  returns:
    description: "the AutoScaleSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.AutoScaleSettings?alt=com.azure.resourcemanager.batchai.models.AutoScaleSettings&text=AutoScaleSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withMinimumNodeCount(int)"
  fullName: "com.azure.resourcemanager.batchai.models.AutoScaleSettings.withMinimumNodeCount(int minimumNodeCount)"
  name: "withMinimumNodeCount(int minimumNodeCount)"
  nameWithType: "AutoScaleSettings.withMinimumNodeCount(int minimumNodeCount)"
  summary: "Set the minimum<wbr>Node<wbr>Count property: The minimum number of compute nodes the Batch AI service will try to allocate for the cluster."
  parameters:
  - description: "the minimumNodeCount value to set."
    name: "minimumNodeCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutoScaleSettings withMinimumNodeCount(int minimumNodeCount)"
  desc: "Set the minimumNodeCount property: The minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request."
  returns:
    description: "the AutoScaleSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.AutoScaleSettings?alt=com.azure.resourcemanager.batchai.models.AutoScaleSettings&text=AutoScaleSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Auto-scale settings for the cluster. The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the number of queued and running jobs assigned to the cluster."
metadata: {}
package: "com.azure.resourcemanager.batchai.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
