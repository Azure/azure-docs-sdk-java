### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosContainer"
fullName: "com.azure.cosmos.CosmosContainer"
name: "CosmosContainer"
nameWithType: "CosmosContainer"
summary: "Provides synchronous methods for reading, deleting, and replacing existing Containers Provides methods for interacting with child resources (Items, Scripts, Conflicts)"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosContainer"
methods:
- "com.azure.cosmos.CosmosContainer.<T>createItem(T)"
- "com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.<T>deleteItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readAllItems(com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readAllItems(com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readMany(java.util.List<com.azure.cosmos.implementation.apachecommons.lang.tuple.Pair<java.lang.String,com.azure.cosmos.models.PartitionKey>>,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>readMany(java.util.List<com.azure.cosmos.implementation.apachecommons.lang.tuple.Pair<java.lang.String,com.azure.cosmos.models.PartitionKey>>,java.lang.String,java.lang.Class<T>)"
- "com.azure.cosmos.CosmosContainer.<T>replaceItem(T,java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.<T>upsertItem(T)"
- "com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.delete()"
- "com.azure.cosmos.CosmosContainer.delete(com.azure.cosmos.models.CosmosContainerRequestOptions)"
- "com.azure.cosmos.CosmosContainer.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
- "com.azure.cosmos.CosmosContainer.getId()"
- "com.azure.cosmos.CosmosContainer.getScripts()"
- "com.azure.cosmos.CosmosContainer.read()"
- "com.azure.cosmos.CosmosContainer.read(com.azure.cosmos.models.CosmosContainerRequestOptions)"
- "com.azure.cosmos.CosmosContainer.readThroughput()"
- "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties)"
- "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)"
- "com.azure.cosmos.CosmosContainer.replaceThroughput(com.azure.cosmos.models.ThroughputProperties)"
type: "class"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
