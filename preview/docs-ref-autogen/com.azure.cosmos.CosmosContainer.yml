### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.CosmosContainer
  id: CosmosContainer
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos
  children:
  - com.azure.cosmos.CosmosContainer.<T>createItem(T)
  - com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.CosmosContainer.<T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)
  - com.azure.cosmos.CosmosContainer.<T>replaceItem(T,java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.<T>upsertItem(T)
  - com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.delete()
  - com.azure.cosmos.CosmosContainer.delete(com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.CosmosContainer.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.CosmosContainer.getId()
  - com.azure.cosmos.CosmosContainer.getScripts()
  - com.azure.cosmos.CosmosContainer.read()
  - com.azure.cosmos.CosmosContainer.read(com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.CosmosContainer.readThroughput()
  - com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties)
  - com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.CosmosContainer.replaceThroughput(com.azure.cosmos.models.ThroughputProperties)
  langs:
  - java
  name: CosmosContainer
  nameWithType: CosmosContainer
  fullName: com.azure.cosmos.CosmosContainer
  type: Class
  package: com.azure.cosmos
  summary: Provides synchronous methods for reading, deleting, and replacing existing Containers Provides methods for interacting with child resources (Items, Scripts, Conflicts)
  syntax:
    content: public class CosmosContainer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.CosmosContainer.<T>createItem(T)
  id: <T>createItem(T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>createItem(T item)
  nameWithType: CosmosContainer.<T>createItem(T item)
  fullName: com.azure.cosmos.CosmosContainer.<T>createItem(T item)
  overload: com.azure.cosmos.CosmosContainer.createItem*
  type: Method
  package: com.azure.cosmos
  summary: Creates a new item synchronously and returns its respective Cosmos item response.
  syntax:
    content: public CosmosItemResponse<T> <T>createItem(T item)
    parameters:
    - id: item
      type: T
      description: the item
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response
- uid: com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>createItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>createItem(T item, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.<T>createItem(T item, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.<T>createItem(T item, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.createItem*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options.


    The partition key value will be automatically extracted from the item's content.
  syntax:
    content: public CosmosItemResponse<T> <T>createItem(T item, CosmosItemRequestOptions options)
    parameters:
    - id: item
      type: T
      description: the item.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>createItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>createItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.<T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.<T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.createItem*
  type: Method
  package: com.azure.cosmos
  summary: Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options.
  syntax:
    content: public CosmosItemResponse<T> <T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: item
      type: T
      description: the item.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  id: <T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)
  nameWithType: CosmosContainer.<T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)
  fullName: com.azure.cosmos.CosmosContainer.<T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)
  overload: com.azure.cosmos.CosmosContainer.queryItems*
  type: Method
  package: com.azure.cosmos
  summary: Query items in the current container returning the results as <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<T> <T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)
    parameters:
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
      description: the query spec.
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options.
    - id: classType
      type: java.lang.Class<T>
      description: the class type.
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<T>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
- uid: com.azure.cosmos.CosmosContainer.<T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  id: <T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)
  nameWithType: CosmosContainer.<T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)
  fullName: com.azure.cosmos.CosmosContainer.<T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)
  overload: com.azure.cosmos.CosmosContainer.queryItems*
  type: Method
  package: com.azure.cosmos
  summary: Query items in the current container returning the results as <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<T> <T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)
    parameters:
    - id: query
      type: java.lang.String
      description: the query.
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options.
    - id: classType
      type: java.lang.Class<T>
      description: the class type.
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<T>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
- uid: com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  id: <T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  nameWithType: CosmosContainer.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  fullName: com.azure.cosmos.CosmosContainer.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  overload: com.azure.cosmos.CosmosContainer.readItem*
  type: Method
  package: com.azure.cosmos
  summary: Reads an item in the current container while specifying additional options.
  syntax:
    content: public CosmosItemResponse<T> <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    - id: itemType
      type: java.lang.Class<T>
      description: the class type of item.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)
  id: <T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>readItem(String itemId, PartitionKey partitionKey, Class<T> itemType)
  nameWithType: CosmosContainer.<T>readItem(String itemId, PartitionKey partitionKey, Class<T> itemType)
  fullName: com.azure.cosmos.CosmosContainer.<T>readItem(String itemId, PartitionKey partitionKey, Class<T> itemType)
  overload: com.azure.cosmos.CosmosContainer.readItem*
  type: Method
  package: com.azure.cosmos
  summary: Reads an item in the current container.
  syntax:
    content: public CosmosItemResponse<T> <T>readItem(String itemId, PartitionKey partitionKey, Class<T> itemType)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
    - id: itemType
      type: java.lang.Class<T>
      description: the class type of item.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>replaceItem(T,java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>replaceItem(T,java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.<T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.<T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.replaceItem*
  type: Method
  package: com.azure.cosmos
  summary: Replaces an item in the current container.
  syntax:
    content: public CosmosItemResponse<T> <T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: item
      type: T
      description: the item.
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>upsertItem(T)
  id: <T>upsertItem(T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>upsertItem(T item)
  nameWithType: CosmosContainer.<T>upsertItem(T item)
  fullName: com.azure.cosmos.CosmosContainer.<T>upsertItem(T item)
  overload: com.azure.cosmos.CosmosContainer.upsertItem*
  type: Method
  package: com.azure.cosmos
  summary: Upserts an Cosmos item in the current container.
  syntax:
    content: public CosmosItemResponse<T> <T>upsertItem(T item)
    parameters:
    - id: item
      type: T
      description: the item.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>upsertItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>upsertItem(T item, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.<T>upsertItem(T item, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.<T>upsertItem(T item, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.upsertItem*
  type: Method
  package: com.azure.cosmos
  summary: Upserts a item Cosmos sync item while specifying additional options.
  syntax:
    content: public CosmosItemResponse<T> <T>upsertItem(T item, CosmosItemRequestOptions options)
    parameters:
    - id: item
      type: T
      description: the item.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.<T>upsertItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>upsertItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: <T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.<T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.<T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.upsertItem*
  type: Method
  package: com.azure.cosmos
  summary: Upserts a item Cosmos sync item while specifying additional options.
  syntax:
    content: public CosmosItemResponse<T> <T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: item
      type: T
      description: the item.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partitionKey.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<T>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.CosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)
  id: CosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)
  nameWithType: CosmosContainer.CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)
  fullName: com.azure.cosmos.CosmosContainer.CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)
  overload: com.azure.cosmos.CosmosContainer.CosmosContainer*
  type: Constructor
  package: com.azure.cosmos
  summary: Instantiates a new Cosmos sync container.
  syntax:
    content: " CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
    parameters:
    - id: id
      type: java.lang.String
      description: the container id.
    - id: database
      type: com.azure.cosmos.CosmosDatabase
      description: the database.
    - id: container
      type: com.azure.cosmos.CosmosAsyncContainer
      description: the container.
- uid: com.azure.cosmos.CosmosContainer.delete()
  id: delete()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: delete()
  nameWithType: CosmosContainer.delete()
  fullName: com.azure.cosmos.CosmosContainer.delete()
  overload: com.azure.cosmos.CosmosContainer.delete*
  type: Method
  package: com.azure.cosmos
  summary: Deletes the current cosmos container.
  syntax:
    content: public CosmosContainerResponse delete()
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the cosmos container response.
- uid: com.azure.cosmos.CosmosContainer.delete(com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: delete(com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: delete(CosmosContainerRequestOptions options)
  nameWithType: CosmosContainer.delete(CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.delete(CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.delete*
  type: Method
  package: com.azure.cosmos
  summary: Deletes the current Cosmos container while specifying additional options such as If-Match.
  syntax:
    content: public CosmosContainerResponse delete(CosmosContainerRequestOptions options)
    parameters:
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the cosmos container response.
- uid: com.azure.cosmos.CosmosContainer.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: CosmosContainer.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.deleteItem*
  type: Method
  package: com.azure.cosmos
  summary: Deletes an item in the current container.
  syntax:
    content: public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>
      description: the Cosmos item response.
- uid: com.azure.cosmos.CosmosContainer.getId()
  id: getId()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: getId()
  nameWithType: CosmosContainer.getId()
  fullName: com.azure.cosmos.CosmosContainer.getId()
  overload: com.azure.cosmos.CosmosContainer.getId*
  type: Method
  package: com.azure.cosmos
  summary: Gets the current container id.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: the container id.
- uid: com.azure.cosmos.CosmosContainer.getScripts()
  id: getScripts()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: getScripts()
  nameWithType: CosmosContainer.getScripts()
  fullName: com.azure.cosmos.CosmosContainer.getScripts()
  overload: com.azure.cosmos.CosmosContainer.getScripts*
  type: Method
  package: com.azure.cosmos
  summary: Gets the Cosmos scripts using the current container as context.
  syntax:
    content: public CosmosScripts getScripts()
    return:
      type: com.azure.cosmos.CosmosScripts
      description: the Cosmos sync scripts.
- uid: com.azure.cosmos.CosmosContainer.read()
  id: read()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: read()
  nameWithType: CosmosContainer.read()
  fullName: com.azure.cosmos.CosmosContainer.read()
  overload: com.azure.cosmos.CosmosContainer.read*
  type: Method
  package: com.azure.cosmos
  summary: Reads the current container.
  syntax:
    content: public CosmosContainerResponse read()
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the Cosmos container response with the read container.
- uid: com.azure.cosmos.CosmosContainer.read(com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: read(com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: read(CosmosContainerRequestOptions options)
  nameWithType: CosmosContainer.read(CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.read(CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.read*
  type: Method
  package: com.azure.cosmos
  summary: Reads the current container while specifying additional options such as If-Match.
  syntax:
    content: public CosmosContainerResponse read(CosmosContainerRequestOptions options)
    parameters:
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the Cosmos container response.
- uid: com.azure.cosmos.CosmosContainer.readThroughput()
  id: readThroughput()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: readThroughput()
  nameWithType: CosmosContainer.readThroughput()
  fullName: com.azure.cosmos.CosmosContainer.readThroughput()
  overload: com.azure.cosmos.CosmosContainer.readThroughput*
  type: Method
  package: com.azure.cosmos
  summary: Gets the throughput for the current container.
  syntax:
    content: public ThroughputResponse readThroughput()
    return:
      type: com.azure.cosmos.models.ThroughputResponse
      description: the throughput response.
- uid: com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties)
  id: replace(com.azure.cosmos.models.CosmosContainerProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: replace(CosmosContainerProperties containerProperties)
  nameWithType: CosmosContainer.replace(CosmosContainerProperties containerProperties)
  fullName: com.azure.cosmos.CosmosContainer.replace(CosmosContainerProperties containerProperties)
  overload: com.azure.cosmos.CosmosContainer.replace*
  type: Method
  package: com.azure.cosmos
  summary: Replaces the current container properties.
  syntax:
    content: public CosmosContainerResponse replace(CosmosContainerProperties containerProperties)
    parameters:
    - id: containerProperties
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the container properties.
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the cosmos container response.
- uid: com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: replace(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)
  nameWithType: CosmosContainer.replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.CosmosContainer.replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.CosmosContainer.replace*
  type: Method
  package: com.azure.cosmos
  summary: Replaces the current container properties while specifying additional options such as If-Match.
  syntax:
    content: public CosmosContainerResponse replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)
    parameters:
    - id: containerProperties
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the container properties.
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
      description: the options.
    return:
      type: com.azure.cosmos.models.CosmosContainerResponse
      description: the cosmos container response.
- uid: com.azure.cosmos.CosmosContainer.replaceThroughput(com.azure.cosmos.models.ThroughputProperties)
  id: replaceThroughput(com.azure.cosmos.models.ThroughputProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosContainer
  langs:
  - java
  name: replaceThroughput(ThroughputProperties throughputProperties)
  nameWithType: CosmosContainer.replaceThroughput(ThroughputProperties throughputProperties)
  fullName: com.azure.cosmos.CosmosContainer.replaceThroughput(ThroughputProperties throughputProperties)
  overload: com.azure.cosmos.CosmosContainer.replaceThroughput*
  type: Method
  package: com.azure.cosmos
  summary: Sets the throughput for the current container.
  syntax:
    content: public ThroughputResponse replaceThroughput(ThroughputProperties throughputProperties)
    parameters:
    - id: throughputProperties
      type: com.azure.cosmos.models.ThroughputProperties
      description: the throughput properties.
    return:
      type: com.azure.cosmos.models.ThroughputResponse
      description: the throughput response.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.CosmosDatabase
  name: CosmosDatabase
  nameWithType: CosmosDatabase
  fullName: com.azure.cosmos.CosmosDatabase
- uid: com.azure.cosmos.CosmosAsyncContainer
  name: CosmosAsyncContainer
  nameWithType: CosmosAsyncContainer
  fullName: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.CosmosContainer.CosmosContainer*
  name: CosmosContainer
  nameWithType: CosmosContainer.CosmosContainer
  fullName: com.azure.cosmos.CosmosContainer.CosmosContainer
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosContainer.getId*
  name: getId
  nameWithType: CosmosContainer.getId
  fullName: com.azure.cosmos.CosmosContainer.getId
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosContainerResponse
  name: CosmosContainerResponse
  nameWithType: CosmosContainerResponse
  fullName: com.azure.cosmos.models.CosmosContainerResponse
- uid: com.azure.cosmos.CosmosContainer.read*
  name: read
  nameWithType: CosmosContainer.read
  fullName: com.azure.cosmos.CosmosContainer.read
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosContainerRequestOptions
  name: CosmosContainerRequestOptions
  nameWithType: CosmosContainerRequestOptions
  fullName: com.azure.cosmos.models.CosmosContainerRequestOptions
- uid: com.azure.cosmos.CosmosContainer.delete*
  name: delete
  nameWithType: CosmosContainer.delete
  fullName: com.azure.cosmos.CosmosContainer.delete
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosContainerProperties
  name: CosmosContainerProperties
  nameWithType: CosmosContainerProperties
  fullName: com.azure.cosmos.models.CosmosContainerProperties
- uid: com.azure.cosmos.CosmosContainer.replace*
  name: replace
  nameWithType: CosmosContainer.replace
  fullName: com.azure.cosmos.CosmosContainer.replace
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.ThroughputProperties
  name: ThroughputProperties
  nameWithType: ThroughputProperties
  fullName: com.azure.cosmos.models.ThroughputProperties
- uid: com.azure.cosmos.models.ThroughputResponse
  name: ThroughputResponse
  nameWithType: ThroughputResponse
  fullName: com.azure.cosmos.models.ThroughputResponse
- uid: com.azure.cosmos.CosmosContainer.replaceThroughput*
  name: replaceThroughput
  nameWithType: CosmosContainer.replaceThroughput
  fullName: com.azure.cosmos.CosmosContainer.replaceThroughput
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosContainer.readThroughput*
  name: readThroughput
  nameWithType: CosmosContainer.readThroughput
  fullName: com.azure.cosmos.CosmosContainer.readThroughput
  package: com.azure.cosmos
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.models.CosmosItemResponse<T>
  spec.java:
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosContainer.createItem*
  name: <T>createItem
  nameWithType: CosmosContainer.<T>createItem
  fullName: com.azure.cosmos.CosmosContainer.<T>createItem
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.PartitionKey
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: com.azure.cosmos.models.PartitionKey
- uid: com.azure.cosmos.models.CosmosItemRequestOptions
  name: CosmosItemRequestOptions
  nameWithType: CosmosItemRequestOptions
  fullName: com.azure.cosmos.models.CosmosItemRequestOptions
- uid: com.azure.cosmos.CosmosContainer.upsertItem*
  name: <T>upsertItem
  nameWithType: CosmosContainer.<T>upsertItem
  fullName: com.azure.cosmos.CosmosContainer.<T>upsertItem
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.util.CosmosPagedIterable<T>
  spec.java:
  - uid: com.azure.cosmos.util.CosmosPagedIterable
    name: CosmosPagedIterable
    fullName: com.azure.cosmos.util.CosmosPagedIterable
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosContainer.queryItems*
  name: <T>queryItems
  nameWithType: CosmosContainer.<T>queryItems
  fullName: com.azure.cosmos.CosmosContainer.<T>queryItems
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: com.azure.cosmos.CosmosContainer.readItem*
  name: <T>readItem
  nameWithType: CosmosContainer.<T>readItem
  fullName: com.azure.cosmos.CosmosContainer.<T>readItem
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosContainer.replaceItem*
  name: <T>replaceItem
  nameWithType: CosmosContainer.<T>replaceItem
  fullName: com.azure.cosmos.CosmosContainer.<T>replaceItem
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>
  spec.java:
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosContainer.deleteItem*
  name: deleteItem
  nameWithType: CosmosContainer.deleteItem
  fullName: com.azure.cosmos.CosmosContainer.deleteItem
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosScripts
  name: CosmosScripts
  nameWithType: CosmosScripts
  fullName: com.azure.cosmos.CosmosScripts
- uid: com.azure.cosmos.CosmosContainer.getScripts*
  name: getScripts
  nameWithType: CosmosContainer.getScripts
  fullName: com.azure.cosmos.CosmosContainer.getScripts
  package: com.azure.cosmos
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.models.CosmosItemResponse
  name: CosmosItemResponse
  nameWithType: CosmosItemResponse
  fullName: com.azure.cosmos.models.CosmosItemResponse
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.azure.cosmos.util.CosmosPagedIterable
  name: CosmosPagedIterable
  nameWithType: CosmosPagedIterable
  fullName: com.azure.cosmos.util.CosmosPagedIterable
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
