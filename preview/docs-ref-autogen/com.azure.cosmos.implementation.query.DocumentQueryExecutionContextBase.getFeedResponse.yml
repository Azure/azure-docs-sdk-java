### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse*"
fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedResponse"
name: "getFeedResponse"
nameWithType: "DocumentQueryExecutionContextBase<T>.getFeedResponse"
members:
- uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse(reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>)"
  fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedResponse(Mono<RxDocumentServiceResponse> response)"
  name: "getFeedResponse(Mono<RxDocumentServiceResponse> response)"
  nameWithType: "DocumentQueryExecutionContextBase<T>.getFeedResponse(Mono<RxDocumentServiceResponse> response)"
  parameters:
  - name: "response"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected Mono<FeedResponse<T>> getFeedResponse(Mono<RxDocumentServiceResponse> response)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
