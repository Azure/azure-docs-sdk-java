### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor"
fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor"
name: "SignalGateProcessor"
nameWithType: "SignalGateProcessor"
summary: "A signal gate determines when to block (gate) incoming media, and when to allow it through. It gathers input events over the activationEvaluationWindow, and determines whether to open or close the gate. See https://aka.ms/ava-signalgate for more information."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase.getInputs()"
- "com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SignalGateProcessor extends ProcessorNodeBase"
constructors:
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.SignalGateProcessor(java.lang.String,java.util.List<com.azure.media.videoanalyzer.edge.models.NodeInput>)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.SignalGateProcessor(String name, List<NodeInput> inputs)"
  name: "SignalGateProcessor(String name, List<NodeInput> inputs)"
  nameWithType: "SignalGateProcessor.SignalGateProcessor(String name, List<NodeInput> inputs)"
  summary: "Creates an instance of SignalGateProcessor class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the inputs value to set."
    name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.media.videoanalyzer.edge.models.NodeInput?alt=com.azure.media.videoanalyzer.edge.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SignalGateProcessor(String name, List<NodeInput> inputs)"
methods:
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getActivationEvaluationWindow()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getActivationEvaluationWindow()"
  name: "getActivationEvaluationWindow()"
  nameWithType: "SignalGateProcessor.getActivationEvaluationWindow()"
  summary: "Get the activationEvaluationWindow property: The period of time over which the gate gathers input events before evaluating them."
  syntax: "public String getActivationEvaluationWindow()"
  returns:
    description: "the activationEvaluationWindow value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getActivationSignalOffset()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getActivationSignalOffset()"
  name: "getActivationSignalOffset()"
  nameWithType: "SignalGateProcessor.getActivationSignalOffset()"
  summary: "Get the activationSignalOffset property: Signal offset once the gate is activated (can be negative). It determines the how much farther behind of after the signal will be let through based on the activation time. A negative offset indicates that data prior the activation time must be included on the signal that is let through, once the gate is activated. When used upstream of a file or video sink, this allows for scenarios such as recording buffered media prior an event, such as: record video 5 seconds prior motions is detected."
  syntax: "public String getActivationSignalOffset()"
  returns:
    description: "the activationSignalOffset value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getMaximumActivationTime()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getMaximumActivationTime()"
  name: "getMaximumActivationTime()"
  nameWithType: "SignalGateProcessor.getMaximumActivationTime()"
  summary: "Get the maximumActivationTime property: The maximum period for which the gate remains open in the presence of subsequent triggers (events). When used upstream of a file or video sink, it determines the maximum length of the recorded video clip."
  syntax: "public String getMaximumActivationTime()"
  returns:
    description: "the maximumActivationTime value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getMinimumActivationTime()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.getMinimumActivationTime()"
  name: "getMinimumActivationTime()"
  nameWithType: "SignalGateProcessor.getMinimumActivationTime()"
  summary: "Get the minimumActivationTime property: The minimum period for which the gate remains open in the absence of subsequent triggers (events). When used upstream of a file or video sink, it determines the minimum length of the recorded video clip."
  syntax: "public String getMinimumActivationTime()"
  returns:
    description: "the minimumActivationTime value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setActivationEvaluationWindow(java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setActivationEvaluationWindow(String activationEvaluationWindow)"
  name: "setActivationEvaluationWindow(String activationEvaluationWindow)"
  nameWithType: "SignalGateProcessor.setActivationEvaluationWindow(String activationEvaluationWindow)"
  summary: "Set the activationEvaluationWindow property: The period of time over which the gate gathers input events before evaluating them."
  parameters:
  - description: "the activationEvaluationWindow value to set."
    name: "activationEvaluationWindow"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalGateProcessor setActivationEvaluationWindow(String activationEvaluationWindow)"
  returns:
    description: "the SignalGateProcessor object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.SignalGateProcessor?alt=com.azure.media.videoanalyzer.edge.models.SignalGateProcessor&text=SignalGateProcessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setActivationSignalOffset(java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setActivationSignalOffset(String activationSignalOffset)"
  name: "setActivationSignalOffset(String activationSignalOffset)"
  nameWithType: "SignalGateProcessor.setActivationSignalOffset(String activationSignalOffset)"
  summary: "Set the activationSignalOffset property: Signal offset once the gate is activated (can be negative). It determines the how much farther behind of after the signal will be let through based on the activation time. A negative offset indicates that data prior the activation time must be included on the signal that is let through, once the gate is activated. When used upstream of a file or video sink, this allows for scenarios such as recording buffered media prior an event, such as: record video 5 seconds prior motions is detected."
  parameters:
  - description: "the activationSignalOffset value to set."
    name: "activationSignalOffset"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalGateProcessor setActivationSignalOffset(String activationSignalOffset)"
  returns:
    description: "the SignalGateProcessor object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.SignalGateProcessor?alt=com.azure.media.videoanalyzer.edge.models.SignalGateProcessor&text=SignalGateProcessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setMaximumActivationTime(java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setMaximumActivationTime(String maximumActivationTime)"
  name: "setMaximumActivationTime(String maximumActivationTime)"
  nameWithType: "SignalGateProcessor.setMaximumActivationTime(String maximumActivationTime)"
  summary: "Set the maximumActivationTime property: The maximum period for which the gate remains open in the presence of subsequent triggers (events). When used upstream of a file or video sink, it determines the maximum length of the recorded video clip."
  parameters:
  - description: "the maximumActivationTime value to set."
    name: "maximumActivationTime"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalGateProcessor setMaximumActivationTime(String maximumActivationTime)"
  returns:
    description: "the SignalGateProcessor object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.SignalGateProcessor?alt=com.azure.media.videoanalyzer.edge.models.SignalGateProcessor&text=SignalGateProcessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setMinimumActivationTime(java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SignalGateProcessor.setMinimumActivationTime(String minimumActivationTime)"
  name: "setMinimumActivationTime(String minimumActivationTime)"
  nameWithType: "SignalGateProcessor.setMinimumActivationTime(String minimumActivationTime)"
  summary: "Set the minimumActivationTime property: The minimum period for which the gate remains open in the absence of subsequent triggers (events). When used upstream of a file or video sink, it determines the minimum length of the recorded video clip."
  parameters:
  - description: "the minimumActivationTime value to set."
    name: "minimumActivationTime"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalGateProcessor setMinimumActivationTime(String minimumActivationTime)"
  returns:
    description: "the SignalGateProcessor object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.SignalGateProcessor?alt=com.azure.media.videoanalyzer.edge.models.SignalGateProcessor&text=SignalGateProcessor\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.6
