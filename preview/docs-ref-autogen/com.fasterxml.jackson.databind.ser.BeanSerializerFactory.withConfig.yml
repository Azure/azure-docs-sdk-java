### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig*"
fullName: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig"
name: "withConfig"
nameWithType: "BeanSerializerFactory.withConfig"
members:
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(SerializerFactoryConfig config)"
  name: "withConfig(SerializerFactoryConfig config)"
  nameWithType: "BeanSerializerFactory.withConfig(SerializerFactoryConfig config)"
  summary: "Method used by module registration functionality, to attach additional serializer providers into this serializer factory. This is typically handled by constructing a new instance with additional serializers, to ensure thread-safe access."
  overridden: "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig?alt=com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig&text=SerializerFactoryConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SerializerFactory withConfig(SerializerFactoryConfig config)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.SerializerFactory?alt=com.fasterxml.jackson.databind.ser.SerializerFactory&text=SerializerFactory\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
