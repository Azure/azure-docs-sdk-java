### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cognitiveservices.implementation.ResourceProvidersClientImpl.checkDomainAvailability*"
fullName: "com.azure.resourcemanager.cognitiveservices.implementation.ResourceProvidersClientImpl.checkDomainAvailability"
name: "checkDomainAvailability"
nameWithType: "ResourceProvidersClientImpl.checkDomainAvailability"
members:
- uid: "com.azure.resourcemanager.cognitiveservices.implementation.ResourceProvidersClientImpl.checkDomainAvailability(com.azure.resourcemanager.cognitiveservices.models.CheckDomainAvailabilityParameter)"
  fullName: "com.azure.resourcemanager.cognitiveservices.implementation.ResourceProvidersClientImpl.checkDomainAvailability(CheckDomainAvailabilityParameter parameters)"
  name: "checkDomainAvailability(CheckDomainAvailabilityParameter parameters)"
  nameWithType: "ResourceProvidersClientImpl.checkDomainAvailability(CheckDomainAvailabilityParameter parameters)"
  summary: "Check whether a domain is available."
  parameters:
  - description: "Check Domain Availability parameter."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.CheckDomainAvailabilityParameter?alt=com.azure.resourcemanager.cognitiveservices.models.CheckDomainAvailabilityParameter&text=CheckDomainAvailabilityParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckDomainAvailabilityResultInner checkDomainAvailability(CheckDomainAvailabilityParameter parameters)"
  returns:
    description: "check Domain availability result."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.fluent.models.CheckDomainAvailabilityResultInner?alt=com.azure.resourcemanager.cognitiveservices.fluent.models.CheckDomainAvailabilityResultInner&text=CheckDomainAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cognitiveservices.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-cognitiveservices:1.0.0-beta.1
