### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset<E>.<E>create"
name: "<E>create"
nameWithType: "ConcurrentHashMultiset<E>.<E>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset.<E>create()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset<E>.<E>create()"
  name: "<E>create()"
  nameWithType: "ConcurrentHashMultiset<E>.<E>create()"
  summary: "Creates a new, empty `ConcurrentHashMultiset` using the default initial capacity, load factor, and concurrency settings."
  syntax: "public static ConcurrentHashMultiset<E> <E>create()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset&text=ConcurrentHashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset.<E>create(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset<E>.<E>create(Iterable<? extends E> elements)"
  name: "<E>create(Iterable<? extends E> elements)"
  nameWithType: "ConcurrentHashMultiset<E>.<E>create(Iterable<? extends E> elements)"
  summary: "Creates a new `ConcurrentHashMultiset` containing the specified elements, using the default initial capacity, load factor, and concurrency settings.\n\nThis implementation is highly efficient when `elements` is itself a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multiset\"></xref>."
  parameters:
  - description: "the elements that the multiset should contain"
    name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ConcurrentHashMultiset<E> <E>create(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset&text=ConcurrentHashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset.<E>create(java.util.concurrent.ConcurrentMap<E,java.util.concurrent.atomic.AtomicInteger>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset<E>.<E>create(ConcurrentMap<E,AtomicInteger> countMap)"
  name: "<E>create(ConcurrentMap<E,AtomicInteger> countMap)"
  nameWithType: "ConcurrentHashMultiset<E>.<E>create(ConcurrentMap<E,AtomicInteger> countMap)"
  summary: "Creates a new, empty `ConcurrentHashMultiset` using `countMap` as the internal backing map.\n\nThis instance will assume ownership of `countMap`, and other code should not maintain references to the map or modify it in any way.\n\nThe returned multiset is serializable if the input map is."
  parameters:
  - description: "backing map for storing the elements in the multiset and their counts. It must\n     be empty."
    name: "countMap"
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.concurrent.atomic.AtomicInteger?alt=java.util.concurrent.atomic.AtomicInteger&text=AtomicInteger\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ConcurrentHashMultiset<E> <E>create(ConcurrentMap<E,AtomicInteger> countMap)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ConcurrentHashMultiset&text=ConcurrentHashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
