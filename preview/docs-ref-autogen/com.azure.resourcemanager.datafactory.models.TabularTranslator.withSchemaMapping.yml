### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.TabularTranslator.withSchemaMapping*"
fullName: "com.azure.resourcemanager.datafactory.models.TabularTranslator.withSchemaMapping"
name: "withSchemaMapping"
nameWithType: "TabularTranslator.withSchemaMapping"
members:
- uid: "com.azure.resourcemanager.datafactory.models.TabularTranslator.withSchemaMapping(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.TabularTranslator.withSchemaMapping(Object schemaMapping)"
  name: "withSchemaMapping(Object schemaMapping)"
  nameWithType: "TabularTranslator.withSchemaMapping(Object schemaMapping)"
  summary: "Set the schemaMapping property: The schema mapping to map between tabular data and hierarchical data. Example: \\{\"Column1\": \"$.Column1\", \"Column2\": \"$.Column2.Property1\", \"Column3\": \"$.Column2.Property2\"\\}. Type: object (or Expression with resultType object). This property will be retired. Please use mappings property."
  parameters:
  - description: "the schemaMapping value to set."
    name: "schemaMapping"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TabularTranslator withSchemaMapping(Object schemaMapping)"
  returns:
    description: "the TabularTranslator object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TabularTranslator?alt=com.azure.resourcemanager.datafactory.models.TabularTranslator&text=TabularTranslator\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
