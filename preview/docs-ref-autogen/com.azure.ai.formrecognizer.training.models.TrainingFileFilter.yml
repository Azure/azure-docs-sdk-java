### YamlMime:ManagedReference
items:
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  id: TrainingFileFilter
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models
  children:
  - com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter()
  - com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix()
  - com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded()
  - com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix(java.lang.String)
  - com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded(boolean)
  langs:
  - java
  name: TrainingFileFilter
  nameWithType: TrainingFileFilter
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  type: Class
  package: com.azure.ai.formrecognizer.training.models
  summary: The TrainingFileFilter model.
  syntax:
    content: public final class TrainingFileFilter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter()
  id: TrainingFileFilter()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  langs:
  - java
  name: TrainingFileFilter()
  nameWithType: TrainingFileFilter.TrainingFileFilter()
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter()
  overload: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter*
  type: Constructor
  package: com.azure.ai.formrecognizer.training.models
  syntax:
    content: public TrainingFileFilter()
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix()
  id: getPrefix()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  langs:
  - java
  name: getPrefix()
  nameWithType: TrainingFileFilter.getPrefix()
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix()
  overload: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix*
  type: Method
  package: com.azure.ai.formrecognizer.training.models
  summary: Get the case-sensitive prefix string to filter documents in the source path for training.
  syntax:
    content: public String getPrefix()
    return:
      type: java.lang.String
      description: the case-sensitive prefix string to filter documents for training.
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded()
  id: isSubfoldersIncluded()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  langs:
  - java
  name: isSubfoldersIncluded()
  nameWithType: TrainingFileFilter.isSubfoldersIncluded()
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded()
  overload: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded*
  type: Method
  package: com.azure.ai.formrecognizer.training.models
  summary: Get the flag to indicate if sub folders within the set of prefix folders will also need to be included when searching for content to be preprocessed. Not supported if training with labels.
  syntax:
    content: public Boolean isSubfoldersIncluded()
    return:
      type: java.lang.Boolean
      description: the includeSubfolders value.
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix(java.lang.String)
  id: setPrefix(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  langs:
  - java
  name: setPrefix(String prefix)
  nameWithType: TrainingFileFilter.setPrefix(String prefix)
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix(String prefix)
  overload: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix*
  type: Method
  package: com.azure.ai.formrecognizer.training.models
  summary: Set the case-sensitive prefix string to filter documents in the source path for training.
  syntax:
    content: public TrainingFileFilter setPrefix(String prefix)
    parameters:
    - id: prefix
      type: java.lang.String
      description: the prefix value to set.
    return:
      type: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
      description: the TrainingFileFilter object itself.
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded(boolean)
  id: setSubfoldersIncluded(boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
  parent: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
  langs:
  - java
  name: setSubfoldersIncluded(boolean includeSubfolders)
  nameWithType: TrainingFileFilter.setSubfoldersIncluded(boolean includeSubfolders)
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded(boolean includeSubfolders)
  overload: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded*
  type: Method
  package: com.azure.ai.formrecognizer.training.models
  summary: Set the includeSubfolders flag to indicate if sub folders are also to be included when searching for content to be preprocessed. Not supported if training with labels.
  syntax:
    content: public TrainingFileFilter setSubfoldersIncluded(boolean includeSubfolders)
    parameters:
    - id: includeSubfolders
      type: boolean
      description: the includeSubfolders value to set.
    return:
      type: com.azure.ai.formrecognizer.training.models.TrainingFileFilter
      description: the TrainingFileFilter object itself.
references:
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter*
  name: TrainingFileFilter
  nameWithType: TrainingFileFilter.TrainingFileFilter
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.TrainingFileFilter
  package: com.azure.ai.formrecognizer.training.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix*
  name: getPrefix
  nameWithType: TrainingFileFilter.getPrefix
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.getPrefix
  package: com.azure.ai.formrecognizer.training.models
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix*
  name: setPrefix
  nameWithType: TrainingFileFilter.setPrefix
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setPrefix
  package: com.azure.ai.formrecognizer.training.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded*
  name: isSubfoldersIncluded
  nameWithType: TrainingFileFilter.isSubfoldersIncluded
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.isSubfoldersIncluded
  package: com.azure.ai.formrecognizer.training.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded*
  name: setSubfoldersIncluded
  nameWithType: TrainingFileFilter.setSubfoldersIncluded
  fullName: com.azure.ai.formrecognizer.training.models.TrainingFileFilter.setSubfoldersIncluded
  package: com.azure.ai.formrecognizer.training.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
