### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  id: MapperConfigBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg
  children:
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.EMPTY_OVERRIDE
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.BaseSettings)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.ContextAttributes)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,int)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._attributes
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._configOverrides
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._mixIns
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootName
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootNames
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._subtypeResolver
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._view
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._withBase(com.fasterxml.jackson.databind.cfg.BaseSettings)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase._withMapperFeatures(int)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.copy()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.findMixInClassFor(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getActiveView()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getAttributes()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getConfigOverride(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyFormat(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultSetterInfo()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getFullRootName()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getRootName()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.getSubtypeResolver()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.mixInCount()
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.type.TypeFactory)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.text.DateFormat)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.Locale)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.TimeZone)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttribute(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttributes(java.util.Map<?,?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName(java.lang.String)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withView(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.without(com.fasterxml.jackson.databind.MapperFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperConfigBase.withoutAttribute(java.lang.Object)
  langs:
  - java
  name: MapperConfigBase<CFG,T>
  nameWithType: MapperConfigBase<CFG,T>
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
  type: Class
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public abstract class MapperConfigBase<CFG,T> extends MapperConfig<T> implements Serializable
    typeParameters:
    - id: CFG
    - id: T
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.cfg.MapperConfig
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.cfg.MapperConfig.<F>collectFeatureDefaults(java.lang.Class<F>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.canOverrideAccessModifiers()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.compileString(java.lang.String)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.findConfigOverride(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getActiveView()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getAnnotationIntrospector()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getAttributes()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getBase64Variant()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getClassIntrospector()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getConfigOverride(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDateFormat()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyFormat(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultSetterInfo()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getHandlerInstantiator()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getLocale()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getPropertyNamingStrategy()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getSubtypeResolver()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getTimeZone()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.getTypeFactory()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.hasMapperFeatures(int)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.isAnnotationProcessingEnabled()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.shouldSortPropertiesAlphabetically()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>>)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.useRootWrapping()
  - com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperConfig.without(com.fasterxml.jackson.databind.MapperFeature...)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.EMPTY_OVERRIDE
  id: EMPTY_OVERRIDE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: EMPTY_OVERRIDE
  nameWithType: MapperConfigBase<CFG,T>.EMPTY_OVERRIDE
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.EMPTY_OVERRIDE
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected static final ConfigOverride EMPTY_OVERRIDE
    return:
      type: com.fasterxml.jackson.databind.cfg.ConfigOverride
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(BaseSettings base, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(BaseSettings base, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(BaseSettings base, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  summary: Constructor used when creating a new instance (compared to that of creating fluent copies)
  syntax:
    content: protected MapperConfigBase(BaseSettings base, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.cfg.BaseSettings
    - id: str
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
    - id: mixins
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
    - id: rootNames
      type: com.fasterxml.jackson.databind.util.RootNameLookup
    - id: configOverrides
      type: com.fasterxml.jackson.databind.cfg.ConfigOverrides
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  summary: Pass-through constructor used when no changes are needed to the base class.
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.PropertyName)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, PropertyName rootName)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, PropertyName rootName)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, PropertyName rootName)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, PropertyName rootName)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: rootName
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.BaseSettings)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.BaseSettings)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, BaseSettings base)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, BaseSettings base)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, BaseSettings base)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, BaseSettings base)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: base
      type: com.fasterxml.jackson.databind.cfg.BaseSettings
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.ContextAttributes)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.cfg.ContextAttributes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, ContextAttributes attr)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, ContextAttributes attr)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, ContextAttributes attr)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, ContextAttributes attr)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: attr
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, SimpleMixInResolver mixins)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SimpleMixInResolver mixins)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SimpleMixInResolver mixins)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, SimpleMixInResolver mixins)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: mixins
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: str
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  summary: Copy constructor usually called to make a copy for use by ObjectMapper that is copied.
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, SubtypeResolver str, SimpleMixInResolver mixins, RootNameLookup rootNames, ConfigOverrides configOverrides)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: str
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
    - id: mixins
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
    - id: rootNames
      type: com.fasterxml.jackson.databind.util.RootNameLookup
    - id: configOverrides
      type: com.fasterxml.jackson.databind.cfg.ConfigOverrides
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,int)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, int mapperFeatures)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, int mapperFeatures)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, int mapperFeatures)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, int mapperFeatures)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: mapperFeatures
      type: int
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,java.lang.Class<?>)
  id: MapperConfigBase(com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: MapperConfigBase(MapperConfigBase<CFG,T> src, Class<?> view)
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, Class<?> view)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase(MapperConfigBase<CFG,T> src, Class<?> view)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperConfigBase(MapperConfigBase<CFG,T> src, Class<?> view)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
    - id: view
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._attributes
  id: _attributes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _attributes
  nameWithType: MapperConfigBase<CFG,T>._attributes
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._attributes
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: Contextual attributes accessible (get and set) during processing, on per-call basis.
  syntax:
    content: protected final ContextAttributes _attributes
    return:
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._configOverrides
  id: _configOverrides
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _configOverrides
  nameWithType: MapperConfigBase<CFG,T>._configOverrides
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._configOverrides
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: Configuration overrides to apply, keyed by type of property.
  syntax:
    content: protected final ConfigOverrides _configOverrides
    return:
      type: com.fasterxml.jackson.databind.cfg.ConfigOverrides
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._mixIns
  id: _mixIns
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _mixIns
  nameWithType: MapperConfigBase<CFG,T>._mixIns
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._mixIns
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: 'Mix-in annotation mappings to use, if any: immutable, cannot be changed once defined.'
  syntax:
    content: protected final SimpleMixInResolver _mixIns
    return:
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootName
  id: _rootName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _rootName
  nameWithType: MapperConfigBase<CFG,T>._rootName
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._rootName
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: Explicitly defined root name to use, if any; if empty String, will disable root-name wrapping; if null, will use defaults
  syntax:
    content: protected final PropertyName _rootName
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootNames
  id: _rootNames
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _rootNames
  nameWithType: MapperConfigBase<CFG,T>._rootNames
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._rootNames
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Simple cache used for finding out possible root name for root name wrapping.


    Note that instances are stateful (for caching) and as such may need to be copied, and may NOT be demoted down to <xref uid="com.fasterxml.jackson.databind.cfg.BaseSettings" data-throw-if-not-resolved="false">BaseSettings</xref>.
  syntax:
    content: protected final RootNameLookup _rootNames
    return:
      type: com.fasterxml.jackson.databind.util.RootNameLookup
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._subtypeResolver
  id: _subtypeResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _subtypeResolver
  nameWithType: MapperConfigBase<CFG,T>._subtypeResolver
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._subtypeResolver
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Registered concrete subtypes that can be used instead of (or in addition to) ones declared using annotations.


    Note that instances are stateful and as such may need to be copied, and may NOT be demoted down to <xref uid="com.fasterxml.jackson.databind.cfg.BaseSettings" data-throw-if-not-resolved="false">BaseSettings</xref>.
  syntax:
    content: protected final SubtypeResolver _subtypeResolver
    return:
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._view
  id: _view
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _view
  nameWithType: MapperConfigBase<CFG,T>._view
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._view
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  summary: View to use for filtering out properties to serialize or deserialize. Null if none (will also be assigned null if `Object.class` is defined), meaning that all properties are to be included.
  syntax:
    content: protected final Class<?> _view
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withBase(com.fasterxml.jackson.databind.cfg.BaseSettings)
  id: _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _withBase(BaseSettings newBase)
  nameWithType: MapperConfigBase<CFG,T>._withBase(BaseSettings newBase)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._withBase(BaseSettings newBase)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withBase*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected abstract T _withBase(BaseSettings newBase)
    parameters:
    - id: newBase
      type: com.fasterxml.jackson.databind.cfg.BaseSettings
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withMapperFeatures(int)
  id: _withMapperFeatures(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: _withMapperFeatures(int mapperFeatures)
  nameWithType: MapperConfigBase<CFG,T>._withMapperFeatures(int mapperFeatures)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._withMapperFeatures(int mapperFeatures)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withMapperFeatures*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected abstract T _withMapperFeatures(int mapperFeatures)
    parameters:
    - id: mapperFeatures
      type: int
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.copy()
  id: copy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: copy()
  nameWithType: MapperConfigBase<CFG,T>.copy()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.copy()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.copy*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public ClassIntrospector.MixInResolver copy()
    return:
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride(java.lang.Class<?>)
  id: findConfigOverride(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: findConfigOverride(Class<?> type)
  nameWithType: MapperConfigBase<CFG,T>.findConfigOverride(Class<?> type)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findConfigOverride(Class<?> type)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Accessor for finding <xref uid="com.fasterxml.jackson.databind.cfg.ConfigOverride" data-throw-if-not-resolved="false">ConfigOverride</xref> to use for properties of given type, if any exist; or return \`null\` if not.


    Note that only directly associated override is found; no type hierarchy traversal is performed.
  syntax:
    content: public final ConfigOverride findConfigOverride(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.cfg.ConfigOverride
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findMixInClassFor(java.lang.Class<?>)
  id: findMixInClassFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: findMixInClassFor(Class<?> cls)
  nameWithType: MapperConfigBase<CFG,T>.findMixInClassFor(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findMixInClassFor(Class<?> cls)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findMixInClassFor*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method that will check if there are "mix-in" classes (with mix-in annotations) for given class
  syntax:
    content: public final Class<?> findMixInClassFor(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(com.fasterxml.jackson.databind.JavaType)
  id: findRootName(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: findRootName(JavaType rootType)
  nameWithType: MapperConfigBase<CFG,T>.findRootName(JavaType rootType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findRootName(JavaType rootType)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public PropertyName findRootName(JavaType rootType)
    parameters:
    - id: rootType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(java.lang.Class<?>)
  id: findRootName(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: findRootName(Class<?> rawRootType)
  nameWithType: MapperConfigBase<CFG,T>.findRootName(Class<?> rawRootType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findRootName(Class<?> rawRootType)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public PropertyName findRootName(Class<?> rawRootType)
    parameters:
    - id: rawRootType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getActiveView()
  id: getActiveView()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getActiveView()
  nameWithType: MapperConfigBase<CFG,T>.getActiveView()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getActiveView()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getActiveView*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for finding currently active view, if any (null if none)
  syntax:
    content: public final Class<?> getActiveView()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getAttributes()
  id: getAttributes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getAttributes()
  nameWithType: MapperConfigBase<CFG,T>.getAttributes()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getAttributes()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getAttributes*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for accessing per-instance shared (baseline/default) attribute values; these are used as the basis for per-call attributes.
  syntax:
    content: public final ContextAttributes getAttributes()
    return:
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getConfigOverride(java.lang.Class<?>)
  id: getConfigOverride(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getConfigOverride(Class<?> type)
  nameWithType: MapperConfigBase<CFG,T>.getConfigOverride(Class<?> type)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getConfigOverride(Class<?> type)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getConfigOverride*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Accessor for finding <xref uid="com.fasterxml.jackson.databind.cfg.ConfigOverride" data-throw-if-not-resolved="false">ConfigOverride</xref> to use for properties of given type, if any exist; or if none, return an immutable "empty" instance with no overrides.


    Note that only directly associated override is found; no type hierarchy traversal is performed.
  syntax:
    content: public final ConfigOverride getConfigOverride(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.cfg.ConfigOverride
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
  id: getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultInclusion(Class<?> baseType, Class<?> propertyType)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultInclusion(Class<?> baseType, Class<?> propertyType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultInclusion(Class<?> baseType, Class<?> propertyType)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Accessor for default property inclusion to use for serialization, considering possible per-type override for given base type and possible per-type override for given property type.

    NOTE: if no override found, defaults to value returned by <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion()" data-throw-if-not-resolved="false">#getDefaultPropertyInclusion()</xref>.
  syntax:
    content: public final JsonInclude.Value getDefaultInclusion(Class<?> baseType, Class<?> propertyType)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    - id: propertyType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable()
  id: getDefaultMergeable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultMergeable()
  nameWithType: MapperConfigBase<CFG,T>.getDefaultMergeable()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultMergeable()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for the baseline merge info used as the global baseline, not considering possible per-type overrides.
  syntax:
    content: public Boolean getDefaultMergeable()
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable(java.lang.Class<?>)
  id: getDefaultMergeable(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultMergeable(Class<?> baseType)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultMergeable(Class<?> baseType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultMergeable(Class<?> baseType)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for the baseline merge info used for given type, including global defaults if no type-specific overrides defined.
  syntax:
    content: public Boolean getDefaultMergeable(Class<?> baseType)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyFormat(java.lang.Class<?>)
  id: getDefaultPropertyFormat(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultPropertyFormat(Class<?> type)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyFormat(Class<?> type)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyFormat(Class<?> type)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyFormat*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for default format settings to use for serialization (and, to a degree deserialization), considering baseline settings and per-type defaults for given base type (if any).
  syntax:
    content: public final JsonFormat.Value getDefaultPropertyFormat(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>)
  id: getDefaultPropertyIgnorals(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultPropertyIgnorals(Class<?> type)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> type)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> type)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for default property ignorals to use, if any, for given base type, based on config overrides settings (see <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride(java.lang.Class&lt;?&gt;)" data-throw-if-not-resolved="false">#findConfigOverride(Class)</xref>).
  syntax:
    content: public final JsonIgnoreProperties.Value getDefaultPropertyIgnorals(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  id: getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Helper method that may be called to see if there are property ignoral definitions from annotations (via <xref uid="com.fasterxml.jackson.databind.introspect.AnnotatedClass" data-throw-if-not-resolved="false">AnnotatedClass</xref>) or through "config overrides". If both exist, config overrides have precedence over class annotations.
  syntax:
    content: public final JsonIgnoreProperties.Value getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    - id: actualClass
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
    return:
      type: com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion()
  id: getDefaultPropertyInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultPropertyInclusion()
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyInclusion()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyInclusion()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for default property inclusion to use for serialization, used unless overridden by per-type or per-property overrides.
  syntax:
    content: public final JsonInclude.Value getDefaultPropertyInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion(java.lang.Class<?>)
  id: getDefaultPropertyInclusion(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultPropertyInclusion(Class<?> baseType)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyInclusion(Class<?> baseType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyInclusion(Class<?> baseType)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Accessor for default property inclusion to use for serialization, considering possible per-type override for given base type.

    NOTE: if no override found, defaults to value returned by <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion()" data-throw-if-not-resolved="false">#getDefaultPropertyInclusion()</xref>.
  syntax:
    content: public final JsonInclude.Value getDefaultPropertyInclusion(Class<?> baseType)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultSetterInfo()
  id: getDefaultSetterInfo()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultSetterInfo()
  nameWithType: MapperConfigBase<CFG,T>.getDefaultSetterInfo()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultSetterInfo()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultSetterInfo*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for the baseline setter info used as the global baseline, not considering possible per-type overrides.
  syntax:
    content: public final JsonSetter.Value getDefaultSetterInfo()
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker()
  id: getDefaultVisibilityChecker()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultVisibilityChecker()
  nameWithType: MapperConfigBase<CFG,T>.getDefaultVisibilityChecker()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultVisibilityChecker()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for object used for determining whether specific property elements (method, constructors, fields) can be auto-detected based on their visibility (access modifiers). Can be changed to allow different minimum visibility levels for auto-detection. Note that this is the global handler; individual types (classes) can further override active checker used (using <xref uid="com.fasterxml.jackson.annotation.JsonAutoDetect" data-throw-if-not-resolved="false">JsonAutoDetect</xref> annotation)
  syntax:
    content: public final VisibilityChecker<?> getDefaultVisibilityChecker()
    return:
      type: com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  id: getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getDefaultVisibilityChecker(Class<?> baseType, AnnotatedClass actualClass)
  nameWithType: MapperConfigBase<CFG,T>.getDefaultVisibilityChecker(Class<?> baseType, AnnotatedClass actualClass)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultVisibilityChecker(Class<?> baseType, AnnotatedClass actualClass)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for object used for determining whether specific property elements (method, constructors, fields) can be auto-detected based on their visibility (access modifiers). This is based on global defaults (as would be returned by <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker()" data-throw-if-not-resolved="false">#getDefaultVisibilityChecker()</xref>, but then modified by possible class annotation (see <xref uid="com.fasterxml.jackson.annotation.JsonAutoDetect" data-throw-if-not-resolved="false">JsonAutoDetect</xref>) and/or per-type config override (see <xref uid="com.fasterxml.jackson.databind.cfg.ConfigOverride.getVisibility()" data-throw-if-not-resolved="false">ConfigOverride#getVisibility()</xref>).
  syntax:
    content: public final VisibilityChecker<?> getDefaultVisibilityChecker(Class<?> baseType, AnnotatedClass actualClass)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    - id: actualClass
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
    return:
      type: com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getFullRootName()
  id: getFullRootName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getFullRootName()
  nameWithType: MapperConfigBase<CFG,T>.getFullRootName()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getFullRootName()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getFullRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public final PropertyName getFullRootName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getRootName()
  id: getRootName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getRootName()
  nameWithType: MapperConfigBase<CFG,T>.getRootName()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getRootName()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public final String getRootName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getSubtypeResolver()
  id: getSubtypeResolver()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: getSubtypeResolver()
  nameWithType: MapperConfigBase<CFG,T>.getSubtypeResolver()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getSubtypeResolver()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getSubtypeResolver*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Accessor for object used for finding out all reachable subtypes for supertypes; needed when a logical type name is used instead of class name (or custom scheme).
  syntax:
    content: public final SubtypeResolver getSubtypeResolver()
    return:
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.mixInCount()
  id: mixInCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: mixInCount()
  nameWithType: MapperConfigBase<CFG,T>.mixInCount()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.mixInCount()
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.mixInCount*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Test-only method -- does not reflect possibly open-ended set that external mix-in resolver might provide.
  syntax:
    content: public final int mixInCount()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.core.Base64Variant)
  id: with(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(Base64Variant base64)
  nameWithType: MapperConfigBase<CFG,T>.with(Base64Variant base64)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(Base64Variant base64)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different default <xref uid="com.fasterxml.jackson.core.Base64Variant" data-throw-if-not-resolved="false">Base64Variant</xref> to use with base64-encoded binary values.
  syntax:
    content: public final T with(Base64Variant base64)
    parameters:
    - id: base64
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: with(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(AnnotationIntrospector ai)
  nameWithType: MapperConfigBase<CFG,T>.with(AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> to use (replacing old one).


    NOTE: make sure to register new instance with `ObjectMapper` if directly calling this method.
  syntax:
    content: public final T with(AnnotationIntrospector ai)
    parameters:
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature,boolean)
  id: with(com.fasterxml.jackson.databind.MapperFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(MapperFeature feature, boolean state)
  nameWithType: MapperConfigBase<CFG,T>.with(MapperFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(MapperFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public final T with(MapperFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.MapperFeature
    - id: state
      type: boolean
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature...)
  id: with(com.fasterxml.jackson.databind.MapperFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(MapperFeature[] features)
  nameWithType: MapperConfigBase<CFG,T>.with(MapperFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(MapperFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Fluent factory method that will construct and return a new configuration object instance with specified features enabled.
  syntax:
    content: public final T with(MapperFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.MapperFeature[]
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  id: with(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(PropertyNamingStrategy pns)
  nameWithType: MapperConfigBase<CFG,T>.with(PropertyNamingStrategy pns)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(PropertyNamingStrategy pns)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.PropertyNamingStrategy" data-throw-if-not-resolved="false">PropertyNamingStrategy</xref> to use.


    NOTE: make sure to register new instance with `ObjectMapper` if directly calling this method.
  syntax:
    content: public final T with(PropertyNamingStrategy pns)
    parameters:
    - id: pns
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  id: with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(ContextAttributes attrs)
  nameWithType: MapperConfigBase<CFG,T>.with(ContextAttributes attrs)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(ContextAttributes attrs)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing an instance that has specified contextual attributes.
  syntax:
    content: public abstract T with(ContextAttributes attrs)
    parameters:
    - id: attrs
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  id: with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(HandlerInstantiator hi)
  nameWithType: MapperConfigBase<CFG,T>.with(HandlerInstantiator hi)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(HandlerInstantiator hi)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.cfg.HandlerInstantiator" data-throw-if-not-resolved="false">HandlerInstantiator</xref> to use.


    NOTE: make sure to register new instance with `ObjectMapper` if directly calling this method.
  syntax:
    content: public final T with(HandlerInstantiator hi)
    parameters:
    - id: hi
      type: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  id: with(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(ClassIntrospector ci)
  nameWithType: MapperConfigBase<CFG,T>.with(ClassIntrospector ci)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(ClassIntrospector ci)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.introspect.ClassIntrospector" data-throw-if-not-resolved="false">ClassIntrospector</xref> to use.


    NOTE: make sure to register new instance with `ObjectMapper` if directly calling this method.
  syntax:
    content: public final T with(ClassIntrospector ci)
    parameters:
    - id: ci
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  id: with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(SubtypeResolver str)
  nameWithType: MapperConfigBase<CFG,T>.with(SubtypeResolver str)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(SubtypeResolver str)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.jsontype.SubtypeResolver" data-throw-if-not-resolved="false">SubtypeResolver</xref> to use.


    NOTE: make sure to register new instance with `ObjectMapper` if directly calling this method.
  syntax:
    content: public abstract T with(SubtypeResolver str)
    parameters:
    - id: str
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  id: with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(TypeResolverBuilder<?> trb)
  nameWithType: MapperConfigBase<CFG,T>.with(TypeResolverBuilder<?> trb)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TypeResolverBuilder<?> trb)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder" data-throw-if-not-resolved="false">TypeResolverBuilder</xref> to use.
  syntax:
    content: public final T with(TypeResolverBuilder<?> trb)
    parameters:
    - id: trb
      type: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.type.TypeFactory)
  id: with(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(TypeFactory tf)
  nameWithType: MapperConfigBase<CFG,T>.with(TypeFactory tf)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TypeFactory tf)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref> to use.
  syntax:
    content: public final T with(TypeFactory tf)
    parameters:
    - id: tf
      type: com.fasterxml.jackson.databind.type.TypeFactory
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.text.DateFormat)
  id: with(java.text.DateFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(DateFormat df)
  nameWithType: MapperConfigBase<CFG,T>.with(DateFormat df)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(DateFormat df)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different <xref uid="java.text.DateFormat" data-throw-if-not-resolved="false">DateFormat</xref> to use.


    NOTE: non-final since `SerializationConfig` needs to override this
  syntax:
    content: public T with(DateFormat df)
    parameters:
    - id: df
      type: java.text.DateFormat
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.Locale)
  id: with(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(Locale l)
  nameWithType: MapperConfigBase<CFG,T>.with(Locale l)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(Locale l)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different default <xref uid="java.util.Locale" data-throw-if-not-resolved="false">java.util.Locale</xref> to use for formatting.
  syntax:
    content: public final T with(Locale l)
    parameters:
    - id: l
      type: java.util.Locale
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.TimeZone)
  id: with(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: with(TimeZone tz)
  nameWithType: MapperConfigBase<CFG,T>.with(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TimeZone tz)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different default <xref uid="java.util.TimeZone" data-throw-if-not-resolved="false">java.util.TimeZone</xref> to use for formatting of date values.
  syntax:
    content: public final T with(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withAppendedAnnotationIntrospector(AnnotationIntrospector ai)
  nameWithType: MapperConfigBase<CFG,T>.withAppendedAnnotationIntrospector(AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAppendedAnnotationIntrospector(AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAppendedAnnotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with additional <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> appended (as the lowest priority one)
  syntax:
    content: public final T withAppendedAnnotationIntrospector(AnnotationIntrospector ai)
    parameters:
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttribute(java.lang.Object,java.lang.Object)
  id: withAttribute(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withAttribute(Object key, Object value)
  nameWithType: MapperConfigBase<CFG,T>.withAttribute(Object key, Object value)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAttribute(Object key, Object value)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttribute*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing an instance that has specified value for attribute for given key.
  syntax:
    content: public T withAttribute(Object key, Object value)
    parameters:
    - id: key
      type: java.lang.Object
    - id: value
      type: java.lang.Object
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttributes(java.util.Map<?,?>)
  id: withAttributes(java.util.Map<?,?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withAttributes(Map<?,?> attributes)
  nameWithType: MapperConfigBase<CFG,T>.withAttributes(Map<?,?> attributes)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAttributes(Map<?,?> attributes)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttributes*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing an instance that has only specified attributes, removing any attributes that exist before the call.
  syntax:
    content: public T withAttributes(Map<?,?> attributes)
    parameters:
    - id: attributes
      type: java.util.Map<?,?>
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withInsertedAnnotationIntrospector(AnnotationIntrospector ai)
  nameWithType: MapperConfigBase<CFG,T>.withInsertedAnnotationIntrospector(AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withInsertedAnnotationIntrospector(AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withInsertedAnnotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with additional <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> inserted (as the highest priority one)
  syntax:
    content: public final T withInsertedAnnotationIntrospector(AnnotationIntrospector ai)
    parameters:
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName(com.fasterxml.jackson.databind.PropertyName)
  id: withRootName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withRootName(PropertyName rootName)
  nameWithType: MapperConfigBase<CFG,T>.withRootName(PropertyName rootName)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withRootName(PropertyName rootName)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for constructing and returning a new instance with different root name to use (none, if null).


    Note that when a root name is set to a non-Empty String, this will automatically force use of root element wrapping with given name. If empty String passed, will disable root name wrapping; and if null used, will instead use `SerializationFeature` to determine if to use wrapping, and annotation (or default name) for actual root name to use.
  syntax:
    content: public abstract T withRootName(PropertyName rootName)
    parameters:
    - id: rootName
      type: com.fasterxml.jackson.databind.PropertyName
      description: >-
        to use: if null, means "use default" (clear setting);
           if empty String ("") means that no root name wrapping is used;
           otherwise defines root name to use.
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName(java.lang.String)
  id: withRootName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withRootName(String rootName)
  nameWithType: MapperConfigBase<CFG,T>.withRootName(String rootName)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withRootName(String rootName)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public T withRootName(String rootName)
    parameters:
    - id: rootName
      type: java.lang.String
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withView(java.lang.Class<?>)
  id: withView(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withView(Class<?> view)
  nameWithType: MapperConfigBase<CFG,T>.withView(Class<?> view)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withView(Class<?> view)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withView*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing and returning a new instance with different view to use.
  syntax:
    content: public abstract T withView(Class<?> view)
    parameters:
    - id: view
      type: java.lang.Class<?>
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.without(com.fasterxml.jackson.databind.MapperFeature...)
  id: without(com.fasterxml.jackson.databind.MapperFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: without(MapperFeature[] features)
  nameWithType: MapperConfigBase<CFG,T>.without(MapperFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.without(MapperFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.without*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Fluent factory method that will construct and return a new configuration object instance with specified features disabled.
  syntax:
    content: public final T without(MapperFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.MapperFeature[]
    return:
      type: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withoutAttribute(java.lang.Object)
  id: withoutAttribute(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  langs:
  - java
  name: withoutAttribute(Object key)
  nameWithType: MapperConfigBase<CFG,T>.withoutAttribute(Object key)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withoutAttribute(Object key)
  overload: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withoutAttribute*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for constructing an instance that has no value for attribute for given key.
  syntax:
    content: public T withoutAttribute(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: T
references:
- uid: com.fasterxml.jackson.databind.cfg.BaseSettings
  name: BaseSettings
  nameWithType: BaseSettings
  fullName: com.fasterxml.jackson.databind.cfg.BaseSettings
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  name: SubtypeResolver
  nameWithType: SubtypeResolver
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  name: SimpleMixInResolver
  nameWithType: SimpleMixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
- uid: com.fasterxml.jackson.databind.util.RootNameLookup
  name: RootNameLookup
  nameWithType: RootNameLookup
  fullName: com.fasterxml.jackson.databind.util.RootNameLookup
- uid: com.fasterxml.jackson.databind.cfg.ConfigOverrides
  name: ConfigOverrides
  nameWithType: ConfigOverrides
  fullName: com.fasterxml.jackson.databind.cfg.ConfigOverrides
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.MapperConfigBase*
  name: MapperConfigBase
  nameWithType: MapperConfigBase<CFG,T>.MapperConfigBase
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.MapperConfigBase
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase
    name: MapperConfigBase
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase
  - name: <
    fullName: <
  - uid: CFG
    name: CFG
    fullName: CFG
  - name: ','
    fullName: ','
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.ContextAttributes
  name: ContextAttributes
  nameWithType: ContextAttributes
  fullName: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withBase*
  name: _withBase
  nameWithType: MapperConfigBase<CFG,T>._withBase
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._withBase
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase._withMapperFeatures*
  name: _withMapperFeatures
  nameWithType: MapperConfigBase<CFG,T>._withMapperFeatures
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>._withMapperFeatures
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.MapperFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.MapperFeature
    name: MapperFeature
    fullName: com.fasterxml.jackson.databind.MapperFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*
  name: with
  nameWithType: MapperConfigBase<CFG,T>.with
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.without*
  name: without
  nameWithType: MapperConfigBase<CFG,T>.without
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.without
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAppendedAnnotationIntrospector*
  name: withAppendedAnnotationIntrospector
  nameWithType: MapperConfigBase<CFG,T>.withAppendedAnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAppendedAnnotationIntrospector
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withInsertedAnnotationIntrospector*
  name: withInsertedAnnotationIntrospector
  nameWithType: MapperConfigBase<CFG,T>.withInsertedAnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withInsertedAnnotationIntrospector
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector
  name: ClassIntrospector
  nameWithType: ClassIntrospector
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector
- uid: java.util.Map<?,?>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttributes*
  name: withAttributes
  nameWithType: MapperConfigBase<CFG,T>.withAttributes
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAttributes
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withAttribute*
  name: withAttribute
  nameWithType: MapperConfigBase<CFG,T>.withAttribute
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withAttribute
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withoutAttribute*
  name: withoutAttribute
  nameWithType: MapperConfigBase<CFG,T>.withoutAttribute
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withoutAttribute
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
    name: TypeResolverBuilder
    fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  name: HandlerInstantiator
  nameWithType: HandlerInstantiator
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: java.text.DateFormat
  spec.java:
  - uid: java.text.DateFormat
    name: DateFormat
    fullName: java.text.DateFormat
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName*
  name: withRootName
  nameWithType: MapperConfigBase<CFG,T>.withRootName
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withRootName
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.withView*
  name: withView
  nameWithType: MapperConfigBase<CFG,T>.withView
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.withView
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getSubtypeResolver*
  name: getSubtypeResolver
  nameWithType: MapperConfigBase<CFG,T>.getSubtypeResolver
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getSubtypeResolver
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getRootName*
  name: getRootName
  nameWithType: MapperConfigBase<CFG,T>.getRootName
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getRootName
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getFullRootName*
  name: getFullRootName
  nameWithType: MapperConfigBase<CFG,T>.getFullRootName
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getFullRootName
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getActiveView*
  name: getActiveView
  nameWithType: MapperConfigBase<CFG,T>.getActiveView
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getActiveView
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getAttributes*
  name: getAttributes
  nameWithType: MapperConfigBase<CFG,T>.getAttributes
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getAttributes
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.ConfigOverride
  name: ConfigOverride
  nameWithType: ConfigOverride
  fullName: com.fasterxml.jackson.databind.cfg.ConfigOverride
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getConfigOverride*
  name: getConfigOverride
  nameWithType: MapperConfigBase<CFG,T>.getConfigOverride
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getConfigOverride
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride*
  name: findConfigOverride
  nameWithType: MapperConfigBase<CFG,T>.findConfigOverride
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findConfigOverride
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion*
  name: getDefaultPropertyInclusion
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyInclusion
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyInclusion
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultInclusion*
  name: getDefaultInclusion
  nameWithType: MapperConfigBase<CFG,T>.getDefaultInclusion
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultInclusion
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyFormat*
  name: getDefaultPropertyFormat
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyFormat
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyFormat
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value
  name: JsonIgnoreProperties.Value
  nameWithType: JsonIgnoreProperties.Value
  fullName: com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals*
  name: getDefaultPropertyIgnorals
  nameWithType: MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedClass
  name: AnnotatedClass
  nameWithType: AnnotatedClass
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedClass
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker
    name: VisibilityChecker
    fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker*
  name: getDefaultVisibilityChecker
  nameWithType: MapperConfigBase<CFG,T>.getDefaultVisibilityChecker
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultVisibilityChecker
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value
  name: JsonSetter.Value
  nameWithType: JsonSetter.Value
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultSetterInfo*
  name: getDefaultSetterInfo
  nameWithType: MapperConfigBase<CFG,T>.getDefaultSetterInfo
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultSetterInfo
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable*
  name: getDefaultMergeable
  nameWithType: MapperConfigBase<CFG,T>.getDefaultMergeable
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultMergeable
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName*
  name: findRootName
  nameWithType: MapperConfigBase<CFG,T>.findRootName
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findRootName
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.findMixInClassFor*
  name: findMixInClassFor
  nameWithType: MapperConfigBase<CFG,T>.findMixInClassFor
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.findMixInClassFor
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  name: ClassIntrospector.MixInResolver
  nameWithType: ClassIntrospector.MixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.copy*
  name: copy
  nameWithType: MapperConfigBase<CFG,T>.copy
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.copy
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfigBase.mixInCount*
  name: mixInCount
  nameWithType: MapperConfigBase<CFG,T>.mixInCount
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.mixInCount
  package: com.fasterxml.jackson.databind.cfg
- uid: CFG
  name: CFG
  nameWithType: CFG
  fullName: CFG
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<T>
  name: MapperConfig<T>
  nameWithType: MapperConfig<T>
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig<T>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.useRootWrapping()
  name: MapperConfig.useRootWrapping()
  nameWithType: MapperConfig.useRootWrapping()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.useRootWrapping()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable(java.lang.Class<?>)
  name: MapperConfig.getDefaultMergeable(Class<?>)
  nameWithType: MapperConfig.getDefaultMergeable(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable(java.lang.Class<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>)
  name: MapperConfig.getDefaultPropertyInclusion(Class<?>)
  nameWithType: MapperConfig.getDefaultPropertyInclusion(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
  name: MapperConfig.getDefaultTyper(JavaType)
  nameWithType: MapperConfig.getDefaultTyper(JavaType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getHandlerInstantiator()
  name: MapperConfig.getHandlerInstantiator()
  nameWithType: MapperConfig.getHandlerInstantiator()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getHandlerInstantiator()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  name: MapperConfig.getDefaultPropertyIgnorals(Class<?>,AnnotatedClass)
  nameWithType: MapperConfig.getDefaultPropertyIgnorals(Class<?>,AnnotatedClass)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getAnnotationIntrospector()
  name: MapperConfig.getAnnotationIntrospector()
  nameWithType: MapperConfig.getAnnotationIntrospector()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getAnnotationIntrospector()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getClassIntrospector()
  name: MapperConfig.getClassIntrospector()
  nameWithType: MapperConfig.getClassIntrospector()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getClassIntrospector()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
  name: MapperConfig.getDefaultInclusion(Class<?>,Class<?>,JsonInclude.Value)
  nameWithType: MapperConfig.getDefaultInclusion(Class<?>,Class<?>,JsonInclude.Value)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(java.lang.Class<?>)
  name: MapperConfig.introspectClassAnnotations(Class<?>)
  nameWithType: MapperConfig.introspectClassAnnotations(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature,boolean)
  name: MapperConfig.with(MapperFeature,boolean)
  nameWithType: MapperConfig.with(MapperFeature,boolean)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature,boolean)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getTypeFactory()
  name: MapperConfig.getTypeFactory()
  nameWithType: MapperConfig.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getTypeFactory()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.shouldSortPropertiesAlphabetically()
  name: MapperConfig.shouldSortPropertiesAlphabetically()
  nameWithType: MapperConfig.shouldSortPropertiesAlphabetically()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.shouldSortPropertiesAlphabetically()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(java.lang.Class<?>)
  name: MapperConfig.introspectDirectClassAnnotations(Class<?>)
  nameWithType: MapperConfig.introspectDirectClassAnnotations(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(java.lang.Class<?>)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getSubtypeResolver()
  name: MapperConfig.getSubtypeResolver()
  nameWithType: MapperConfig.getSubtypeResolver()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getSubtypeResolver()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.canOverrideAccessModifiers()
  name: MapperConfig.canOverrideAccessModifiers()
  nameWithType: MapperConfig.canOverrideAccessModifiers()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.canOverrideAccessModifiers()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
  name: MapperConfig.getDefaultPropertyInclusion(Class<?>,JsonInclude.Value)
  nameWithType: MapperConfig.getDefaultPropertyInclusion(Class<?>,JsonInclude.Value)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>)
  name: MapperConfig.getDefaultPropertyIgnorals(Class<?>)
  nameWithType: MapperConfig.getDefaultPropertyIgnorals(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
  name: MapperConfig.introspectDirectClassAnnotations(JavaType)
  nameWithType: MapperConfig.introspectDirectClassAnnotations(JavaType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(com.fasterxml.jackson.databind.JavaType)
  name: MapperConfig.findRootName(JavaType)
  nameWithType: MapperConfig.findRootName(JavaType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
  name: MapperConfig.introspectClassAnnotations(JavaType)
  nameWithType: MapperConfig.introspectClassAnnotations(JavaType)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.compileString(java.lang.String)
  name: MapperConfig.compileString(String)
  nameWithType: MapperConfig.compileString(String)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.compileString(java.lang.String)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
  name: MapperConfig.getDefaultInclusion(Class<?>,Class<?>)
  nameWithType: MapperConfig.getDefaultInclusion(Class<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getBase64Variant()
  name: MapperConfig.getBase64Variant()
  nameWithType: MapperConfig.getBase64Variant()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getBase64Variant()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.findConfigOverride(java.lang.Class<?>)
  name: MapperConfig.findConfigOverride(Class<?>)
  nameWithType: MapperConfig.findConfigOverride(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.findConfigOverride(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getPropertyNamingStrategy()
  name: MapperConfig.getPropertyNamingStrategy()
  nameWithType: MapperConfig.getPropertyNamingStrategy()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getPropertyNamingStrategy()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(java.lang.Class<?>)
  name: MapperConfig.constructType(Class<?>)
  nameWithType: MapperConfig.constructType(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultSetterInfo()
  name: MapperConfig.getDefaultSetterInfo()
  nameWithType: MapperConfig.getDefaultSetterInfo()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultSetterInfo()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver>)
  name: MapperConfig.typeIdResolverInstance(Annotated,Class<? extends TypeIdResolver>)
  nameWithType: MapperConfig.typeIdResolverInstance(Annotated,Class<? extends TypeIdResolver>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: MapperConfig.constructType(TypeReference<?>)
  nameWithType: MapperConfig.constructType(TypeReference<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDateFormat()
  name: MapperConfig.getDateFormat()
  nameWithType: MapperConfig.getDateFormat()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDateFormat()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator()
  name: MapperConfig.getPolymorphicTypeValidator()
  nameWithType: MapperConfig.getPolymorphicTypeValidator()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(java.lang.Class<?>)
  name: MapperConfig.findRootName(Class<?>)
  nameWithType: MapperConfig.findRootName(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature...)
  name: MapperConfig.with(MapperFeature)
  nameWithType: MapperConfig.with(MapperFeature)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature...)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>>)
  name: MapperConfig.typeResolverBuilderInstance(Annotated,Class<? extends TypeResolverBuilder<?>>)
  nameWithType: MapperConfig.typeResolverBuilderInstance(Annotated,Class<? extends TypeResolverBuilder<?>>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  name: MapperConfig.isEnabled(MapperFeature)
  nameWithType: MapperConfig.isEnabled(MapperFeature)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getActiveView()
  name: MapperConfig.getActiveView()
  nameWithType: MapperConfig.getActiveView()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getActiveView()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getAttributes()
  name: MapperConfig.getAttributes()
  nameWithType: MapperConfig.getAttributes()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getAttributes()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable()
  name: MapperConfig.getDefaultMergeable()
  nameWithType: MapperConfig.getDefaultMergeable()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  name: MapperConfig.getDefaultVisibilityChecker(Class<?>,AnnotatedClass)
  nameWithType: MapperConfig.getDefaultVisibilityChecker(Class<?>,AnnotatedClass)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getConfigOverride(java.lang.Class<?>)
  name: MapperConfig.getConfigOverride(Class<?>)
  nameWithType: MapperConfig.getConfigOverride(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getConfigOverride(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion()
  name: MapperConfig.getDefaultPropertyInclusion()
  nameWithType: MapperConfig.getDefaultPropertyInclusion()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.<F>collectFeatureDefaults(java.lang.Class<F>)
  name: MapperConfig.<F>collectFeatureDefaults(Class<F>)
  nameWithType: MapperConfig.<F>collectFeatureDefaults(Class<F>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.<F>collectFeatureDefaults(java.lang.Class<F>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getTimeZone()
  name: MapperConfig.getTimeZone()
  nameWithType: MapperConfig.getTimeZone()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getTimeZone()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getLocale()
  name: MapperConfig.getLocale()
  nameWithType: MapperConfig.getLocale()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getLocale()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.isAnnotationProcessingEnabled()
  name: MapperConfig.isAnnotationProcessingEnabled()
  nameWithType: MapperConfig.isAnnotationProcessingEnabled()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.isAnnotationProcessingEnabled()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  name: MapperConfig.constructSpecializedType(JavaType,Class<?>)
  nameWithType: MapperConfig.constructSpecializedType(JavaType,Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker()
  name: MapperConfig.getDefaultVisibilityChecker()
  nameWithType: MapperConfig.getDefaultVisibilityChecker()
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.hasMapperFeatures(int)
  name: MapperConfig.hasMapperFeatures(int)
  nameWithType: MapperConfig.hasMapperFeatures(int)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.hasMapperFeatures(int)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.without(com.fasterxml.jackson.databind.MapperFeature...)
  name: MapperConfig.without(MapperFeature)
  nameWithType: MapperConfig.without(MapperFeature)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.without(com.fasterxml.jackson.databind.MapperFeature...)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyFormat(java.lang.Class<?>)
  name: MapperConfig.getDefaultPropertyFormat(Class<?>)
  nameWithType: MapperConfig.getDefaultPropertyFormat(Class<?>)
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyFormat(java.lang.Class<?>)
- uid: CFG,T
  name: CFG,T
  nameWithType: CFG,T
  fullName: CFG,T
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  name: TypeResolverBuilder
  nameWithType: TypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  name: VisibilityChecker
  nameWithType: VisibilityChecker
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable(java.lang.Class
  name: MapperConfig.getDefaultMergeable(Class
  nameWithType: MapperConfig.getDefaultMergeable(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultMergeable(java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class
  name: MapperConfig.getDefaultPropertyInclusion(Class
  nameWithType: MapperConfig.getDefaultPropertyInclusion(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class
  name: MapperConfig.getDefaultPropertyIgnorals(Class
  nameWithType: MapperConfig.getDefaultPropertyIgnorals(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
  name: ?>,AnnotatedClass)
  nameWithType: ?>,AnnotatedClass)
  fullName: ?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
- uid: ?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
  name: ?>,JsonInclude.Value)
  nameWithType: ?>,JsonInclude.Value)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonInclude.Value)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class
  name: MapperConfig.getDefaultInclusion(Class
  nameWithType: MapperConfig.getDefaultInclusion(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultInclusion(java.lang.Class
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(java.lang.Class
  name: MapperConfig.introspectClassAnnotations(Class
  nameWithType: MapperConfig.introspectClassAnnotations(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectClassAnnotations(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(java.lang.Class
  name: MapperConfig.introspectDirectClassAnnotations(Class
  nameWithType: MapperConfig.introspectDirectClassAnnotations(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.introspectDirectClassAnnotations(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.findConfigOverride(java.lang.Class
  name: MapperConfig.findConfigOverride(Class
  nameWithType: MapperConfig.findConfigOverride(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.findConfigOverride(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(java.lang.Class
  name: MapperConfig.constructType(Class
  nameWithType: MapperConfig.constructType(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(java.lang.Class
- uid: '? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver>)'
  name: '? extends TypeIdResolver>)'
  nameWithType: '? extends TypeIdResolver>)'
  fullName: '? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver>)'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class
  name: MapperConfig.typeIdResolverInstance(Annotated,Class
  nameWithType: MapperConfig.typeIdResolverInstance(Annotated,Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(com.fasterxml.jackson.core.type.TypeReference
  name: MapperConfig.constructType(TypeReference
  nameWithType: MapperConfig.constructType(TypeReference
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructType(com.fasterxml.jackson.core.type.TypeReference
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(java.lang.Class
  name: MapperConfig.findRootName(Class
  nameWithType: MapperConfig.findRootName(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.findRootName(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class
  name: MapperConfig.typeResolverBuilderInstance(Annotated,Class
  nameWithType: MapperConfig.typeResolverBuilderInstance(Annotated,Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class
- uid: ?>>)
  name: ?>>)
  nameWithType: ?>>)
  fullName: ?>>)
- uid: '? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder'
  name: '? extends TypeResolverBuilder'
  nameWithType: '? extends TypeResolverBuilder'
  fullName: '? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker(java.lang.Class
  name: MapperConfig.getDefaultVisibilityChecker(Class
  nameWithType: MapperConfig.getDefaultVisibilityChecker(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultVisibilityChecker(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getConfigOverride(java.lang.Class
  name: MapperConfig.getConfigOverride(Class
  nameWithType: MapperConfig.getConfigOverride(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getConfigOverride(java.lang.Class
- uid: F>)
  name: F>)
  nameWithType: F>)
  fullName: F>)
- uid: F>collectFeatureDefaults(java.lang.Class
  name: F>collectFeatureDefaults(Class
  nameWithType: F>collectFeatureDefaults(Class
  fullName: F>collectFeatureDefaults(java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.
  name: MapperConfig.
  nameWithType: MapperConfig.
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class
  name: MapperConfig.constructSpecializedType(JavaType,Class
  nameWithType: MapperConfig.constructSpecializedType(JavaType,Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyFormat(java.lang.Class
  name: MapperConfig.getDefaultPropertyFormat(Class
  nameWithType: MapperConfig.getDefaultPropertyFormat(Class
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyFormat(java.lang.Class
