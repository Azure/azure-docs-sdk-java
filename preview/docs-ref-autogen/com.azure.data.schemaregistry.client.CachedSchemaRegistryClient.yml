### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  id: CachedSchemaRegistryClient
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client
  children:
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.SCHEMA_REGISTRY_SERVICE_ENCODING
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser(com.azure.data.schemaregistry.Codec)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema(java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion(java.lang.String,java.lang.String,int)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding()
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid(java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset()
  langs:
  - java
  name: CachedSchemaRegistryClient
  nameWithType: CachedSchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  type: Class
  package: com.azure.data.schemaregistry.client
  summary: >-
    HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand.


    Utilizes in-memory <xref uid="java.util.Map" data-throw-if-not-resolved="false">Map</xref> caching to minimize network I/O. Max size can be configured when instantiating by using <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize*" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder#maxSchemaMapSize</xref>, otherwise `1000` will be used as the default.


    Two maps are maintained.

     *  SchemaRegistryObject cache by GUID - stores GUIDs previously seen in payloads.
     *  SchemaRegistryObject cache by schema string - minimizes HTTP calls when sending payloads of same schema.
  syntax:
    content: public final class CachedSchemaRegistryClient implements SchemaRegistryClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.data.schemaregistry.client.SchemaRegistryClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient(com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService,int,java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>)
  id: CachedSchemaRegistryClient(com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService,int,java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, int maxSchemaMapSize, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  nameWithType: CachedSchemaRegistryClient.CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, int maxSchemaMapSize, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, int maxSchemaMapSize, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient*
  type: Constructor
  package: com.azure.data.schemaregistry.client
  syntax:
    content: " CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, int maxSchemaMapSize, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)"
    parameters:
    - id: restService
      type: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
    - id: maxSchemaMapSize
      type: int
    - id: typeParserMap
      type: java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient(com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService,java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>,java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>,java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>)
  id: CachedSchemaRegistryClient(com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService,java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>,java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>,java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, Map<String,SchemaRegistryObject> idCache, Map<String,SchemaRegistryObject> schemaStringCache, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  nameWithType: CachedSchemaRegistryClient.CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, Map<String,SchemaRegistryObject> idCache, Map<String,SchemaRegistryObject> schemaStringCache, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, Map<String,SchemaRegistryObject> idCache, Map<String,SchemaRegistryObject> schemaStringCache, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient*
  type: Constructor
  package: com.azure.data.schemaregistry.client
  syntax:
    content: " CachedSchemaRegistryClient(AzureSchemaRegistryRestService restService, Map<String,SchemaRegistryObject> idCache, Map<String,SchemaRegistryObject> schemaStringCache, ConcurrentSkipListMap<String,Function<String,Object>> typeParserMap)"
    parameters:
    - id: restService
      type: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
    - id: idCache
      type: java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>
    - id: schemaStringCache
      type: java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>
    - id: typeParserMap
      type: java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.SCHEMA_REGISTRY_SERVICE_ENCODING
  id: SCHEMA_REGISTRY_SERVICE_ENCODING
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: SCHEMA_REGISTRY_SERVICE_ENCODING
  nameWithType: CachedSchemaRegistryClient.SCHEMA_REGISTRY_SERVICE_ENCODING
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.SCHEMA_REGISTRY_SERVICE_ENCODING
  type: Field
  package: com.azure.data.schemaregistry.client
  syntax:
    content: public static final Charset SCHEMA_REGISTRY_SERVICE_ENCODING
    return:
      type: java.nio.charset.Charset
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser(com.azure.data.schemaregistry.Codec)
  id: addSchemaParser(com.azure.data.schemaregistry.Codec)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: addSchemaParser(Codec codec)
  nameWithType: CachedSchemaRegistryClient.addSchemaParser(Codec codec)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser(Codec codec)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Loads function for a given schema type that can parse the registry-stored schema string into usable schema object. Any com.azure.data.schemaregistry.ByteEncoder or com.azure.data.schemaregistry.ByteDecoder class will implement - schemaType(), which specifies schema type, and - parseSchemaString(), which parses schemas of the specified schema type from String to Object.
  syntax:
    content: public void addSchemaParser(Codec codec)
    parameters:
    - id: codec
      type: com.azure.data.schemaregistry.Codec
      description: Codec class implementation
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion(java.lang.String,java.lang.String)
  id: deleteLatestSchemaVersion(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: deleteLatestSchemaVersion(String schemaGroup, String schemaName)
  nameWithType: CachedSchemaRegistryClient.deleteLatestSchemaVersion(String schemaGroup, String schemaName)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion(String schemaGroup, String schemaName)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Not currently implemented.
  syntax:
    content: public String deleteLatestSchemaVersion(String schemaGroup, String schemaName)
    parameters:
    - id: schemaGroup
      type: java.lang.String
    - id: schemaName
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema(java.lang.String,java.lang.String)
  id: deleteSchema(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: deleteSchema(String schemaGroup, String schemaName)
  nameWithType: CachedSchemaRegistryClient.deleteSchema(String schemaGroup, String schemaName)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema(String schemaGroup, String schemaName)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Not currently implemented.
  syntax:
    content: public List<String> deleteSchema(String schemaGroup, String schemaName)
    parameters:
    - id: schemaGroup
      type: java.lang.String
    - id: schemaName
      type: java.lang.String
    return:
      type: java.util.List<java.lang.String>
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion(java.lang.String,java.lang.String,int)
  id: deleteSchemaVersion(java.lang.String,java.lang.String,int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: deleteSchemaVersion(String schemaGroup, String schemaName, int version)
  nameWithType: CachedSchemaRegistryClient.deleteSchemaVersion(String schemaGroup, String schemaName, int version)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion(String schemaGroup, String schemaName, int version)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Not currently implemented.
  syntax:
    content: public String deleteSchemaVersion(String schemaGroup, String schemaName, int version)
    parameters:
    - id: schemaGroup
      type: java.lang.String
    - id: schemaName
      type: java.lang.String
    - id: version
      type: int
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding()
  id: getEncoding()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: getEncoding()
  nameWithType: CachedSchemaRegistryClient.getEncoding()
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding()
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Encoding used by registry client implementation.
  syntax:
    content: public Charset getEncoding()
    return:
      type: java.nio.charset.Charset
      description: Azure Schema Registry service string encoding
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid(java.lang.String)
  id: getSchemaByGuid(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: getSchemaByGuid(String schemaId)
  nameWithType: CachedSchemaRegistryClient.getSchemaByGuid(String schemaId)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid(String schemaId)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: >-
    Fetches schema specified by the GUID.


    GUID can be assumed to be unique within a schema registry store.
  syntax:
    content: public SchemaRegistryObject getSchemaByGuid(String schemaId)
    parameters:
    - id: schemaId
      type: java.lang.String
    return:
      type: com.azure.data.schemaregistry.client.SchemaRegistryObject
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSchemaId(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: getSchemaId(String schemaGroup, String schemaName, String schemaString, String schemaType)
  nameWithType: CachedSchemaRegistryClient.getSchemaId(String schemaGroup, String schemaName, String schemaString, String schemaType)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId(String schemaGroup, String schemaName, String schemaString, String schemaType)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Fetches schema GUID given schema group, name, string representation, and serialization type
  syntax:
    content: public String getSchemaId(String schemaGroup, String schemaName, String schemaString, String schemaType)
    parameters:
    - id: schemaGroup
      type: java.lang.String
    - id: schemaName
      type: java.lang.String
    - id: schemaString
      type: java.lang.String
    - id: schemaType
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: register(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: register(String schemaGroup, String schemaName, String schemaString, String schemaType)
  nameWithType: CachedSchemaRegistryClient.register(String schemaGroup, String schemaName, String schemaString, String schemaType)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register(String schemaGroup, String schemaName, String schemaString, String schemaType)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Registers a schema against backing schema registry store.
  syntax:
    content: public SchemaRegistryObject register(String schemaGroup, String schemaName, String schemaString, String schemaType)
    parameters:
    - id: schemaGroup
      type: java.lang.String
    - id: schemaName
      type: java.lang.String
    - id: schemaString
      type: java.lang.String
    - id: schemaType
      type: java.lang.String
    return:
      type: com.azure.data.schemaregistry.client.SchemaRegistryObject
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset()
  id: reset()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  langs:
  - java
  name: reset()
  nameWithType: CachedSchemaRegistryClient.reset()
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset()
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Explicit call to clear all caches.
  syntax:
    content: public void reset()
references:
- uid: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
  name: AzureSchemaRegistryRestService
  nameWithType: AzureSchemaRegistryRestService
  fullName: com.azure.data.schemaregistry.client.implementation.AzureSchemaRegistryRestService
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.concurrent.ConcurrentSkipListMap<java.lang.String,java.util.function.Function<java.lang.String,java.lang.Object>>
  spec.java:
  - uid: java.util.concurrent.ConcurrentSkipListMap
    name: ConcurrentSkipListMap
    fullName: java.util.concurrent.ConcurrentSkipListMap
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient*
  name: CachedSchemaRegistryClient
  nameWithType: CachedSchemaRegistryClient.CachedSchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.CachedSchemaRegistryClient
  package: com.azure.data.schemaregistry.client
- uid: java.util.Map<java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.data.schemaregistry.client.SchemaRegistryObject
    name: SchemaRegistryObject
    fullName: com.azure.data.schemaregistry.client.SchemaRegistryObject
  - name: '>'
    fullName: '>'
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding*
  name: getEncoding
  nameWithType: CachedSchemaRegistryClient.getEncoding
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getEncoding
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.Codec
  name: Codec
  nameWithType: Codec
  fullName: com.azure.data.schemaregistry.Codec
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser*
  name: addSchemaParser
  nameWithType: CachedSchemaRegistryClient.addSchemaParser
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.addSchemaParser
  package: com.azure.data.schemaregistry.client
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.client.SchemaRegistryObject
  name: SchemaRegistryObject
  nameWithType: SchemaRegistryObject
  fullName: com.azure.data.schemaregistry.client.SchemaRegistryObject
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register*
  name: register
  nameWithType: CachedSchemaRegistryClient.register
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.register
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid*
  name: getSchemaByGuid
  nameWithType: CachedSchemaRegistryClient.getSchemaByGuid
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaByGuid
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId*
  name: getSchemaId
  nameWithType: CachedSchemaRegistryClient.getSchemaId
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.getSchemaId
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion*
  name: deleteSchemaVersion
  nameWithType: CachedSchemaRegistryClient.deleteSchemaVersion
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchemaVersion
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion*
  name: deleteLatestSchemaVersion
  nameWithType: CachedSchemaRegistryClient.deleteLatestSchemaVersion
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteLatestSchemaVersion
  package: com.azure.data.schemaregistry.client
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema*
  name: deleteSchema
  nameWithType: CachedSchemaRegistryClient.deleteSchema
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.deleteSchema
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset*
  name: reset
  nameWithType: CachedSchemaRegistryClient.reset
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient.reset
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.SchemaRegistryClient
  name: SchemaRegistryClient
  nameWithType: SchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.SchemaRegistryClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.util.function.Function
  name: String,Function
  nameWithType: String,Function
  fullName: java.lang.String,java.util.function.Function
- uid: java.util.concurrent.ConcurrentSkipListMap
  name: ConcurrentSkipListMap
  nameWithType: ConcurrentSkipListMap
  fullName: java.util.concurrent.ConcurrentSkipListMap
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject
  name: String,SchemaRegistryObject
  nameWithType: String,SchemaRegistryObject
  fullName: java.lang.String,com.azure.data.schemaregistry.client.SchemaRegistryObject
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
