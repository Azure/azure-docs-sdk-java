### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicyWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicyWithResponse"
name: "getAccessPolicyWithResponse"
nameWithType: "DataLakeFileSystemClient.getAccessPolicyWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicyWithResponse(String leaseId, Duration timeout, Context context)"
  name: "getAccessPolicyWithResponse(String leaseId, Duration timeout, Context context)"
  nameWithType: "DataLakeFileSystemClient.getAccessPolicyWithResponse(String leaseId, Duration timeout, Context context)"
  summary: "Returns the file system's permissions. The permissions indicate whether file system's paths may be accessed publicly. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nContext context = new Context(\"Key\", \"Value\");\n FileSystemAccessPolicies accessPolicies = client.getAccessPolicyWithResponse(leaseId, timeout, context)\n     .getValue();\n System.out.printf(\"Data Lake Access Type: %s%n\", accessPolicies.getDataLakeAccessType());\n \n for (DataLakeSignedIdentifier identifier : accessPolicies.getIdentifiers()) {\n     System.out.printf(\"Identifier Name: %s, Permissions %s%n\",\n         identifier.getId(),\n         identifier.getAccessPolicy().getPermissions());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-container-acl"
  parameters:
  - description: "The lease ID the active lease on the file system must match."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"java.lang.RuntimeException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<FileSystemAccessPolicies> getAccessPolicyWithResponse(String leaseId, Duration timeout, Context context)"
  returns:
    description: "The file system access policy."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileSystemAccessPolicies?alt=com.azure.storage.file.datalake.models.FileSystemAccessPolicies&text=FileSystemAccessPolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
