### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.implementation.ReactorProvider
  id: ReactorProvider
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorProvider.yml
  langs:
  - java
  name: ReactorProvider
  nameWithType: ReactorProvider
  fullName: com.azure.messaging.eventhubs.implementation.ReactorProvider
  type: Class
  source:
    remote:
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/ReactorProvider.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/ReactorProvider.java
    startLine: 16
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: public class ReactorProvider
  inheritance:
  - java.lang.Object
references:
- uid: com.azure.messaging.eventhubs.implementation.ReactorDispatcher
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorDispatcher.yml
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.azure.messaging.eventhubs.implementation.ReactorDispatcher
  type: Class
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> APIs should be on the Reactor Thread. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> doesn't support APIs like send() out-of-box - which could potentially run on different thread to that of the Reactor thread.</p>\r\n<p>The following utility class is used to generate an Event to hook into <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>'s event delegation pattern. It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> as the IO on which Reactor listens to. </p>\r\n<p>Cardinality: Multiple <xref uid=\"com.azure.messaging.eventhubs.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>'s could be attached to 1 <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>. Each <xref uid=\"com.azure.messaging.eventhubs.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> should be initialized synchronously - as it calls API in <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> which is not thread-safe. </p>"
  syntax:
    content: public class ReactorDispatcher
