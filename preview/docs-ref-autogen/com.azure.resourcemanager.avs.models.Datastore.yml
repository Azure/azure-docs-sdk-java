### YamlMime:JavaType
uid: "com.azure.resourcemanager.avs.models.Datastore"
fullName: "com.azure.resourcemanager.avs.models.Datastore"
name: "Datastore"
nameWithType: "Datastore"
summary: "An immutable client-side representation of Datastore."
syntax: "public interface Datastore"
methods:
- uid: "com.azure.resourcemanager.avs.models.Datastore.diskPoolVolume()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.diskPoolVolume()"
  name: "diskPoolVolume()"
  nameWithType: "Datastore.diskPoolVolume()"
  summary: "Gets the disk<wbr>Pool<wbr>Volume property: An iSCSI volume."
  modifiers:
  - "abstract"
  syntax: "public abstract DiskPoolVolume diskPoolVolume()"
  desc: "Gets the diskPoolVolume property: An iSCSI volume."
  returns:
    description: "the diskPoolVolume value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.DiskPoolVolume?alt=com.azure.resourcemanager.avs.models.DiskPoolVolume&text=DiskPoolVolume\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.id()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.id()"
  name: "id()"
  nameWithType: "Datastore.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.innerModel()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.innerModel()"
  name: "innerModel()"
  nameWithType: "Datastore.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>avs.<wbr>fluent.<wbr>models.<wbr>Datastore<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract DatastoreInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.avs.fluent.models.DatastoreInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.DatastoreInner?alt=com.azure.resourcemanager.avs.fluent.models.DatastoreInner&text=DatastoreInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.name()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.name()"
  name: "name()"
  nameWithType: "Datastore.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.netAppVolume()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.netAppVolume()"
  name: "netAppVolume()"
  nameWithType: "Datastore.netAppVolume()"
  summary: "Gets the net<wbr>App<wbr>Volume property: An Azure Net<wbr>App Files volume."
  modifiers:
  - "abstract"
  syntax: "public abstract NetAppVolume netAppVolume()"
  desc: "Gets the netAppVolume property: An Azure NetApp Files volume."
  returns:
    description: "the netAppVolume value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.NetAppVolume?alt=com.azure.resourcemanager.avs.models.NetAppVolume&text=NetAppVolume\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.provisioningState()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Datastore.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The state of the datastore provisioning."
  modifiers:
  - "abstract"
  syntax: "public abstract DatastoreProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The state of the datastore provisioning."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.DatastoreProvisioningState?alt=com.azure.resourcemanager.avs.models.DatastoreProvisioningState&text=DatastoreProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.refresh()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.refresh()"
  name: "refresh()"
  nameWithType: "Datastore.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Datastore refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Datastore?alt=com.azure.resourcemanager.avs.models.Datastore&text=Datastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Datastore.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Datastore refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Datastore?alt=com.azure.resourcemanager.avs.models.Datastore&text=Datastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.status()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.status()"
  name: "status()"
  nameWithType: "Datastore.status()"
  summary: "Gets the status property: The operational status of the datastore."
  modifiers:
  - "abstract"
  syntax: "public abstract DatastoreStatus status()"
  desc: "Gets the status property: The operational status of the datastore."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.DatastoreStatus?alt=com.azure.resourcemanager.avs.models.DatastoreStatus&text=DatastoreStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.type()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.type()"
  name: "type()"
  nameWithType: "Datastore.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.models.Datastore.update()"
  fullName: "com.azure.resourcemanager.avs.models.Datastore.update()"
  name: "update()"
  nameWithType: "Datastore.update()"
  summary: "Begins update for the Datastore resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Datastore.Update update()"
  desc: "Begins update for the Datastore resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Datastore.Update?alt=com.azure.resourcemanager.avs.models.Datastore.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Datastore."
metadata: {}
package: "com.azure.resourcemanager.avs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-avs:1.0.0-beta.3
