### YamlMime:JavaMember
uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup*"
fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup"
name: "getByResourceGroup"
nameWithType: "LedgersClient.getByResourceGroup"
members:
- uid: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.LedgersClient.getByResourceGroup(String resourceGroupName, String ledgerName)"
  name: "getByResourceGroup(String resourceGroupName, String ledgerName)"
  nameWithType: "LedgersClient.getByResourceGroup(String resourceGroupName, String ledgerName)"
  summary: "Retrieves the properties of a Confidential Ledger."
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Confidential Ledger."
    name: "ledgerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ConfidentialLedgerInner getByResourceGroup(String resourceGroupName, String ledgerName)"
  returns:
    description: "confidential Ledger."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.ConfidentialLedgerInner&text=ConfidentialLedgerInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.1
