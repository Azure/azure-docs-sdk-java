### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner"
fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner"
name: "DataLakeStoreAccountBasicInner"
nameWithType: "DataLakeStoreAccountBasicInner"
summary: "Basic Data Lake Store account information, returned on list calls."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeStoreAccountBasicInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.DataLakeStoreAccountBasicInner()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.DataLakeStoreAccountBasicInner()"
  name: "DataLakeStoreAccountBasicInner()"
  nameWithType: "DataLakeStoreAccountBasicInner.DataLakeStoreAccountBasicInner()"
  syntax: "public DataLakeStoreAccountBasicInner()"
methods:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.accountId()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.accountId()"
  name: "accountId()"
  nameWithType: "DataLakeStoreAccountBasicInner.accountId()"
  summary: "Get the account<wbr>Id property: The unique identifier associated with this Data Lake Store account."
  syntax: "public UUID accountId()"
  desc: "Get the accountId property: The unique identifier associated with this Data Lake Store account."
  returns:
    description: "the accountId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.creationTime()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.creationTime()"
  name: "creationTime()"
  nameWithType: "DataLakeStoreAccountBasicInner.creationTime()"
  summary: "Get the creation<wbr>Time property: The account creation time."
  syntax: "public OffsetDateTime creationTime()"
  desc: "Get the creationTime property: The account creation time."
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.endpoint()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.endpoint()"
  name: "endpoint()"
  nameWithType: "DataLakeStoreAccountBasicInner.endpoint()"
  summary: "Get the endpoint property: The full CName endpoint for this account."
  syntax: "public String endpoint()"
  desc: "Get the endpoint property: The full CName endpoint for this account."
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.lastModifiedTime()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "DataLakeStoreAccountBasicInner.lastModifiedTime()"
  summary: "Get the last<wbr>Modified<wbr>Time property: The account last modified time."
  syntax: "public OffsetDateTime lastModifiedTime()"
  desc: "Get the lastModifiedTime property: The account last modified time."
  returns:
    description: "the lastModifiedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.provisioningState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DataLakeStoreAccountBasicInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning status of the Data Lake Store account."
  syntax: "public DataLakeStoreAccountStatus provisioningState()"
  desc: "Get the provisioningState property: The provisioning status of the Data Lake Store account."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus&text=DataLakeStoreAccountStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.state()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.state()"
  name: "state()"
  nameWithType: "DataLakeStoreAccountBasicInner.state()"
  summary: "Get the state property: The state of the Data Lake Store account."
  syntax: "public DataLakeStoreAccountState state()"
  desc: "Get the state property: The state of the Data Lake Store account."
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState&text=DataLakeStoreAccountState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.validate()"
  name: "validate()"
  nameWithType: "DataLakeStoreAccountBasicInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "DataLakeStoreAccountBasicInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeStoreAccountBasicInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner&text=DataLakeStoreAccountBasicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "DataLakeStoreAccountBasicInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataLakeStoreAccountBasicInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountBasicInner&text=DataLakeStoreAccountBasicInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Basic Data Lake Store account information, returned on list calls."
metadata: {}
package: "com.azure.resourcemanager.datalakestore.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
