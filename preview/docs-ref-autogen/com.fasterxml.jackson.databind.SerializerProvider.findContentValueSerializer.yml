### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer*"
fullName: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer"
name: "findContentValueSerializer"
nameWithType: "SerializerProvider.findContentValueSerializer"
members:
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(JavaType valueType, BeanProperty property)"
  name: "findContentValueSerializer(JavaType valueType, BeanProperty property)"
  nameWithType: "SerializerProvider.findContentValueSerializer(JavaType valueType, BeanProperty property)"
  summary: "Alternative to <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider.findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findPrimaryPropertySerializer(JavaType, BeanProperty)\"></xref> called not for primary value, but \"content\" of such primary serializer: element of an array or <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref>, value of <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> entry and so on. This means that `property` passed (if any) does NOT represent value for which serializer is requested but its secondary type (or secondary type of that type, recursively).\n\nSerializer returned SHOULD NOT handle type information; caller will (have to) add suitable wrapping if necessary.\n\nNote: this call will also contextualize serializer (call `createContextual()` before returning it, if applicable (implements `ContextualSerializer`)"
  parameters:
  - description: "Type of values to serialize"
    name: "valueType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Property that indirectly refers to value being serialized (optional,\n    may be <code>null</code> for root level serializers)"
    name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findContentValueSerializer(JavaType valueType, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(Class<?> valueType, BeanProperty property)"
  name: "findContentValueSerializer(Class<?> valueType, BeanProperty property)"
  nameWithType: "SerializerProvider.findContentValueSerializer(Class<?> valueType, BeanProperty property)"
  summary: "See <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findContentValueSerializer(JavaType, BeanProperty)\"></xref>."
  parameters:
  - name: "valueType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findContentValueSerializer(Class<?> valueType, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
