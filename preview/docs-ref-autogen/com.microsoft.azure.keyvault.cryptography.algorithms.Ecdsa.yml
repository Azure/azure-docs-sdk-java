### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  id: Ecdsa
  parent: com.microsoft.azure.keyvault.cryptography.algorithms
  children:
  - com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform(KeyPair,Provider)
  - com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa()
  - com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength()
  - com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength()
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.yml
  langs:
  - java
  name: Ecdsa
  nameWithType: Ecdsa
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  type: Class
  source:
    remote: &o0
      path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
    startLine: 14
  package: com.microsoft.azure.keyvault.cryptography.algorithms
  syntax:
    content: public class Ecdsa extends AsymmetricSignatureAlgorithm
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.keyvault.cryptography.Algorithm
  - com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm
  - com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm
  inheritedMembers:
  - com.microsoft.azure.keyvault.cryptography.Algorithm.Algorithm(String)
  - com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(String)
  - com.microsoft.azure.keyvault.cryptography.Algorithm.getName()
  - com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm.SignatureAlgorithm(String)
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform(KeyPair,Provider)
  id: createSignatureTransform(KeyPair,Provider)
  parent: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.yml
  langs:
  - java
  name: createSignatureTransform(KeyPair key, Provider provider)
  nameWithType: Ecdsa.createSignatureTransform(KeyPair key, Provider provider)
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform(KeyPair key, Provider provider)
  overload: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
    startLine: 20
  package: com.microsoft.azure.keyvault.cryptography.algorithms
  syntax:
    content: public ISignatureTransform createSignatureTransform(KeyPair key, Provider provider)
    parameters:
    - id: key
      type: 5330fdd9
    - id: provider
      type: 8f3c7027
    return:
      type: com.microsoft.azure.keyvault.cryptography.ISignatureTransform
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa()
  id: Ecdsa()
  parent: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.yml
  langs:
  - java
  name: Ecdsa()
  nameWithType: Ecdsa.Ecdsa()
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa()
  overload: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa*
  type: Constructor
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
    startLine: 16
  package: com.microsoft.azure.keyvault.cryptography.algorithms
  syntax:
    content: protected Ecdsa()
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength()
  id: getCoordLength()
  parent: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.yml
  langs:
  - java
  name: getCoordLength()
  nameWithType: Ecdsa.getCoordLength()
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength()
  overload: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
    startLine: 25
  package: com.microsoft.azure.keyvault.cryptography.algorithms
  syntax:
    content: public abstract int getCoordLength()
    return:
      type: ed1f7b20
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength()
  id: getDigestLength()
  parent: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.yml
  langs:
  - java
  name: getDigestLength()
  nameWithType: Ecdsa.getDigestLength()
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength()
  overload: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/algorithms/Ecdsa.java
    startLine: 24
  package: com.microsoft.azure.keyvault.cryptography.algorithms
  syntax:
    content: public abstract int getDigestLength()
    return:
      type: ed1f7b20
references:
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa*
  name: Ecdsa
  nameWithType: Ecdsa.Ecdsa
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.Ecdsa
  package: com.microsoft.azure.keyvault.cryptography.algorithms
- uid: 5330fdd9
  spec.java:
  - name: KeyPair
    fullName: KeyPair
- uid: 8f3c7027
  spec.java:
  - name: Provider
    fullName: Provider
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform*
  name: createSignatureTransform
  nameWithType: Ecdsa.createSignatureTransform
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.createSignatureTransform
  package: com.microsoft.azure.keyvault.cryptography.algorithms
- uid: ed1f7b20
  spec.java:
  - name: abstract int
    fullName: abstract int
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength*
  name: getDigestLength
  nameWithType: Ecdsa.getDigestLength
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getDigestLength
  package: com.microsoft.azure.keyvault.cryptography.algorithms
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength*
  name: getCoordLength
  nameWithType: Ecdsa.getCoordLength
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Ecdsa.getCoordLength
  package: com.microsoft.azure.keyvault.cryptography.algorithms
- uid: com.microsoft.azure.keyvault.cryptography.Algorithm.Algorithm(String)
  parent: com.microsoft.azure.keyvault.cryptography.Algorithm
  href: com.microsoft.azure.keyvault.cryptography.Algorithm.yml
  name: Algorithm(String name)
  nameWithType: Algorithm.Algorithm(String name)
  fullName: com.microsoft.azure.keyvault.cryptography.Algorithm.Algorithm(String name)
  type: Constructor
  summary: "<p>Constructor.</p>\r\n<p></p>"
  syntax:
    content: protected Algorithm(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>The name of the algorithm. </p>
- uid: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(String)
  parent: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm
  href: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm.yml
  name: AsymmetricSignatureAlgorithm(String name)
  nameWithType: AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(String name)
  fullName: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(String name)
  type: Constructor
  syntax:
    content: protected AsymmetricSignatureAlgorithm(String name)
    parameters:
    - id: name
      type: "26831127"
- uid: com.microsoft.azure.keyvault.cryptography.Algorithm.getName()
  parent: com.microsoft.azure.keyvault.cryptography.Algorithm
  href: com.microsoft.azure.keyvault.cryptography.Algorithm.yml
  name: getName()
  nameWithType: Algorithm.getName()
  fullName: com.microsoft.azure.keyvault.cryptography.Algorithm.getName()
  type: Method
  summary: "<p>Gets the name of the algorithm.</p>\r\n<p></p>"
  syntax:
    content: public String getName()
    return:
      type: "26831127"
      description: <p>The name of the algorithm. </p>
- uid: com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm.SignatureAlgorithm(String)
  parent: com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm
  href: com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm.yml
  name: SignatureAlgorithm(String name)
  nameWithType: SignatureAlgorithm.SignatureAlgorithm(String name)
  fullName: com.microsoft.azure.keyvault.cryptography.SignatureAlgorithm.SignatureAlgorithm(String name)
  type: Constructor
  syntax:
    content: protected SignatureAlgorithm(String name)
    parameters:
    - id: name
      type: "26831127"
- uid: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm
  parent: com.microsoft.azure.keyvault.cryptography
  href: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm.yml
  name: AsymmetricSignatureAlgorithm
  nameWithType: AsymmetricSignatureAlgorithm
  fullName: com.microsoft.azure.keyvault.cryptography.AsymmetricSignatureAlgorithm
  type: Class
  syntax:
    content: public class AsymmetricSignatureAlgorithm extends SignatureAlgorithm
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Es256
  parent: com.microsoft.azure.keyvault.cryptography.algorithms
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Es256.yml
  name: Es256
  nameWithType: Es256
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Es256
  type: Class
  syntax:
    content: public class Es256
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Es256k
  parent: com.microsoft.azure.keyvault.cryptography.algorithms
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Es256k.yml
  name: Es256k
  nameWithType: Es256k
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Es256k
  type: Class
  syntax:
    content: public class Es256k
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Es384
  parent: com.microsoft.azure.keyvault.cryptography.algorithms
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Es384.yml
  name: Es384
  nameWithType: Es384
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Es384
  type: Class
  syntax:
    content: public class Es384
- uid: com.microsoft.azure.keyvault.cryptography.algorithms.Es512
  parent: com.microsoft.azure.keyvault.cryptography.algorithms
  href: com.microsoft.azure.keyvault.cryptography.algorithms.Es512.yml
  name: Es512
  nameWithType: Es512
  fullName: com.microsoft.azure.keyvault.cryptography.algorithms.Es512
  type: Class
  syntax:
    content: public class Es512
- uid: com.microsoft.azure.keyvault.cryptography.ISignatureTransform
  parent: com.microsoft.azure.keyvault.cryptography
  href: com.microsoft.azure.keyvault.cryptography.ISignatureTransform.yml
  name: ISignatureTransform
  nameWithType: ISignatureTransform
  fullName: com.microsoft.azure.keyvault.cryptography.ISignatureTransform
  type: Interface
  syntax:
    content: public interface ISignatureTransform
