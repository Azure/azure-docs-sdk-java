### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists"
fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists"
name: "FaceLists"
nameWithType: "FaceLists"
summary: "An instance of this class provides access to all the operations defined in Face<wbr>Lists."
syntax: "public interface FaceLists"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStream()"
  name: "addFaceFromStream()"
  nameWithType: "FaceLists.addFaceFromStream()"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  syntax: "public abstract FaceLists.FaceListsAddFaceFromStreamDefinitionStages.WithFaceListId addFaceFromStream()"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the first stage of the addFaceFromStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsAddFaceFromStreamDefinitionStages.WithFaceListId?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsAddFaceFromStreamDefinitionStages.WithFaceListId&text=WithFaceListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStream(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStream(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  name: "addFaceFromStream(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  nameWithType: "FaceLists.addFaceFromStream(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addFaceFromStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter&text=AddFaceFromStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PersistedFace addFaceFromStream(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the PersistedFace object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace&text=PersistedFace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromStreamAsync(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  name: "addFaceFromStreamAsync(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  nameWithType: "FaceLists.addFaceFromStreamAsync(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addFaceFromStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromStreamOptionalParameter&text=AddFaceFromStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PersistedFace> addFaceFromStreamAsync(String faceListId, byte[] image, AddFaceFromStreamOptionalParameter addFaceFromStreamOptionalParameter)"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the observable to the PersistedFace object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace&text=PersistedFace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrl()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrl()"
  name: "addFaceFromUrl()"
  nameWithType: "FaceLists.addFaceFromUrl()"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  syntax: "public abstract FaceLists.FaceListsAddFaceFromUrlDefinitionStages.WithFaceListId addFaceFromUrl()"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the first stage of the addFaceFromUrl call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsAddFaceFromUrlDefinitionStages.WithFaceListId?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsAddFaceFromUrlDefinitionStages.WithFaceListId&text=WithFaceListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrl(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrl(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  name: "addFaceFromUrl(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  nameWithType: "FaceLists.addFaceFromUrl(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addFaceFromUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter&text=AddFaceFromUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PersistedFace addFaceFromUrl(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the PersistedFace object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace&text=PersistedFace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrlAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.addFaceFromUrlAsync(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  name: "addFaceFromUrlAsync(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  nameWithType: "FaceLists.addFaceFromUrlAsync(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  summary: "Add a face to a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "addFaceFromUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.AddFaceFromUrlOptionalParameter&text=AddFaceFromUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PersistedFace> addFaceFromUrlAsync(String faceListId, String url, AddFaceFromUrlOptionalParameter addFaceFromUrlOptionalParameter)"
  desc: "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire."
  returns:
    description: "the observable to the PersistedFace object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.PersistedFace&text=PersistedFace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.create()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.create()"
  name: "create()"
  nameWithType: "FaceLists.create()"
  summary: "Create an empty face list."
  modifiers:
  - "abstract"
  syntax: "public abstract FaceLists.FaceListsCreateDefinitionStages.WithFaceListId create()"
  desc: "Create an empty face list. Up to 64 face lists are allowed to exist in one subscription."
  returns:
    description: "the first stage of the create call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsCreateDefinitionStages.WithFaceListId?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsCreateDefinitionStages.WithFaceListId&text=WithFaceListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.create(java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.create(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  name: "create(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  nameWithType: "FaceLists.create(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  summary: "Create an empty face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter&text=CreateFaceListsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void create(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  desc: "Create an empty face list. Up to 64 face lists are allowed to exist in one subscription."
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.createAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.createAsync(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  name: "createAsync(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  nameWithType: "FaceLists.createAsync(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  summary: "Create an empty face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "createOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.CreateFaceListsOptionalParameter&text=CreateFaceListsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> createAsync(String faceListId, CreateFaceListsOptionalParameter createOptionalParameter)"
  desc: "Create an empty face list. Up to 64 face lists are allowed to exist in one subscription."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.delete(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.delete(String faceListId)"
  name: "delete(String faceListId)"
  nameWithType: "FaceLists.delete(String faceListId)"
  summary: "Delete an existing face list according to face<wbr>List<wbr>Id."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String faceListId)"
  desc: "Delete an existing face list according to faceListId. Persisted face images in the face list will also be deleted."
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteAsync(String faceListId)"
  name: "deleteAsync(String faceListId)"
  nameWithType: "FaceLists.deleteAsync(String faceListId)"
  summary: "Delete an existing face list according to face<wbr>List<wbr>Id."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String faceListId)"
  desc: "Delete an existing face list according to faceListId. Persisted face images in the face list will also be deleted."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteFace(java.lang.String,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteFace(String faceListId, UUID persistedFaceId)"
  name: "deleteFace(String faceListId, UUID persistedFaceId)"
  nameWithType: "FaceLists.deleteFace(String faceListId, UUID persistedFaceId)"
  summary: "Delete an existing face from a face list (given by a persisited<wbr>Face<wbr>Id and a face<wbr>List<wbr>Id)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Id referencing a particular persistedFaceId of an existing face."
    name: "persistedFaceId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteFace(String faceListId, UUID persistedFaceId)"
  desc: "Delete an existing face from a face list (given by a persisitedFaceId and a faceListId). Persisted image related to the face will also be deleted."
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteFaceAsync(java.lang.String,java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.deleteFaceAsync(String faceListId, UUID persistedFaceId)"
  name: "deleteFaceAsync(String faceListId, UUID persistedFaceId)"
  nameWithType: "FaceLists.deleteFaceAsync(String faceListId, UUID persistedFaceId)"
  summary: "Delete an existing face from a face list (given by a persisited<wbr>Face<wbr>Id and a face<wbr>List<wbr>Id)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Id referencing a particular persistedFaceId of an existing face."
    name: "persistedFaceId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteFaceAsync(String faceListId, UUID persistedFaceId)"
  desc: "Delete an existing face from a face list (given by a persisitedFaceId and a faceListId). Persisted image related to the face will also be deleted."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.get(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.get(String faceListId)"
  name: "get(String faceListId)"
  nameWithType: "FaceLists.get(String faceListId)"
  summary: "Retrieve a face list's information."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FaceList get(String faceListId)"
  desc: "Retrieve a face list's information."
  returns:
    description: "the FaceList object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList&text=FaceList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.getAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.getAsync(String faceListId)"
  name: "getAsync(String faceListId)"
  nameWithType: "FaceLists.getAsync(String faceListId)"
  summary: "Retrieve a face list's information."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<FaceList> getAsync(String faceListId)"
  desc: "Retrieve a face list's information."
  returns:
    description: "the observable to the FaceList object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList&text=FaceList\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.list()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.list()"
  name: "list()"
  nameWithType: "FaceLists.list()"
  summary: "Retrieve information about all existing face lists."
  modifiers:
  - "abstract"
  syntax: "public abstract List<FaceList> list()"
  desc: "Retrieve information about all existing face lists. Only faceListId, name and userData will be returned."
  returns:
    description: "the List&lt;FaceList&gt; object if successful."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList&text=FaceList\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.listAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.listAsync()"
  name: "listAsync()"
  nameWithType: "FaceLists.listAsync()"
  summary: "Retrieve information about all existing face lists."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<List<FaceList>> listAsync()"
  desc: "Retrieve information about all existing face lists. Only faceListId, name and userData will be returned."
  returns:
    description: "the observable to the List&lt;FaceList&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceList&text=FaceList\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.update()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.update()"
  name: "update()"
  nameWithType: "FaceLists.update()"
  summary: "Update information of a face list."
  modifiers:
  - "abstract"
  syntax: "public abstract FaceLists.FaceListsUpdateDefinitionStages.WithFaceListId update()"
  desc: "Update information of a face list."
  returns:
    description: "the first stage of the update call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsUpdateDefinitionStages.WithFaceListId?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.FaceListsUpdateDefinitionStages.WithFaceListId&text=WithFaceListId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.update(java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.update(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  name: "update(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  nameWithType: "FaceLists.update(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  summary: "Update information of a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "updateOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter&text=UpdateFaceListsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  desc: "Update information of a face list."
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists.updateAsync(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  name: "updateAsync(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  nameWithType: "FaceLists.updateAsync(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  summary: "Update information of a face list."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id referencing a particular face list."
    name: "faceListId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "updateOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.UpdateFaceListsOptionalParameter&text=UpdateFaceListsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> updateAsync(String faceListId, UpdateFaceListsOptionalParameter updateOptionalParameter)"
  desc: "Update information of a face list."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in FaceLists."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.faceapi"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-faceapi:1.0.1-beta
