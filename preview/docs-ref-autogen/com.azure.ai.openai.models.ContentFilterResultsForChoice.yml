### YamlMime:JavaType
uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice"
fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice"
name: "ContentFilterResultsForChoice"
nameWithType: "ContentFilterResultsForChoice"
summary: "Information about content filtering evaluated against generated model output."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ContentFilterResultsForChoice**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ContentFilterResultsForChoice?alt=com.azure.ai.openai.models.ContentFilterResultsForChoice&text=ContentFilterResultsForChoice\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ContentFilterResultsForChoice.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Content<wbr>Filter<wbr>Results<wbr>For<wbr>Choice from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ContentFilterResultsForChoice fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the ContentFilterResultsForChoice."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ContentFilterResultsForChoice from the JsonReader."
  returns:
    description: "An instance of ContentFilterResultsForChoice if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterResultsForChoice?alt=com.azure.ai.openai.models.ContentFilterResultsForChoice&text=ContentFilterResultsForChoice\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getCustomBlocklists()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getCustomBlocklists()"
  name: "getCustomBlocklists()"
  nameWithType: "ContentFilterResultsForChoice.getCustomBlocklists()"
  summary: "Get the custom<wbr>Blocklists property: Describes detection results against configured custom blocklists."
  syntax: "public ContentFilterDetailedResults getCustomBlocklists()"
  desc: "Get the customBlocklists property: Describes detection results against configured custom blocklists."
  returns:
    description: "the customBlocklists value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterDetailedResults?alt=com.azure.ai.openai.models.ContentFilterDetailedResults&text=ContentFilterDetailedResults\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getError()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getError()"
  name: "getError()"
  nameWithType: "ContentFilterResultsForChoice.getError()"
  summary: "Get the error property: Describes an error returned if the content filtering system is down or otherwise unable to complete the operation in time."
  syntax: "public ResponseError getError()"
  desc: "Get the error property: Describes an error returned if the content filtering system is down or otherwise unable to complete the operation in time."
  returns:
    description: "the error value."
    type: "<xref href=\"com.azure.core.models.ResponseError?alt=com.azure.core.models.ResponseError&text=ResponseError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getHate()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getHate()"
  name: "getHate()"
  nameWithType: "ContentFilterResultsForChoice.getHate()"
  summary: "Get the hate property: Describes language attacks or uses that include pejorative or discriminatory language with reference to a person or identity group on the basis of certain differentiating attributes of these groups including but not limited to race, ethnicity, nationality, gender identity and expression, sexual orientation, religion, immigration status, ability status, personal appearance, and body size."
  syntax: "public ContentFilterResult getHate()"
  desc: "Get the hate property: Describes language attacks or uses that include pejorative or discriminatory language with reference to a person or identity group on the basis of certain differentiating attributes of these groups including but not limited to race, ethnicity, nationality, gender identity and expression, sexual orientation, religion, immigration status, ability status, personal appearance, and body size."
  returns:
    description: "the hate value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterResult?alt=com.azure.ai.openai.models.ContentFilterResult&text=ContentFilterResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProfanity()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProfanity()"
  name: "getProfanity()"
  nameWithType: "ContentFilterResultsForChoice.getProfanity()"
  summary: "Get the profanity property: Describes whether profanity was detected."
  syntax: "public ContentFilterDetectionResult getProfanity()"
  desc: "Get the profanity property: Describes whether profanity was detected."
  returns:
    description: "the profanity value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterDetectionResult?alt=com.azure.ai.openai.models.ContentFilterDetectionResult&text=ContentFilterDetectionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProtectedMaterialCode()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProtectedMaterialCode()"
  name: "getProtectedMaterialCode()"
  nameWithType: "ContentFilterResultsForChoice.getProtectedMaterialCode()"
  summary: "Get the protected<wbr>Material<wbr>Code property: Information about detection of protected code material."
  syntax: "public ContentFilterCitedDetectionResult getProtectedMaterialCode()"
  desc: "Get the protectedMaterialCode property: Information about detection of protected code material."
  returns:
    description: "the protectedMaterialCode value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterCitedDetectionResult?alt=com.azure.ai.openai.models.ContentFilterCitedDetectionResult&text=ContentFilterCitedDetectionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProtectedMaterialText()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getProtectedMaterialText()"
  name: "getProtectedMaterialText()"
  nameWithType: "ContentFilterResultsForChoice.getProtectedMaterialText()"
  summary: "Get the protected<wbr>Material<wbr>Text property: Information about detection of protected text material."
  syntax: "public ContentFilterDetectionResult getProtectedMaterialText()"
  desc: "Get the protectedMaterialText property: Information about detection of protected text material."
  returns:
    description: "the protectedMaterialText value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterDetectionResult?alt=com.azure.ai.openai.models.ContentFilterDetectionResult&text=ContentFilterDetectionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getSelfHarm()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getSelfHarm()"
  name: "getSelfHarm()"
  nameWithType: "ContentFilterResultsForChoice.getSelfHarm()"
  summary: "Get the self<wbr>Harm property: Describes language related to physical actions intended to purposely hurt, injure, or damage one\\\\u2019s body, or kill oneself."
  syntax: "public ContentFilterResult getSelfHarm()"
  desc: "Get the selfHarm property: Describes language related to physical actions intended to purposely hurt, injure, or damage one\\\\u2019s body, or kill oneself."
  returns:
    description: "the selfHarm value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterResult?alt=com.azure.ai.openai.models.ContentFilterResult&text=ContentFilterResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getSexual()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getSexual()"
  name: "getSexual()"
  nameWithType: "ContentFilterResultsForChoice.getSexual()"
  summary: "Get the sexual property: Describes language related to anatomical organs and genitals, romantic relationships, acts portrayed in erotic or affectionate terms, physical sexual acts, including those portrayed as an assault or a forced sexual violent act against one\\\\u2019s will, prostitution, pornography, and abuse."
  syntax: "public ContentFilterResult getSexual()"
  desc: "Get the sexual property: Describes language related to anatomical organs and genitals, romantic relationships, acts portrayed in erotic or affectionate terms, physical sexual acts, including those portrayed as an assault or a forced sexual violent act against one\\\\u2019s will, prostitution, pornography, and abuse."
  returns:
    description: "the sexual value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterResult?alt=com.azure.ai.openai.models.ContentFilterResult&text=ContentFilterResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getViolence()"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.getViolence()"
  name: "getViolence()"
  nameWithType: "ContentFilterResultsForChoice.getViolence()"
  summary: "Get the violence property: Describes language related to physical actions intended to hurt, injure, damage, or kill someone or something; describes weapons, etc."
  syntax: "public ContentFilterResult getViolence()"
  desc: "Get the violence property: Describes language related to physical actions intended to hurt, injure, damage, or kill someone or something; describes weapons, etc."
  returns:
    description: "the violence value."
    type: "<xref href=\"com.azure.ai.openai.models.ContentFilterResult?alt=com.azure.ai.openai.models.ContentFilterResult&text=ContentFilterResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.ContentFilterResultsForChoice.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.ai.openai.models.ContentFilterResultsForChoice.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ContentFilterResultsForChoice.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Information about content filtering evaluated against generated model output."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ContentFilterResultsForChoice?alt=com.azure.ai.openai.models.ContentFilterResultsForChoice&text=ContentFilterResultsForChoice\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.ai.openai.models"
artifact: com.azure:azure-ai-openai:1.0.0-beta.10
