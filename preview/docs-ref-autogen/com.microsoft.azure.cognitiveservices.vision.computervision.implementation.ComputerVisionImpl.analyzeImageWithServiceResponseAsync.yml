### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync"
name: "analyzeImageWithServiceResponseAsync"
nameWithType: "ComputerVisionImpl.analyzeImageWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  name: "analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  nameWithType: "ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter&text=AnalyzeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  returns:
    description: "the observable to the ImageAnalysis object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>,java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude, String modelVersion)"
  name: "analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude, String modelVersion)"
  nameWithType: "ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude, String modelVersion)"
  summary: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&amp;white. Adult - detects if the image is pornographic in nature (depicts nudity or a sex act), or is gory (depicts extreme violence or blood). Sexually suggestive content (aka racy content) is also detected. Objects - detects various objects within an image, including the approximate location. The Objects argument is only available in English. Brands - detects various brands within an image, including the approximate location. The Brands argument is only available in English."
    name: "visualFeatures"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes&text=VisualFeatureTypes\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include: Celebrities - identifies celebrities if detected in the image, Landmarks - identifies notable landmarks in the image."
    name: "details"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Details?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Details&text=Details\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Turn off specified domain models when generating the description."
    name: "descriptionExclude"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude&text=DescriptionExclude\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Optional parameter to specify the version of the AI model. Accepted values are: \"latest\", \"2021-04-01\". Defaults to \"latest\"."
    name: "modelVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude, String modelVersion)"
  returns:
    description: "the observable to the ImageAnalysis object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.6-beta
