### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy"
fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy"
name: "ApplicationHealthPolicy"
nameWithType: "ApplicationHealthPolicy"
summary: "Defines a health policy used to evaluate the health of an application or one of its children entities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ApplicationHealthPolicy**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.ApplicationHealthPolicy()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.ApplicationHealthPolicy()"
  name: "ApplicationHealthPolicy()"
  nameWithType: "ApplicationHealthPolicy.ApplicationHealthPolicy()"
  summary: "Creates an instance of Application<wbr>Health<wbr>Policy class."
  syntax: "public ApplicationHealthPolicy()"
  desc: "Creates an instance of ApplicationHealthPolicy class."
methods:
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.considerWarningAsError()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.considerWarningAsError()"
  name: "considerWarningAsError()"
  nameWithType: "ApplicationHealthPolicy.considerWarningAsError()"
  summary: "Get the consider<wbr>Warning<wbr>AsError property: Indicates whether warnings are treated with the same severity as errors."
  syntax: "public boolean considerWarningAsError()"
  desc: "Get the considerWarningAsError property: Indicates whether warnings are treated with the same severity as errors."
  returns:
    description: "the considerWarningAsError value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.defaultServiceTypeHealthPolicy()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.defaultServiceTypeHealthPolicy()"
  name: "defaultServiceTypeHealthPolicy()"
  nameWithType: "ApplicationHealthPolicy.defaultServiceTypeHealthPolicy()"
  summary: "Get the default<wbr>Service<wbr>Type<wbr>Health<wbr>Policy property: The health policy used by default to evaluate the health of a service type."
  syntax: "public ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy()"
  desc: "Get the defaultServiceTypeHealthPolicy property: The health policy used by default to evaluate the health of a service type."
  returns:
    description: "the defaultServiceTypeHealthPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy&text=ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ApplicationHealthPolicy.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Application<wbr>Health<wbr>Policy from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ApplicationHealthPolicy fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ApplicationHealthPolicy from the JsonReader."
  returns:
    description: "An instance of ApplicationHealthPolicy if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.maxPercentUnhealthyDeployedApplications()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.maxPercentUnhealthyDeployedApplications()"
  name: "maxPercentUnhealthyDeployedApplications()"
  nameWithType: "ApplicationHealthPolicy.maxPercentUnhealthyDeployedApplications()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Deployed<wbr>Applications property: The maximum allowed percentage of unhealthy deployed applications."
  syntax: "public int maxPercentUnhealthyDeployedApplications()"
  desc: "Get the maxPercentUnhealthyDeployedApplications property: The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100. The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error. This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero."
  returns:
    description: "the maxPercentUnhealthyDeployedApplications value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.serviceTypeHealthPolicyMap()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.serviceTypeHealthPolicyMap()"
  name: "serviceTypeHealthPolicyMap()"
  nameWithType: "ApplicationHealthPolicy.serviceTypeHealthPolicyMap()"
  summary: "Get the service<wbr>Type<wbr>Health<wbr>Policy<wbr>Map property: The map with service type health policy per service type name."
  syntax: "public Map<String,ServiceTypeHealthPolicy> serviceTypeHealthPolicyMap()"
  desc: "Get the serviceTypeHealthPolicyMap property: The map with service type health policy per service type name. The map is empty by default."
  returns:
    description: "the serviceTypeHealthPolicyMap value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy&text=ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ApplicationHealthPolicy.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.validate()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.validate()"
  name: "validate()"
  nameWithType: "ApplicationHealthPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withConsiderWarningAsError(boolean)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withConsiderWarningAsError(boolean considerWarningAsError)"
  name: "withConsiderWarningAsError(boolean considerWarningAsError)"
  nameWithType: "ApplicationHealthPolicy.withConsiderWarningAsError(boolean considerWarningAsError)"
  summary: "Set the consider<wbr>Warning<wbr>AsError property: Indicates whether warnings are treated with the same severity as errors."
  parameters:
  - description: "the considerWarningAsError value to set."
    name: "considerWarningAsError"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationHealthPolicy withConsiderWarningAsError(boolean considerWarningAsError)"
  desc: "Set the considerWarningAsError property: Indicates whether warnings are treated with the same severity as errors."
  returns:
    description: "the ApplicationHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withDefaultServiceTypeHealthPolicy(com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)"
  name: "withDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)"
  nameWithType: "ApplicationHealthPolicy.withDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)"
  summary: "Set the default<wbr>Service<wbr>Type<wbr>Health<wbr>Policy property: The health policy used by default to evaluate the health of a service type."
  parameters:
  - description: "the defaultServiceTypeHealthPolicy value to set."
    name: "defaultServiceTypeHealthPolicy"
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy&text=ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationHealthPolicy withDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)"
  desc: "Set the defaultServiceTypeHealthPolicy property: The health policy used by default to evaluate the health of a service type."
  returns:
    description: "the ApplicationHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withMaxPercentUnhealthyDeployedApplications(int)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withMaxPercentUnhealthyDeployedApplications(int maxPercentUnhealthyDeployedApplications)"
  name: "withMaxPercentUnhealthyDeployedApplications(int maxPercentUnhealthyDeployedApplications)"
  nameWithType: "ApplicationHealthPolicy.withMaxPercentUnhealthyDeployedApplications(int maxPercentUnhealthyDeployedApplications)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Deployed<wbr>Applications property: The maximum allowed percentage of unhealthy deployed applications."
  parameters:
  - description: "the maxPercentUnhealthyDeployedApplications value to set."
    name: "maxPercentUnhealthyDeployedApplications"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationHealthPolicy withMaxPercentUnhealthyDeployedApplications(int maxPercentUnhealthyDeployedApplications)"
  desc: "Set the maxPercentUnhealthyDeployedApplications property: The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100. The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error. This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero."
  returns:
    description: "the ApplicationHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withServiceTypeHealthPolicyMap(java.util.Map<java.lang.String,com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy>)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy.withServiceTypeHealthPolicyMap(Map<String,ServiceTypeHealthPolicy> serviceTypeHealthPolicyMap)"
  name: "withServiceTypeHealthPolicyMap(Map<String,ServiceTypeHealthPolicy> serviceTypeHealthPolicyMap)"
  nameWithType: "ApplicationHealthPolicy.withServiceTypeHealthPolicyMap(Map<String,ServiceTypeHealthPolicy> serviceTypeHealthPolicyMap)"
  summary: "Set the service<wbr>Type<wbr>Health<wbr>Policy<wbr>Map property: The map with service type health policy per service type name."
  parameters:
  - description: "the serviceTypeHealthPolicyMap value to set."
    name: "serviceTypeHealthPolicyMap"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceTypeHealthPolicy&text=ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ApplicationHealthPolicy withServiceTypeHealthPolicyMap(Map<String,ServiceTypeHealthPolicy> serviceTypeHealthPolicyMap)"
  desc: "Set the serviceTypeHealthPolicyMap property: The map with service type health policy per service type name. The map is empty by default."
  returns:
    description: "the ApplicationHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a health policy used to evaluate the health of an application or one of its children entities."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.servicefabricmanagedclusters.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabricmanagedclusters:1.0.0-beta.3
