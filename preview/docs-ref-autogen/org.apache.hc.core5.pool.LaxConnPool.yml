### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.pool.LaxConnPool
  id: LaxConnPool
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool
  children:
  - org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int)
  - org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.ConnPoolListener<T>)
  - org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.DisposalCallback<C>,org.apache.hc.core5.pool.ConnPoolListener<T>)
  - org.apache.hc.core5.pool.LaxConnPool.close()
  - org.apache.hc.core5.pool.LaxConnPool.close(org.apache.hc.core5.io.CloseMode)
  - org.apache.hc.core5.pool.LaxConnPool.closeExpired()
  - org.apache.hc.core5.pool.LaxConnPool.closeIdle(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.core5.pool.LaxConnPool.enumAvailable(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  - org.apache.hc.core5.pool.LaxConnPool.enumLeased(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  - org.apache.hc.core5.pool.LaxConnPool.getDefaultMaxPerRoute()
  - org.apache.hc.core5.pool.LaxConnPool.getMaxPerRoute(T)
  - org.apache.hc.core5.pool.LaxConnPool.getMaxTotal()
  - org.apache.hc.core5.pool.LaxConnPool.getRoutes()
  - org.apache.hc.core5.pool.LaxConnPool.getStats(T)
  - org.apache.hc.core5.pool.LaxConnPool.getTotalStats()
  - org.apache.hc.core5.pool.LaxConnPool.isShutdown()
  - org.apache.hc.core5.pool.LaxConnPool.lease(T,java.lang.Object)
  - org.apache.hc.core5.pool.LaxConnPool.lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  - org.apache.hc.core5.pool.LaxConnPool.release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  - org.apache.hc.core5.pool.LaxConnPool.setDefaultMaxPerRoute(int)
  - org.apache.hc.core5.pool.LaxConnPool.setMaxPerRoute(T,int)
  - org.apache.hc.core5.pool.LaxConnPool.setMaxTotal(int)
  - org.apache.hc.core5.pool.LaxConnPool.toString()
  - org.apache.hc.core5.pool.LaxConnPool.validatePendingRequests()
  langs:
  - java
  name: LaxConnPool<T,C>
  nameWithType: LaxConnPool<T,C>
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>
  type: Class
  package: org.apache.hc.core5.pool
  summary: Connection pool with higher concurrency but with lax connection limit guarantees.
  syntax:
    content: public class LaxConnPool<T,C> implements ManagedConnPool<T,C>
    typeParameters:
    - id: T
    - id: C
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.pool.ManagedConnPool<T,C>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int)
  id: LaxConnPool(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: LaxConnPool(int defaultMaxPerRoute)
  nameWithType: LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute)
  overload: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool*
  type: Constructor
  package: org.apache.hc.core5.pool
  syntax:
    content: public LaxConnPool(int defaultMaxPerRoute)
    parameters:
    - id: defaultMaxPerRoute
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.ConnPoolListener<T>)
  id: LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.ConnPoolListener<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, ConnPoolListener<T> connPoolListener)
  nameWithType: LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, ConnPoolListener<T> connPoolListener)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, ConnPoolListener<T> connPoolListener)
  overload: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool*
  type: Constructor
  package: org.apache.hc.core5.pool
  syntax:
    content: public LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, ConnPoolListener<T> connPoolListener)
    parameters:
    - id: defaultMaxPerRoute
      type: int
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: policy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: connPoolListener
      type: org.apache.hc.core5.pool.ConnPoolListener<T>
- uid: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.DisposalCallback<C>,org.apache.hc.core5.pool.ConnPoolListener<T>)
  id: LaxConnPool(int,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.pool.DisposalCallback<C>,org.apache.hc.core5.pool.ConnPoolListener<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, DisposalCallback<C> disposalCallback, ConnPoolListener<T> connPoolListener)
  nameWithType: LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, DisposalCallback<C> disposalCallback, ConnPoolListener<T> connPoolListener)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, DisposalCallback<C> disposalCallback, ConnPoolListener<T> connPoolListener)
  overload: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool*
  type: Constructor
  package: org.apache.hc.core5.pool
  syntax:
    content: public LaxConnPool(int defaultMaxPerRoute, TimeValue timeToLive, PoolReusePolicy policy, DisposalCallback<C> disposalCallback, ConnPoolListener<T> connPoolListener)
    parameters:
    - id: defaultMaxPerRoute
      type: int
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: policy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: disposalCallback
      type: org.apache.hc.core5.pool.DisposalCallback<C>
    - id: connPoolListener
      type: org.apache.hc.core5.pool.ConnPoolListener<T>
- uid: org.apache.hc.core5.pool.LaxConnPool.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: close()
  nameWithType: LaxConnPool<T,C>.close()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.close()
  overload: org.apache.hc.core5.pool.LaxConnPool.close*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void close()
- uid: org.apache.hc.core5.pool.LaxConnPool.close(org.apache.hc.core5.io.CloseMode)
  id: close(org.apache.hc.core5.io.CloseMode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: close(CloseMode closeMode)
  nameWithType: LaxConnPool<T,C>.close(CloseMode closeMode)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.close(CloseMode closeMode)
  overload: org.apache.hc.core5.pool.LaxConnPool.close*
  type: Method
  package: org.apache.hc.core5.pool
  summary: Closes this process or endpoint and releases any system resources associated with it. If the endpoint or the process is already closed then invoking this method has no effect.
  syntax:
    content: public void close(CloseMode closeMode)
    parameters:
    - id: closeMode
      type: org.apache.hc.core5.io.CloseMode
- uid: org.apache.hc.core5.pool.LaxConnPool.closeExpired()
  id: closeExpired()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: closeExpired()
  nameWithType: LaxConnPool<T,C>.closeExpired()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.closeExpired()
  overload: org.apache.hc.core5.pool.LaxConnPool.closeExpired*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void closeExpired()
- uid: org.apache.hc.core5.pool.LaxConnPool.closeIdle(org.apache.hc.core5.util.TimeValue)
  id: closeIdle(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: closeIdle(TimeValue idleTime)
  nameWithType: LaxConnPool<T,C>.closeIdle(TimeValue idleTime)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.closeIdle(TimeValue idleTime)
  overload: org.apache.hc.core5.pool.LaxConnPool.closeIdle*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void closeIdle(TimeValue idleTime)
    parameters:
    - id: idleTime
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.core5.pool.LaxConnPool.enumAvailable(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  id: enumAvailable(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: enumAvailable(Callback<PoolEntry<T,C>> callback)
  nameWithType: LaxConnPool<T,C>.enumAvailable(Callback<PoolEntry<T,C>> callback)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.enumAvailable(Callback<PoolEntry<T,C>> callback)
  overload: org.apache.hc.core5.pool.LaxConnPool.enumAvailable*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void enumAvailable(Callback<PoolEntry<T,C>> callback)
    parameters:
    - id: callback
      type: org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>
- uid: org.apache.hc.core5.pool.LaxConnPool.enumLeased(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  id: enumLeased(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: enumLeased(Callback<PoolEntry<T,C>> callback)
  nameWithType: LaxConnPool<T,C>.enumLeased(Callback<PoolEntry<T,C>> callback)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.enumLeased(Callback<PoolEntry<T,C>> callback)
  overload: org.apache.hc.core5.pool.LaxConnPool.enumLeased*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void enumLeased(Callback<PoolEntry<T,C>> callback)
    parameters:
    - id: callback
      type: org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>
- uid: org.apache.hc.core5.pool.LaxConnPool.getDefaultMaxPerRoute()
  id: getDefaultMaxPerRoute()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getDefaultMaxPerRoute()
  nameWithType: LaxConnPool<T,C>.getDefaultMaxPerRoute()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getDefaultMaxPerRoute()
  overload: org.apache.hc.core5.pool.LaxConnPool.getDefaultMaxPerRoute*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public int getDefaultMaxPerRoute()
    return:
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.getMaxPerRoute(T)
  id: getMaxPerRoute(T)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getMaxPerRoute(T route)
  nameWithType: LaxConnPool<T,C>.getMaxPerRoute(T route)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getMaxPerRoute(T route)
  overload: org.apache.hc.core5.pool.LaxConnPool.getMaxPerRoute*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public int getMaxPerRoute(T route)
    parameters:
    - id: route
      type: T
    return:
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.getMaxTotal()
  id: getMaxTotal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getMaxTotal()
  nameWithType: LaxConnPool<T,C>.getMaxTotal()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getMaxTotal()
  overload: org.apache.hc.core5.pool.LaxConnPool.getMaxTotal*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public int getMaxTotal()
    return:
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.getRoutes()
  id: getRoutes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getRoutes()
  nameWithType: LaxConnPool<T,C>.getRoutes()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getRoutes()
  overload: org.apache.hc.core5.pool.LaxConnPool.getRoutes*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public Set<T> getRoutes()
    return:
      type: java.util.Set<T>
- uid: org.apache.hc.core5.pool.LaxConnPool.getStats(T)
  id: getStats(T)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getStats(T route)
  nameWithType: LaxConnPool<T,C>.getStats(T route)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getStats(T route)
  overload: org.apache.hc.core5.pool.LaxConnPool.getStats*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public PoolStats getStats(T route)
    parameters:
    - id: route
      type: T
    return:
      type: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.core5.pool.LaxConnPool.getTotalStats()
  id: getTotalStats()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: getTotalStats()
  nameWithType: LaxConnPool<T,C>.getTotalStats()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getTotalStats()
  overload: org.apache.hc.core5.pool.LaxConnPool.getTotalStats*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public PoolStats getTotalStats()
    return:
      type: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.core5.pool.LaxConnPool.isShutdown()
  id: isShutdown()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: isShutdown()
  nameWithType: LaxConnPool<T,C>.isShutdown()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.isShutdown()
  overload: org.apache.hc.core5.pool.LaxConnPool.isShutdown*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public boolean isShutdown()
    return:
      type: boolean
- uid: org.apache.hc.core5.pool.LaxConnPool.lease(T,java.lang.Object)
  id: lease(T,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: lease(T route, Object state)
  nameWithType: LaxConnPool<T,C>.lease(T route, Object state)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.lease(T route, Object state)
  overload: org.apache.hc.core5.pool.LaxConnPool.lease*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public Future<PoolEntry<T,C>> lease(T route, Object state)
    parameters:
    - id: route
      type: T
    - id: state
      type: java.lang.Object
    return:
      type: java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T,C>>
- uid: org.apache.hc.core5.pool.LaxConnPool.lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  id: lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  nameWithType: LaxConnPool<T,C>.lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  overload: org.apache.hc.core5.pool.LaxConnPool.lease*
  type: Method
  package: org.apache.hc.core5.pool
  summary: Attempts to lease a connection for the given route and with the given state from the pool.
  syntax:
    content: public Future<PoolEntry<T,C>> lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
    parameters:
    - id: route
      type: T
    - id: state
      type: java.lang.Object
    - id: requestTimeout
      type: org.apache.hc.core5.util.Timeout
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>
    return:
      type: java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T,C>>
- uid: org.apache.hc.core5.pool.LaxConnPool.release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  id: release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: release(PoolEntry<T,C> entry, boolean reusable)
  nameWithType: LaxConnPool<T,C>.release(PoolEntry<T,C> entry, boolean reusable)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.release(PoolEntry<T,C> entry, boolean reusable)
  overload: org.apache.hc.core5.pool.LaxConnPool.release*
  type: Method
  package: org.apache.hc.core5.pool
  summary: Releases the pool entry back to the pool.
  syntax:
    content: public void release(PoolEntry<T,C> entry, boolean reusable)
    parameters:
    - id: entry
      type: org.apache.hc.core5.pool.PoolEntry<T,C>
    - id: reusable
      type: boolean
- uid: org.apache.hc.core5.pool.LaxConnPool.setDefaultMaxPerRoute(int)
  id: setDefaultMaxPerRoute(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: setDefaultMaxPerRoute(int max)
  nameWithType: LaxConnPool<T,C>.setDefaultMaxPerRoute(int max)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setDefaultMaxPerRoute(int max)
  overload: org.apache.hc.core5.pool.LaxConnPool.setDefaultMaxPerRoute*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void setDefaultMaxPerRoute(int max)
    parameters:
    - id: max
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.setMaxPerRoute(T,int)
  id: setMaxPerRoute(T,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: setMaxPerRoute(T route, int max)
  nameWithType: LaxConnPool<T,C>.setMaxPerRoute(T route, int max)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setMaxPerRoute(T route, int max)
  overload: org.apache.hc.core5.pool.LaxConnPool.setMaxPerRoute*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void setMaxPerRoute(T route, int max)
    parameters:
    - id: route
      type: T
    - id: max
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.setMaxTotal(int)
  id: setMaxTotal(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: setMaxTotal(int max)
  nameWithType: LaxConnPool<T,C>.setMaxTotal(int max)
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setMaxTotal(int max)
  overload: org.apache.hc.core5.pool.LaxConnPool.setMaxTotal*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void setMaxTotal(int max)
    parameters:
    - id: max
      type: int
- uid: org.apache.hc.core5.pool.LaxConnPool.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: toString()
  nameWithType: LaxConnPool<T,C>.toString()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.toString()
  overload: org.apache.hc.core5.pool.LaxConnPool.toString*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.pool.LaxConnPool.validatePendingRequests()
  id: validatePendingRequests()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.LaxConnPool
  langs:
  - java
  name: validatePendingRequests()
  nameWithType: LaxConnPool<T,C>.validatePendingRequests()
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.validatePendingRequests()
  overload: org.apache.hc.core5.pool.LaxConnPool.validatePendingRequests*
  type: Method
  package: org.apache.hc.core5.pool
  syntax:
    content: public void validatePendingRequests()
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.core5.pool.PoolReusePolicy
  name: PoolReusePolicy
  nameWithType: PoolReusePolicy
  fullName: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.core5.pool.DisposalCallback<C>
  spec.java:
  - uid: org.apache.hc.core5.pool.DisposalCallback
    name: DisposalCallback
    fullName: org.apache.hc.core5.pool.DisposalCallback
  - name: <
    fullName: <
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.ConnPoolListener<T>
  spec.java:
  - uid: org.apache.hc.core5.pool.ConnPoolListener
    name: ConnPoolListener
    fullName: org.apache.hc.core5.pool.ConnPoolListener
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.LaxConnPool.LaxConnPool*
  name: LaxConnPool
  nameWithType: LaxConnPool<T,C>.LaxConnPool
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.LaxConnPool
  package: org.apache.hc.core5.pool
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.pool.LaxConnPool.isShutdown*
  name: isShutdown
  nameWithType: LaxConnPool<T,C>.isShutdown
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.isShutdown
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.io.CloseMode
  name: CloseMode
  nameWithType: CloseMode
  fullName: org.apache.hc.core5.io.CloseMode
- uid: org.apache.hc.core5.pool.LaxConnPool.close*
  name: close
  nameWithType: LaxConnPool<T,C>.close
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.close
  package: org.apache.hc.core5.pool
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T,C>>
  spec.java:
  - uid: java.util.concurrent.Future
    name: Future
    fullName: java.util.concurrent.Future
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.LaxConnPool.lease*
  name: lease
  nameWithType: LaxConnPool<T,C>.lease
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.lease
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.PoolEntry<T,C>
  spec.java:
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.LaxConnPool.release*
  name: release
  nameWithType: LaxConnPool<T,C>.release
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.release
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.validatePendingRequests*
  name: validatePendingRequests
  nameWithType: LaxConnPool<T,C>.validatePendingRequests
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.validatePendingRequests
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.setMaxTotal*
  name: setMaxTotal
  nameWithType: LaxConnPool<T,C>.setMaxTotal
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setMaxTotal
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.getMaxTotal*
  name: getMaxTotal
  nameWithType: LaxConnPool<T,C>.getMaxTotal
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getMaxTotal
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.setDefaultMaxPerRoute*
  name: setDefaultMaxPerRoute
  nameWithType: LaxConnPool<T,C>.setDefaultMaxPerRoute
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setDefaultMaxPerRoute
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.getDefaultMaxPerRoute*
  name: getDefaultMaxPerRoute
  nameWithType: LaxConnPool<T,C>.getDefaultMaxPerRoute
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getDefaultMaxPerRoute
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.setMaxPerRoute*
  name: setMaxPerRoute
  nameWithType: LaxConnPool<T,C>.setMaxPerRoute
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.setMaxPerRoute
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.getMaxPerRoute*
  name: getMaxPerRoute
  nameWithType: LaxConnPool<T,C>.getMaxPerRoute
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getMaxPerRoute
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.PoolStats
  name: PoolStats
  nameWithType: PoolStats
  fullName: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.core5.pool.LaxConnPool.getTotalStats*
  name: getTotalStats
  nameWithType: LaxConnPool<T,C>.getTotalStats
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getTotalStats
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.getStats*
  name: getStats
  nameWithType: LaxConnPool<T,C>.getStats
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getStats
  package: org.apache.hc.core5.pool
- uid: java.util.Set<T>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.LaxConnPool.getRoutes*
  name: getRoutes
  nameWithType: LaxConnPool<T,C>.getRoutes
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.getRoutes
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T,C>>
  spec.java:
  - uid: org.apache.hc.core5.function.Callback
    name: Callback
    fullName: org.apache.hc.core5.function.Callback
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.LaxConnPool.enumAvailable*
  name: enumAvailable
  nameWithType: LaxConnPool<T,C>.enumAvailable
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.enumAvailable
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.enumLeased*
  name: enumLeased
  nameWithType: LaxConnPool<T,C>.enumLeased
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.enumLeased
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.closeIdle*
  name: closeIdle
  nameWithType: LaxConnPool<T,C>.closeIdle
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.closeIdle
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.LaxConnPool.closeExpired*
  name: closeExpired
  nameWithType: LaxConnPool<T,C>.closeExpired
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.closeExpired
  package: org.apache.hc.core5.pool
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.pool.LaxConnPool.toString*
  name: toString
  nameWithType: LaxConnPool<T,C>.toString
  fullName: org.apache.hc.core5.pool.LaxConnPool<T,C>.toString
  package: org.apache.hc.core5.pool
- uid: C
  name: C
  nameWithType: C
  fullName: C
- uid: org.apache.hc.core5.pool.ManagedConnPool<T,C>
  name: ManagedConnPool<T,C>
  nameWithType: ManagedConnPool<T,C>
  fullName: org.apache.hc.core5.pool.ManagedConnPool<T,C>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.core5.pool.DisposalCallback
  name: DisposalCallback
  nameWithType: DisposalCallback
  fullName: org.apache.hc.core5.pool.DisposalCallback
- uid: org.apache.hc.core5.pool.ConnPoolListener
  name: ConnPoolListener
  nameWithType: ConnPoolListener
  fullName: org.apache.hc.core5.pool.ConnPoolListener
- uid: org.apache.hc.core5.pool.PoolEntry
  name: PoolEntry
  nameWithType: PoolEntry
  fullName: org.apache.hc.core5.pool.PoolEntry
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
- uid: T,C
  name: T,C
  nameWithType: T,C
  fullName: T,C
- uid: java.util.concurrent.Future
  name: Future
  nameWithType: Future
  fullName: java.util.concurrent.Future
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: org.apache.hc.core5.function.Callback
  name: Callback
  nameWithType: Callback
  fullName: org.apache.hc.core5.function.Callback
- uid: org.apache.hc.core5.pool.ManagedConnPool
  name: ManagedConnPool
  nameWithType: ManagedConnPool
  fullName: org.apache.hc.core5.pool.ManagedConnPool
