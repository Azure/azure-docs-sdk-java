### YamlMime:JavaType
uid: "com.azure.communication.email.models.EmailContent"
fullName: "com.azure.communication.email.models.EmailContent"
name: "EmailContent"
nameWithType: "EmailContent"
summary: "Content of the email."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EmailContent"
constructors:
- uid: "com.azure.communication.email.models.EmailContent.EmailContent(java.lang.String)"
  fullName: "com.azure.communication.email.models.EmailContent.EmailContent(String subject)"
  name: "EmailContent(String subject)"
  nameWithType: "EmailContent.EmailContent(String subject)"
  summary: "Constructor for Email<wbr>Content"
  parameters:
  - description: "the subject of the email message"
    name: "subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EmailContent(String subject)"
  desc: "Constructor for EmailContent"
methods:
- uid: "com.azure.communication.email.models.EmailContent.getHtml()"
  fullName: "com.azure.communication.email.models.EmailContent.getHtml()"
  name: "getHtml()"
  nameWithType: "EmailContent.getHtml()"
  summary: "Get the html property: Html version of the email message."
  syntax: "public String getHtml()"
  desc: "Get the html property: Html version of the email message."
  returns:
    description: "the html value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.email.models.EmailContent.getPlainText()"
  fullName: "com.azure.communication.email.models.EmailContent.getPlainText()"
  name: "getPlainText()"
  nameWithType: "EmailContent.getPlainText()"
  summary: "Get the plain<wbr>Text property: Plain text version of the email message."
  syntax: "public String getPlainText()"
  desc: "Get the plainText property: Plain text version of the email message."
  returns:
    description: "the plainText value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.email.models.EmailContent.getSubject()"
  fullName: "com.azure.communication.email.models.EmailContent.getSubject()"
  name: "getSubject()"
  nameWithType: "EmailContent.getSubject()"
  summary: "Get the subject property: Subject of the email message."
  syntax: "public String getSubject()"
  desc: "Get the subject property: Subject of the email message."
  returns:
    description: "the subject value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.email.models.EmailContent.setHtml(java.lang.String)"
  fullName: "com.azure.communication.email.models.EmailContent.setHtml(String html)"
  name: "setHtml(String html)"
  nameWithType: "EmailContent.setHtml(String html)"
  summary: "Set the html property: Html version of the email message."
  parameters:
  - description: "the html value to set."
    name: "html"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EmailContent setHtml(String html)"
  desc: "Set the html property: Html version of the email message."
  returns:
    description: "the EmailContent object itself."
    type: "<xref href=\"com.azure.communication.email.models.EmailContent?alt=com.azure.communication.email.models.EmailContent&text=EmailContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.email.models.EmailContent.setPlainText(java.lang.String)"
  fullName: "com.azure.communication.email.models.EmailContent.setPlainText(String plainText)"
  name: "setPlainText(String plainText)"
  nameWithType: "EmailContent.setPlainText(String plainText)"
  summary: "Set the plain<wbr>Text property: Plain text version of the email message."
  parameters:
  - description: "the plainText value to set."
    name: "plainText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EmailContent setPlainText(String plainText)"
  desc: "Set the plainText property: Plain text version of the email message."
  returns:
    description: "the EmailContent object itself."
    type: "<xref href=\"com.azure.communication.email.models.EmailContent?alt=com.azure.communication.email.models.EmailContent&text=EmailContent\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Content of the email."
metadata: {}
package: "com.azure.communication.email.models"
artifact: com.azure:azure-communication-email:1.0.0-beta.1
