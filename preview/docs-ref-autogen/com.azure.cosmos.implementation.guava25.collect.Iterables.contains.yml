### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.contains*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.contains"
name: "contains"
nameWithType: "Iterables.contains"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.contains(java.lang.Iterable<?>,java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.contains(Iterable<?> iterable, Object element)"
  name: "contains(Iterable<?> iterable, Object element)"
  nameWithType: "Iterables.contains(Iterable<?> iterable, Object element)"
  summary: "Returns `true` if `iterable` contains any element `o` for which `Objects.equals(o, element)` would return `true`. Otherwise returns `false`, even in cases where <xref uid=\"java.util.Collection.contains\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection#contains\"></xref> might throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NullPointerException\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref>."
  parameters:
  - name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "element"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean contains(Iterable<?> iterable, Object element)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
