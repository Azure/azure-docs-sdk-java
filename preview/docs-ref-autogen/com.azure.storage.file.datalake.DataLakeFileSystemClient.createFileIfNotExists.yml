### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFileIfNotExists*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFileIfNotExists"
name: "createFileIfNotExists"
nameWithType: "DataLakeFileSystemClient.createFileIfNotExists"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFileIfNotExists(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFileIfNotExists(String fileName)"
  name: "createFileIfNotExists(String fileName)"
  nameWithType: "DataLakeFileSystemClient.createFileIfNotExists(String fileName)"
  summary: "Creates a new file within a file system if it does not exist."
  parameters:
  - description: "Name of the file to create. If the path name contains special characters, pass in the url encoded\n  version of the path name."
    name: "fileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileClient createFileIfNotExists(String fileName)"
  desc: "Creates a new file within a file system if it does not exist. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nDataLakeFileClient fileClient = client.createFile(fileName);\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/datalakestoragegen2/path/create"
  returns:
    description: "A <xref uid=\"com.azure.storage.file.datalake.DataLakeFileClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileClient\"></xref> used to interact with the file created."
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileClient?alt=com.azure.storage.file.datalake.DataLakeFileClient&text=DataLakeFileClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
