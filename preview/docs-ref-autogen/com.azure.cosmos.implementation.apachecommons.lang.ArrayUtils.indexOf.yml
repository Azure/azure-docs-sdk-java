### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf*"
fullName: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf"
name: "indexOf"
nameWithType: "ArrayUtils.indexOf"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(Object[] array, Object objectToFind)"
  name: "indexOf(Object[] array, Object objectToFind)"
  nameWithType: "ArrayUtils.indexOf(Object[] array, Object objectToFind)"
  summary: "Finds the index of the given object in the array.\n\nThis method returns <xref uid=\"com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INDEX_NOT_FOUND\"></xref> (`-1`) for a `null` input array."
  parameters:
  - description: "the array to search through for the object, may be <code>null</code>"
    name: "array"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object to find, may be <code>null</code>"
    name: "objectToFind"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int indexOf(Object[] array, Object objectToFind)"
  returns:
    description: "the index of the object within the array,\n  <xref uid=\"com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INDEX_NOT_FOUND\"></xref> (<code>-1</code>) if not found or <code>null</code> array input"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)"
  fullName: "com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(Object[] array, Object objectToFind, int startIndex)"
  name: "indexOf(Object[] array, Object objectToFind, int startIndex)"
  nameWithType: "ArrayUtils.indexOf(Object[] array, Object objectToFind, int startIndex)"
  summary: "Finds the index of the given object in the array starting at the given index.\n\nThis method returns <xref uid=\"com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INDEX_NOT_FOUND\"></xref> (`-1`) for a `null` input array.\n\nA negative startIndex is treated as zero. A startIndex larger than the array length will return <xref uid=\"com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INDEX_NOT_FOUND\"></xref> (`-1`)."
  parameters:
  - description: "the array to search through for the object, may be <code>null</code>"
    name: "array"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object to find, may be <code>null</code>"
    name: "objectToFind"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the index to start searching at"
    name: "startIndex"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int indexOf(Object[] array, Object objectToFind, int startIndex)"
  returns:
    description: "the index of the object within the array starting at the index,\n  <xref uid=\"com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INDEX_NOT_FOUND\"></xref> (<code>-1</code>) if not found or <code>null</code> array input"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.lang"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
