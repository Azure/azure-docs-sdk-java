### YamlMime:JavaType
uid: "com.azure.maps.timezone.TimeZoneClient"
fullName: "com.azure.maps.timezone.TimeZoneClient"
name: "TimeZoneClient"
nameWithType: "TimeZoneClient"
summary: "<xref uid=\"com.azure.maps.timezone.TimeZoneClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeZoneClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.timezone.TimeZoneClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeZoneClientBuilder\"></xref>, as shown below."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **TimeZoneClient**"
methods:
- uid: "com.azure.maps.timezone.TimeZoneClient.convertWindowsTimezoneToIana(java.lang.String,java.lang.String)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.convertWindowsTimezoneToIana(String windowsTimezoneId, String windowsTerritoryCode)"
  name: "convertWindowsTimezoneToIana(String windowsTimezoneId, String windowsTerritoryCode)"
  nameWithType: "TimeZoneClient.convertWindowsTimezoneToIana(String windowsTimezoneId, String windowsTerritoryCode)"
  summary: "\\_\\_Windows to IANA Time Zone\\_\\_"
  parameters:
  - description: "The Windows time zone ID."
    name: "windowsTimezoneId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Windows Time Zone territory code."
    name: "windowsTerritoryCode"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public List<IanaId> convertWindowsTimezoneToIana(String windowsTimezoneId, String windowsTerritoryCode)"
  desc: "\\_\\_Windows to IANA Time Zone\\_\\_\n\n```java\nclient.convertWindowsTimezoneToIana(\"pacific standard time\", null);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a corresponding IANA ID, given a valid Windows Time Zone ID. Multiple IANA IDs may be returned for a single Windows ID. It is possible to narrow these results by adding an optional territory parameter."
  returns:
    description: "this object is returned from a successful Timezone Windows To IANA call."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.IanaId?alt=com.azure.maps.timezone.models.IanaId&text=IanaId\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.convertWindowsTimezoneToIanaWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.convertWindowsTimezoneToIanaWithResponse(String windowsTimezoneId, String windowsTerritoryCode, Context context)"
  name: "convertWindowsTimezoneToIanaWithResponse(String windowsTimezoneId, String windowsTerritoryCode, Context context)"
  nameWithType: "TimeZoneClient.convertWindowsTimezoneToIanaWithResponse(String windowsTimezoneId, String windowsTerritoryCode, Context context)"
  summary: "\\_\\_Windows to IANA Time Zone\\_\\_"
  parameters:
  - description: "The Windows time zone ID."
    name: "windowsTimezoneId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Windows Time Zone territory code."
    name: "windowsTerritoryCode"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<IanaId>> convertWindowsTimezoneToIanaWithResponse(String windowsTimezoneId, String windowsTerritoryCode, Context context)"
  desc: "\\_\\_Windows to IANA Time Zone\\_\\_\n\n```java\nclient.convertWindowsTimezoneToIana(\"pacific standard time\", null);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a corresponding IANA ID, given a valid Windows Time Zone ID. Multiple IANA IDs may be returned for a single Windows ID. It is possible to narrow these results by adding an optional territory parameter."
  returns:
    description: "this object is returned from a successful Timezone Windows To IANA call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.IanaId?alt=com.azure.maps.timezone.models.IanaId&text=IanaId\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getIanaTimezoneIds()"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getIanaTimezoneIds()"
  name: "getIanaTimezoneIds()"
  nameWithType: "TimeZoneClient.getIanaTimezoneIds()"
  summary: "\\_\\_IANA Time Zones\\_\\_"
  syntax: "public List<IanaId> getIanaTimezoneIds()"
  desc: "\\_\\_IANA Time Zones\\_\\_\n\n```java\nclient.getIanaTimezoneIds();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a full list of IANA time zone IDs. Updates to the IANA service will be reflected in the system within one day."
  returns:
    description: "this object is returned from a successful Timezone Enum IANA call."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.IanaId?alt=com.azure.maps.timezone.models.IanaId&text=IanaId\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getIanaTimezoneIdsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getIanaTimezoneIdsWithResponse(Context context)"
  name: "getIanaTimezoneIdsWithResponse(Context context)"
  nameWithType: "TimeZoneClient.getIanaTimezoneIdsWithResponse(Context context)"
  summary: "\\_\\_IANA Time Zones\\_\\_"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<IanaId>> getIanaTimezoneIdsWithResponse(Context context)"
  desc: "\\_\\_IANA Time Zones\\_\\_\n\n```java\nclient.getIanaTimezoneIds();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a full list of IANA time zone IDs. Updates to the IANA service will be reflected in the system within one day."
  returns:
    description: "this object is returned from a successful Timezone Enum IANA call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.IanaId?alt=com.azure.maps.timezone.models.IanaId&text=IanaId\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getIanaVersion()"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getIanaVersion()"
  name: "getIanaVersion()"
  nameWithType: "TimeZoneClient.getIanaVersion()"
  summary: "\\_\\_Time Zone IANA Version\\_\\_"
  syntax: "public TimeZoneIanaVersionResult getIanaVersion()"
  desc: "\\_\\_Time Zone IANA Version\\_\\_\n\n```java\nclient.getIanaVersion();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns the current IANA version number as Metadata."
  returns:
    description: "this object is returned from a successful Timezone IANA Version call."
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneIanaVersionResult?alt=com.azure.maps.timezone.models.TimeZoneIanaVersionResult&text=TimeZoneIanaVersionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.timezone.TimeZoneClient.getIanaVersionWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getIanaVersionWithResponse(Context context)"
  name: "getIanaVersionWithResponse(Context context)"
  nameWithType: "TimeZoneClient.getIanaVersionWithResponse(Context context)"
  summary: "\\_\\_Time Zone IANA Version\\_\\_"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TimeZoneIanaVersionResult> getIanaVersionWithResponse(Context context)"
  desc: "\\_\\_Time Zone IANA Version\\_\\_\n\n```java\nclient.getIanaVersion();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns the current IANA version number as Metadata."
  returns:
    description: "this object is returned from a successful Timezone IANA Version call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.timezone.models.TimeZoneIanaVersionResult?alt=com.azure.maps.timezone.models.TimeZoneIanaVersionResult&text=TimeZoneIanaVersionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByCoordinates(com.azure.maps.timezone.models.TimeZoneCoordinateOptions)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByCoordinates(TimeZoneCoordinateOptions options)"
  name: "getTimezoneByCoordinates(TimeZoneCoordinateOptions options)"
  nameWithType: "TimeZoneClient.getTimezoneByCoordinates(TimeZoneCoordinateOptions options)"
  summary: "\\_\\_Time Zone by Coordinates\\_\\_"
  parameters:
  - description: "contains parameters for get timezone by coordinates"
    name: "options"
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneCoordinateOptions?alt=com.azure.maps.timezone.models.TimeZoneCoordinateOptions&text=TimeZoneCoordinateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TimeZoneResult getTimezoneByCoordinates(TimeZoneCoordinateOptions options)"
  desc: "\\_\\_Time Zone by Coordinates\\_\\_\n\n```java\nGeoPosition cd = new GeoPosition(-122, 47.0);\n TimeZoneCoordinateOptions op = new TimeZoneCoordinateOptions(cd).setTimezoneOptions(TimeZoneOptions.ALL);\n client.getTimezoneByCoordinates(op);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns current, historical, and future time zone information for a specified latitude-longitude pair. In addition, the API provides sunset and sunrise times for a given location."
  returns:
    description: "this object is returned from a successful Timezone By ID call or By Coordinates call."
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneResult?alt=com.azure.maps.timezone.models.TimeZoneResult&text=TimeZoneResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByCoordinatesWithResponse(com.azure.maps.timezone.models.TimeZoneCoordinateOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByCoordinatesWithResponse(TimeZoneCoordinateOptions options, Context context)"
  name: "getTimezoneByCoordinatesWithResponse(TimeZoneCoordinateOptions options, Context context)"
  nameWithType: "TimeZoneClient.getTimezoneByCoordinatesWithResponse(TimeZoneCoordinateOptions options, Context context)"
  summary: "\\_\\_Time Zone by Coordinates\\_\\_"
  parameters:
  - description: "options contains parameters for get timezone by coordinates"
    name: "options"
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneCoordinateOptions?alt=com.azure.maps.timezone.models.TimeZoneCoordinateOptions&text=TimeZoneCoordinateOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TimeZoneResult> getTimezoneByCoordinatesWithResponse(TimeZoneCoordinateOptions options, Context context)"
  desc: "\\_\\_Time Zone by Coordinates\\_\\_\n\n```java\nGeoPosition cd = new GeoPosition(-122, 47.0);\n TimeZoneCoordinateOptions op = new TimeZoneCoordinateOptions(cd).setTimezoneOptions(TimeZoneOptions.ALL);\n client.getTimezoneByCoordinates(op);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns current, historical, and future time zone information for a specified latitude-longitude pair. In addition, the API provides sunset and sunrise times for a given location."
  returns:
    description: "this object is returned from a successful Timezone By ID call or By Coordinates call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.timezone.models.TimeZoneResult?alt=com.azure.maps.timezone.models.TimeZoneResult&text=TimeZoneResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getTimezoneById(com.azure.maps.timezone.models.TimeZoneIdOptions)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getTimezoneById(TimeZoneIdOptions options)"
  name: "getTimezoneById(TimeZoneIdOptions options)"
  nameWithType: "TimeZoneClient.getTimezoneById(TimeZoneIdOptions options)"
  summary: "\\_\\_Time Zone by Id\\_\\_"
  parameters:
  - description: "contains parameters for get timezone by id"
    name: "options"
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneIdOptions?alt=com.azure.maps.timezone.models.TimeZoneIdOptions&text=TimeZoneIdOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TimeZoneResult getTimezoneById(TimeZoneIdOptions options)"
  desc: "\\_\\_Time Zone by Id\\_\\_\n\n```java\nTimeZoneIdOptions options = new TimeZoneIdOptions(\"Asia/Bahrain\").setOptions(TimeZoneOptions.ALL);\n client.getTimezoneById(options);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns current, historical, and future time zone information for the specified IANA time zone ID."
  returns:
    description: "this object is returned from a successful Timezone By ID call or By Coordinates call."
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneResult?alt=com.azure.maps.timezone.models.TimeZoneResult&text=TimeZoneResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByIdWithResponse(com.azure.maps.timezone.models.TimeZoneIdOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getTimezoneByIdWithResponse(TimeZoneIdOptions options, Context context)"
  name: "getTimezoneByIdWithResponse(TimeZoneIdOptions options, Context context)"
  nameWithType: "TimeZoneClient.getTimezoneByIdWithResponse(TimeZoneIdOptions options, Context context)"
  summary: "\\_\\_Time Zone by Id\\_\\_"
  parameters:
  - description: "contains parameters for get timezone by id"
    name: "options"
    type: "<xref href=\"com.azure.maps.timezone.models.TimeZoneIdOptions?alt=com.azure.maps.timezone.models.TimeZoneIdOptions&text=TimeZoneIdOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TimeZoneResult> getTimezoneByIdWithResponse(TimeZoneIdOptions options, Context context)"
  desc: "\\_\\_Time Zone by Id\\_\\_\n\n```java\nTimeZoneIdOptions options = new TimeZoneIdOptions(\"Asia/Bahrain\").setOptions(TimeZoneOptions.ALL);\n client.getTimezoneById(options);\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns current, historical, and future time zone information for the specified IANA time zone ID."
  returns:
    description: "this object is returned from a successful Timezone By ID call or By Coordinates call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.timezone.models.TimeZoneResult?alt=com.azure.maps.timezone.models.TimeZoneResult&text=TimeZoneResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getWindowsTimezoneIds()"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getWindowsTimezoneIds()"
  name: "getWindowsTimezoneIds()"
  nameWithType: "TimeZoneClient.getWindowsTimezoneIds()"
  summary: "\\_\\_Windows Time Zones\\_\\_"
  syntax: "public List<TimeZoneWindows> getWindowsTimezoneIds()"
  desc: "\\_\\_Windows Time Zones\\_\\_\n\n```java\nclient.getWindowsTimezoneIds();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a full list of Windows Time Zone IDs."
  returns:
    description: "this object is returned from a successful Timezone Enum Windows call."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.TimeZoneWindows?alt=com.azure.maps.timezone.models.TimeZoneWindows&text=TimeZoneWindows\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.timezone.TimeZoneClient.getWindowsTimezoneIdsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.maps.timezone.TimeZoneClient.getWindowsTimezoneIdsWithResponse(Context context)"
  name: "getWindowsTimezoneIdsWithResponse(Context context)"
  nameWithType: "TimeZoneClient.getWindowsTimezoneIdsWithResponse(Context context)"
  summary: "\\_\\_Windows Time Zones\\_\\_"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<TimeZoneWindows>> getWindowsTimezoneIdsWithResponse(Context context)"
  desc: "\\_\\_Windows Time Zones\\_\\_\n\n```java\nclient.getWindowsTimezoneIds();\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis API returns a full list of Windows Time Zone IDs."
  returns:
    description: "this object is returned from a successful Timezone Enum Windows call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.timezone.models.TimeZoneWindows?alt=com.azure.maps.timezone.models.TimeZoneWindows&text=TimeZoneWindows\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "<xref uid=\"com.azure.maps.timezone.TimeZoneClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeZoneClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.timezone.TimeZoneClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeZoneClientBuilder\"></xref>, as shown below. Creating a sync client using a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref>:\n\n```java\n// Authenticates using subscription key\n AzureKeyCredential keyCredential = new AzureKeyCredential(System.getenv(\"SUBSCRIPTION_KEY\"));\n\n // Creates a client\n TimeZoneClient client = new TimeZoneClientBuilder() \n     .credential(keyCredential)\n     .timezoneClientId(System.getenv(\"MAPS_CLIENT_ID\"))\n     .buildClient();\n```"
metadata: {}
package: "com.azure.maps.timezone"
artifact: com.azure:azure-maps-timezone:1.0.0-beta.1
