### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.unmodifiableMultimap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap"
name: "<K,V>unmodifiableMultimap"
nameWithType: "Multimaps.<K,V>unmodifiableMultimap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(ImmutableMultimap<K,V> delegate)"
  name: "<K,V>unmodifiableMultimap(ImmutableMultimap<K,V> delegate)"
  nameWithType: "Multimaps.<K,V>unmodifiableMultimap(ImmutableMultimap<K,V> delegate)"
  summary: "Simply returns its argument."
  parameters:
  - name: "delegate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap&text=ImmutableMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Multimap<K,V> <K,V>unmodifiableMultimap(ImmutableMultimap<K,V> delegate)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(Multimap<K,V> delegate)"
  name: "<K,V>unmodifiableMultimap(Multimap<K,V> delegate)"
  nameWithType: "Multimaps.<K,V>unmodifiableMultimap(Multimap<K,V> delegate)"
  summary: "Returns an unmodifiable view of the specified multimap. Query operations on the returned multimap \"read through\" to the specified multimap, and attempts to modify the returned multimap, either directly or through the multimap's views, result in an `UnsupportedOperationException`.\n\nNote that the generated multimap's <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.removeAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#removeAll\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.replaceValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#replaceValues\"></xref> methods return collections that are modifiable.\n\nThe returned multimap will be serializable if the specified multimap is serializable."
  parameters:
  - description: "the multimap for which an unmodifiable view is to be returned"
    name: "delegate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Multimap<K,V> <K,V>unmodifiableMultimap(Multimap<K,V> delegate)"
  returns:
    description: "an unmodifiable view of the specified multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
