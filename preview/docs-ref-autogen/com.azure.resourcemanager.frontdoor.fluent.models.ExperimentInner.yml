### YamlMime:JavaType
uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner"
fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner"
name: "ExperimentInner"
nameWithType: "ExperimentInner"
summary: "Defines the properties of an Experiment."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ExperimentInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.ExperimentInner()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.ExperimentInner()"
  name: "ExperimentInner()"
  nameWithType: "ExperimentInner.ExperimentInner()"
  syntax: "public ExperimentInner()"
methods:
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.description()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.description()"
  name: "description()"
  nameWithType: "ExperimentInner.description()"
  summary: "Get the description property: The description of the details or intents of the Experiment."
  syntax: "public String description()"
  desc: "Get the description property: The description of the details or intents of the Experiment."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.enabledState()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.enabledState()"
  name: "enabledState()"
  nameWithType: "ExperimentInner.enabledState()"
  summary: "Get the enabled<wbr>State property: The state of the Experiment."
  syntax: "public State enabledState()"
  desc: "Get the enabledState property: The state of the Experiment."
  returns:
    description: "the enabledState value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.State?alt=com.azure.resourcemanager.frontdoor.models.State&text=State\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.endpointA()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.endpointA()"
  name: "endpointA()"
  nameWithType: "ExperimentInner.endpointA()"
  summary: "Get the endpointA property: The endpoint A of an experiment."
  syntax: "public Endpoint endpointA()"
  desc: "Get the endpointA property: The endpoint A of an experiment."
  returns:
    description: "the endpointA value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Endpoint?alt=com.azure.resourcemanager.frontdoor.models.Endpoint&text=Endpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.endpointB()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.endpointB()"
  name: "endpointB()"
  nameWithType: "ExperimentInner.endpointB()"
  summary: "Get the endpointB property: The endpoint B of an experiment."
  syntax: "public Endpoint endpointB()"
  desc: "Get the endpointB property: The endpoint B of an experiment."
  returns:
    description: "the endpointB value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Endpoint?alt=com.azure.resourcemanager.frontdoor.models.Endpoint&text=Endpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.resourceState()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.resourceState()"
  name: "resourceState()"
  nameWithType: "ExperimentInner.resourceState()"
  summary: "Get the resource<wbr>State property: Resource status."
  syntax: "public NetworkExperimentResourceState resourceState()"
  desc: "Get the resourceState property: Resource status."
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.NetworkExperimentResourceState?alt=com.azure.resourcemanager.frontdoor.models.NetworkExperimentResourceState&text=NetworkExperimentResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.scriptFileUri()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.scriptFileUri()"
  name: "scriptFileUri()"
  nameWithType: "ExperimentInner.scriptFileUri()"
  summary: "Get the script<wbr>File<wbr>Uri property: The uri to the Script used in the Experiment."
  syntax: "public String scriptFileUri()"
  desc: "Get the scriptFileUri property: The uri to the Script used in the Experiment."
  returns:
    description: "the scriptFileUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.status()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.status()"
  name: "status()"
  nameWithType: "ExperimentInner.status()"
  summary: "Get the status property: The description of Experiment status from the server side."
  syntax: "public String status()"
  desc: "Get the status property: The description of Experiment status from the server side."
  returns:
    description: "the status value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.validate()"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.validate()"
  name: "validate()"
  nameWithType: "ExperimentInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "ExperimentInner.withDescription(String description)"
  summary: "Set the description property: The description of the details or intents of the Experiment."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExperimentInner withDescription(String description)"
  desc: "Set the description property: The description of the details or intents of the Experiment."
  returns:
    description: "the ExperimentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEnabledState(com.azure.resourcemanager.frontdoor.models.State)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEnabledState(State enabledState)"
  name: "withEnabledState(State enabledState)"
  nameWithType: "ExperimentInner.withEnabledState(State enabledState)"
  summary: "Set the enabled<wbr>State property: The state of the Experiment."
  parameters:
  - description: "the enabledState value to set."
    name: "enabledState"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.State?alt=com.azure.resourcemanager.frontdoor.models.State&text=State\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExperimentInner withEnabledState(State enabledState)"
  desc: "Set the enabledState property: The state of the Experiment."
  returns:
    description: "the ExperimentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEndpointA(com.azure.resourcemanager.frontdoor.models.Endpoint)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEndpointA(Endpoint endpointA)"
  name: "withEndpointA(Endpoint endpointA)"
  nameWithType: "ExperimentInner.withEndpointA(Endpoint endpointA)"
  summary: "Set the endpointA property: The endpoint A of an experiment."
  parameters:
  - description: "the endpointA value to set."
    name: "endpointA"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Endpoint?alt=com.azure.resourcemanager.frontdoor.models.Endpoint&text=Endpoint\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExperimentInner withEndpointA(Endpoint endpointA)"
  desc: "Set the endpointA property: The endpoint A of an experiment."
  returns:
    description: "the ExperimentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEndpointB(com.azure.resourcemanager.frontdoor.models.Endpoint)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withEndpointB(Endpoint endpointB)"
  name: "withEndpointB(Endpoint endpointB)"
  nameWithType: "ExperimentInner.withEndpointB(Endpoint endpointB)"
  summary: "Set the endpointB property: The endpoint B of an experiment."
  parameters:
  - description: "the endpointB value to set."
    name: "endpointB"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Endpoint?alt=com.azure.resourcemanager.frontdoor.models.Endpoint&text=Endpoint\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExperimentInner withEndpointB(Endpoint endpointB)"
  desc: "Set the endpointB property: The endpoint B of an experiment."
  returns:
    description: "the ExperimentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ExperimentInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExperimentInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ExperimentInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExperimentInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner?alt=com.azure.resourcemanager.frontdoor.fluent.models.ExperimentInner&text=ExperimentInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the properties of an Experiment."
metadata: {}
package: "com.azure.resourcemanager.frontdoor.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.0.0-beta.1
