### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.newSetFromMap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newSetFromMap"
name: "<E>newSetFromMap"
nameWithType: "Sets.<E>newSetFromMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newSetFromMap(java.util.Map<E,java.lang.Boolean>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newSetFromMap(Map<E,Boolean> map)"
  name: "<E>newSetFromMap(Map<E,Boolean> map)"
  nameWithType: "Sets.<E>newSetFromMap(Map<E,Boolean> map)"
  summary: "Returns a set backed by the specified map. The resulting set displays the same ordering, concurrency, and performance characteristics as the backing map. In essence, this factory method provides a <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref> implementation corresponding to any <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> implementation. There is no need to use this method on a <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> implementation that already has a corresponding <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref> implementation (such as <xref uid=\"java.util.HashMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.HashMap\"></xref> or <xref uid=\"java.util.TreeMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.TreeMap\"></xref>).\n\nEach method invocation on the set returned by this method results in exactly one method invocation on the backing map or its `keySet` view, with one exception. The `addAll` method is implemented as a sequence of `put` invocations on the backing map.\n\nThe specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment:\n\n```java\nSet identityHashSet = Sets.newSetFromMap(\n     new IdentityHashMap());\n \n\n The returned set is serializable if the backing map is.\n```"
  parameters:
  - description: "the backing map"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Set<E> <E>newSetFromMap(Map<E,Boolean> map)"
  returns:
    description: "the set backed by the map"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
