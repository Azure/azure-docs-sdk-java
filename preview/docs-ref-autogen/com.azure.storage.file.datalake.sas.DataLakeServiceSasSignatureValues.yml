### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
name: "DataLakeServiceSasSignatureValues"
nameWithType: "DataLakeServiceSasSignatureValues"
summary: "Used to initialize parameters for a Shared Access Signature (SAS) for an Azure Data Lake Storage service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataLakeServiceSasSignatureValues"
constructors:
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String identifier)"
  name: "DataLakeServiceSasSignatureValues(String identifier)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String identifier)"
  summary: "Creates an object with the specified identifier."
  parameters:
  - description: "Name of the access policy"
    name: "identifier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues(String identifier)"
  desc: "Creates an object with the specified identifier. NOTE: Identifier can not be used for a <xref uid=\"com.azure.storage.file.datalake.models.UserDelegationKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserDelegationKey\"></xref> SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.time.OffsetDateTime,com.azure.storage.file.datalake.sas.FileSystemSasPermission)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, FileSystemSasPermission permissions)"
  name: "DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, FileSystemSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, FileSystemSasPermission permissions)"
  summary: "Creates an object with the specified expiry time and permissions"
  parameters:
  - description: "The time after which the SAS will no longer work."
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemSasPermission\"></xref> allowed by the SAS."
    name: "permissions"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission?alt=com.azure.storage.file.datalake.sas.FileSystemSasPermission&text=FileSystemSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, FileSystemSasPermission permissions)"
  desc: "Creates an object with the specified expiry time and permissions"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.time.OffsetDateTime,com.azure.storage.file.datalake.sas.PathSasPermission)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, PathSasPermission permissions)"
  name: "DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, PathSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, PathSasPermission permissions)"
  summary: "Creates an object with the specified expiry time and permissions"
  parameters:
  - description: "When the SAS will no longer work"
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.sas.PathSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathSasPermission\"></xref> allowed by the SAS"
    name: "permissions"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.PathSasPermission?alt=com.azure.storage.file.datalake.sas.PathSasPermission&text=PathSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, PathSasPermission permissions)"
  desc: "Creates an object with the specified expiry time and permissions"
methods:
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getAgentObjectId()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getAgentObjectId()"
  name: "getAgentObjectId()"
  nameWithType: "DataLakeServiceSasSignatureValues.getAgentObjectId()"
  syntax: "public String getAgentObjectId()"
  returns:
    description: "The AAD object ID of a user assumed to be unauthorized by the owner of the user delegation key to\n perform the action granted by the SAS token. The service will validate the SAS token and ensure that the owner\n of the user delegation key has the required permissions before granting access and the service will perform an\n additional POSIX ACL check to determine if this user is authorized to perform the requested operation."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl()"
  name: "getCacheControl()"
  nameWithType: "DataLakeServiceSasSignatureValues.getCacheControl()"
  syntax: "public String getCacheControl()"
  returns:
    description: "the cache-control header for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition()"
  name: "getContentDisposition()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentDisposition()"
  syntax: "public String getContentDisposition()"
  returns:
    description: "the content-disposition header for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding()"
  name: "getContentEncoding()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentEncoding()"
  syntax: "public String getContentEncoding()"
  returns:
    description: "the content-encoding header for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage()"
  name: "getContentLanguage()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentLanguage()"
  syntax: "public String getContentLanguage()"
  returns:
    description: "the content-language header for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType()"
  name: "getContentType()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentType()"
  syntax: "public String getContentType()"
  returns:
    description: "the content-type header for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCorrelationId()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCorrelationId()"
  name: "getCorrelationId()"
  nameWithType: "DataLakeServiceSasSignatureValues.getCorrelationId()"
  syntax: "public String getCorrelationId()"
  returns:
    description: "the correlation id value for the SAS."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime()"
  name: "getExpiryTime()"
  nameWithType: "DataLakeServiceSasSignatureValues.getExpiryTime()"
  syntax: "public OffsetDateTime getExpiryTime()"
  returns:
    description: "the time after which the SAS will no longer work."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier()"
  name: "getIdentifier()"
  nameWithType: "DataLakeServiceSasSignatureValues.getIdentifier()"
  syntax: "public String getIdentifier()"
  returns:
    description: "the name of the access policy on the file system this SAS references if any. Please see\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy\">here</a>\n for more information."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()"
  name: "getPermissions()"
  nameWithType: "DataLakeServiceSasSignatureValues.getPermissions()"
  syntax: "public String getPermissions()"
  returns:
    description: "the permissions string allowed by the SAS. Please refer to either <xref uid=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemSasPermission\"></xref> or\n <xref uid=\"com.azure.storage.file.datalake.sas.PathSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathSasPermission\"></xref> depending on the resource being accessed for help determining the permissions allowed."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPreauthorizedAgentObjectId()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPreauthorizedAgentObjectId()"
  name: "getPreauthorizedAgentObjectId()"
  nameWithType: "DataLakeServiceSasSignatureValues.getPreauthorizedAgentObjectId()"
  syntax: "public String getPreauthorizedAgentObjectId()"
  returns:
    description: "The AAD object ID of a user assumed to be authorized by the owner of the user delegation key to perform\n the action granted by the SAS token. The service will validate the SAS token and ensure that the owner of the\n user delegation key has the required permissions before granting access but no additional permission check for\n the agent object id will be performed."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol()"
  name: "getProtocol()"
  nameWithType: "DataLakeServiceSasSignatureValues.getProtocol()"
  syntax: "public SasProtocol getProtocol()"
  returns:
    description: "the <xref uid=\"com.azure.storage.common.sas.SasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasProtocol\"></xref> which determines the protocols allowed by the SAS."
    type: "<xref href=\"com.azure.storage.common.sas.SasProtocol?alt=com.azure.storage.common.sas.SasProtocol&text=SasProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange()"
  name: "getSasIpRange()"
  nameWithType: "DataLakeServiceSasSignatureValues.getSasIpRange()"
  syntax: "public SasIpRange getSasIpRange()"
  returns:
    description: "the <xref uid=\"com.azure.storage.common.sas.SasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
    type: "<xref href=\"com.azure.storage.common.sas.SasIpRange?alt=com.azure.storage.common.sas.SasIpRange&text=SasIpRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime()"
  name: "getStartTime()"
  nameWithType: "DataLakeServiceSasSignatureValues.getStartTime()"
  syntax: "public OffsetDateTime getStartTime()"
  returns:
    description: "when the SAS will take effect."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion()"
  name: "getVersion()"
  nameWithType: "DataLakeServiceSasSignatureValues.getVersion()"
  syntax: "public String getVersion()"
  returns:
    description: "the version of the service this SAS will target. If not specified, it will default to the version\n targeted by the library."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setAgentObjectId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setAgentObjectId(String agentObjectId)"
  name: "setAgentObjectId(String agentObjectId)"
  nameWithType: "DataLakeServiceSasSignatureValues.setAgentObjectId(String agentObjectId)"
  summary: "Sets the AAD object ID of a user assumed to be unauthorized by the owner of the user delegation key to perform the action granted by the SAS token."
  parameters:
  - description: "The AAD object ID of a user assumed to be unauthorized by the owner of the user delegation\n key to perform the action granted by the SAS token. The service will validate the SAS token and ensure that the\n owner of the user delegation key has the required permissions before granting access and the service will\n perform an additional POSIX ACL check to determine if this user is authorized to perform the requested operation."
    name: "agentObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setAgentObjectId(String agentObjectId)"
  desc: "Sets the AAD object ID of a user assumed to be unauthorized by the owner of the user delegation key to perform the action granted by the SAS token."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl(String cacheControl)"
  name: "setCacheControl(String cacheControl)"
  nameWithType: "DataLakeServiceSasSignatureValues.setCacheControl(String cacheControl)"
  summary: "Sets the cache-control header for the SAS."
  parameters:
  - description: "Cache-Control header value"
    name: "cacheControl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setCacheControl(String cacheControl)"
  desc: "Sets the cache-control header for the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition(String contentDisposition)"
  name: "setContentDisposition(String contentDisposition)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentDisposition(String contentDisposition)"
  summary: "Sets the content-disposition header for the SAS."
  parameters:
  - description: "Content-Disposition header value"
    name: "contentDisposition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setContentDisposition(String contentDisposition)"
  desc: "Sets the content-disposition header for the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding(String contentEncoding)"
  name: "setContentEncoding(String contentEncoding)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentEncoding(String contentEncoding)"
  summary: "Sets the content-encoding header for the SAS."
  parameters:
  - description: "Content-Encoding header value"
    name: "contentEncoding"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setContentEncoding(String contentEncoding)"
  desc: "Sets the content-encoding header for the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage(String contentLanguage)"
  name: "setContentLanguage(String contentLanguage)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentLanguage(String contentLanguage)"
  summary: "Sets the content-language header for the SAS."
  parameters:
  - description: "Content-Language header value"
    name: "contentLanguage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setContentLanguage(String contentLanguage)"
  desc: "Sets the content-language header for the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType(String contentType)"
  name: "setContentType(String contentType)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentType(String contentType)"
  summary: "Sets the content-type header for the SAS."
  parameters:
  - description: "Content-Type header value"
    name: "contentType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setContentType(String contentType)"
  desc: "Sets the content-type header for the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCorrelationId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCorrelationId(String correlationId)"
  name: "setCorrelationId(String correlationId)"
  nameWithType: "DataLakeServiceSasSignatureValues.setCorrelationId(String correlationId)"
  summary: "Sets the correlation id value for the SAS."
  parameters:
  - description: "A correlation ID used to correlate the storage audit logs with the audit logs used by the\n principal generating and distributing SAS."
    name: "correlationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setCorrelationId(String correlationId)"
  desc: "Sets the correlation id value for the SAS.\n\nNote: This parameter is only valid for user delegation SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  name: "setExpiryTime(OffsetDateTime expiryTime)"
  nameWithType: "DataLakeServiceSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  summary: "Sets the time after which the SAS will no longer work."
  parameters:
  - description: "When the SAS will no longer work"
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setExpiryTime(OffsetDateTime expiryTime)"
  desc: "Sets the time after which the SAS will no longer work."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(String identifier)"
  name: "setIdentifier(String identifier)"
  nameWithType: "DataLakeServiceSasSignatureValues.setIdentifier(String identifier)"
  summary: "Sets the name of the access policy on the file system this SAS references if any."
  parameters:
  - description: "Name of the access policy"
    name: "identifier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setIdentifier(String identifier)"
  desc: "Sets the name of the access policy on the file system this SAS references if any. Please see [here][] for more information.\n\n\n[here]: https://docs.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy"
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.FileSystemSasPermission)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(FileSystemSasPermission permissions)"
  name: "setPermissions(FileSystemSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPermissions(FileSystemSasPermission permissions)"
  summary: "Sets the File System permissions allowed by the SAS."
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemSasPermission\"></xref>"
    name: "permissions"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission?alt=com.azure.storage.file.datalake.sas.FileSystemSasPermission&text=FileSystemSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setPermissions(FileSystemSasPermission permissions)"
  desc: "Sets the File System permissions allowed by the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.PathSasPermission)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(PathSasPermission permissions)"
  name: "setPermissions(PathSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPermissions(PathSasPermission permissions)"
  summary: "Sets the Path permissions allowed by the SAS."
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.sas.PathSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathSasPermission\"></xref>"
    name: "permissions"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.PathSasPermission?alt=com.azure.storage.file.datalake.sas.PathSasPermission&text=PathSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setPermissions(PathSasPermission permissions)"
  desc: "Sets the Path permissions allowed by the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPreauthorizedAgentObjectId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPreauthorizedAgentObjectId(String preauthorizedAgentObjectId)"
  name: "setPreauthorizedAgentObjectId(String preauthorizedAgentObjectId)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPreauthorizedAgentObjectId(String preauthorizedAgentObjectId)"
  summary: "Sets the AAD object ID of a user assumed to be authorized by the owner of the user delegation key to perform the action granted by the SAS token."
  parameters:
  - description: "The AAD object ID of a user assumed to be authorized by the owner of the user\n delegation key to perform the action granted by the SAS token. The service will validate the SAS token and\n ensure that the owner of the user delegation key has the required permissions before granting access but no\n additional permission check for the agent object id will be performed."
    name: "preauthorizedAgentObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setPreauthorizedAgentObjectId(String preauthorizedAgentObjectId)"
  desc: "Sets the AAD object ID of a user assumed to be authorized by the owner of the user delegation key to perform the action granted by the SAS token."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol(com.azure.storage.common.sas.SasProtocol)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol(SasProtocol protocol)"
  name: "setProtocol(SasProtocol protocol)"
  nameWithType: "DataLakeServiceSasSignatureValues.setProtocol(SasProtocol protocol)"
  summary: "Sets the <xref uid=\"com.azure.storage.common.sas.SasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasProtocol\"></xref> which determines the protocols allowed by the SAS."
  parameters:
  - description: "Protocol for the SAS"
    name: "protocol"
    type: "<xref href=\"com.azure.storage.common.sas.SasProtocol?alt=com.azure.storage.common.sas.SasProtocol&text=SasProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setProtocol(SasProtocol protocol)"
  desc: "Sets the <xref uid=\"com.azure.storage.common.sas.SasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasProtocol\"></xref> which determines the protocols allowed by the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange(com.azure.storage.common.sas.SasIpRange)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange(SasIpRange sasIpRange)"
  name: "setSasIpRange(SasIpRange sasIpRange)"
  nameWithType: "DataLakeServiceSasSignatureValues.setSasIpRange(SasIpRange sasIpRange)"
  summary: "Sets the <xref uid=\"com.azure.storage.common.sas.SasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  parameters:
  - description: "Allowed IP range to set"
    name: "sasIpRange"
    type: "<xref href=\"com.azure.storage.common.sas.SasIpRange?alt=com.azure.storage.common.sas.SasIpRange&text=SasIpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setSasIpRange(SasIpRange sasIpRange)"
  desc: "Sets the <xref uid=\"com.azure.storage.common.sas.SasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "DataLakeServiceSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  summary: "Sets when the SAS will take effect."
  parameters:
  - description: "When the SAS takes effect"
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceSasSignatureValues setStartTime(OffsetDateTime startTime)"
  desc: "Sets when the SAS will take effect."
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(String version)"
  name: "setVersion(String version)"
  nameWithType: "DataLakeServiceSasSignatureValues.setVersion(String version)"
  summary: "Sets the version of the service this SAS will target."
  deprecatedTag: "The version is set to the latest version of sas. Users should stop calling this API as it is now treated as a no-op."
  parameters:
  - description: "Version to target"
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic DataLakeServiceSasSignatureValues setVersion(String version)"
  desc: "Sets the version of the service this SAS will target. If not specified, it will default to the version targeted by the library."
  hasDeprecatedTag: true
  returns:
    description: "the updated DataLakeServiceSasSignatureValues object"
    type: "<xref href=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Used to initialize parameters for a Shared Access Signature (SAS) for an Azure Data Lake Storage service. Once all the values here are set, use the appropriate SAS generation method on the desired file system/path client to obtain a representation of the SAS which can then be applied to a new client using the .sasToken(String) method on the desired client builder."
metadata: {}
package: "com.azure.storage.file.datalake.sas"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
