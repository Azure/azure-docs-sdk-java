### YamlMime:JavaMember
uid: "com.azure.core.amqp.implementation.AmqpSendLink.send*"
fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send"
name: "send"
nameWithType: "AmqpSendLink.send"
members:
- uid: "com.azure.core.amqp.implementation.AmqpSendLink.send(byte[],int,int,org.apache.qpid.proton.amqp.transport.DeliveryState)"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)"
  name: "send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)"
  nameWithType: "AmqpSendLink.send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)"
  summary: "send the message and return <xref uid=\"org.apache.qpid.proton.amqp.transport.DeliveryState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeliveryState\"></xref> of this delivery in message broker."
  parameters:
  - description: "to send to message broker"
    name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "offset of the message."
    name: "arrayOffset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "to be set on the message."
    name: "messageFormat"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "to be updated on the <xref uid=\"org.apache.qpid.proton.engine.Delivery\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Delivery\"></xref>."
    name: "deliveryState"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeliveryState> send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)"
  returns:
    description: "A completable of <xref uid=\"org.apache.qpid.proton.amqp.transport.DeliveryState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeliveryState\"></xref> received from Message Broker."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>)"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send(List<Message> messageBatch)"
  name: "send(List<Message> messageBatch)"
  nameWithType: "AmqpSendLink.send(List<Message> messageBatch)"
  summary: "Batches the messages given into a single proton-j message that is sent down the wire."
  parameters:
  - description: "The batch of messages to send to the service."
    name: "messageBatch"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Void> send(List<Message> messageBatch)"
  returns:
    description: "A Mono that completes when all the batched messages are successfully transmitted to the message broker."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>,org.apache.qpid.proton.amqp.transport.DeliveryState)"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send(List<Message> messages, DeliveryState deliveryState)"
  name: "send(List<Message> messages, DeliveryState deliveryState)"
  nameWithType: "AmqpSendLink.send(List<Message> messages, DeliveryState deliveryState)"
  summary: "Batches list of messages given into a single proton-j message that is sent down the wire."
  parameters:
  - description: "The list of messages to send to the service."
    name: "messages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "to be sent along with message."
    name: "deliveryState"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> send(List<Message> messages, DeliveryState deliveryState)"
  returns:
    description: "A Mono that completes when all the batched messages are successfully transmitted to message broker."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message)"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send(Message message)"
  name: "send(Message message)"
  nameWithType: "AmqpSendLink.send(Message message)"
  summary: "Sends a single message to the remote endpoint."
  parameters:
  - description: "Message to send."
    name: "message"
    type: "<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> send(Message message)"
  returns:
    description: "A Mono that completes when the message has been sent."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message,org.apache.qpid.proton.amqp.transport.DeliveryState)"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink.send(Message message, DeliveryState deliveryState)"
  name: "send(Message message, DeliveryState deliveryState)"
  nameWithType: "AmqpSendLink.send(Message message, DeliveryState deliveryState)"
  summary: "Sends a single message to the remote endpoint."
  parameters:
  - description: "Message to send."
    name: "message"
    type: "<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - description: "to be sent along with message."
    name: "deliveryState"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> send(Message message, DeliveryState deliveryState)"
  returns:
    description: "A Mono that completes when the message has been sent."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.amqp.implementation"
artifact: com.azure:azure-core-amqp:1.7.0-beta.2
