### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.FluentIterable.transformAndConcat*"
fullName: "com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<T>transformAndConcat"
name: "<T>transformAndConcat"
nameWithType: "FluentIterable<E>.<T>transformAndConcat"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.FluentIterable.<T>transformAndConcat(com.azure.cosmos.implementation.guava25.base.Function<? super E,? extends java.lang.Iterable<? extends T>>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<T>transformAndConcat(Function<? super E,? extends Iterable<? extends T>> function)"
  name: "<T>transformAndConcat(Function<? super E,? extends Iterable<? extends T>> function)"
  nameWithType: "FluentIterable<E>.<T>transformAndConcat(Function<? super E,? extends Iterable<? extends T>> function)"
  summary: "Applies `function` to each element of this fluent iterable and returns a fluent iterable with the concatenated combination of results. `function` returns an Iterable of results.\n\nThe returned fluent iterable's iterator supports `remove()` if this function-returned iterables' iterator does. After a successful `remove()` call, the returned fluent iterable no longer contains the corresponding element.\n\n**`Stream` equivalent:** <xref uid=\"java.util.stream.Stream.flatMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream#flatMap\"></xref> (using a function that produces streams, not iterables)."
  parameters:
  - name: "function"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends java.lang.Iterable?alt=? extends java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public FluentIterable<T> <T>transformAndConcat(Function<? super E,? extends Iterable<? extends T>> function)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
