### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal"
fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal"
name: "CertBasedSecurityPrincipal"
nameWithType: "CertBasedSecurityPrincipal"
summary: "Cert based security principal with Ledger Role<wbr>Name."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CertBasedSecurityPrincipal"
constructors:
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  name: "CertBasedSecurityPrincipal()"
  nameWithType: "CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  syntax: "public CertBasedSecurityPrincipal()"
methods:
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.cert()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.cert()"
  name: "cert()"
  nameWithType: "CertBasedSecurityPrincipal.cert()"
  summary: "Get the cert property: Public key of the user cert (.pem or .cer)."
  syntax: "public String cert()"
  desc: "Get the cert property: Public key of the user cert (.pem or .cer)."
  returns:
    description: "the cert value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.ledgerRoleName()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.ledgerRoleName()"
  name: "ledgerRoleName()"
  nameWithType: "CertBasedSecurityPrincipal.ledgerRoleName()"
  summary: "Get the ledger<wbr>Role<wbr>Name property: Ledger<wbr>Role associated with the Security Principal of Ledger."
  syntax: "public LedgerRoleName ledgerRoleName()"
  desc: "Get the ledgerRoleName property: LedgerRole associated with the Security Principal of Ledger."
  returns:
    description: "the ledgerRoleName value."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerRoleName?alt=com.azure.resourcemanager.confidentialledger.models.LedgerRoleName&text=LedgerRoleName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.validate()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.validate()"
  name: "validate()"
  nameWithType: "CertBasedSecurityPrincipal.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withCert(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withCert(String cert)"
  name: "withCert(String cert)"
  nameWithType: "CertBasedSecurityPrincipal.withCert(String cert)"
  summary: "Set the cert property: Public key of the user cert (.pem or .cer)."
  parameters:
  - description: "the cert value to set."
    name: "cert"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertBasedSecurityPrincipal withCert(String cert)"
  desc: "Set the cert property: Public key of the user cert (.pem or .cer)."
  returns:
    description: "the CertBasedSecurityPrincipal object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withLedgerRoleName(com.azure.resourcemanager.confidentialledger.models.LedgerRoleName)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  name: "withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  nameWithType: "CertBasedSecurityPrincipal.withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  summary: "Set the ledger<wbr>Role<wbr>Name property: Ledger<wbr>Role associated with the Security Principal of Ledger."
  parameters:
  - description: "the ledgerRoleName value to set."
    name: "ledgerRoleName"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerRoleName?alt=com.azure.resourcemanager.confidentialledger.models.LedgerRoleName&text=LedgerRoleName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertBasedSecurityPrincipal withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  desc: "Set the ledgerRoleName property: LedgerRole associated with the Security Principal of Ledger."
  returns:
    description: "the CertBasedSecurityPrincipal object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Cert based security principal with Ledger RoleName."
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.1
