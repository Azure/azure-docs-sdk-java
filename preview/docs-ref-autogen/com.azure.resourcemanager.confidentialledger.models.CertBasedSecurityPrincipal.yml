### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal"
fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal"
name: "CertBasedSecurityPrincipal"
nameWithType: "CertBasedSecurityPrincipal"
summary: "Cert based security principal with Ledger Role<wbr>Name."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CertBasedSecurityPrincipal**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  name: "CertBasedSecurityPrincipal()"
  nameWithType: "CertBasedSecurityPrincipal.CertBasedSecurityPrincipal()"
  summary: "Creates an instance of Cert<wbr>Based<wbr>Security<wbr>Principal class."
  syntax: "public CertBasedSecurityPrincipal()"
  desc: "Creates an instance of CertBasedSecurityPrincipal class."
methods:
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.cert()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.cert()"
  name: "cert()"
  nameWithType: "CertBasedSecurityPrincipal.cert()"
  summary: "Get the cert property: Public key of the user cert (.pem or .cer)."
  syntax: "public String cert()"
  desc: "Get the cert property: Public key of the user cert (.pem or .cer)."
  returns:
    description: "the cert value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CertBasedSecurityPrincipal.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Cert<wbr>Based<wbr>Security<wbr>Principal from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CertBasedSecurityPrincipal fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the CertBasedSecurityPrincipal."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CertBasedSecurityPrincipal from the JsonReader."
  returns:
    description: "An instance of CertBasedSecurityPrincipal if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.ledgerRoleName()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.ledgerRoleName()"
  name: "ledgerRoleName()"
  nameWithType: "CertBasedSecurityPrincipal.ledgerRoleName()"
  summary: "Get the ledger<wbr>Role<wbr>Name property: Ledger<wbr>Role associated with the Security Principal of Ledger."
  syntax: "public LedgerRoleName ledgerRoleName()"
  desc: "Get the ledgerRoleName property: LedgerRole associated with the Security Principal of Ledger."
  returns:
    description: "the ledgerRoleName value."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerRoleName?alt=com.azure.resourcemanager.confidentialledger.models.LedgerRoleName&text=LedgerRoleName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CertBasedSecurityPrincipal.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.validate()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.validate()"
  name: "validate()"
  nameWithType: "CertBasedSecurityPrincipal.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withCert(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withCert(String cert)"
  name: "withCert(String cert)"
  nameWithType: "CertBasedSecurityPrincipal.withCert(String cert)"
  summary: "Set the cert property: Public key of the user cert (.pem or .cer)."
  parameters:
  - description: "the cert value to set."
    name: "cert"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CertBasedSecurityPrincipal withCert(String cert)"
  desc: "Set the cert property: Public key of the user cert (.pem or .cer)."
  returns:
    description: "the CertBasedSecurityPrincipal object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withLedgerRoleName(com.azure.resourcemanager.confidentialledger.models.LedgerRoleName)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal.withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  name: "withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  nameWithType: "CertBasedSecurityPrincipal.withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  summary: "Set the ledger<wbr>Role<wbr>Name property: Ledger<wbr>Role associated with the Security Principal of Ledger."
  parameters:
  - description: "the ledgerRoleName value to set."
    name: "ledgerRoleName"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerRoleName?alt=com.azure.resourcemanager.confidentialledger.models.LedgerRoleName&text=LedgerRoleName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertBasedSecurityPrincipal withLedgerRoleName(LedgerRoleName ledgerRoleName)"
  desc: "Set the ledgerRoleName property: LedgerRole associated with the Security Principal of Ledger."
  returns:
    description: "the CertBasedSecurityPrincipal object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Cert based security principal with Ledger RoleName."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.1.0-beta.1
