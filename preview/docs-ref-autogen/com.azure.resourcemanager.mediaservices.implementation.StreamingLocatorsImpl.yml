### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl"
fullName: "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl"
name: "StreamingLocatorsImpl"
nameWithType: "StreamingLocatorsImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingLocatorsImpl implements StreamingLocators"
constructors:
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.StreamingLocatorsImpl(com.azure.resourcemanager.mediaservices.fluent.StreamingLocatorsClient,com.azure.resourcemanager.mediaservices.MediaservicesManager)"
methods:
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.define(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.delete(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.deleteById(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.get(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.getById(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.list(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.listContentKeys(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.listContentKeysWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.listPaths(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingLocatorsImpl.listPathsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocators?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocators&text=StreamingLocators\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
