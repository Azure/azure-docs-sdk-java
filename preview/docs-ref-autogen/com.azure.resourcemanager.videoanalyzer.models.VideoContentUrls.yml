### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls"
fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls"
name: "VideoContentUrls"
nameWithType: "VideoContentUrls"
summary: "Set of URLs to the video content."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VideoContentUrls"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.VideoContentUrls()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.VideoContentUrls()"
  name: "VideoContentUrls()"
  nameWithType: "VideoContentUrls.VideoContentUrls()"
  syntax: "public VideoContentUrls()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.archiveBaseUrl()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.archiveBaseUrl()"
  name: "archiveBaseUrl()"
  nameWithType: "VideoContentUrls.archiveBaseUrl()"
  summary: "Get the archive<wbr>Base<wbr>Url property: Video archive streaming base URL."
  syntax: "public String archiveBaseUrl()"
  desc: "Get the archiveBaseUrl property: Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\n\n\\- HLSv4: /manifest(format=m3u8-aapl).m3u8 - HLS CMAF: /manifest(format=m3u8-cmaf) - DASH CMAF: /manifest(format=mpd-time-cmaf)\n\nMoreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
  returns:
    description: "the archiveBaseUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.downloadUrl()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.downloadUrl()"
  name: "downloadUrl()"
  nameWithType: "VideoContentUrls.downloadUrl()"
  summary: "Get the download<wbr>Url property: Video file download URL."
  syntax: "public String downloadUrl()"
  desc: "Get the downloadUrl property: Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
  returns:
    description: "the downloadUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.previewImageUrls()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.previewImageUrls()"
  name: "previewImageUrls()"
  nameWithType: "VideoContentUrls.previewImageUrls()"
  summary: "Get the preview<wbr>Image<wbr>Urls property: Video preview image URLs."
  syntax: "public VideoPreviewImageUrls previewImageUrls()"
  desc: "Get the previewImageUrls property: Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled."
  returns:
    description: "the previewImageUrls value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoPreviewImageUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoPreviewImageUrls&text=VideoPreviewImageUrls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.rtspTunnelUrl()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.rtspTunnelUrl()"
  name: "rtspTunnelUrl()"
  nameWithType: "VideoContentUrls.rtspTunnelUrl()"
  summary: "Get the rtsp<wbr>Tunnel<wbr>Url property: Video low-latency streaming URL."
  syntax: "public String rtspTunnelUrl()"
  desc: "Get the rtspTunnelUrl property: Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
  returns:
    description: "the rtspTunnelUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.validate()"
  name: "validate()"
  nameWithType: "VideoContentUrls.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withArchiveBaseUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withArchiveBaseUrl(String archiveBaseUrl)"
  name: "withArchiveBaseUrl(String archiveBaseUrl)"
  nameWithType: "VideoContentUrls.withArchiveBaseUrl(String archiveBaseUrl)"
  summary: "Set the archive<wbr>Base<wbr>Url property: Video archive streaming base URL."
  parameters:
  - description: "the archiveBaseUrl value to set."
    name: "archiveBaseUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoContentUrls withArchiveBaseUrl(String archiveBaseUrl)"
  desc: "Set the archiveBaseUrl property: Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\n\n\\- HLSv4: /manifest(format=m3u8-aapl).m3u8 - HLS CMAF: /manifest(format=m3u8-cmaf) - DASH CMAF: /manifest(format=mpd-time-cmaf)\n\nMoreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
  returns:
    description: "the VideoContentUrls object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls&text=VideoContentUrls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withDownloadUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withDownloadUrl(String downloadUrl)"
  name: "withDownloadUrl(String downloadUrl)"
  nameWithType: "VideoContentUrls.withDownloadUrl(String downloadUrl)"
  summary: "Set the download<wbr>Url property: Video file download URL."
  parameters:
  - description: "the downloadUrl value to set."
    name: "downloadUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoContentUrls withDownloadUrl(String downloadUrl)"
  desc: "Set the downloadUrl property: Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
  returns:
    description: "the VideoContentUrls object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls&text=VideoContentUrls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withPreviewImageUrls(com.azure.resourcemanager.videoanalyzer.models.VideoPreviewImageUrls)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withPreviewImageUrls(VideoPreviewImageUrls previewImageUrls)"
  name: "withPreviewImageUrls(VideoPreviewImageUrls previewImageUrls)"
  nameWithType: "VideoContentUrls.withPreviewImageUrls(VideoPreviewImageUrls previewImageUrls)"
  summary: "Set the preview<wbr>Image<wbr>Urls property: Video preview image URLs."
  parameters:
  - description: "the previewImageUrls value to set."
    name: "previewImageUrls"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoPreviewImageUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoPreviewImageUrls&text=VideoPreviewImageUrls\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoContentUrls withPreviewImageUrls(VideoPreviewImageUrls previewImageUrls)"
  desc: "Set the previewImageUrls property: Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled."
  returns:
    description: "the VideoContentUrls object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls&text=VideoContentUrls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withRtspTunnelUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls.withRtspTunnelUrl(String rtspTunnelUrl)"
  name: "withRtspTunnelUrl(String rtspTunnelUrl)"
  nameWithType: "VideoContentUrls.withRtspTunnelUrl(String rtspTunnelUrl)"
  summary: "Set the rtsp<wbr>Tunnel<wbr>Url property: Video low-latency streaming URL."
  parameters:
  - description: "the rtspTunnelUrl value to set."
    name: "rtspTunnelUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoContentUrls withRtspTunnelUrl(String rtspTunnelUrl)"
  desc: "Set the rtspTunnelUrl property: Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
  returns:
    description: "the VideoContentUrls object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls&text=VideoContentUrls\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Set of URLs to the video content."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
