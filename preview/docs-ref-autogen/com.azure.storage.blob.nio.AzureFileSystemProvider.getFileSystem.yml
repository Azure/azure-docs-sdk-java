### YamlMime:JavaMember
uid: "com.azure.storage.blob.nio.AzureFileSystemProvider.getFileSystem*"
fullName: "com.azure.storage.blob.nio.AzureFileSystemProvider.getFileSystem"
name: "getFileSystem"
nameWithType: "AzureFileSystemProvider.getFileSystem"
members:
- uid: "com.azure.storage.blob.nio.AzureFileSystemProvider.getFileSystem(java.net.URI)"
  fullName: "com.azure.storage.blob.nio.AzureFileSystemProvider.getFileSystem(URI uri)"
  name: "getFileSystem(URI uri)"
  nameWithType: "AzureFileSystemProvider.getFileSystem(URI uri)"
  summary: "Returns an existing FileSystem created by this provider.\n\nThe format of a `URI` identifying an file system is `\"azb://?account=<accountName>\"`.\n\nTrying to retrieve a closed file system will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemNotFoundException\"></xref>. Once closed, a file system with the same identifier may be reopened."
  overridden: "java.nio.file.spi.FileSystemProvider.getFileSystem(java.net.URI)"
  parameters:
  - description: "URI reference"
    name: "uri"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystem getFileSystem(URI uri)"
  returns:
    description: "the file system"
    type: "<xref href=\"java.nio.file.FileSystem?alt=java.nio.file.FileSystem&text=FileSystem\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
