### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device"
fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device"
name: "Device"
nameWithType: "Device"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class Device implements DeviceTwin.PropertyCallBack<String,Object>"
constructors:
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.Device()"
methods:
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.clean()"
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.getDesiredProp()"
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.getReportedProp()"
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.setDesiredPropertyCallback(com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<java.lang.String,java.lang.Object>,java.lang.Object)"
- "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.setReportedProp(com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"
type: "class"
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack&text=PropertyCallBack\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.DeviceTwin"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
