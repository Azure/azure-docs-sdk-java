### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber*"
fullName: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber"
name: "_parsePosNumber"
nameWithType: "ReaderBasedJsonParser._parsePosNumber"
members:
- uid: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(int)"
  fullName: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(int ch)"
  name: "_parsePosNumber(int ch)"
  nameWithType: "ReaderBasedJsonParser._parsePosNumber(int ch)"
  summary: "Initial parsing method for number values. It needs to be able to parse enough input to be able to determine whether the value is to be considered a simple integer value, or a more generic decimal value: latter of which needs to be expressed as a floating point number. The basic rule is that if the number has no fractional or exponential part, it is an integer; otherwise a floating point number.\n\nBecause much of input has to be processed in any case, no partial parsing is done: all input text will be stored for further processing. However, actual numeric value conversion will be deferred, since it is usually the most complicated and costliest part of processing."
  parameters:
  - name: "ch"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final JsonToken _parsePosNumber(int ch)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
