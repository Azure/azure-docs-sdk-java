### YamlMime:JavaMember
uid: "com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins*"
fullName: "com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins"
name: "setUpperMargins"
nameWithType: "EntireDetectResponse.setUpperMargins"
members:
- uid: "com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins(java.util.List<java.lang.Float>)"
  fullName: "com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins(List<Float> upperMargins)"
  name: "setUpperMargins(List<Float> upperMargins)"
  nameWithType: "EntireDetectResponse.setUpperMargins(List<Float> upperMargins)"
  summary: "Set the upperMargins property: UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)\\*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series."
  parameters:
  - description: "the upperMargins value to set."
    name: "upperMargins"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EntireDetectResponse setUpperMargins(List<Float> upperMargins)"
  returns:
    description: "the EntireDetectResponse object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.EntireDetectResponse?alt=com.azure.ai.anomalydetector.models.EntireDetectResponse&text=EntireDetectResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
