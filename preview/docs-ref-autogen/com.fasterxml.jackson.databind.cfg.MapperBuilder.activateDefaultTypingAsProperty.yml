### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTypingAsProperty"
name: "activateDefaultTypingAsProperty"
nameWithType: "MapperBuilder<M,B>.activateDefaultTypingAsProperty"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)"
  name: "activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)"
  nameWithType: "MapperBuilder<M,B>.activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)"
  summary: "Method for enabling automatic inclusion of type information -- needed for proper deserialization of polymorphic types (unless types have been annotated with <xref uid=\"com.fasterxml.jackson.annotation.JsonTypeInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonTypeInfo\"></xref>) -- using \"As.PROPERTY\" inclusion mechanism and specified property name to use for inclusion (default being \"@class\" since default type information always uses class name as type identifier)\n\nNOTE: choice of <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content."
  parameters:
  - name: "subtypeValidator"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator?alt=com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator&text=PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
  - name: "applicability"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping?alt=com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping&text=DefaultTyping\" data-throw-if-not-resolved=\"False\" />"
  - name: "propertyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public B activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)"
  returns:
    type: "<xref href=\"B?alt=B&text=B\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
