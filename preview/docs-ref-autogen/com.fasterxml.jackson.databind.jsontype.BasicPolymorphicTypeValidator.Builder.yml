### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder"
fullName: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder"
name: "BasicPolymorphicTypeValidator.Builder"
nameWithType: "BasicPolymorphicTypeValidator.Builder"
summary: "Builder class for configuring and constructing immutable <xref uid=\"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicPolymorphicTypeValidator\"></xref> instances. Criteria for allowing polymorphic subtypes is specified by adding rules in priority order, starting with the rules to evaluate first: when a matching rule is found, its status (<xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity.ALLOWED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator.Validity#ALLOWED\"></xref> or <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity.DENIED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator.Validity#DENIED\"></xref>) is used and no further rules are checked."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class BasicPolymorphicTypeValidator.Builder"
constructors:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.Builder()"
fields:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._baseTypeMatchers"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._invalidBaseTypes"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._subTypeClassMatchers"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._subTypeNameMatchers"
methods:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder._appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfBaseType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfBaseType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfBaseType(java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfBaseType(java.util.regex.Pattern)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfSubType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfSubType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfSubType(java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfSubType(java.util.regex.Pattern)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.allowIfSubTypeIsArray()"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.build()"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.denyForExactBaseType(java.lang.Class<?>)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
