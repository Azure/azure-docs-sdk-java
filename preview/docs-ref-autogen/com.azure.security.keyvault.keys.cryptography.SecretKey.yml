### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  id: "SecretKey"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey()"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey(java.lang.String,java.lang.String)"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.getId()"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.getName()"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties()"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue()"
  - "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties(com.azure.security.keyvault.keys.cryptography.SecretProperties)"
  langs:
  - "java"
  name: "SecretKey"
  nameWithType: "SecretKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " class SecretKey"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey()"
  id: "SecretKey()"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "SecretKey()"
  nameWithType: "SecretKey.SecretKey()"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey()"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " SecretKey()"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey(java.lang.String,java.lang.String)"
  id: "SecretKey(java.lang.String,java.lang.String)"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "SecretKey(String name, String value)"
  nameWithType: "SecretKey.SecretKey(String name, String value)"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey(String name, String value)"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " SecretKey(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getId()"
  id: "getId()"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "SecretKey.getId()"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getId()"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.getId*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " String getId()"
    return:
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getName()"
  id: "getName()"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "SecretKey.getName()"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getName()"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.getName*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " String getName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties()"
  id: "getProperties()"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "SecretKey.getProperties()"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties()"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " SecretProperties getProperties()"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.SecretProperties"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue()"
  id: "getValue()"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "SecretKey.getValue()"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue()"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " String getValue()"
    return:
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties(com.azure.security.keyvault.keys.cryptography.SecretProperties)"
  id: "setProperties(com.azure.security.keyvault.keys.cryptography.SecretProperties)"
  parent: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  langs:
  - "java"
  name: "setProperties(SecretProperties properties)"
  nameWithType: "SecretKey.setProperties(SecretProperties properties)"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties(SecretProperties properties)"
  overload: "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " SecretKey setProperties(SecretProperties properties)"
    parameters:
    - id: "properties"
      type: "com.azure.security.keyvault.keys.cryptography.SecretProperties"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.SecretKey"
references:
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey*"
  name: "SecretKey"
  nameWithType: "SecretKey.SecretKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.SecretKey"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue*"
  name: "getValue"
  nameWithType: "SecretKey.getValue"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getValue"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getId*"
  name: "getId"
  nameWithType: "SecretKey.getId"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getId"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getName*"
  name: "getName"
  nameWithType: "SecretKey.getName"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getName"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretProperties"
  name: "SecretProperties"
  nameWithType: "SecretProperties"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretProperties"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties*"
  name: "getProperties"
  nameWithType: "SecretKey.getProperties"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.getProperties"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties*"
  name: "setProperties"
  nameWithType: "SecretKey.setProperties"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey.setProperties"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
