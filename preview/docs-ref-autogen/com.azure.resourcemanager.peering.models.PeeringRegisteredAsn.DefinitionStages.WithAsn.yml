### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithAsn"
fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithAsn"
name: "PeeringRegisteredAsn.DefinitionStages.WithAsn"
nameWithType: "PeeringRegisteredAsn.DefinitionStages.WithAsn"
summary: "The stage of the Peering<wbr>Registered<wbr>Asn definition allowing to specify asn."
syntax: "public static interface PeeringRegisteredAsn.DefinitionStages.WithAsn"
methods:
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithAsn.withAsn(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithAsn.withAsn(Integer asn)"
  name: "withAsn(Integer asn)"
  nameWithType: "PeeringRegisteredAsn.DefinitionStages.WithAsn.withAsn(Integer asn)"
  summary: "Specifies the asn property: The customer's ASN from which traffic originates.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The customer's ASN from which traffic originates."
    name: "asn"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredAsn.DefinitionStages.WithCreate withAsn(Integer asn)"
  desc: "Specifies the asn property: The customer's ASN from which traffic originates.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the PeeringRegisteredAsn definition allowing to specify asn."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
