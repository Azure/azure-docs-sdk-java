### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache
  id: DeserializerCache
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache()
  - com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache(int)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._cachedDeserializers
  - com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializers
  - com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount()
  - com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers()
  - com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: DeserializerCache
  nameWithType: DeserializerCache
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: Class that defines caching layer between callers (like <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>, <xref uid="com.fasterxml.jackson.databind.DeserializationContext" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.DeserializationContext</xref>) and classes that construct deserializers (<xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.DeserializerFactory</xref>).
  syntax:
    content: public final class DeserializerCache implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache()
  id: DeserializerCache()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: DeserializerCache()
  nameWithType: DeserializerCache.DeserializerCache()
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache()
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DeserializerCache()
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache(int)
  id: DeserializerCache(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: DeserializerCache(int maxSize)
  nameWithType: DeserializerCache.DeserializerCache(int maxSize)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache(int maxSize)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DeserializerCache(int maxSize)
    parameters:
    - id: maxSize
      type: int
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._cachedDeserializers
  id: _cachedDeserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _cachedDeserializers
  nameWithType: DeserializerCache._cachedDeserializers
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._cachedDeserializers
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: We will also cache some dynamically constructed deserializers; specifically, ones that are expensive to construct. This currently means bean, Enum and container deserializers.
  syntax:
    content: protected final LRUMap<JavaType,JsonDeserializer<Object>> _cachedDeserializers
    return:
      type: com.fasterxml.jackson.databind.util.LRUMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _createAndCache2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  nameWithType: DeserializerCache._createAndCache2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that handles actual construction (via factory) and caching (both intermediate and eventual)
  syntax:
    content: protected JsonDeserializer<Object> _createAndCache2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _createAndCacheValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  nameWithType: DeserializerCache._createAndCacheValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that will try to create a deserializer for given type, and resolve and cache it if necessary
  syntax:
    content: protected JsonDeserializer<Object> _createAndCacheValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
      description: Currently active deserialization context
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Type of property to deserialize
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _createDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  nameWithType: DeserializerCache._createDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that does the heavy lifting of checking for per-type annotations, find out full type, and figure out which actual factory method to call.
  syntax:
    content: protected JsonDeserializer<Object> _createDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _createDeserializer2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type, BeanDescription beanDesc)
  nameWithType: DeserializerCache._createDeserializer2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected JsonDeserializer<?> _createDeserializer2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
  id: _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _findCachedDeserializer(JavaType type)
  nameWithType: DeserializerCache._findCachedDeserializer(JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer(JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected JsonDeserializer<Object> _findCachedDeserializer(JavaType type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  id: _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)
  nameWithType: DeserializerCache._handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected KeyDeserializer _handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  id: _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)
  nameWithType: DeserializerCache._handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected JsonDeserializer<Object> _handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializers
  id: _incompleteDeserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: _incompleteDeserializers
  nameWithType: DeserializerCache._incompleteDeserializers
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializers
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: During deserializer construction process we may need to keep track of partially completed deserializers, to resolve cyclic dependencies. This is the map used for storing deserializers before they are fully complete.
  syntax:
    content: protected final HashMap<JavaType,JsonDeserializer<Object>> _incompleteDeserializers
    return:
      type: java.util.HashMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount()
  id: cachedDeserializersCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: cachedDeserializersCount()
  nameWithType: DeserializerCache.cachedDeserializersCount()
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount()
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that can be used to determine how many deserializers this provider is caching currently (if it does caching: default implementation does) Exact count depends on what kind of deserializers get cached; default implementation caches only dynamically constructed deserializers, but not eagerly constructed standard deserializers (which is different from how serializer provider works).


    The main use case for this method is to allow conditional flushing of deserializer cache, if certain number of entries is reached.
  syntax:
    content: public int cachedDeserializersCount()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  id: findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: findConverter(DeserializationContext ctxt, Annotated a)
  nameWithType: DeserializerCache.findConverter(DeserializationContext ctxt, Annotated a)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter(DeserializationContext ctxt, Annotated a)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Converter<Object,Object> findConverter(DeserializationContext ctxt, Annotated a)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: a
      type: com.fasterxml.jackson.databind.introspect.Annotated
    return:
      type: com.fasterxml.jackson.databind.util.Converter<java.lang.Object,java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  id: findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: findConvertingDeserializer(DeserializationContext ctxt, Annotated a, JsonDeserializer<Object> deser)
  nameWithType: DeserializerCache.findConvertingDeserializer(DeserializationContext ctxt, Annotated a, JsonDeserializer<Object> deser)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer(DeserializationContext ctxt, Annotated a, JsonDeserializer<Object> deser)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method that will check whether given annotated entity (usually class, but may also be a property accessor) indicates that a <xref uid="com.fasterxml.jackson.databind.util.Converter" data-throw-if-not-resolved="false">Converter</xref> is to be used; and if so, to construct and return suitable serializer for it. If not, will simply return given serializer as is.
  syntax:
    content: protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt, Annotated a, JsonDeserializer<Object> deser)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: a
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  id: findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: findDeserializerFromAnnotation(DeserializationContext ctxt, Annotated ann)
  nameWithType: DeserializerCache.findDeserializerFromAnnotation(DeserializationContext ctxt, Annotated ann)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation(DeserializationContext ctxt, Annotated ann)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Helper method called to check if a class or method has annotation that tells which class to use for deserialization. Returns null if no such annotation found.
  syntax:
    content: protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt, Annotated ann)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: ann
      type: com.fasterxml.jackson.databind.introspect.Annotated
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: findKeyDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  nameWithType: DeserializerCache.findKeyDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to get hold of a deserializer to use for deserializing keys for <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>.
  syntax:
    content: public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
    description: >-
      if there are fatal problems with
         accessing suitable key deserializer; including that of not
         finding any serializer
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)
  nameWithType: DeserializerCache.findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to get hold of a deserializer for a value of given type; or if no such deserializer can be found, a default handler (which may do a best-effort generic serialization or just simply throw an exception when invoked).


    Note: this method is only called for value types; not for keys. Key deserializers can be accessed using <xref uid="com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer*" data-throw-if-not-resolved="false">#findKeyDeserializer</xref>.


    Note also that deserializer returned is guaranteed to be resolved (if it is of type <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref>), but not contextualized (wrt <xref uid="com.fasterxml.jackson.databind.deser.ContextualDeserializer" data-throw-if-not-resolved="false">ContextualDeserializer</xref>): caller has to handle latter if necessary.
  syntax:
    content: public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
      description: Deserialization context
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: propertyType
      type: com.fasterxml.jackson.databind.JavaType
      description: >-
        Declared type of the value to deserializer (obtained using
           'setter' method signature and/or type annotations
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
    description: >-
      if there are fatal problems with
         accessing suitable deserializer; including that of not
         finding any serializer
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers()
  id: flushCachedDeserializers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: flushCachedDeserializers()
  nameWithType: DeserializerCache.flushCachedDeserializers()
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers()
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that will drop all dynamically constructed deserializers (ones that are counted as result value for <xref uid="com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount*" data-throw-if-not-resolved="false">#cachedDeserializersCount</xref>). This can be used to remove memory usage (in case some deserializers are only used once or so), or to force re-construction of deserializers after configuration changes for mapper than owns the provider.
  syntax:
    content: public void flushCachedDeserializers()
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  id: hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerCache
  langs:
  - java
  name: hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  nameWithType: DeserializerCache.hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to find out whether provider would be able to find a deserializer for given type, using a root reference (i.e. not through fields or membership in an array or collection)
  syntax:
    content: public boolean hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: boolean
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache*
  name: DeserializerCache
  nameWithType: DeserializerCache.DeserializerCache
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.DeserializerCache
  package: com.fasterxml.jackson.databind.deser
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount*
  name: cachedDeserializersCount
  nameWithType: DeserializerCache.cachedDeserializersCount
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.cachedDeserializersCount
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers*
  name: flushCachedDeserializers
  nameWithType: DeserializerCache.flushCachedDeserializers
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.flushCachedDeserializers
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory
  name: DeserializerFactory
  nameWithType: DeserializerFactory
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer*
  name: findValueDeserializer
  nameWithType: DeserializerCache.findValueDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer*
  name: findKeyDeserializer
  nameWithType: DeserializerCache.findKeyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor*
  name: hasValueDeserializerFor
  nameWithType: DeserializerCache.hasValueDeserializerFor
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer*
  name: _findCachedDeserializer
  nameWithType: DeserializerCache._findCachedDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer*
  name: _createAndCacheValueDeserializer
  nameWithType: DeserializerCache._createAndCacheValueDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2*
  name: _createAndCache2
  nameWithType: DeserializerCache._createAndCache2
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer*
  name: _createDeserializer
  nameWithType: DeserializerCache._createDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2*
  name: _createDeserializer2
  nameWithType: DeserializerCache._createDeserializer2
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.introspect.Annotated
  name: Annotated
  nameWithType: Annotated
  fullName: com.fasterxml.jackson.databind.introspect.Annotated
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation*
  name: findDeserializerFromAnnotation
  nameWithType: DeserializerCache.findDeserializerFromAnnotation
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer*
  name: findConvertingDeserializer
  nameWithType: DeserializerCache.findConvertingDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.util.Converter<java.lang.Object,java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.Converter
    name: Converter
    fullName: com.fasterxml.jackson.databind.util.Converter
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter*
  name: findConverter
  nameWithType: DeserializerCache.findConverter
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer*
  name: _handleUnknownValueDeserializer
  nameWithType: DeserializerCache._handleUnknownValueDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer*
  name: _handleUnknownKeyDeserializer
  nameWithType: DeserializerCache._handleUnknownKeyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.util.LRUMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.LRUMap
    name: LRUMap
    fullName: com.fasterxml.jackson.databind.util.LRUMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.HashMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.util.Converter
  name: Converter
  nameWithType: Converter
  fullName: com.fasterxml.jackson.databind.util.Converter
- uid: java.lang.Object,java.lang.Object
  name: Object,Object
  nameWithType: Object,Object
  fullName: java.lang.Object,java.lang.Object
- uid: com.fasterxml.jackson.databind.util.LRUMap
  name: LRUMap
  nameWithType: LRUMap
  fullName: com.fasterxml.jackson.databind.util.LRUMap
- uid: com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer
  name: JavaType,JsonDeserializer
  nameWithType: JavaType,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
