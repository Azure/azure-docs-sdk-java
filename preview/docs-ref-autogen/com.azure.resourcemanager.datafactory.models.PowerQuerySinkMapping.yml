### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping"
fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping"
name: "PowerQuerySinkMapping"
nameWithType: "PowerQuerySinkMapping"
summary: "Map Power Query mashup query to sink dataset(s)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PowerQuerySinkMapping"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.PowerQuerySinkMapping()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.PowerQuerySinkMapping()"
  name: "PowerQuerySinkMapping()"
  nameWithType: "PowerQuerySinkMapping.PowerQuerySinkMapping()"
  syntax: "public PowerQuerySinkMapping()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.dataflowSinks()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.dataflowSinks()"
  name: "dataflowSinks()"
  nameWithType: "PowerQuerySinkMapping.dataflowSinks()"
  summary: "Get the dataflow<wbr>Sinks property: List of sinks mapped to Power Query mashup query."
  syntax: "public List<PowerQuerySink> dataflowSinks()"
  desc: "Get the dataflowSinks property: List of sinks mapped to Power Query mashup query."
  returns:
    description: "the dataflowSinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySink?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySink&text=PowerQuerySink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.queryName()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.queryName()"
  name: "queryName()"
  nameWithType: "PowerQuerySinkMapping.queryName()"
  summary: "Get the query<wbr>Name property: Name of the query in Power Query mashup document."
  syntax: "public String queryName()"
  desc: "Get the queryName property: Name of the query in Power Query mashup document."
  returns:
    description: "the queryName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.validate()"
  name: "validate()"
  nameWithType: "PowerQuerySinkMapping.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.withDataflowSinks(java.util.List<com.azure.resourcemanager.datafactory.models.PowerQuerySink>)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.withDataflowSinks(List<PowerQuerySink> dataflowSinks)"
  name: "withDataflowSinks(List<PowerQuerySink> dataflowSinks)"
  nameWithType: "PowerQuerySinkMapping.withDataflowSinks(List<PowerQuerySink> dataflowSinks)"
  summary: "Set the dataflow<wbr>Sinks property: List of sinks mapped to Power Query mashup query."
  parameters:
  - description: "the dataflowSinks value to set."
    name: "dataflowSinks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySink?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySink&text=PowerQuerySink\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PowerQuerySinkMapping withDataflowSinks(List<PowerQuerySink> dataflowSinks)"
  desc: "Set the dataflowSinks property: List of sinks mapped to Power Query mashup query."
  returns:
    description: "the PowerQuerySinkMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping&text=PowerQuerySinkMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.withQueryName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping.withQueryName(String queryName)"
  name: "withQueryName(String queryName)"
  nameWithType: "PowerQuerySinkMapping.withQueryName(String queryName)"
  summary: "Set the query<wbr>Name property: Name of the query in Power Query mashup document."
  parameters:
  - description: "the queryName value to set."
    name: "queryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySinkMapping withQueryName(String queryName)"
  desc: "Set the queryName property: Name of the query in Power Query mashup document."
  returns:
    description: "the PowerQuerySinkMapping object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping&text=PowerQuerySinkMapping\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Map Power Query mashup query to sink dataset(s)."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
