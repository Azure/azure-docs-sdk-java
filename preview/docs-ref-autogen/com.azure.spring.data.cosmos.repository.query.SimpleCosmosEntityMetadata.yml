### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata"
fullName: "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata<T>"
name: "SimpleCosmosEntityMetadata<T>"
nameWithType: "SimpleCosmosEntityMetadata<T>"
summary: "Metadata class to describe simple cosmos entity includes domain type and cosmos entity information"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SimpleCosmosEntityMetadata<T> implements CosmosEntityMetadata<T>"
constructors:
- "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata.SimpleCosmosEntityMetadata(java.lang.Class<T>,com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,java.lang.String>)"
methods:
- "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata.getCollectionName()"
- "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata.getContainerName()"
- "com.azure.spring.data.cosmos.repository.query.SimpleCosmosEntityMetadata.getJavaType()"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata?alt=com.azure.spring.data.cosmos.repository.query.CosmosEntityMetadata&text=CosmosEntityMetadata\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
