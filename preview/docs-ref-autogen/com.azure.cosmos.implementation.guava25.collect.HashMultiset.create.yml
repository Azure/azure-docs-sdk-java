### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.HashMultiset.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.HashMultiset<E>.<E>create"
name: "<E>create"
nameWithType: "HashMultiset<E>.<E>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.HashMultiset.<E>create()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashMultiset<E>.<E>create()"
  name: "<E>create()"
  nameWithType: "HashMultiset<E>.<E>create()"
  summary: "Creates a new, empty `HashMultiset` using the default initial capacity."
  syntax: "public static HashMultiset<E> <E>create()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.HashMultiset&text=HashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.HashMultiset.<E>create(int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashMultiset<E>.<E>create(int distinctElements)"
  name: "<E>create(int distinctElements)"
  nameWithType: "HashMultiset<E>.<E>create(int distinctElements)"
  summary: "Creates a new, empty `HashMultiset` with the specified expected number of distinct elements."
  parameters:
  - description: "the expected number of distinct elements"
    name: "distinctElements"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static HashMultiset<E> <E>create(int distinctElements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.HashMultiset&text=HashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.HashMultiset.<E>create(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.HashMultiset<E>.<E>create(Iterable<? extends E> elements)"
  name: "<E>create(Iterable<? extends E> elements)"
  nameWithType: "HashMultiset<E>.<E>create(Iterable<? extends E> elements)"
  summary: "Creates a new `HashMultiset` containing the specified elements.\n\nThis implementation is highly efficient when `elements` is itself a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multiset\"></xref>."
  parameters:
  - description: "the elements that the multiset should contain"
    name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static HashMultiset<E> <E>create(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.HashMultiset?alt=com.azure.cosmos.implementation.guava25.collect.HashMultiset&text=HashMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
