### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  id: CharSequenceTranslator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate
  children:
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator()
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
  langs:
  - java
  name: CharSequenceTranslator
  nameWithType: CharSequenceTranslator
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  syntax:
    content: public abstract class CharSequenceTranslator
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator()
  id: CharSequenceTranslator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: CharSequenceTranslator()
  nameWithType: CharSequenceTranslator.CharSequenceTranslator()
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator()
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  syntax:
    content: public CharSequenceTranslator()
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int)
  id: hex(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: hex(int codepoint)
  nameWithType: CharSequenceTranslator.hex(int codepoint)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int codepoint)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Returns an upper case hexadecimal `String` for the given character.
  syntax:
    content: public static String hex(int codepoint)
    parameters:
    - id: codepoint
      type: int
      description: The codepoint to convert.
    return:
      type: java.lang.String
      description: An upper case hexadecimal <code>String</code>
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)
  id: translate(java.lang.CharSequence)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: translate(CharSequence input)
  nameWithType: CharSequenceTranslator.translate(CharSequence input)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(CharSequence input)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Helper for non-Writer usage.
  syntax:
    content: public final String translate(CharSequence input)
    parameters:
    - id: input
      type: java.lang.CharSequence
      description: CharSequence to be translated
    return:
      type: java.lang.String
      description: String output of translation
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  id: translate(java.lang.CharSequence,int,java.io.Writer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: translate(CharSequence input, int index, Writer out)
  nameWithType: CharSequenceTranslator.translate(CharSequence input, int index, Writer out)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(CharSequence input, int index, Writer out)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Translate a set of codepoints, represented by an int index into a CharSequence, into another set of codepoints. The number of codepoints consumed must be returned, and the only IOExceptions thrown must be from interacting with the Writer so that the top level API may reliably ignore StringWriter IOExceptions.
  syntax:
    content: public abstract int translate(CharSequence input, int index, Writer out)
    parameters:
    - id: input
      type: java.lang.CharSequence
      description: CharSequence that is being translated
    - id: index
      type: int
      description: int representing the current point of translation
    - id: out
      type: java.io.Writer
      description: Writer to translate the text to
    return:
      type: int
      description: int count of codepoints consumed
  exceptions:
  - type: java.io.IOException
    description: if and only if the Writer produces an IOException
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)
  id: translate(java.lang.CharSequence,java.io.Writer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: translate(CharSequence input, Writer out)
  nameWithType: CharSequenceTranslator.translate(CharSequence input, Writer out)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(CharSequence input, Writer out)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Translate an input onto a Writer. This is intentionally final as its algorithm is tightly coupled with the abstract method of this class.
  syntax:
    content: public final void translate(CharSequence input, Writer out)
    parameters:
    - id: input
      type: java.lang.CharSequence
      description: CharSequence that is being translated
    - id: out
      type: java.io.Writer
      description: Writer to translate the text to
  exceptions:
  - type: java.io.IOException
    description: if and only if the Writer produces an IOException
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
  id: with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  langs:
  - java
  name: with(CharSequenceTranslator[] translators)
  nameWithType: CharSequenceTranslator.with(CharSequenceTranslator[] translators)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(CharSequenceTranslator[] translators)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Helper method to create a merger of this translator with another set of translators. Useful in customizing the standard functionality.
  syntax:
    content: public final CharSequenceTranslator with(CharSequenceTranslator[] translators)
    parameters:
    - id: translators
      type: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator[]
      description: CharSequenceTranslator array of translators to merge with this one
    return:
      type: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
      description: CharSequenceTranslator merging this translator with the others
references:
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator*
  name: CharSequenceTranslator
  nameWithType: CharSequenceTranslator.CharSequenceTranslator
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.CharSequenceTranslator
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate*
  name: translate
  nameWithType: CharSequenceTranslator.translate
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator[]
  spec.java:
  - uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
    name: CharSequenceTranslator
    fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with*
  name: with
  nameWithType: CharSequenceTranslator.with
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex*
  name: hex
  nameWithType: CharSequenceTranslator.hex
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
