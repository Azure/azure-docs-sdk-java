### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.Flowlet"
fullName: "com.azure.resourcemanager.datafactory.models.Flowlet"
name: "Flowlet"
nameWithType: "Flowlet"
summary: "Data flow flowlet."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlow?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.DataFlow.annotations()"
- "com.azure.resourcemanager.datafactory.models.DataFlow.description()"
- "com.azure.resourcemanager.datafactory.models.DataFlow.folder()"
- "com.azure.resourcemanager.datafactory.models.DataFlow.validate()"
- "com.azure.resourcemanager.datafactory.models.DataFlow.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.DataFlow.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.DataFlow.withFolder(com.azure.resourcemanager.datafactory.models.DataFlowFolder)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Flowlet extends DataFlow"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.Flowlet()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.Flowlet()"
  name: "Flowlet()"
  nameWithType: "Flowlet.Flowlet()"
  syntax: "public Flowlet()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.script()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.script()"
  name: "script()"
  nameWithType: "Flowlet.script()"
  summary: "Get the script property: Flowlet script."
  syntax: "public String script()"
  desc: "Get the script property: Flowlet script."
  returns:
    description: "the script value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.scriptLines()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.scriptLines()"
  name: "scriptLines()"
  nameWithType: "Flowlet.scriptLines()"
  summary: "Get the script<wbr>Lines property: Flowlet script lines."
  syntax: "public List<String> scriptLines()"
  desc: "Get the scriptLines property: Flowlet script lines."
  returns:
    description: "the scriptLines value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.sinks()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.sinks()"
  name: "sinks()"
  nameWithType: "Flowlet.sinks()"
  summary: "Get the sinks property: List of sinks in Flowlet."
  syntax: "public List<DataFlowSink> sinks()"
  desc: "Get the sinks property: List of sinks in Flowlet."
  returns:
    description: "the sinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.sources()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.sources()"
  name: "sources()"
  nameWithType: "Flowlet.sources()"
  summary: "Get the sources property: List of sources in Flowlet."
  syntax: "public List<DataFlowSource> sources()"
  desc: "Get the sources property: List of sources in Flowlet."
  returns:
    description: "the sources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSource?alt=com.azure.resourcemanager.datafactory.models.DataFlowSource&text=DataFlowSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.transformations()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.transformations()"
  name: "transformations()"
  nameWithType: "Flowlet.transformations()"
  summary: "Get the transformations property: List of transformations in Flowlet."
  syntax: "public List<Transformation> transformations()"
  desc: "Get the transformations property: List of transformations in Flowlet."
  returns:
    description: "the transformations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?alt=com.azure.resourcemanager.datafactory.models.Transformation&text=Transformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.validate()"
  name: "validate()"
  nameWithType: "Flowlet.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlow.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "Flowlet.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the data flow."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlow.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flowlet withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the data flow."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "Flowlet.withDescription(String description)"
  summary: "Set the description property: The description of the data flow."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlow.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flowlet withDescription(String description)"
  desc: "Set the description property: The description of the data flow."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withFolder(com.azure.resourcemanager.datafactory.models.DataFlowFolder)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withFolder(DataFlowFolder folder)"
  name: "withFolder(DataFlowFolder folder)"
  nameWithType: "Flowlet.withFolder(DataFlowFolder folder)"
  summary: "Set the folder property: The folder that this data flow is in."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlow.withFolder(com.azure.resourcemanager.datafactory.models.DataFlowFolder)"
  parameters:
  - name: "folder"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowFolder?alt=com.azure.resourcemanager.datafactory.models.DataFlowFolder&text=DataFlowFolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flowlet withFolder(DataFlowFolder folder)"
  desc: "Set the folder property: The folder that this data flow is in. If not specified, Data flow will appear at the root level."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withScript(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withScript(String script)"
  name: "withScript(String script)"
  nameWithType: "Flowlet.withScript(String script)"
  summary: "Set the script property: Flowlet script."
  parameters:
  - description: "the script value to set."
    name: "script"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flowlet withScript(String script)"
  desc: "Set the script property: Flowlet script."
  returns:
    description: "the Flowlet object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withScriptLines(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withScriptLines(List<String> scriptLines)"
  name: "withScriptLines(List<String> scriptLines)"
  nameWithType: "Flowlet.withScriptLines(List<String> scriptLines)"
  summary: "Set the script<wbr>Lines property: Flowlet script lines."
  parameters:
  - description: "the scriptLines value to set."
    name: "scriptLines"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flowlet withScriptLines(List<String> scriptLines)"
  desc: "Set the scriptLines property: Flowlet script lines."
  returns:
    description: "the Flowlet object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withSinks(java.util.List<com.azure.resourcemanager.datafactory.models.DataFlowSink>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withSinks(List<DataFlowSink> sinks)"
  name: "withSinks(List<DataFlowSink> sinks)"
  nameWithType: "Flowlet.withSinks(List<DataFlowSink> sinks)"
  summary: "Set the sinks property: List of sinks in Flowlet."
  parameters:
  - description: "the sinks value to set."
    name: "sinks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flowlet withSinks(List<DataFlowSink> sinks)"
  desc: "Set the sinks property: List of sinks in Flowlet."
  returns:
    description: "the Flowlet object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withSources(java.util.List<com.azure.resourcemanager.datafactory.models.DataFlowSource>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withSources(List<DataFlowSource> sources)"
  name: "withSources(List<DataFlowSource> sources)"
  nameWithType: "Flowlet.withSources(List<DataFlowSource> sources)"
  summary: "Set the sources property: List of sources in Flowlet."
  parameters:
  - description: "the sources value to set."
    name: "sources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSource?alt=com.azure.resourcemanager.datafactory.models.DataFlowSource&text=DataFlowSource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flowlet withSources(List<DataFlowSource> sources)"
  desc: "Set the sources property: List of sources in Flowlet."
  returns:
    description: "the Flowlet object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Flowlet.withTransformations(java.util.List<com.azure.resourcemanager.datafactory.models.Transformation>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Flowlet.withTransformations(List<Transformation> transformations)"
  name: "withTransformations(List<Transformation> transformations)"
  nameWithType: "Flowlet.withTransformations(List<Transformation> transformations)"
  summary: "Set the transformations property: List of transformations in Flowlet."
  parameters:
  - description: "the transformations value to set."
    name: "transformations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?alt=com.azure.resourcemanager.datafactory.models.Transformation&text=Transformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flowlet withTransformations(List<Transformation> transformations)"
  desc: "Set the transformations property: List of transformations in Flowlet."
  returns:
    description: "the Flowlet object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Flowlet?alt=com.azure.resourcemanager.datafactory.models.Flowlet&text=Flowlet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Data flow flowlet."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
