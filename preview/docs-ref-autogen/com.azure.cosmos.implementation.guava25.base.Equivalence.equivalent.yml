### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent*"
fullName: "com.azure.cosmos.implementation.guava25.base.Equivalence<T>.equivalent"
name: "equivalent"
nameWithType: "Equivalence<T>.equivalent"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent(T,T)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Equivalence<T>.equivalent(T a, T b)"
  name: "equivalent(T a, T b)"
  nameWithType: "Equivalence<T>.equivalent(T a, T b)"
  summary: "Returns `true` if the given objects are considered equivalent.\n\nThis method describes an *equivalence relation* on object references, meaning that for all references `x`, `y`, and `z` (any of which may be null):\n\n *  `equivalent(x, x)` is true (*reflexive* property)\n *  `equivalent(x, y)` and `equivalent(y, x)` each return the same result (*symmetric* property)\n *  If `equivalent(x, y)` and `equivalent(y, z)` are both true, then `equivalent(x, z)` is also true (*transitive* property)\n\nNote that all calls to `equivalent(x, y)` are expected to return the same result as long as neither `x` nor `y` is modified."
  parameters:
  - name: "a"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - name: "b"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final boolean equivalent(T a, T b)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
