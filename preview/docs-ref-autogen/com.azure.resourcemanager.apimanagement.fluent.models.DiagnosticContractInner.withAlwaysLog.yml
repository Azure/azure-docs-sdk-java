### YamlMime:JavaMember
uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog*"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog"
name: "withAlwaysLog"
nameWithType: "DiagnosticContractInner.withAlwaysLog"
members:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog(com.azure.resourcemanager.apimanagement.models.AlwaysLog)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog(AlwaysLog alwaysLog)"
  name: "withAlwaysLog(AlwaysLog alwaysLog)"
  nameWithType: "DiagnosticContractInner.withAlwaysLog(AlwaysLog alwaysLog)"
  summary: "Set the alwaysLog property: Specifies for what type of messages sampling settings should not apply."
  parameters:
  - description: "the alwaysLog value to set."
    name: "alwaysLog"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.AlwaysLog?alt=com.azure.resourcemanager.apimanagement.models.AlwaysLog&text=AlwaysLog\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withAlwaysLog(AlwaysLog alwaysLog)"
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.1
