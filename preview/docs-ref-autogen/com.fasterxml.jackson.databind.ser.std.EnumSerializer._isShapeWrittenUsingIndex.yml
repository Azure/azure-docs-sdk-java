### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex*"
fullName: "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex"
name: "_isShapeWrittenUsingIndex"
nameWithType: "EnumSerializer._isShapeWrittenUsingIndex"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean,java.lang.Boolean)"
  fullName: "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)"
  name: "_isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)"
  nameWithType: "EnumSerializer._isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)"
  summary: "Helper method called to check whether serialization should be done using index (number) or not."
  parameters:
  - name: "enumClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "format"
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonFormat.Value?alt=com.fasterxml.jackson.annotation.JsonFormat.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
  - name: "fromClass"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "defaultValue"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)"
  returns:
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
