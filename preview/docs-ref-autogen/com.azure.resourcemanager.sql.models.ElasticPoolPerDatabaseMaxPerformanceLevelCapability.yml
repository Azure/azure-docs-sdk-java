### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
name: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
summary: "The max per-database performance level capability."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
constructors:
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
methods:
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.limit()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.reason()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.status()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.supportedPerDatabaseMinPerformanceLevels()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.unit()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.validate()"
- "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.withReason(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
