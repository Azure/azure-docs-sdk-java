### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonProperty
  id: JsonProperty
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonProperty.Access
  - com.fasterxml.jackson.annotation.JsonProperty.INDEX_UNKNOWN
  - com.fasterxml.jackson.annotation.JsonProperty.USE_DEFAULT_NAME
  - com.fasterxml.jackson.annotation.JsonProperty.access()
  - com.fasterxml.jackson.annotation.JsonProperty.defaultValue()
  - com.fasterxml.jackson.annotation.JsonProperty.index()
  - com.fasterxml.jackson.annotation.JsonProperty.required()
  - com.fasterxml.jackson.annotation.JsonProperty.value()
  langs:
  - java
  name: JsonProperty
  nameWithType: JsonProperty
  fullName: com.fasterxml.jackson.annotation.JsonProperty
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: >-
    Marker annotation that can be used to define a non-static method as a "setter" or "getter" for a logical property (depending on its signature), or non-static object field to be used (serialized, deserialized) as a logical property.


    Default value ("") indicates that the field name is used as the property name without any modifications, but it can be specified to non-empty value to specify different name. Property name refers to name used externally, as the field name in JSON objects.


    Starting with Jackson 2.6 this annotation may also be used to change serialization of `Enum` like so:


    ```java

    public enum MyEnum {
        @JsonProperty("theFirstValue") THE_FIRST_VALUE,
        @JsonProperty("another_value") ANOTHER_VALUE;
    }

    ```


    as an alternative to using <xref uid="com.fasterxml.jackson.annotation.JsonValue" data-throw-if-not-resolved="false">JsonValue</xref> annotation.
  syntax:
    content: public interface JsonProperty implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.annotation.JsonProperty.INDEX_UNKNOWN
  id: INDEX_UNKNOWN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: INDEX_UNKNOWN
  nameWithType: JsonProperty.INDEX_UNKNOWN
  fullName: com.fasterxml.jackson.annotation.JsonProperty.INDEX_UNKNOWN
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Marker value used to indicate that no index has been specified. Used as the default value as annotations do not allow "missing" values.
  syntax:
    content: public static final int INDEX_UNKNOWN
    return:
      type: int
- uid: com.fasterxml.jackson.annotation.JsonProperty.USE_DEFAULT_NAME
  id: USE_DEFAULT_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: USE_DEFAULT_NAME
  nameWithType: JsonProperty.USE_DEFAULT_NAME
  fullName: com.fasterxml.jackson.annotation.JsonProperty.USE_DEFAULT_NAME
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Special value that indicates that handlers should use the default name (derived from method or field name) for property.
  syntax:
    content: public static final String USE_DEFAULT_NAME
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonProperty.access()
  id: access()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: access()
  nameWithType: JsonProperty.access()
  fullName: com.fasterxml.jackson.annotation.JsonProperty.access()
  overload: com.fasterxml.jackson.annotation.JsonProperty.access*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Optional property that may be used to change the way visibility of accessors (getter, field-as-getter) and mutators (constructor parameter, setter, field-as-setter) is determined, either so that otherwise non-visible accessors (like private getters) may be used; or that otherwise visible accessors are ignored.


    Default value os <xref uid="" data-throw-if-not-resolved="false">Access#AUTO</xref> which means that access is determined solely based on visibility and other annotations.
  syntax:
    content: public abstract JsonProperty.Access access()
    return:
      type: com.fasterxml.jackson.annotation.JsonProperty.Access
- uid: com.fasterxml.jackson.annotation.JsonProperty.defaultValue()
  id: defaultValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: defaultValue()
  nameWithType: JsonProperty.defaultValue()
  fullName: com.fasterxml.jackson.annotation.JsonProperty.defaultValue()
  overload: com.fasterxml.jackson.annotation.JsonProperty.defaultValue*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Property that may be used to **document** expected default value for the property: most often used as source information for generating schemas (like JSON Schema or protobuf/thrift schema), or documentation. It may also be used by Jackson extension modules; core \`jackson-databind\` does not have any automated handling beyond simply exposing this value through bean property introspection.


    It is possible that in future this annotation could be used for value defaulting, and especially for default values of Creator properties, since they support <xref uid="com.fasterxml.jackson.annotation.JsonProperty.required()" data-throw-if-not-resolved="false">#required()</xref> in 2.6 and above.
  syntax:
    content: public abstract String defaultValue()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonProperty.index()
  id: index()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: index()
  nameWithType: JsonProperty.index()
  fullName: com.fasterxml.jackson.annotation.JsonProperty.index()
  overload: com.fasterxml.jackson.annotation.JsonProperty.index*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Property that indicates numerical index of this property (relative to other properties specified for the Object). This index is typically used by binary formats, but may also be useful for schema languages and other tools.
  syntax:
    content: public abstract int index()
    return:
      type: int
- uid: com.fasterxml.jackson.annotation.JsonProperty.required()
  id: required()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: required()
  nameWithType: JsonProperty.required()
  fullName: com.fasterxml.jackson.annotation.JsonProperty.required()
  overload: com.fasterxml.jackson.annotation.JsonProperty.required*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Property that indicates whether a value (which may be explicit null) is expected for property during deserialization or not. If expected, `BeanDeserialized` should indicate this as a validity problem (usually by throwing an exception, but this may be sent via problem handlers that can try to rectify the problem, for example, by supplying a default value).


    Note that as of 2.6, this property is only used for Creator Properties, to ensure existence of property value in JSON: for other properties (ones injected using a setter or mutable field), no validation is performed. Support for those cases may be added in future. State of this property is exposed via introspection, and its value is typically used by Schema generators, such as one for JSON Schema.
  syntax:
    content: public abstract boolean required()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonProperty.value()
  id: value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonProperty
  langs:
  - java
  name: value()
  nameWithType: JsonProperty.value()
  fullName: com.fasterxml.jackson.annotation.JsonProperty.value()
  overload: com.fasterxml.jackson.annotation.JsonProperty.value*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Defines name of the logical property, i.e. JSON object field name to use for the property. If value is empty String (which is the default), will try to use name of the field that is annotated. Note that there is **no default name available for constructor arguments**, meaning that **Empty String is not a valid value for constructor arguments**.
  syntax:
    content: public abstract String value()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonProperty.value*
  name: value
  nameWithType: JsonProperty.value
  fullName: com.fasterxml.jackson.annotation.JsonProperty.value
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.JsonProperty.required*
  name: required
  nameWithType: JsonProperty.required
  fullName: com.fasterxml.jackson.annotation.JsonProperty.required
  package: com.fasterxml.jackson.annotation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.annotation.JsonProperty.index*
  name: index
  nameWithType: JsonProperty.index
  fullName: com.fasterxml.jackson.annotation.JsonProperty.index
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonProperty.defaultValue*
  name: defaultValue
  nameWithType: JsonProperty.defaultValue
  fullName: com.fasterxml.jackson.annotation.JsonProperty.defaultValue
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonProperty.Access
  name: JsonProperty.Access
  nameWithType: JsonProperty.Access
  fullName: com.fasterxml.jackson.annotation.JsonProperty.Access
- uid: com.fasterxml.jackson.annotation.JsonProperty.access*
  name: access
  nameWithType: JsonProperty.access
  fullName: com.fasterxml.jackson.annotation.JsonProperty.access
  package: com.fasterxml.jackson.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
