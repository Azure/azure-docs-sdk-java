### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchJobReleaseTask"
fullName: "com.azure.compute.batch.models.BatchJobReleaseTask"
name: "BatchJobReleaseTask"
nameWithType: "BatchJobReleaseTask"
summary: "A Job Release Task to run on Job completion on any Compute Node where the Job has run."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchJobReleaseTask**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.BatchJobReleaseTask(java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.BatchJobReleaseTask(String commandLine)"
  name: "BatchJobReleaseTask(String commandLine)"
  nameWithType: "BatchJobReleaseTask.BatchJobReleaseTask(String commandLine)"
  summary: "Creates an instance of Batch<wbr>Job<wbr>Release<wbr>Task class."
  parameters:
  - description: "the commandLine value to set."
    name: "commandLine"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobReleaseTask(String commandLine)"
  desc: "Creates an instance of BatchJobReleaseTask class."
methods:
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchJobReleaseTask.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Job<wbr>Release<wbr>Task from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchJobReleaseTask fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchJobReleaseTask from the JsonReader."
  returns:
    description: "An instance of BatchJobReleaseTask if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getCommandLine()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getCommandLine()"
  name: "getCommandLine()"
  nameWithType: "BatchJobReleaseTask.getCommandLine()"
  summary: "Get the command<wbr>Line property: The command line of the Job Release Task."
  syntax: "public String getCommandLine()"
  desc: "Get the commandLine property: The command line of the Job Release Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the commandLine value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getContainerSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getContainerSettings()"
  name: "getContainerSettings()"
  nameWithType: "BatchJobReleaseTask.getContainerSettings()"
  summary: "Get the container<wbr>Settings property: The settings for the container under which the Job Release Task runs."
  syntax: "public BatchTaskContainerSettings getContainerSettings()"
  desc: "Get the containerSettings property: The settings for the container under which the Job Release Task runs. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the containerSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskContainerSettings?alt=com.azure.compute.batch.models.BatchTaskContainerSettings&text=BatchTaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getEnvironmentSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getEnvironmentSettings()"
  name: "getEnvironmentSettings()"
  nameWithType: "BatchJobReleaseTask.getEnvironmentSettings()"
  summary: "Get the environment<wbr>Settings property: A list of environment variable settings for the Job Release Task."
  syntax: "public List<EnvironmentSetting> getEnvironmentSettings()"
  desc: "Get the environmentSettings property: A list of environment variable settings for the Job Release Task."
  returns:
    description: "the environmentSettings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getId()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getId()"
  name: "getId()"
  nameWithType: "BatchJobReleaseTask.getId()"
  summary: "Get the id property: A string that uniquely identifies the Job Release Task within the Job."
  syntax: "public String getId()"
  desc: "Get the id property: A string that uniquely identifies the Job Release Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getMaxWallClockTime()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getMaxWallClockTime()"
  name: "getMaxWallClockTime()"
  nameWithType: "BatchJobReleaseTask.getMaxWallClockTime()"
  summary: "Get the max<wbr>Wall<wbr>Clock<wbr>Time property: The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts."
  syntax: "public Duration getMaxWallClockTime()"
  desc: "Get the maxWallClockTime property: The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes. You may not specify a timeout longer than 15 minutes. If you do, the Batch service rejects it with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the maxWallClockTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getResourceFiles()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getResourceFiles()"
  name: "getResourceFiles()"
  nameWithType: "BatchJobReleaseTask.getResourceFiles()"
  summary: "Get the resource<wbr>Files property: A list of files that the Batch service will download to the Compute Node before running the command line."
  syntax: "public List<ResourceFile> getResourceFiles()"
  desc: "Get the resourceFiles property: A list of files that the Batch service will download to the Compute Node before running the command line. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory."
  returns:
    description: "the resourceFiles value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.ResourceFile?alt=com.azure.compute.batch.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getRetentionTime()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getRetentionTime()"
  name: "getRetentionTime()"
  nameWithType: "BatchJobReleaseTask.getRetentionTime()"
  summary: "Get the retention<wbr>Time property: The minimum time to retain the Task directory for the Job Release Task on the Compute Node."
  syntax: "public Duration getRetentionTime()"
  desc: "Get the retentionTime property: The minimum time to retain the Task directory for the Job Release Task on the Compute Node. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
  returns:
    description: "the retentionTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.getUserIdentity()"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.getUserIdentity()"
  name: "getUserIdentity()"
  nameWithType: "BatchJobReleaseTask.getUserIdentity()"
  summary: "Get the user<wbr>Identity property: The user identity under which the Job Release Task runs."
  syntax: "public UserIdentity getUserIdentity()"
  desc: "Get the userIdentity property: The user identity under which the Job Release Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the userIdentity value."
    type: "<xref href=\"com.azure.compute.batch.models.UserIdentity?alt=com.azure.compute.batch.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setContainerSettings(com.azure.compute.batch.models.BatchTaskContainerSettings)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setContainerSettings(BatchTaskContainerSettings containerSettings)"
  name: "setContainerSettings(BatchTaskContainerSettings containerSettings)"
  nameWithType: "BatchJobReleaseTask.setContainerSettings(BatchTaskContainerSettings containerSettings)"
  summary: "Set the container<wbr>Settings property: The settings for the container under which the Job Release Task runs."
  parameters:
  - description: "the containerSettings value to set."
    name: "containerSettings"
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskContainerSettings?alt=com.azure.compute.batch.models.BatchTaskContainerSettings&text=BatchTaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobReleaseTask setContainerSettings(BatchTaskContainerSettings containerSettings)"
  desc: "Set the containerSettings property: The settings for the container under which the Job Release Task runs. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setEnvironmentSettings(java.util.List<com.azure.compute.batch.models.EnvironmentSetting>)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  name: "setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  nameWithType: "BatchJobReleaseTask.setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  summary: "Set the environment<wbr>Settings property: A list of environment variable settings for the Job Release Task."
  parameters:
  - description: "the environmentSettings value to set."
    name: "environmentSettings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobReleaseTask setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  desc: "Set the environmentSettings property: A list of environment variable settings for the Job Release Task."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setId(java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setId(String id)"
  name: "setId(String id)"
  nameWithType: "BatchJobReleaseTask.setId(String id)"
  summary: "Set the id property: A string that uniquely identifies the Job Release Task within the Job."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobReleaseTask setId(String id)"
  desc: "Set the id property: A string that uniquely identifies the Job Release Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setMaxWallClockTime(java.time.Duration)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setMaxWallClockTime(Duration maxWallClockTime)"
  name: "setMaxWallClockTime(Duration maxWallClockTime)"
  nameWithType: "BatchJobReleaseTask.setMaxWallClockTime(Duration maxWallClockTime)"
  summary: "Set the max<wbr>Wall<wbr>Clock<wbr>Time property: The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts."
  parameters:
  - description: "the maxWallClockTime value to set."
    name: "maxWallClockTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public BatchJobReleaseTask setMaxWallClockTime(Duration maxWallClockTime)"
  desc: "Set the maxWallClockTime property: The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes. You may not specify a timeout longer than 15 minutes. If you do, the Batch service rejects it with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setResourceFiles(java.util.List<com.azure.compute.batch.models.ResourceFile>)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setResourceFiles(List<ResourceFile> resourceFiles)"
  name: "setResourceFiles(List<ResourceFile> resourceFiles)"
  nameWithType: "BatchJobReleaseTask.setResourceFiles(List<ResourceFile> resourceFiles)"
  summary: "Set the resource<wbr>Files property: A list of files that the Batch service will download to the Compute Node before running the command line."
  parameters:
  - description: "the resourceFiles value to set."
    name: "resourceFiles"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.ResourceFile?alt=com.azure.compute.batch.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobReleaseTask setResourceFiles(List<ResourceFile> resourceFiles)"
  desc: "Set the resourceFiles property: A list of files that the Batch service will download to the Compute Node before running the command line. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setRetentionTime(java.time.Duration)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setRetentionTime(Duration retentionTime)"
  name: "setRetentionTime(Duration retentionTime)"
  nameWithType: "BatchJobReleaseTask.setRetentionTime(Duration retentionTime)"
  summary: "Set the retention<wbr>Time property: The minimum time to retain the Task directory for the Job Release Task on the Compute Node."
  parameters:
  - description: "the retentionTime value to set."
    name: "retentionTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public BatchJobReleaseTask setRetentionTime(Duration retentionTime)"
  desc: "Set the retentionTime property: The minimum time to retain the Task directory for the Job Release Task on the Compute Node. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.setUserIdentity(com.azure.compute.batch.models.UserIdentity)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.setUserIdentity(UserIdentity userIdentity)"
  name: "setUserIdentity(UserIdentity userIdentity)"
  nameWithType: "BatchJobReleaseTask.setUserIdentity(UserIdentity userIdentity)"
  summary: "Set the user<wbr>Identity property: The user identity under which the Job Release Task runs."
  parameters:
  - description: "the userIdentity value to set."
    name: "userIdentity"
    type: "<xref href=\"com.azure.compute.batch.models.UserIdentity?alt=com.azure.compute.batch.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobReleaseTask setUserIdentity(UserIdentity userIdentity)"
  desc: "Set the userIdentity property: The user identity under which the Job Release Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the BatchJobReleaseTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobReleaseTask.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchJobReleaseTask.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchJobReleaseTask.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Job Release Task to run on Job completion on any Compute Node where the Job has run. The Job Release Task runs when the Job ends, because of one of the following: The user calls the Terminate Job API, or the Delete Job API while the Job is still active, the Job's maximum wall clock time constraint is reached, and the Job is still active, or the Job's Job Manager Task completed, and the Job is configured to terminate when the Job Manager completes. The Job Release Task runs on each Node where Tasks of the Job have run and the Job Preparation Task ran and completed. If you reimage a Node after it has run the Job Preparation Task, and the Job ends without any further Tasks of the Job running on that Node (and hence the Job Preparation Task does not re-run), then the Job Release Task does not run on that Compute Node. If a Node reboots while the Job Release Task is still running, the Job Release Task runs again when the Compute Node starts up. The Job is not marked as complete until all Job Release Tasks have completed. The Job Release Task runs in the background. It does not occupy a scheduling slot; that is, it does not count towards the taskSlotsPerNode limit specified on the Pool."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
