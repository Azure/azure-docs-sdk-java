### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate*"
fullName: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate"
name: "beginRecoverDeletedCertificate"
nameWithType: "CertificateClient.beginRecoverDeletedCertificate"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate(String certificateName)"
  name: "beginRecoverDeletedCertificate(String certificateName)"
  nameWithType: "CertificateClient.beginRecoverDeletedCertificate(String certificateName)"
  summary: "Recovers the deleted certificate back to its current version under /certificates and can only be performed on a soft-delete enabled vault. The RecoverDeletedCertificate operation performs the reversal of the Delete operation and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.\n\n**Code Samples**\n\nRecovers the deleted certificate from the key vault enabled for soft-delete. Prints out the recovered certificate details when a response has been received.\n\n```java\nSyncPoller<KeyVaultCertificateWithPolicy, Void> recoverDeletedCertPoller = certificateClient\n     .beginRecoverDeletedCertificate(\"deletedCertificateName\");\n // Recovered certificate is accessible as soon as polling beings\n PollResponse<KeyVaultCertificateWithPolicy> recoverDeletedCertPollResponse = recoverDeletedCertPoller.poll();\n System.out.printf(\" Recovered Deleted certificate with name %s and id %s\",\n     recoverDeletedCertPollResponse.getValue().getProperties().getName(),\n     recoverDeletedCertPollResponse.getValue().getProperties().getId());\n recoverDeletedCertPoller.waitForCompletion();\n```"
  parameters:
  - description: "The name of the deleted certificate to be recovered."
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<KeyVaultCertificateWithPolicy,Void> beginRecoverDeletedCertificate(String certificateName)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"recovered certificate\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate(java.lang.String,java.time.Duration)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.beginRecoverDeletedCertificate(String certificateName, Duration pollingInterval)"
  name: "beginRecoverDeletedCertificate(String certificateName, Duration pollingInterval)"
  nameWithType: "CertificateClient.beginRecoverDeletedCertificate(String certificateName, Duration pollingInterval)"
  summary: "Recovers the deleted certificate back to its current version under /certificates and can only be performed on a soft-delete enabled vault. The RecoverDeletedCertificate operation performs the reversal of the Delete operation and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.\n\n**Code Samples**\n\nRecovers the deleted certificate from the key vault enabled for soft-delete. Prints out the recovered certificate details when a response has been received.\n\n```java\nSyncPoller<KeyVaultCertificateWithPolicy, Void> recoverDeletedCertificatePoller = certificateClient\n     .beginRecoverDeletedCertificate(\"deletedCertificateName\", Duration.ofSeconds(1));\n // Recovered certificate is accessible as soon as polling beings\n PollResponse<KeyVaultCertificateWithPolicy> recoverDeletedCertificatePollResponse =\n     recoverDeletedCertificatePoller.poll();\n System.out.printf(\" Recovered Deleted certificate with name %s and id %s\",\n     recoverDeletedCertificatePollResponse.getValue().getProperties().getName(),\n     recoverDeletedCertificatePollResponse.getValue().getProperties().getId());\n recoverDeletedCertificatePoller.waitForCompletion();\n```"
  parameters:
  - description: "The name of the deleted certificate to be recovered."
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The interval at which the operation status will be polled."
    name: "pollingInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<KeyVaultCertificateWithPolicy,Void> beginRecoverDeletedCertificate(String certificateName, Duration pollingInterval)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"recovered certificate\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
