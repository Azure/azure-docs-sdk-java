### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic*"
fullName: "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic"
name: "handlePolymorphic"
nameWithType: "BeanDeserializerBase.handlePolymorphic"
members:
- uid: "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)"
  fullName: "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)"
  name: "handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)"
  nameWithType: "BeanDeserializerBase.handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)"
  summary: "Method called in cases where we may have polymorphic deserialization case: that is, type of Creator-constructed bean is not the type of deserializer itself. It should be a sub-class or implementation class; either way, we may have more specific deserializer to use for handling it."
  parameters:
  - description: "(optional) If not null, parser that has more properties to handle\n   (in addition to buffered properties); if null, all properties are passed\n   in buffer"
    name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "bean"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "unknownTokens"
    type: "<xref href=\"com.fasterxml.jackson.databind.util.TokenBuffer?alt=com.fasterxml.jackson.databind.util.TokenBuffer&text=TokenBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object handlePolymorphic(JsonParser p, DeserializationContext ctxt, Object bean, TokenBuffer unknownTokens)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
