### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificateVersions*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificateVersions"
name: "listPropertiesOfCertificateVersions"
nameWithType: "CertificateAsyncClient.listPropertiesOfCertificateVersions"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificateVersions(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.listPropertiesOfCertificateVersions(String certificateName)"
  name: "listPropertiesOfCertificateVersions(String certificateName)"
  nameWithType: "CertificateAsyncClient.listPropertiesOfCertificateVersions(String certificateName)"
  summary: "List all versions of the specified certificate. The individual certificate response in the flux is represented by <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> as only the certificate identifier, thumbprint, attributes and tags are provided in the response. The policy is not listed in the response. This operation requires the certificates/list permission.\n\nIt is possible to get the certificates with properties excluding the policy for all the versions from this information. Convert the <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> to <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> using <xref uid=\"com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateAsyncClient#getCertificateVersion(String, String)\"></xref> within <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux#flatMap(Function)\"></xref>.\n\n```java\ncertificateAsyncClient.listPropertiesOfCertificateVersions(\"certificateName\")\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificate -> certificateAsyncClient.getCertificateVersion(certificate.getName(),\n         certificate.getVersion())\n         .subscribe(certificateResponse -> System.out.printf(\"Received certificate with name %s and key id %s\",\n             certificateResponse.getProperties().getName(), certificateResponse.getKeyId())));\n```"
  parameters:
  - description: "The name of the certificate."
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<CertificateProperties> listPropertiesOfCertificateVersions(String certificateName)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref> of all the versions of the specified certificate in the vault. Flux is empty if certificate with <code>certificateName</code> does not exist in key vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
