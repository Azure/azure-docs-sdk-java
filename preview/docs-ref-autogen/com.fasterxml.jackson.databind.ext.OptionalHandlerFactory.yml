### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  id: OptionalHandlerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext
  children:
  - com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory()
  - com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instance
  langs:
  - java
  name: OptionalHandlerFactory
  nameWithType: OptionalHandlerFactory
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  type: Class
  package: com.fasterxml.jackson.databind.ext
  summary: >-
    Helper class used for isolating details of handling optional+external types (javax.xml classes) from standard factories that offer them.


    Note that 2.7 changed handling to slightly less dynamic, to avoid having to traverse class hierarchy, which turned to be a performance issue in certain cases. Since DOM classes are assumed to exist on all Java 1.6 environments (yes, even on Android/GAE), this part could be simplified by slightly less dynamic lookups.


    Also with 2.7 we are supporting JDK 1.7/Java 7 type(s).
  syntax:
    content: public class OptionalHandlerFactory implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory()
  id: OptionalHandlerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  langs:
  - java
  name: OptionalHandlerFactory()
  nameWithType: OptionalHandlerFactory.OptionalHandlerFactory()
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory()
  overload: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory*
  type: Constructor
  package: com.fasterxml.jackson.databind.ext
  syntax:
    content: protected OptionalHandlerFactory()
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  langs:
  - java
  name: findDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: OptionalHandlerFactory.findDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.ext
  syntax:
    content: public JsonDeserializer<?> findDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  langs:
  - java
  name: findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  nameWithType: OptionalHandlerFactory.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ext
  syntax:
    content: public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor(java.lang.Class<?>)
  id: hasDeserializerFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  langs:
  - java
  name: hasDeserializerFor(Class<?> valueType)
  nameWithType: OptionalHandlerFactory.hasDeserializerFor(Class<?> valueType)
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor(Class<?> valueType)
  overload: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor*
  type: Method
  package: com.fasterxml.jackson.databind.ext
  syntax:
    content: public boolean hasDeserializerFor(Class<?> valueType)
    parameters:
    - id: valueType
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instance
  id: instance
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
  langs:
  - java
  name: instance
  nameWithType: OptionalHandlerFactory.instance
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instance
  type: Field
  package: com.fasterxml.jackson.databind.ext
  syntax:
    content: public static final OptionalHandlerFactory instance
    return:
      type: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory
references:
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory*
  name: OptionalHandlerFactory
  nameWithType: OptionalHandlerFactory.OptionalHandlerFactory
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.OptionalHandlerFactory
  package: com.fasterxml.jackson.databind.ext
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer*
  name: findSerializer
  nameWithType: OptionalHandlerFactory.findSerializer
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer
  package: com.fasterxml.jackson.databind.ext
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer*
  name: findDeserializer
  nameWithType: OptionalHandlerFactory.findDeserializer
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer
  package: com.fasterxml.jackson.databind.ext
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor*
  name: hasDeserializerFor
  nameWithType: OptionalHandlerFactory.hasDeserializerFor
  fullName: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor
  package: com.fasterxml.jackson.databind.ext
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
