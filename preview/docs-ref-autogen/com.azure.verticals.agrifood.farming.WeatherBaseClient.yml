### YamlMime:JavaType
uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient"
fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient"
name: "WeatherBaseClient"
nameWithType: "WeatherBaseClient"
summary: "Initializes a new instance of the Weather<wbr>Base<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class WeatherBaseClient"
methods:
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.createDataDeleteJob(java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.createDataDeleteJob(String jobId)"
  name: "createDataDeleteJob(String jobId)"
  nameWithType: "WeatherBaseClient.createDataDeleteJob(String jobId)"
  summary: "Create a weather data delete job."
  parameters:
  - description: "Job ID supplied by end user."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest createDataDeleteJob(String jobId)"
  desc: "Create a weather data delete job.\n\n**Request Body Schema**\n\n```java\n{\n     extensionId: String\n     farmerId: String\n     boundaryId: String\n     weatherDataType: String\n     granularity: String\n     startDateTime: OffsetDateTime\n     endDateTime: OffsetDateTime\n     id: String\n     status: String\n     durationInSeconds: Double\n     message: String\n     createdDateTime: OffsetDateTime\n     lastActionDateTime: OffsetDateTime\n     startTime: OffsetDateTime\n     endTime: OffsetDateTime\n     name: String\n     description: String\n     properties: {\n         String: Object\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n(recursive schema, see above)\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.createDataIngestionJob(java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.createDataIngestionJob(String jobId)"
  name: "createDataIngestionJob(String jobId)"
  nameWithType: "WeatherBaseClient.createDataIngestionJob(String jobId)"
  summary: "Create a weather data ingestion job."
  parameters:
  - description: "Job id supplied by user."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest createDataIngestionJob(String jobId)"
  desc: "Create a weather data ingestion job.\n\n**Request Body Schema**\n\n```java\n{\n     boundaryId: String\n     farmerId: String\n     extensionId: String\n     extensionApiName: String\n     extensionApiInput: {\n         String: Object\n     }\n     extensionDataProviderAppId: String\n     extensionDataProviderApiKey: String\n     id: String\n     status: String\n     durationInSeconds: Double\n     message: String\n     createdDateTime: OffsetDateTime\n     lastActionDateTime: OffsetDateTime\n     startTime: OffsetDateTime\n     endTime: OffsetDateTime\n     name: String\n     description: String\n     properties: {\n         String: Object\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n(recursive schema, see above)\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.getDataDeleteJobDetails(java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.getDataDeleteJobDetails(String jobId)"
  name: "getDataDeleteJobDetails(String jobId)"
  nameWithType: "WeatherBaseClient.getDataDeleteJobDetails(String jobId)"
  summary: "Get weather data delete job."
  parameters:
  - description: "ID of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest getDataDeleteJobDetails(String jobId)"
  desc: "Get weather data delete job.\n\n**Response Body Schema**\n\n```java\n{\n     extensionId: String\n     farmerId: String\n     boundaryId: String\n     weatherDataType: String\n     granularity: String\n     startDateTime: OffsetDateTime\n     endDateTime: OffsetDateTime\n     id: String\n     status: String\n     durationInSeconds: Double\n     message: String\n     createdDateTime: OffsetDateTime\n     lastActionDateTime: OffsetDateTime\n     startTime: OffsetDateTime\n     endTime: OffsetDateTime\n     name: String\n     description: String\n     properties: {\n         String: Object\n     }\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.getDataIngestionJobDetails(java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.getDataIngestionJobDetails(String jobId)"
  name: "getDataIngestionJobDetails(String jobId)"
  nameWithType: "WeatherBaseClient.getDataIngestionJobDetails(String jobId)"
  summary: "Get weather ingestion job."
  parameters:
  - description: "ID of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest getDataIngestionJobDetails(String jobId)"
  desc: "Get weather ingestion job.\n\n**Response Body Schema**\n\n```java\n{\n     boundaryId: String\n     farmerId: String\n     extensionId: String\n     extensionApiName: String\n     extensionApiInput: {\n         String: Object\n     }\n     extensionDataProviderAppId: String\n     extensionDataProviderApiKey: String\n     id: String\n     status: String\n     durationInSeconds: Double\n     message: String\n     createdDateTime: OffsetDateTime\n     lastActionDateTime: OffsetDateTime\n     startTime: OffsetDateTime\n     endTime: OffsetDateTime\n     name: String\n     description: String\n     properties: {\n         String: Object\n     }\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.invoke()"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.invoke()"
  name: "invoke()"
  nameWithType: "WeatherBaseClient.invoke()"
  summary: "Create an empty Dynamic<wbr>Request with the serializer and pipeline initialized for this client."
  syntax: "public DynamicRequest invoke()"
  desc: "Create an empty DynamicRequest with the serializer and pipeline initialized for this client."
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.list(String farmerId, String boundaryId, String extensionId, String weatherDataType, String granularity)"
  name: "list(String farmerId, String boundaryId, String extensionId, String weatherDataType, String granularity)"
  nameWithType: "WeatherBaseClient.list(String farmerId, String boundaryId, String extensionId, String weatherDataType, String granularity)"
  summary: "Returns a paginated list of weather data."
  parameters:
  - description: "Farmer ID."
    name: "farmerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Boundary ID."
    name: "boundaryId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ID of the weather extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of weather data (forecast/historical)."
    name: "weatherDataType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Granularity of weather data (daily/hourly)."
    name: "granularity"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest list(String farmerId, String boundaryId, String extensionId, String weatherDataType, String granularity)"
  desc: "Returns a paginated list of weather data.\n\n**Optional Query Parameters**\n\n    | ------------- | -------------- | --------------------------------------------------------------------------------------------- |\n    | Name          | Type           | Description                                                                                   |\n    | startDateTime | OffsetDateTime | Weather data start UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.            |\n    | endDateTime   | OffsetDateTime | Weather data end UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.              |\n    | maxPageSize   | Integer        | Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000, Default value = 50. |\n    | skipToken     | String         | Skip token for getting next set of results.                                                   |\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             farmerId: String\n             boundaryId: String\n             extensionId: String\n             location: {\n                 latitude: double\n                 longitude: double\n             }\n             dateTime: OffsetDateTime\n             unitSystemCode: String\n             extensionVersion: String\n             weatherDataType: String\n             granularity: String\n             cloudCover: {\n                 unit: String\n                 value: Double\n             }\n             dewPoint: (recursive schema, see dewPoint above)\n             growingDegreeDay: (recursive schema, see growingDegreeDay above)\n             precipitation: (recursive schema, see precipitation above)\n             pressure: (recursive schema, see pressure above)\n             relativeHumidity: (recursive schema, see relativeHumidity above)\n             soilMoisture: (recursive schema, see soilMoisture above)\n             soilTemperature: (recursive schema, see soilTemperature above)\n             temperature: (recursive schema, see temperature above)\n             visibility: (recursive schema, see visibility above)\n             wetBulbTemperature: (recursive schema, see wetBulbTemperature above)\n             windChill: (recursive schema, see windChill above)\n             windDirection: (recursive schema, see windDirection above)\n             windGust: (recursive schema, see windGust above)\n             windSpeed: (recursive schema, see windSpeed above)\n             id: String\n             eTag: String\n             createdDateTime: OffsetDateTime\n             modifiedDateTime: OffsetDateTime\n             properties: {\n                 String: Object\n             }\n         }\n     ]\n     skipToken: String\n     nextLink: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.verticals.agrifood.farming.WeatherBaseClient.listNext(java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.WeatherBaseClient.listNext(String nextLink)"
  name: "listNext(String nextLink)"
  nameWithType: "WeatherBaseClient.listNext(String nextLink)"
  summary: "Get the next page of items."
  parameters:
  - description: "The nextLink parameter."
    name: "nextLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest listNext(String nextLink)"
  desc: "Get the next page of items.\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             farmerId: String\n             boundaryId: String\n             extensionId: String\n             location: {\n                 latitude: double\n                 longitude: double\n             }\n             dateTime: OffsetDateTime\n             unitSystemCode: String\n             extensionVersion: String\n             weatherDataType: String\n             granularity: String\n             cloudCover: {\n                 unit: String\n                 value: Double\n             }\n             dewPoint: (recursive schema, see dewPoint above)\n             growingDegreeDay: (recursive schema, see growingDegreeDay above)\n             precipitation: (recursive schema, see precipitation above)\n             pressure: (recursive schema, see pressure above)\n             relativeHumidity: (recursive schema, see relativeHumidity above)\n             soilMoisture: (recursive schema, see soilMoisture above)\n             soilTemperature: (recursive schema, see soilTemperature above)\n             temperature: (recursive schema, see temperature above)\n             visibility: (recursive schema, see visibility above)\n             wetBulbTemperature: (recursive schema, see wetBulbTemperature above)\n             windChill: (recursive schema, see windChill above)\n             windDirection: (recursive schema, see windDirection above)\n             windGust: (recursive schema, see windGust above)\n             windSpeed: (recursive schema, see windSpeed above)\n             id: String\n             eTag: String\n             createdDateTime: OffsetDateTime\n             modifiedDateTime: OffsetDateTime\n             properties: {\n                 String: Object\n             }\n         }\n     ]\n     skipToken: String\n     nextLink: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the WeatherBaseClient type."
metadata: {}
package: "com.azure.verticals.agrifood.farming"
artifact: com.azure:azure-verticals-agrifood-farming:1.0.0-beta.2
