### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.models.Remediations"
fullName: "com.azure.resourcemanager.policyinsights.models.Remediations"
name: "Remediations"
nameWithType: "Remediations"
summary: "Resource collection API of Remediations."
syntax: "public interface Remediations"
methods:
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtManagementGroup(String managementGroupId, String remediationName)"
  name: "cancelAtManagementGroup(String managementGroupId, String remediationName)"
  nameWithType: "Remediations.cancelAtManagementGroup(String managementGroupId, String remediationName)"
  summary: "Cancels a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation cancelAtManagementGroup(String managementGroupId, String remediationName)"
  desc: "Cancels a remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  name: "cancelAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  nameWithType: "Remediations.cancelAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  summary: "Cancels a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> cancelAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  desc: "Cancels a remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResource(String resourceId, String remediationName)"
  name: "cancelAtResource(String resourceId, String remediationName)"
  nameWithType: "Remediations.cancelAtResource(String resourceId, String remediationName)"
  summary: "Cancel a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation cancelAtResource(String resourceId, String remediationName)"
  desc: "Cancel a remediation at resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceGroup(String resourceGroupName, String remediationName)"
  name: "cancelAtResourceGroup(String resourceGroupName, String remediationName)"
  nameWithType: "Remediations.cancelAtResourceGroup(String resourceGroupName, String remediationName)"
  summary: "Cancels a remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation cancelAtResourceGroup(String resourceGroupName, String remediationName)"
  desc: "Cancels a remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  name: "cancelAtResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  nameWithType: "Remediations.cancelAtResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  summary: "Cancels a remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> cancelAtResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  desc: "Cancels a remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  name: "cancelAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  nameWithType: "Remediations.cancelAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  summary: "Cancel a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> cancelAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  desc: "Cancel a remediation at resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtSubscription(String remediationName)"
  name: "cancelAtSubscription(String remediationName)"
  nameWithType: "Remediations.cancelAtSubscription(String remediationName)"
  summary: "Cancels a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation cancelAtSubscription(String remediationName)"
  desc: "Cancels a remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.cancelAtSubscriptionWithResponse(String remediationName, Context context)"
  name: "cancelAtSubscriptionWithResponse(String remediationName, Context context)"
  nameWithType: "Remediations.cancelAtSubscriptionWithResponse(String remediationName, Context context)"
  summary: "Cancels a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> cancelAtSubscriptionWithResponse(String remediationName, Context context)"
  desc: "Cancels a remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtManagementGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtManagementGroup(String managementGroupId, String remediationName, RemediationInner parameters)"
  name: "createOrUpdateAtManagementGroup(String managementGroupId, String remediationName, RemediationInner parameters)"
  nameWithType: "Remediations.createOrUpdateAtManagementGroup(String managementGroupId, String remediationName, RemediationInner parameters)"
  summary: "Creates or updates a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation createOrUpdateAtManagementGroup(String managementGroupId, String remediationName, RemediationInner parameters)"
  desc: "Creates or updates a remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtManagementGroupWithResponse(String managementGroupId, String remediationName, RemediationInner parameters, Context context)"
  name: "createOrUpdateAtManagementGroupWithResponse(String managementGroupId, String remediationName, RemediationInner parameters, Context context)"
  nameWithType: "Remediations.createOrUpdateAtManagementGroupWithResponse(String managementGroupId, String remediationName, RemediationInner parameters, Context context)"
  summary: "Creates or updates a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> createOrUpdateAtManagementGroupWithResponse(String managementGroupId, String remediationName, RemediationInner parameters, Context context)"
  desc: "Creates or updates a remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtResource(String resourceId, String remediationName, RemediationInner parameters)"
  name: "createOrUpdateAtResource(String resourceId, String remediationName, RemediationInner parameters)"
  nameWithType: "Remediations.createOrUpdateAtResource(String resourceId, String remediationName, RemediationInner parameters)"
  summary: "Creates or updates a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation createOrUpdateAtResource(String resourceId, String remediationName, RemediationInner parameters)"
  desc: "Creates or updates a remediation at resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtResourceWithResponse(String resourceId, String remediationName, RemediationInner parameters, Context context)"
  name: "createOrUpdateAtResourceWithResponse(String resourceId, String remediationName, RemediationInner parameters, Context context)"
  nameWithType: "Remediations.createOrUpdateAtResourceWithResponse(String resourceId, String remediationName, RemediationInner parameters, Context context)"
  summary: "Creates or updates a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> createOrUpdateAtResourceWithResponse(String resourceId, String remediationName, RemediationInner parameters, Context context)"
  desc: "Creates or updates a remediation at resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtSubscription(String remediationName, RemediationInner parameters)"
  name: "createOrUpdateAtSubscription(String remediationName, RemediationInner parameters)"
  nameWithType: "Remediations.createOrUpdateAtSubscription(String remediationName, RemediationInner parameters)"
  summary: "Creates or updates a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation createOrUpdateAtSubscription(String remediationName, RemediationInner parameters)"
  desc: "Creates or updates a remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtSubscriptionWithResponse(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.createOrUpdateAtSubscriptionWithResponse(String remediationName, RemediationInner parameters, Context context)"
  name: "createOrUpdateAtSubscriptionWithResponse(String remediationName, RemediationInner parameters, Context context)"
  nameWithType: "Remediations.createOrUpdateAtSubscriptionWithResponse(String remediationName, RemediationInner parameters, Context context)"
  summary: "Creates or updates a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The remediation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> createOrUpdateAtSubscriptionWithResponse(String remediationName, RemediationInner parameters, Context context)"
  desc: "Creates or updates a remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.define(String name)"
  name: "define(String name)"
  nameWithType: "Remediations.define(String name)"
  summary: "Begins definition for a new Remediation resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Remediation resource."
  returns:
    description: "the first stage of the new Remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation.DefinitionStages.Blank?alt=com.azure.resourcemanager.policyinsights.models.Remediation.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtManagementGroup(String managementGroupId, String remediationName)"
  name: "deleteAtManagementGroup(String managementGroupId, String remediationName)"
  nameWithType: "Remediations.deleteAtManagementGroup(String managementGroupId, String remediationName)"
  summary: "Deletes an existing remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation deleteAtManagementGroup(String managementGroupId, String remediationName)"
  desc: "Deletes an existing remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  name: "deleteAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  nameWithType: "Remediations.deleteAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  summary: "Deletes an existing remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> deleteAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  desc: "Deletes an existing remediation at management group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtResource(String resourceId, String remediationName)"
  name: "deleteAtResource(String resourceId, String remediationName)"
  nameWithType: "Remediations.deleteAtResource(String resourceId, String remediationName)"
  summary: "Deletes an existing remediation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation deleteAtResource(String resourceId, String remediationName)"
  desc: "Deletes an existing remediation at individual resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  name: "deleteAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  nameWithType: "Remediations.deleteAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  summary: "Deletes an existing remediation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> deleteAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  desc: "Deletes an existing remediation at individual resource scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtSubscription(String remediationName)"
  name: "deleteAtSubscription(String remediationName)"
  nameWithType: "Remediations.deleteAtSubscription(String remediationName)"
  summary: "Deletes an existing remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation deleteAtSubscription(String remediationName)"
  desc: "Deletes an existing remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteAtSubscriptionWithResponse(String remediationName, Context context)"
  name: "deleteAtSubscriptionWithResponse(String remediationName, Context context)"
  nameWithType: "Remediations.deleteAtSubscriptionWithResponse(String remediationName, Context context)"
  summary: "Deletes an existing remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> deleteAtSubscriptionWithResponse(String remediationName, Context context)"
  desc: "Deletes an existing remediation at subscription scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Remediations.deleteById(String id)"
  summary: "Deletes an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation deleteById(String id)"
  desc: "Deletes an existing remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Remediations.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteByResourceGroup(String resourceGroupName, String remediationName)"
  name: "deleteByResourceGroup(String resourceGroupName, String remediationName)"
  nameWithType: "Remediations.deleteByResourceGroup(String resourceGroupName, String remediationName)"
  summary: "Deletes an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation deleteByResourceGroup(String resourceGroupName, String remediationName)"
  desc: "Deletes an existing remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.deleteWithResponse(String resourceGroupName, String remediationName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String remediationName, Context context)"
  nameWithType: "Remediations.deleteWithResponse(String resourceGroupName, String remediationName, Context context)"
  summary: "Deletes an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> deleteWithResponse(String resourceGroupName, String remediationName, Context context)"
  desc: "Deletes an existing remediation at resource group scope."
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtManagementGroup(String managementGroupId, String remediationName)"
  name: "getAtManagementGroup(String managementGroupId, String remediationName)"
  nameWithType: "Remediations.getAtManagementGroup(String managementGroupId, String remediationName)"
  summary: "Gets an existing remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation getAtManagementGroup(String managementGroupId, String remediationName)"
  desc: "Gets an existing remediation at management group scope."
  returns:
    description: "an existing remediation at management group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  name: "getAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  nameWithType: "Remediations.getAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  summary: "Gets an existing remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> getAtManagementGroupWithResponse(String managementGroupId, String remediationName, Context context)"
  desc: "Gets an existing remediation at management group scope."
  returns:
    description: "an existing remediation at management group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtResource(String resourceId, String remediationName)"
  name: "getAtResource(String resourceId, String remediationName)"
  nameWithType: "Remediations.getAtResource(String resourceId, String remediationName)"
  summary: "Gets an existing remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation getAtResource(String resourceId, String remediationName)"
  desc: "Gets an existing remediation at resource scope."
  returns:
    description: "an existing remediation at resource scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  name: "getAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  nameWithType: "Remediations.getAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  summary: "Gets an existing remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> getAtResourceWithResponse(String resourceId, String remediationName, Context context)"
  desc: "Gets an existing remediation at resource scope."
  returns:
    description: "an existing remediation at resource scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtSubscription(String remediationName)"
  name: "getAtSubscription(String remediationName)"
  nameWithType: "Remediations.getAtSubscription(String remediationName)"
  summary: "Gets an existing remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation getAtSubscription(String remediationName)"
  desc: "Gets an existing remediation at subscription scope."
  returns:
    description: "an existing remediation at subscription scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getAtSubscriptionWithResponse(String remediationName, Context context)"
  name: "getAtSubscriptionWithResponse(String remediationName, Context context)"
  nameWithType: "Remediations.getAtSubscriptionWithResponse(String remediationName, Context context)"
  summary: "Gets an existing remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> getAtSubscriptionWithResponse(String remediationName, Context context)"
  desc: "Gets an existing remediation at subscription scope."
  returns:
    description: "an existing remediation at subscription scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Remediations.getById(String id)"
  summary: "Gets an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation getById(String id)"
  desc: "Gets an existing remediation at resource group scope."
  returns:
    description: "an existing remediation at resource group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Remediations.getByIdWithResponse(String id, Context context)"
  summary: "Gets an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> getByIdWithResponse(String id, Context context)"
  desc: "Gets an existing remediation at resource group scope."
  returns:
    description: "an existing remediation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getByResourceGroup(String resourceGroupName, String remediationName)"
  name: "getByResourceGroup(String resourceGroupName, String remediationName)"
  nameWithType: "Remediations.getByResourceGroup(String resourceGroupName, String remediationName)"
  summary: "Gets an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Remediation getByResourceGroup(String resourceGroupName, String remediationName)"
  desc: "Gets an existing remediation at resource group scope."
  returns:
    description: "an existing remediation at resource group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.getByResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  nameWithType: "Remediations.getByResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  summary: "Gets an existing remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Remediation> getByResourceGroupWithResponse(String resourceGroupName, String remediationName, Context context)"
  desc: "Gets an existing remediation at resource group scope."
  returns:
    description: "an existing remediation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.list()"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.list()"
  name: "list()"
  nameWithType: "Remediations.list()"
  summary: "Gets all remediations for the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Remediation> list()"
  desc: "Gets all remediations for the subscription."
  returns:
    description: "all remediations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.list(Integer top, String filter, Context context)"
  name: "list(Integer top, String filter, Context context)"
  nameWithType: "Remediations.list(Integer top, String filter, Context context)"
  summary: "Gets all remediations for the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> list(Integer top, String filter, Context context)"
  desc: "Gets all remediations for the subscription."
  returns:
    description: "all remediations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Remediations.listByResourceGroup(String resourceGroupName)"
  summary: "Gets all remediations for the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listByResourceGroup(String resourceGroupName)"
  desc: "Gets all remediations for the subscription."
  returns:
    description: "all remediations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listByResourceGroup(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  nameWithType: "Remediations.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  summary: "Gets all remediations for the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  desc: "Gets all remediations for the subscription."
  returns:
    description: "all remediations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtManagementGroup(String managementGroupId, String remediationName)"
  name: "listDeploymentsAtManagementGroup(String managementGroupId, String remediationName)"
  nameWithType: "Remediations.listDeploymentsAtManagementGroup(String managementGroupId, String remediationName)"
  summary: "Gets all deployments for a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtManagementGroup(String managementGroupId, String remediationName)"
  desc: "Gets all deployments for a remediation at management group scope."
  returns:
    description: "all deployments for a remediation at management group scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtManagementGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtManagementGroup(String managementGroupId, String remediationName, Integer top, Context context)"
  name: "listDeploymentsAtManagementGroup(String managementGroupId, String remediationName, Integer top, Context context)"
  nameWithType: "Remediations.listDeploymentsAtManagementGroup(String managementGroupId, String remediationName, Integer top, Context context)"
  summary: "Gets all deployments for a remediation at management group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtManagementGroup(String managementGroupId, String remediationName, Integer top, Context context)"
  desc: "Gets all deployments for a remediation at management group scope."
  returns:
    description: "all deployments for a remediation at management group scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResource(String resourceId, String remediationName)"
  name: "listDeploymentsAtResource(String resourceId, String remediationName)"
  nameWithType: "Remediations.listDeploymentsAtResource(String resourceId, String remediationName)"
  summary: "Gets all deployments for a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtResource(String resourceId, String remediationName)"
  desc: "Gets all deployments for a remediation at resource scope."
  returns:
    description: "all deployments for a remediation at resource scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResource(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResource(String resourceId, String remediationName, Integer top, Context context)"
  name: "listDeploymentsAtResource(String resourceId, String remediationName, Integer top, Context context)"
  nameWithType: "Remediations.listDeploymentsAtResource(String resourceId, String remediationName, Integer top, Context context)"
  summary: "Gets all deployments for a remediation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtResource(String resourceId, String remediationName, Integer top, Context context)"
  desc: "Gets all deployments for a remediation at resource scope."
  returns:
    description: "all deployments for a remediation at resource scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName)"
  name: "listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName)"
  nameWithType: "Remediations.listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName)"
  summary: "Gets all deployments for a remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName)"
  desc: "Gets all deployments for a remediation at resource group scope."
  returns:
    description: "all deployments for a remediation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName, Integer top, Context context)"
  name: "listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName, Integer top, Context context)"
  nameWithType: "Remediations.listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName, Integer top, Context context)"
  summary: "Gets all deployments for a remediation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtResourceGroup(String resourceGroupName, String remediationName, Integer top, Context context)"
  desc: "Gets all deployments for a remediation at resource group scope."
  returns:
    description: "all deployments for a remediation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtSubscription(String remediationName)"
  name: "listDeploymentsAtSubscription(String remediationName)"
  nameWithType: "Remediations.listDeploymentsAtSubscription(String remediationName)"
  summary: "Gets all deployments for a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtSubscription(String remediationName)"
  desc: "Gets all deployments for a remediation at subscription scope."
  returns:
    description: "all deployments for a remediation at subscription scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtSubscription(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listDeploymentsAtSubscription(String remediationName, Integer top, Context context)"
  name: "listDeploymentsAtSubscription(String remediationName, Integer top, Context context)"
  nameWithType: "Remediations.listDeploymentsAtSubscription(String remediationName, Integer top, Context context)"
  summary: "Gets all deployments for a remediation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RemediationDeployment> listDeploymentsAtSubscription(String remediationName, Integer top, Context context)"
  desc: "Gets all deployments for a remediation at subscription scope."
  returns:
    description: "all deployments for a remediation at subscription scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationDeployment?alt=com.azure.resourcemanager.policyinsights.models.RemediationDeployment&text=RemediationDeployment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listForManagementGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listForManagementGroup(String managementGroupId)"
  name: "listForManagementGroup(String managementGroupId)"
  nameWithType: "Remediations.listForManagementGroup(String managementGroupId)"
  summary: "Gets all remediations for the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listForManagementGroup(String managementGroupId)"
  desc: "Gets all remediations for the management group."
  returns:
    description: "all remediations for the management group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listForManagementGroup(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listForManagementGroup(String managementGroupId, Integer top, String filter, Context context)"
  name: "listForManagementGroup(String managementGroupId, Integer top, String filter, Context context)"
  nameWithType: "Remediations.listForManagementGroup(String managementGroupId, Integer top, String filter, Context context)"
  summary: "Gets all remediations for the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group ID."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listForManagementGroup(String managementGroupId, Integer top, String filter, Context context)"
  desc: "Gets all remediations for the management group."
  returns:
    description: "all remediations for the management group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listForResource(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listForResource(String resourceId)"
  name: "listForResource(String resourceId)"
  nameWithType: "Remediations.listForResource(String resourceId)"
  summary: "Gets all remediations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listForResource(String resourceId)"
  desc: "Gets all remediations for a resource."
  returns:
    description: "all remediations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Remediations.listForResource(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Remediations.listForResource(String resourceId, Integer top, String filter, Context context)"
  name: "listForResource(String resourceId, Integer top, String filter, Context context)"
  nameWithType: "Remediations.listForResource(String resourceId, Integer top, String filter, Context context)"
  summary: "Gets all remediations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Remediation> listForResource(String resourceId, Integer top, String filter, Context context)"
  desc: "Gets all remediations for a resource."
  returns:
    description: "all remediations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Remediation?alt=com.azure.resourcemanager.policyinsights.models.Remediation&text=Remediation\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Remediations."
metadata: {}
package: "com.azure.resourcemanager.policyinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
