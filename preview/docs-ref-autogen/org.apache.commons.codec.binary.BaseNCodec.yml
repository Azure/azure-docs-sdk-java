### YamlMime:JavaType
uid: "org.apache.commons.codec.binary.BaseNCodec"
fullName: "org.apache.commons.codec.binary.BaseNCodec"
name: "BaseNCodec"
nameWithType: "BaseNCodec"
summary: "Abstract superclass for Base-N encoders and decoders.\n\nThis class is thread-safe."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class BaseNCodec implements BinaryEncoder, BinaryDecoder"
constructors:
- "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)"
- "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte)"
fields:
- "org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"
- "org.apache.commons.codec.binary.BaseNCodec.MIME_CHUNK_SIZE"
- "org.apache.commons.codec.binary.BaseNCodec.PAD"
- "org.apache.commons.codec.binary.BaseNCodec.PAD_DEFAULT"
- "org.apache.commons.codec.binary.BaseNCodec.PEM_CHUNK_SIZE"
- "org.apache.commons.codec.binary.BaseNCodec.lineLength"
- "org.apache.commons.codec.binary.BaseNCodec.pad"
methods:
- "org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec.Context)"
- "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()"
- "org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)"
type: "class"
implements:
- "<xref href=\"org.apache.commons.codec.BinaryDecoder?alt=org.apache.commons.codec.BinaryDecoder&text=BinaryDecoder\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.commons.codec.BinaryEncoder?alt=org.apache.commons.codec.BinaryEncoder&text=BinaryEncoder\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
