### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  id: "ServiceBusReactorAmqpConnection"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection(java.lang.String,com.azure.core.amqp.implementation.ConnectionOptions,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose()"
  - "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  langs:
  - "java"
  name: "ServiceBusReactorAmqpConnection"
  nameWithType: "ServiceBusReactorAmqpConnection"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  type: "Class"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "A proton-j AMQP connection to an Azure Service Bus instance."
  syntax:
    content: "public class ServiceBusReactorAmqpConnection extends ReactorConnection implements ServiceBusAmqpConnection"
  inheritance:
  - "java.lang.Object"
  - "com.azure.core.amqp.implementation.ReactorConnection"
  implements:
  - "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  inheritedMembers:
  - "com.azure.core.amqp.implementation.ReactorConnection.createRequestResponseChannel(java.lang.String,java.lang.String,java.lang.String)"
  - "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String)"
  - "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
  - "com.azure.core.amqp.implementation.ReactorConnection.dispose()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getClaimsBasedSecurityNode()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getConnectionProperties()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getEndpointStates()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getFullyQualifiedNamespace()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getId()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getMaxFrameSize()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getReactorConnection()"
  - "com.azure.core.amqp.implementation.ReactorConnection.getShutdownSignals()"
  - "com.azure.core.amqp.implementation.ReactorConnection.isDisposed()"
  - "com.azure.core.amqp.implementation.ReactorConnection.removeSession(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection(java.lang.String,com.azure.core.amqp.implementation.ConnectionOptions,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String)"
  id: "ServiceBusReactorAmqpConnection(java.lang.String,com.azure.core.amqp.implementation.ConnectionOptions,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions connectionOptions, ReactorProvider reactorProvider, ReactorHandlerProvider handlerProvider, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, String product, String clientVersion)"
  nameWithType: "ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions connectionOptions, ReactorProvider reactorProvider, ReactorHandlerProvider handlerProvider, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, String product, String clientVersion)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions connectionOptions, ReactorProvider reactorProvider, ReactorHandlerProvider handlerProvider, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, String product, String clientVersion)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection*"
  type: "Constructor"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates a new AMQP connection that uses proton-j."
  syntax:
    content: "public ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions connectionOptions, ReactorProvider reactorProvider, ReactorHandlerProvider handlerProvider, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, String product, String clientVersion)"
    parameters:
    - id: "connectionId"
      type: "java.lang.String"
      description: "Identifier for the connection."
    - id: "connectionOptions"
      type: "com.azure.core.amqp.implementation.ConnectionOptions"
      description: "A set of options used to create the AMQP connection."
    - id: "reactorProvider"
      type: "com.azure.core.amqp.implementation.ReactorProvider"
      description: "Provides proton-j reactor instances."
    - id: "handlerProvider"
      type: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
      description: "Provides <xref uid=\"\" data-throw-if-not-resolved=\"false\">BaseHandler</xref> to listen to proton-j reactor events."
    - id: "tokenManagerProvider"
      type: "com.azure.core.amqp.implementation.TokenManagerProvider"
      description: "Provides a token manager for authorizing with CBS node."
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
      description: "Serializes and deserializes proton-j messages."
    - id: "product"
      type: "java.lang.String"
    - id: "clientVersion"
      type: "java.lang.String"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  id: "createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  nameWithType: "ServiceBusReactorAmqpConnection.createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "receiveMode"
      type: "com.azure.messaging.servicebus.models.ReceiveMode"
      description: "Consumer options to use when creating the link."
    - id: "isSession"
      type: "boolean"
    - id: "transferEntityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
      description: "A new or existing receive link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  id: "createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  nameWithType: "ServiceBusReactorAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates or gets a send link. The same link is returned if there is an existing send link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public Mono<AmqpSendLink> createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "retryOptions"
      type: "com.azure.core.amqp.AmqpRetryOptions"
      description: "Options to use when creating the link."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
      description: "A new or existing send link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
  id: "createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "createSession(String sessionName, Session session, SessionHandler handler)"
  nameWithType: "ServiceBusReactorAmqpConnection.createSession(String sessionName, Session session, SessionHandler handler)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession(String sessionName, Session session, SessionHandler handler)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "protected AmqpSession createSession(String sessionName, Session session, SessionHandler handler)"
    parameters:
    - id: "sessionName"
      type: "java.lang.String"
    - id: "session"
      type: "org.apache.qpid.proton.engine.Session"
    - id: "handler"
      type: "com.azure.core.amqp.implementation.handler.SessionHandler"
    return:
      type: "com.azure.core.amqp.AmqpSession"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose()"
  id: "dispose()"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ServiceBusReactorAmqpConnection.dispose()"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose()"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  id: "getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection"
  langs:
  - "java"
  name: "getManagementNode(String entityPath, MessagingEntityType entityType)"
  nameWithType: "ServiceBusReactorAmqpConnection.getManagementNode(String entityPath, MessagingEntityType entityType)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode(String entityPath, MessagingEntityType entityType)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public Mono<ServiceBusManagementNode> getManagementNode(String entityPath, MessagingEntityType entityType)"
    parameters:
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusManagementNode>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ConnectionOptions"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ConnectionOptions"
    name: "ConnectionOptions"
    fullName: "com.azure.core.amqp.implementation.ConnectionOptions"
- uid: "com.azure.core.amqp.implementation.ReactorProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ReactorProvider"
    name: "ReactorProvider"
    fullName: "com.azure.core.amqp.implementation.ReactorProvider"
- uid: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
    name: "ReactorHandlerProvider"
    fullName: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
- uid: "com.azure.core.amqp.implementation.TokenManagerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.TokenManagerProvider"
    name: "TokenManagerProvider"
    fullName: "com.azure.core.amqp.implementation.TokenManagerProvider"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.MessageSerializer"
    name: "MessageSerializer"
    fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection*"
  name: "ServiceBusReactorAmqpConnection"
  nameWithType: "ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.ServiceBusReactorAmqpConnection"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
- uid: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusManagementNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
    name: "ServiceBusManagementNode"
    fullName: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode*"
  name: "getManagementNode"
  nameWithType: "ServiceBusReactorAmqpConnection.getManagementNode"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.getManagementNode"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.core.amqp.AmqpRetryOptions"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpRetryOptions"
    name: "AmqpRetryOptions"
    fullName: "com.azure.core.amqp.AmqpRetryOptions"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpSendLink"
    name: "AmqpSendLink"
    fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink*"
  name: "createSendLink"
  nameWithType: "ServiceBusReactorAmqpConnection.createSendLink"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSendLink"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.models.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.azure.messaging.servicebus.models.ReceiveMode"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink*"
  name: "createReceiveLink"
  nameWithType: "ServiceBusReactorAmqpConnection.createReceiveLink"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createReceiveLink"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose*"
  name: "dispose"
  nameWithType: "ServiceBusReactorAmqpConnection.dispose"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.dispose"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "org.apache.qpid.proton.engine.Session"
  spec.java:
  - uid: "org.apache.qpid.proton.engine.Session"
    name: "Session"
    fullName: "org.apache.qpid.proton.engine.Session"
- uid: "com.azure.core.amqp.implementation.handler.SessionHandler"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.handler.SessionHandler"
    name: "SessionHandler"
    fullName: "com.azure.core.amqp.implementation.handler.SessionHandler"
- uid: "com.azure.core.amqp.AmqpSession"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpSession"
    name: "AmqpSession"
    fullName: "com.azure.core.amqp.AmqpSession"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession*"
  name: "createSession"
  nameWithType: "ServiceBusReactorAmqpConnection.createSession"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReactorAmqpConnection.createSession"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorConnection"
  name: "ReactorConnection"
  nameWithType: "ReactorConnection"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  name: "ServiceBusAmqpConnection"
  nameWithType: "ServiceBusAmqpConnection"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String)"
  name: "ReactorConnection.createSession(String)"
  nameWithType: "ReactorConnection.createSession(String)"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getEndpointStates()"
  name: "ReactorConnection.getEndpointStates()"
  nameWithType: "ReactorConnection.getEndpointStates()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getEndpointStates()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getConnectionProperties()"
  name: "ReactorConnection.getConnectionProperties()"
  nameWithType: "ReactorConnection.getConnectionProperties()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getConnectionProperties()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.createRequestResponseChannel(java.lang.String,java.lang.String,java.lang.String)"
  name: "ReactorConnection.createRequestResponseChannel(String,String,String)"
  nameWithType: "ReactorConnection.createRequestResponseChannel(String,String,String)"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.createRequestResponseChannel(java.lang.String,java.lang.String,java.lang.String)"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getClaimsBasedSecurityNode()"
  name: "ReactorConnection.getClaimsBasedSecurityNode()"
  nameWithType: "ReactorConnection.getClaimsBasedSecurityNode()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getClaimsBasedSecurityNode()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getFullyQualifiedNamespace()"
  name: "ReactorConnection.getFullyQualifiedNamespace()"
  nameWithType: "ReactorConnection.getFullyQualifiedNamespace()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getFullyQualifiedNamespace()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getMaxFrameSize()"
  name: "ReactorConnection.getMaxFrameSize()"
  nameWithType: "ReactorConnection.getMaxFrameSize()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getMaxFrameSize()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getShutdownSignals()"
  name: "ReactorConnection.getShutdownSignals()"
  nameWithType: "ReactorConnection.getShutdownSignals()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getShutdownSignals()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
  name: "ReactorConnection.createSession(String,Session,SessionHandler)"
  nameWithType: "ReactorConnection.createSession(String,Session,SessionHandler)"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.createSession(java.lang.String,org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler)"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.isDisposed()"
  name: "ReactorConnection.isDisposed()"
  nameWithType: "ReactorConnection.isDisposed()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.isDisposed()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getReactorConnection()"
  name: "ReactorConnection.getReactorConnection()"
  nameWithType: "ReactorConnection.getReactorConnection()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getReactorConnection()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.dispose()"
  name: "ReactorConnection.dispose()"
  nameWithType: "ReactorConnection.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.getId()"
  name: "ReactorConnection.getId()"
  nameWithType: "ReactorConnection.getId()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.getId()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.removeSession(java.lang.String)"
  name: "ReactorConnection.removeSession(String)"
  nameWithType: "ReactorConnection.removeSession(String)"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.removeSession(java.lang.String)"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  name: "ServiceBusManagementNode"
  nameWithType: "ServiceBusManagementNode"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink"
  name: "AmqpSendLink"
  nameWithType: "AmqpSendLink"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
