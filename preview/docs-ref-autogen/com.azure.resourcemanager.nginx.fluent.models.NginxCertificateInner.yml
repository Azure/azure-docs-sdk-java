### YamlMime:JavaType
uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner"
fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner"
name: "NginxCertificateInner"
nameWithType: "NginxCertificateInner"
summary: "The Nginx<wbr>Certificate model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NginxCertificateInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.NginxCertificateInner()"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.NginxCertificateInner()"
  name: "NginxCertificateInner()"
  nameWithType: "NginxCertificateInner.NginxCertificateInner()"
  syntax: "public NginxCertificateInner()"
methods:
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.properties()"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.properties()"
  name: "properties()"
  nameWithType: "NginxCertificateInner.properties()"
  summary: "Get the properties property: The properties property."
  syntax: "public NginxCertificateProperties properties()"
  desc: "Get the properties property: The properties property."
  returns:
    description: "the properties value."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.NginxCertificateProperties?alt=com.azure.resourcemanager.nginx.models.NginxCertificateProperties&text=NginxCertificateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.systemData()"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.systemData()"
  name: "systemData()"
  nameWithType: "NginxCertificateInner.systemData()"
  summary: "Get the system<wbr>Data property: Metadata pertaining to creation and last modification of the resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Metadata pertaining to creation and last modification of the resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.validate()"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.validate()"
  name: "validate()"
  nameWithType: "NginxCertificateInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "NginxCertificateInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public NginxCertificateInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner?alt=com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner&text=NginxCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withProperties(com.azure.resourcemanager.nginx.models.NginxCertificateProperties)"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withProperties(NginxCertificateProperties properties)"
  name: "withProperties(NginxCertificateProperties properties)"
  nameWithType: "NginxCertificateInner.withProperties(NginxCertificateProperties properties)"
  summary: "Set the properties property: The properties property."
  parameters:
  - description: "the properties value to set."
    name: "properties"
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.NginxCertificateProperties?alt=com.azure.resourcemanager.nginx.models.NginxCertificateProperties&text=NginxCertificateProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NginxCertificateInner withProperties(NginxCertificateProperties properties)"
  desc: "Set the properties property: The properties property."
  returns:
    description: "the NginxCertificateInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner?alt=com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner&text=NginxCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "NginxCertificateInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public NginxCertificateInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner?alt=com.azure.resourcemanager.nginx.fluent.models.NginxCertificateInner&text=NginxCertificateInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The NginxCertificate model."
metadata: {}
package: "com.azure.resourcemanager.nginx.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-nginx:1.0.0-beta.1
