### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties"
name: "TopicProperties"
nameWithType: "TopicProperties"
summary: "Properties of the Topic."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TopicProperties"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.TopicProperties()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.TopicProperties()"
  name: "TopicProperties()"
  nameWithType: "TopicProperties.TopicProperties()"
  syntax: "public TopicProperties()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.dataResidencyBoundary()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.dataResidencyBoundary()"
  name: "dataResidencyBoundary()"
  nameWithType: "TopicProperties.dataResidencyBoundary()"
  summary: "Get the dataResidencyBoundary property: Data Residency Boundary of the resource."
  syntax: "public DataResidencyBoundary dataResidencyBoundary()"
  returns:
    description: "the dataResidencyBoundary value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary?alt=com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary&text=DataResidencyBoundary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "TopicProperties.disableLocalAuth()"
  summary: "Get the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic."
  syntax: "public Boolean disableLocalAuth()"
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.endpoint()"
  name: "endpoint()"
  nameWithType: "TopicProperties.endpoint()"
  summary: "Get the endpoint property: Endpoint for the topic."
  syntax: "public String endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "TopicProperties.inboundIpRules()"
  summary: "Get the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  syntax: "public List<InboundIpRule> inboundIpRules()"
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inputSchema()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inputSchema()"
  name: "inputSchema()"
  nameWithType: "TopicProperties.inputSchema()"
  summary: "Get the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  syntax: "public InputSchema inputSchema()"
  returns:
    description: "the inputSchema value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inputSchemaMapping()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.inputSchemaMapping()"
  name: "inputSchemaMapping()"
  nameWithType: "TopicProperties.inputSchemaMapping()"
  summary: "Get the inputSchemaMapping property: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
  syntax: "public InputSchemaMapping inputSchemaMapping()"
  returns:
    description: "the inputSchemaMapping value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.metricResourceId()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.metricResourceId()"
  name: "metricResourceId()"
  nameWithType: "TopicProperties.metricResourceId()"
  summary: "Get the metricResourceId property: Metric resource id for the topic."
  syntax: "public String metricResourceId()"
  returns:
    description: "the metricResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "TopicProperties.privateEndpointConnections()"
  summary: "Get the privateEndpointConnections property: The privateEndpointConnections property."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "TopicProperties.provisioningState()"
  summary: "Get the provisioningState property: Provisioning state of the topic."
  syntax: "public TopicProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicProvisioningState&text=TopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "TopicProperties.publicNetworkAccess()"
  summary: "Get the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.validate()"
  name: "validate()"
  nameWithType: "TopicProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withDataResidencyBoundary(com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  name: "withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  nameWithType: "TopicProperties.withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  summary: "Set the dataResidencyBoundary property: Data Residency Boundary of the resource."
  parameters:
  - description: "the dataResidencyBoundary value to set."
    name: "dataResidencyBoundary"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary?alt=com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary&text=DataResidencyBoundary\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withDisableLocalAuth(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withDisableLocalAuth(Boolean disableLocalAuth)"
  name: "withDisableLocalAuth(Boolean disableLocalAuth)"
  nameWithType: "TopicProperties.withDisableLocalAuth(Boolean disableLocalAuth)"
  summary: "Set the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic."
  parameters:
  - description: "the disableLocalAuth value to set."
    name: "disableLocalAuth"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties withDisableLocalAuth(Boolean disableLocalAuth)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInboundIpRules(java.util.List<com.azure.resourcemanager.eventgrid.models.InboundIpRule>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  name: "withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  nameWithType: "TopicProperties.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  summary: "Set the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  parameters:
  - description: "the inboundIpRules value to set."
    name: "inboundIpRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TopicProperties withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInputSchema(com.azure.resourcemanager.eventgrid.models.InputSchema)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInputSchema(InputSchema inputSchema)"
  name: "withInputSchema(InputSchema inputSchema)"
  nameWithType: "TopicProperties.withInputSchema(InputSchema inputSchema)"
  summary: "Set the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  parameters:
  - description: "the inputSchema value to set."
    name: "inputSchema"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties withInputSchema(InputSchema inputSchema)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInputSchemaMapping(com.azure.resourcemanager.eventgrid.models.InputSchemaMapping)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  name: "withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  nameWithType: "TopicProperties.withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  summary: "Set the inputSchemaMapping property: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
  parameters:
  - description: "the inputSchemaMapping value to set."
    name: "inputSchemaMapping"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withPublicNetworkAccess(com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "TopicProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  returns:
    description: "the TopicProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
