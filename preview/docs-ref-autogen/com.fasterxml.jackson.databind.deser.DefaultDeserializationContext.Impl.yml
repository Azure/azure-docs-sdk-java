### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  id: Impl
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy()
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  langs:
  - java
  name: DefaultDeserializationContext.Impl
  nameWithType: DefaultDeserializationContext.Impl
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: Actual full concrete implementation
  syntax:
    content: public static final class DefaultDeserializationContext.Impl extends DefaultDeserializationContext
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.DatabindContext
  - com.fasterxml.jackson.databind.DeserializationContext
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
  inheritedMembers:
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  - com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  - com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  - com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportTrailingTokens(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.DeserializationContext.<T>reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object)
  - com.fasterxml.jackson.databind.DeserializationContext._isCompatible(java.lang.Class<?>,java.lang.Object)
  - com.fasterxml.jackson.databind.DeserializationContext.canOverrideAccessModifiers()
  - com.fasterxml.jackson.databind.DeserializationContext.constructCalendar(java.util.Date)
  - com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.constructType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.endOfInputException(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.findClass(java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  - com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.getActiveView()
  - com.fasterxml.jackson.databind.DeserializationContext.getAnnotationIntrospector()
  - com.fasterxml.jackson.databind.DeserializationContext.getArrayBuilders()
  - com.fasterxml.jackson.databind.DeserializationContext.getAttribute(java.lang.Object)
  - com.fasterxml.jackson.databind.DeserializationContext.getBase64Variant()
  - com.fasterxml.jackson.databind.DeserializationContext.getConfig()
  - com.fasterxml.jackson.databind.DeserializationContext.getContextualType()
  - com.fasterxml.jackson.databind.DeserializationContext.getDateFormat()
  - com.fasterxml.jackson.databind.DeserializationContext.getDefaultPropertyFormat(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.getDeserializationFeatures()
  - com.fasterxml.jackson.databind.DeserializationContext.getFactory()
  - com.fasterxml.jackson.databind.DeserializationContext.getLocale()
  - com.fasterxml.jackson.databind.DeserializationContext.getNodeFactory()
  - com.fasterxml.jackson.databind.DeserializationContext.getParser()
  - com.fasterxml.jackson.databind.DeserializationContext.getTimeZone()
  - com.fasterxml.jackson.databind.DeserializationContext.getTypeFactory()
  - com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(java.lang.Class<?>,java.lang.Object,java.lang.Throwable)
  - com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(java.lang.Class<?>,java.lang.Number,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.hasDeserializationFeatures(int)
  - com.fasterxml.jackson.databind.DeserializationContext.hasSomeOfFeatures(int)
  - com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
  - com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.Throwable)
  - com.fasterxml.jackson.databind.DeserializationContext.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.DeserializationContext.leaseObjectBuffer()
  - com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.parseDate(java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.readTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.reportMissingContent(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DeserializationContext.returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
  - com.fasterxml.jackson.databind.DeserializationContext.setAttribute(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.DeserializationContext.unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(java.lang.Class<?>,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(java.lang.Object,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DeserializationContext.weirdNumberException(java.lang.Number,java.lang.Class<?>,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(java.lang.String,java.lang.Class<?>,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  - com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.checkUnresolvedObjectId()
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.copy()
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.annotation.ObjectIdResolver)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
  - com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl)
  id: Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: Impl(DefaultDeserializationContext.Impl src)
  nameWithType: DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Impl(DefaultDeserializationContext.Impl src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  id: Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: Impl(DefaultDeserializationContext.Impl src, DeserializationConfig config, JsonParser jp, InjectableValues values)
  nameWithType: DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src, DeserializationConfig config, JsonParser jp, InjectableValues values)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src, DeserializationConfig config, JsonParser jp, InjectableValues values)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Impl(DefaultDeserializationContext.Impl src, DeserializationConfig config, JsonParser jp, InjectableValues values)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: values
      type: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory)
  id: Impl(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: Impl(DefaultDeserializationContext.Impl src, DeserializerFactory factory)
  nameWithType: DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src, DeserializerFactory factory)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(DefaultDeserializationContext.Impl src, DeserializerFactory factory)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected Impl(DefaultDeserializationContext.Impl src, DeserializerFactory factory)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  id: Impl(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: Impl(DeserializerFactory df)
  nameWithType: DefaultDeserializationContext.Impl.Impl(DeserializerFactory df)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl(DeserializerFactory df)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  summary: Default constructor for a blueprint object, which will use the standard <xref uid="com.fasterxml.jackson.databind.deser.DeserializerCache" data-throw-if-not-resolved="false">DeserializerCache</xref>, given factory.
  syntax:
    content: public Impl(DeserializerFactory df)
    parameters:
    - id: df
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy()
  id: copy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: copy()
  nameWithType: DefaultDeserializationContext.Impl.copy()
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy()
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method needed to ensure that <xref uid="com.fasterxml.jackson.databind.ObjectMapper.copy*" data-throw-if-not-resolved="false">ObjectMapper#copy</xref> will work properly; specifically, that caches are cleared, but settings will otherwise remain identical; and that no sharing of state occurs.
  syntax:
    content: public DefaultDeserializationContext copy()
    return:
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  id: createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: createInstance(DeserializationConfig config, JsonParser p, InjectableValues values)
  nameWithType: DefaultDeserializationContext.Impl.createInstance(DeserializationConfig config, JsonParser p, InjectableValues values)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance(DeserializationConfig config, JsonParser p, InjectableValues values)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to create actual usable per-deserialization context instance.
  syntax:
    content: public DefaultDeserializationContext createInstance(DeserializationConfig config, JsonParser p, InjectableValues values)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: values
      type: com.fasterxml.jackson.databind.InjectableValues
    return:
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  id: with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl
  langs:
  - java
  name: with(DeserializerFactory factory)
  nameWithType: DefaultDeserializationContext.Impl.with(DeserializerFactory factory)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with(DeserializerFactory factory)
  overload: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Fluent factory method used for constructing a blueprint instance with different factory
  syntax:
    content: public DefaultDeserializationContext with(DeserializerFactory factory)
    parameters:
    - id: factory
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
    return:
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
references:
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory
  name: DeserializerFactory
  nameWithType: DeserializerFactory
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl*
  name: Impl
  nameWithType: DefaultDeserializationContext.Impl.Impl
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.Impl
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.InjectableValues
  name: InjectableValues
  nameWithType: InjectableValues
  fullName: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
  name: DefaultDeserializationContext
  nameWithType: DefaultDeserializationContext
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy*
  name: copy
  nameWithType: DefaultDeserializationContext.Impl.copy
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.copy
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance*
  name: createInstance
  nameWithType: DefaultDeserializationContext.Impl.createInstance
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.createInstance
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with*
  name: with
  nameWithType: DefaultDeserializationContext.Impl.with
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl.with
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.checkUnresolvedObjectId()
  name: DefaultDeserializationContext.checkUnresolvedObjectId()
  nameWithType: DefaultDeserializationContext.checkUnresolvedObjectId()
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.checkUnresolvedObjectId()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportPropertyInputMismatch(Class<?>,String,String,Object)
  nameWithType: DeserializationContext.<T>reportPropertyInputMismatch(Class<?>,String,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)
  name: DatabindContext._desc(String)
  nameWithType: DatabindContext._desc(String)
  fullName: com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  name: DatabindContext.objectIdResolverInstance(Annotated,ObjectIdInfo)
  nameWithType: DatabindContext.objectIdResolverInstance(Annotated,ObjectIdInfo)
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
- uid: com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  name: DeserializationContext.constructSpecializedType(JavaType,Class<?>)
  nameWithType: DeserializationContext.constructSpecializedType(JavaType,Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)
  name: DatabindContext.constructType(Type)
  nameWithType: DatabindContext.constructType(Type)
  fullName: com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.DeserializationContext.returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
  name: DeserializationContext.returnObjectBuffer(ObjectBuffer)
  nameWithType: DeserializationContext.returnObjectBuffer(ObjectBuffer)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: DatabindContext.resolveAndValidateSubType(JavaType,String,PolymorphicTypeValidator)
  nameWithType: DatabindContext.resolveAndValidateSubType(JavaType,String,PolymorphicTypeValidator)
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: com.fasterxml.jackson.databind.DeserializationContext.canOverrideAccessModifiers()
  name: DeserializationContext.canOverrideAccessModifiers()
  nameWithType: DeserializationContext.canOverrideAccessModifiers()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.canOverrideAccessModifiers()
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportWrongTokenException(Class<?>,JsonToken,String,Object)
  nameWithType: DeserializationContext.reportWrongTokenException(Class<?>,JsonToken,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportWrongTokenException(JsonDeserializer<?>,JsonToken,String,Object)
  nameWithType: DeserializationContext.reportWrongTokenException(JsonDeserializer<?>,JsonToken,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext._isCompatible(java.lang.Class<?>,java.lang.Object)
  name: DeserializationContext._isCompatible(Class<?>,Object)
  nameWithType: DeserializationContext._isCompatible(Class<?>,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext._isCompatible(java.lang.Class<?>,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)
  name: DatabindContext._colonConcat(String,String)
  nameWithType: DatabindContext._colonConcat(String,String)
  fullName: com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  name: DeserializationContext.invalidTypeIdException(JavaType,String,String)
  nameWithType: DeserializationContext.invalidTypeIdException(JavaType,String,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getAnnotationIntrospector()
  name: DeserializationContext.getAnnotationIntrospector()
  nameWithType: DeserializationContext.getAnnotationIntrospector()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getAnnotationIntrospector()
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
  name: DatabindContext.<T>reportBadDefinition(Class<?>,String)
  nameWithType: DatabindContext.<T>reportBadDefinition(Class<?>,String)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  name: DatabindContext.objectIdGeneratorInstance(Annotated,ObjectIdInfo)
  nameWithType: DatabindContext.objectIdGeneratorInstance(Annotated,ObjectIdInfo)
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(java.lang.Class<?>,java.lang.String,java.lang.String)
  name: DeserializationContext.weirdKeyException(Class<?>,String,String)
  nameWithType: DeserializationContext.weirdKeyException(Class<?>,String,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(java.lang.Class<?>,java.lang.String,java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
  name: DefaultDeserializationContext.createInstance(DeserializationConfig,JsonParser,InjectableValues)
  nameWithType: DefaultDeserializationContext.createInstance(DeserializationConfig,JsonParser,InjectableValues)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.String)
  name: DeserializationContext.instantiationException(Class<?>,String)
  nameWithType: DeserializationContext.instantiationException(Class<?>,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(java.lang.String,java.lang.Class<?>,java.lang.String)
  name: DeserializationContext.weirdStringException(String,Class<?>,String)
  nameWithType: DeserializationContext.weirdStringException(String,Class<?>,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(java.lang.String,java.lang.Class<?>,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleMissingInstantiator(Class<?>,ValueInstantiator,JsonParser,String,Object)
  nameWithType: DeserializationContext.handleMissingInstantiator(Class<?>,ValueInstantiator,JsonParser,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportInputMismatch(JavaType,String,Object)
  nameWithType: DeserializationContext.<T>reportInputMismatch(JavaType,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  name: DeserializationContext.findContextualValueDeserializer(JavaType,BeanProperty)
  nameWithType: DeserializationContext.findContextualValueDeserializer(JavaType,BeanProperty)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  name: DeserializationContext.wrongTokenException(JsonParser,Class<?>,JsonToken,String)
  nameWithType: DeserializationContext.wrongTokenException(JsonParser,Class<?>,JsonToken,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  name: DeserializationContext.mappingException(Class<?>,JsonToken)
  nameWithType: DeserializationContext.mappingException(Class<?>,JsonToken)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportInputMismatch(JsonDeserializer<?>,String,Object)
  nameWithType: DeserializationContext.<T>reportInputMismatch(JsonDeserializer<?>,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(java.lang.Class<?>,java.lang.Object,java.lang.Throwable)
  name: DeserializationContext.handleInstantiationProblem(Class<?>,Object,Throwable)
  nameWithType: DeserializationContext.handleInstantiationProblem(Class<?>,Object,Throwable)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(java.lang.Class<?>,java.lang.Object,java.lang.Throwable)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getFactory()
  name: DeserializationContext.getFactory()
  nameWithType: DeserializationContext.getFactory()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getFactory()
- uid: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.Throwable)
  name: DeserializationContext.instantiationException(Class<?>,Throwable)
  nameWithType: DeserializationContext.instantiationException(Class<?>,Throwable)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.Throwable)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleUnexpectedToken(JavaType,JsonToken,JsonParser,String,Object)
  nameWithType: DeserializationContext.handleUnexpectedToken(JavaType,JsonToken,JsonParser,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportMissingContent(java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportMissingContent(String,Object)
  nameWithType: DeserializationContext.reportMissingContent(String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportMissingContent(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
  name: DefaultDeserializationContext.with(DeserializerFactory)
  nameWithType: DefaultDeserializationContext.with(DeserializerFactory)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.with(com.fasterxml.jackson.databind.deser.DeserializerFactory)
- uid: com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  name: DeserializationContext.findInjectableValue(Object,BeanProperty,Object)
  nameWithType: DeserializationContext.findInjectableValue(Object,BeanProperty,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object)
  name: DeserializationContext.<T>reportUnresolvedObjectId(ObjectIdReader,Object)
  nameWithType: DeserializationContext.<T>reportUnresolvedObjectId(ObjectIdReader,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(java.lang.Class<?>,java.lang.Number,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleWeirdNumberValue(Class<?>,Number,String,Object)
  nameWithType: DeserializationContext.handleWeirdNumberValue(Class<?>,Number,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(java.lang.Class<?>,java.lang.Number,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: DatabindContext.<T>_throwNotASubtype(JavaType,String)
  nameWithType: DatabindContext.<T>_throwNotASubtype(JavaType,String)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)
  name: DeserializationContext.handleWeirdNativeValue(JavaType,Object,JsonParser)
  nameWithType: DeserializationContext.handleWeirdNativeValue(JavaType,Object,JsonParser)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.copy()
  name: DefaultDeserializationContext.copy()
  nameWithType: DefaultDeserializationContext.copy()
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.copy()
- uid: com.fasterxml.jackson.databind.DeserializationContext.hasSomeOfFeatures(int)
  name: DeserializationContext.hasSomeOfFeatures(int)
  nameWithType: DeserializationContext.hasSomeOfFeatures(int)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.hasSomeOfFeatures(int)
- uid: com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.findNonContextualValueDeserializer(JavaType)
  nameWithType: DeserializationContext.findNonContextualValueDeserializer(JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: DatabindContext.<T>_throwSubtypeClassNotAllowed(JavaType,String,PolymorphicTypeValidator)
  nameWithType: DatabindContext.<T>_throwSubtypeClassNotAllowed(JavaType,String,PolymorphicTypeValidator)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  name: DefaultDeserializationContext.keyDeserializerInstance(Annotated,Object)
  nameWithType: DefaultDeserializationContext.keyDeserializerInstance(Annotated,Object)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportMappingException(String,Object)
  nameWithType: DeserializationContext.reportMappingException(String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportInputMismatch(Class<?>,String,Object)
  nameWithType: DeserializationContext.<T>reportInputMismatch(Class<?>,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(java.lang.Class<?>,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.<T>readValue(JsonParser,JavaType)
  nameWithType: DeserializationContext.<T>readValue(JsonParser,JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: DeserializationContext.reportUnknownProperty(Object,String,JsonDeserializer<?>)
  nameWithType: DeserializationContext.reportUnknownProperty(Object,String,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.readTree(com.fasterxml.jackson.core.JsonParser)
  name: DeserializationContext.readTree(JsonParser)
  nameWithType: DeserializationContext.readTree(JsonParser)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.readTree(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: DeserializationContext.<T>reportBadDefinition(JavaType,String)
  nameWithType: DeserializationContext.<T>reportBadDefinition(JavaType,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getBase64Variant()
  name: DeserializationContext.getBase64Variant()
  nameWithType: DeserializationContext.getBase64Variant()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getBase64Variant()
- uid: com.fasterxml.jackson.databind.DeserializationContext.getNodeFactory()
  name: DeserializationContext.getNodeFactory()
  nameWithType: DeserializationContext.getNodeFactory()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getNodeFactory()
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  name: DefaultDeserializationContext.createReadableObjectId(ObjectIdGenerator.IdKey)
  nameWithType: DefaultDeserializationContext.createReadableObjectId(ObjectIdGenerator.IdKey)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleUnexpectedToken(Class<?>,JsonToken,JsonParser,String,Object)
  nameWithType: DeserializationContext.handleUnexpectedToken(Class<?>,JsonToken,JsonParser,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)
  name: DatabindContext._quotedString(String)
  nameWithType: DatabindContext._quotedString(String)
  fullName: com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
  name: DeserializationContext.handleUnknownTypeId(JavaType,String,TypeIdResolver,String)
  nameWithType: DeserializationContext.handleUnknownTypeId(JavaType,String,TypeIdResolver,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getArrayBuilders()
  name: DeserializationContext.getArrayBuilders()
  nameWithType: DeserializationContext.getArrayBuilders()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getArrayBuilders()
- uid: com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.findRootValueDeserializer(JavaType)
  nameWithType: DeserializationContext.findRootValueDeserializer(JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(java.lang.Object,java.lang.Class<?>)
  name: DeserializationContext.weirdNativeValueException(Object,Class<?>)
  nameWithType: DeserializationContext.weirdNativeValueException(Object,Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(java.lang.Object,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getAttribute(java.lang.Object)
  name: DeserializationContext.getAttribute(Object)
  nameWithType: DeserializationContext.getAttribute(Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getAttribute(java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getParser()
  name: DeserializationContext.getParser()
  nameWithType: DeserializationContext.getParser()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getParser()
- uid: com.fasterxml.jackson.databind.DeserializationContext.unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  name: DeserializationContext.unknownTypeException(JavaType,String,String)
  nameWithType: DeserializationContext.unknownTypeException(JavaType,String,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getLocale()
  name: DeserializationContext.getLocale()
  nameWithType: DeserializationContext.getLocale()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getLocale()
- uid: com.fasterxml.jackson.databind.DeserializationContext.hasDeserializationFeatures(int)
  name: DeserializationContext.hasDeserializationFeatures(int)
  nameWithType: DeserializationContext.hasDeserializationFeatures(int)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.hasDeserializationFeatures(int)
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: DatabindContext.<T>_throwSubtypeNameNotAllowed(JavaType,String,PolymorphicTypeValidator)
  nameWithType: DatabindContext.<T>_throwSubtypeNameNotAllowed(JavaType,String,PolymorphicTypeValidator)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: com.fasterxml.jackson.databind.DeserializationContext.findClass(java.lang.String)
  name: DeserializationContext.findClass(String)
  nameWithType: DeserializationContext.findClass(String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findClass(java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getConfig()
  name: DeserializationContext.getConfig()
  nameWithType: DeserializationContext.getConfig()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getConfig()
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.<T>readPropertyValue(JsonParser,BeanProperty,JavaType)
  nameWithType: DeserializationContext.<T>readPropertyValue(JsonParser,BeanProperty,JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.DeserializationContext.getTimeZone()
  name: DeserializationContext.getTimeZone()
  nameWithType: DeserializationContext.getTimeZone()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getTimeZone()
- uid: com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)
  name: DatabindContext._format(String,Object)
  nameWithType: DatabindContext._format(String,Object)
  fullName: com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<T>)
  name: DeserializationContext.<T>readPropertyValue(JsonParser,BeanProperty,Class<T>)
  nameWithType: DeserializationContext.<T>readPropertyValue(JsonParser,BeanProperty,Class<T>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<T>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.constructType(java.lang.Class<?>)
  name: DeserializationContext.constructType(Class<?>)
  nameWithType: DeserializationContext.constructType(Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.constructType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
  name: DefaultDeserializationContext.tryToResolveUnresolvedObjectId(ReadableObjectId)
  nameWithType: DefaultDeserializationContext.tryToResolveUnresolvedObjectId(ReadableObjectId)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportTrailingTokens(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
  name: DeserializationContext.<T>reportTrailingTokens(Class<?>,JsonParser,JsonToken)
  nameWithType: DeserializationContext.<T>reportTrailingTokens(Class<?>,JsonParser,JsonToken)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportTrailingTokens(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdNumberException(java.lang.Number,java.lang.Class<?>,java.lang.String)
  name: DeserializationContext.weirdNumberException(Number,Class<?>,String)
  nameWithType: DeserializationContext.weirdNumberException(Number,Class<?>,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdNumberException(java.lang.Number,java.lang.Class<?>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: DatabindContext.resolveSubType(JavaType,String)
  nameWithType: DatabindContext.resolveSubType(JavaType,String)
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
  name: DeserializationContext.handleMissingTypeId(JavaType,TypeIdResolver,String)
  nameWithType: DeserializationContext.handleMissingTypeId(JavaType,TypeIdResolver,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>)
  name: DeserializationContext.mappingException(Class<?>)
  nameWithType: DeserializationContext.mappingException(Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportInputMismatch(BeanProperty,String,Object)
  nameWithType: DeserializationContext.<T>reportInputMismatch(BeanProperty,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getDeserializationFeatures()
  name: DeserializationContext.getDeserializationFeatures()
  nameWithType: DeserializationContext.getDeserializationFeatures()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getDeserializationFeatures()
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportBadPropertyDefinition(BeanDescription,BeanPropertyDefinition,String,Object)
  nameWithType: DeserializationContext.<T>reportBadPropertyDefinition(BeanDescription,BeanPropertyDefinition,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
  name: DeserializationContext.hasValueDeserializerFor(JavaType,AtomicReference<Throwable>)
  nameWithType: DeserializationContext.hasValueDeserializerFor(JavaType,AtomicReference<Throwable>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.annotation.ObjectIdResolver)
  name: DefaultDeserializationContext.findObjectId(Object,ObjectIdGenerator<?>,ObjectIdResolver)
  nameWithType: DefaultDeserializationContext.findObjectId(Object,ObjectIdGenerator<?>,ObjectIdResolver)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.annotation.ObjectIdResolver)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String,java.lang.Object...)
  name: DeserializationContext.mappingException(String,Object)
  nameWithType: DeserializationContext.mappingException(String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: DeserializationContext.<T>reportBadMerge(JsonDeserializer<?>)
  nameWithType: DeserializationContext.<T>reportBadMerge(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser)
  name: DeserializationContext.handleUnexpectedToken(Class<?>,JsonParser)
  nameWithType: DeserializationContext.handleUnexpectedToken(Class<?>,JsonParser)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: DeserializationContext.handleBadMerge(JsonDeserializer<?>)
  nameWithType: DeserializationContext.handleBadMerge(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportWrongTokenException(JavaType,JsonToken,String,Object)
  nameWithType: DeserializationContext.reportWrongTokenException(JavaType,JsonToken,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getActiveView()
  name: DeserializationContext.getActiveView()
  nameWithType: DeserializationContext.getActiveView()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getActiveView()
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  name: DefaultDeserializationContext.deserializerInstance(Annotated,Object)
  nameWithType: DefaultDeserializationContext.deserializerInstance(Annotated,Object)
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String)
  name: DeserializationContext.mappingException(String)
  nameWithType: DeserializationContext.mappingException(String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)
  name: DeserializationContext.handleUnexpectedToken(JavaType,JsonParser)
  nameWithType: DeserializationContext.handleUnexpectedToken(JavaType,JsonParser)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  name: DeserializationContext.isEnabled(DeserializationFeature)
  nameWithType: DeserializationContext.isEnabled(DeserializationFeature)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
- uid: com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  name: DeserializationContext.findKeyDeserializer(JavaType,BeanProperty)
  nameWithType: DeserializationContext.findKeyDeserializer(JavaType,BeanProperty)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getContextualType()
  name: DeserializationContext.getContextualType()
  nameWithType: DeserializationContext.getContextualType()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getContextualType()
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  name: DeserializationContext.<T>readValue(JsonParser,Class<T>)
  nameWithType: DeserializationContext.<T>readValue(JsonParser,Class<T>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  name: DeserializationContext.wrongTokenException(JsonParser,JavaType,JsonToken,String)
  nameWithType: DeserializationContext.wrongTokenException(JsonParser,JavaType,JsonToken,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.endOfInputException(java.lang.Class<?>)
  name: DeserializationContext.endOfInputException(Class<?>)
  nameWithType: DeserializationContext.endOfInputException(Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.endOfInputException(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)
  name: DatabindContext._truncate(String)
  nameWithType: DatabindContext._truncate(String)
  fullName: com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getTypeFactory()
  name: DeserializationContext.getTypeFactory()
  nameWithType: DeserializationContext.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getTypeFactory()
- uid: com.fasterxml.jackson.databind.DeserializationContext.getDateFormat()
  name: DeserializationContext.getDateFormat()
  nameWithType: DeserializationContext.getDateFormat()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getDateFormat()
- uid: com.fasterxml.jackson.databind.DeserializationContext.leaseObjectBuffer()
  name: DeserializationContext.leaseObjectBuffer()
  nameWithType: DeserializationContext.leaseObjectBuffer()
  fullName: com.fasterxml.jackson.databind.DeserializationContext.leaseObjectBuffer()
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  name: DeserializationContext.reportWrongTokenException(JsonParser,JsonToken,String,Object)
  nameWithType: DeserializationContext.reportWrongTokenException(JsonParser,JsonToken,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  name: DeserializationContext.isEnabled(MapperFeature)
  nameWithType: DeserializationContext.isEnabled(MapperFeature)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.DeserializationContext.parseDate(java.lang.String)
  name: DeserializationContext.parseDate(String)
  nameWithType: DeserializationContext.parseDate(String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.parseDate(java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.handlePrimaryContextualization(JsonDeserializer<?>,BeanProperty,JavaType)
  nameWithType: DeserializationContext.handlePrimaryContextualization(JsonDeserializer<?>,BeanProperty,JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportPropertyInputMismatch(JavaType,String,String,Object)
  nameWithType: DeserializationContext.<T>reportPropertyInputMismatch(JavaType,String,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.Object,java.lang.String)
  name: DeserializationContext.handleUnknownProperty(JsonParser,JsonDeserializer<?>,Object,String)
  nameWithType: DeserializationContext.handleUnknownProperty(JsonParser,JsonDeserializer<?>,Object,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getDefaultPropertyFormat(java.lang.Class<?>)
  name: DeserializationContext.getDefaultPropertyFormat(Class<?>)
  nameWithType: DeserializationContext.getDefaultPropertyFormat(Class<?>)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getDefaultPropertyFormat(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.constructCalendar(java.util.Date)
  name: DeserializationContext.constructCalendar(Date)
  nameWithType: DeserializationContext.constructCalendar(Date)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.constructCalendar(java.util.Date)
- uid: com.fasterxml.jackson.databind.DeserializationContext.missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: DeserializationContext.missingTypeIdException(JavaType,String)
  nameWithType: DeserializationContext.missingTypeIdException(JavaType,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleWeirdKey(Class<?>,String,String,Object)
  nameWithType: DeserializationContext.handleWeirdKey(Class<?>,String,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  name: DeserializationContext.handleSecondaryContextualization(JsonDeserializer<?>,BeanProperty,JavaType)
  nameWithType: DeserializationContext.handleSecondaryContextualization(JsonDeserializer<?>,BeanProperty,JavaType)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
  name: DeserializationContext.handleWeirdStringValue(Class<?>,String,String,Object)
  nameWithType: DeserializationContext.handleWeirdStringValue(Class<?>,String,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  name: DeserializationContext.wrongTokenException(JsonParser,JsonToken,String)
  nameWithType: DeserializationContext.wrongTokenException(JsonParser,JsonToken,String)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)
  name: DeserializationContext.<T>reportBadTypeDefinition(BeanDescription,String,Object)
  nameWithType: DeserializationContext.<T>reportBadTypeDefinition(BeanDescription,String,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.<T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  name: DatabindContext.converterInstance(Annotated,Object)
  nameWithType: DatabindContext.converterInstance(Annotated,Object)
  fullName: com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.setAttribute(java.lang.Object,java.lang.Object)
  name: DeserializationContext.setAttribute(Object,Object)
  nameWithType: DeserializationContext.setAttribute(Object,Object)
  fullName: com.fasterxml.jackson.databind.DeserializationContext.setAttribute(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext.
  name: DeserializationContext.
  nameWithType: DeserializationContext.
  fullName: com.fasterxml.jackson.databind.DeserializationContext.
- uid: ?>,java.lang.String,java.lang.String,java.lang.Object...)
  name: ?>,String,String,Object)
  nameWithType: ?>,String,String,Object)
  fullName: ?>,java.lang.String,java.lang.String,java.lang.Object...)
- uid: T>reportPropertyInputMismatch(java.lang.Class
  name: T>reportPropertyInputMismatch(Class
  nameWithType: T>reportPropertyInputMismatch(Class
  fullName: T>reportPropertyInputMismatch(java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class
  name: DeserializationContext.constructSpecializedType(JavaType,Class
  nameWithType: DeserializationContext.constructSpecializedType(JavaType,Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: ?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
  name: ?>,JsonToken,String,Object)
  nameWithType: ?>,JsonToken,String,Object)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class
  name: DeserializationContext.reportWrongTokenException(Class
  nameWithType: DeserializationContext.reportWrongTokenException(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.reportWrongTokenException(JsonDeserializer
  nameWithType: DeserializationContext.reportWrongTokenException(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,java.lang.Object)
  name: ?>,Object)
  nameWithType: ?>,Object)
  fullName: ?>,java.lang.Object)
- uid: com.fasterxml.jackson.databind.DeserializationContext._isCompatible(java.lang.Class
  name: DeserializationContext._isCompatible(Class
  nameWithType: DeserializationContext._isCompatible(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext._isCompatible(java.lang.Class
- uid: ?>,java.lang.String)
  name: ?>,String)
  nameWithType: ?>,String)
  fullName: ?>,java.lang.String)
- uid: T>reportBadDefinition(java.lang.Class
  name: T>reportBadDefinition(Class
  nameWithType: T>reportBadDefinition(Class
  fullName: T>reportBadDefinition(java.lang.Class
- uid: com.fasterxml.jackson.databind.DatabindContext.
  name: DatabindContext.
  nameWithType: DatabindContext.
  fullName: com.fasterxml.jackson.databind.DatabindContext.
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(java.lang.Class
  name: DeserializationContext.weirdKeyException(Class
  nameWithType: DeserializationContext.weirdKeyException(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(java.lang.Class
- uid: ?>,java.lang.String,java.lang.String)
  name: ?>,String,String)
  nameWithType: ?>,String,String)
  fullName: ?>,java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class
  name: DeserializationContext.instantiationException(Class
  nameWithType: DeserializationContext.instantiationException(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(java.lang.String,java.lang.Class
  name: DeserializationContext.weirdStringException(String,Class
  nameWithType: DeserializationContext.weirdStringException(String,Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(java.lang.String,java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  name: ?>,ValueInstantiator,JsonParser,String,Object)
  nameWithType: ?>,ValueInstantiator,JsonParser,String,Object)
  fullName: ?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(java.lang.Class
  name: DeserializationContext.handleMissingInstantiator(Class
  nameWithType: DeserializationContext.handleMissingInstantiator(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(java.lang.Class
- uid: T>reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object...)
  name: T>reportInputMismatch(JavaType,String,Object)
  nameWithType: T>reportInputMismatch(JavaType,String,Object)
  fullName: T>reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object...)
- uid: ?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  name: ?>,JsonToken,String)
  nameWithType: ?>,JsonToken,String)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: DeserializationContext.wrongTokenException(JsonParser,Class
  nameWithType: DeserializationContext.wrongTokenException(JsonParser,Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class
  name: DeserializationContext.mappingException(Class
  nameWithType: DeserializationContext.mappingException(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.mappingException(java.lang.Class
- uid: ?>,com.fasterxml.jackson.core.JsonToken)
  name: ?>,JsonToken)
  nameWithType: ?>,JsonToken)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken)
- uid: ?>,java.lang.String,java.lang.Object...)
  name: ?>,String,Object)
  nameWithType: ?>,String,Object)
  fullName: ?>,java.lang.String,java.lang.Object...)
- uid: T>reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer
  name: T>reportInputMismatch(JsonDeserializer
  nameWithType: T>reportInputMismatch(JsonDeserializer
  fullName: T>reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,java.lang.Object,java.lang.Throwable)
  name: ?>,Object,Throwable)
  nameWithType: ?>,Object,Throwable)
  fullName: ?>,java.lang.Object,java.lang.Throwable)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(java.lang.Class
  name: DeserializationContext.handleInstantiationProblem(Class
  nameWithType: DeserializationContext.handleInstantiationProblem(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(java.lang.Class
- uid: ?>,java.lang.Throwable)
  name: ?>,Throwable)
  nameWithType: ?>,Throwable)
  fullName: ?>,java.lang.Throwable)
- uid: T>reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object)
  name: T>reportUnresolvedObjectId(ObjectIdReader,Object)
  nameWithType: T>reportUnresolvedObjectId(ObjectIdReader,Object)
  fullName: T>reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object)
- uid: ?>,java.lang.Number,java.lang.String,java.lang.Object...)
  name: ?>,Number,String,Object)
  nameWithType: ?>,Number,String,Object)
  fullName: ?>,java.lang.Number,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(java.lang.Class
  name: DeserializationContext.handleWeirdNumberValue(Class
  nameWithType: DeserializationContext.handleWeirdNumberValue(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(java.lang.Class
- uid: T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: T>_throwNotASubtype(JavaType,String)
  nameWithType: T>_throwNotASubtype(JavaType,String)
  fullName: T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: T>_throwSubtypeClassNotAllowed(JavaType,String,PolymorphicTypeValidator)
  nameWithType: T>_throwSubtypeClassNotAllowed(JavaType,String,PolymorphicTypeValidator)
  fullName: T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: T>reportInputMismatch(java.lang.Class
  name: T>reportInputMismatch(Class
  nameWithType: T>reportInputMismatch(Class
  fullName: T>reportInputMismatch(java.lang.Class
- uid: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  name: T>readValue(JsonParser,JavaType)
  nameWithType: T>readValue(JsonParser,JavaType)
  fullName: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.reportUnknownProperty(Object,String,JsonDeserializer
  nameWithType: DeserializationContext.reportUnknownProperty(Object,String,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer
- uid: T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: T>reportBadDefinition(JavaType,String)
  nameWithType: T>reportBadDefinition(JavaType,String)
  fullName: T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class
  name: DeserializationContext.handleUnexpectedToken(Class
  nameWithType: DeserializationContext.handleUnexpectedToken(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(java.lang.Class
- uid: ?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
  name: ?>,JsonToken,JsonParser,String,Object)
  nameWithType: ?>,JsonToken,JsonParser,String,Object)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(java.lang.Object,java.lang.Class
  name: DeserializationContext.weirdNativeValueException(Object,Class
  nameWithType: DeserializationContext.weirdNativeValueException(Object,Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(java.lang.Object,java.lang.Class
- uid: T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: T>_throwSubtypeNameNotAllowed(JavaType,String,PolymorphicTypeValidator)
  nameWithType: T>_throwSubtypeNameNotAllowed(JavaType,String,PolymorphicTypeValidator)
  fullName: T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  name: T>readPropertyValue(JsonParser,BeanProperty,JavaType)
  nameWithType: T>readPropertyValue(JsonParser,BeanProperty,JavaType)
  fullName: T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
- uid: T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: T>readPropertyValue(JsonParser,BeanProperty,Class
  nameWithType: T>readPropertyValue(JsonParser,BeanProperty,Class
  fullName: T>readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: com.fasterxml.jackson.databind.DeserializationContext.constructType(java.lang.Class
  name: DeserializationContext.constructType(Class
  nameWithType: DeserializationContext.constructType(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.constructType(java.lang.Class
- uid: T>reportTrailingTokens(java.lang.Class
  name: T>reportTrailingTokens(Class
  nameWithType: T>reportTrailingTokens(Class
  fullName: T>reportTrailingTokens(java.lang.Class
- uid: ?>,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
  name: ?>,JsonParser,JsonToken)
  nameWithType: ?>,JsonParser,JsonToken)
  fullName: ?>,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.DeserializationContext.weirdNumberException(java.lang.Number,java.lang.Class
  name: DeserializationContext.weirdNumberException(Number,Class
  nameWithType: DeserializationContext.weirdNumberException(Number,Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.weirdNumberException(java.lang.Number,java.lang.Class
- uid: T>reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object...)
  name: T>reportInputMismatch(BeanProperty,String,Object)
  nameWithType: T>reportInputMismatch(BeanProperty,String,Object)
  fullName: T>reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object...)
- uid: T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)
  name: T>reportBadPropertyDefinition(BeanDescription,BeanPropertyDefinition,String,Object)
  nameWithType: T>reportBadPropertyDefinition(BeanDescription,BeanPropertyDefinition,String,Object)
  fullName: T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference
  name: DeserializationContext.hasValueDeserializerFor(JavaType,AtomicReference
  nameWithType: DeserializationContext.hasValueDeserializerFor(JavaType,AtomicReference
  fullName: com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference
- uid: java.lang.Throwable>)
  name: Throwable>)
  nameWithType: Throwable>)
  fullName: java.lang.Throwable>)
- uid: ?>,com.fasterxml.jackson.annotation.ObjectIdResolver)
  name: ?>,ObjectIdResolver)
  nameWithType: ?>,ObjectIdResolver)
  fullName: ?>,com.fasterxml.jackson.annotation.ObjectIdResolver)
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: DefaultDeserializationContext.findObjectId(Object,ObjectIdGenerator
  nameWithType: DefaultDeserializationContext.findObjectId(Object,ObjectIdGenerator
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: T>reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer
  name: T>reportBadMerge(JsonDeserializer
  nameWithType: T>reportBadMerge(JsonDeserializer
  fullName: T>reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,com.fasterxml.jackson.core.JsonParser)
  name: ?>,JsonParser)
  nameWithType: ?>,JsonParser)
  fullName: ?>,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.handleBadMerge(JsonDeserializer
  nameWithType: DeserializationContext.handleBadMerge(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer
- uid: T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: T>readValue(JsonParser,Class
  nameWithType: T>readValue(JsonParser,Class
  fullName: T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.endOfInputException(java.lang.Class
  name: DeserializationContext.endOfInputException(Class
  nameWithType: DeserializationContext.endOfInputException(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.endOfInputException(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
  name: ?>,BeanProperty,JavaType)
  nameWithType: ?>,BeanProperty,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.handlePrimaryContextualization(JsonDeserializer
  nameWithType: DeserializationContext.handlePrimaryContextualization(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer
- uid: T>reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object...)
  name: T>reportPropertyInputMismatch(JavaType,String,String,Object)
  nameWithType: T>reportPropertyInputMismatch(JavaType,String,String,Object)
  fullName: T>reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.handleUnknownProperty(JsonParser,JsonDeserializer
  nameWithType: DeserializationContext.handleUnknownProperty(JsonParser,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,java.lang.Object,java.lang.String)
  name: ?>,Object,String)
  nameWithType: ?>,Object,String)
  fullName: ?>,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.DeserializationContext.getDefaultPropertyFormat(java.lang.Class
  name: DeserializationContext.getDefaultPropertyFormat(Class
  nameWithType: DeserializationContext.getDefaultPropertyFormat(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.getDefaultPropertyFormat(java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(java.lang.Class
  name: DeserializationContext.handleWeirdKey(Class
  nameWithType: DeserializationContext.handleWeirdKey(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(java.lang.Class
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer
  name: DeserializationContext.handleSecondaryContextualization(JsonDeserializer
  nameWithType: DeserializationContext.handleSecondaryContextualization(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(java.lang.Class
  name: DeserializationContext.handleWeirdStringValue(Class
  nameWithType: DeserializationContext.handleWeirdStringValue(Class
  fullName: com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(java.lang.Class
- uid: T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)
  name: T>reportBadTypeDefinition(BeanDescription,String,Object)
  nameWithType: T>reportBadTypeDefinition(BeanDescription,String,Object)
  fullName: T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)
