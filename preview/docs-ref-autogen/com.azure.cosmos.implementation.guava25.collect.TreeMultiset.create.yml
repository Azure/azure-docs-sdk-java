### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset<E>.<E>create"
name: "<E>create"
nameWithType: "TreeMultiset<E>.<E>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset<E>.<E>create()"
  name: "<E>create()"
  nameWithType: "TreeMultiset<E>.<E>create()"
  summary: "Creates a new, empty multiset, sorted according to the elements' natural order. All elements inserted into the multiset must implement the `Comparable` interface. Furthermore, all such elements must be *mutually comparable*: `e1.compareTo(e2)` must not throw a `ClassCastException` for any elements `e1` and `e2` in the multiset. If the user attempts to add an element to the multiset that violates this constraint (for example, the user attempts to add a string element to a set whose elements are integers), the `add(Object)` call will throw a `ClassCastException`.\n\nThe type specification is ``, instead of the more specific `>`, to support classes defined without generics."
  syntax: "public static TreeMultiset<E> <E>create()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.TreeMultiset?alt=com.azure.cosmos.implementation.guava25.collect.TreeMultiset&text=TreeMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset<E>.<E>create(Iterable<? extends E> elements)"
  name: "<E>create(Iterable<? extends E> elements)"
  nameWithType: "TreeMultiset<E>.<E>create(Iterable<? extends E> elements)"
  summary: "Creates an empty multiset containing the given initial elements, sorted according to the elements' natural order.\n\nThis implementation is highly efficient when `elements` is itself a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multiset\"></xref>.\n\nThe type specification is ``, instead of the more specific `>`, to support classes defined without generics."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static TreeMultiset<E> <E>create(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.TreeMultiset?alt=com.azure.cosmos.implementation.guava25.collect.TreeMultiset&text=TreeMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create(java.util.Comparator<? super E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset<E>.<E>create(Comparator<? super E> comparator)"
  name: "<E>create(Comparator<? super E> comparator)"
  nameWithType: "TreeMultiset<E>.<E>create(Comparator<? super E> comparator)"
  summary: "Creates a new, empty multiset, sorted according to the specified comparator. All elements inserted into the multiset must be *mutually comparable* by the specified comparator: `comparator.compare(e1, e2)` must not throw a `ClassCastException` for any elements `e1` and `e2` in the multiset. If the user attempts to add an element to the multiset that violates this constraint, the `add(Object)` call will throw a `ClassCastException`."
  parameters:
  - description: "the comparator that will be used to sort this multiset. A null value\n     indicates that the elements' <i>natural ordering</i> should be used."
    name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static TreeMultiset<E> <E>create(Comparator<? super E> comparator)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.TreeMultiset?alt=com.azure.cosmos.implementation.guava25.collect.TreeMultiset&text=TreeMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
