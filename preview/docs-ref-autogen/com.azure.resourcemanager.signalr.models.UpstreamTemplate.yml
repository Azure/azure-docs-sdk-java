### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate"
fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate"
name: "UpstreamTemplate"
nameWithType: "UpstreamTemplate"
summary: "Upstream template item settings. It defines the Upstream URL of the incoming requests. The template defines the pattern of the event, the hub or the category of the incoming request that matches current URL template."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class UpstreamTemplate"
constructors:
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.UpstreamTemplate()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.UpstreamTemplate()"
  name: "UpstreamTemplate()"
  nameWithType: "UpstreamTemplate.UpstreamTemplate()"
  syntax: "public UpstreamTemplate()"
methods:
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.auth()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.auth()"
  name: "auth()"
  nameWithType: "UpstreamTemplate.auth()"
  summary: "Get the auth property: Upstream auth settings. If not set, no auth is used for upstream messages."
  syntax: "public UpstreamAuthSettings auth()"
  returns:
    description: "the auth value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamAuthSettings?alt=com.azure.resourcemanager.signalr.models.UpstreamAuthSettings&text=UpstreamAuthSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.categoryPattern()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.categoryPattern()"
  name: "categoryPattern()"
  nameWithType: "UpstreamTemplate.categoryPattern()"
  summary: "Get the categoryPattern property: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any category name. 2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and \"messages\". 3. The single category name, for example, \"connections\", it matches the category \"connections\"."
  syntax: "public String categoryPattern()"
  returns:
    description: "the categoryPattern value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.eventPattern()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.eventPattern()"
  name: "eventPattern()"
  nameWithType: "UpstreamTemplate.eventPattern()"
  summary: "Get the eventPattern property: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any event name. 2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\". 3. The single event name, for example, \"connect\", it matches \"connect\"."
  syntax: "public String eventPattern()"
  returns:
    description: "the eventPattern value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.hubPattern()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.hubPattern()"
  name: "hubPattern()"
  nameWithType: "UpstreamTemplate.hubPattern()"
  summary: "Get the hubPattern property: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any hub name. 2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\". 3. The single hub name, for example, \"hub1\", it matches \"hub1\"."
  syntax: "public String hubPattern()"
  returns:
    description: "the hubPattern value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.urlTemplate()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.urlTemplate()"
  name: "urlTemplate()"
  nameWithType: "UpstreamTemplate.urlTemplate()"
  summary: "Get the urlTemplate property: Gets or sets the Upstream URL template. You can use 3 predefined parameters \\{hub\\}, \\{category\\} \\{event\\} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is \\`http://example.com/\\{hub\\}/api/\\{event\\}\\`, with a client request from hub \\`chat\\` connects, it will first POST to this URL: \\`http://example.com/chat/api/connect\\`."
  syntax: "public String urlTemplate()"
  returns:
    description: "the urlTemplate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.validate()"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.validate()"
  name: "validate()"
  nameWithType: "UpstreamTemplate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withAuth(com.azure.resourcemanager.signalr.models.UpstreamAuthSettings)"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withAuth(UpstreamAuthSettings auth)"
  name: "withAuth(UpstreamAuthSettings auth)"
  nameWithType: "UpstreamTemplate.withAuth(UpstreamAuthSettings auth)"
  summary: "Set the auth property: Upstream auth settings. If not set, no auth is used for upstream messages."
  parameters:
  - description: "the auth value to set."
    name: "auth"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamAuthSettings?alt=com.azure.resourcemanager.signalr.models.UpstreamAuthSettings&text=UpstreamAuthSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpstreamTemplate withAuth(UpstreamAuthSettings auth)"
  returns:
    description: "the UpstreamTemplate object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamTemplate?alt=com.azure.resourcemanager.signalr.models.UpstreamTemplate&text=UpstreamTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withCategoryPattern(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withCategoryPattern(String categoryPattern)"
  name: "withCategoryPattern(String categoryPattern)"
  nameWithType: "UpstreamTemplate.withCategoryPattern(String categoryPattern)"
  summary: "Set the categoryPattern property: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any category name. 2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and \"messages\". 3. The single category name, for example, \"connections\", it matches the category \"connections\"."
  parameters:
  - description: "the categoryPattern value to set."
    name: "categoryPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpstreamTemplate withCategoryPattern(String categoryPattern)"
  returns:
    description: "the UpstreamTemplate object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamTemplate?alt=com.azure.resourcemanager.signalr.models.UpstreamTemplate&text=UpstreamTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withEventPattern(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withEventPattern(String eventPattern)"
  name: "withEventPattern(String eventPattern)"
  nameWithType: "UpstreamTemplate.withEventPattern(String eventPattern)"
  summary: "Set the eventPattern property: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any event name. 2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\". 3. The single event name, for example, \"connect\", it matches \"connect\"."
  parameters:
  - description: "the eventPattern value to set."
    name: "eventPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpstreamTemplate withEventPattern(String eventPattern)"
  returns:
    description: "the UpstreamTemplate object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamTemplate?alt=com.azure.resourcemanager.signalr.models.UpstreamTemplate&text=UpstreamTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withHubPattern(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withHubPattern(String hubPattern)"
  name: "withHubPattern(String hubPattern)"
  nameWithType: "UpstreamTemplate.withHubPattern(String hubPattern)"
  summary: "Set the hubPattern property: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any hub name. 2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\". 3. The single hub name, for example, \"hub1\", it matches \"hub1\"."
  parameters:
  - description: "the hubPattern value to set."
    name: "hubPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpstreamTemplate withHubPattern(String hubPattern)"
  returns:
    description: "the UpstreamTemplate object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamTemplate?alt=com.azure.resourcemanager.signalr.models.UpstreamTemplate&text=UpstreamTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withUrlTemplate(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.models.UpstreamTemplate.withUrlTemplate(String urlTemplate)"
  name: "withUrlTemplate(String urlTemplate)"
  nameWithType: "UpstreamTemplate.withUrlTemplate(String urlTemplate)"
  summary: "Set the urlTemplate property: Gets or sets the Upstream URL template. You can use 3 predefined parameters \\{hub\\}, \\{category\\} \\{event\\} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is \\`http://example.com/\\{hub\\}/api/\\{event\\}\\`, with a client request from hub \\`chat\\` connects, it will first POST to this URL: \\`http://example.com/chat/api/connect\\`."
  parameters:
  - description: "the urlTemplate value to set."
    name: "urlTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpstreamTemplate withUrlTemplate(String urlTemplate)"
  returns:
    description: "the UpstreamTemplate object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.UpstreamTemplate?alt=com.azure.resourcemanager.signalr.models.UpstreamTemplate&text=UpstreamTemplate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.signalr.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.4
