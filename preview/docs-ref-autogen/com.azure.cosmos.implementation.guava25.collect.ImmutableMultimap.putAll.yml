### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.putAll*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>.putAll"
name: "putAll"
nameWithType: "ImmutableMultimap<K,V>.putAll"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.putAll(K,java.lang.Iterable<? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>.putAll(K key, Iterable<? extends V> values)"
  name: "putAll(K key, Iterable<? extends V> values)"
  nameWithType: "ImmutableMultimap<K,V>.putAll(K key, Iterable<? extends V> values)"
  summary: "Guaranteed to throw an exception and leave the multimap unmodified."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)"
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "values"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public boolean putAll(K key, Iterable<? extends V> values)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>.putAll(Multimap<? extends K,? extends V> multimap)"
  name: "putAll(Multimap<? extends K,? extends V> multimap)"
  nameWithType: "ImmutableMultimap<K,V>.putAll(Multimap<? extends K,? extends V> multimap)"
  summary: "Guaranteed to throw an exception and leave the multimap unmodified."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public boolean putAll(Multimap<? extends K,? extends V> multimap)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
