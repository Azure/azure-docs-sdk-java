### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl"
  id: "LeaseRenewerImpl"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.LeaseManager,java.time.Duration)"
  - "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException()"
  - "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  langs:
  - "java"
  name: "LeaseRenewerImpl"
  nameWithType: "LeaseRenewerImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Implementation for the <xref uid=\"com.azure.cosmos.implementation.changefeed.LeaseRenewer\" data-throw-if-not-resolved=\"false\">LeaseRenewer</xref>."
  syntax:
    content: " class LeaseRenewerImpl implements LeaseRenewer"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.LeaseManager,java.time.Duration)"
  id: "LeaseRenewerImpl(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.LeaseManager,java.time.Duration)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl"
  langs:
  - "java"
  name: "LeaseRenewerImpl(Lease lease, LeaseManager leaseManager, Duration leaseRenewInterval)"
  nameWithType: "LeaseRenewerImpl.LeaseRenewerImpl(Lease lease, LeaseManager leaseManager, Duration leaseRenewInterval)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl(Lease lease, LeaseManager leaseManager, Duration leaseRenewInterval)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public LeaseRenewerImpl(Lease lease, LeaseManager leaseManager, Duration leaseRenewInterval)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.implementation.changefeed.Lease"
    - id: "leaseManager"
      type: "com.azure.cosmos.implementation.changefeed.LeaseManager"
    - id: "leaseRenewInterval"
      type: "java.time.Duration"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException()"
  id: "getResultException()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl"
  langs:
  - "java"
  name: "getResultException()"
  nameWithType: "LeaseRenewerImpl.getResultException()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public RuntimeException getResultException()"
    return:
      type: "java.lang.RuntimeException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  id: "run(com.azure.cosmos.implementation.changefeed.CancellationToken)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl"
  langs:
  - "java"
  name: "run(CancellationToken cancellationToken)"
  nameWithType: "LeaseRenewerImpl.run(CancellationToken cancellationToken)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run(CancellationToken cancellationToken)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> run(CancellationToken cancellationToken)"
    parameters:
    - id: "cancellationToken"
      type: "com.azure.cosmos.implementation.changefeed.CancellationToken"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "com.azure.cosmos.implementation.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.implementation.changefeed.Lease"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseManager"
  name: "LeaseManager"
  nameWithType: "LeaseManager"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseManager"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl*"
  name: "LeaseRenewerImpl"
  nameWithType: "LeaseRenewerImpl.LeaseRenewerImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.LeaseRenewerImpl"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.CancellationToken"
  name: "CancellationToken"
  nameWithType: "CancellationToken"
  fullName: "com.azure.cosmos.implementation.changefeed.CancellationToken"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run*"
  name: "run"
  nameWithType: "LeaseRenewerImpl.run"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.run"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.RuntimeException"
  spec.java:
  - uid: "java.lang.RuntimeException"
    name: "RuntimeException"
    fullName: "java.lang.RuntimeException"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException*"
  name: "getResultException"
  nameWithType: "LeaseRenewerImpl.getResultException"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.LeaseRenewerImpl.getResultException"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
  name: "LeaseRenewer"
  nameWithType: "LeaseRenewer"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseRenewer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
