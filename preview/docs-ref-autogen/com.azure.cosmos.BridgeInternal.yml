### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.BridgeInternal"
  id: "BridgeInternal"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.BridgeInternal.<E>getLSN(E)"
  - "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId(E)"
  - "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders(com.azure.cosmos.CosmosClientException)"
  - "com.azure.cosmos.BridgeInternal.<E>getRequestUri(com.azure.cosmos.CosmosClientException)"
  - "com.azure.cosmos.BridgeInternal.<E>getResourceAddress(E)"
  - "com.azure.cosmos.BridgeInternal.<E>setLSN(E,long)"
  - "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId(E,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders(com.azure.cosmos.CosmosClientException,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.BridgeInternal.<E>setResourceAddress(E,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.<T>createCosmosPagedFlux(java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>)"
  - "com.azure.cosmos.BridgeInternal.<T>createFeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  - "com.azure.cosmos.BridgeInternal.<T>getProperties(com.azure.cosmos.models.CosmosAsyncItemResponse<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>getProperties(com.azure.cosmos.models.CosmosItemResponse<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>noChanges(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  - "com.azure.cosmos.BridgeInternal.<T>noChanges(com.azure.cosmos.models.FeedResponse<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap(com.azure.cosmos.models.FeedResponse<T>,java.lang.String,com.azure.cosmos.implementation.QueryMetrics)"
  - "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse(com.azure.cosmos.models.FeedResponse<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>setProperty(com.azure.cosmos.models.JsonSerializable,java.lang.String,T)"
  - "com.azure.cosmos.BridgeInternal.<T>toChaneFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  - "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  - "com.azure.cosmos.BridgeInternal.<T>toResourceResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  - "com.azure.cosmos.BridgeInternal.BridgeInternal()"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase(java.lang.String,com.azure.cosmos.CosmosAsyncClient)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission(java.lang.String,com.azure.cosmos.CosmosAsyncUser)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(int)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,java.lang.Exception)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.BridgeInternal.createCosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.createCosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.createCosmosDatabase(java.lang.String,com.azure.cosmos.CosmosClient,com.azure.cosmos.CosmosAsyncDatabase)"
  - "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics()"
  - "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties(java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.createCosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics(java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  - "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection(java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>)"
  - "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(java.lang.String,com.azure.cosmos.implementation.query.metrics.ClientSideMetrics,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.documentFromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.BridgeInternal.extractConfigs(com.azure.cosmos.CosmosClientBuilder)"
  - "com.azure.cosmos.BridgeInternal.extractContainerSelfLink(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.extractResourceSelfLink(com.azure.cosmos.models.Resource)"
  - "com.azure.cosmos.BridgeInternal.getAltLink(com.azure.cosmos.models.Resource)"
  - "com.azure.cosmos.BridgeInternal.getClientSideMetrics(com.azure.cosmos.implementation.QueryMetrics)"
  - "com.azure.cosmos.BridgeInternal.getContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  - "com.azure.cosmos.BridgeInternal.getFailedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  - "com.azure.cosmos.BridgeInternal.getFeedHeaders(com.azure.cosmos.implementation.ChangeFeedOptions)"
  - "com.azure.cosmos.BridgeInternal.getFeedHeaders(com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.BridgeInternal.getHashCode(com.azure.cosmos.CosmosKeyCredential)"
  - "com.azure.cosmos.BridgeInternal.getInnerErrorMessage(com.azure.cosmos.CosmosClientException)"
  - "com.azure.cosmos.BridgeInternal.getLink(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.BridgeInternal.getObject(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.getPartitionKey(com.azure.cosmos.implementation.routing.PartitionKeyInternal)"
  - "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal(com.azure.cosmos.models.PartitionKey)"
  - "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy)"
  - "com.azure.cosmos.BridgeInternal.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.BridgeInternal.injectConfigs(com.azure.cosmos.CosmosClientBuilder,com.azure.cosmos.implementation.Configs)"
  - "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations(com.azure.cosmos.models.DatabaseAccount)"
  - "com.azure.cosmos.BridgeInternal.monitorTelemetry(io.micrometer.core.instrument.MeterRegistry)"
  - "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd(com.azure.cosmos.CosmosResponseDiagnostics,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart(com.azure.cosmos.CosmosResponseDiagnostics,java.net.URI)"
  - "com.azure.cosmos.BridgeInternal.recordGatewayResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResponse,com.azure.cosmos.CosmosClientException)"
  - "com.azure.cosmos.BridgeInternal.recordResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResult)"
  - "com.azure.cosmos.BridgeInternal.recordRetryContext(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  - "com.azure.cosmos.BridgeInternal.remove(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(com.azure.cosmos.implementation.Document,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.BridgeInternal.setAltLink(com.azure.cosmos.models.Resource,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.setContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics,java.util.List<java.net.URI>)"
  - "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics(com.azure.cosmos.CosmosClientException,com.azure.cosmos.CosmosResponseDiagnostics)"
  - "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken(com.azure.cosmos.models.FeedOptions,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.String,java.lang.Integer)"
  - "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.Integer)"
  - "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize(com.azure.cosmos.implementation.ReplicationPolicy,int)"
  - "com.azure.cosmos.BridgeInternal.setResourceSelfLink(com.azure.cosmos.models.Resource,java.lang.String)"
  - "com.azure.cosmos.BridgeInternal.setTimestamp(com.azure.cosmos.models.Resource,java.time.OffsetDateTime)"
  - "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RequestTimeline)"
  - "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy,boolean)"
  - "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  langs:
  - "java"
  name: "BridgeInternal"
  nameWithType: "BridgeInternal"
  fullName: "com.azure.cosmos.BridgeInternal"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "This is meant to be used only internally as a bridge access to classes in com.azure.cosmos"
  syntax:
    content: "public class BridgeInternal"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.BridgeInternal.<E>getLSN(E)"
  id: "<E>getLSN(E)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>getLSN(E e)"
  nameWithType: "BridgeInternal.<E>getLSN(E e)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getLSN(E e)"
  overload: "com.azure.cosmos.BridgeInternal.getLSN*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static long <E>getLSN(E e)"
    parameters:
    - id: "e"
      type: "E"
    return:
      type: "long"
- uid: "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId(E)"
  id: "<E>getPartitionKeyRangeId(E)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>getPartitionKeyRangeId(E e)"
  nameWithType: "BridgeInternal.<E>getPartitionKeyRangeId(E e)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId(E e)"
  overload: "com.azure.cosmos.BridgeInternal.getPartitionKeyRangeId*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String <E>getPartitionKeyRangeId(E e)"
    parameters:
    - id: "e"
      type: "E"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders(com.azure.cosmos.CosmosClientException)"
  id: "<E>getRequestHeaders(com.azure.cosmos.CosmosClientException)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>getRequestHeaders(CosmosClientException cosmosClientException)"
  nameWithType: "BridgeInternal.<E>getRequestHeaders(CosmosClientException cosmosClientException)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders(CosmosClientException cosmosClientException)"
  overload: "com.azure.cosmos.BridgeInternal.getRequestHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Map<String,String> <E>getRequestHeaders(CosmosClientException cosmosClientException)"
    parameters:
    - id: "cosmosClientException"
      type: "com.azure.cosmos.CosmosClientException"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestUri(com.azure.cosmos.CosmosClientException)"
  id: "<E>getRequestUri(com.azure.cosmos.CosmosClientException)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>getRequestUri(CosmosClientException cosmosClientException)"
  nameWithType: "BridgeInternal.<E>getRequestUri(CosmosClientException cosmosClientException)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestUri(CosmosClientException cosmosClientException)"
  overload: "com.azure.cosmos.BridgeInternal.getRequestUri*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Uri <E>getRequestUri(CosmosClientException cosmosClientException)"
    parameters:
    - id: "cosmosClientException"
      type: "com.azure.cosmos.CosmosClientException"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.Uri"
- uid: "com.azure.cosmos.BridgeInternal.<E>getResourceAddress(E)"
  id: "<E>getResourceAddress(E)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>getResourceAddress(E e)"
  nameWithType: "BridgeInternal.<E>getResourceAddress(E e)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getResourceAddress(E e)"
  overload: "com.azure.cosmos.BridgeInternal.getResourceAddress*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String <E>getResourceAddress(E e)"
    parameters:
    - id: "e"
      type: "E"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.<E>setLSN(E,long)"
  id: "<E>setLSN(E,long)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>setLSN(E e, long lsn)"
  nameWithType: "BridgeInternal.<E>setLSN(E e, long lsn)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setLSN(E e, long lsn)"
  overload: "com.azure.cosmos.BridgeInternal.setLSN*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static E <E>setLSN(E e, long lsn)"
    parameters:
    - id: "e"
      type: "E"
    - id: "lsn"
      type: "long"
    return:
      type: "E"
- uid: "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId(E,java.lang.String)"
  id: "<E>setPartitionKeyRangeId(E,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  nameWithType: "BridgeInternal.<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  overload: "com.azure.cosmos.BridgeInternal.setPartitionKeyRangeId*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static E <E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
    parameters:
    - id: "e"
      type: "E"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    return:
      type: "E"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders(com.azure.cosmos.CosmosClientException,java.util.Map<java.lang.String,java.lang.String>)"
  id: "<E>setRequestHeaders(com.azure.cosmos.CosmosClientException,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>setRequestHeaders(CosmosClientException cosmosClientException, Map<String,String> requestHeaders)"
  nameWithType: "BridgeInternal.<E>setRequestHeaders(CosmosClientException cosmosClientException, Map<String,String> requestHeaders)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders(CosmosClientException cosmosClientException, Map<String,String> requestHeaders)"
  overload: "com.azure.cosmos.BridgeInternal.setRequestHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void <E>setRequestHeaders(CosmosClientException cosmosClientException, Map<String,String> requestHeaders)"
    parameters:
    - id: "cosmosClientException"
      type: "com.azure.cosmos.CosmosClientException"
    - id: "requestHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.BridgeInternal.<E>setResourceAddress(E,java.lang.String)"
  id: "<E>setResourceAddress(E,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<E>setResourceAddress(E e, String resourceAddress)"
  nameWithType: "BridgeInternal.<E>setResourceAddress(E e, String resourceAddress)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setResourceAddress(E e, String resourceAddress)"
  overload: "com.azure.cosmos.BridgeInternal.setResourceAddress*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static E <E>setResourceAddress(E e, String resourceAddress)"
    parameters:
    - id: "e"
      type: "E"
    - id: "resourceAddress"
      type: "java.lang.String"
    return:
      type: "E"
- uid: "com.azure.cosmos.BridgeInternal.<T>createCosmosPagedFlux(java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>)"
  id: "<T>createCosmosPagedFlux(java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  nameWithType: "BridgeInternal.<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosPagedFlux*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosPagedFlux<T> <T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
    parameters:
    - id: "pagedFluxOptionsFluxFunction"
      type: "java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>"
    return:
      type: "com.azure.cosmos.CosmosPagedFlux<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>createFeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  id: "<T>createFeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  nameWithType: "BridgeInternal.<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  overload: "com.azure.cosmos.BridgeInternal.createFeedResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponse<T> <T>createFeedResponse(List<T> results, Map<String,String> headers)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.azure.cosmos.models.FeedResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  id: "<T>createFeedResponseWithQueryMetrics(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "BridgeInternal.<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  overload: "com.azure.cosmos.BridgeInternal.createFeedResponseWithQueryMetrics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponse<T> <T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "queryMetricsMap"
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
    return:
      type: "com.azure.cosmos.models.FeedResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>getProperties(com.azure.cosmos.models.CosmosAsyncItemResponse<T>)"
  id: "<T>getProperties(com.azure.cosmos.models.CosmosAsyncItemResponse<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>getProperties(CosmosAsyncItemResponse<T> cosmosItemResponse)"
  nameWithType: "BridgeInternal.<T>getProperties(CosmosAsyncItemResponse<T> cosmosItemResponse)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>getProperties(CosmosAsyncItemResponse<T> cosmosItemResponse)"
  overload: "com.azure.cosmos.BridgeInternal.getProperties*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosItemProperties <T>getProperties(CosmosAsyncItemResponse<T> cosmosItemResponse)"
    parameters:
    - id: "cosmosItemResponse"
      type: "com.azure.cosmos.models.CosmosAsyncItemResponse<T>"
    return:
      type: "com.azure.cosmos.implementation.CosmosItemProperties"
- uid: "com.azure.cosmos.BridgeInternal.<T>getProperties(com.azure.cosmos.models.CosmosItemResponse<T>)"
  id: "<T>getProperties(com.azure.cosmos.models.CosmosItemResponse<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  nameWithType: "BridgeInternal.<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  overload: "com.azure.cosmos.BridgeInternal.getProperties*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosItemProperties <T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
    parameters:
    - id: "cosmosItemResponse"
      type: "com.azure.cosmos.models.CosmosItemResponse<T>"
    return:
      type: "com.azure.cosmos.implementation.CosmosItemProperties"
- uid: "com.azure.cosmos.BridgeInternal.<T>noChanges(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  id: "<T>noChanges(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>noChanges(RxDocumentServiceResponse rsp)"
  nameWithType: "BridgeInternal.<T>noChanges(RxDocumentServiceResponse rsp)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>noChanges(RxDocumentServiceResponse rsp)"
  overload: "com.azure.cosmos.BridgeInternal.noChanges*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static boolean <T>noChanges(RxDocumentServiceResponse rsp)"
    parameters:
    - id: "rsp"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.<T>noChanges(com.azure.cosmos.models.FeedResponse<T>)"
  id: "<T>noChanges(com.azure.cosmos.models.FeedResponse<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>noChanges(FeedResponse<T> page)"
  nameWithType: "BridgeInternal.<T>noChanges(FeedResponse<T> page)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>noChanges(FeedResponse<T> page)"
  overload: "com.azure.cosmos.BridgeInternal.noChanges*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static boolean <T>noChanges(FeedResponse<T> page)"
    parameters:
    - id: "page"
      type: "com.azure.cosmos.models.FeedResponse<T>"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap(com.azure.cosmos.models.FeedResponse<T>,java.lang.String,com.azure.cosmos.implementation.QueryMetrics)"
  id: "<T>putQueryMetricsIntoMap(com.azure.cosmos.models.FeedResponse<T>,java.lang.String,com.azure.cosmos.implementation.QueryMetrics)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  nameWithType: "BridgeInternal.<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  overload: "com.azure.cosmos.BridgeInternal.putQueryMetricsIntoMap*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void <T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.models.FeedResponse<T>"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    - id: "queryMetrics"
      type: "com.azure.cosmos.implementation.QueryMetrics"
- uid: "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse(com.azure.cosmos.models.FeedResponse<T>)"
  id: "<T>queryMetricsFromFeedResponse(com.azure.cosmos.models.FeedResponse<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  nameWithType: "BridgeInternal.<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  overload: "com.azure.cosmos.BridgeInternal.queryMetricsFromFeedResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ConcurrentMap<String,QueryMetrics> <T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
    parameters:
    - id: "feedResponse"
      type: "com.azure.cosmos.models.FeedResponse<T>"
    return:
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
- uid: "com.azure.cosmos.BridgeInternal.<T>setProperty(com.azure.cosmos.models.JsonSerializable,java.lang.String,T)"
  id: "<T>setProperty(com.azure.cosmos.models.JsonSerializable,java.lang.String,T)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  nameWithType: "BridgeInternal.<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  overload: "com.azure.cosmos.BridgeInternal.setProperty*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void <T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
    parameters:
    - id: "jsonSerializable"
      type: "com.azure.cosmos.models.JsonSerializable"
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "T"
- uid: "com.azure.cosmos.BridgeInternal.<T>toChaneFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  id: "<T>toChaneFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  overload: "com.azure.cosmos.BridgeInternal.toChaneFeedResponsePage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponse<T> <T>toChaneFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    - id: "cls"
      type: "java.lang.Class<T>"
    return:
      type: "com.azure.cosmos.models.FeedResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  id: "<T>toFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
  overload: "com.azure.cosmos.BridgeInternal.toFeedResponsePage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponse<T> <T>toFeedResponsePage(RxDocumentServiceResponse response, Class<T> cls)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    - id: "cls"
      type: "java.lang.Class<T>"
    return:
      type: "com.azure.cosmos.models.FeedResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  id: "<T>toFeedResponsePage(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  nameWithType: "BridgeInternal.<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  overload: "com.azure.cosmos.BridgeInternal.toFeedResponsePage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponse<T> <T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
    parameters:
    - id: "results"
      type: "java.util.List<T>"
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "noChanges"
      type: "boolean"
    return:
      type: "com.azure.cosmos.models.FeedResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.<T>toResourceResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  id: "<T>toResourceResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  overload: "com.azure.cosmos.BridgeInternal.toResourceResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ResourceResponse<T> <T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    - id: "cls"
      type: "java.lang.Class<T>"
    return:
      type: "com.azure.cosmos.implementation.ResourceResponse<T>"
- uid: "com.azure.cosmos.BridgeInternal.BridgeInternal()"
  id: "BridgeInternal()"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "BridgeInternal()"
  nameWithType: "BridgeInternal.BridgeInternal()"
  fullName: "com.azure.cosmos.BridgeInternal.BridgeInternal()"
  overload: "com.azure.cosmos.BridgeInternal.BridgeInternal*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: "public BridgeInternal()"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  id: "createCosmosAsyncConflict(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncConflict createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.CosmosAsyncConflict"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  id: "createCosmosAsyncContainer(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncContainer createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase(java.lang.String,com.azure.cosmos.CosmosAsyncClient)"
  id: "createCosmosAsyncDatabase(java.lang.String,com.azure.cosmos.CosmosAsyncClient)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  nameWithType: "BridgeInternal.createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncDatabase createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "client"
      type: "com.azure.cosmos.CosmosAsyncClient"
    return:
      type: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission(java.lang.String,com.azure.cosmos.CosmosAsyncUser)"
  id: "createCosmosAsyncPermission(java.lang.String,com.azure.cosmos.CosmosAsyncUser)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  nameWithType: "BridgeInternal.createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncPermission createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "user"
      type: "com.azure.cosmos.CosmosAsyncUser"
    return:
      type: "com.azure.cosmos.CosmosAsyncPermission"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  id: "createCosmosAsyncStoredProcedure(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)"
  nameWithType: "BridgeInternal.createCosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncStoredProcedure createCosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.CosmosAsyncStoredProcedure"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  id: "createCosmosAsyncTrigger(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncTrigger(String id, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosAsyncTrigger(String id, CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger(String id, CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncTrigger createCosmosAsyncTrigger(String id, CosmosAsyncContainer container)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.CosmosAsyncTrigger"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  id: "createCosmosAsyncUser(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncUser createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    return:
      type: "com.azure.cosmos.CosmosAsyncUser"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  id: "createCosmosAsyncUserDefinedFunction(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosAsyncUserDefinedFunction createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.CosmosAsyncUserDefinedFunction"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int)"
  id: "createCosmosClientException(int)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(int statusCode)"
  nameWithType: "BridgeInternal.createCosmosClientException(int statusCode)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int statusCode)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(int statusCode)"
    parameters:
    - id: "statusCode"
      type: "int"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  id: "createCosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  nameWithType: "BridgeInternal.createCosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
    parameters:
    - id: "statusCode"
      type: "int"
    - id: "cosmosErrorResource"
      type: "com.azure.cosmos.models.CosmosError"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,java.lang.Exception)"
  id: "createCosmosClientException(int,java.lang.Exception)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(int statusCode, Exception innerException)"
  nameWithType: "BridgeInternal.createCosmosClientException(int statusCode, Exception innerException)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int statusCode, Exception innerException)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(int statusCode, Exception innerException)"
    parameters:
    - id: "statusCode"
      type: "int"
    - id: "innerException"
      type: "java.lang.Exception"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int,java.lang.String)"
  id: "createCosmosClientException(int,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(int statusCode, String errorMessage)"
  nameWithType: "BridgeInternal.createCosmosClientException(int statusCode, String errorMessage)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(int statusCode, String errorMessage)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(int statusCode, String errorMessage)"
    parameters:
    - id: "statusCode"
      type: "int"
    - id: "errorMessage"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  id: "createCosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  nameWithType: "BridgeInternal.createCosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
    - id: "statusCode"
      type: "int"
    - id: "cosmosErrorResource"
      type: "com.azure.cosmos.models.CosmosError"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  id: "createCosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  nameWithType: "BridgeInternal.createCosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException createCosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    - id: "exception"
      type: "java.lang.Exception"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "statusCode"
      type: "int"
    - id: "resourceAddress"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  id: "createCosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosContainer*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosContainer createCosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "database"
      type: "com.azure.cosmos.CosmosDatabase"
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "com.azure.cosmos.CosmosContainer"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosDatabase(java.lang.String,com.azure.cosmos.CosmosClient,com.azure.cosmos.CosmosAsyncDatabase)"
  id: "createCosmosDatabase(java.lang.String,com.azure.cosmos.CosmosClient,com.azure.cosmos.CosmosAsyncDatabase)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosDatabase*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosDatabase createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    - id: "client"
      type: "com.azure.cosmos.CosmosClient"
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    return:
      type: "com.azure.cosmos.CosmosDatabase"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics()"
  id: "createCosmosResponseDiagnostics()"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosResponseDiagnostics()"
  nameWithType: "BridgeInternal.createCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics()"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosResponseDiagnostics createCosmosResponseDiagnostics()"
    return:
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties(java.lang.String)"
  id: "createCosmosStoredProcedureProperties(java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosStoredProcedureProperties(String jsonString)"
  nameWithType: "BridgeInternal.createCosmosStoredProcedureProperties(String jsonString)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties(String jsonString)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosStoredProcedureProperties createCosmosStoredProcedureProperties(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  id: "createCosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  nameWithType: "BridgeInternal.createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  overload: "com.azure.cosmos.BridgeInternal.createCosmosUser*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosUser createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
    parameters:
    - id: "asyncUser"
      type: "com.azure.cosmos.CosmosAsyncUser"
    - id: "database"
      type: "com.azure.cosmos.CosmosDatabase"
    - id: "id"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.CosmosUser"
- uid: "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics(java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  id: "createFeedResponseDiagnostics(java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createFeedResponseDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "BridgeInternal.createFeedResponseDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  fullName: "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  overload: "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static FeedResponseDiagnostics createFeedResponseDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
    parameters:
    - id: "queryMetricsMap"
      type: "java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
    return:
      type: "com.azure.cosmos.FeedResponseDiagnostics"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection(java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>)"
  id: "createQueryMetricsFromCollection(java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  nameWithType: "BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  overload: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static QueryMetrics createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
    parameters:
    - id: "queryMetricsCollection"
      type: "java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>"
    return:
      type: "com.azure.cosmos.implementation.QueryMetrics"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(java.lang.String,com.azure.cosmos.implementation.query.metrics.ClientSideMetrics,java.lang.String)"
  id: "createQueryMetricsFromDelimitedStringAndClientSideMetrics(java.lang.String,com.azure.cosmos.implementation.query.metrics.ClientSideMetrics,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)"
  nameWithType: "BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)"
  overload: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static QueryMetrics createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId)"
    parameters:
    - id: "queryMetricsDelimitedString"
      type: "java.lang.String"
    - id: "clientSideMetrics"
      type: "com.azure.cosmos.implementation.query.metrics.ClientSideMetrics"
    - id: "activityId"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.implementation.QueryMetrics"
- uid: "com.azure.cosmos.BridgeInternal.documentFromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "documentFromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "documentFromObject(Object document, ObjectMapper mapper)"
  nameWithType: "BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)"
  fullName: "com.azure.cosmos.BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)"
  overload: "com.azure.cosmos.BridgeInternal.documentFromObject*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Document documentFromObject(Object document, ObjectMapper mapper)"
    parameters:
    - id: "document"
      type: "java.lang.Object"
    - id: "mapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
    return:
      type: "com.azure.cosmos.implementation.Document"
- uid: "com.azure.cosmos.BridgeInternal.extractConfigs(com.azure.cosmos.CosmosClientBuilder)"
  id: "extractConfigs(com.azure.cosmos.CosmosClientBuilder)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  nameWithType: "BridgeInternal.extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  fullName: "com.azure.cosmos.BridgeInternal.extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  overload: "com.azure.cosmos.BridgeInternal.extractConfigs*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Configs extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
    parameters:
    - id: "cosmosClientBuilder"
      type: "com.azure.cosmos.CosmosClientBuilder"
    return:
      type: "com.azure.cosmos.implementation.Configs"
- uid: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink(com.azure.cosmos.CosmosAsyncContainer)"
  id: "extractContainerSelfLink(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "extractContainerSelfLink(CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.extractContainerSelfLink(CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink(CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String extractContainerSelfLink(CosmosAsyncContainer container)"
    parameters:
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink(com.azure.cosmos.models.Resource)"
  id: "extractResourceSelfLink(com.azure.cosmos.models.Resource)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "extractResourceSelfLink(Resource resource)"
  nameWithType: "BridgeInternal.extractResourceSelfLink(Resource resource)"
  fullName: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink(Resource resource)"
  overload: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String extractResourceSelfLink(Resource resource)"
    parameters:
    - id: "resource"
      type: "com.azure.cosmos.models.Resource"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.getAltLink(com.azure.cosmos.models.Resource)"
  id: "getAltLink(com.azure.cosmos.models.Resource)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getAltLink(Resource resource)"
  nameWithType: "BridgeInternal.getAltLink(Resource resource)"
  fullName: "com.azure.cosmos.BridgeInternal.getAltLink(Resource resource)"
  overload: "com.azure.cosmos.BridgeInternal.getAltLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String getAltLink(Resource resource)"
    parameters:
    - id: "resource"
      type: "com.azure.cosmos.models.Resource"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.getClientSideMetrics(com.azure.cosmos.implementation.QueryMetrics)"
  id: "getClientSideMetrics(com.azure.cosmos.implementation.QueryMetrics)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getClientSideMetrics(QueryMetrics queryMetrics)"
  nameWithType: "BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)"
  fullName: "com.azure.cosmos.BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)"
  overload: "com.azure.cosmos.BridgeInternal.getClientSideMetrics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ClientSideMetrics getClientSideMetrics(QueryMetrics queryMetrics)"
    parameters:
    - id: "queryMetrics"
      type: "com.azure.cosmos.implementation.QueryMetrics"
    return:
      type: "com.azure.cosmos.implementation.query.metrics.ClientSideMetrics"
- uid: "com.azure.cosmos.BridgeInternal.getContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  id: "getContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  nameWithType: "BridgeInternal.getContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  overload: "com.azure.cosmos.BridgeInternal.getContactedReplicas*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static List<URI> getContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    return:
      type: "java.util.List<java.net.URI>"
- uid: "com.azure.cosmos.BridgeInternal.getFailedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  id: "getFailedReplicas(com.azure.cosmos.CosmosResponseDiagnostics)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getFailedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  nameWithType: "BridgeInternal.getFailedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getFailedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  overload: "com.azure.cosmos.BridgeInternal.getFailedReplicas*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Set<URI> getFailedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    return:
      type: "java.util.Set<java.net.URI>"
- uid: "com.azure.cosmos.BridgeInternal.getFeedHeaders(com.azure.cosmos.implementation.ChangeFeedOptions)"
  id: "getFeedHeaders(com.azure.cosmos.implementation.ChangeFeedOptions)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getFeedHeaders(ChangeFeedOptions options)"
  nameWithType: "BridgeInternal.getFeedHeaders(ChangeFeedOptions options)"
  fullName: "com.azure.cosmos.BridgeInternal.getFeedHeaders(ChangeFeedOptions options)"
  overload: "com.azure.cosmos.BridgeInternal.getFeedHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Map<String,String> getFeedHeaders(ChangeFeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.implementation.ChangeFeedOptions"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.BridgeInternal.getFeedHeaders(com.azure.cosmos.models.FeedOptions)"
  id: "getFeedHeaders(com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getFeedHeaders(FeedOptions options)"
  nameWithType: "BridgeInternal.getFeedHeaders(FeedOptions options)"
  fullName: "com.azure.cosmos.BridgeInternal.getFeedHeaders(FeedOptions options)"
  overload: "com.azure.cosmos.BridgeInternal.getFeedHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Map<String,String> getFeedHeaders(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.BridgeInternal.getHashCode(com.azure.cosmos.CosmosKeyCredential)"
  id: "getHashCode(com.azure.cosmos.CosmosKeyCredential)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getHashCode(CosmosKeyCredential keyCredential)"
  nameWithType: "BridgeInternal.getHashCode(CosmosKeyCredential keyCredential)"
  fullName: "com.azure.cosmos.BridgeInternal.getHashCode(CosmosKeyCredential keyCredential)"
  overload: "com.azure.cosmos.BridgeInternal.getHashCode*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static int getHashCode(CosmosKeyCredential keyCredential)"
    parameters:
    - id: "keyCredential"
      type: "com.azure.cosmos.CosmosKeyCredential"
    return:
      type: "int"
- uid: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage(com.azure.cosmos.CosmosClientException)"
  id: "getInnerErrorMessage(com.azure.cosmos.CosmosClientException)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getInnerErrorMessage(CosmosClientException cosmosClientException)"
  nameWithType: "BridgeInternal.getInnerErrorMessage(CosmosClientException cosmosClientException)"
  fullName: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage(CosmosClientException cosmosClientException)"
  overload: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String getInnerErrorMessage(CosmosClientException cosmosClientException)"
    parameters:
    - id: "cosmosClientException"
      type: "com.azure.cosmos.CosmosClientException"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.getLink(com.azure.cosmos.CosmosAsyncContainer)"
  id: "getLink(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  nameWithType: "BridgeInternal.getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  overload: "com.azure.cosmos.BridgeInternal.getLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String getLink(CosmosAsyncContainer cosmosAsyncContainer)"
    parameters:
    - id: "cosmosAsyncContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.getObject(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  id: "getObject(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getObject(JsonSerializable jsonSerializable, String propertyName)"
  nameWithType: "BridgeInternal.getObject(JsonSerializable jsonSerializable, String propertyName)"
  fullName: "com.azure.cosmos.BridgeInternal.getObject(JsonSerializable jsonSerializable, String propertyName)"
  overload: "com.azure.cosmos.BridgeInternal.getObject*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ObjectNode getObject(JsonSerializable jsonSerializable, String propertyName)"
    parameters:
    - id: "jsonSerializable"
      type: "com.azure.cosmos.models.JsonSerializable"
    - id: "propertyName"
      type: "java.lang.String"
    return:
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKey(com.azure.cosmos.implementation.routing.PartitionKeyInternal)"
  id: "getPartitionKey(com.azure.cosmos.implementation.routing.PartitionKeyInternal)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  nameWithType: "BridgeInternal.getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  overload: "com.azure.cosmos.BridgeInternal.getPartitionKey*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static PartitionKey getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
    parameters:
    - id: "partitionKeyInternal"
      type: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
    return:
      type: "com.azure.cosmos.models.PartitionKey"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal(com.azure.cosmos.models.PartitionKey)"
  id: "getPartitionKeyInternal(com.azure.cosmos.models.PartitionKey)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getPartitionKeyInternal(PartitionKey partitionKey)"
  nameWithType: "BridgeInternal.getPartitionKeyInternal(PartitionKey partitionKey)"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal(PartitionKey partitionKey)"
  overload: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static PartitionKeyInternal getPartitionKeyInternal(PartitionKey partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "com.azure.cosmos.models.PartitionKey"
    return:
      type: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
- uid: "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy)"
  id: "getUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getUseMultipleWriteLocations(ConnectionPolicy policy)"
  nameWithType: "BridgeInternal.getUseMultipleWriteLocations(ConnectionPolicy policy)"
  fullName: "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations(ConnectionPolicy policy)"
  overload: "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static boolean getUseMultipleWriteLocations(ConnectionPolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.cosmos.ConnectionPolicy"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.getValue(com.fasterxml.jackson.databind.JsonNode)"
  id: "getValue(com.fasterxml.jackson.databind.JsonNode)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "getValue(JsonNode value)"
  nameWithType: "BridgeInternal.getValue(JsonNode value)"
  fullName: "com.azure.cosmos.BridgeInternal.getValue(JsonNode value)"
  overload: "com.azure.cosmos.BridgeInternal.getValue*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static Object getValue(JsonNode value)"
    parameters:
    - id: "value"
      type: "com.fasterxml.jackson.databind.JsonNode"
    return:
      type: "java.lang.Object"
- uid: "com.azure.cosmos.BridgeInternal.injectConfigs(com.azure.cosmos.CosmosClientBuilder,com.azure.cosmos.implementation.Configs)"
  id: "injectConfigs(com.azure.cosmos.CosmosClientBuilder,com.azure.cosmos.implementation.Configs)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  nameWithType: "BridgeInternal.injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  fullName: "com.azure.cosmos.BridgeInternal.injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  overload: "com.azure.cosmos.BridgeInternal.injectConfigs*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientBuilder injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
    parameters:
    - id: "cosmosClientBuilder"
      type: "com.azure.cosmos.CosmosClientBuilder"
    - id: "configs"
      type: "com.azure.cosmos.implementation.Configs"
    return:
      type: "com.azure.cosmos.CosmosClientBuilder"
- uid: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations(com.azure.cosmos.models.DatabaseAccount)"
  id: "isEnableMultipleWriteLocations(com.azure.cosmos.models.DatabaseAccount)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "isEnableMultipleWriteLocations(DatabaseAccount account)"
  nameWithType: "BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)"
  fullName: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)"
  overload: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static boolean isEnableMultipleWriteLocations(DatabaseAccount account)"
    parameters:
    - id: "account"
      type: "com.azure.cosmos.models.DatabaseAccount"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.monitorTelemetry(io.micrometer.core.instrument.MeterRegistry)"
  id: "monitorTelemetry(io.micrometer.core.instrument.MeterRegistry)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "monitorTelemetry(MeterRegistry registry)"
  nameWithType: "BridgeInternal.monitorTelemetry(MeterRegistry registry)"
  fullName: "com.azure.cosmos.BridgeInternal.monitorTelemetry(MeterRegistry registry)"
  overload: "com.azure.cosmos.BridgeInternal.monitorTelemetry*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void monitorTelemetry(MeterRegistry registry)"
    parameters:
    - id: "registry"
      type: "io.micrometer.core.instrument.MeterRegistry"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd(com.azure.cosmos.CosmosResponseDiagnostics,java.lang.String)"
  id: "recordAddressResolutionEnd(com.azure.cosmos.CosmosResponseDiagnostics,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "recordAddressResolutionEnd(CosmosResponseDiagnostics cosmosResponseDiagnostics, String identifier)"
  nameWithType: "BridgeInternal.recordAddressResolutionEnd(CosmosResponseDiagnostics cosmosResponseDiagnostics, String identifier)"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd(CosmosResponseDiagnostics cosmosResponseDiagnostics, String identifier)"
  overload: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void recordAddressResolutionEnd(CosmosResponseDiagnostics cosmosResponseDiagnostics, String identifier)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "identifier"
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart(com.azure.cosmos.CosmosResponseDiagnostics,java.net.URI)"
  id: "recordAddressResolutionStart(com.azure.cosmos.CosmosResponseDiagnostics,java.net.URI)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "recordAddressResolutionStart(CosmosResponseDiagnostics cosmosResponseDiagnostics, URI targetEndpoint)"
  nameWithType: "BridgeInternal.recordAddressResolutionStart(CosmosResponseDiagnostics cosmosResponseDiagnostics, URI targetEndpoint)"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart(CosmosResponseDiagnostics cosmosResponseDiagnostics, URI targetEndpoint)"
  overload: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static String recordAddressResolutionStart(CosmosResponseDiagnostics cosmosResponseDiagnostics, URI targetEndpoint)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "targetEndpoint"
      type: "java.net.URI"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResponse,com.azure.cosmos.CosmosClientException)"
  id: "recordGatewayResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResponse,com.azure.cosmos.CosmosClientException)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "recordGatewayResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, CosmosClientException exception)"
  nameWithType: "BridgeInternal.recordGatewayResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, CosmosClientException exception)"
  fullName: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, CosmosClientException exception)"
  overload: "com.azure.cosmos.BridgeInternal.recordGatewayResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void recordGatewayResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, CosmosClientException exception)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "rxDocumentServiceRequest"
      type: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    - id: "storeResponse"
      type: "com.azure.cosmos.implementation.directconnectivity.StoreResponse"
    - id: "exception"
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.recordResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResult)"
  id: "recordResponse(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResult)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "recordResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult)"
  nameWithType: "BridgeInternal.recordResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult)"
  fullName: "com.azure.cosmos.BridgeInternal.recordResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult)"
  overload: "com.azure.cosmos.BridgeInternal.recordResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void recordResponse(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "request"
      type: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    - id: "storeResult"
      type: "com.azure.cosmos.implementation.directconnectivity.StoreResult"
- uid: "com.azure.cosmos.BridgeInternal.recordRetryContext(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  id: "recordRetryContext(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "recordRetryContext(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request)"
  nameWithType: "BridgeInternal.recordRetryContext(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request)"
  fullName: "com.azure.cosmos.BridgeInternal.recordRetryContext(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request)"
  overload: "com.azure.cosmos.BridgeInternal.recordRetryContext*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void recordRetryContext(CosmosResponseDiagnostics cosmosResponseDiagnostics, RxDocumentServiceRequest request)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "request"
      type: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.BridgeInternal.remove(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  id: "remove(com.azure.cosmos.models.JsonSerializable,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "remove(JsonSerializable jsonSerializable, String propertyName)"
  nameWithType: "BridgeInternal.remove(JsonSerializable jsonSerializable, String propertyName)"
  fullName: "com.azure.cosmos.BridgeInternal.remove(JsonSerializable jsonSerializable, String propertyName)"
  overload: "com.azure.cosmos.BridgeInternal.remove*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void remove(JsonSerializable jsonSerializable, String propertyName)"
    parameters:
    - id: "jsonSerializable"
      type: "com.azure.cosmos.models.JsonSerializable"
    - id: "propertyName"
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(com.azure.cosmos.implementation.Document,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "serializeJsonToByteBuffer(com.azure.cosmos.implementation.Document,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "serializeJsonToByteBuffer(Document document, ObjectMapper mapper)"
  nameWithType: "BridgeInternal.serializeJsonToByteBuffer(Document document, ObjectMapper mapper)"
  fullName: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(Document document, ObjectMapper mapper)"
  overload: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ByteBuffer serializeJsonToByteBuffer(Document document, ObjectMapper mapper)"
    parameters:
    - id: "document"
      type: "com.azure.cosmos.implementation.Document"
    - id: "mapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
    return:
      type: "java.nio.ByteBuffer"
- uid: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "serializeJsonToByteBuffer(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  nameWithType: "BridgeInternal.serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  fullName: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  overload: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static ByteBuffer serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
    parameters:
    - id: "document"
      type: "java.lang.Object"
    - id: "mapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
    return:
      type: "java.nio.ByteBuffer"
- uid: "com.azure.cosmos.BridgeInternal.setAltLink(com.azure.cosmos.models.Resource,java.lang.String)"
  id: "setAltLink(com.azure.cosmos.models.Resource,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setAltLink(Resource resource, String altLink)"
  nameWithType: "BridgeInternal.setAltLink(Resource resource, String altLink)"
  fullName: "com.azure.cosmos.BridgeInternal.setAltLink(Resource resource, String altLink)"
  overload: "com.azure.cosmos.BridgeInternal.setAltLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setAltLink(Resource resource, String altLink)"
    parameters:
    - id: "resource"
      type: "com.azure.cosmos.models.Resource"
    - id: "altLink"
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.setContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics,java.util.List<java.net.URI>)"
  id: "setContactedReplicas(com.azure.cosmos.CosmosResponseDiagnostics,java.util.List<java.net.URI>)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics, List<URI> contactedReplicas)"
  nameWithType: "BridgeInternal.setContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics, List<URI> contactedReplicas)"
  fullName: "com.azure.cosmos.BridgeInternal.setContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics, List<URI> contactedReplicas)"
  overload: "com.azure.cosmos.BridgeInternal.setContactedReplicas*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setContactedReplicas(CosmosResponseDiagnostics cosmosResponseDiagnostics, List<URI> contactedReplicas)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "contactedReplicas"
      type: "java.util.List<java.net.URI>"
- uid: "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics(com.azure.cosmos.CosmosClientException,com.azure.cosmos.CosmosResponseDiagnostics)"
  id: "setCosmosResponseDiagnostics(com.azure.cosmos.CosmosClientException,com.azure.cosmos.CosmosResponseDiagnostics)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setCosmosResponseDiagnostics(CosmosClientException cosmosClientException, CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  nameWithType: "BridgeInternal.setCosmosResponseDiagnostics(CosmosClientException cosmosClientException, CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics(CosmosClientException cosmosClientException, CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  overload: "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static CosmosClientException setCosmosResponseDiagnostics(CosmosClientException cosmosClientException, CosmosResponseDiagnostics cosmosResponseDiagnostics)"
    parameters:
    - id: "cosmosClientException"
      type: "com.azure.cosmos.CosmosClientException"
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken(com.azure.cosmos.models.FeedOptions,java.lang.String)"
  id: "setFeedOptionsContinuationToken(com.azure.cosmos.models.FeedOptions,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setFeedOptionsContinuationToken(FeedOptions feedOptions, String continuationToken)"
  nameWithType: "BridgeInternal.setFeedOptionsContinuationToken(FeedOptions feedOptions, String continuationToken)"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken(FeedOptions feedOptions, String continuationToken)"
  overload: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setFeedOptionsContinuationToken(FeedOptions feedOptions, String continuationToken)"
    parameters:
    - id: "feedOptions"
      type: "com.azure.cosmos.models.FeedOptions"
    - id: "continuationToken"
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.String,java.lang.Integer)"
  id: "setFeedOptionsContinuationTokenAndMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.String,java.lang.Integer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setFeedOptionsContinuationTokenAndMaxItemCount(FeedOptions feedOptions, String continuationToken, Integer maxItemCount)"
  nameWithType: "BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount(FeedOptions feedOptions, String continuationToken, Integer maxItemCount)"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount(FeedOptions feedOptions, String continuationToken, Integer maxItemCount)"
  overload: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setFeedOptionsContinuationTokenAndMaxItemCount(FeedOptions feedOptions, String continuationToken, Integer maxItemCount)"
    parameters:
    - id: "feedOptions"
      type: "com.azure.cosmos.models.FeedOptions"
    - id: "continuationToken"
      type: "java.lang.String"
    - id: "maxItemCount"
      type: "java.lang.Integer"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.Integer)"
  id: "setFeedOptionsMaxItemCount(com.azure.cosmos.models.FeedOptions,java.lang.Integer)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setFeedOptionsMaxItemCount(FeedOptions feedOptions, Integer maxItemCount)"
  nameWithType: "BridgeInternal.setFeedOptionsMaxItemCount(FeedOptions feedOptions, Integer maxItemCount)"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount(FeedOptions feedOptions, Integer maxItemCount)"
  overload: "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setFeedOptionsMaxItemCount(FeedOptions feedOptions, Integer maxItemCount)"
    parameters:
    - id: "feedOptions"
      type: "com.azure.cosmos.models.FeedOptions"
    - id: "maxItemCount"
      type: "java.lang.Integer"
- uid: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize(com.azure.cosmos.implementation.ReplicationPolicy,int)"
  id: "setMaxReplicaSetSize(com.azure.cosmos.implementation.ReplicationPolicy,int)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  nameWithType: "BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  fullName: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  overload: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
    parameters:
    - id: "replicationPolicy"
      type: "com.azure.cosmos.implementation.ReplicationPolicy"
    - id: "value"
      type: "int"
- uid: "com.azure.cosmos.BridgeInternal.setResourceSelfLink(com.azure.cosmos.models.Resource,java.lang.String)"
  id: "setResourceSelfLink(com.azure.cosmos.models.Resource,java.lang.String)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setResourceSelfLink(Resource resource, String selfLink)"
  nameWithType: "BridgeInternal.setResourceSelfLink(Resource resource, String selfLink)"
  fullName: "com.azure.cosmos.BridgeInternal.setResourceSelfLink(Resource resource, String selfLink)"
  overload: "com.azure.cosmos.BridgeInternal.setResourceSelfLink*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setResourceSelfLink(Resource resource, String selfLink)"
    parameters:
    - id: "resource"
      type: "com.azure.cosmos.models.Resource"
    - id: "selfLink"
      type: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.setTimestamp(com.azure.cosmos.models.Resource,java.time.OffsetDateTime)"
  id: "setTimestamp(com.azure.cosmos.models.Resource,java.time.OffsetDateTime)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setTimestamp(Resource resource, OffsetDateTime date)"
  nameWithType: "BridgeInternal.setTimestamp(Resource resource, OffsetDateTime date)"
  fullName: "com.azure.cosmos.BridgeInternal.setTimestamp(Resource resource, OffsetDateTime date)"
  overload: "com.azure.cosmos.BridgeInternal.setTimestamp*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setTimestamp(Resource resource, OffsetDateTime date)"
    parameters:
    - id: "resource"
      type: "com.azure.cosmos.models.Resource"
    - id: "date"
      type: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RequestTimeline)"
  id: "setTransportClientRequestTimelineOnDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics,com.azure.cosmos.implementation.RequestTimeline)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline)"
  nameWithType: "BridgeInternal.setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline)"
  fullName: "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline)"
  overload: "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    - id: "requestTimeline"
      type: "com.azure.cosmos.implementation.RequestTimeline"
- uid: "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy,boolean)"
  id: "setUseMultipleWriteLocations(com.azure.cosmos.ConnectionPolicy,boolean)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)"
  nameWithType: "BridgeInternal.setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)"
  fullName: "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)"
  overload: "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static void setUseMultipleWriteLocations(ConnectionPolicy policy, boolean value)"
    parameters:
    - id: "policy"
      type: "com.azure.cosmos.ConnectionPolicy"
    - id: "value"
      type: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  id: "toStoredProcedureResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  parent: "com.azure.cosmos.BridgeInternal"
  langs:
  - "java"
  name: "toStoredProcedureResponse(RxDocumentServiceResponse response)"
  nameWithType: "BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)"
  fullName: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)"
  overload: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public static StoredProcedureResponse toStoredProcedureResponse(RxDocumentServiceResponse response)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
    return:
      type: "com.azure.cosmos.implementation.StoredProcedureResponse"
references:
- uid: "com.azure.cosmos.BridgeInternal.BridgeInternal*"
  name: "BridgeInternal"
  nameWithType: "BridgeInternal.BridgeInternal"
  fullName: "com.azure.cosmos.BridgeInternal.BridgeInternal"
  package: "com.azure.cosmos"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.fasterxml.jackson.databind.ObjectMapper"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.ObjectMapper"
    name: "ObjectMapper"
    fullName: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.azure.cosmos.implementation.Document"
  name: "Document"
  nameWithType: "Document"
  fullName: "com.azure.cosmos.implementation.Document"
- uid: "com.azure.cosmos.BridgeInternal.documentFromObject*"
  name: "documentFromObject"
  nameWithType: "BridgeInternal.documentFromObject"
  fullName: "com.azure.cosmos.BridgeInternal.documentFromObject"
  package: "com.azure.cosmos"
- uid: "java.nio.ByteBuffer"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
- uid: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer*"
  name: "serializeJsonToByteBuffer"
  nameWithType: "BridgeInternal.serializeJsonToByteBuffer"
  fullName: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer"
  package: "com.azure.cosmos"
- uid: "io.micrometer.core.instrument.MeterRegistry"
  spec.java:
  - uid: "io.micrometer.core.instrument.MeterRegistry"
    name: "MeterRegistry"
    fullName: "io.micrometer.core.instrument.MeterRegistry"
- uid: "com.azure.cosmos.BridgeInternal.monitorTelemetry*"
  name: "monitorTelemetry"
  nameWithType: "BridgeInternal.monitorTelemetry"
  fullName: "com.azure.cosmos.BridgeInternal.monitorTelemetry"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
  name: "RxDocumentServiceResponse"
  nameWithType: "RxDocumentServiceResponse"
  fullName: "com.azure.cosmos.implementation.RxDocumentServiceResponse"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.ResourceResponse<T>"
  spec.java:
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.toResourceResponse*"
  name: "<T>toResourceResponse"
  nameWithType: "BridgeInternal.<T>toResourceResponse"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toResourceResponse"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.FeedResponse<T>"
  spec.java:
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.toFeedResponsePage*"
  name: "<T>toFeedResponsePage"
  nameWithType: "BridgeInternal.<T>toFeedResponsePage"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage"
  package: "com.azure.cosmos"
- uid: "java.util.List<T>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.BridgeInternal.toChaneFeedResponsePage*"
  name: "<T>toChaneFeedResponsePage"
  nameWithType: "BridgeInternal.<T>toChaneFeedResponsePage"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toChaneFeedResponsePage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.StoredProcedureResponse"
  name: "StoredProcedureResponse"
  nameWithType: "StoredProcedureResponse"
  fullName: "com.azure.cosmos.implementation.StoredProcedureResponse"
- uid: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse*"
  name: "toStoredProcedureResponse"
  nameWithType: "BridgeInternal.toStoredProcedureResponse"
  fullName: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.ChangeFeedOptions"
  name: "ChangeFeedOptions"
  nameWithType: "ChangeFeedOptions"
  fullName: "com.azure.cosmos.implementation.ChangeFeedOptions"
- uid: "com.azure.cosmos.BridgeInternal.getFeedHeaders*"
  name: "getFeedHeaders"
  nameWithType: "BridgeInternal.getFeedHeaders"
  fullName: "com.azure.cosmos.BridgeInternal.getFeedHeaders"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.models.FeedOptions"
- uid: "com.azure.cosmos.BridgeInternal.noChanges*"
  name: "<T>noChanges"
  nameWithType: "BridgeInternal.<T>noChanges"
  fullName: "com.azure.cosmos.BridgeInternal.<T>noChanges"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.createFeedResponse*"
  name: "<T>createFeedResponse"
  nameWithType: "BridgeInternal.<T>createFeedResponse"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponse"
  package: "com.azure.cosmos"
- uid: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
  spec.java:
  - uid: "java.util.concurrent.ConcurrentMap"
    name: "ConcurrentMap"
    fullName: "java.util.concurrent.ConcurrentMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.implementation.QueryMetrics"
    name: "QueryMetrics"
    fullName: "com.azure.cosmos.implementation.QueryMetrics"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.createFeedResponseWithQueryMetrics*"
  name: "<T>createFeedResponseWithQueryMetrics"
  nameWithType: "BridgeInternal.<T>createFeedResponseWithQueryMetrics"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics"
  package: "com.azure.cosmos"
- uid: "java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.implementation.QueryMetrics"
    name: "QueryMetrics"
    fullName: "com.azure.cosmos.implementation.QueryMetrics"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.FeedResponseDiagnostics"
  name: "FeedResponseDiagnostics"
  nameWithType: "FeedResponseDiagnostics"
  fullName: "com.azure.cosmos.FeedResponseDiagnostics"
- uid: "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics*"
  name: "createFeedResponseDiagnostics"
  nameWithType: "BridgeInternal.createFeedResponseDiagnostics"
  fullName: "com.azure.cosmos.BridgeInternal.createFeedResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "E"
  spec.java:
  - uid: "E"
    name: "E"
    fullName: "E"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.BridgeInternal.setResourceAddress*"
  name: "<E>setResourceAddress"
  nameWithType: "BridgeInternal.<E>setResourceAddress"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setResourceAddress"
  package: "com.azure.cosmos"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.BridgeInternal.getLSN*"
  name: "<E>getLSN"
  nameWithType: "BridgeInternal.<E>getLSN"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getLSN"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKeyRangeId*"
  name: "<E>getPartitionKeyRangeId"
  nameWithType: "BridgeInternal.<E>getPartitionKeyRangeId"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getResourceAddress*"
  name: "<E>getResourceAddress"
  nameWithType: "BridgeInternal.<E>getResourceAddress"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getResourceAddress"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setLSN*"
  name: "<E>setLSN"
  nameWithType: "BridgeInternal.<E>setLSN"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setLSN"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setPartitionKeyRangeId*"
  name: "<E>setPartitionKeyRangeId"
  nameWithType: "BridgeInternal.<E>setPartitionKeyRangeId"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.DatabaseAccount"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.azure.cosmos.models.DatabaseAccount"
- uid: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations*"
  name: "isEnableMultipleWriteLocations"
  nameWithType: "BridgeInternal.isEnableMultipleWriteLocations"
  fullName: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.ConnectionPolicy"
  name: "ConnectionPolicy"
  nameWithType: "ConnectionPolicy"
  fullName: "com.azure.cosmos.ConnectionPolicy"
- uid: "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations*"
  name: "getUseMultipleWriteLocations"
  nameWithType: "BridgeInternal.getUseMultipleWriteLocations"
  fullName: "com.azure.cosmos.BridgeInternal.getUseMultipleWriteLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations*"
  name: "setUseMultipleWriteLocations"
  nameWithType: "BridgeInternal.setUseMultipleWriteLocations"
  fullName: "com.azure.cosmos.BridgeInternal.setUseMultipleWriteLocations"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.implementation.directconnectivity.Uri"
  name: "Uri"
  nameWithType: "Uri"
  fullName: "com.azure.cosmos.implementation.directconnectivity.Uri"
- uid: "com.azure.cosmos.BridgeInternal.getRequestUri*"
  name: "<E>getRequestUri"
  nameWithType: "BridgeInternal.<E>getRequestUri"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestUri"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setRequestHeaders*"
  name: "<E>setRequestHeaders"
  nameWithType: "BridgeInternal.<E>setRequestHeaders"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getRequestHeaders*"
  name: "<E>getRequestHeaders"
  nameWithType: "BridgeInternal.<E>getRequestHeaders"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.Resource"
  name: "Resource"
  nameWithType: "Resource"
  fullName: "com.azure.cosmos.models.Resource"
- uid: "com.azure.cosmos.BridgeInternal.getAltLink*"
  name: "getAltLink"
  nameWithType: "BridgeInternal.getAltLink"
  fullName: "com.azure.cosmos.BridgeInternal.getAltLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setAltLink*"
  name: "setAltLink"
  nameWithType: "BridgeInternal.setAltLink"
  fullName: "com.azure.cosmos.BridgeInternal.setAltLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.ReplicationPolicy"
  name: "ReplicationPolicy"
  nameWithType: "ReplicationPolicy"
  fullName: "com.azure.cosmos.implementation.ReplicationPolicy"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize*"
  name: "setMaxReplicaSetSize"
  nameWithType: "BridgeInternal.setMaxReplicaSetSize"
  fullName: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.QueryMetrics"
  name: "QueryMetrics"
  nameWithType: "QueryMetrics"
  fullName: "com.azure.cosmos.implementation.QueryMetrics"
- uid: "com.azure.cosmos.BridgeInternal.putQueryMetricsIntoMap*"
  name: "<T>putQueryMetricsIntoMap"
  nameWithType: "BridgeInternal.<T>putQueryMetricsIntoMap"
  fullName: "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.query.metrics.ClientSideMetrics"
  name: "ClientSideMetrics"
  nameWithType: "ClientSideMetrics"
  fullName: "com.azure.cosmos.implementation.query.metrics.ClientSideMetrics"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics*"
  name: "createQueryMetricsFromDelimitedStringAndClientSideMetrics"
  nameWithType: "BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics"
  package: "com.azure.cosmos"
- uid: "java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.QueryMetrics"
    name: "QueryMetrics"
    fullName: "com.azure.cosmos.implementation.QueryMetrics"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection*"
  name: "createQueryMetricsFromCollection"
  nameWithType: "BridgeInternal.createQueryMetricsFromCollection"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getClientSideMetrics*"
  name: "getClientSideMetrics"
  nameWithType: "BridgeInternal.getClientSideMetrics"
  fullName: "com.azure.cosmos.BridgeInternal.getClientSideMetrics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage*"
  name: "getInnerErrorMessage"
  nameWithType: "BridgeInternal.getInnerErrorMessage"
  fullName: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
  name: "PartitionKeyInternal"
  nameWithType: "PartitionKeyInternal"
  fullName: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
- uid: "com.azure.cosmos.models.PartitionKey"
  name: "PartitionKey"
  nameWithType: "PartitionKey"
  fullName: "com.azure.cosmos.models.PartitionKey"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "BridgeInternal.getPartitionKey"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKey"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.models.JsonSerializable"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.cosmos.BridgeInternal.setProperty*"
  name: "<T>setProperty"
  nameWithType: "BridgeInternal.<T>setProperty"
  fullName: "com.azure.cosmos.BridgeInternal.<T>setProperty"
  package: "com.azure.cosmos"
- uid: "com.fasterxml.jackson.databind.node.ObjectNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.node.ObjectNode"
    name: "ObjectNode"
    fullName: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "com.azure.cosmos.BridgeInternal.getObject*"
  name: "getObject"
  nameWithType: "BridgeInternal.getObject"
  fullName: "com.azure.cosmos.BridgeInternal.getObject"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.remove*"
  name: "remove"
  nameWithType: "BridgeInternal.remove"
  fullName: "com.azure.cosmos.BridgeInternal.remove"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
  name: "CosmosStoredProcedureProperties"
  nameWithType: "CosmosStoredProcedureProperties"
  fullName: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties*"
  name: "createCosmosStoredProcedureProperties"
  nameWithType: "BridgeInternal.createCosmosStoredProcedureProperties"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties"
  package: "com.azure.cosmos"
- uid: "com.fasterxml.jackson.databind.JsonNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.JsonNode"
    name: "JsonNode"
    fullName: "com.fasterxml.jackson.databind.JsonNode"
- uid: "com.azure.cosmos.BridgeInternal.getValue*"
  name: "getValue"
  nameWithType: "BridgeInternal.getValue"
  fullName: "com.azure.cosmos.BridgeInternal.getValue"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosResponseDiagnostics"
  name: "CosmosResponseDiagnostics"
  nameWithType: "CosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosResponseDiagnostics"
- uid: "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics*"
  name: "setCosmosResponseDiagnostics"
  nameWithType: "BridgeInternal.setCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.BridgeInternal.setCosmosResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosClientException*"
  name: "createCosmosClientException"
  nameWithType: "BridgeInternal.createCosmosClientException"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosClientException"
  package: "com.azure.cosmos"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.azure.cosmos.models.CosmosError"
  name: "CosmosError"
  nameWithType: "CosmosError"
  fullName: "com.azure.cosmos.models.CosmosError"
- uid: "com.azure.cosmos.CosmosClientBuilder"
  name: "CosmosClientBuilder"
  nameWithType: "CosmosClientBuilder"
  fullName: "com.azure.cosmos.CosmosClientBuilder"
- uid: "com.azure.cosmos.implementation.Configs"
  name: "Configs"
  nameWithType: "Configs"
  fullName: "com.azure.cosmos.implementation.Configs"
- uid: "com.azure.cosmos.BridgeInternal.extractConfigs*"
  name: "extractConfigs"
  nameWithType: "BridgeInternal.extractConfigs"
  fullName: "com.azure.cosmos.BridgeInternal.extractConfigs"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.injectConfigs*"
  name: "injectConfigs"
  nameWithType: "BridgeInternal.injectConfigs"
  fullName: "com.azure.cosmos.BridgeInternal.injectConfigs"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink*"
  name: "extractContainerSelfLink"
  nameWithType: "BridgeInternal.extractContainerSelfLink"
  fullName: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink*"
  name: "extractResourceSelfLink"
  nameWithType: "BridgeInternal.extractResourceSelfLink"
  fullName: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setResourceSelfLink*"
  name: "setResourceSelfLink"
  nameWithType: "BridgeInternal.setResourceSelfLink"
  fullName: "com.azure.cosmos.BridgeInternal.setResourceSelfLink"
  package: "com.azure.cosmos"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "com.azure.cosmos.BridgeInternal.setTimestamp*"
  name: "setTimestamp"
  nameWithType: "BridgeInternal.setTimestamp"
  fullName: "com.azure.cosmos.BridgeInternal.setTimestamp"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics*"
  name: "createCosmosResponseDiagnostics"
  nameWithType: "BridgeInternal.createCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.RequestTimeline"
  name: "RequestTimeline"
  nameWithType: "RequestTimeline"
  fullName: "com.azure.cosmos.implementation.RequestTimeline"
- uid: "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics*"
  name: "setTransportClientRequestTimelineOnDiagnostics"
  nameWithType: "BridgeInternal.setTransportClientRequestTimelineOnDiagnostics"
  fullName: "com.azure.cosmos.BridgeInternal.setTransportClientRequestTimelineOnDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.implementation.directconnectivity.StoreResult"
  name: "StoreResult"
  nameWithType: "StoreResult"
  fullName: "com.azure.cosmos.implementation.directconnectivity.StoreResult"
- uid: "com.azure.cosmos.BridgeInternal.recordResponse*"
  name: "recordResponse"
  nameWithType: "BridgeInternal.recordResponse"
  fullName: "com.azure.cosmos.BridgeInternal.recordResponse"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.recordRetryContext*"
  name: "recordRetryContext"
  nameWithType: "BridgeInternal.recordRetryContext"
  fullName: "com.azure.cosmos.BridgeInternal.recordRetryContext"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.implementation.directconnectivity.StoreResponse"
  name: "StoreResponse"
  nameWithType: "StoreResponse"
  fullName: "com.azure.cosmos.implementation.directconnectivity.StoreResponse"
- uid: "com.azure.cosmos.BridgeInternal.recordGatewayResponse*"
  name: "recordGatewayResponse"
  nameWithType: "BridgeInternal.recordGatewayResponse"
  fullName: "com.azure.cosmos.BridgeInternal.recordGatewayResponse"
  package: "com.azure.cosmos"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart*"
  name: "recordAddressResolutionStart"
  nameWithType: "BridgeInternal.recordAddressResolutionStart"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd*"
  name: "recordAddressResolutionEnd"
  nameWithType: "BridgeInternal.recordAddressResolutionEnd"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd"
  package: "com.azure.cosmos"
- uid: "java.util.List<java.net.URI>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.getContactedReplicas*"
  name: "getContactedReplicas"
  nameWithType: "BridgeInternal.getContactedReplicas"
  fullName: "com.azure.cosmos.BridgeInternal.getContactedReplicas"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setContactedReplicas*"
  name: "setContactedReplicas"
  nameWithType: "BridgeInternal.setContactedReplicas"
  fullName: "com.azure.cosmos.BridgeInternal.setContactedReplicas"
  package: "com.azure.cosmos"
- uid: "java.util.Set<java.net.URI>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.getFailedReplicas*"
  name: "getFailedReplicas"
  nameWithType: "BridgeInternal.getFailedReplicas"
  fullName: "com.azure.cosmos.BridgeInternal.getFailedReplicas"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.queryMetricsFromFeedResponse*"
  name: "<T>queryMetricsFromFeedResponse"
  nameWithType: "BridgeInternal.<T>queryMetricsFromFeedResponse"
  fullName: "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal*"
  name: "getPartitionKeyInternal"
  nameWithType: "BridgeInternal.getPartitionKeyInternal"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal"
  package: "com.azure.cosmos"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount*"
  name: "setFeedOptionsContinuationTokenAndMaxItemCount"
  nameWithType: "BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationTokenAndMaxItemCount"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken*"
  name: "setFeedOptionsContinuationToken"
  nameWithType: "BridgeInternal.setFeedOptionsContinuationToken"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsContinuationToken"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount*"
  name: "setFeedOptionsMaxItemCount"
  nameWithType: "BridgeInternal.setFeedOptionsMaxItemCount"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedOptionsMaxItemCount"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosAsyncItemResponse<T>"
  spec.java:
  - uid: "com.azure.cosmos.models.CosmosAsyncItemResponse"
    name: "CosmosAsyncItemResponse"
    fullName: "com.azure.cosmos.models.CosmosAsyncItemResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.CosmosItemProperties"
  name: "CosmosItemProperties"
  nameWithType: "CosmosItemProperties"
  fullName: "com.azure.cosmos.implementation.CosmosItemProperties"
- uid: "com.azure.cosmos.BridgeInternal.getProperties*"
  name: "<T>getProperties"
  nameWithType: "BridgeInternal.<T>getProperties"
  fullName: "com.azure.cosmos.BridgeInternal.<T>getProperties"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosItemResponse<T>"
  spec.java:
  - uid: "com.azure.cosmos.models.CosmosItemResponse"
    name: "CosmosItemResponse"
    fullName: "com.azure.cosmos.models.CosmosItemResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosKeyCredential"
  name: "CosmosKeyCredential"
  nameWithType: "CosmosKeyCredential"
  fullName: "com.azure.cosmos.CosmosKeyCredential"
- uid: "com.azure.cosmos.BridgeInternal.getHashCode*"
  name: "getHashCode"
  nameWithType: "BridgeInternal.getHashCode"
  fullName: "com.azure.cosmos.BridgeInternal.getHashCode"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.getLink*"
  name: "getLink"
  nameWithType: "BridgeInternal.getLink"
  fullName: "com.azure.cosmos.BridgeInternal.getLink"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncConflict"
  name: "CosmosAsyncConflict"
  nameWithType: "CosmosAsyncConflict"
  fullName: "com.azure.cosmos.CosmosAsyncConflict"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict*"
  name: "createCosmosAsyncConflict"
  nameWithType: "BridgeInternal.createCosmosAsyncConflict"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncDatabase"
  name: "CosmosAsyncDatabase"
  nameWithType: "CosmosAsyncDatabase"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer*"
  name: "createCosmosAsyncContainer"
  nameWithType: "BridgeInternal.createCosmosAsyncContainer"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncClient"
  name: "CosmosAsyncClient"
  nameWithType: "CosmosAsyncClient"
  fullName: "com.azure.cosmos.CosmosAsyncClient"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase*"
  name: "createCosmosAsyncDatabase"
  nameWithType: "BridgeInternal.createCosmosAsyncDatabase"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncUser"
  name: "CosmosAsyncUser"
  nameWithType: "CosmosAsyncUser"
  fullName: "com.azure.cosmos.CosmosAsyncUser"
- uid: "com.azure.cosmos.CosmosAsyncPermission"
  name: "CosmosAsyncPermission"
  nameWithType: "CosmosAsyncPermission"
  fullName: "com.azure.cosmos.CosmosAsyncPermission"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission*"
  name: "createCosmosAsyncPermission"
  nameWithType: "BridgeInternal.createCosmosAsyncPermission"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncStoredProcedure"
  name: "CosmosAsyncStoredProcedure"
  nameWithType: "CosmosAsyncStoredProcedure"
  fullName: "com.azure.cosmos.CosmosAsyncStoredProcedure"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure*"
  name: "createCosmosAsyncStoredProcedure"
  nameWithType: "BridgeInternal.createCosmosAsyncStoredProcedure"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncStoredProcedure"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncTrigger"
  name: "CosmosAsyncTrigger"
  nameWithType: "CosmosAsyncTrigger"
  fullName: "com.azure.cosmos.CosmosAsyncTrigger"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger*"
  name: "createCosmosAsyncTrigger"
  nameWithType: "BridgeInternal.createCosmosAsyncTrigger"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncTrigger"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosAsyncUserDefinedFunction"
  name: "CosmosAsyncUserDefinedFunction"
  nameWithType: "CosmosAsyncUserDefinedFunction"
  fullName: "com.azure.cosmos.CosmosAsyncUserDefinedFunction"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction*"
  name: "createCosmosAsyncUserDefinedFunction"
  nameWithType: "BridgeInternal.createCosmosAsyncUserDefinedFunction"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser*"
  name: "createCosmosAsyncUser"
  nameWithType: "BridgeInternal.createCosmosAsyncUser"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosDatabase"
  name: "CosmosDatabase"
  nameWithType: "CosmosDatabase"
  fullName: "com.azure.cosmos.CosmosDatabase"
- uid: "com.azure.cosmos.CosmosContainer"
  name: "CosmosContainer"
  nameWithType: "CosmosContainer"
  fullName: "com.azure.cosmos.CosmosContainer"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosContainer*"
  name: "createCosmosContainer"
  nameWithType: "BridgeInternal.createCosmosContainer"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosContainer"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClient"
  name: "CosmosClient"
  nameWithType: "CosmosClient"
  fullName: "com.azure.cosmos.CosmosClient"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosDatabase*"
  name: "createCosmosDatabase"
  nameWithType: "BridgeInternal.createCosmosDatabase"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosDatabase"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosUser"
  name: "CosmosUser"
  nameWithType: "CosmosUser"
  fullName: "com.azure.cosmos.CosmosUser"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosUser*"
  name: "createCosmosUser"
  nameWithType: "BridgeInternal.createCosmosUser"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosUser"
  package: "com.azure.cosmos"
- uid: "java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.CosmosPagedFluxOptions"
    name: "CosmosPagedFluxOptions"
    fullName: "com.azure.cosmos.implementation.CosmosPagedFluxOptions"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosPagedFlux<T>"
  spec.java:
  - uid: "com.azure.cosmos.CosmosPagedFlux"
    name: "CosmosPagedFlux"
    fullName: "com.azure.cosmos.CosmosPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosPagedFlux*"
  name: "<T>createCosmosPagedFlux"
  nameWithType: "BridgeInternal.<T>createCosmosPagedFlux"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createCosmosPagedFlux"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "com.azure.cosmos.implementation.ResourceResponse"
  name: "ResourceResponse"
  nameWithType: "ResourceResponse"
  fullName: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.models.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.models.FeedResponse"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
  name: "String,QueryMetrics"
  nameWithType: "String,QueryMetrics"
  fullName: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
- uid: "java.util.concurrent.ConcurrentMap"
  name: "ConcurrentMap"
  nameWithType: "ConcurrentMap"
  fullName: "java.util.concurrent.ConcurrentMap"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "com.azure.cosmos.models.CosmosAsyncItemResponse"
  name: "CosmosAsyncItemResponse"
  nameWithType: "CosmosAsyncItemResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncItemResponse"
- uid: "com.azure.cosmos.models.CosmosItemResponse"
  name: "CosmosItemResponse"
  nameWithType: "CosmosItemResponse"
  fullName: "com.azure.cosmos.models.CosmosItemResponse"
- uid: "com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux"
  name: "CosmosPagedFluxOptions,Flux"
  nameWithType: "CosmosPagedFluxOptions,Flux"
  fullName: "com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "com.azure.cosmos.CosmosPagedFlux"
  name: "CosmosPagedFlux"
  nameWithType: "CosmosPagedFlux"
  fullName: "com.azure.cosmos.CosmosPagedFlux"
