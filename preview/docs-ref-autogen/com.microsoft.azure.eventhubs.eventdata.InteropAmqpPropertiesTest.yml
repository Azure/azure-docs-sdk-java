### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  id: InteropAmqpPropertiesTest
  parent: com.microsoft.azure.eventhubs.eventdata
  children:
  - com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup()
  - com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize()
  - com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage()
  - com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend()
  - com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps()
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: InteropAmqpPropertiesTest
  nameWithType: InteropAmqpPropertiesTest
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 38
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public class InteropAmqpPropertiesTest extends ApiTestBase
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.eventhubs.lib.TestBase
  - com.microsoft.azure.eventhubs.lib.ApiTestBase
  inheritedMembers:
  - com.microsoft.azure.eventhubs.lib.TestBase.logger
  - com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient,final String,final int)
  - com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  - com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  - com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger)
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup()
  id: cleanup()
  parent: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: cleanup()
  nameWithType: InteropAmqpPropertiesTest.cleanup()
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup()
  overload: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 148
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public static void cleanup()
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize()
  id: initialize()
  parent: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: initialize()
  nameWithType: InteropAmqpPropertiesTest.initialize()
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize()
  overload: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 96
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public static void initialize()
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage()
  id: interopWithDirectProtonAmqpMessage()
  parent: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: interopWithDirectProtonAmqpMessage()
  nameWithType: InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage()
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage()
  overload: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 175
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public void interopWithDirectProtonAmqpMessage()
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend()
  id: interopWithDirectProtonEventDataReSend()
  parent: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: interopWithDirectProtonEventDataReSend()
  nameWithType: InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend()
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend()
  overload: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 180
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public void interopWithDirectProtonEventDataReSend()
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps()
  id: resentAmqpMessageShouldRetainAllOriginalProps()
  parent: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest
  href: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.yml
  langs:
  - java
  name: resentAmqpMessageShouldRetainAllOriginalProps()
  nameWithType: InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps()
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps()
  overload: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/eventdata/InteropAmqpPropertiesTest.java
    startLine: 185
  package: com.microsoft.azure.eventhubs.eventdata
  syntax:
    content: public void resentAmqpMessageShouldRetainAllOriginalProps()
references:
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize*
  name: initialize
  nameWithType: InteropAmqpPropertiesTest.initialize
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.initialize
  package: com.microsoft.azure.eventhubs.eventdata
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup*
  name: cleanup
  nameWithType: InteropAmqpPropertiesTest.cleanup
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.cleanup
  package: com.microsoft.azure.eventhubs.eventdata
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage*
  name: interopWithDirectProtonAmqpMessage
  nameWithType: InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonAmqpMessage
  package: com.microsoft.azure.eventhubs.eventdata
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend*
  name: interopWithDirectProtonEventDataReSend
  nameWithType: InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.interopWithDirectProtonEventDataReSend
  package: com.microsoft.azure.eventhubs.eventdata
- uid: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps*
  name: resentAmqpMessageShouldRetainAllOriginalProps
  nameWithType: InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps
  fullName: com.microsoft.azure.eventhubs.eventdata.InteropAmqpPropertiesTest.resentAmqpMessageShouldRetainAllOriginalProps
  package: com.microsoft.azure.eventhubs.eventdata
- uid: com.microsoft.azure.eventhubs.lib.TestBase.logger
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: logger
  nameWithType: TestBase.logger
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.logger
  type: Field
  syntax:
    content: protected final Logger logger
    return:
      type: 524922b1
- uid: com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient,final String,final int)
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  nameWithType: TestBase.pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  type: Method
  syntax:
    content: public static CompletableFuture<Void> pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
    parameters:
    - id: ehClient
      type: 93de0ef9com.microsoft.azure.eventhubs.EventHubClient
    - id: partitionId
      type: 3d93591e
    - id: noOfEvents
      type: cd225469
    return:
      type: db03ee24
- uid: com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  parent: com.microsoft.azure.eventhubs.lib.ApiTestBase
  href: com.microsoft.azure.eventhubs.lib.ApiTestBase.yml
  name: skipIfNotConfigured()
  nameWithType: ApiTestBase.skipIfNotConfigured()
  fullName: com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  type: Method
  syntax:
    content: public static void skipIfNotConfigured()
- uid: com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: TestBase()
  nameWithType: TestBase.TestBase()
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  type: Constructor
  syntax:
    content: protected TestBase()
- uid: com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger)
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: TestBase(Logger logger)
  nameWithType: TestBase.TestBase(Logger logger)
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger logger)
  type: Constructor
  syntax:
    content: protected TestBase(Logger logger)
    parameters:
    - id: logger
      type: ef129195
- uid: com.microsoft.azure.eventhubs.lib.ApiTestBase
  parent: com.microsoft.azure.eventhubs.lib
  href: com.microsoft.azure.eventhubs.lib.ApiTestBase.yml
  name: ApiTestBase
  nameWithType: ApiTestBase
  fullName: com.microsoft.azure.eventhubs.lib.ApiTestBase
  type: Class
  syntax:
    content: public class ApiTestBase extends TestBase
- uid: com.microsoft.azure.eventhubs.EventHubClient
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventHubClient.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Interface
  summary: "<p>Anchor class - all EventHub client operations STARTS here.</p>\r\n<p></p>"
  syntax:
    content: public interface EventHubClient
- uid: com.microsoft.azure.eventhubs.impl.MessagingFactory
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.MessagingFactory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.eventhubs.impl.MessagingFactory
  type: Class
  summary: "<p>Abstracts all amqp related details and exposes AmqpConnection object Manages connection life-cycle </p>"
  syntax:
    content: public class MessagingFactory
- uid: com.microsoft.azure.eventhubs.PartitionReceiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionReceiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Interface
  summary: "<p>This is a logical representation of receiving from a EventHub partition. </p>\r\n<p>A <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> is tied to a ConsumerGroup + EventHub Partition combination. <ul><li><p>If an epoch based <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> (i.e., PartitionReceiver.getEpoch != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p></li><li><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></li></ul></p>\r\n<p></p>"
  syntax:
    content: public interface PartitionReceiver
- uid: com.microsoft.azure.eventhubs.impl.MessageReceiver
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.MessageReceiver.yml
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: com.microsoft.azure.eventhubs.impl.MessageReceiver
  type: Class
  summary: "<p>Common Receiver that abstracts all amqp related details translates event-driven reactor model into async receive Api </p>"
  syntax:
    content: public class MessageReceiver
- uid: com.microsoft.azure.eventhubs.impl.MessageSender
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.MessageSender.yml
  name: MessageSender
  nameWithType: MessageSender
  fullName: com.microsoft.azure.eventhubs.impl.MessageSender
  type: Class
  summary: "<p>Abstracts all amqp related details translates event-driven reactor model into async send Api </p>"
  syntax:
    content: public class MessageSender
- uid: com.microsoft.azure.eventhubs.PartitionSender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionSender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Interface
  summary: "<p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.send(EventData)\" data-throw-if-not-resolved=\"false\">EventHubClient#send</xref> method.</p>\r\n<p></p>"
  syntax:
    content: public interface PartitionSender
- uid: com.microsoft.azure.eventhubs.EventData
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventData(interface).yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: "<p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>\r\n<p>Serializing a received <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</a><pre>\r\ni.   <xref uid=\"com.microsoft.azure.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">getProperties()</xref> - AMQPMessage.ApplicationProperties section\r\nii.  <xref uid=\"com.microsoft.azure.eventhubs.EventData.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> - if AMQPMessage.Body has Data section\r\niii. <xref uid=\"com.microsoft.azure.eventhubs.EventData.getObject()\" data-throw-if-not-resolved=\"false\">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections\r\n</pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>"
  syntax:
    content: public interface EventData
- uid: com.microsoft.azure.eventhubs.EventHubException
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventHubException.yml
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
  type: Class
  summary: "<p>This is the base exception that service bus will produce for all error cases. </p>"
  syntax:
    content: public class EventHubException
