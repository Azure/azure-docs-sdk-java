### YamlMime:JavaMember
uid: "org.apache.commons.codec.Decoder.decode*"
fullName: "org.apache.commons.codec.Decoder.decode"
name: "decode"
nameWithType: "Decoder.decode"
members:
- uid: "org.apache.commons.codec.Decoder.decode(java.lang.Object)"
  fullName: "org.apache.commons.codec.Decoder.decode(Object source)"
  name: "decode(Object source)"
  nameWithType: "Decoder.decode(Object source)"
  summary: "Decodes an \"encoded\" Object and returns a \"decoded\" Object. Note that the implementation of this interface will try to cast the Object parameter to the specific type expected by a particular Decoder implementation. If a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref> occurs this decode method will throw a DecoderException."
  parameters:
  - description: "the object to decode"
    name: "source"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Object decode(Object source)"
  exceptions:
  - description: "a decoder exception can be thrown for any number of reasons. Some good candidates are that the\n             parameter passed to this method is null, a param cannot be cast to the appropriate type for a\n             specific encoder."
    type: "<xref href=\"org.apache.commons.codec.DecoderException?alt=org.apache.commons.codec.DecoderException&text=DecoderException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "a 'decoded\" object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.commons.codec"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
