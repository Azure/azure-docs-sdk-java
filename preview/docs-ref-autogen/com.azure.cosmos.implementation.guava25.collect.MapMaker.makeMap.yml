### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.MapMaker.makeMap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.MapMaker.<K,V>makeMap"
name: "<K,V>makeMap"
nameWithType: "MapMaker.<K,V>makeMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.MapMaker.<K,V>makeMap()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MapMaker.<K,V>makeMap()"
  name: "<K,V>makeMap()"
  nameWithType: "MapMaker.<K,V>makeMap()"
  summary: "Builds a thread-safe map. This method does not alter the state of this `MapMaker` instance, so it can be invoked again to create multiple independent maps.\n\nThe bulk operations `putAll`, `equals`, and `clear` are not guaranteed to be performed atomically on the returned map. Additionally, `size` and `containsValue` are implemented as bulk read operations, and thus may fail to observe concurrent writes."
  syntax: "public ConcurrentMap<K,V> <K,V>makeMap()"
  returns:
    description: "a serializable concurrent map having the requested features"
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
