### YamlMime:JavaMember
uid: "com.azure.core.util.serializer.SerializerAdapter.deserialize*"
fullName: "com.azure.core.util.serializer.SerializerAdapter.<U>deserialize"
name: "<U>deserialize"
nameWithType: "SerializerAdapter.<U>deserialize"
members:
- uid: "com.azure.core.util.serializer.SerializerAdapter.<U>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<U>deserialize(HttpHeaders headers, Type type)"
  name: "<U>deserialize(HttpHeaders headers, Type type)"
  nameWithType: "SerializerAdapter.<U>deserialize(HttpHeaders headers, Type type)"
  summary: "Deserialize the provided headers returned from a REST API to an entity instance declared as the model to hold 'Matching' headers. 'Matching' headers are the REST API returned headers those with:\n\n1.  header names same as name of a properties in the entity.\n2.  header names start with value of <xref uid=\"com.azure.core.annotation.HeaderCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.annotation.HeaderCollection\"></xref> annotation applied to the properties in the entity.\n\nWhen needed, the 'header entity' types must be declared as first generic argument of <xref uid=\"com.azure.core.http.rest.ResponseBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.rest.ResponseBase\"></xref> returned by java proxy method corresponding to the REST API. e.g. `Mono> getMetadata(args);` `class FooMetadataHeaders { String name; {@literal @}HeaderCollection(\"header-collection-prefix-\") Map headerCollection; }` in the case of above example, this method produces an instance of FooMetadataHeaders from provided `headers`."
  parameters:
  - description: "the REST API returned headers"
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type to deserialize"
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract U <U>deserialize(HttpHeaders headers, Type type)"
  exceptions:
  - description: "If an I/O error occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "instance of header entity type created based on provided <code>headers</code>, if header entity model does\n     not exists then return null"
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.serializer.SerializerAdapter.<U>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.core.util.serializer.SerializerAdapter.<U>deserialize(String value, Type type, SerializerEncoding encoding)"
  name: "<U>deserialize(String value, Type type, SerializerEncoding encoding)"
  nameWithType: "SerializerAdapter.<U>deserialize(String value, Type type, SerializerEncoding encoding)"
  summary: "Deserializes a string into a `U` object."
  parameters:
  - description: "the string value to deserialize"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type to deserialize"
    name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "the encoding used in the serialized value"
    name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract U <U>deserialize(String value, Type type, SerializerEncoding encoding)"
  exceptions:
  - description: "exception from deserialization"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the deserialized object"
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.util.serializer"
artifact: com.azure:azure-core:1.3.0-beta.1
