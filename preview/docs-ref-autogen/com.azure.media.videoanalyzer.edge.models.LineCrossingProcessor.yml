### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.LineCrossingProcessor"
fullName: "com.azure.media.videoanalyzer.edge.models.LineCrossingProcessor"
name: "LineCrossingProcessor"
nameWithType: "LineCrossingProcessor"
summary: "Line crossing processor allows for the detection of tracked objects moving across one or more predefined lines. It must be downstream of an object tracker of downstream on an AI extension node that generates sequenceId for objects which are tracked across different frames of the video. Inference events are generated every time objects crosses from one side of the line to another."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase.getInputs()"
- "com.azure.media.videoanalyzer.edge.models.ProcessorNodeBase.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LineCrossingProcessor extends ProcessorNodeBase"
constructors:
- "com.azure.media.videoanalyzer.edge.models.LineCrossingProcessor.LineCrossingProcessor(java.lang.String,java.util.List<com.azure.media.videoanalyzer.edge.models.NodeInput>,java.util.List<com.azure.media.videoanalyzer.edge.models.NamedLineBase>)"
methods:
- "com.azure.media.videoanalyzer.edge.models.LineCrossingProcessor.getLines()"
type: "class"
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.4
