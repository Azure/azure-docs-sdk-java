### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequestWithFeedRange*"
fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createDocumentServiceRequestWithFeedRange"
name: "createDocumentServiceRequestWithFeedRange"
nameWithType: "DocumentQueryExecutionContextBase<T>.createDocumentServiceRequestWithFeedRange"
members:
- uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequestWithFeedRange(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal,com.azure.cosmos.models.FeedRange,java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createDocumentServiceRequestWithFeedRange(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, FeedRange feedRange, String collectionRid, String throughputControlGroupName)"
  name: "createDocumentServiceRequestWithFeedRange(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, FeedRange feedRange, String collectionRid, String throughputControlGroupName)"
  nameWithType: "DocumentQueryExecutionContextBase<T>.createDocumentServiceRequestWithFeedRange(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, FeedRange feedRange, String collectionRid, String throughputControlGroupName)"
  parameters:
  - name: "requestHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKeyInternal"
    type: "<xref href=\"com.azure.cosmos.implementation.routing.PartitionKeyInternal?alt=com.azure.cosmos.implementation.routing.PartitionKeyInternal&text=PartitionKeyInternal\" data-throw-if-not-resolved=\"False\" />"
  - name: "feedRange"
    type: "<xref href=\"com.azure.cosmos.models.FeedRange?alt=com.azure.cosmos.models.FeedRange&text=FeedRange\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionRid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "throughputControlGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected RxDocumentServiceRequest createDocumentServiceRequestWithFeedRange(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, FeedRange feedRange, String collectionRid, String throughputControlGroupName)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.15.0-beta.2
