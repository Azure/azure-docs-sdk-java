### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo"
fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo"
name: "TopicTypeInfo"
nameWithType: "TopicTypeInfo"
summary: "An immutable client-side representation of TopicTypeInfo."
syntax: "public interface TopicTypeInfo"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.description()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.description()"
  name: "description()"
  nameWithType: "TopicTypeInfo.description()"
  summary: "Gets the description property: Description of the topic type."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.displayName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.displayName()"
  name: "displayName()"
  nameWithType: "TopicTypeInfo.displayName()"
  summary: "Gets the displayName property: Display Name for the topic type."
  modifiers:
  - "abstract"
  syntax: "public abstract String displayName()"
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.id()"
  name: "id()"
  nameWithType: "TopicTypeInfo.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.innerModel()"
  name: "innerModel()"
  nameWithType: "TopicTypeInfo.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract TopicTypeInfoInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.name()"
  name: "name()"
  nameWithType: "TopicTypeInfo.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.provider()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.provider()"
  name: "provider()"
  nameWithType: "TopicTypeInfo.provider()"
  summary: "Gets the provider property: Namespace of the provider of the topic type."
  modifiers:
  - "abstract"
  syntax: "public abstract String provider()"
  returns:
    description: "the provider value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.provisioningState()"
  name: "provisioningState()"
  nameWithType: "TopicTypeInfo.provisioningState()"
  summary: "Gets the provisioningState property: Provisioning state of the topic type."
  modifiers:
  - "abstract"
  syntax: "public abstract TopicTypeProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState&text=TopicTypeProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.resourceRegionType()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.resourceRegionType()"
  name: "resourceRegionType()"
  nameWithType: "TopicTypeInfo.resourceRegionType()"
  summary: "Gets the resourceRegionType property: Region type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceRegionType resourceRegionType()"
  returns:
    description: "the resourceRegionType value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ResourceRegionType?alt=com.azure.resourcemanager.eventgrid.models.ResourceRegionType&text=ResourceRegionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.sourceResourceFormat()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.sourceResourceFormat()"
  name: "sourceResourceFormat()"
  nameWithType: "TopicTypeInfo.sourceResourceFormat()"
  summary: "Gets the sourceResourceFormat property: Source resource format."
  modifiers:
  - "abstract"
  syntax: "public abstract String sourceResourceFormat()"
  returns:
    description: "the sourceResourceFormat value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.supportedLocations()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.supportedLocations()"
  name: "supportedLocations()"
  nameWithType: "TopicTypeInfo.supportedLocations()"
  summary: "Gets the supportedLocations property: List of locations supported by this topic type."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> supportedLocations()"
  returns:
    description: "the supportedLocations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.supportedScopesForSource()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.supportedScopesForSource()"
  name: "supportedScopesForSource()"
  nameWithType: "TopicTypeInfo.supportedScopesForSource()"
  summary: "Gets the supportedScopesForSource property: Supported source scopes."
  modifiers:
  - "abstract"
  syntax: "public abstract List<TopicTypeSourceScope> supportedScopesForSource()"
  returns:
    description: "the supportedScopesForSource value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope&text=TopicTypeSourceScope\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.TopicTypeInfo.type()"
  name: "type()"
  nameWithType: "TopicTypeInfo.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
