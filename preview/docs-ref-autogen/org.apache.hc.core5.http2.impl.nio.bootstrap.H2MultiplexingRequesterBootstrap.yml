### YamlMime:JavaType
uid: "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap"
fullName: "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap"
name: "H2MultiplexingRequesterBootstrap"
nameWithType: "H2MultiplexingRequesterBootstrap"
summary: "<xref uid=\"org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequester\" data-throw-if-not-resolved=\"false\" data-raw-source=\"H2MultiplexingRequester\"></xref> bootstrap."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class H2MultiplexingRequesterBootstrap"
methods:
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.bootstrap()"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.create()"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.register(java.lang.String,org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncPushConsumer>)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.registerVirtual(java.lang.String,java.lang.String,org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncPushConsumer>)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setCharCodingConfig(org.apache.hc.core5.http.config.CharCodingConfig)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setExceptionCallback(org.apache.hc.core5.function.Callback<java.lang.Exception>)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setH2Config(org.apache.hc.core5.http2.config.H2Config)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setHttpProcessor(org.apache.hc.core5.http.protocol.HttpProcessor)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setIOReactorConfig(org.apache.hc.core5.reactor.IOReactorConfig)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setIOSessionDecorator(org.apache.hc.core5.function.Decorator<org.apache.hc.core5.reactor.IOSession>)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setIOSessionListener(org.apache.hc.core5.reactor.IOSessionListener)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setStreamListener(org.apache.hc.core5.http2.impl.nio.H2StreamListener)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setStrictALPNHandshake(boolean)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)"
- "org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap.setUriPatternType(org.apache.hc.core5.http.protocol.UriPatternType)"
type: "class"
metadata: {}
package: "org.apache.hc.core5.http2.impl.nio.bootstrap"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
