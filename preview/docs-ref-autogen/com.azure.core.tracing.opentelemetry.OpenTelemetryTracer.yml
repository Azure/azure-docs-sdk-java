### YamlMime:ManagedReference
items:
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  id: OpenTelemetryTracer
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry
  children:
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer()
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink(com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(int,java.lang.Throwable,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext(java.lang.String,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName(java.lang.String,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(java.lang.String,com.azure.core.util.Context)
  - com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)
  langs:
  - java
  name: OpenTelemetryTracer
  nameWithType: OpenTelemetryTracer
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  type: Class
  package: com.azure.core.tracing.opentelemetry
  summary: >-
    Basic tracing implementation class for use with REST and AMQP Service Clients to create <xref uid="" data-throw-if-not-resolved="false">Span</xref> and in-process context propagation. Singleton OpenTelemetry tracer capable of starting and exporting spans.


    This helper class supports W3C distributed tracing protocol and injects SpanContext into the outgoing HTTP and AMQP requests.
  syntax:
    content: public class OpenTelemetryTracer implements Tracer
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.util.tracing.Tracer
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer()
  id: OpenTelemetryTracer()
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: OpenTelemetryTracer()
  nameWithType: OpenTelemetryTracer.OpenTelemetryTracer()
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer()
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer*
  type: Constructor
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public OpenTelemetryTracer()
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink(com.azure.core.util.Context)
  id: addLink(com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: addLink(Context context)
  nameWithType: OpenTelemetryTracer.addLink(Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink(Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public void addLink(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(int,java.lang.Throwable,com.azure.core.util.Context)
  id: end(int,java.lang.Throwable,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: end(int responseCode, Throwable throwable, Context context)
  nameWithType: OpenTelemetryTracer.end(int responseCode, Throwable throwable, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(int responseCode, Throwable throwable, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public void end(int responseCode, Throwable throwable, Context context)
    parameters:
    - id: responseCode
      type: int
    - id: throwable
      type: java.lang.Throwable
    - id: context
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)
  id: end(java.lang.String,java.lang.Throwable,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: end(String statusMessage, Throwable throwable, Context context)
  nameWithType: OpenTelemetryTracer.end(String statusMessage, Throwable throwable, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end(String statusMessage, Throwable throwable, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public void end(String statusMessage, Throwable throwable, Context context)
    parameters:
    - id: statusMessage
      type: java.lang.String
    - id: throwable
      type: java.lang.Throwable
    - id: context
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext(java.lang.String,com.azure.core.util.Context)
  id: extractContext(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: extractContext(String diagnosticId, Context context)
  nameWithType: OpenTelemetryTracer.extractContext(String diagnosticId, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext(String diagnosticId, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public Context extractContext(String diagnosticId, Context context)
    parameters:
    - id: diagnosticId
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)
  id: getSharedSpanBuilder(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: getSharedSpanBuilder(String spanName, Context context)
  nameWithType: OpenTelemetryTracer.getSharedSpanBuilder(String spanName, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder(String spanName, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public Context getSharedSpanBuilder(String spanName, Context context)
    parameters:
    - id: spanName
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: setAttribute(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: setAttribute(String key, String value, Context context)
  nameWithType: OpenTelemetryTracer.setAttribute(String key, String value, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute(String key, String value, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public void setAttribute(String key, String value, Context context)
    parameters:
    - id: key
      type: java.lang.String
    - id: value
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName(java.lang.String,com.azure.core.util.Context)
  id: setSpanName(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: setSpanName(String spanName, Context context)
  nameWithType: OpenTelemetryTracer.setSpanName(String spanName, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName(String spanName, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public Context setSpanName(String spanName, Context context)
    parameters:
    - id: spanName
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(java.lang.String,com.azure.core.util.Context)
  id: start(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: start(String spanName, Context context)
  nameWithType: OpenTelemetryTracer.start(String spanName, Context context)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(String spanName, Context context)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public Context start(String spanName, Context context)
    parameters:
    - id: spanName
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)
  id: start(java.lang.String,com.azure.core.util.Context,com.azure.core.util.tracing.ProcessKind)
  artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.4
  parent: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer
  langs:
  - java
  name: start(String spanName, Context context, ProcessKind processKind)
  nameWithType: OpenTelemetryTracer.start(String spanName, Context context, ProcessKind processKind)
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start(String spanName, Context context, ProcessKind processKind)
  overload: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start*
  type: Method
  package: com.azure.core.tracing.opentelemetry
  syntax:
    content: public Context start(String spanName, Context context, ProcessKind processKind)
    parameters:
    - id: spanName
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    - id: processKind
      type: com.azure.core.util.tracing.ProcessKind
    return:
      type: com.azure.core.util.Context
references:
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer*
  name: OpenTelemetryTracer
  nameWithType: OpenTelemetryTracer.OpenTelemetryTracer
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.OpenTelemetryTracer
  package: com.azure.core.tracing.opentelemetry
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start*
  name: start
  nameWithType: OpenTelemetryTracer.start
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.start
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.util.tracing.ProcessKind
  spec.java:
  - uid: com.azure.core.util.tracing.ProcessKind
    name: ProcessKind
    fullName: com.azure.core.util.tracing.ProcessKind
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end*
  name: end
  nameWithType: OpenTelemetryTracer.end
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.end
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute*
  name: setAttribute
  nameWithType: OpenTelemetryTracer.setAttribute
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setAttribute
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName*
  name: setSpanName
  nameWithType: OpenTelemetryTracer.setSpanName
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.setSpanName
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink*
  name: addLink
  nameWithType: OpenTelemetryTracer.addLink
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.addLink
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext*
  name: extractContext
  nameWithType: OpenTelemetryTracer.extractContext
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.extractContext
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder*
  name: getSharedSpanBuilder
  nameWithType: OpenTelemetryTracer.getSharedSpanBuilder
  fullName: com.azure.core.tracing.opentelemetry.OpenTelemetryTracer.getSharedSpanBuilder
  package: com.azure.core.tracing.opentelemetry
- uid: com.azure.core.util.tracing.Tracer
  name: Tracer
  nameWithType: Tracer
  fullName: com.azure.core.util.tracing.Tracer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
