### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity"
fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity"
name: "DatabricksSparkPythonActivity"
nameWithType: "DatabricksSparkPythonActivity"
summary: "Databricks<wbr>Spark<wbr>Python activity."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.Activity.getAdditionalProperties()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getDependsOn()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getDescription()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getName()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getUserProperties()"
- "com.azure.analytics.synapse.artifacts.models.Activity.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getLinkedServiceName()"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getPolicy()"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DatabricksSparkPythonActivity extends ExecutionActivity"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.DatabricksSparkPythonActivity()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.DatabricksSparkPythonActivity()"
  name: "DatabricksSparkPythonActivity()"
  nameWithType: "DatabricksSparkPythonActivity.DatabricksSparkPythonActivity()"
  syntax: "public DatabricksSparkPythonActivity()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getLibraries()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getLibraries()"
  name: "getLibraries()"
  nameWithType: "DatabricksSparkPythonActivity.getLibraries()"
  summary: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  syntax: "public List<Map<String,Object>> getLibraries()"
  desc: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the libraries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getParameters()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getParameters()"
  name: "getParameters()"
  nameWithType: "DatabricksSparkPythonActivity.getParameters()"
  summary: "Get the parameters property: Command line parameters that will be passed to the Python file."
  syntax: "public List<Object> getParameters()"
  desc: "Get the parameters property: Command line parameters that will be passed to the Python file."
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getPythonFile()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.getPythonFile()"
  name: "getPythonFile()"
  nameWithType: "DatabricksSparkPythonActivity.getPythonFile()"
  summary: "Get the python<wbr>File property: The URI of the Python file to be executed."
  syntax: "public Object getPythonFile()"
  desc: "Get the pythonFile property: The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string)."
  returns:
    description: "the pythonFile value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  name: "setDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "DatabricksSparkPythonActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the depends<wbr>On property: Activity depends on condition."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityDependency?alt=com.azure.analytics.synapse.artifacts.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksSparkPythonActivity setDependsOn(List<ActivityDependency> dependsOn)"
  desc: "Set the dependsOn property: Activity depends on condition."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setDescription(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setDescription(String description)"
  name: "setDescription(String description)"
  nameWithType: "DatabricksSparkPythonActivity.setDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkPythonActivity setDescription(String description)"
  desc: "Set the description property: Activity description."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setLibraries(java.util.List<java.util.Map<java.lang.String,java.lang.Object>>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setLibraries(List<Map<String,Object>> libraries)"
  name: "setLibraries(List<Map<String,Object>> libraries)"
  nameWithType: "DatabricksSparkPythonActivity.setLibraries(List<Map<String,Object>> libraries)"
  summary: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  parameters:
  - description: "the libraries value to set."
    name: "libraries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public DatabricksSparkPythonActivity setLibraries(List<Map<String,Object>> libraries)"
  desc: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the DatabricksSparkPythonActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "DatabricksSparkPythonActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linked<wbr>Service<wbr>Name property: Linked service reference."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceReference?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkPythonActivity setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  desc: "Set the linkedServiceName property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setName(String name)"
  name: "setName(String name)"
  nameWithType: "DatabricksSparkPythonActivity.setName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkPythonActivity setName(String name)"
  desc: "Set the name property: Activity name."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setParameters(java.util.List<java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setParameters(List<Object> parameters)"
  name: "setParameters(List<Object> parameters)"
  nameWithType: "DatabricksSparkPythonActivity.setParameters(List<Object> parameters)"
  summary: "Set the parameters property: Command line parameters that will be passed to the Python file."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksSparkPythonActivity setParameters(List<Object> parameters)"
  desc: "Set the parameters property: Command line parameters that will be passed to the Python file."
  returns:
    description: "the DatabricksSparkPythonActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setPolicy(ActivityPolicy policy)"
  name: "setPolicy(ActivityPolicy policy)"
  nameWithType: "DatabricksSparkPythonActivity.setPolicy(ActivityPolicy policy)"
  summary: "Set the policy property: Activity policy."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  parameters:
  - name: "policy"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityPolicy?alt=com.azure.analytics.synapse.artifacts.models.ActivityPolicy&text=ActivityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkPythonActivity setPolicy(ActivityPolicy policy)"
  desc: "Set the policy property: Activity policy."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setPythonFile(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setPythonFile(Object pythonFile)"
  name: "setPythonFile(Object pythonFile)"
  nameWithType: "DatabricksSparkPythonActivity.setPythonFile(Object pythonFile)"
  summary: "Set the python<wbr>File property: The URI of the Python file to be executed."
  parameters:
  - description: "the pythonFile value to set."
    name: "pythonFile"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkPythonActivity setPythonFile(Object pythonFile)"
  desc: "Set the pythonFile property: The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string)."
  returns:
    description: "the DatabricksSparkPythonActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity.setUserProperties(List<UserProperty> userProperties)"
  name: "setUserProperties(List<UserProperty> userProperties)"
  nameWithType: "DatabricksSparkPythonActivity.setUserProperties(List<UserProperty> userProperties)"
  summary: "Set the user<wbr>Properties property: Activity user properties."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.UserProperty?alt=com.azure.analytics.synapse.artifacts.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksSparkPythonActivity setUserProperties(List<UserProperty> userProperties)"
  desc: "Set the userProperties property: Activity user properties."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkPythonActivity&text=DatabricksSparkPythonActivity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "DatabricksSparkPython activity."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
