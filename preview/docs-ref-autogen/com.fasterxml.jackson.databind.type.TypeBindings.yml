### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  id: TypeBindings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.TypeBindings.asKey(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,java.util.List<com.fasterxml.jackson.databind.JavaType>)
  - com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings()
  - com.fasterxml.jackson.databind.type.TypeBindings.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.type.TypeBindings.findBoundType(java.lang.String)
  - com.fasterxml.jackson.databind.type.TypeBindings.getBoundName(int)
  - com.fasterxml.jackson.databind.type.TypeBindings.getBoundType(int)
  - com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters()
  - com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound(java.lang.String)
  - com.fasterxml.jackson.databind.type.TypeBindings.hashCode()
  - com.fasterxml.jackson.databind.type.TypeBindings.isEmpty()
  - com.fasterxml.jackson.databind.type.TypeBindings.readResolve()
  - com.fasterxml.jackson.databind.type.TypeBindings.size()
  - com.fasterxml.jackson.databind.type.TypeBindings.toString()
  - com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray()
  - com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable(java.lang.String)
  langs:
  - java
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Helper class used for resolving type parameters for given class
  syntax:
    content: public class TypeBindings implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.TypeBindings.TypeBindings(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[])
  id: TypeBindings(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: TypeBindings(String[] names, JavaType[] types, String[] uvars)
  nameWithType: TypeBindings.TypeBindings(String[] names, JavaType[] types, String[] uvars)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.TypeBindings(String[] names, JavaType[] types, String[] uvars)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.TypeBindings*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: private TypeBindings(String[] names, JavaType[] types, String[] uvars)
    parameters:
    - id: names
      type: java.lang.String[]
    - id: types
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: uvars
      type: java.lang.String[]
- uid: com.fasterxml.jackson.databind.type.TypeBindings.asKey(java.lang.Class<?>)
  id: asKey(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: asKey(Class<?> rawBase)
  nameWithType: TypeBindings.asKey(Class<?> rawBase)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.asKey(Class<?> rawBase)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.asKey*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Factory method that will create an object that can be used as a key for caching purposes by <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref>
  syntax:
    content: public Object asKey(Class<?> rawBase)
    parameters:
    - id: rawBase
      type: java.lang.Class<?>
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  id: create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: create(Class<?> erasedType, JavaType typeArg1)
  nameWithType: TypeBindings.create(Class<?> erasedType, JavaType typeArg1)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.create(Class<?> erasedType, JavaType typeArg1)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.create*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static TypeBindings create(Class<?> erasedType, JavaType typeArg1)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: typeArg1
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)
  nameWithType: TypeBindings.create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.create*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static TypeBindings create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: typeArg1
      type: com.fasterxml.jackson.databind.JavaType
    - id: typeArg2
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  id: create(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: create(Class<?> erasedType, JavaType[] types)
  nameWithType: TypeBindings.create(Class<?> erasedType, JavaType[] types)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.create(Class<?> erasedType, JavaType[] types)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.create*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static TypeBindings create(Class<?> erasedType, JavaType[] types)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: types
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.create(java.lang.Class<?>,java.util.List<com.fasterxml.jackson.databind.JavaType>)
  id: create(java.lang.Class<?>,java.util.List<com.fasterxml.jackson.databind.JavaType>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: create(Class<?> erasedType, List<JavaType> typeList)
  nameWithType: TypeBindings.create(Class<?> erasedType, List<JavaType> typeList)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.create(Class<?> erasedType, List<JavaType> typeList)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.create*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Factory method for constructing bindings for given class using specified type parameters.
  syntax:
    content: public static TypeBindings create(Class<?> erasedType, List<JavaType> typeList)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: typeList
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  id: createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: createIfNeeded(Class<?> erasedType, JavaType typeArg1)
  nameWithType: TypeBindings.createIfNeeded(Class<?> erasedType, JavaType typeArg1)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(Class<?> erasedType, JavaType typeArg1)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Alternate factory method that may be called if it is possible that type does or does not require type parameters; this is mostly useful for collection- and map-like types.
  syntax:
    content: public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType typeArg1)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: typeArg1
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  id: createIfNeeded(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: createIfNeeded(Class<?> erasedType, JavaType[] types)
  nameWithType: TypeBindings.createIfNeeded(Class<?> erasedType, JavaType[] types)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(Class<?> erasedType, JavaType[] types)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Alternate factory method that may be called if it is possible that type does or does not require type parameters; this is mostly useful for collection- and map-like types.
  syntax:
    content: public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType[] types)
    parameters:
    - id: erasedType
      type: java.lang.Class<?>
    - id: types
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings()
  id: emptyBindings()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: emptyBindings()
  nameWithType: TypeBindings.emptyBindings()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static TypeBindings emptyBindings()
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.type.TypeBindings.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: equals(Object o)
  nameWithType: TypeBindings.equals(Object o)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.equals(Object o)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.equals*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBindings.findBoundType(java.lang.String)
  id: findBoundType(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: findBoundType(String name)
  nameWithType: TypeBindings.findBoundType(String name)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.findBoundType(String name)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.findBoundType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Find type bound to specified name, if there is one; returns bound type if so, null if not.
  syntax:
    content: public JavaType findBoundType(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getBoundName(int)
  id: getBoundName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: getBoundName(int index)
  nameWithType: TypeBindings.getBoundName(int index)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getBoundName(int index)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.getBoundName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String getBoundName(int index)
    parameters:
    - id: index
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getBoundType(int)
  id: getBoundType(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: getBoundType(int index)
  nameWithType: TypeBindings.getBoundType(int index)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getBoundType(int index)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.getBoundType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public JavaType getBoundType(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters()
  id: getTypeParameters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: getTypeParameters()
  nameWithType: TypeBindings.getTypeParameters()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Accessor for getting bound types in declaration order
  syntax:
    content: public List<JavaType> getTypeParameters()
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
- uid: com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound(java.lang.String)
  id: hasUnbound(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: hasUnbound(String name)
  nameWithType: TypeBindings.hasUnbound(String name)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound(String name)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean hasUnbound(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBindings.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: hashCode()
  nameWithType: TypeBindings.hashCode()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.hashCode()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.type.TypeBindings.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: isEmpty()
  nameWithType: TypeBindings.isEmpty()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.isEmpty()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.isEmpty*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBindings.readResolve()
  id: readResolve()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: readResolve()
  nameWithType: TypeBindings.readResolve()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.readResolve()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.readResolve*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected Object readResolve()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.type.TypeBindings.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: size()
  nameWithType: TypeBindings.size()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.size()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.size*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Returns number of bindings contained
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.type.TypeBindings.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: toString()
  nameWithType: TypeBindings.toString()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.toString()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.toString*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray()
  id: typeParameterArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: typeParameterArray()
  nameWithType: TypeBindings.typeParameterArray()
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray()
  overload: com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected JavaType[] typeParameterArray()
    return:
      type: com.fasterxml.jackson.databind.JavaType[]
- uid: com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable(java.lang.String)
  id: withUnboundVariable(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeBindings
  langs:
  - java
  name: withUnboundVariable(String name)
  nameWithType: TypeBindings.withUnboundVariable(String name)
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable(String name)
  overload: com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for creating an instance that has same bindings as this object, plus an indicator for additional type variable that may be unbound within this context; this is needed to resolve recursive self-references.
  syntax:
    content: public TypeBindings withUnboundVariable(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
references:
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.type.TypeBindings.TypeBindings*
  name: TypeBindings
  nameWithType: TypeBindings.TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.TypeBindings
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings*
  name: emptyBindings
  nameWithType: TypeBindings.emptyBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.type.TypeBindings.readResolve*
  name: readResolve
  nameWithType: TypeBindings.readResolve
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.readResolve
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.util.List<com.fasterxml.jackson.databind.JavaType>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeBindings.create*
  name: create
  nameWithType: TypeBindings.create
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.create
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded*
  name: createIfNeeded
  nameWithType: TypeBindings.createIfNeeded
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable*
  name: withUnboundVariable
  nameWithType: TypeBindings.withUnboundVariable
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.findBoundType*
  name: findBoundType
  nameWithType: TypeBindings.findBoundType
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.findBoundType
  package: com.fasterxml.jackson.databind.type
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.type.TypeBindings.isEmpty*
  name: isEmpty
  nameWithType: TypeBindings.isEmpty
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.isEmpty
  package: com.fasterxml.jackson.databind.type
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.type.TypeBindings.size*
  name: size
  nameWithType: TypeBindings.size
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.size
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getBoundName*
  name: getBoundName
  nameWithType: TypeBindings.getBoundName
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getBoundName
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getBoundType*
  name: getBoundType
  nameWithType: TypeBindings.getBoundType
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getBoundType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters*
  name: getTypeParameters
  nameWithType: TypeBindings.getTypeParameters
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound*
  name: hasUnbound
  nameWithType: TypeBindings.hasUnbound
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.hasUnbound
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.asKey*
  name: asKey
  nameWithType: TypeBindings.asKey
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.asKey
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.toString*
  name: toString
  nameWithType: TypeBindings.toString
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.toString
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.hashCode*
  name: hashCode
  nameWithType: TypeBindings.hashCode
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.hashCode
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.equals*
  name: equals
  nameWithType: TypeBindings.equals
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.equals
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray*
  name: typeParameterArray
  nameWithType: TypeBindings.typeParameterArray
  fullName: com.fasterxml.jackson.databind.type.TypeBindings.typeParameterArray
  package: com.fasterxml.jackson.databind.type
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
