### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions"
fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions"
name: "CreateEcKeyOptions"
nameWithType: "CreateEcKeyOptions"
summary: "Represents the configurable options to create an EC key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getExpiresOn()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyOperations()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyType()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getName()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getNotBefore()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getReleasePolicy()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.getTags()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.isEnabled()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.isExportable()"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setEnabled(java.lang.Boolean)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExpiresOn(java.time.OffsetDateTime)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExportable(java.lang.Boolean)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setKeyOperations(com.azure.security.keyvault.keys.models.KeyOperation...)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setNotBefore(java.time.OffsetDateTime)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setReleasePolicy(com.azure.security.keyvault.keys.models.KeyReleasePolicy)"
- "com.azure.security.keyvault.keys.models.CreateKeyOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CreateEcKeyOptions extends CreateKeyOptions"
constructors:
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.CreateEcKeyOptions(java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.CreateEcKeyOptions(String name)"
  name: "CreateEcKeyOptions(String name)"
  nameWithType: "CreateEcKeyOptions.CreateEcKeyOptions(String name)"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> with `name` as name of the EC key."
  parameters:
  - description: "The name of the EC key."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions(String name)"
  desc: "Creates a <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> with `name` as name of the EC key."
methods:
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getCurveName()"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getCurveName()"
  name: "getCurveName()"
  nameWithType: "CreateEcKeyOptions.getCurveName()"
  summary: "Get the curve."
  syntax: "public KeyCurveName getCurveName()"
  desc: "Get the curve."
  returns:
    description: "The curve name."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyCurveName?alt=com.azure.security.keyvault.keys.models.KeyCurveName&text=KeyCurveName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.isHardwareProtected()"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.isHardwareProtected()"
  name: "isHardwareProtected()"
  nameWithType: "CreateEcKeyOptions.isHardwareProtected()"
  summary: "Get the HSM value of the key being created."
  syntax: "public Boolean isHardwareProtected()"
  desc: "Get the HSM value of the key being created."
  returns:
    description: "The HSM value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setCurveName(com.azure.security.keyvault.keys.models.KeyCurveName)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setCurveName(KeyCurveName curveName)"
  name: "setCurveName(KeyCurveName curveName)"
  nameWithType: "CreateEcKeyOptions.setCurveName(KeyCurveName curveName)"
  summary: "Set the curve name."
  parameters:
  - description: "The curve name to set."
    name: "curveName"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyCurveName?alt=com.azure.security.keyvault.keys.models.KeyCurveName&text=KeyCurveName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setCurveName(KeyCurveName curveName)"
  desc: "Set the curve name."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setEnabled(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setEnabled(Boolean enabled)"
  name: "setEnabled(Boolean enabled)"
  nameWithType: "CreateEcKeyOptions.setEnabled(Boolean enabled)"
  summary: "Set a value that indicates if the key is enabled."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setEnabled(java.lang.Boolean)"
  parameters:
  - description: "The enabled value to set."
    name: "enabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setEnabled(Boolean enabled)"
  desc: "Set a value that indicates if the key is enabled."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setExpiresOn(java.time.OffsetDateTime)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setExpiresOn(OffsetDateTime expiresOn)"
  name: "setExpiresOn(OffsetDateTime expiresOn)"
  nameWithType: "CreateEcKeyOptions.setExpiresOn(OffsetDateTime expiresOn)"
  summary: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> UTC time."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExpiresOn(java.time.OffsetDateTime)"
  parameters:
  - description: "The expiry time to set for the key."
    name: "expiresOn"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setExpiresOn(OffsetDateTime expiresOn)"
  desc: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> UTC time."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setExportable(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setExportable(Boolean exportable)"
  name: "setExportable(Boolean exportable)"
  nameWithType: "CreateEcKeyOptions.setExportable(Boolean exportable)"
  summary: "Set a flag that indicates if the private key can be exported."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExportable(java.lang.Boolean)"
  parameters:
  - description: "A flag that indicates if the private key can be exported."
    name: "exportable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setExportable(Boolean exportable)"
  desc: "Set a flag that indicates if the private key can be exported."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setHardwareProtected(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setHardwareProtected(Boolean hardwareProtected)"
  name: "setHardwareProtected(Boolean hardwareProtected)"
  nameWithType: "CreateEcKeyOptions.setHardwareProtected(Boolean hardwareProtected)"
  summary: "Set whether the key being created is of HSM type or not."
  parameters:
  - description: "The HSM value to set."
    name: "hardwareProtected"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setHardwareProtected(Boolean hardwareProtected)"
  desc: "Set whether the key being created is of HSM type or not."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setKeyOperations(com.azure.security.keyvault.keys.models.KeyOperation...)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setKeyOperations(KeyOperation[] keyOperations)"
  name: "setKeyOperations(KeyOperation[] keyOperations)"
  nameWithType: "CreateEcKeyOptions.setKeyOperations(KeyOperation[] keyOperations)"
  summary: "Set the key operations."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setKeyOperations(com.azure.security.keyvault.keys.models.KeyOperation...)"
  parameters:
  - description: "The key operations to set."
    name: "keyOperations"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyOperation?alt=com.azure.security.keyvault.keys.models.KeyOperation&text=KeyOperation\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CreateEcKeyOptions setKeyOperations(KeyOperation[] keyOperations)"
  desc: "Set the key operations."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setNotBefore(java.time.OffsetDateTime)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setNotBefore(OffsetDateTime notBefore)"
  name: "setNotBefore(OffsetDateTime notBefore)"
  nameWithType: "CreateEcKeyOptions.setNotBefore(OffsetDateTime notBefore)"
  summary: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> UTC time."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setNotBefore(java.time.OffsetDateTime)"
  parameters:
  - description: "The notBefore UTC time to set."
    name: "notBefore"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setNotBefore(OffsetDateTime notBefore)"
  desc: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> UTC time."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setReleasePolicy(com.azure.security.keyvault.keys.models.KeyReleasePolicy)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setReleasePolicy(KeyReleasePolicy releasePolicy)"
  name: "setReleasePolicy(KeyReleasePolicy releasePolicy)"
  nameWithType: "CreateEcKeyOptions.setReleasePolicy(KeyReleasePolicy releasePolicy)"
  summary: "Set the policy rules under which the key can be exported."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setReleasePolicy(com.azure.security.keyvault.keys.models.KeyReleasePolicy)"
  parameters:
  - description: "The policy rules to set."
    name: "releasePolicy"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyReleasePolicy?alt=com.azure.security.keyvault.keys.models.KeyReleasePolicy&text=KeyReleasePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateEcKeyOptions setReleasePolicy(KeyReleasePolicy releasePolicy)"
  desc: "Set the policy rules under which the key can be exported."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.security.keyvault.keys.models.CreateEcKeyOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "CreateEcKeyOptions.setTags(Map<String,String> tags)"
  summary: "Set the tags to be associated with the key."
  overridden: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - description: "The tags to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateEcKeyOptions setTags(Map<String,String> tags)"
  desc: "Set the tags to be associated with the key."
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the configurable options to create an EC key."
metadata: {}
package: "com.azure.security.keyvault.keys.models"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.7
