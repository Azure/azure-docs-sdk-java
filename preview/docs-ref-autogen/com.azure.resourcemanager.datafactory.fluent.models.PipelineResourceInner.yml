### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner"
name: "PipelineResourceInner"
nameWithType: "PipelineResourceInner"
summary: "Pipeline resource type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PipelineResourceInner extends SubResource"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.PipelineResourceInner()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.PipelineResourceInner()"
  name: "PipelineResourceInner()"
  nameWithType: "PipelineResourceInner.PipelineResourceInner()"
  syntax: "public PipelineResourceInner()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.activities()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.activities()"
  name: "activities()"
  nameWithType: "PipelineResourceInner.activities()"
  summary: "Get the activities property: List of activities in pipeline."
  syntax: "public List<Activity> activities()"
  desc: "Get the activities property: List of activities in pipeline."
  returns:
    description: "the activities value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.additionalProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.additionalProperties()"
  name: "additionalProperties()"
  nameWithType: "PipelineResourceInner.additionalProperties()"
  summary: "Get the additional<wbr>Properties property: Pipeline resource type."
  syntax: "public Map<String,Object> additionalProperties()"
  desc: "Get the additionalProperties property: Pipeline resource type."
  returns:
    description: "the additionalProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.annotations()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.annotations()"
  name: "annotations()"
  nameWithType: "PipelineResourceInner.annotations()"
  summary: "Get the annotations property: List of tags that can be used for describing the Pipeline."
  syntax: "public List<Object> annotations()"
  desc: "Get the annotations property: List of tags that can be used for describing the Pipeline."
  returns:
    description: "the annotations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.concurrency()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.concurrency()"
  name: "concurrency()"
  nameWithType: "PipelineResourceInner.concurrency()"
  summary: "Get the concurrency property: The max number of concurrent runs for the pipeline."
  syntax: "public Integer concurrency()"
  desc: "Get the concurrency property: The max number of concurrent runs for the pipeline."
  returns:
    description: "the concurrency value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.description()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.description()"
  name: "description()"
  nameWithType: "PipelineResourceInner.description()"
  summary: "Get the description property: The description of the pipeline."
  syntax: "public String description()"
  desc: "Get the description property: The description of the pipeline."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.etag()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.etag()"
  name: "etag()"
  nameWithType: "PipelineResourceInner.etag()"
  summary: "Get the etag property: Etag identifies change in the resource."
  syntax: "public String etag()"
  desc: "Get the etag property: Etag identifies change in the resource."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.folder()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.folder()"
  name: "folder()"
  nameWithType: "PipelineResourceInner.folder()"
  summary: "Get the folder property: The folder that this Pipeline is in."
  syntax: "public PipelineFolder folder()"
  desc: "Get the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
  returns:
    description: "the folder value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineFolder?alt=com.azure.resourcemanager.datafactory.models.PipelineFolder&text=PipelineFolder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.name()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.name()"
  name: "name()"
  nameWithType: "PipelineResourceInner.name()"
  summary: "Get the name property: The resource name."
  syntax: "public String name()"
  desc: "Get the name property: The resource name."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.parameters()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.parameters()"
  name: "parameters()"
  nameWithType: "PipelineResourceInner.parameters()"
  summary: "Get the parameters property: List of parameters for pipeline."
  syntax: "public Map<String,ParameterSpecification> parameters()"
  desc: "Get the parameters property: List of parameters for pipeline."
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.policy()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.policy()"
  name: "policy()"
  nameWithType: "PipelineResourceInner.policy()"
  summary: "Get the policy property: Pipeline Policy."
  syntax: "public PipelinePolicy policy()"
  desc: "Get the policy property: Pipeline Policy."
  returns:
    description: "the policy value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelinePolicy?alt=com.azure.resourcemanager.datafactory.models.PipelinePolicy&text=PipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.runDimensions()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.runDimensions()"
  name: "runDimensions()"
  nameWithType: "PipelineResourceInner.runDimensions()"
  summary: "Get the run<wbr>Dimensions property: Dimensions emitted by Pipeline."
  syntax: "public Map<String,Object> runDimensions()"
  desc: "Get the runDimensions property: Dimensions emitted by Pipeline."
  returns:
    description: "the runDimensions value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.type()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.type()"
  name: "type()"
  nameWithType: "PipelineResourceInner.type()"
  summary: "Get the type property: The resource type."
  syntax: "public String type()"
  desc: "Get the type property: The resource type."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.validate()"
  name: "validate()"
  nameWithType: "PipelineResourceInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.variables()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.variables()"
  name: "variables()"
  nameWithType: "PipelineResourceInner.variables()"
  summary: "Get the variables property: List of variables for pipeline."
  syntax: "public Map<String,VariableSpecification> variables()"
  desc: "Get the variables property: List of variables for pipeline."
  returns:
    description: "the variables value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withActivities(java.util.List<com.azure.resourcemanager.datafactory.models.Activity>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withActivities(List<Activity> activities)"
  name: "withActivities(List<Activity> activities)"
  nameWithType: "PipelineResourceInner.withActivities(List<Activity> activities)"
  summary: "Set the activities property: List of activities in pipeline."
  parameters:
  - description: "the activities value to set."
    name: "activities"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withActivities(List<Activity> activities)"
  desc: "Set the activities property: List of activities in pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withAdditionalProperties(Map<String,Object> additionalProperties)"
  name: "withAdditionalProperties(Map<String,Object> additionalProperties)"
  nameWithType: "PipelineResourceInner.withAdditionalProperties(Map<String,Object> additionalProperties)"
  summary: "Set the additional<wbr>Properties property: Pipeline resource type."
  parameters:
  - description: "the additionalProperties value to set."
    name: "additionalProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withAdditionalProperties(Map<String,Object> additionalProperties)"
  desc: "Set the additionalProperties property: Pipeline resource type."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "PipelineResourceInner.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the Pipeline."
  parameters:
  - description: "the annotations value to set."
    name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the Pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withConcurrency(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withConcurrency(Integer concurrency)"
  name: "withConcurrency(Integer concurrency)"
  nameWithType: "PipelineResourceInner.withConcurrency(Integer concurrency)"
  summary: "Set the concurrency property: The max number of concurrent runs for the pipeline."
  parameters:
  - description: "the concurrency value to set."
    name: "concurrency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineResourceInner withConcurrency(Integer concurrency)"
  desc: "Set the concurrency property: The max number of concurrent runs for the pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "PipelineResourceInner.withDescription(String description)"
  summary: "Set the description property: The description of the pipeline."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineResourceInner withDescription(String description)"
  desc: "Set the description property: The description of the pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withFolder(com.azure.resourcemanager.datafactory.models.PipelineFolder)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withFolder(PipelineFolder folder)"
  name: "withFolder(PipelineFolder folder)"
  nameWithType: "PipelineResourceInner.withFolder(PipelineFolder folder)"
  summary: "Set the folder property: The folder that this Pipeline is in."
  parameters:
  - description: "the folder value to set."
    name: "folder"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineFolder?alt=com.azure.resourcemanager.datafactory.models.PipelineFolder&text=PipelineFolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineResourceInner withFolder(PipelineFolder folder)"
  desc: "Set the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withId(String id)"
  name: "withId(String id)"
  nameWithType: "PipelineResourceInner.withId(String id)"
  overridden: "com.azure.core.management.SubResource.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineResourceInner withId(String id)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "PipelineResourceInner.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: List of parameters for pipeline."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: List of parameters for pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withPolicy(com.azure.resourcemanager.datafactory.models.PipelinePolicy)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withPolicy(PipelinePolicy policy)"
  name: "withPolicy(PipelinePolicy policy)"
  nameWithType: "PipelineResourceInner.withPolicy(PipelinePolicy policy)"
  summary: "Set the policy property: Pipeline Policy."
  parameters:
  - description: "the policy value to set."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelinePolicy?alt=com.azure.resourcemanager.datafactory.models.PipelinePolicy&text=PipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineResourceInner withPolicy(PipelinePolicy policy)"
  desc: "Set the policy property: Pipeline Policy."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withRunDimensions(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withRunDimensions(Map<String,Object> runDimensions)"
  name: "withRunDimensions(Map<String,Object> runDimensions)"
  nameWithType: "PipelineResourceInner.withRunDimensions(Map<String,Object> runDimensions)"
  summary: "Set the run<wbr>Dimensions property: Dimensions emitted by Pipeline."
  parameters:
  - description: "the runDimensions value to set."
    name: "runDimensions"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withRunDimensions(Map<String,Object> runDimensions)"
  desc: "Set the runDimensions property: Dimensions emitted by Pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withVariables(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.VariableSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner.withVariables(Map<String,VariableSpecification> variables)"
  name: "withVariables(Map<String,VariableSpecification> variables)"
  nameWithType: "PipelineResourceInner.withVariables(Map<String,VariableSpecification> variables)"
  summary: "Set the variables property: List of variables for pipeline."
  parameters:
  - description: "the variables value to set."
    name: "variables"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceInner withVariables(Map<String,VariableSpecification> variables)"
  desc: "Set the variables property: List of variables for pipeline."
  returns:
    description: "the PipelineResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner?alt=com.azure.resourcemanager.datafactory.fluent.models.PipelineResourceInner&text=PipelineResourceInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Pipeline resource type."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
