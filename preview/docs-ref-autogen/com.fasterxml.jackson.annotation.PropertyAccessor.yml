### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.PropertyAccessor
  id: PropertyAccessor
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.PropertyAccessor.ALL
  - com.fasterxml.jackson.annotation.PropertyAccessor.CREATOR
  - com.fasterxml.jackson.annotation.PropertyAccessor.FIELD
  - com.fasterxml.jackson.annotation.PropertyAccessor.GETTER
  - com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER
  - com.fasterxml.jackson.annotation.PropertyAccessor.NONE
  - com.fasterxml.jackson.annotation.PropertyAccessor.SETTER
  - com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled()
  - com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled()
  - com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled()
  - com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled()
  - com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled()
  - com.fasterxml.jackson.annotation.PropertyAccessor.valueOf(java.lang.String)
  - com.fasterxml.jackson.annotation.PropertyAccessor.values()
  langs:
  - java
  name: PropertyAccessor
  nameWithType: PropertyAccessor
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor
  type: Enum
  package: com.fasterxml.jackson.annotation
  summary: >-
    Enumeration used to define kinds of elements (called "property accessors") that annotations like <xref uid="com.fasterxml.jackson.annotation.JsonAutoDetect" data-throw-if-not-resolved="false">JsonAutoDetect</xref> apply to.


    In addition to method types (GETTER/IS\_GETTER, SETTER, CREATOR) and the field type (FIELD), 2 pseudo-types are defined for convenience: `ALWAYS` and `NONE`. These can be used to indicate, all or none of available method types (respectively), for use by annotations that takes `JsonMethod` argument.
  syntax:
    content: public enum PropertyAccessor extends Enum<PropertyAccessor>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.ALL
  id: ALL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: ALL
  nameWithType: PropertyAccessor.ALL
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.ALL
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: This pseudo-type indicates that all accessors are affected.
  syntax:
    content: public static final PropertyAccessor ALL
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.CREATOR
  id: CREATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: CREATOR
  nameWithType: PropertyAccessor.CREATOR
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.CREATOR
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Creators are constructors and (static) factory methods used to construct POJO instances for deserialization
  syntax:
    content: public static final PropertyAccessor CREATOR
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.FIELD
  id: FIELD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: FIELD
  nameWithType: PropertyAccessor.FIELD
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.FIELD
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Field refers to fields of regular Java objects. Although they are not really methods, addition of optional field-discovery in version 1.1 meant that there was need to enable/disable their auto-detection, and this is the place to add it in.
  syntax:
    content: public static final PropertyAccessor FIELD
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.GETTER
  id: GETTER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: GETTER
  nameWithType: PropertyAccessor.GETTER
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.GETTER
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: >-
    Getters are methods used to get a POJO field value for serialization, or, under certain conditions also for de-serialization. Latter can be used for effectively setting Collection or Map values in absence of setters, iff returned value is not a copy but actual value of the logical property.


    Since version 1.3, this does **NOT** include "is getters" (methods that return boolean and named 'isXxx' for property 'xxx'); instead, <xref uid="com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER" data-throw-if-not-resolved="false">#IS_GETTER</xref> is used\}.
  syntax:
    content: public static final PropertyAccessor GETTER
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER
  id: IS_GETTER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: IS_GETTER
  nameWithType: PropertyAccessor.IS_GETTER
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: "\"Is getters\" are getter-like methods that are named \"isXxx\" (instead of \"getXxx\" for getters) and return boolean value (either primitive, or <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\">java.lang.Boolean</xref>)."
  syntax:
    content: public static final PropertyAccessor IS_GETTER
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.NONE
  id: NONE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: NONE
  nameWithType: PropertyAccessor.NONE
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.NONE
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: This pseudo-type indicates that none of accessors if affected.
  syntax:
    content: public static final PropertyAccessor NONE
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.PropertyAccessor()
  id: PropertyAccessor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: PropertyAccessor()
  nameWithType: PropertyAccessor.PropertyAccessor()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.PropertyAccessor()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.PropertyAccessor*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: private PropertyAccessor()
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.SETTER
  id: SETTER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: SETTER
  nameWithType: PropertyAccessor.SETTER
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.SETTER
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Setters are methods used to set a POJO value for deserialization.
  syntax:
    content: public static final PropertyAccessor SETTER
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled()
  id: creatorEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: creatorEnabled()
  nameWithType: PropertyAccessor.creatorEnabled()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean creatorEnabled()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled()
  id: fieldEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: fieldEnabled()
  nameWithType: PropertyAccessor.fieldEnabled()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean fieldEnabled()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled()
  id: getterEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: getterEnabled()
  nameWithType: PropertyAccessor.getterEnabled()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean getterEnabled()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled()
  id: isGetterEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: isGetterEnabled()
  nameWithType: PropertyAccessor.isGetterEnabled()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean isGetterEnabled()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled()
  id: setterEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: setterEnabled()
  nameWithType: PropertyAccessor.setterEnabled()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean setterEnabled()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: valueOf(String name)
  nameWithType: PropertyAccessor.valueOf(String name)
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.valueOf(String name)
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.valueOf*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static PropertyAccessor valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.PropertyAccessor
  langs:
  - java
  name: values()
  nameWithType: PropertyAccessor.values()
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.values()
  overload: com.fasterxml.jackson.annotation.PropertyAccessor.values*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static PropertyAccessor[] values()
    return:
      type: com.fasterxml.jackson.annotation.PropertyAccessor[]
references:
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.PropertyAccessor*
  name: PropertyAccessor
  nameWithType: PropertyAccessor.PropertyAccessor
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.PropertyAccessor
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.PropertyAccessor[]
  spec.java:
  - uid: com.fasterxml.jackson.annotation.PropertyAccessor
    name: PropertyAccessor
    fullName: com.fasterxml.jackson.annotation.PropertyAccessor
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.values*
  name: values
  nameWithType: PropertyAccessor.values
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.values
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.valueOf*
  name: valueOf
  nameWithType: PropertyAccessor.valueOf
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.valueOf
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled*
  name: creatorEnabled
  nameWithType: PropertyAccessor.creatorEnabled
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled*
  name: getterEnabled
  nameWithType: PropertyAccessor.getterEnabled
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled*
  name: isGetterEnabled
  nameWithType: PropertyAccessor.isGetterEnabled
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled*
  name: setterEnabled
  nameWithType: PropertyAccessor.setterEnabled
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled*
  name: fieldEnabled
  nameWithType: PropertyAccessor.fieldEnabled
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Enum<com.fasterxml.jackson.annotation.PropertyAccessor>
  name: Enum<PropertyAccessor>
  nameWithType: Enum<PropertyAccessor>
  fullName: java.lang.Enum<com.fasterxml.jackson.annotation.PropertyAccessor>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
