### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.PropertyAccessor"
fullName: "com.fasterxml.jackson.annotation.PropertyAccessor"
name: "PropertyAccessor"
nameWithType: "PropertyAccessor"
summary: "Enumeration used to define kinds of elements (called \"property accessors\") that annotations like <xref uid=\"com.fasterxml.jackson.annotation.JsonAutoDetect\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonAutoDetect\"></xref> apply to.\n\nIn addition to method types (GETTER/IS\\_GETTER, SETTER, CREATOR) and the field type (FIELD), 2 pseudo-types are defined for convenience: `ALWAYS` and `NONE`. These can be used to indicate, all or none of available method types (respectively), for use by annotations that takes `JsonMethod` argument."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum PropertyAccessor extends Enum<PropertyAccessor>"
fields:
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.ALL"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.ALL"
  name: "ALL"
  nameWithType: "PropertyAccessor.ALL"
  summary: "This pseudo-type indicates that all accessors are affected."
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.CREATOR"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.CREATOR"
  name: "CREATOR"
  nameWithType: "PropertyAccessor.CREATOR"
  summary: "Creators are constructors and (static) factory methods used to construct POJO instances for deserialization"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.FIELD"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.FIELD"
  name: "FIELD"
  nameWithType: "PropertyAccessor.FIELD"
  summary: "Field refers to fields of regular Java objects. Although they are not really methods, addition of optional field-discovery in version 1.1 meant that there was need to enable/disable their auto-detection, and this is the place to add it in."
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.GETTER"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.GETTER"
  name: "GETTER"
  nameWithType: "PropertyAccessor.GETTER"
  summary: "Getters are methods used to get a POJO field value for serialization, or, under certain conditions also for de-serialization. Latter can be used for effectively setting Collection or Map values in absence of setters, iff returned value is not a copy but actual value of the logical property.\n\nSince version 1.3, this does **NOT** include \"is getters\" (methods that return boolean and named 'isXxx' for property 'xxx'); instead, <xref uid=\"com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#IS_GETTER\"></xref> is used\\}."
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.IS_GETTER"
  name: "IS_GETTER"
  nameWithType: "PropertyAccessor.IS_GETTER"
  summary: "\"Is getters\" are getter-like methods that are named \"isXxx\" (instead of \"getXxx\" for getters) and return boolean value (either primitive, or <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Boolean\"></xref>)."
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.NONE"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.NONE"
  name: "NONE"
  nameWithType: "PropertyAccessor.NONE"
  summary: "This pseudo-type indicates that none of accessors if affected."
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.SETTER"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.SETTER"
  name: "SETTER"
  nameWithType: "PropertyAccessor.SETTER"
  summary: "Setters are methods used to set a POJO value for deserialization."
methods:
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.creatorEnabled()"
  name: "creatorEnabled()"
  nameWithType: "PropertyAccessor.creatorEnabled()"
  syntax: "public boolean creatorEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.fieldEnabled()"
  name: "fieldEnabled()"
  nameWithType: "PropertyAccessor.fieldEnabled()"
  syntax: "public boolean fieldEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.getterEnabled()"
  name: "getterEnabled()"
  nameWithType: "PropertyAccessor.getterEnabled()"
  syntax: "public boolean getterEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.isGetterEnabled()"
  name: "isGetterEnabled()"
  nameWithType: "PropertyAccessor.isGetterEnabled()"
  syntax: "public boolean isGetterEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.setterEnabled()"
  name: "setterEnabled()"
  nameWithType: "PropertyAccessor.setterEnabled()"
  syntax: "public boolean setterEnabled()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "PropertyAccessor.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PropertyAccessor valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.PropertyAccessor?alt=com.fasterxml.jackson.annotation.PropertyAccessor&text=PropertyAccessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.PropertyAccessor.values()"
  fullName: "com.fasterxml.jackson.annotation.PropertyAccessor.values()"
  name: "values()"
  nameWithType: "PropertyAccessor.values()"
  syntax: "public static PropertyAccessor[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.PropertyAccessor?alt=com.fasterxml.jackson.annotation.PropertyAccessor&text=PropertyAccessor\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
