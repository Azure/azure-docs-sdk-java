### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator.equals*"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator<E>.equals"
name: "equals"
nameWithType: "ComparableComparator<E>.equals"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator.equals(java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator<E>.equals(Object object)"
  name: "equals(Object object)"
  nameWithType: "ComparableComparator<E>.equals(Object object)"
  summary: "Returns `true` iff *that* Object is is a <xref uid=\"java.util.Comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator\"></xref> whose ordering is known to be equivalent to mine.\n\nThis implementation returns `true` iff `object.` equals `this.getClass()`. Subclasses may want to override this behavior to remain consistent with the <xref uid=\"java.util.Comparator.equals*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator#equals(Object)\"></xref> contract."
  overridden: "java.lang.Object.equals(java.lang.Object)"
  parameters:
  - description: "the object to compare with"
    name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean equals(Object object)"
  returns:
    description: "<code>true</code> if equal"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.comparators"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
