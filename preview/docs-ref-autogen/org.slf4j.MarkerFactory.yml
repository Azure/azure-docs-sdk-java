### YamlMime:ManagedReference
items:
- uid: org.slf4j.MarkerFactory
  id: MarkerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j
  children:
  - org.slf4j.MarkerFactory.getDetachedMarker(java.lang.String)
  - org.slf4j.MarkerFactory.getIMarkerFactory()
  - org.slf4j.MarkerFactory.getMarker(java.lang.String)
  langs:
  - java
  name: MarkerFactory
  nameWithType: MarkerFactory
  fullName: org.slf4j.MarkerFactory
  type: Class
  package: org.slf4j
  summary: >-
    MarkerFactory is a utility class producing <xref uid="org.slf4j.Marker" data-throw-if-not-resolved="false">Marker</xref> instances as appropriate for the logging system currently in use.


    This class is essentially implemented as a wrapper around an <xref uid="org.slf4j.IMarkerFactory" data-throw-if-not-resolved="false">IMarkerFactory</xref> instance bound at compile time.


    Please note that all methods in this class are static.
  syntax:
    content: public class MarkerFactory
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.slf4j.MarkerFactory.MarkerFactory()
  id: MarkerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MarkerFactory
  langs:
  - java
  name: MarkerFactory()
  nameWithType: MarkerFactory.MarkerFactory()
  fullName: org.slf4j.MarkerFactory.MarkerFactory()
  overload: org.slf4j.MarkerFactory.MarkerFactory*
  type: Constructor
  package: org.slf4j
  syntax:
    content: private MarkerFactory()
- uid: org.slf4j.MarkerFactory.getDetachedMarker(java.lang.String)
  id: getDetachedMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MarkerFactory
  langs:
  - java
  name: getDetachedMarker(String name)
  nameWithType: MarkerFactory.getDetachedMarker(String name)
  fullName: org.slf4j.MarkerFactory.getDetachedMarker(String name)
  overload: org.slf4j.MarkerFactory.getDetachedMarker*
  type: Method
  package: org.slf4j
  summary: Create a marker which is detached (even at birth) from the MarkerFactory.
  syntax:
    content: public static Marker getDetachedMarker(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name of the marker
    return:
      type: org.slf4j.Marker
      description: a dangling marker
- uid: org.slf4j.MarkerFactory.getIMarkerFactory()
  id: getIMarkerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MarkerFactory
  langs:
  - java
  name: getIMarkerFactory()
  nameWithType: MarkerFactory.getIMarkerFactory()
  fullName: org.slf4j.MarkerFactory.getIMarkerFactory()
  overload: org.slf4j.MarkerFactory.getIMarkerFactory*
  type: Method
  package: org.slf4j
  summary: >-
    Return the <xref uid="org.slf4j.IMarkerFactory" data-throw-if-not-resolved="false">IMarkerFactory</xref>instance in use.


    The IMarkerFactory instance is usually bound with this class at compile time.
  syntax:
    content: public static IMarkerFactory getIMarkerFactory()
    return:
      type: org.slf4j.IMarkerFactory
      description: the IMarkerFactory instance in use
- uid: org.slf4j.MarkerFactory.getMarker(java.lang.String)
  id: getMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MarkerFactory
  langs:
  - java
  name: getMarker(String name)
  nameWithType: MarkerFactory.getMarker(String name)
  fullName: org.slf4j.MarkerFactory.getMarker(String name)
  overload: org.slf4j.MarkerFactory.getMarker*
  type: Method
  package: org.slf4j
  summary: Return a Marker instance as specified by the name parameter using the previously bound <xref uid="org.slf4j.IMarkerFactory" data-throw-if-not-resolved="false">IMarkerFactory</xref>instance.
  syntax:
    content: public static Marker getMarker(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name of the <xref uid="org.slf4j.Marker" data-throw-if-not-resolved="false">Marker</xref> object to return.
    return:
      type: org.slf4j.Marker
      description: marker
references:
- uid: org.slf4j.MarkerFactory.MarkerFactory*
  name: MarkerFactory
  nameWithType: MarkerFactory.MarkerFactory
  fullName: org.slf4j.MarkerFactory.MarkerFactory
  package: org.slf4j
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.Marker
  name: Marker
  nameWithType: Marker
  fullName: org.slf4j.Marker
- uid: org.slf4j.MarkerFactory.getMarker*
  name: getMarker
  nameWithType: MarkerFactory.getMarker
  fullName: org.slf4j.MarkerFactory.getMarker
  package: org.slf4j
- uid: org.slf4j.MarkerFactory.getDetachedMarker*
  name: getDetachedMarker
  nameWithType: MarkerFactory.getDetachedMarker
  fullName: org.slf4j.MarkerFactory.getDetachedMarker
  package: org.slf4j
- uid: org.slf4j.IMarkerFactory
  name: IMarkerFactory
  nameWithType: IMarkerFactory
  fullName: org.slf4j.IMarkerFactory
- uid: org.slf4j.MarkerFactory.getIMarkerFactory*
  name: getIMarkerFactory
  nameWithType: MarkerFactory.getIMarkerFactory
  fullName: org.slf4j.MarkerFactory.getIMarkerFactory
  package: org.slf4j
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
