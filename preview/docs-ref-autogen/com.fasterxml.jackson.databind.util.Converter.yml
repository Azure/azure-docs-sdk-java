### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.Converter
  id: Converter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.Converter.None
  - com.fasterxml.jackson.databind.util.Converter.convert(IN)
  - com.fasterxml.jackson.databind.util.Converter.getInputType(com.fasterxml.jackson.databind.type.TypeFactory)
  - com.fasterxml.jackson.databind.util.Converter.getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)
  langs:
  - java
  name: Converter<IN,OUT>
  nameWithType: Converter<IN,OUT>
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>
  type: Interface
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Helper interface for things that convert Objects of one type to another.


    NOTE: implementors are strongly encouraged to extend <xref uid="com.fasterxml.jackson.databind.util.StdConverter" data-throw-if-not-resolved="false">StdConverter</xref> instead of directly implementing <xref uid="com.fasterxml.jackson.databind.util.Converter" data-throw-if-not-resolved="false">Converter</xref>, since that can help with default implementation of typically boiler-plate code.
  syntax:
    content: public interface Converter<IN,OUT>
    typeParameters:
    - id: IN
    - id: OUT
- uid: com.fasterxml.jackson.databind.util.Converter.convert(IN)
  id: convert(IN)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.Converter
  langs:
  - java
  name: convert(IN value)
  nameWithType: Converter<IN,OUT>.convert(IN value)
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.convert(IN value)
  overload: com.fasterxml.jackson.databind.util.Converter.convert*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Main conversion method.
  syntax:
    content: public abstract OUT convert(IN value)
    parameters:
    - id: value
      type: IN
    return:
      type: OUT
- uid: com.fasterxml.jackson.databind.util.Converter.getInputType(com.fasterxml.jackson.databind.type.TypeFactory)
  id: getInputType(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.Converter
  langs:
  - java
  name: getInputType(TypeFactory typeFactory)
  nameWithType: Converter<IN,OUT>.getInputType(TypeFactory typeFactory)
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.getInputType(TypeFactory typeFactory)
  overload: com.fasterxml.jackson.databind.util.Converter.getInputType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be used to find out actual input (source) type; this usually can be determined from type parameters, but may need to be implemented differently from programmatically defined converters (which cannot change static type parameter bindings).
  syntax:
    content: public abstract JavaType getInputType(TypeFactory typeFactory)
    parameters:
    - id: typeFactory
      type: com.fasterxml.jackson.databind.type.TypeFactory
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.Converter.getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)
  id: getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.Converter
  langs:
  - java
  name: getOutputType(TypeFactory typeFactory)
  nameWithType: Converter<IN,OUT>.getOutputType(TypeFactory typeFactory)
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.getOutputType(TypeFactory typeFactory)
  overload: com.fasterxml.jackson.databind.util.Converter.getOutputType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be used to find out actual output (target) type; this usually can be determined from type parameters, but may need to be implemented differently from programmatically defined converters (which cannot change static type parameter bindings).
  syntax:
    content: public abstract JavaType getOutputType(TypeFactory typeFactory)
    parameters:
    - id: typeFactory
      type: com.fasterxml.jackson.databind.type.TypeFactory
    return:
      type: com.fasterxml.jackson.databind.JavaType
references:
- uid: IN
  spec.java:
  - uid: IN
    name: IN
    fullName: IN
- uid: OUT
  spec.java:
  - uid: OUT
    name: OUT
    fullName: OUT
- uid: com.fasterxml.jackson.databind.util.Converter.convert*
  name: convert
  nameWithType: Converter<IN,OUT>.convert
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.convert
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.Converter.getInputType*
  name: getInputType
  nameWithType: Converter<IN,OUT>.getInputType
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.getInputType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.Converter.getOutputType*
  name: getOutputType
  nameWithType: Converter<IN,OUT>.getOutputType
  fullName: com.fasterxml.jackson.databind.util.Converter<IN,OUT>.getOutputType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.Converter.None
  name: Converter.None
  nameWithType: Converter.None
  fullName: com.fasterxml.jackson.databind.util.Converter.None
