### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner"
fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner"
name: "ResourceSkuInner"
nameWithType: "ResourceSkuInner"
summary: "A resource SKU."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ResourceSkuInner"
constructors:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.ResourceSkuInner()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.ResourceSkuInner()"
  name: "ResourceSkuInner()"
  nameWithType: "ResourceSkuInner.ResourceSkuInner()"
  syntax: "public ResourceSkuInner()"
methods:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.capabilities()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.capabilities()"
  name: "capabilities()"
  nameWithType: "ResourceSkuInner.capabilities()"
  summary: "Get the capabilities property: A list of capabilities of this SKU, such as throughput or ops/sec."
  syntax: "public List<ResourceSkuCapabilities> capabilities()"
  desc: "Get the capabilities property: A list of capabilities of this SKU, such as throughput or ops/sec."
  returns:
    description: "the capabilities value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ResourceSkuCapabilities?alt=com.azure.resourcemanager.storagecache.models.ResourceSkuCapabilities&text=ResourceSkuCapabilities\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.locationInfo()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.locationInfo()"
  name: "locationInfo()"
  nameWithType: "ResourceSkuInner.locationInfo()"
  summary: "Get the location<wbr>Info property: The set of locations where the SKU is available."
  syntax: "public List<ResourceSkuLocationInfo> locationInfo()"
  desc: "Get the locationInfo property: The set of locations where the SKU is available."
  returns:
    description: "the locationInfo value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ResourceSkuLocationInfo?alt=com.azure.resourcemanager.storagecache.models.ResourceSkuLocationInfo&text=ResourceSkuLocationInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.locations()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.locations()"
  name: "locations()"
  nameWithType: "ResourceSkuInner.locations()"
  summary: "Get the locations property: The set of locations where the SKU is available."
  syntax: "public List<String> locations()"
  desc: "Get the locations property: The set of locations where the SKU is available. This is the supported and registered Azure Geo Regions (e.g., West US, East US, Southeast Asia, etc.)."
  returns:
    description: "the locations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.name()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.name()"
  name: "name()"
  nameWithType: "ResourceSkuInner.name()"
  summary: "Get the name property: The name of this SKU."
  syntax: "public String name()"
  desc: "Get the name property: The name of this SKU."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.resourceType()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.resourceType()"
  name: "resourceType()"
  nameWithType: "ResourceSkuInner.resourceType()"
  summary: "Get the resource<wbr>Type property: The type of resource the SKU applies to."
  syntax: "public String resourceType()"
  desc: "Get the resourceType property: The type of resource the SKU applies to."
  returns:
    description: "the resourceType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.restrictions()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.restrictions()"
  name: "restrictions()"
  nameWithType: "ResourceSkuInner.restrictions()"
  summary: "Get the restrictions property: The restrictions preventing this SKU from being used."
  syntax: "public List<Restriction> restrictions()"
  desc: "Get the restrictions property: The restrictions preventing this SKU from being used. This is empty if there are no restrictions."
  returns:
    description: "the restrictions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.Restriction?alt=com.azure.resourcemanager.storagecache.models.Restriction&text=Restriction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.validate()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.validate()"
  name: "validate()"
  nameWithType: "ResourceSkuInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withCapabilities(java.util.List<com.azure.resourcemanager.storagecache.models.ResourceSkuCapabilities>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withCapabilities(List<ResourceSkuCapabilities> capabilities)"
  name: "withCapabilities(List<ResourceSkuCapabilities> capabilities)"
  nameWithType: "ResourceSkuInner.withCapabilities(List<ResourceSkuCapabilities> capabilities)"
  summary: "Set the capabilities property: A list of capabilities of this SKU, such as throughput or ops/sec."
  parameters:
  - description: "the capabilities value to set."
    name: "capabilities"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ResourceSkuCapabilities?alt=com.azure.resourcemanager.storagecache.models.ResourceSkuCapabilities&text=ResourceSkuCapabilities\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResourceSkuInner withCapabilities(List<ResourceSkuCapabilities> capabilities)"
  desc: "Set the capabilities property: A list of capabilities of this SKU, such as throughput or ops/sec."
  returns:
    description: "the ResourceSkuInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner?alt=com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner&text=ResourceSkuInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withLocationInfo(java.util.List<com.azure.resourcemanager.storagecache.models.ResourceSkuLocationInfo>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withLocationInfo(List<ResourceSkuLocationInfo> locationInfo)"
  name: "withLocationInfo(List<ResourceSkuLocationInfo> locationInfo)"
  nameWithType: "ResourceSkuInner.withLocationInfo(List<ResourceSkuLocationInfo> locationInfo)"
  summary: "Set the location<wbr>Info property: The set of locations where the SKU is available."
  parameters:
  - description: "the locationInfo value to set."
    name: "locationInfo"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.ResourceSkuLocationInfo?alt=com.azure.resourcemanager.storagecache.models.ResourceSkuLocationInfo&text=ResourceSkuLocationInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResourceSkuInner withLocationInfo(List<ResourceSkuLocationInfo> locationInfo)"
  desc: "Set the locationInfo property: The set of locations where the SKU is available."
  returns:
    description: "the ResourceSkuInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner?alt=com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner&text=ResourceSkuInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ResourceSkuInner.withName(String name)"
  summary: "Set the name property: The name of this SKU."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceSkuInner withName(String name)"
  desc: "Set the name property: The name of this SKU."
  returns:
    description: "the ResourceSkuInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner?alt=com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner&text=ResourceSkuInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withRestrictions(java.util.List<com.azure.resourcemanager.storagecache.models.Restriction>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner.withRestrictions(List<Restriction> restrictions)"
  name: "withRestrictions(List<Restriction> restrictions)"
  nameWithType: "ResourceSkuInner.withRestrictions(List<Restriction> restrictions)"
  summary: "Set the restrictions property: The restrictions preventing this SKU from being used."
  parameters:
  - description: "the restrictions value to set."
    name: "restrictions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.Restriction?alt=com.azure.resourcemanager.storagecache.models.Restriction&text=Restriction\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResourceSkuInner withRestrictions(List<Restriction> restrictions)"
  desc: "Set the restrictions property: The restrictions preventing this SKU from being used. This is empty if there are no restrictions."
  returns:
    description: "the ResourceSkuInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner?alt=com.azure.resourcemanager.storagecache.fluent.models.ResourceSkuInner&text=ResourceSkuInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A resource SKU."
metadata: {}
package: "com.azure.resourcemanager.storagecache.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0-beta.6
