### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  id: SqlRuleFilter
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
  parent: com.azure.messaging.servicebus.administration.models
  children:
  - com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter(java.lang.String)
  - com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties()
  - com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression()
  langs:
  - java
  name: SqlRuleFilter
  nameWithType: SqlRuleFilter
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  type: Class
  package: com.azure.messaging.servicebus.administration.models
  summary: >-
    Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.


    A <xref uid="com.azure.messaging.servicebus.administration.models.SqlRuleFilter" data-throw-if-not-resolved="false">SqlRuleFilter</xref> holds a SQL-like condition expression that is evaluated in the broker against the arriving messages' user-defined properties and system properties. All system properties (which are all properties explicitly listed on the <xref uid="com.azure.messaging.servicebus.ServiceBusMessage" data-throw-if-not-resolved="false">ServiceBusMessage</xref> class) must be prefixed with `sys.` in the condition expression. The SQL subset implements testing for existence of properties (EXISTS), testing for null-values (IS NULL), logical NOT/AND/OR, relational operators, numeric arithmetic, and simple text pattern matching with LIKE.
  syntax:
    content: public class SqlRuleFilter extends RuleFilter
  inheritance:
  - java.lang.Object
  - com.azure.messaging.servicebus.administration.models.RuleFilter
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter(java.lang.String)
  id: SqlRuleFilter(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
  parent: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  langs:
  - java
  name: SqlRuleFilter(String sqlExpression)
  nameWithType: SqlRuleFilter.SqlRuleFilter(String sqlExpression)
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter(String sqlExpression)
  overload: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter*
  type: Constructor
  package: com.azure.messaging.servicebus.administration.models
  summary: Creates a new instance with the given SQL expression.
  syntax:
    content: public SqlRuleFilter(String sqlExpression)
    parameters:
    - id: sqlExpression
      type: java.lang.String
      description: SQL expression for the filter.
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter(java.lang.String,java.lang.String,java.lang.Boolean)
  id: SqlRuleFilter(java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
  parent: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  langs:
  - java
  name: SqlRuleFilter(String sqlExpression, String compatibilityLevel, Boolean requiresPreprocessing)
  nameWithType: SqlRuleFilter.SqlRuleFilter(String sqlExpression, String compatibilityLevel, Boolean requiresPreprocessing)
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter(String sqlExpression, String compatibilityLevel, Boolean requiresPreprocessing)
  overload: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter*
  type: Constructor
  package: com.azure.messaging.servicebus.administration.models
  summary: Package private constructor for creating a model deserialised from the service.
  syntax:
    content: " SqlRuleFilter(String sqlExpression, String compatibilityLevel, Boolean requiresPreprocessing)"
    parameters:
    - id: sqlExpression
      type: java.lang.String
      description: SQL expression for the filter.
    - id: compatibilityLevel
      type: java.lang.String
      description: The compatibility level.
    - id: requiresPreprocessing
      type: java.lang.Boolean
      description: Whether or not it requires preprocessing
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties()
  id: getProperties()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
  parent: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  langs:
  - java
  name: getProperties()
  nameWithType: SqlRuleFilter.getProperties()
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties()
  overload: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties*
  type: Method
  package: com.azure.messaging.servicebus.administration.models
  summary: 'Gets the value of a filter expression. Allowed types: string, int, long, bool, double'
  syntax:
    content: public Map<String,Object> getProperties()
    return:
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: Gets the value of a filter expression.
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression()
  id: getSqlExpression()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
  parent: com.azure.messaging.servicebus.administration.models.SqlRuleFilter
  langs:
  - java
  name: getSqlExpression()
  nameWithType: SqlRuleFilter.getSqlExpression()
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression()
  overload: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression*
  type: Method
  package: com.azure.messaging.servicebus.administration.models
  summary: Gets the SQL expression.
  syntax:
    content: public String getSqlExpression()
    return:
      type: java.lang.String
      description: The SQL expression.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter*
  name: SqlRuleFilter
  nameWithType: SqlRuleFilter.SqlRuleFilter
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.SqlRuleFilter
  package: com.azure.messaging.servicebus.administration.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties*
  name: getProperties
  nameWithType: SqlRuleFilter.getProperties
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getProperties
  package: com.azure.messaging.servicebus.administration.models
- uid: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression*
  name: getSqlExpression
  nameWithType: SqlRuleFilter.getSqlExpression
  fullName: com.azure.messaging.servicebus.administration.models.SqlRuleFilter.getSqlExpression
  package: com.azure.messaging.servicebus.administration.models
- uid: com.azure.messaging.servicebus.administration.models.RuleFilter
  name: RuleFilter
  nameWithType: RuleFilter
  fullName: com.azure.messaging.servicebus.administration.models.RuleFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
