### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.type.WritableTypeId.forValueType*"
fullName: "com.fasterxml.jackson.core.type.WritableTypeId.forValueType"
name: "forValueType"
nameWithType: "WritableTypeId.forValueType"
members:
- uid: "com.fasterxml.jackson.core.type.WritableTypeId.forValueType"
  fullName: "com.fasterxml.jackson.core.type.WritableTypeId.forValueType"
  name: "forValueType"
  nameWithType: "WritableTypeId.forValueType"
  summary: "(optional) Super-type of <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId.forValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#forValue\"></xref> to use for type id generation (if no explicit id passed): used instead of actual class of <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId.forValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#forValue\"></xref> in cases where we do not want to use the \"real\" type but something more generic, usually to work around specific problem with implementation type, or its deserializer."
  syntax: "public Class<?> forValueType"
type: "field"
metadata: {}
package: "com.fasterxml.jackson.core.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
