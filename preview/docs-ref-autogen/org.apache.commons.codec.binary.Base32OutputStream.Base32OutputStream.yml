### YamlMime:JavaMember
uid: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream*"
fullName: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
name: "Base32OutputStream"
nameWithType: "Base32OutputStream.Base32OutputStream"
members:
- uid: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(java.io.OutputStream)"
  fullName: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream out)"
  name: "Base32OutputStream(OutputStream out)"
  nameWithType: "Base32OutputStream.Base32OutputStream(OutputStream out)"
  summary: "Creates a Base32OutputStream such that all data written is Base32-encoded to the original provided OutputStream."
  parameters:
  - description: "OutputStream to wrap."
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Base32OutputStream(OutputStream out)"
- uid: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(java.io.OutputStream,boolean)"
  fullName: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream out, boolean doEncode)"
  name: "Base32OutputStream(OutputStream out, boolean doEncode)"
  nameWithType: "Base32OutputStream.Base32OutputStream(OutputStream out, boolean doEncode)"
  summary: "Creates a Base32OutputStream such that all data written is either Base32-encoded or Base32-decoded to the original provided OutputStream."
  parameters:
  - description: "OutputStream to wrap."
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "true if we should encode all data written to us, false if we should decode."
    name: "doEncode"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Base32OutputStream(OutputStream out, boolean doEncode)"
- uid: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(java.io.OutputStream,boolean,int,byte[])"
  fullName: "org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)"
  name: "Base32OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)"
  nameWithType: "Base32OutputStream.Base32OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)"
  summary: "Creates a Base32OutputStream such that all data written is either Base32-encoded or Base32-decoded to the original provided OutputStream."
  parameters:
  - description: "OutputStream to wrap."
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "true if we should encode all data written to us, false if we should decode."
    name: "doEncode"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "If doEncode is true, each line of encoded data will contain lineLength characters (rounded down to\n            nearest multiple of 4). If lineLength &lt;= 0, the encoded data is not divided into lines. If doEncode\n            is false, lineLength is ignored."
    name: "lineLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "If doEncode is true, each line of encoded data will be terminated with this byte sequence (e.g. \\r\\n).\n            If lineLength &lt;= 0, the lineSeparator is not used. If doEncode is false lineSeparator is ignored."
    name: "lineSeparator"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Base32OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)"
type: "constructor"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
