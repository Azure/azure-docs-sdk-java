### YamlMime:JavaMember
uid: "com.azure.analytics.purview.catalog.EntityBaseClient.getEntitiesByUniqueAttributes*"
fullName: "com.azure.analytics.purview.catalog.EntityBaseClient.getEntitiesByUniqueAttributes"
name: "getEntitiesByUniqueAttributes"
nameWithType: "EntityBaseClient.getEntitiesByUniqueAttributes"
members:
- uid: "com.azure.analytics.purview.catalog.EntityBaseClient.getEntitiesByUniqueAttributes(java.lang.String)"
  fullName: "com.azure.analytics.purview.catalog.EntityBaseClient.getEntitiesByUniqueAttributes(String typeName)"
  name: "getEntitiesByUniqueAttributes(String typeName)"
  nameWithType: "EntityBaseClient.getEntitiesByUniqueAttributes(String typeName)"
  summary: "Bulk API to retrieve list of entities identified by its unique attributes.\n\nIn addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format\n\ntypeName=\\\\<typeName>&attr\\_1:\\\\<attrName>=\\\\<attrValue>&attr\\_2:\\\\<attrName>=\\\\<attrValue>&attr\\_3:\\\\<attrName>=\\\\<attrValue>\n\nNOTE: The attrName should be an unique attribute for the given entity-type\n\nThe REST request would look something like this\n\nGET /v2/entity/bulk/uniqueAttribute/type/hive\\_db?attr\\_0:qualifiedName=db1@cl1&attr\\_2:qualifiedName=db2@cl1.\n\n**Optional Query Parameters**\n\n    | ------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------ |\n    | Name                | Type    | Description                                                                                                                    |\n    | minExtInfo          | Boolean | Whether to return minimal information for referred entities.                                                                   |\n    | ignoreRelationships | Boolean | Whether to ignore relationship attributes.                                                                                     |\n    | attrNQualifiedName  | String  | Qualified name of an entity. E.g. to find 2 entities you can set attrs\\_0:qualifiedName=db1@cl1&attrs\\_2:qualifiedName=db2@cl1 |\n\n**Response Body Schema**\n\n```java\n{\n     referredEntities: {\n         String: {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             classifications: [\n                 {\n                     attributes: {\n                         String: Object\n                     }\n                     typeName: String\n                     lastModifiedTS: String\n                     entityGuid: String\n                     entityStatus: String(ACTIVE/DELETED)\n                     removePropagationsOnEntityDelete: Boolean\n                     validityPeriods: [\n                         {\n                             endTime: String\n                             startTime: String\n                             timeZone: String\n                         }\n                     ]\n                     source: String\n                     sourceDetails: {\n                         String: Object\n                     }\n                 }\n             ]\n             createTime: Float\n             createdBy: String\n             guid: String\n             homeId: String\n             meanings: [\n                 {\n                     confidence: Integer\n                     createdBy: String\n                     description: String\n                     displayText: String\n                     expression: String\n                     relationGuid: String\n                     source: String\n                     status: String(DISCOVERED/PROPOSED/IMPORTED/VALIDATED/DEPRECATED/OBSOLETE/OTHER)\n                     steward: String\n                     termGuid: String\n                 }\n             ]\n             provenanceType: Float\n             proxy: Boolean\n             relationshipAttributes: {\n                 String: Object\n             }\n             status: String(ACTIVE/DELETED)\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n             contacts: {\n                 String: [\n                     {\n                         id: String\n                         info: String\n                     }\n                 ]\n             }\n         }\n     }\n     entities: [\n         (recursive schema, see above)\n     ]\n }\n```"
  parameters:
  - description: "The name of the type."
    name: "typeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest getEntitiesByUniqueAttributes(String typeName)"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.analytics.purview.catalog"
artifact: com.azure:azure-analytics-purview-catalog:1.0.0-beta.1
