### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.VersionUtil
  id: VersionUtil
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()
  - com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class<?>)
  - com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)
  - com.fasterxml.jackson.core.util.VersionUtil.throwInternal()
  - com.fasterxml.jackson.core.util.VersionUtil.version()
  - com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class<?>)
  langs:
  - java
  name: VersionUtil
  nameWithType: VersionUtil
  fullName: com.fasterxml.jackson.core.util.VersionUtil
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: >-
    Functionality for supporting exposing of component <xref uid="com.fasterxml.jackson.core.Version" data-throw-if-not-resolved="false">Version</xref>s. Also contains other misc methods that have no other place to live in.


    Note that this class can be used in two roles: first, as a static utility class for loading purposes, and second, as a singleton loader of per-module version information.


    Note that method for accessing version information changed between versions 2.1 and 2.2; earlier code used file named "VERSION.txt"; but this has serious performance issues on some platforms (Android), so a replacement system was implemented to use class generation and dynamic class loading.


    Note that functionality for reading "VERSION.txt" was removed completely from Jackson 2.6.
  syntax:
    content: public class VersionUtil
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()
  id: VersionUtil()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: VersionUtil()
  nameWithType: VersionUtil.VersionUtil()
  fullName: com.fasterxml.jackson.core.util.VersionUtil.VersionUtil()
  overload: com.fasterxml.jackson.core.util.VersionUtil.VersionUtil*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected VersionUtil()
- uid: com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String)
  id: mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: mavenVersionFor(ClassLoader cl, String groupId, String artifactId)
  nameWithType: VersionUtil.mavenVersionFor(ClassLoader cl, String groupId, String artifactId)
  fullName: com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor(ClassLoader cl, String groupId, String artifactId)
  overload: com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Will attempt to load the maven version for the given groupId and artifactId. Maven puts a pom.properties file in META-INF/maven/groupId/artifactId, containing the groupId, artifactId and version of the library.
  syntax:
    content: public static Version mavenVersionFor(ClassLoader cl, String groupId, String artifactId)
    parameters:
    - id: cl
      type: java.lang.ClassLoader
      description: the ClassLoader to load the pom.properties file from
    - id: groupId
      type: java.lang.String
      description: the groupId of the library
    - id: artifactId
      type: java.lang.String
      description: the artifactId of the library
    return:
      type: com.fasterxml.jackson.core.Version
      description: The version
- uid: com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(java.lang.Class<?>)
  id: packageVersionFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: packageVersionFor(Class<?> cls)
  nameWithType: VersionUtil.packageVersionFor(Class<?> cls)
  fullName: com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor(Class<?> cls)
  overload: com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Loads version information by introspecting a class named "PackageVersion" in the same package as the given class.


    If the class could not be found or does not have a public static Version field named "VERSION", returns null.
  syntax:
    content: public static Version packageVersionFor(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String,java.lang.String,java.lang.String)
  id: parseVersion(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: parseVersion(String s, String groupId, String artifactId)
  nameWithType: VersionUtil.parseVersion(String s, String groupId, String artifactId)
  fullName: com.fasterxml.jackson.core.util.VersionUtil.parseVersion(String s, String groupId, String artifactId)
  overload: com.fasterxml.jackson.core.util.VersionUtil.parseVersion*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Method used by `PackageVersion` classes to decode version injected by Maven build.
  syntax:
    content: public static Version parseVersion(String s, String groupId, String artifactId)
    parameters:
    - id: s
      type: java.lang.String
    - id: groupId
      type: java.lang.String
    - id: artifactId
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(java.lang.String)
  id: parseVersionPart(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: parseVersionPart(String s)
  nameWithType: VersionUtil.parseVersionPart(String s)
  fullName: com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart(String s)
  overload: com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected static int parseVersionPart(String s)
    parameters:
    - id: s
      type: java.lang.String
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.VersionUtil.throwInternal()
  id: throwInternal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: throwInternal()
  nameWithType: VersionUtil.throwInternal()
  fullName: com.fasterxml.jackson.core.util.VersionUtil.throwInternal()
  overload: com.fasterxml.jackson.core.util.VersionUtil.throwInternal*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public static final void throwInternal()
- uid: com.fasterxml.jackson.core.util.VersionUtil.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: version()
  nameWithType: VersionUtil.version()
  fullName: com.fasterxml.jackson.core.util.VersionUtil.version()
  overload: com.fasterxml.jackson.core.util.VersionUtil.version*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.util.VersionUtil.versionFor(java.lang.Class<?>)
  id: versionFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.VersionUtil
  langs:
  - java
  name: versionFor(Class<?> cls)
  nameWithType: VersionUtil.versionFor(Class<?> cls)
  fullName: com.fasterxml.jackson.core.util.VersionUtil.versionFor(Class<?> cls)
  overload: com.fasterxml.jackson.core.util.VersionUtil.versionFor*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: 'Helper method that will try to load version information for specified class. Implementation is as follows: First, tries to load version info from a class named "PackageVersion" in the same package as the class. If no version information is found, <xref uid="com.fasterxml.jackson.core.Version.unknownVersion()" data-throw-if-not-resolved="false">Version#unknownVersion()</xref> is returned.'
  syntax:
    content: public static Version versionFor(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.core.Version
references:
- uid: com.fasterxml.jackson.core.util.VersionUtil.VersionUtil*
  name: VersionUtil
  nameWithType: VersionUtil.VersionUtil
  fullName: com.fasterxml.jackson.core.util.VersionUtil.VersionUtil
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.util.VersionUtil.version*
  name: version
  nameWithType: VersionUtil.version
  fullName: com.fasterxml.jackson.core.util.VersionUtil.version
  package: com.fasterxml.jackson.core.util
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.util.VersionUtil.versionFor*
  name: versionFor
  nameWithType: VersionUtil.versionFor
  fullName: com.fasterxml.jackson.core.util.VersionUtil.versionFor
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor*
  name: packageVersionFor
  nameWithType: VersionUtil.packageVersionFor
  fullName: com.fasterxml.jackson.core.util.VersionUtil.packageVersionFor
  package: com.fasterxml.jackson.core.util
- uid: java.lang.ClassLoader
  spec.java:
  - uid: java.lang.ClassLoader
    name: ClassLoader
    fullName: java.lang.ClassLoader
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor*
  name: mavenVersionFor
  nameWithType: VersionUtil.mavenVersionFor
  fullName: com.fasterxml.jackson.core.util.VersionUtil.mavenVersionFor
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.VersionUtil.parseVersion*
  name: parseVersion
  nameWithType: VersionUtil.parseVersion
  fullName: com.fasterxml.jackson.core.util.VersionUtil.parseVersion
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart*
  name: parseVersionPart
  nameWithType: VersionUtil.parseVersionPart
  fullName: com.fasterxml.jackson.core.util.VersionUtil.parseVersionPart
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.VersionUtil.throwInternal*
  name: throwInternal
  nameWithType: VersionUtil.throwInternal
  fullName: com.fasterxml.jackson.core.util.VersionUtil.throwInternal
  package: com.fasterxml.jackson.core.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
