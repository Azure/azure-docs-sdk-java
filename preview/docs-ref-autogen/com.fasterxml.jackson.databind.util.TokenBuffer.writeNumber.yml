### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber*"
fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber"
name: "writeNumber"
nameWithType: "TokenBuffer.writeNumber"
members:
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(double)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(double d)"
  name: "writeNumber(double d)"
  nameWithType: "TokenBuffer.writeNumber(double d)"
  summary: "Method for outputting indicate JSON numeric value. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)"
  parameters:
  - name: "d"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(double d)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(float)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(float f)"
  name: "writeNumber(float f)"
  nameWithType: "TokenBuffer.writeNumber(float f)"
  summary: "Method for outputting indicate JSON numeric value. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)"
  parameters:
  - name: "f"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(float f)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(int)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(int i)"
  name: "writeNumber(int i)"
  nameWithType: "TokenBuffer.writeNumber(int i)"
  summary: "Method for outputting given value as JSON number. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)"
  parameters:
  - name: "i"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(int i)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(String encodedValue)"
  name: "writeNumber(String encodedValue)"
  nameWithType: "TokenBuffer.writeNumber(String encodedValue)"
  summary: "Write method that can be used for custom numeric types that can not be (easily?) converted to \"standard\" Java number types. Because numbers are not surrounded by double quotes, regular <xref uid=\"com.fasterxml.jackson.databind.util.TokenBuffer.writeString*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeString\"></xref> method can not be used; nor <xref uid=\"com.fasterxml.jackson.databind.util.TokenBuffer.writeRaw*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRaw\"></xref> because that does not properly handle value separators needed in Array or Object contexts.\n\nNote: because of lack of type safety, some generator implementations may not be able to implement this method. For example, if a binary JSON format is used, it may require type information for encoding; similarly for generator-wrappers around Java objects or JSON nodes. If implementation does not implement this method, it needs to throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)"
  parameters:
  - name: "encodedValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(String encodedValue)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.math.BigDecimal)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(BigDecimal dec)"
  name: "writeNumber(BigDecimal dec)"
  nameWithType: "TokenBuffer.writeNumber(BigDecimal dec)"
  summary: "Method for outputting indicate JSON numeric value. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)"
  parameters:
  - name: "dec"
    type: "<xref href=\"java.math.BigDecimal?alt=java.math.BigDecimal&text=BigDecimal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(BigDecimal dec)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.math.BigInteger)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(BigInteger v)"
  name: "writeNumber(BigInteger v)"
  nameWithType: "TokenBuffer.writeNumber(BigInteger v)"
  summary: "Method for outputting given value as JSON number. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)"
  parameters:
  - name: "v"
    type: "<xref href=\"java.math.BigInteger?alt=java.math.BigInteger&text=BigInteger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(BigInteger v)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(long)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(long l)"
  name: "writeNumber(long l)"
  nameWithType: "TokenBuffer.writeNumber(long l)"
  summary: "Method for outputting given value as JSON number. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)"
  parameters:
  - name: "l"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(long l)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(short)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(short i)"
  name: "writeNumber(short i)"
  nameWithType: "TokenBuffer.writeNumber(short i)"
  summary: "Method for outputting given value as JSON number. Can be called in any context where a value is expected (Array value, Object field value, root-level value). Additional white space may be added around the value if pretty-printing is enabled."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)"
  parameters:
  - name: "i"
    type: "<xref href=\"short?alt=short&text=short\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeNumber(short i)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
