### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.CosmosContainerProperties
  id: CosmosContainerProperties
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(java.lang.String,com.azure.cosmos.models.PartitionKeyDefinition)
  - com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(java.lang.String,java.lang.String)
  - com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds()
  - com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy()
  - com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds()
  - com.azure.cosmos.models.CosmosContainerProperties.getETag()
  - com.azure.cosmos.models.CosmosContainerProperties.getId()
  - com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy()
  - com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition()
  - com.azure.cosmos.models.CosmosContainerProperties.getResourceId()
  - com.azure.cosmos.models.CosmosContainerProperties.getTimestamp()
  - com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy()
  - com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds(java.lang.Integer)
  - com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)
  - com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds(java.lang.Integer)
  - com.azure.cosmos.models.CosmosContainerProperties.setId(java.lang.String)
  - com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)
  - com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition(com.azure.cosmos.models.PartitionKeyDefinition)
  - com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)
  langs:
  - java
  name: CosmosContainerProperties
  nameWithType: CosmosContainerProperties
  fullName: com.azure.cosmos.models.CosmosContainerProperties
  type: Class
  package: com.azure.cosmos.models
  summary: >-
    Represents a container in the Azure Cosmos DB database service. A cosmos container is a named logical container for cosmos items.


    A database may contain zero or more named containers and each container consists of zero or more JSON items. Being schema-free, the items in a container do not need to share the same structure or fields. Since containers are application resources, they can be authorized using either the master key or resource keys.
  syntax:
    content: public final class CosmosContainerProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(com.azure.cosmos.implementation.DocumentCollection)
  id: CosmosContainerProperties(com.azure.cosmos.implementation.DocumentCollection)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: CosmosContainerProperties(DocumentCollection collection)
  nameWithType: CosmosContainerProperties.CosmosContainerProperties(DocumentCollection collection)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(DocumentCollection collection)
  overload: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties*
  type: Constructor
  package: com.azure.cosmos.models
  syntax:
    content: " CosmosContainerProperties(DocumentCollection collection)"
    parameters:
    - id: collection
      type: com.azure.cosmos.implementation.DocumentCollection
- uid: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(java.lang.String)
  id: CosmosContainerProperties(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: CosmosContainerProperties(String json)
  nameWithType: CosmosContainerProperties.CosmosContainerProperties(String json)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(String json)
  overload: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties*
  type: Constructor
  package: com.azure.cosmos.models
  syntax:
    content: " CosmosContainerProperties(String json)"
    parameters:
    - id: json
      type: java.lang.String
- uid: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(java.lang.String,com.azure.cosmos.models.PartitionKeyDefinition)
  id: CosmosContainerProperties(java.lang.String,com.azure.cosmos.models.PartitionKeyDefinition)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: CosmosContainerProperties(String id, PartitionKeyDefinition partitionKeyDefinition)
  nameWithType: CosmosContainerProperties.CosmosContainerProperties(String id, PartitionKeyDefinition partitionKeyDefinition)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(String id, PartitionKeyDefinition partitionKeyDefinition)
  overload: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor
  syntax:
    content: public CosmosContainerProperties(String id, PartitionKeyDefinition partitionKeyDefinition)
    parameters:
    - id: id
      type: java.lang.String
      description: id of the container
    - id: partitionKeyDefinition
      type: com.azure.cosmos.models.PartitionKeyDefinition
      description: the <xref uid="com.azure.cosmos.models.PartitionKeyDefinition" data-throw-if-not-resolved="false">PartitionKeyDefinition</xref>
- uid: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(java.lang.String,java.lang.String)
  id: CosmosContainerProperties(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: CosmosContainerProperties(String id, String partitionKeyPath)
  nameWithType: CosmosContainerProperties.CosmosContainerProperties(String id, String partitionKeyPath)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties(String id, String partitionKeyPath)
  overload: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor
  syntax:
    content: public CosmosContainerProperties(String id, String partitionKeyPath)
    parameters:
    - id: id
      type: java.lang.String
      description: id of the Container
    - id: partitionKeyPath
      type: java.lang.String
      description: partition key path
- uid: com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds()
  id: getAnalyticalStoreTimeToLiveInSeconds()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getAnalyticalStoreTimeToLiveInSeconds()
  nameWithType: CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the analytical store time to live in seconds for items in a container from the Azure Cosmos DB service. It is an optional property. A valid value must be either a nonzero positive integer, '-1', or 0. By default, AnalyticalStoreTimeToLive is set to 0 meaning the analytical store is turned off for the container; -1 means items in analytical store never expire. The unit of measurement is seconds. The maximum allowed value is 2147483647.
  syntax:
    content: public Integer getAnalyticalStoreTimeToLiveInSeconds()
    return:
      type: java.lang.Integer
      description: analytical ttl
- uid: com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy()
  id: getConflictResolutionPolicy()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getConflictResolutionPolicy()
  nameWithType: CosmosContainerProperties.getConflictResolutionPolicy()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the conflictResolutionPolicy that is used for resolving conflicting writes on items in different regions, in a container in the Azure Cosmos DB service.
  syntax:
    content: public ConflictResolutionPolicy getConflictResolutionPolicy()
    return:
      type: com.azure.cosmos.models.ConflictResolutionPolicy
      description: ConflictResolutionPolicy
- uid: com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds()
  id: getDefaultTimeToLiveInSeconds()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getDefaultTimeToLiveInSeconds()
  nameWithType: CosmosContainerProperties.getDefaultTimeToLiveInSeconds()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the container's default time-to-live value.
  syntax:
    content: public Integer getDefaultTimeToLiveInSeconds()
    return:
      type: java.lang.Integer
      description: the default time-to-live value in seconds.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getETag()
  id: getETag()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getETag()
  nameWithType: CosmosContainerProperties.getETag()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getETag()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getETag*
  type: Method
  package: com.azure.cosmos.models
  summary: Get the entity tag associated with the resource. This is only relevant when getting response from the server.
  syntax:
    content: public String getETag()
    return:
      type: java.lang.String
      description: the e tag.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getId()
  id: getId()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getId()
  nameWithType: CosmosContainerProperties.getId()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getId()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getId*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the name of the resource.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: the name of the resource.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy()
  id: getIndexingPolicy()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getIndexingPolicy()
  nameWithType: CosmosContainerProperties.getIndexingPolicy()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the container's indexing policy.
  syntax:
    content: public IndexingPolicy getIndexingPolicy()
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the indexing policy.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition()
  id: getPartitionKeyDefinition()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getPartitionKeyDefinition()
  nameWithType: CosmosContainerProperties.getPartitionKeyDefinition()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the containers's partition key definition.
  syntax:
    content: public PartitionKeyDefinition getPartitionKeyDefinition()
    return:
      type: com.azure.cosmos.models.PartitionKeyDefinition
      description: the partition key definition.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getResourceId()
  id: getResourceId()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getResourceId()
  nameWithType: CosmosContainerProperties.getResourceId()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getResourceId()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getResourceId*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the ID associated with the resource.
  syntax:
    content: public String getResourceId()
    return:
      type: java.lang.String
      description: the ID associated with the resource.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getTimestamp()
  id: getTimestamp()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getTimestamp()
  nameWithType: CosmosContainerProperties.getTimestamp()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getTimestamp()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getTimestamp*
  type: Method
  package: com.azure.cosmos.models
  summary: Get the last modified timestamp associated with the resource. This is only relevant when getting response from the server.
  syntax:
    content: public Instant getTimestamp()
    return:
      type: java.time.Instant
      description: the timestamp.
- uid: com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy()
  id: getUniqueKeyPolicy()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: getUniqueKeyPolicy()
  nameWithType: CosmosContainerProperties.getUniqueKeyPolicy()
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy()
  overload: com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the containers unique key policy
  syntax:
    content: public UniqueKeyPolicy getUniqueKeyPolicy()
    return:
      type: com.azure.cosmos.models.UniqueKeyPolicy
      description: the unique key policy
- uid: com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds(java.lang.Integer)
  id: setAnalyticalStoreTimeToLiveInSeconds(java.lang.Integer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setAnalyticalStoreTimeToLiveInSeconds(Integer timeToLive)
  nameWithType: CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds(Integer timeToLive)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds(Integer timeToLive)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the analytical store time to live in seconds for items in a container from the Azure Cosmos DB service. It is an optional property. A valid value must be either a nonzero positive integer, '-1', or 0. By default, AnalyticalStoreTimeToLive is set to 0 meaning the analytical store is turned off for the container; -1 means items in analytical store never expire. The unit of measurement is seconds. The maximum allowed value is 2147483647.
  syntax:
    content: public CosmosContainerProperties setAnalyticalStoreTimeToLiveInSeconds(Integer timeToLive)
    parameters:
    - id: timeToLive
      type: java.lang.Integer
      description: the analytical store time to live in seconds.
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)
  id: setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setConflictResolutionPolicy(ConflictResolutionPolicy value)
  nameWithType: CosmosContainerProperties.setConflictResolutionPolicy(ConflictResolutionPolicy value)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy(ConflictResolutionPolicy value)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the conflictResolutionPolicy that is used for resolving conflicting writes on items in different regions, in a container in the Azure Cosmos DB service.
  syntax:
    content: public CosmosContainerProperties setConflictResolutionPolicy(ConflictResolutionPolicy value)
    parameters:
    - id: value
      type: com.azure.cosmos.models.ConflictResolutionPolicy
      description: ConflictResolutionPolicy to be used.
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds(java.lang.Integer)
  id: setDefaultTimeToLiveInSeconds(java.lang.Integer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setDefaultTimeToLiveInSeconds(Integer timeToLive)
  nameWithType: CosmosContainerProperties.setDefaultTimeToLiveInSeconds(Integer timeToLive)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds(Integer timeToLive)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the container's default time-to-live value.


    The default time-to-live value on a container is an optional property. If set, the items within the container expires after the specified number of seconds since their last write time. The value of this property should be one of the following:


    null - indicates evaluation of time-to-live is disabled and items within the container will never expire, regardless whether individual items have their time-to-live set.


    nonzero positive integer - indicates the default time-to-live value for all items within the container. This value can be overridden by individual items time-to-live value.


    \-1 - indicates by default all items within the container never expire. This value can be overridden by individual items time-to-live value.
  syntax:
    content: public CosmosContainerProperties setDefaultTimeToLiveInSeconds(Integer timeToLive)
    parameters:
    - id: timeToLive
      type: java.lang.Integer
      description: the default time-to-live value in seconds.
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setId(java.lang.String)
  id: setId(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setId(String id)
  nameWithType: CosmosContainerProperties.setId(String id)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setId(String id)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setId*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the name of the resource.
  syntax:
    content: public CosmosContainerProperties setId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the name of the resource.
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the current instance of <xref uid="com.azure.cosmos.models.CosmosContainerProperties" data-throw-if-not-resolved="false">CosmosContainerProperties</xref>.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)
  id: setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setIndexingPolicy(IndexingPolicy indexingPolicy)
  nameWithType: CosmosContainerProperties.setIndexingPolicy(IndexingPolicy indexingPolicy)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy(IndexingPolicy indexingPolicy)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the container's indexing policy
  syntax:
    content: public CosmosContainerProperties setIndexingPolicy(IndexingPolicy indexingPolicy)
    parameters:
    - id: indexingPolicy
      type: com.azure.cosmos.models.IndexingPolicy
      description: <xref uid="com.azure.cosmos.models.IndexingPolicy" data-throw-if-not-resolved="false">IndexingPolicy</xref> the indexing policy
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition(com.azure.cosmos.models.PartitionKeyDefinition)
  id: setPartitionKeyDefinition(com.azure.cosmos.models.PartitionKeyDefinition)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setPartitionKeyDefinition(PartitionKeyDefinition partitionKeyDefinition)
  nameWithType: CosmosContainerProperties.setPartitionKeyDefinition(PartitionKeyDefinition partitionKeyDefinition)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition(PartitionKeyDefinition partitionKeyDefinition)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the containers's partition key definition.
  syntax:
    content: public CosmosContainerProperties setPartitionKeyDefinition(PartitionKeyDefinition partitionKeyDefinition)
    parameters:
    - id: partitionKeyDefinition
      type: com.azure.cosmos.models.PartitionKeyDefinition
      description: the partition key definition.
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
- uid: com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)
  id: setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.CosmosContainerProperties
  langs:
  - java
  name: setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)
  nameWithType: CosmosContainerProperties.setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)
  overload: com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the Containers unique key policy
  syntax:
    content: public CosmosContainerProperties setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)
    parameters:
    - id: uniqueKeyPolicy
      type: com.azure.cosmos.models.UniqueKeyPolicy
      description: the unique key policy
    return:
      type: com.azure.cosmos.models.CosmosContainerProperties
      description: the CosmosContainerProperties.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties*
  name: CosmosContainerProperties
  nameWithType: CosmosContainerProperties.CosmosContainerProperties
  fullName: com.azure.cosmos.models.CosmosContainerProperties.CosmosContainerProperties
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.PartitionKeyDefinition
  name: PartitionKeyDefinition
  nameWithType: PartitionKeyDefinition
  fullName: com.azure.cosmos.models.PartitionKeyDefinition
- uid: com.azure.cosmos.implementation.DocumentCollection
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: com.azure.cosmos.implementation.DocumentCollection
- uid: com.azure.cosmos.models.IndexingPolicy
  name: IndexingPolicy
  nameWithType: IndexingPolicy
  fullName: com.azure.cosmos.models.IndexingPolicy
- uid: com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy*
  name: getIndexingPolicy
  nameWithType: CosmosContainerProperties.getIndexingPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getIndexingPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy*
  name: setIndexingPolicy
  nameWithType: CosmosContainerProperties.setIndexingPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setIndexingPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.UniqueKeyPolicy
  name: UniqueKeyPolicy
  nameWithType: UniqueKeyPolicy
  fullName: com.azure.cosmos.models.UniqueKeyPolicy
- uid: com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy*
  name: getUniqueKeyPolicy
  nameWithType: CosmosContainerProperties.getUniqueKeyPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getUniqueKeyPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy*
  name: setUniqueKeyPolicy
  nameWithType: CosmosContainerProperties.setUniqueKeyPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setUniqueKeyPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition*
  name: getPartitionKeyDefinition
  nameWithType: CosmosContainerProperties.getPartitionKeyDefinition
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getPartitionKeyDefinition
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition*
  name: setPartitionKeyDefinition
  nameWithType: CosmosContainerProperties.setPartitionKeyDefinition
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setPartitionKeyDefinition
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ConflictResolutionPolicy
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy
  fullName: com.azure.cosmos.models.ConflictResolutionPolicy
- uid: com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy*
  name: getConflictResolutionPolicy
  nameWithType: CosmosContainerProperties.getConflictResolutionPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getConflictResolutionPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy*
  name: setConflictResolutionPolicy
  nameWithType: CosmosContainerProperties.setConflictResolutionPolicy
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setConflictResolutionPolicy
  package: com.azure.cosmos.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds*
  name: getDefaultTimeToLiveInSeconds
  nameWithType: CosmosContainerProperties.getDefaultTimeToLiveInSeconds
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getDefaultTimeToLiveInSeconds
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds*
  name: setDefaultTimeToLiveInSeconds
  nameWithType: CosmosContainerProperties.setDefaultTimeToLiveInSeconds
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setDefaultTimeToLiveInSeconds
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds*
  name: setAnalyticalStoreTimeToLiveInSeconds
  nameWithType: CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setAnalyticalStoreTimeToLiveInSeconds
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds*
  name: getAnalyticalStoreTimeToLiveInSeconds
  nameWithType: CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getAnalyticalStoreTimeToLiveInSeconds
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.getId*
  name: getId
  nameWithType: CosmosContainerProperties.getId
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getId
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.setId*
  name: setId
  nameWithType: CosmosContainerProperties.setId
  fullName: com.azure.cosmos.models.CosmosContainerProperties.setId
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.getResourceId*
  name: getResourceId
  nameWithType: CosmosContainerProperties.getResourceId
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getResourceId
  package: com.azure.cosmos.models
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.cosmos.models.CosmosContainerProperties.getTimestamp*
  name: getTimestamp
  nameWithType: CosmosContainerProperties.getTimestamp
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getTimestamp
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosContainerProperties.getETag*
  name: getETag
  nameWithType: CosmosContainerProperties.getETag
  fullName: com.azure.cosmos.models.CosmosContainerProperties.getETag
  package: com.azure.cosmos.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
