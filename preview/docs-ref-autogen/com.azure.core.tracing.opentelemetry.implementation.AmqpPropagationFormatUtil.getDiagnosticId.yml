### YamlMime:JavaMember
uid: "com.azure.core.tracing.opentelemetry.implementation.AmqpPropagationFormatUtil.getDiagnosticId*"
fullName: "com.azure.core.tracing.opentelemetry.implementation.AmqpPropagationFormatUtil.getDiagnosticId"
name: "getDiagnosticId"
nameWithType: "AmqpPropagationFormatUtil.getDiagnosticId"
members:
- uid: "com.azure.core.tracing.opentelemetry.implementation.AmqpPropagationFormatUtil.getDiagnosticId(io.opentelemetry.api.trace.SpanContext)"
  fullName: "com.azure.core.tracing.opentelemetry.implementation.AmqpPropagationFormatUtil.getDiagnosticId(SpanContext spanContext)"
  name: "getDiagnosticId(SpanContext spanContext)"
  nameWithType: "AmqpPropagationFormatUtil.getDiagnosticId(SpanContext spanContext)"
  summary: "The trace-parent HTTP header field identifies the incoming request in a tracing system with four fields: version, trace-id, parent-id, trace-flags.\n\nPlease refer to the [Trace-parent Header][] for more information on the conversion of these fields to Span Context format.\n\n\n[Trace-parent Header]: https://www.w3.org/TR/trace-context/#traceparent-header"
  parameters:
  - description: "is a specification defines an agreed-upon format for the exchange of trace context propagation\n data."
    name: "spanContext"
    type: "<xref href=\"io.opentelemetry.api.trace.SpanContext?alt=io.opentelemetry.api.trace.SpanContext&text=SpanContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getDiagnosticId(SpanContext spanContext)"
  returns:
    description: "The diagnostic Id providing an unique identifier for individual traces and requests,\n allowing trace data of multiple providers to be linked together."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.tracing.opentelemetry.implementation"
artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.9
