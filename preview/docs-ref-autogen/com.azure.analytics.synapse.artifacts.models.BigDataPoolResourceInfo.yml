### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo"
fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo"
name: "BigDataPoolResourceInfo"
nameWithType: "BigDataPoolResourceInfo"
summary: "Big Data pool A Big Data pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.TrackedResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.Resource.getId()"
- "com.azure.analytics.synapse.artifacts.models.Resource.getName()"
- "com.azure.analytics.synapse.artifacts.models.Resource.getType()"
- "com.azure.analytics.synapse.artifacts.models.TrackedResource.getLocation()"
- "com.azure.analytics.synapse.artifacts.models.TrackedResource.getTags()"
- "com.azure.analytics.synapse.artifacts.models.TrackedResource.setLocation(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.TrackedResource.setTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BigDataPoolResourceInfo extends TrackedResource"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.BigDataPoolResourceInfo()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.BigDataPoolResourceInfo()"
  name: "BigDataPoolResourceInfo()"
  nameWithType: "BigDataPoolResourceInfo.BigDataPoolResourceInfo()"
  syntax: "public BigDataPoolResourceInfo()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getAutoPause()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getAutoPause()"
  name: "getAutoPause()"
  nameWithType: "BigDataPoolResourceInfo.getAutoPause()"
  summary: "Get the autoPause property: Spark pool auto-pausing properties Auto-pausing properties."
  syntax: "public AutoPauseProperties getAutoPause()"
  returns:
    description: "the autoPause value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AutoPauseProperties?alt=com.azure.analytics.synapse.artifacts.models.AutoPauseProperties&text=AutoPauseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getAutoScale()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getAutoScale()"
  name: "getAutoScale()"
  nameWithType: "BigDataPoolResourceInfo.getAutoScale()"
  summary: "Get the autoScale property: Spark pool auto-scaling properties Auto-scaling properties."
  syntax: "public AutoScaleProperties getAutoScale()"
  returns:
    description: "the autoScale value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AutoScaleProperties?alt=com.azure.analytics.synapse.artifacts.models.AutoScaleProperties&text=AutoScaleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCacheSize()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCacheSize()"
  name: "getCacheSize()"
  nameWithType: "BigDataPoolResourceInfo.getCacheSize()"
  summary: "Get the cacheSize property: The cache size."
  syntax: "public Integer getCacheSize()"
  returns:
    description: "the cacheSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCreationDate()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCreationDate()"
  name: "getCreationDate()"
  nameWithType: "BigDataPoolResourceInfo.getCreationDate()"
  summary: "Get the creationDate property: The time when the Big Data pool was created."
  syntax: "public OffsetDateTime getCreationDate()"
  returns:
    description: "the creationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCustomLibraries()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getCustomLibraries()"
  name: "getCustomLibraries()"
  nameWithType: "BigDataPoolResourceInfo.getCustomLibraries()"
  summary: "Get the customLibraries property: List of custom libraries/packages associated with the spark pool."
  syntax: "public List<LibraryInfo> getCustomLibraries()"
  returns:
    description: "the customLibraries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryInfo?alt=com.azure.analytics.synapse.artifacts.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getDefaultSparkLogFolder()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getDefaultSparkLogFolder()"
  name: "getDefaultSparkLogFolder()"
  nameWithType: "BigDataPoolResourceInfo.getDefaultSparkLogFolder()"
  summary: "Get the defaultSparkLogFolder property: The default folder where Spark logs will be written."
  syntax: "public String getDefaultSparkLogFolder()"
  returns:
    description: "the defaultSparkLogFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getDynamicExecutorAllocation()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getDynamicExecutorAllocation()"
  name: "getDynamicExecutorAllocation()"
  nameWithType: "BigDataPoolResourceInfo.getDynamicExecutorAllocation()"
  summary: "Get the dynamicExecutorAllocation property: Dynamic Executor Allocation."
  syntax: "public DynamicExecutorAllocation getDynamicExecutorAllocation()"
  returns:
    description: "the dynamicExecutorAllocation value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DynamicExecutorAllocation?alt=com.azure.analytics.synapse.artifacts.models.DynamicExecutorAllocation&text=DynamicExecutorAllocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getLastSucceededTimestamp()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getLastSucceededTimestamp()"
  name: "getLastSucceededTimestamp()"
  nameWithType: "BigDataPoolResourceInfo.getLastSucceededTimestamp()"
  summary: "Get the lastSucceededTimestamp property: The time when the Big Data pool was updated successfully."
  syntax: "public OffsetDateTime getLastSucceededTimestamp()"
  returns:
    description: "the lastSucceededTimestamp value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getLibraryRequirements()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getLibraryRequirements()"
  name: "getLibraryRequirements()"
  nameWithType: "BigDataPoolResourceInfo.getLibraryRequirements()"
  summary: "Get the libraryRequirements property: Spark pool library version requirements Library version requirements."
  syntax: "public LibraryRequirements getLibraryRequirements()"
  returns:
    description: "the libraryRequirements value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryRequirements?alt=com.azure.analytics.synapse.artifacts.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeCount()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeCount()"
  name: "getNodeCount()"
  nameWithType: "BigDataPoolResourceInfo.getNodeCount()"
  summary: "Get the nodeCount property: The number of nodes in the Big Data pool."
  syntax: "public Integer getNodeCount()"
  returns:
    description: "the nodeCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeSize()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeSize()"
  name: "getNodeSize()"
  nameWithType: "BigDataPoolResourceInfo.getNodeSize()"
  summary: "Get the nodeSize property: The level of compute power that each node in the Big Data pool has."
  syntax: "public NodeSize getNodeSize()"
  returns:
    description: "the nodeSize value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NodeSize?alt=com.azure.analytics.synapse.artifacts.models.NodeSize&text=NodeSize\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeSizeFamily()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getNodeSizeFamily()"
  name: "getNodeSizeFamily()"
  nameWithType: "BigDataPoolResourceInfo.getNodeSizeFamily()"
  summary: "Get the nodeSizeFamily property: The kind of nodes that the Big Data pool provides."
  syntax: "public NodeSizeFamily getNodeSizeFamily()"
  returns:
    description: "the nodeSizeFamily value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NodeSizeFamily?alt=com.azure.analytics.synapse.artifacts.models.NodeSizeFamily&text=NodeSizeFamily\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getProvisioningState()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getProvisioningState()"
  name: "getProvisioningState()"
  nameWithType: "BigDataPoolResourceInfo.getProvisioningState()"
  summary: "Get the provisioningState property: The state of the Big Data pool."
  syntax: "public String getProvisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkConfigProperties()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkConfigProperties()"
  name: "getSparkConfigProperties()"
  nameWithType: "BigDataPoolResourceInfo.getSparkConfigProperties()"
  summary: "Get the sparkConfigProperties property: Spark pool library version requirements Spark configuration file to specify additional properties."
  syntax: "public LibraryRequirements getSparkConfigProperties()"
  returns:
    description: "the sparkConfigProperties value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryRequirements?alt=com.azure.analytics.synapse.artifacts.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkEventsFolder()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkEventsFolder()"
  name: "getSparkEventsFolder()"
  nameWithType: "BigDataPoolResourceInfo.getSparkEventsFolder()"
  summary: "Get the sparkEventsFolder property: The Spark events folder."
  syntax: "public String getSparkEventsFolder()"
  returns:
    description: "the sparkEventsFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkVersion()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.getSparkVersion()"
  name: "getSparkVersion()"
  nameWithType: "BigDataPoolResourceInfo.getSparkVersion()"
  summary: "Get the sparkVersion property: The Apache Spark version."
  syntax: "public String getSparkVersion()"
  returns:
    description: "the sparkVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  name: "isComputeIsolationEnabled()"
  nameWithType: "BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  summary: "Get the isComputeIsolationEnabled property: Whether compute isolation is required or not."
  syntax: "public Boolean isComputeIsolationEnabled()"
  returns:
    description: "the isComputeIsolationEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.isSessionLevelPackagesEnabled()"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.isSessionLevelPackagesEnabled()"
  name: "isSessionLevelPackagesEnabled()"
  nameWithType: "BigDataPoolResourceInfo.isSessionLevelPackagesEnabled()"
  summary: "Get the sessionLevelPackagesEnabled property: Whether session level packages enabled."
  syntax: "public Boolean isSessionLevelPackagesEnabled()"
  returns:
    description: "the sessionLevelPackagesEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setAutoPause(com.azure.analytics.synapse.artifacts.models.AutoPauseProperties)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setAutoPause(AutoPauseProperties autoPause)"
  name: "setAutoPause(AutoPauseProperties autoPause)"
  nameWithType: "BigDataPoolResourceInfo.setAutoPause(AutoPauseProperties autoPause)"
  summary: "Set the autoPause property: Spark pool auto-pausing properties Auto-pausing properties."
  parameters:
  - description: "the autoPause value to set."
    name: "autoPause"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AutoPauseProperties?alt=com.azure.analytics.synapse.artifacts.models.AutoPauseProperties&text=AutoPauseProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setAutoPause(AutoPauseProperties autoPause)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setAutoScale(com.azure.analytics.synapse.artifacts.models.AutoScaleProperties)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setAutoScale(AutoScaleProperties autoScale)"
  name: "setAutoScale(AutoScaleProperties autoScale)"
  nameWithType: "BigDataPoolResourceInfo.setAutoScale(AutoScaleProperties autoScale)"
  summary: "Set the autoScale property: Spark pool auto-scaling properties Auto-scaling properties."
  parameters:
  - description: "the autoScale value to set."
    name: "autoScale"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AutoScaleProperties?alt=com.azure.analytics.synapse.artifacts.models.AutoScaleProperties&text=AutoScaleProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setAutoScale(AutoScaleProperties autoScale)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCacheSize(java.lang.Integer)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCacheSize(Integer cacheSize)"
  name: "setCacheSize(Integer cacheSize)"
  nameWithType: "BigDataPoolResourceInfo.setCacheSize(Integer cacheSize)"
  summary: "Set the cacheSize property: The cache size."
  parameters:
  - description: "the cacheSize value to set."
    name: "cacheSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setCacheSize(Integer cacheSize)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCreationDate(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCreationDate(OffsetDateTime creationDate)"
  name: "setCreationDate(OffsetDateTime creationDate)"
  nameWithType: "BigDataPoolResourceInfo.setCreationDate(OffsetDateTime creationDate)"
  summary: "Set the creationDate property: The time when the Big Data pool was created."
  parameters:
  - description: "the creationDate value to set."
    name: "creationDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setCreationDate(OffsetDateTime creationDate)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCustomLibraries(java.util.List<com.azure.analytics.synapse.artifacts.models.LibraryInfo>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setCustomLibraries(List<LibraryInfo> customLibraries)"
  name: "setCustomLibraries(List<LibraryInfo> customLibraries)"
  nameWithType: "BigDataPoolResourceInfo.setCustomLibraries(List<LibraryInfo> customLibraries)"
  summary: "Set the customLibraries property: List of custom libraries/packages associated with the spark pool."
  parameters:
  - description: "the customLibraries value to set."
    name: "customLibraries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryInfo?alt=com.azure.analytics.synapse.artifacts.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BigDataPoolResourceInfo setCustomLibraries(List<LibraryInfo> customLibraries)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setDefaultSparkLogFolder(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setDefaultSparkLogFolder(String defaultSparkLogFolder)"
  name: "setDefaultSparkLogFolder(String defaultSparkLogFolder)"
  nameWithType: "BigDataPoolResourceInfo.setDefaultSparkLogFolder(String defaultSparkLogFolder)"
  summary: "Set the defaultSparkLogFolder property: The default folder where Spark logs will be written."
  parameters:
  - description: "the defaultSparkLogFolder value to set."
    name: "defaultSparkLogFolder"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setDefaultSparkLogFolder(String defaultSparkLogFolder)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setDynamicExecutorAllocation(com.azure.analytics.synapse.artifacts.models.DynamicExecutorAllocation)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  name: "setDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  nameWithType: "BigDataPoolResourceInfo.setDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  summary: "Set the dynamicExecutorAllocation property: Dynamic Executor Allocation."
  parameters:
  - description: "the dynamicExecutorAllocation value to set."
    name: "dynamicExecutorAllocation"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DynamicExecutorAllocation?alt=com.azure.analytics.synapse.artifacts.models.DynamicExecutorAllocation&text=DynamicExecutorAllocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setIsComputeIsolationEnabled(java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  name: "setIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  nameWithType: "BigDataPoolResourceInfo.setIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  summary: "Set the isComputeIsolationEnabled property: Whether compute isolation is required or not."
  parameters:
  - description: "the isComputeIsolationEnabled value to set."
    name: "isComputeIsolationEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setLibraryRequirements(com.azure.analytics.synapse.artifacts.models.LibraryRequirements)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setLibraryRequirements(LibraryRequirements libraryRequirements)"
  name: "setLibraryRequirements(LibraryRequirements libraryRequirements)"
  nameWithType: "BigDataPoolResourceInfo.setLibraryRequirements(LibraryRequirements libraryRequirements)"
  summary: "Set the libraryRequirements property: Spark pool library version requirements Library version requirements."
  parameters:
  - description: "the libraryRequirements value to set."
    name: "libraryRequirements"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryRequirements?alt=com.azure.analytics.synapse.artifacts.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setLibraryRequirements(LibraryRequirements libraryRequirements)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setLocation(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setLocation(String location)"
  name: "setLocation(String location)"
  nameWithType: "BigDataPoolResourceInfo.setLocation(String location)"
  summary: "Set the location property: The geo-location where the resource lives."
  overridden: "com.azure.analytics.synapse.artifacts.models.TrackedResource.setLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeCount(java.lang.Integer)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeCount(Integer nodeCount)"
  name: "setNodeCount(Integer nodeCount)"
  nameWithType: "BigDataPoolResourceInfo.setNodeCount(Integer nodeCount)"
  summary: "Set the nodeCount property: The number of nodes in the Big Data pool."
  parameters:
  - description: "the nodeCount value to set."
    name: "nodeCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setNodeCount(Integer nodeCount)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeSize(com.azure.analytics.synapse.artifacts.models.NodeSize)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeSize(NodeSize nodeSize)"
  name: "setNodeSize(NodeSize nodeSize)"
  nameWithType: "BigDataPoolResourceInfo.setNodeSize(NodeSize nodeSize)"
  summary: "Set the nodeSize property: The level of compute power that each node in the Big Data pool has."
  parameters:
  - description: "the nodeSize value to set."
    name: "nodeSize"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NodeSize?alt=com.azure.analytics.synapse.artifacts.models.NodeSize&text=NodeSize\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setNodeSize(NodeSize nodeSize)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeSizeFamily(com.azure.analytics.synapse.artifacts.models.NodeSizeFamily)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  name: "setNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  nameWithType: "BigDataPoolResourceInfo.setNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  summary: "Set the nodeSizeFamily property: The kind of nodes that the Big Data pool provides."
  parameters:
  - description: "the nodeSizeFamily value to set."
    name: "nodeSizeFamily"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NodeSizeFamily?alt=com.azure.analytics.synapse.artifacts.models.NodeSizeFamily&text=NodeSizeFamily\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setProvisioningState(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setProvisioningState(String provisioningState)"
  name: "setProvisioningState(String provisioningState)"
  nameWithType: "BigDataPoolResourceInfo.setProvisioningState(String provisioningState)"
  summary: "Set the provisioningState property: The state of the Big Data pool."
  parameters:
  - description: "the provisioningState value to set."
    name: "provisioningState"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setProvisioningState(String provisioningState)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSessionLevelPackagesEnabled(java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  name: "setSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  nameWithType: "BigDataPoolResourceInfo.setSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  summary: "Set the sessionLevelPackagesEnabled property: Whether session level packages enabled."
  parameters:
  - description: "the sessionLevelPackagesEnabled value to set."
    name: "sessionLevelPackagesEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkConfigProperties(com.azure.analytics.synapse.artifacts.models.LibraryRequirements)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkConfigProperties(LibraryRequirements sparkConfigProperties)"
  name: "setSparkConfigProperties(LibraryRequirements sparkConfigProperties)"
  nameWithType: "BigDataPoolResourceInfo.setSparkConfigProperties(LibraryRequirements sparkConfigProperties)"
  summary: "Set the sparkConfigProperties property: Spark pool library version requirements Spark configuration file to specify additional properties."
  parameters:
  - description: "the sparkConfigProperties value to set."
    name: "sparkConfigProperties"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LibraryRequirements?alt=com.azure.analytics.synapse.artifacts.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setSparkConfigProperties(LibraryRequirements sparkConfigProperties)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkEventsFolder(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkEventsFolder(String sparkEventsFolder)"
  name: "setSparkEventsFolder(String sparkEventsFolder)"
  nameWithType: "BigDataPoolResourceInfo.setSparkEventsFolder(String sparkEventsFolder)"
  summary: "Set the sparkEventsFolder property: The Spark events folder."
  parameters:
  - description: "the sparkEventsFolder value to set."
    name: "sparkEventsFolder"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setSparkEventsFolder(String sparkEventsFolder)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkVersion(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setSparkVersion(String sparkVersion)"
  name: "setSparkVersion(String sparkVersion)"
  nameWithType: "BigDataPoolResourceInfo.setSparkVersion(String sparkVersion)"
  summary: "Set the sparkVersion property: The Apache Spark version."
  parameters:
  - description: "the sparkVersion value to set."
    name: "sparkVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfo setSparkVersion(String sparkVersion)"
  returns:
    description: "the BigDataPoolResourceInfo object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "BigDataPoolResourceInfo.setTags(Map<String,String> tags)"
  summary: "Set the tags property: Resource tags."
  overridden: "com.azure.analytics.synapse.artifacts.models.TrackedResource.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BigDataPoolResourceInfo setTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
