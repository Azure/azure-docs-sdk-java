### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.polling.PollingContext"
  id: "PollingContext"
  parent: "com.azure.core.util.polling"
  children:
  - "com.azure.core.util.polling.PollingContext.PollingContext()"
  - "com.azure.core.util.polling.PollingContext.copy()"
  - "com.azure.core.util.polling.PollingContext.getActivationResponse()"
  - "com.azure.core.util.polling.PollingContext.getData(java.lang.String)"
  - "com.azure.core.util.polling.PollingContext.getLatestResponse()"
  - "com.azure.core.util.polling.PollingContext.setData(java.lang.String,java.lang.String)"
  - "com.azure.core.util.polling.PollingContext.setLatestResponse(com.azure.core.util.polling.PollResponse<T>)"
  - "com.azure.core.util.polling.PollingContext.setOnetimeActivationResponse(com.azure.core.util.polling.PollResponse<T>)"
  langs:
  - "java"
  name: "PollingContext<T>"
  nameWithType: "PollingContext<T>"
  fullName: "com.azure.core.util.polling.PollingContext<T>"
  type: "Class"
  package: "com.azure.core.util.polling"
  summary: "A key/value store that is propagated between various poll related operations associated with <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\">PollerFlux</xref> and <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\">SyncPoller</xref> poller. The context also expose activation and latest <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref>."
  syntax:
    content: "public final class PollingContext<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.polling.PollingContext.PollingContext()"
  id: "PollingContext()"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "PollingContext()"
  nameWithType: "PollingContext<T>.PollingContext()"
  fullName: "com.azure.core.util.polling.PollingContext<T>.PollingContext()"
  overload: "com.azure.core.util.polling.PollingContext.PollingContext*"
  type: "Constructor"
  package: "com.azure.core.util.polling"
  summary: "Creates PollingContext. Package internal default constructor."
  syntax:
    content: " PollingContext()"
- uid: "com.azure.core.util.polling.PollingContext.PollingContext(com.azure.core.util.polling.PollResponse<T>,com.azure.core.util.polling.PollResponse<T>,java.util.Map<java.lang.String,java.lang.String>)"
  id: "PollingContext(com.azure.core.util.polling.PollResponse<T>,com.azure.core.util.polling.PollResponse<T>,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "PollingContext(PollResponse<T> activationResponse, PollResponse<T> latestResponse, Map<String,String> map)"
  nameWithType: "PollingContext<T>.PollingContext(PollResponse<T> activationResponse, PollResponse<T> latestResponse, Map<String,String> map)"
  fullName: "com.azure.core.util.polling.PollingContext<T>.PollingContext(PollResponse<T> activationResponse, PollResponse<T> latestResponse, Map<String,String> map)"
  overload: "com.azure.core.util.polling.PollingContext.PollingContext*"
  type: "Constructor"
  package: "com.azure.core.util.polling"
  summary: "Creates PollingContext."
  syntax:
    content: "private PollingContext(PollResponse<T> activationResponse, PollResponse<T> latestResponse, Map<String,String> map)"
    parameters:
    - id: "activationResponse"
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "activation poll response holding result of activation operation call."
    - id: "latestResponse"
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "latest poll response from pollOperation."
    - id: "map"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the map to store context"
- uid: "com.azure.core.util.polling.PollingContext.copy()"
  id: "copy()"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "copy()"
  nameWithType: "PollingContext<T>.copy()"
  fullName: "com.azure.core.util.polling.PollingContext<T>.copy()"
  overload: "com.azure.core.util.polling.PollingContext.copy*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: " PollingContext<T> copy()"
    return:
      type: "com.azure.core.util.polling.PollingContext<T>"
- uid: "com.azure.core.util.polling.PollingContext.getActivationResponse()"
  id: "getActivationResponse()"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "getActivationResponse()"
  nameWithType: "PollingContext<T>.getActivationResponse()"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getActivationResponse()"
  overload: "com.azure.core.util.polling.PollingContext.getActivationResponse*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> getActivationResponse()"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "the activation <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> holding result of activation operation call."
- uid: "com.azure.core.util.polling.PollingContext.getData(java.lang.String)"
  id: "getData(java.lang.String)"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "getData(String name)"
  nameWithType: "PollingContext<T>.getData(String name)"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getData(String name)"
  overload: "com.azure.core.util.polling.PollingContext.getData*"
  type: "Method"
  package: "com.azure.core.util.polling"
  summary: "Get a value from the context with the provided key."
  syntax:
    content: "public String getData(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the key to look for"
    return:
      type: "java.lang.String"
      description: "the value of the key if exists, else null"
- uid: "com.azure.core.util.polling.PollingContext.getLatestResponse()"
  id: "getLatestResponse()"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "getLatestResponse()"
  nameWithType: "PollingContext<T>.getLatestResponse()"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getLatestResponse()"
  overload: "com.azure.core.util.polling.PollingContext.getLatestResponse*"
  type: "Method"
  package: "com.azure.core.util.polling"
  syntax:
    content: "public PollResponse<T> getLatestResponse()"
    return:
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "the latest <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> from pollOperation."
- uid: "com.azure.core.util.polling.PollingContext.setData(java.lang.String,java.lang.String)"
  id: "setData(java.lang.String,java.lang.String)"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "setData(String name, String value)"
  nameWithType: "PollingContext<T>.setData(String name, String value)"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setData(String name, String value)"
  overload: "com.azure.core.util.polling.PollingContext.setData*"
  type: "Method"
  package: "com.azure.core.util.polling"
  summary: "Set a key-value pair in the context."
  syntax:
    content: "public PollingContext<T> setData(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the key"
    - id: "value"
      type: "java.lang.String"
      description: "the value"
    return:
      type: "com.azure.core.util.polling.PollingContext<T>"
      description: "an updated PollingContext"
- uid: "com.azure.core.util.polling.PollingContext.setLatestResponse(com.azure.core.util.polling.PollResponse<T>)"
  id: "setLatestResponse(com.azure.core.util.polling.PollResponse<T>)"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "setLatestResponse(PollResponse<T> latestResponse)"
  nameWithType: "PollingContext<T>.setLatestResponse(PollResponse<T> latestResponse)"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setLatestResponse(PollResponse<T> latestResponse)"
  overload: "com.azure.core.util.polling.PollingContext.setLatestResponse*"
  type: "Method"
  package: "com.azure.core.util.polling"
  summary: "Sets latest <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> from pollOperation. PACKAGE INTERNAL METHOD"
  syntax:
    content: " void setLatestResponse(PollResponse<T> latestResponse)"
    parameters:
    - id: "latestResponse"
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "the poll response"
- uid: "com.azure.core.util.polling.PollingContext.setOnetimeActivationResponse(com.azure.core.util.polling.PollResponse<T>)"
  id: "setOnetimeActivationResponse(com.azure.core.util.polling.PollResponse<T>)"
  parent: "com.azure.core.util.polling.PollingContext"
  langs:
  - "java"
  name: "setOnetimeActivationResponse(PollResponse<T> activationResponse)"
  nameWithType: "PollingContext<T>.setOnetimeActivationResponse(PollResponse<T> activationResponse)"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setOnetimeActivationResponse(PollResponse<T> activationResponse)"
  overload: "com.azure.core.util.polling.PollingContext.setOnetimeActivationResponse*"
  type: "Method"
  package: "com.azure.core.util.polling"
  summary: "Sets activation <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\">PollResponse</xref> holding result of activation operation call. PACKAGE INTERNAL METHOD"
  syntax:
    content: " void setOnetimeActivationResponse(PollResponse<T> activationResponse)"
    parameters:
    - id: "activationResponse"
      type: "com.azure.core.util.polling.PollResponse<T>"
      description: "the activation response"
references:
- uid: "com.azure.core.util.polling.PollingContext.PollingContext*"
  name: "PollingContext"
  nameWithType: "PollingContext<T>.PollingContext"
  fullName: "com.azure.core.util.polling.PollingContext<T>.PollingContext"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollResponse<T>"
  spec.java:
  - uid: "com.azure.core.util.polling.PollResponse"
    name: "PollResponse"
    fullName: "com.azure.core.util.polling.PollResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.polling.PollingContext.getData*"
  name: "getData"
  nameWithType: "PollingContext<T>.getData"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getData"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext<T>"
  spec.java:
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.polling.PollingContext.setData*"
  name: "setData"
  nameWithType: "PollingContext<T>.setData"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setData"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext.getActivationResponse*"
  name: "getActivationResponse"
  nameWithType: "PollingContext<T>.getActivationResponse"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getActivationResponse"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext.getLatestResponse*"
  name: "getLatestResponse"
  nameWithType: "PollingContext<T>.getLatestResponse"
  fullName: "com.azure.core.util.polling.PollingContext<T>.getLatestResponse"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext.setLatestResponse*"
  name: "setLatestResponse"
  nameWithType: "PollingContext<T>.setLatestResponse"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setLatestResponse"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext.setOnetimeActivationResponse*"
  name: "setOnetimeActivationResponse"
  nameWithType: "PollingContext<T>.setOnetimeActivationResponse"
  fullName: "com.azure.core.util.polling.PollingContext<T>.setOnetimeActivationResponse"
  package: "com.azure.core.util.polling"
- uid: "com.azure.core.util.polling.PollingContext.copy*"
  name: "copy"
  nameWithType: "PollingContext<T>.copy"
  fullName: "com.azure.core.util.polling.PollingContext<T>.copy"
  package: "com.azure.core.util.polling"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.util.polling.PollResponse"
  name: "PollResponse"
  nameWithType: "PollResponse"
  fullName: "com.azure.core.util.polling.PollResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
