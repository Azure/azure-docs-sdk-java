### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  id: BasicPolymorphicTypeValidator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype
  children:
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator(java.util.Set<java.lang.Class<?>>,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[])
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._baseTypeMatchers
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._invalidBaseTypes
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subClassMatchers
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subTypeNameMatchers
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder()
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: BasicPolymorphicTypeValidator
  nameWithType: BasicPolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  type: Class
  package: com.fasterxml.jackson.databind.jsontype
  summary: >-
    Standard <xref uid="com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator" data-throw-if-not-resolved="false">BasicPolymorphicTypeValidator</xref> implementation that users may want to use for constructing validators based on simple class hierarchy and/or name patterns to allow and/or deny certain subtypes.


    Most commonly this is used to allow known safe subtypes based on common super type or Java package name.

    For example:


    ```java


    ```
  syntax:
    content: public class BasicPolymorphicTypeValidator extends PolymorphicTypeValidator.Base implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator(java.util.Set<java.lang.Class<?>>,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[])
  id: BasicPolymorphicTypeValidator(java.util.Set<java.lang.Class<?>>,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: BasicPolymorphicTypeValidator(Set<Class<?>> invalidBaseTypes, BasicPolymorphicTypeValidator.TypeMatcher[] baseTypeMatchers, BasicPolymorphicTypeValidator.NameMatcher[] subTypeNameMatchers, BasicPolymorphicTypeValidator.TypeMatcher[] subClassMatchers)
  nameWithType: BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator(Set<Class<?>> invalidBaseTypes, BasicPolymorphicTypeValidator.TypeMatcher[] baseTypeMatchers, BasicPolymorphicTypeValidator.NameMatcher[] subTypeNameMatchers, BasicPolymorphicTypeValidator.TypeMatcher[] subClassMatchers)
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator(Set<Class<?>> invalidBaseTypes, BasicPolymorphicTypeValidator.TypeMatcher[] baseTypeMatchers, BasicPolymorphicTypeValidator.NameMatcher[] subTypeNameMatchers, BasicPolymorphicTypeValidator.TypeMatcher[] subClassMatchers)
  overload: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: protected BasicPolymorphicTypeValidator(Set<Class<?>> invalidBaseTypes, BasicPolymorphicTypeValidator.TypeMatcher[] baseTypeMatchers, BasicPolymorphicTypeValidator.NameMatcher[] subTypeNameMatchers, BasicPolymorphicTypeValidator.TypeMatcher[] subClassMatchers)
    parameters:
    - id: invalidBaseTypes
      type: java.util.Set<java.lang.Class<?>>
    - id: baseTypeMatchers
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[]
    - id: subTypeNameMatchers
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[]
    - id: subClassMatchers
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[]
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._baseTypeMatchers
  id: _baseTypeMatchers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: _baseTypeMatchers
  nameWithType: BasicPolymorphicTypeValidator._baseTypeMatchers
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._baseTypeMatchers
  type: Field
  package: com.fasterxml.jackson.databind.jsontype
  summary: Set of matchers that can validate all values of polymorphic properties that match specified allowed base types.
  syntax:
    content: protected final BasicPolymorphicTypeValidator.TypeMatcher[] _baseTypeMatchers
    return:
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[]
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._invalidBaseTypes
  id: _invalidBaseTypes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: _invalidBaseTypes
  nameWithType: BasicPolymorphicTypeValidator._invalidBaseTypes
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._invalidBaseTypes
  type: Field
  package: com.fasterxml.jackson.databind.jsontype
  summary: 'Set of specifically denied base types to indicate that use of specific base types is not allowed: most commonly used to fully block use of <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref> as the base type.'
  syntax:
    content: protected final Set<Class<?>> _invalidBaseTypes
    return:
      type: java.util.Set<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subClassMatchers
  id: _subClassMatchers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: _subClassMatchers
  nameWithType: BasicPolymorphicTypeValidator._subClassMatchers
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subClassMatchers
  type: Field
  package: com.fasterxml.jackson.databind.jsontype
  summary: Set of matchers that can validate specific values of polymorphic properties that match subtype class criteria.
  syntax:
    content: protected final BasicPolymorphicTypeValidator.TypeMatcher[] _subClassMatchers
    return:
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[]
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subTypeNameMatchers
  id: _subTypeNameMatchers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: _subTypeNameMatchers
  nameWithType: BasicPolymorphicTypeValidator._subTypeNameMatchers
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subTypeNameMatchers
  type: Field
  package: com.fasterxml.jackson.databind.jsontype
  summary: Set of matchers that can validate specific values of polymorphic properties that match subtype class name criteria.
  syntax:
    content: protected final BasicPolymorphicTypeValidator.NameMatcher[] _subTypeNameMatchers
    return:
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[]
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder()
  id: builder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: builder()
  nameWithType: BasicPolymorphicTypeValidator.builder()
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder()
  overload: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public static BasicPolymorphicTypeValidator.Builder builder()
    return:
      type: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  id: validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  nameWithType: BasicPolymorphicTypeValidator.validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method called when a property with polymorphic value is encountered, and a `TypeResolverBuilder` is needed. Intent is to allow early determination of cases where subtyping is completely denied (for example for security reasons), or, conversely, allowed for allow subtypes (when base type guarantees that all subtypes are known to be safe). Check can be thought of as both optimization (for latter case) and eager-fail (for former case) to give better feedback.
  syntax:
    content: public PolymorphicTypeValidator.Validity validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  nameWithType: BasicPolymorphicTypeValidator.validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  overload: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: >-
    Method called after intended class name for subtype has been read (and in case of minimal class name, expanded to fully-qualified class name) but before attempt is made to look up actual <xref uid="java.lang.Class" data-throw-if-not-resolved="false">java.lang.Class</xref> or <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>. Validator may be able to determine validity of eventual type (and return <xref uid="" data-throw-if-not-resolved="false">Validity#ALLOWED</xref> or <xref uid="" data-throw-if-not-resolved="false">Validity#DENIED</xref>) or, if not able to, can defer validation to actual resolved type by returning <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>.


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subClassName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator
  langs:
  - java
  name: validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  nameWithType: BasicPolymorphicTypeValidator.validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  overload: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: >-
    Method called after class name has been resolved to actual type, in cases where previous call to <xref uid="com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName*" data-throw-if-not-resolved="false">#validateSubClassName</xref> returned <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>. Validator should be able to determine validity and return appropriate <xref uid="" data-throw-if-not-resolved="false">Validity</xref> value, although it may also


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: java.util.Set<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher
    name: TypeMatcher
    fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher
    name: NameMatcher
    fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator*
  name: BasicPolymorphicTypeValidator
  nameWithType: BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder
  name: BasicPolymorphicTypeValidator.Builder
  nameWithType: BasicPolymorphicTypeValidator.Builder
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder*
  name: builder
  nameWithType: BasicPolymorphicTypeValidator.builder
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  name: PolymorphicTypeValidator.Validity
  nameWithType: PolymorphicTypeValidator.Validity
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType*
  name: validateBaseType
  nameWithType: BasicPolymorphicTypeValidator.validateBaseType
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName*
  name: validateSubClassName
  nameWithType: BasicPolymorphicTypeValidator.validateSubClassName
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType*
  name: validateSubType
  nameWithType: BasicPolymorphicTypeValidator.validateSubType
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  name: PolymorphicTypeValidator.Base
  nameWithType: PolymorphicTypeValidator.Base
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?>,JavaType,String)
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?>,JavaType,String)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?>,JavaType)
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?>,JavaType,JavaType)
  nameWithType: PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?>,JavaType,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher
  name: BasicPolymorphicTypeValidator.NameMatcher
  nameWithType: BasicPolymorphicTypeValidator.NameMatcher
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher
- uid: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher
  name: BasicPolymorphicTypeValidator.TypeMatcher
  nameWithType: BasicPolymorphicTypeValidator.TypeMatcher
  fullName: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: ?>,JavaType,String)
  nameWithType: ?>,JavaType,String)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateSubType(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateSubType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType,JavaType)
  nameWithType: ?>,JavaType,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
