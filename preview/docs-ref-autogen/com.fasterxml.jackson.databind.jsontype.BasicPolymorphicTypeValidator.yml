### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator"
fullName: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator"
name: "BasicPolymorphicTypeValidator"
nameWithType: "BasicPolymorphicTypeValidator"
summary: "Standard <xref uid=\"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicPolymorphicTypeValidator\"></xref> implementation that users may want to use for constructing validators based on simple class hierarchy and/or name patterns to allow and/or deny certain subtypes.\n\nMost commonly this is used to allow known safe subtypes based on common super type or Java package name.\nFor example:\n\n```java\n\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BasicPolymorphicTypeValidator extends PolymorphicTypeValidator.Base implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.BasicPolymorphicTypeValidator(java.util.Set<java.lang.Class<?>>,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.TypeMatcher[])"
fields:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._baseTypeMatchers"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._invalidBaseTypes"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subClassMatchers"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subTypeNameMatchers"
methods:
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.builder()"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
