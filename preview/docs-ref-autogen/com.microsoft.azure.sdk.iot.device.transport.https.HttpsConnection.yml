### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection"
fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection"
name: "HttpsConnection"
nameWithType: "HttpsConnection"
summary: "A wrapper for the Java SE class <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpsConnection"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()"
  name: "HttpsConnection()"
  nameWithType: "HttpsConnection.HttpsConnection()"
  modifiers:
  - "protected"
  syntax: "protected HttpsConnection()"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method)"
  name: "HttpsConnection(URL url, HttpsMethod method)"
  nameWithType: "HttpsConnection.HttpsConnection(URL url, HttpsMethod method)"
  summary: "Constructor."
  parameters:
  - description: "the URL for the HTTP/HTTPS connection."
    name: "url"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HTTP method (i.e. GET)."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpsConnection(URL url, HttpsMethod method)"
  exceptions:
  - description: "if the connection could not be opened."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,com.microsoft.azure.sdk.iot.device.ProxySettings)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)"
  name: "HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)"
  nameWithType: "HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)"
  summary: "Constructor."
  parameters:
  - description: "the URL for the HTTP/HTTPS connection."
    name: "url"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HTTP method (i.e. GET)."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "The proxy settings to use when connecting. If null, then no proxy will be used"
    name: "proxySettings"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ProxySettings?alt=com.microsoft.azure.sdk.iot.device.ProxySettings&text=ProxySettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings)"
  exceptions:
  - description: "if the connection could not be opened."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,com.microsoft.azure.sdk.iot.device.ProxySettings,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings, boolean isHttps)"
  name: "HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings, boolean isHttps)"
  nameWithType: "HttpsConnection.HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings, boolean isHttps)"
  summary: "Constructor."
  parameters:
  - description: "the URL for the HTTP/HTTPS connection."
    name: "url"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HTTP method (i.e. GET)."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "The proxy settings to use when connecting. If null, then no proxy will be used"
    name: "proxySettings"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ProxySettings?alt=com.microsoft.azure.sdk.iot.device.ProxySettings&text=ProxySettings\" data-throw-if-not-resolved=\"False\" />"
  - description: "if true, then this request is an https request as opposed to an http request"
    name: "isHttps"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpsConnection(URL url, HttpsMethod method, ProxySettings proxySettings, boolean isHttps)"
  exceptions:
  - description: "if the connection could not be opened."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor. Opens a connection to the given URL. Can be HTTPS or HTTP"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()"
  name: "connect()"
  nameWithType: "HttpsConnection.connect()"
  summary: "Sends the request to the URL given in the constructor."
  syntax: "public void connect()"
  exceptions:
  - description: "if the connection could not be established, or the\n server responded with a bad status code."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Sends the request to the URL given in the constructor."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()"
  name: "getResponseHeaders()"
  nameWithType: "HttpsConnection.getResponseHeaders()"
  summary: "Returns the response headers as a <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>, where the key is the header field name and the values are the values associated with the header field name."
  syntax: "public Map<String,List<String>> getResponseHeaders()"
  desc: "Returns the response headers as a <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>, where the key is the header field name and the values are the values associated with the header field name."
  returns:
    description: "the response headers."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()"
  name: "getResponseStatus()"
  nameWithType: "HttpsConnection.getResponseStatus()"
  summary: "Returns the response status code."
  syntax: "public int getResponseStatus()"
  exceptions:
  - description: "if no response was received."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Returns the response status code."
  returns:
    description: "the response status code."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()"
  name: "readError()"
  nameWithType: "HttpsConnection.readError()"
  summary: "Reads from the error stream and returns the error reason."
  syntax: "public byte[] readError()"
  exceptions:
  - description: "if the input stream could not be accessed, for\n example if the server could not be reached."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads from the error stream and returns the error reason."
  returns:
    description: "the error reason."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()"
  name: "readInput()"
  nameWithType: "HttpsConnection.readInput()"
  summary: "Reads from the input stream (response stream) and returns the response."
  syntax: "public byte[] readInput()"
  exceptions:
  - description: "if the input stream could not be accessed, for\n example if the server could not be reached."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads from the input stream (response stream) and returns the response."
  returns:
    description: "the response body."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setConnectTimeout(int timeout)"
  name: "setConnectTimeout(int timeout)"
  nameWithType: "HttpsConnection.setConnectTimeout(int timeout)"
  summary: "Sets the connect timeout in milliseconds."
  parameters:
  - description: "the connect timeout in milliseconds."
    name: "timeout"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setConnectTimeout(int timeout)"
  desc: "Sets the connect timeout in milliseconds."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeout(int timeout)"
  name: "setReadTimeout(int timeout)"
  nameWithType: "HttpsConnection.setReadTimeout(int timeout)"
  summary: "Sets the read timeout in milliseconds."
  parameters:
  - description: "the read timeout."
    name: "timeout"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setReadTimeout(int timeout)"
  desc: "Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String field, String value)"
  name: "setRequestHeader(String field, String value)"
  nameWithType: "HttpsConnection.setRequestHeader(String field, String value)"
  summary: "Sets the request header field to the given value."
  parameters:
  - description: "the header field name."
    name: "field"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the header field value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setRequestHeader(String field, String value)"
  desc: "Sets the request header field to the given value."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod method)"
  name: "setRequestMethod(HttpsMethod method)"
  nameWithType: "HttpsConnection.setRequestMethod(HttpsMethod method)"
  summary: "Sets the request method (i.<wbr>e."
  parameters:
  - description: "the request method."
    name: "method"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setRequestMethod(HttpsMethod method)"
  exceptions:
  - description: "if the request currently has a non-empty\n body and the new method is not a POST or a PUT. This is because Java's\n <xref uid=\"HttpsURLConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref> silently converts the HTTPS method to POST or PUT if a\n body is written to the request."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Sets the request method (i.e. POST)."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[])"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[] body)"
  name: "writeOutput(byte[] body)"
  nameWithType: "HttpsConnection.writeOutput(byte[] body)"
  summary: "Saves the body to be sent with the request."
  parameters:
  - description: "the request body."
    name: "body"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void writeOutput(byte[] body)"
  exceptions:
  - description: "if the request does not currently use\n method POST or PUT and the body is non-empty. This is because Java's\n <xref uid=\"HttpsURLConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref> silently converts the HTTPS method to POST or PUT if a\n body is written to the request."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Saves the body to be sent with the request."
type: "class"
desc: "A wrapper for the Java SE class <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection.\n\nThe underlying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpsURLConnection\"></xref> is transparently managed by Java. To reuse connections, for each time <xref uid=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#connect()\"></xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable."
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.https"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
