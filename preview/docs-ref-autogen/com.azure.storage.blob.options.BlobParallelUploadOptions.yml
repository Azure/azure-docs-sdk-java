### YamlMime:JavaType
uid: "com.azure.storage.blob.options.BlobParallelUploadOptions"
fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions"
name: "BlobParallelUploadOptions"
nameWithType: "BlobParallelUploadOptions"
summary: "Extended options that may be passed when uploading a Block Blob in parallel."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BlobParallelUploadOptions"
constructors:
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(com.azure.core.util.BinaryData)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(BinaryData data)"
  name: "BlobParallelUploadOptions(BinaryData data)"
  nameWithType: "BlobParallelUploadOptions.BlobParallelUploadOptions(BinaryData data)"
  summary: "Constructs a new `BlobParallelUploadOptions`."
  parameters:
  - description: "The data to write to the blob."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions(BinaryData data)"
  desc: "Constructs a new `BlobParallelUploadOptions`."
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(java.io.InputStream)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(InputStream dataStream)"
  name: "BlobParallelUploadOptions(InputStream dataStream)"
  nameWithType: "BlobParallelUploadOptions.BlobParallelUploadOptions(InputStream dataStream)"
  summary: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>."
  parameters:
  - description: "The data to write to the blob."
    name: "dataStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions(InputStream dataStream)"
  desc: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>."
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(java.io.InputStream,long)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(InputStream dataStream, long length)"
  name: "BlobParallelUploadOptions(InputStream dataStream, long length)"
  nameWithType: "BlobParallelUploadOptions.BlobParallelUploadOptions(InputStream dataStream, long length)"
  summary: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>."
  deprecatedTag: "length is no longer necessary; use <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#BlobParallelUploadOptions(InputStream)\"></xref> instead."
  parameters:
  - description: "The data to write to the blob."
    name: "dataStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic BlobParallelUploadOptions(InputStream dataStream, long length)"
  desc: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>. Use <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#BlobParallelUploadOptions(InputStream)\"></xref> instead to supply an InputStream without knowing the exact length beforehand."
  hasDeprecatedTag: true
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.BlobParallelUploadOptions(Flux<ByteBuffer> dataFlux)"
  name: "BlobParallelUploadOptions(Flux<ByteBuffer> dataFlux)"
  nameWithType: "BlobParallelUploadOptions.BlobParallelUploadOptions(Flux<ByteBuffer> dataFlux)"
  summary: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>."
  parameters:
  - description: "The data to write to the blob. Unlike other upload methods, this method does not require that\n the <code>Flux</code> be replayable. In other words, it does not have to support multiple subscribers and is not\n expected to produce the same values across subscriptions."
    name: "dataFlux"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlobParallelUploadOptions(Flux<ByteBuffer> dataFlux)"
  desc: "Constructs a new <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>."
methods:
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getDataFlux()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getDataFlux()"
  name: "getDataFlux()"
  nameWithType: "BlobParallelUploadOptions.getDataFlux()"
  summary: "Gets the data source."
  syntax: "public Flux<ByteBuffer> getDataFlux()"
  desc: "Gets the data source."
  returns:
    description: "The data to write to the blob."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getDataStream()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getDataStream()"
  name: "getDataStream()"
  nameWithType: "BlobParallelUploadOptions.getDataStream()"
  summary: "Gets the data source."
  syntax: "public InputStream getDataStream()"
  desc: "Gets the data source."
  returns:
    description: "The data to write to the blob."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getHeaders()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getHeaders()"
  name: "getHeaders()"
  nameWithType: "BlobParallelUploadOptions.getHeaders()"
  summary: "Gets the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>."
  syntax: "public BlobHttpHeaders getHeaders()"
  desc: "Gets the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getImmutabilityPolicy()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getImmutabilityPolicy()"
  name: "getImmutabilityPolicy()"
  nameWithType: "BlobParallelUploadOptions.getImmutabilityPolicy()"
  syntax: "public BlobImmutabilityPolicy getImmutabilityPolicy()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobImmutabilityPolicy\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getLength()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getLength()"
  name: "getLength()"
  nameWithType: "BlobParallelUploadOptions.getLength()"
  summary: "Gets the length of the data."
  deprecatedTag: "use <xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions.getOptionalLength()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getOptionalLength()\"></xref> to have safe access to a length that will not always exist."
  syntax: "@Deprecated\npublic long getLength()"
  desc: "Gets the length of the data."
  hasDeprecatedTag: true
  returns:
    description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getMetadata()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BlobParallelUploadOptions.getMetadata()"
  summary: "Gets the metadata."
  syntax: "public Map<String,String> getMetadata()"
  desc: "Gets the metadata."
  returns:
    description: "The metadata to associate with the blob."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getOptionalLength()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getOptionalLength()"
  name: "getOptionalLength()"
  nameWithType: "BlobParallelUploadOptions.getOptionalLength()"
  summary: "Gets the length of the data."
  syntax: "public Long getOptionalLength()"
  desc: "Gets the length of the data."
  returns:
    description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getParallelTransferOptions()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getParallelTransferOptions()"
  name: "getParallelTransferOptions()"
  nameWithType: "BlobParallelUploadOptions.getParallelTransferOptions()"
  summary: "Gets the <xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  syntax: "public ParallelTransferOptions getParallelTransferOptions()"
  desc: "Gets the <xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getRequestConditions()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getRequestConditions()"
  name: "getRequestConditions()"
  nameWithType: "BlobParallelUploadOptions.getRequestConditions()"
  summary: "Gets the <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>."
  syntax: "public BlobRequestConditions getRequestConditions()"
  desc: "Gets the <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTags()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTags()"
  name: "getTags()"
  nameWithType: "BlobParallelUploadOptions.getTags()"
  summary: "Get the tags."
  syntax: "public Map<String,String> getTags()"
  desc: "Get the tags."
  returns:
    description: "The tags to associate with the blob."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTier()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTier()"
  name: "getTier()"
  nameWithType: "BlobParallelUploadOptions.getTier()"
  summary: "Gets the <xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>."
  syntax: "public AccessTier getTier()"
  desc: "Gets the <xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTimeout()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.getTimeout()"
  name: "getTimeout()"
  nameWithType: "BlobParallelUploadOptions.getTimeout()"
  summary: "Gets the timeout."
  deprecatedTag: "Use <xref uid=\"com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient#uploadWithResponse(BlobParallelUploadOptions, Duration, Context)\"></xref> to specify timeout."
  syntax: "@Deprecated\npublic Duration getTimeout()"
  desc: "Gets the timeout."
  hasDeprecatedTag: true
  returns:
    description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.isComputeMd5()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.isComputeMd5()"
  name: "isComputeMd5()"
  nameWithType: "BlobParallelUploadOptions.isComputeMd5()"
  syntax: "public boolean isComputeMd5()"
  returns:
    description: "Whether or not the library should calculate the md5 and send it for the service to verify."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.isLegalHold()"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.isLegalHold()"
  name: "isLegalHold()"
  nameWithType: "BlobParallelUploadOptions.isLegalHold()"
  syntax: "public Boolean isLegalHold()"
  returns:
    description: "If a legal hold should be placed on the blob."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setComputeMd5(boolean)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setComputeMd5(boolean computeMd5)"
  name: "setComputeMd5(boolean computeMd5)"
  nameWithType: "BlobParallelUploadOptions.setComputeMd5(boolean computeMd5)"
  summary: "Sets the compute<wbr>Md5 property."
  parameters:
  - description: "Whether or not the library should calculate the md5 and send it for the service to\n verify."
    name: "computeMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setComputeMd5(boolean computeMd5)"
  desc: "Sets the computeMd5 property."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setHeaders(BlobHttpHeaders headers)"
  name: "setHeaders(BlobHttpHeaders headers)"
  nameWithType: "BlobParallelUploadOptions.setHeaders(BlobHttpHeaders headers)"
  summary: "Sets the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setHeaders(BlobHttpHeaders headers)"
  desc: "Sets the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>."
  returns:
    description: "The updated options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setImmutabilityPolicy(com.azure.storage.blob.models.BlobImmutabilityPolicy)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  name: "setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  nameWithType: "BlobParallelUploadOptions.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  summary: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobImmutabilityPolicy\"></xref>"
    name: "immutabilityPolicy"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  desc: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setLegalHold(java.lang.Boolean)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setLegalHold(Boolean legalHold)"
  name: "setLegalHold(Boolean legalHold)"
  nameWithType: "BlobParallelUploadOptions.setLegalHold(Boolean legalHold)"
  summary: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  parameters:
  - description: "Indicates if a legal hold should be placed on the blob."
    name: "legalHold"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setLegalHold(Boolean legalHold)"
  desc: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setMetadata(Map<String,String> metadata)"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "BlobParallelUploadOptions.setMetadata(Map<String,String> metadata)"
  summary: "Sets the metadata."
  parameters:
  - description: "The metadata to associate with the blob."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlobParallelUploadOptions setMetadata(Map<String,String> metadata)"
  desc: "Sets the metadata."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setParallelTransferOptions(com.azure.storage.blob.models.ParallelTransferOptions)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  name: "setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  nameWithType: "BlobParallelUploadOptions.setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  summary: "Sets the <xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>"
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  desc: "Sets the <xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setRequestConditions(BlobRequestConditions requestConditions)"
  name: "setRequestConditions(BlobRequestConditions requestConditions)"
  nameWithType: "BlobParallelUploadOptions.setRequestConditions(BlobRequestConditions requestConditions)"
  summary: "Sets the <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setRequestConditions(BlobRequestConditions requestConditions)"
  desc: "Sets the <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "BlobParallelUploadOptions.setTags(Map<String,String> tags)"
  summary: "Set the tags."
  parameters:
  - description: "The tags to associate with the blob."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlobParallelUploadOptions setTags(Map<String,String> tags)"
  desc: "Set the tags."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTier(com.azure.storage.blob.models.AccessTier)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTier(AccessTier tier)"
  name: "setTier(AccessTier tier)"
  nameWithType: "BlobParallelUploadOptions.setTier(AccessTier tier)"
  summary: "Sets the <xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobParallelUploadOptions setTier(AccessTier tier)"
  desc: "Sets the <xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTimeout(java.time.Duration)"
  fullName: "com.azure.storage.blob.options.BlobParallelUploadOptions.setTimeout(Duration timeout)"
  name: "setTimeout(Duration timeout)"
  nameWithType: "BlobParallelUploadOptions.setTimeout(Duration timeout)"
  summary: "Sets the timeout."
  deprecatedTag: "Use <xref uid=\"com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient#uploadWithResponse(BlobParallelUploadOptions, Duration, Context)\"></xref> to specify timeout."
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic BlobParallelUploadOptions setTimeout(Duration timeout)"
  desc: "Sets the timeout."
  hasDeprecatedTag: true
  returns:
    description: "The updated options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when uploading a Block Blob in parallel."
metadata: {}
package: "com.azure.storage.blob.options"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
