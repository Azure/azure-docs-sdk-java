### YamlMime:JavaType
uid: "com.azure.core.util.serializer.TypeReference"
fullName: "com.azure.core.util.serializer.TypeReference<T>"
name: "TypeReference<T>"
nameWithType: "TypeReference<T>"
summary: "This class represents a generic Java type, retaining information about generics.\n\n**Code sample**\n\n\\{@codesnippet com.azure.core.util.serializer.constructor\\} \\{@codesnippet com.azure.core.util.serializer.createInstance\\#class\\}"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class TypeReference<T>"
constructors:
- "com.azure.core.util.serializer.TypeReference.TypeReference()"
methods:
- "com.azure.core.util.serializer.TypeReference.<T>createInstance(java.lang.Class<T>)"
- "com.azure.core.util.serializer.TypeReference.getJavaType()"
type: "class"
typeParameters:
- name: "T"
metadata: {}
package: "com.azure.core.util.serializer"
artifact: com.azure:azure-core:1.19.0-beta.1
