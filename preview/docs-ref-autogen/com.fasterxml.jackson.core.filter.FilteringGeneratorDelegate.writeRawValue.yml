### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue*"
fullName: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue"
name: "writeRawValue"
nameWithType: "FilteringGeneratorDelegate.writeRawValue"
members:
- uid: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(char[],int,int)"
  fullName: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(char[] text, int offset, int len)"
  name: "writeRawValue(char[] text, int offset, int len)"
  nameWithType: "FilteringGeneratorDelegate.writeRawValue(char[] text, int offset, int len)"
  overridden: "com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(char[],int,int)"
  parameters:
  - name: "text"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRawValue(char[] text, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(String text)"
  name: "writeRawValue(String text)"
  nameWithType: "FilteringGeneratorDelegate.writeRawValue(String text)"
  summary: "Method that will force generator to copy input text verbatim without any modifications, but assuming it must constitute a single legal JSON value (number, string, boolean, null, Array or List). Assuming this, proper separators are added if and as needed (comma or colon), and generator state updated to reflect this."
  overridden: "com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String)"
  parameters:
  - name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRawValue(String text)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(java.lang.String,int,int)"
  fullName: "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(String text, int offset, int len)"
  name: "writeRawValue(String text, int offset, int len)"
  nameWithType: "FilteringGeneratorDelegate.writeRawValue(String text, int offset, int len)"
  overridden: "com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeRawValue(java.lang.String,int,int)"
  parameters:
  - name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRawValue(String text, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.filter"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
