### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.CloudPool
  id: CloudPool
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool()
  - com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()
  - com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()
  - com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()
  - com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()
  - com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()
  - com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()
  - com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()
  - com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()
  - com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()
  - com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()
  - com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()
  - com.microsoft.azure.batch.protocol.models.CloudPool.displayName()
  - com.microsoft.azure.batch.protocol.models.CloudPool.eTag()
  - com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()
  - com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()
  - com.microsoft.azure.batch.protocol.models.CloudPool.id()
  - com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()
  - com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode()
  - com.microsoft.azure.batch.protocol.models.CloudPool.metadata()
  - com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration()
  - com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()
  - com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()
  - com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()
  - com.microsoft.azure.batch.protocol.models.CloudPool.startTask()
  - com.microsoft.azure.batch.protocol.models.CloudPool.state()
  - com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()
  - com.microsoft.azure.batch.protocol.models.CloudPool.stats()
  - com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()
  - com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()
  - com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()
  - com.microsoft.azure.batch.protocol.models.CloudPool.url()
  - com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()
  - com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()
  - com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()
  - com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(com.microsoft.azure.batch.protocol.models.AllocationState)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(java.util.List<java.lang.String>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(org.joda.time.Period)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(com.microsoft.azure.batch.protocol.models.AutoScaleRun)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withETag(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(java.lang.Boolean)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(java.lang.Boolean)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withId(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(org.joda.time.Period)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withState(com.microsoft.azure.batch.protocol.models.PoolState)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withStats(com.microsoft.azure.batch.protocol.models.PoolStatistics)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  - com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(java.lang.String)
  langs:
  - java
  name: CloudPool
  nameWithType: CloudPool
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: A Pool in the Azure Batch service.
  syntax:
    content: public class CloudPool
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool()
  id: CloudPool()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: CloudPool()
  nameWithType: CloudPool.CloudPool()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public CloudPool()
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()
  id: allocationState()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: allocationState()
  nameWithType: CloudPool.allocationState()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get possible values include: 'steady', 'resizing', 'stopping'."
  syntax:
    content: public AllocationState allocationState()
    return:
      type: com.microsoft.azure.batch.protocol.models.AllocationState
      description: the allocationState value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()
  id: allocationStateTransitionTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: allocationStateTransitionTime()
  nameWithType: CloudPool.allocationStateTransitionTime()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the allocationStateTransitionTime value.
  syntax:
    content: public DateTime allocationStateTransitionTime()
    return:
      type: org.joda.time.DateTime
      description: the allocationStateTransitionTime value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()
  id: applicationLicenses()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: applicationLicenses()
  nameWithType: CloudPool.applicationLicenses()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail.
  syntax:
    content: public List<String> applicationLicenses()
    return:
      type: java.util.List<java.lang.String>
      description: the applicationLicenses value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()
  id: applicationPackageReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: CloudPool.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()
  id: autoScaleEvaluationInterval()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: autoScaleEvaluationInterval()
  nameWithType: CloudPool.autoScaleEvaluationInterval()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public Period autoScaleEvaluationInterval()
    return:
      type: org.joda.time.Period
      description: the autoScaleEvaluationInterval value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()
  id: autoScaleFormula()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: autoScaleFormula()
  nameWithType: CloudPool.autoScaleFormula()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public String autoScaleFormula()
    return:
      type: java.lang.String
      description: the autoScaleFormula value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()
  id: autoScaleRun()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: autoScaleRun()
  nameWithType: CloudPool.autoScaleRun()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public AutoScaleRun autoScaleRun()
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: the autoScaleRun value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()
  id: certificateReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: certificateReferences()
  nameWithType: CloudPool.certificateReferences()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public List<CertificateReference> certificateReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()
  id: cloudServiceConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: cloudServiceConfiguration()
  nameWithType: CloudPool.cloudServiceConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
  syntax:
    content: public CloudServiceConfiguration cloudServiceConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: the cloudServiceConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()
  id: creationTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: creationTime()
  nameWithType: CloudPool.creationTime()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the creationTime value.
  syntax:
    content: public DateTime creationTime()
    return:
      type: org.joda.time.DateTime
      description: the creationTime value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()
  id: currentDedicatedNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: currentDedicatedNodes()
  nameWithType: CloudPool.currentDedicatedNodes()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the currentDedicatedNodes value.
  syntax:
    content: public Integer currentDedicatedNodes()
    return:
      type: java.lang.Integer
      description: the currentDedicatedNodes value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()
  id: currentLowPriorityNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: currentLowPriorityNodes()
  nameWithType: CloudPool.currentLowPriorityNodes()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get low-priority Compute Nodes which have been preempted are included in this count.
  syntax:
    content: public Integer currentLowPriorityNodes()
    return:
      type: java.lang.Integer
      description: the currentLowPriorityNodes value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.displayName()
  id: displayName()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: displayName()
  nameWithType: CloudPool.displayName()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.displayName()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.displayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public String displayName()
    return:
      type: java.lang.String
      description: the displayName value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.eTag()
  id: eTag()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: eTag()
  nameWithType: CloudPool.eTag()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.eTag()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.eTag*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime.
  syntax:
    content: public String eTag()
    return:
      type: java.lang.String
      description: the eTag value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()
  id: enableAutoScale()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: enableAutoScale()
  nameWithType: CloudPool.enableAutoScale()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false.
  syntax:
    content: public Boolean enableAutoScale()
    return:
      type: java.lang.Boolean
      description: the enableAutoScale value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()
  id: enableInterNodeCommunication()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: enableInterNodeCommunication()
  nameWithType: CloudPool.enableInterNodeCommunication()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool.
  syntax:
    content: public Boolean enableInterNodeCommunication()
    return:
      type: java.lang.Boolean
      description: the enableInterNodeCommunication value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.id()
  id: id()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: id()
  nameWithType: CloudPool.id()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.id()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.id*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).
  syntax:
    content: public String id()
    return:
      type: java.lang.String
      description: the id value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()
  id: lastModified()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: lastModified()
  nameWithType: CloudPool.lastModified()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state.
  syntax:
    content: public DateTime lastModified()
    return:
      type: org.joda.time.DateTime
      description: the lastModified value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode()
  id: maxTasksPerNode()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: maxTasksPerNode()
  nameWithType: CloudPool.maxTasksPerNode()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
  syntax:
    content: public Integer maxTasksPerNode()
    return:
      type: java.lang.Integer
      description: the maxTasksPerNode value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.metadata()
  id: metadata()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: metadata()
  nameWithType: CloudPool.metadata()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.metadata()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.metadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the metadata value.
  syntax:
    content: public List<MetadataItem> metadata()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration()
  id: mountConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: mountConfiguration()
  nameWithType: CloudPool.mountConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
  syntax:
    content: public List<MountConfiguration> mountConfiguration()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
      description: the mountConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()
  id: networkConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: networkConfiguration()
  nameWithType: CloudPool.networkConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the networkConfiguration value.
  syntax:
    content: public NetworkConfiguration networkConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
      description: the networkConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()
  id: resizeErrors()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: resizeErrors()
  nameWithType: CloudPool.resizeErrors()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady.
  syntax:
    content: public List<ResizeError> resizeErrors()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>
      description: the resizeErrors value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()
  id: resizeTimeout()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: resizeTimeout()
  nameWithType: CloudPool.resizeTimeout()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes.
  syntax:
    content: public Period resizeTimeout()
    return:
      type: org.joda.time.Period
      description: the resizeTimeout value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.startTask()
  id: startTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: startTask()
  nameWithType: CloudPool.startTask()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.startTask()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.startTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the startTask value.
  syntax:
    content: public StartTask startTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.state()
  id: state()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: state()
  nameWithType: CloudPool.state()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.state()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.state*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get possible values include: 'active', 'deleting'."
  syntax:
    content: public PoolState state()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolState
      description: the state value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()
  id: stateTransitionTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: stateTransitionTime()
  nameWithType: CloudPool.stateTransitionTime()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the stateTransitionTime value.
  syntax:
    content: public DateTime stateTransitionTime()
    return:
      type: org.joda.time.DateTime
      description: the stateTransitionTime value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.stats()
  id: stats()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: stats()
  nameWithType: CloudPool.stats()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stats()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.stats*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public PoolStatistics stats()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: the stats value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()
  id: targetDedicatedNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: targetDedicatedNodes()
  nameWithType: CloudPool.targetDedicatedNodes()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the targetDedicatedNodes value.
  syntax:
    content: public Integer targetDedicatedNodes()
    return:
      type: java.lang.Integer
      description: the targetDedicatedNodes value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()
  id: targetLowPriorityNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: targetLowPriorityNodes()
  nameWithType: CloudPool.targetLowPriorityNodes()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the targetLowPriorityNodes value.
  syntax:
    content: public Integer targetLowPriorityNodes()
    return:
      type: java.lang.Integer
      description: the targetLowPriorityNodes value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()
  id: taskSchedulingPolicy()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: taskSchedulingPolicy()
  nameWithType: CloudPool.taskSchedulingPolicy()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if not specified, the default is spread.
  syntax:
    content: public TaskSchedulingPolicy taskSchedulingPolicy()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
      description: the taskSchedulingPolicy value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.url()
  id: url()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: url()
  nameWithType: CloudPool.url()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.url()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.url*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the url value.
  syntax:
    content: public String url()
    return:
      type: java.lang.String
      description: the url value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()
  id: userAccounts()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: userAccounts()
  nameWithType: CloudPool.userAccounts()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the userAccounts value.
  syntax:
    content: public List<UserAccount> userAccounts()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
      description: the userAccounts value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()
  id: virtualMachineConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: virtualMachineConfiguration()
  nameWithType: CloudPool.virtualMachineConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
  syntax:
    content: public VirtualMachineConfiguration virtualMachineConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the virtualMachineConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()
  id: vmSize()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: vmSize()
  nameWithType: CloudPool.vmSize()
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
  syntax:
    content: public String vmSize()
    return:
      type: java.lang.String
      description: the vmSize value
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(com.microsoft.azure.batch.protocol.models.AllocationState)
  id: withAllocationState(com.microsoft.azure.batch.protocol.models.AllocationState)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withAllocationState(AllocationState allocationState)
  nameWithType: CloudPool.withAllocationState(AllocationState allocationState)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(AllocationState allocationState)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set possible values include: 'steady', 'resizing', 'stopping'."
  syntax:
    content: public CloudPool withAllocationState(AllocationState allocationState)
    parameters:
    - id: allocationState
      type: com.microsoft.azure.batch.protocol.models.AllocationState
      description: the allocationState value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(org.joda.time.DateTime)
  id: withAllocationStateTransitionTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  nameWithType: CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the allocationStateTransitionTime value.
  syntax:
    content: public CloudPool withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
    parameters:
    - id: allocationStateTransitionTime
      type: org.joda.time.DateTime
      description: the allocationStateTransitionTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(java.util.List<java.lang.String>)
  id: withApplicationLicenses(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: CloudPool.withApplicationLicenses(List<String> applicationLicenses)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(List<String> applicationLicenses)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail.
  syntax:
    content: public CloudPool withApplicationLicenses(List<String> applicationLicenses)
    parameters:
    - id: applicationLicenses
      type: java.util.List<java.lang.String>
      description: the applicationLicenses value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  id: withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.
  syntax:
    content: public CloudPool withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(org.joda.time.Period)
  id: withAutoScaleEvaluationInterval(org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  nameWithType: CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public CloudPool withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
    parameters:
    - id: autoScaleEvaluationInterval
      type: org.joda.time.Period
      description: the autoScaleEvaluationInterval value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(java.lang.String)
  id: withAutoScaleFormula(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withAutoScaleFormula(String autoScaleFormula)
  nameWithType: CloudPool.withAutoScaleFormula(String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public CloudPool withAutoScaleFormula(String autoScaleFormula)
    parameters:
    - id: autoScaleFormula
      type: java.lang.String
      description: the autoScaleFormula value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(com.microsoft.azure.batch.protocol.models.AutoScaleRun)
  id: withAutoScaleRun(com.microsoft.azure.batch.protocol.models.AutoScaleRun)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withAutoScaleRun(AutoScaleRun autoScaleRun)
  nameWithType: CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true.
  syntax:
    content: public CloudPool withAutoScaleRun(AutoScaleRun autoScaleRun)
    parameters:
    - id: autoScaleRun
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: the autoScaleRun value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  id: withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public CloudPool withCertificateReferences(List<CertificateReference> certificateReferences)
    parameters:
    - id: certificateReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  id: withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  nameWithType: CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
  syntax:
    content: public CloudPool withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
    parameters:
    - id: cloudServiceConfiguration
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: the cloudServiceConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(org.joda.time.DateTime)
  id: withCreationTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withCreationTime(DateTime creationTime)
  nameWithType: CloudPool.withCreationTime(DateTime creationTime)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(DateTime creationTime)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the creationTime value.
  syntax:
    content: public CloudPool withCreationTime(DateTime creationTime)
    parameters:
    - id: creationTime
      type: org.joda.time.DateTime
      description: the creationTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(java.lang.Integer)
  id: withCurrentDedicatedNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  nameWithType: CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the currentDedicatedNodes value.
  syntax:
    content: public CloudPool withCurrentDedicatedNodes(Integer currentDedicatedNodes)
    parameters:
    - id: currentDedicatedNodes
      type: java.lang.Integer
      description: the currentDedicatedNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(java.lang.Integer)
  id: withCurrentLowPriorityNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  nameWithType: CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set low-priority Compute Nodes which have been preempted are included in this count.
  syntax:
    content: public CloudPool withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
    parameters:
    - id: currentLowPriorityNodes
      type: java.lang.Integer
      description: the currentLowPriorityNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(java.lang.String)
  id: withDisplayName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withDisplayName(String displayName)
  nameWithType: CloudPool.withDisplayName(String displayName)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(String displayName)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public CloudPool withDisplayName(String displayName)
    parameters:
    - id: displayName
      type: java.lang.String
      description: the displayName value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withETag(java.lang.String)
  id: withETag(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withETag(String eTag)
  nameWithType: CloudPool.withETag(String eTag)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withETag(String eTag)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withETag*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime.
  syntax:
    content: public CloudPool withETag(String eTag)
    parameters:
    - id: eTag
      type: java.lang.String
      description: the eTag value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(java.lang.Boolean)
  id: withEnableAutoScale(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withEnableAutoScale(Boolean enableAutoScale)
  nameWithType: CloudPool.withEnableAutoScale(Boolean enableAutoScale)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(Boolean enableAutoScale)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false.
  syntax:
    content: public CloudPool withEnableAutoScale(Boolean enableAutoScale)
    parameters:
    - id: enableAutoScale
      type: java.lang.Boolean
      description: the enableAutoScale value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(java.lang.Boolean)
  id: withEnableInterNodeCommunication(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  nameWithType: CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool.
  syntax:
    content: public CloudPool withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
    parameters:
    - id: enableInterNodeCommunication
      type: java.lang.Boolean
      description: the enableInterNodeCommunication value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withId(java.lang.String)
  id: withId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withId(String id)
  nameWithType: CloudPool.withId(String id)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withId(String id)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).
  syntax:
    content: public CloudPool withId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(org.joda.time.DateTime)
  id: withLastModified(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withLastModified(DateTime lastModified)
  nameWithType: CloudPool.withLastModified(DateTime lastModified)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(DateTime lastModified)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state.
  syntax:
    content: public CloudPool withLastModified(DateTime lastModified)
    parameters:
    - id: lastModified
      type: org.joda.time.DateTime
      description: the lastModified value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode(java.lang.Integer)
  id: withMaxTasksPerNode(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: CloudPool.withMaxTasksPerNode(Integer maxTasksPerNode)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode(Integer maxTasksPerNode)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
  syntax:
    content: public CloudPool withMaxTasksPerNode(Integer maxTasksPerNode)
    parameters:
    - id: maxTasksPerNode
      type: java.lang.Integer
      description: the maxTasksPerNode value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: CloudPool.withMetadata(List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the metadata value.
  syntax:
    content: public CloudPool withMetadata(List<MetadataItem> metadata)
    parameters:
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  id: withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withMountConfiguration(List<MountConfiguration> mountConfiguration)
  nameWithType: CloudPool.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
  syntax:
    content: public CloudPool withMountConfiguration(List<MountConfiguration> mountConfiguration)
    parameters:
    - id: mountConfiguration
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
      description: the mountConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  id: withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the networkConfiguration value.
  syntax:
    content: public CloudPool withNetworkConfiguration(NetworkConfiguration networkConfiguration)
    parameters:
    - id: networkConfiguration
      type: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
      description: the networkConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>)
  id: withResizeErrors(java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withResizeErrors(List<ResizeError> resizeErrors)
  nameWithType: CloudPool.withResizeErrors(List<ResizeError> resizeErrors)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(List<ResizeError> resizeErrors)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady.
  syntax:
    content: public CloudPool withResizeErrors(List<ResizeError> resizeErrors)
    parameters:
    - id: resizeErrors
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>
      description: the resizeErrors value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(org.joda.time.Period)
  id: withResizeTimeout(org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withResizeTimeout(Period resizeTimeout)
  nameWithType: CloudPool.withResizeTimeout(Period resizeTimeout)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(Period resizeTimeout)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes.
  syntax:
    content: public CloudPool withResizeTimeout(Period resizeTimeout)
    parameters:
    - id: resizeTimeout
      type: org.joda.time.Period
      description: the resizeTimeout value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  id: withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withStartTask(StartTask startTask)
  nameWithType: CloudPool.withStartTask(StartTask startTask)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(StartTask startTask)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the startTask value.
  syntax:
    content: public CloudPool withStartTask(StartTask startTask)
    parameters:
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withState(com.microsoft.azure.batch.protocol.models.PoolState)
  id: withState(com.microsoft.azure.batch.protocol.models.PoolState)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withState(PoolState state)
  nameWithType: CloudPool.withState(PoolState state)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withState(PoolState state)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set possible values include: 'active', 'deleting'."
  syntax:
    content: public CloudPool withState(PoolState state)
    parameters:
    - id: state
      type: com.microsoft.azure.batch.protocol.models.PoolState
      description: the state value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(org.joda.time.DateTime)
  id: withStateTransitionTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withStateTransitionTime(DateTime stateTransitionTime)
  nameWithType: CloudPool.withStateTransitionTime(DateTime stateTransitionTime)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(DateTime stateTransitionTime)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the stateTransitionTime value.
  syntax:
    content: public CloudPool withStateTransitionTime(DateTime stateTransitionTime)
    parameters:
    - id: stateTransitionTime
      type: org.joda.time.DateTime
      description: the stateTransitionTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStats(com.microsoft.azure.batch.protocol.models.PoolStatistics)
  id: withStats(com.microsoft.azure.batch.protocol.models.PoolStatistics)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withStats(PoolStatistics stats)
  nameWithType: CloudPool.withStats(PoolStatistics stats)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStats(PoolStatistics stats)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withStats*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public CloudPool withStats(PoolStatistics stats)
    parameters:
    - id: stats
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: the stats value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(java.lang.Integer)
  id: withTargetDedicatedNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withTargetDedicatedNodes(Integer targetDedicatedNodes)
  nameWithType: CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the targetDedicatedNodes value.
  syntax:
    content: public CloudPool withTargetDedicatedNodes(Integer targetDedicatedNodes)
    parameters:
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: the targetDedicatedNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(java.lang.Integer)
  id: withTargetLowPriorityNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  nameWithType: CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the targetLowPriorityNodes value.
  syntax:
    content: public CloudPool withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
    parameters:
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: the targetLowPriorityNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  id: withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if not specified, the default is spread.
  syntax:
    content: public CloudPool withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
    parameters:
    - id: taskSchedulingPolicy
      type: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
      description: the taskSchedulingPolicy value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(java.lang.String)
  id: withUrl(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withUrl(String url)
  nameWithType: CloudPool.withUrl(String url)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(String url)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the url value.
  syntax:
    content: public CloudPool withUrl(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: the url value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  id: withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: CloudPool.withUserAccounts(List<UserAccount> userAccounts)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(List<UserAccount> userAccounts)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the userAccounts value.
  syntax:
    content: public CloudPool withUserAccounts(List<UserAccount> userAccounts)
    parameters:
    - id: userAccounts
      type: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
      description: the userAccounts value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  id: withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  nameWithType: CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
  syntax:
    content: public CloudPool withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
    parameters:
    - id: virtualMachineConfiguration
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the virtualMachineConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(java.lang.String)
  id: withVmSize(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CloudPool
  langs:
  - java
  name: withVmSize(String vmSize)
  nameWithType: CloudPool.withVmSize(String vmSize)
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(String vmSize)
  overload: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
  syntax:
    content: public CloudPool withVmSize(String vmSize)
    parameters:
    - id: vmSize
      type: java.lang.String
      description: the vmSize value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool*
  name: CloudPool
  nameWithType: CloudPool.CloudPool
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.id*
  name: id
  nameWithType: CloudPool.id
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withId*
  name: withId
  nameWithType: CloudPool.withId
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.displayName*
  name: displayName
  nameWithType: CloudPool.displayName
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.displayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName*
  name: withDisplayName
  nameWithType: CloudPool.withDisplayName
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.url*
  name: url
  nameWithType: CloudPool.url
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.url
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl*
  name: withUrl
  nameWithType: CloudPool.withUrl
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.eTag*
  name: eTag
  nameWithType: CloudPool.eTag
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.eTag
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withETag*
  name: withETag
  nameWithType: CloudPool.withETag
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withETag
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified*
  name: lastModified
  nameWithType: CloudPool.lastModified
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified*
  name: withLastModified
  nameWithType: CloudPool.withLastModified
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime*
  name: creationTime
  nameWithType: CloudPool.creationTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime*
  name: withCreationTime
  nameWithType: CloudPool.withCreationTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolState
  name: PoolState
  nameWithType: PoolState
  fullName: com.microsoft.azure.batch.protocol.models.PoolState
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.state*
  name: state
  nameWithType: CloudPool.state
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.state
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withState*
  name: withState
  nameWithType: CloudPool.withState
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime*
  name: stateTransitionTime
  nameWithType: CloudPool.stateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime*
  name: withStateTransitionTime
  nameWithType: CloudPool.withStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.AllocationState
  name: AllocationState
  nameWithType: AllocationState
  fullName: com.microsoft.azure.batch.protocol.models.AllocationState
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState*
  name: allocationState
  nameWithType: CloudPool.allocationState
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState*
  name: withAllocationState
  nameWithType: CloudPool.withAllocationState
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime*
  name: allocationStateTransitionTime
  nameWithType: CloudPool.allocationStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime*
  name: withAllocationStateTransitionTime
  nameWithType: CloudPool.withAllocationStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize*
  name: vmSize
  nameWithType: CloudPool.vmSize
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize*
  name: withVmSize
  nameWithType: CloudPool.withVmSize
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration*
  name: cloudServiceConfiguration
  nameWithType: CloudPool.cloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration*
  name: withCloudServiceConfiguration
  nameWithType: CloudPool.withCloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration*
  name: virtualMachineConfiguration
  nameWithType: CloudPool.virtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration*
  name: withVirtualMachineConfiguration
  nameWithType: CloudPool.withVirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout*
  name: resizeTimeout
  nameWithType: CloudPool.resizeTimeout
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout*
  name: withResizeTimeout
  nameWithType: CloudPool.withResizeTimeout
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ResizeError
    name: ResizeError
    fullName: com.microsoft.azure.batch.protocol.models.ResizeError
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors*
  name: resizeErrors
  nameWithType: CloudPool.resizeErrors
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors*
  name: withResizeErrors
  nameWithType: CloudPool.withResizeErrors
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes*
  name: currentDedicatedNodes
  nameWithType: CloudPool.currentDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes*
  name: withCurrentDedicatedNodes
  nameWithType: CloudPool.withCurrentDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes*
  name: currentLowPriorityNodes
  nameWithType: CloudPool.currentLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes*
  name: withCurrentLowPriorityNodes
  nameWithType: CloudPool.withCurrentLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes*
  name: targetDedicatedNodes
  nameWithType: CloudPool.targetDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes*
  name: withTargetDedicatedNodes
  nameWithType: CloudPool.withTargetDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes*
  name: targetLowPriorityNodes
  nameWithType: CloudPool.targetLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes*
  name: withTargetLowPriorityNodes
  nameWithType: CloudPool.withTargetLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale*
  name: enableAutoScale
  nameWithType: CloudPool.enableAutoScale
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale*
  name: withEnableAutoScale
  nameWithType: CloudPool.withEnableAutoScale
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula*
  name: autoScaleFormula
  nameWithType: CloudPool.autoScaleFormula
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula*
  name: withAutoScaleFormula
  nameWithType: CloudPool.withAutoScaleFormula
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval*
  name: autoScaleEvaluationInterval
  nameWithType: CloudPool.autoScaleEvaluationInterval
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval*
  name: withAutoScaleEvaluationInterval
  nameWithType: CloudPool.withAutoScaleEvaluationInterval
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun*
  name: autoScaleRun
  nameWithType: CloudPool.autoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun*
  name: withAutoScaleRun
  nameWithType: CloudPool.withAutoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication*
  name: enableInterNodeCommunication
  nameWithType: CloudPool.enableInterNodeCommunication
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication*
  name: withEnableInterNodeCommunication
  nameWithType: CloudPool.withEnableInterNodeCommunication
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration*
  name: networkConfiguration
  nameWithType: CloudPool.networkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration*
  name: withNetworkConfiguration
  nameWithType: CloudPool.withNetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTask
  name: StartTask
  nameWithType: StartTask
  fullName: com.microsoft.azure.batch.protocol.models.StartTask
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.startTask*
  name: startTask
  nameWithType: CloudPool.startTask
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.startTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask*
  name: withStartTask
  nameWithType: CloudPool.withStartTask
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CertificateReference
    name: CertificateReference
    fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences*
  name: certificateReferences
  nameWithType: CloudPool.certificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences*
  name: withCertificateReferences
  nameWithType: CloudPool.withCertificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: CloudPool.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: CloudPool.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses*
  name: applicationLicenses
  nameWithType: CloudPool.applicationLicenses
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses*
  name: withApplicationLicenses
  nameWithType: CloudPool.withApplicationLicenses
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode*
  name: maxTasksPerNode
  nameWithType: CloudPool.maxTasksPerNode
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode*
  name: withMaxTasksPerNode
  nameWithType: CloudPool.withMaxTasksPerNode
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
  name: TaskSchedulingPolicy
  nameWithType: TaskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy*
  name: taskSchedulingPolicy
  nameWithType: CloudPool.taskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy*
  name: withTaskSchedulingPolicy
  nameWithType: CloudPool.withTaskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UserAccount
    name: UserAccount
    fullName: com.microsoft.azure.batch.protocol.models.UserAccount
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts*
  name: userAccounts
  nameWithType: CloudPool.userAccounts
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts*
  name: withUserAccounts
  nameWithType: CloudPool.withUserAccounts
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.metadata*
  name: metadata
  nameWithType: CloudPool.metadata
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.metadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata*
  name: withMetadata
  nameWithType: CloudPool.withMetadata
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.stats*
  name: stats
  nameWithType: CloudPool.stats
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stats
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStats*
  name: withStats
  nameWithType: CloudPool.withStats
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStats
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MountConfiguration
    name: MountConfiguration
    fullName: com.microsoft.azure.batch.protocol.models.MountConfiguration
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration*
  name: mountConfiguration
  nameWithType: CloudPool.mountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration*
  name: withMountConfiguration
  nameWithType: CloudPool.withMountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.ResizeError
  name: ResizeError
  nameWithType: ResizeError
  fullName: com.microsoft.azure.batch.protocol.models.ResizeError
- uid: com.microsoft.azure.batch.protocol.models.CertificateReference
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.UserAccount
  name: UserAccount
  nameWithType: UserAccount
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
- uid: com.microsoft.azure.batch.protocol.models.MountConfiguration
  name: MountConfiguration
  nameWithType: MountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.MountConfiguration
