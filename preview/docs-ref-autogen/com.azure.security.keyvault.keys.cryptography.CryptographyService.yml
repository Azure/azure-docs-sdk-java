### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  id: "CryptographyService"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeySignRequest,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "CryptographyService"
  nameWithType: "CryptographyService"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  type: "Interface"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "The interface defining all the services for <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> to be used by the proxy service to perform REST calls. This is package-private so that these REST calls are transparent to the user."
  syntax:
    content: " interface CryptographyService"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  id: "decrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "decrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  nameWithType: "CryptographyService.decrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyOperationResult>> decrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeyOperationParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  id: "encrypt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyOperationParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "encrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  nameWithType: "CryptographyService.encrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyOperationResult>> encrypt(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyOperationParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeyOperationParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CryptographyService.getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "getSecret(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "CryptographyService.getSecret(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<SecretKey>> getSecret(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.SecretKey>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "setSecret(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.SecretRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  nameWithType: "CryptographyService.setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<SecretKey>> setSecret(String url, String secretName, String apiVersion, String acceptLanguage, SecretRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "secretName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.SecretRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.SecretKey>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeySignRequest,java.lang.String,com.azure.core.util.Context)"
  id: "sign(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeySignRequest,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "sign(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeySignRequest parameters, String type, Context context)"
  nameWithType: "CryptographyService.sign(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeySignRequest parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeySignRequest parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyOperationResult>> sign(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeySignRequest parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeySignRequest"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  id: "unwrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "unwrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  nameWithType: "CryptographyService.unwrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyOperationResult>> unwrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest,java.lang.String,com.azure.core.util.Context)"
  id: "verify(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "verify(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyVerifyRequest parameters, String type, Context context)"
  nameWithType: "CryptographyService.verify(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyVerifyRequest parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyVerifyRequest parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyVerifyResponse>> verify(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyVerifyRequest parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse>>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  id: "wrapKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyService"
  langs:
  - "java"
  name: "wrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  nameWithType: "CryptographyService.wrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract Mono<Response<KeyOperationResult>> wrapKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyWrapUnwrapRequest parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyOperationParameters"
  name: "KeyOperationParameters"
  nameWithType: "KeyOperationParameters"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyOperationParameters"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyOperationResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.cryptography.KeyOperationResult"
    name: "KeyOperationResult"
    fullName: "com.azure.security.keyvault.keys.cryptography.KeyOperationResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt*"
  name: "encrypt"
  nameWithType: "CryptographyService.encrypt"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.encrypt"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt*"
  name: "decrypt"
  nameWithType: "CryptographyService.decrypt"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.decrypt"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.KeySignRequest"
  name: "KeySignRequest"
  nameWithType: "KeySignRequest"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeySignRequest"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign*"
  name: "sign"
  nameWithType: "CryptographyService.sign"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.sign"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest"
  name: "KeyVerifyRequest"
  nameWithType: "KeyVerifyRequest"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyVerifyRequest"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse"
    name: "KeyVerifyResponse"
    fullName: "com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify*"
  name: "verify"
  nameWithType: "CryptographyService.verify"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.verify"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest"
  name: "KeyWrapUnwrapRequest"
  nameWithType: "KeyWrapUnwrapRequest"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyWrapUnwrapRequest"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey*"
  name: "wrapKey"
  nameWithType: "CryptographyService.wrapKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.wrapKey"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey*"
  name: "unwrapKey"
  nameWithType: "CryptographyService.unwrapKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.unwrapKey"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.models.KeyVaultKey"
    name: "KeyVaultKey"
    fullName: "com.azure.security.keyvault.keys.models.KeyVaultKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey*"
  name: "getKey"
  nameWithType: "CryptographyService.getKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getKey"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.cryptography.SecretKey>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.cryptography.SecretKey"
    name: "SecretKey"
    fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret*"
  name: "getSecret"
  nameWithType: "CryptographyService.getSecret"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.getSecret"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretRequestParameters"
  name: "SecretRequestParameters"
  nameWithType: "SecretRequestParameters"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretRequestParameters"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret*"
  name: "setSecret"
  nameWithType: "CryptographyService.setSecret"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyService.setSecret"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyOperationResult"
  name: "KeyOperationResult"
  nameWithType: "KeyOperationResult"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyOperationResult"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse"
  name: "KeyVerifyResponse"
  nameWithType: "KeyVerifyResponse"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyVerifyResponse"
- uid: "com.azure.security.keyvault.keys.models.KeyVaultKey"
  name: "KeyVaultKey"
  nameWithType: "KeyVaultKey"
  fullName: "com.azure.security.keyvault.keys.models.KeyVaultKey"
- uid: "com.azure.security.keyvault.keys.cryptography.SecretKey"
  name: "SecretKey"
  nameWithType: "SecretKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.SecretKey"
