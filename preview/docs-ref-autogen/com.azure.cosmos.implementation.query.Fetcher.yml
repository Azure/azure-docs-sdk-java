### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.query.Fetcher"
  id: "Fetcher"
  parent: "com.azure.cosmos.implementation.query"
  children:
  - "com.azure.cosmos.implementation.query.Fetcher.Fetcher(java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.String,boolean,int,int)"
  - "com.azure.cosmos.implementation.query.Fetcher.nextPage()"
  - "com.azure.cosmos.implementation.query.Fetcher.shouldFetchMore()"
  langs:
  - "java"
  name: "Fetcher<T>"
  nameWithType: "Fetcher<T>"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>"
  type: "Class"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: " class Fetcher<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.query.Fetcher.Fetcher(java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.String,boolean,int,int)"
  id: "Fetcher(java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.String,boolean,int,int)"
  parent: "com.azure.cosmos.implementation.query.Fetcher"
  langs:
  - "java"
  name: "Fetcher(BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, String continuationToken, boolean isChangeFeed, int top, int maxItemCount)"
  nameWithType: "Fetcher<T>.Fetcher(BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, String continuationToken, boolean isChangeFeed, int top, int maxItemCount)"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.Fetcher(BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, String continuationToken, boolean isChangeFeed, int top, int maxItemCount)"
  overload: "com.azure.cosmos.implementation.query.Fetcher.Fetcher*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public Fetcher(BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, String continuationToken, boolean isChangeFeed, int top, int maxItemCount)"
    parameters:
    - id: "createRequestFunc"
      type: "java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>"
    - id: "executeFunc"
      type: "java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>"
    - id: "continuationToken"
      type: "java.lang.String"
    - id: "isChangeFeed"
      type: "boolean"
    - id: "top"
      type: "int"
    - id: "maxItemCount"
      type: "int"
- uid: "com.azure.cosmos.implementation.query.Fetcher.nextPage()"
  id: "nextPage()"
  parent: "com.azure.cosmos.implementation.query.Fetcher"
  langs:
  - "java"
  name: "nextPage()"
  nameWithType: "Fetcher<T>.nextPage()"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.nextPage()"
  overload: "com.azure.cosmos.implementation.query.Fetcher.nextPage*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public Mono<FeedResponse<T>> nextPage()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>"
- uid: "com.azure.cosmos.implementation.query.Fetcher.shouldFetchMore()"
  id: "shouldFetchMore()"
  parent: "com.azure.cosmos.implementation.query.Fetcher"
  langs:
  - "java"
  name: "shouldFetchMore()"
  nameWithType: "Fetcher<T>.shouldFetchMore()"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.shouldFetchMore()"
  overload: "com.azure.cosmos.implementation.query.Fetcher.shouldFetchMore*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public boolean shouldFetchMore()"
    return:
      type: "boolean"
references:
- uid: "java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>"
  spec.java:
  - uid: "java.util.function.BiFunction"
    name: "BiFunction"
    fullName: "java.util.function.BiFunction"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    name: "RxDocumentServiceRequest"
    fullName: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
    name: "RxDocumentServiceRequest"
    fullName: "com.azure.cosmos.implementation.RxDocumentServiceRequest"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.implementation.query.Fetcher.Fetcher*"
  name: "Fetcher"
  nameWithType: "Fetcher<T>.Fetcher"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.Fetcher"
  package: "com.azure.cosmos.implementation.query"
- uid: "com.azure.cosmos.implementation.query.Fetcher.shouldFetchMore*"
  name: "shouldFetchMore"
  nameWithType: "Fetcher<T>.shouldFetchMore"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.shouldFetchMore"
  package: "com.azure.cosmos.implementation.query"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.Fetcher.nextPage*"
  name: "nextPage"
  nameWithType: "Fetcher<T>.nextPage"
  fullName: "com.azure.cosmos.implementation.query.Fetcher<T>.nextPage"
  package: "com.azure.cosmos.implementation.query"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.function.BiFunction"
  name: "BiFunction"
  nameWithType: "BiFunction"
  fullName: "java.util.function.BiFunction"
- uid: "java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest"
  name: "String,Integer,RxDocumentServiceRequest"
  nameWithType: "String,Integer,RxDocumentServiceRequest"
  fullName: "java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono"
  name: "RxDocumentServiceRequest,Mono"
  nameWithType: "RxDocumentServiceRequest,Mono"
  fullName: "com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.models.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.models.FeedResponse"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
