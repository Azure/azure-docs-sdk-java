### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters"
fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters"
name: "AzureOpenAITokenizerParameters"
nameWithType: "AzureOpenAITokenizerParameters"
summary: "The Azure<wbr>Open<wbr>AITokenizer<wbr>Parameters model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **AzureOpenAITokenizerParameters**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters?alt=com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters&text=AzureOpenAITokenizerParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.AzureOpenAITokenizerParameters()"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.AzureOpenAITokenizerParameters()"
  name: "AzureOpenAITokenizerParameters()"
  nameWithType: "AzureOpenAITokenizerParameters.AzureOpenAITokenizerParameters()"
  summary: "Creates an instance of Azure<wbr>Open<wbr>AITokenizer<wbr>Parameters class."
  syntax: "public AzureOpenAITokenizerParameters()"
  desc: "Creates an instance of AzureOpenAITokenizerParameters class."
methods:
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "AzureOpenAITokenizerParameters.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Azure<wbr>Open<wbr>AITokenizer<wbr>Parameters from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureOpenAITokenizerParameters fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the AzureOpenAITokenizerParameters."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of AzureOpenAITokenizerParameters from the JsonReader."
  returns:
    description: "An instance of AzureOpenAITokenizerParameters if the JsonReader was pointing to an instance of it, or\n null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters?alt=com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters&text=AzureOpenAITokenizerParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.getAllowedSpecialTokens()"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.getAllowedSpecialTokens()"
  name: "getAllowedSpecialTokens()"
  nameWithType: "AzureOpenAITokenizerParameters.getAllowedSpecialTokens()"
  summary: "Get the allowed<wbr>Special<wbr>Tokens property: (Optional) Only applies if the unit is set to azure<wbr>Open<wbr>AITokens."
  syntax: "public List<String> getAllowedSpecialTokens()"
  desc: "Get the allowedSpecialTokens property: (Optional) Only applies if the unit is set to azureOpenAITokens. This parameter defines a collection of special tokens that are permitted within the tokenization process."
  returns:
    description: "the allowedSpecialTokens value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.getEncoderModelName()"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.getEncoderModelName()"
  name: "getEncoderModelName()"
  nameWithType: "AzureOpenAITokenizerParameters.getEncoderModelName()"
  summary: "Get the encoder<wbr>Model<wbr>Name property: Only applies if the unit is set to azure<wbr>Open<wbr>AITokens."
  syntax: "public SplitSkillEncoderModelName getEncoderModelName()"
  desc: "Get the encoderModelName property: Only applies if the unit is set to azureOpenAITokens. Options include 'R50k\\_base', 'P50k\\_base', 'P50k\\_edit' and 'CL100k\\_base'. The default value is 'CL100k\\_base'."
  returns:
    description: "the encoderModelName value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SplitSkillEncoderModelName?alt=com.azure.search.documents.indexes.models.SplitSkillEncoderModelName&text=SplitSkillEncoderModelName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.setAllowedSpecialTokens(java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.setAllowedSpecialTokens(List<String> allowedSpecialTokens)"
  name: "setAllowedSpecialTokens(List<String> allowedSpecialTokens)"
  nameWithType: "AzureOpenAITokenizerParameters.setAllowedSpecialTokens(List<String> allowedSpecialTokens)"
  summary: "Set the allowed<wbr>Special<wbr>Tokens property: (Optional) Only applies if the unit is set to azure<wbr>Open<wbr>AITokens."
  parameters:
  - description: "the allowedSpecialTokens value to set."
    name: "allowedSpecialTokens"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public AzureOpenAITokenizerParameters setAllowedSpecialTokens(List<String> allowedSpecialTokens)"
  desc: "Set the allowedSpecialTokens property: (Optional) Only applies if the unit is set to azureOpenAITokens. This parameter defines a collection of special tokens that are permitted within the tokenization process."
  returns:
    description: "the AzureOpenAITokenizerParameters object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters?alt=com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters&text=AzureOpenAITokenizerParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.setEncoderModelName(com.azure.search.documents.indexes.models.SplitSkillEncoderModelName)"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.setEncoderModelName(SplitSkillEncoderModelName encoderModelName)"
  name: "setEncoderModelName(SplitSkillEncoderModelName encoderModelName)"
  nameWithType: "AzureOpenAITokenizerParameters.setEncoderModelName(SplitSkillEncoderModelName encoderModelName)"
  summary: "Set the encoder<wbr>Model<wbr>Name property: Only applies if the unit is set to azure<wbr>Open<wbr>AITokens."
  parameters:
  - description: "the encoderModelName value to set."
    name: "encoderModelName"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SplitSkillEncoderModelName?alt=com.azure.search.documents.indexes.models.SplitSkillEncoderModelName&text=SplitSkillEncoderModelName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureOpenAITokenizerParameters setEncoderModelName(SplitSkillEncoderModelName encoderModelName)"
  desc: "Set the encoderModelName property: Only applies if the unit is set to azureOpenAITokens. Options include 'R50k\\_base', 'P50k\\_base', 'P50k\\_edit' and 'CL100k\\_base'. The default value is 'CL100k\\_base'."
  returns:
    description: "the AzureOpenAITokenizerParameters object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters?alt=com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters&text=AzureOpenAITokenizerParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "AzureOpenAITokenizerParameters.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The AzureOpenAITokenizerParameters model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters?alt=com.azure.search.documents.indexes.models.AzureOpenAITokenizerParameters&text=AzureOpenAITokenizerParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
