### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter
  id: AADAppRoleStatelessAuthenticationFilter
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad
  children:
  - com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter(com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager)
  - com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  - com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities(net.minidev.json.JSONArray)
  langs:
  - java
  name: AADAppRoleStatelessAuthenticationFilter
  nameWithType: AADAppRoleStatelessAuthenticationFilter
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter
  type: Class
  package: com.microsoft.azure.spring.autoconfigure.aad
  summary: A stateless authentication filter which uses app roles feature of Azure Active Directory. Since it's a stateless implementation so the principal will not be stored in session. By using roles claim in the token it will not call Microsoft Graph to retrieve users' groups.
  syntax:
    content: public class AADAppRoleStatelessAuthenticationFilter extends OncePerRequestFilter
  inheritance:
  - java.lang.Object
  - org.springframework.web.filter.GenericFilterBean
  - org.springframework.web.filter.OncePerRequestFilter
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
  - org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
  - org.springframework.web.filter.GenericFilterBean.createEnvironment()
  - org.springframework.web.filter.GenericFilterBean.destroy()
  - org.springframework.web.filter.GenericFilterBean.getEnvironment()
  - org.springframework.web.filter.GenericFilterBean.getFilterConfig()
  - org.springframework.web.filter.GenericFilterBean.getFilterName()
  - org.springframework.web.filter.GenericFilterBean.getServletContext()
  - org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
  - org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
  - org.springframework.web.filter.GenericFilterBean.initFilterBean()
  - org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
  - org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
  - org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
  - org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
  - org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter(com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager)
  id: AADAppRoleStatelessAuthenticationFilter(com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter
  langs:
  - java
  name: AADAppRoleStatelessAuthenticationFilter(UserPrincipalManager principalManager)
  nameWithType: AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter(UserPrincipalManager principalManager)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter(UserPrincipalManager principalManager)
  overload: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter*
  type: Constructor
  package: com.microsoft.azure.spring.autoconfigure.aad
  syntax:
    content: public AADAppRoleStatelessAuthenticationFilter(UserPrincipalManager principalManager)
    parameters:
    - id: principalManager
      type: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  id: doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter
  langs:
  - java
  name: doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
  nameWithType: AADAppRoleStatelessAuthenticationFilter.doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
  overload: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal*
  type: Method
  package: com.microsoft.azure.spring.autoconfigure.aad
  syntax:
    content: protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
    parameters:
    - id: request
      type: javax.servlet.http.HttpServletRequest
    - id: response
      type: javax.servlet.http.HttpServletResponse
    - id: filterChain
      type: javax.servlet.FilterChain
  exceptions:
  - type: javax.servlet.ServletException
  - type: java.io.IOException
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities(net.minidev.json.JSONArray)
  id: rolesToGrantedAuthorities(net.minidev.json.JSONArray)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter
  langs:
  - java
  name: rolesToGrantedAuthorities(JSONArray roles)
  nameWithType: AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities(JSONArray roles)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities(JSONArray roles)
  overload: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities*
  type: Method
  package: com.microsoft.azure.spring.autoconfigure.aad
  syntax:
    content: protected Set<SimpleGrantedAuthority> rolesToGrantedAuthorities(JSONArray roles)
    parameters:
    - id: roles
      type: net.minidev.json.JSONArray
    return:
      type: java.util.Set<org.springframework.security.core.authority.SimpleGrantedAuthority>
references:
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  name: UserPrincipalManager
  nameWithType: UserPrincipalManager
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter*
  name: AADAppRoleStatelessAuthenticationFilter
  nameWithType: AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.AADAppRoleStatelessAuthenticationFilter
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: javax.servlet.ServletException
  spec.java:
  - uid: javax.servlet.ServletException
    name: ServletException
    fullName: javax.servlet.ServletException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: javax.servlet.http.HttpServletRequest
  spec.java:
  - uid: javax.servlet.http.HttpServletRequest
    name: HttpServletRequest
    fullName: javax.servlet.http.HttpServletRequest
- uid: javax.servlet.http.HttpServletResponse
  spec.java:
  - uid: javax.servlet.http.HttpServletResponse
    name: HttpServletResponse
    fullName: javax.servlet.http.HttpServletResponse
- uid: javax.servlet.FilterChain
  spec.java:
  - uid: javax.servlet.FilterChain
    name: FilterChain
    fullName: javax.servlet.FilterChain
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal*
  name: doFilterInternal
  nameWithType: AADAppRoleStatelessAuthenticationFilter.doFilterInternal
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.doFilterInternal
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: net.minidev.json.JSONArray
  spec.java:
  - uid: net.minidev.json.JSONArray
    name: JSONArray
    fullName: net.minidev.json.JSONArray
- uid: java.util.Set<org.springframework.security.core.authority.SimpleGrantedAuthority>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: org.springframework.security.core.authority.SimpleGrantedAuthority
    name: SimpleGrantedAuthority
    fullName: org.springframework.security.core.authority.SimpleGrantedAuthority
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities*
  name: rolesToGrantedAuthorities
  nameWithType: AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAppRoleStatelessAuthenticationFilter.rolesToGrantedAuthorities
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: org.springframework.web.filter.OncePerRequestFilter
  name: OncePerRequestFilter
  nameWithType: OncePerRequestFilter
  fullName: org.springframework.web.filter.OncePerRequestFilter
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilterNestedErrorDispatch(HttpServletRequest,HttpServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilterNestedErrorDispatch(HttpServletRequest,HttpServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.web.filter.GenericFilterBean.getFilterName()
  name: GenericFilterBean.getFilterName()
  nameWithType: GenericFilterBean.getFilterName()
  fullName: org.springframework.web.filter.GenericFilterBean.getFilterName()
- uid: org.springframework.web.filter.GenericFilterBean.getFilterConfig()
  name: GenericFilterBean.getFilterConfig()
  nameWithType: GenericFilterBean.getFilterConfig()
  fullName: org.springframework.web.filter.GenericFilterBean.getFilterConfig()
- uid: org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
  name: GenericFilterBean.setServletContext(ServletContext)
  nameWithType: GenericFilterBean.setServletContext(ServletContext)
  fullName: org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  name: OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  nameWithType: OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.web.filter.GenericFilterBean.getServletContext()
  name: GenericFilterBean.getServletContext()
  nameWithType: GenericFilterBean.getServletContext()
  fullName: org.springframework.web.filter.GenericFilterBean.getServletContext()
- uid: org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
  name: GenericFilterBean.afterPropertiesSet()
  nameWithType: GenericFilterBean.afterPropertiesSet()
  fullName: org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
  name: GenericFilterBean.setBeanName(String)
  nameWithType: GenericFilterBean.setBeanName(String)
  fullName: org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
- uid: org.springframework.web.filter.GenericFilterBean.getEnvironment()
  name: GenericFilterBean.getEnvironment()
  nameWithType: GenericFilterBean.getEnvironment()
  fullName: org.springframework.web.filter.GenericFilterBean.getEnvironment()
- uid: org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
  name: GenericFilterBean.addRequiredProperty(String)
  nameWithType: GenericFilterBean.addRequiredProperty(String)
  fullName: org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
  name: GenericFilterBean.init(FilterConfig)
  nameWithType: GenericFilterBean.init(FilterConfig)
  fullName: org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.web.filter.GenericFilterBean.createEnvironment()
  name: GenericFilterBean.createEnvironment()
  nameWithType: GenericFilterBean.createEnvironment()
  fullName: org.springframework.web.filter.GenericFilterBean.createEnvironment()
- uid: org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
  name: GenericFilterBean.initBeanWrapper(BeanWrapper)
  nameWithType: GenericFilterBean.initBeanWrapper(BeanWrapper)
  fullName: org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.isAsyncStarted(HttpServletRequest)
  nameWithType: OncePerRequestFilter.isAsyncStarted(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
  name: GenericFilterBean.setEnvironment(Environment)
  nameWithType: GenericFilterBean.setEnvironment(Environment)
  fullName: org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
  name: OncePerRequestFilter.shouldNotFilterErrorDispatch()
  nameWithType: OncePerRequestFilter.shouldNotFilterErrorDispatch()
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.shouldNotFilter(HttpServletRequest)
  nameWithType: OncePerRequestFilter.shouldNotFilter(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
- uid: org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
  name: OncePerRequestFilter.getAlreadyFilteredAttributeName()
  nameWithType: OncePerRequestFilter.getAlreadyFilteredAttributeName()
  fullName: org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
- uid: org.springframework.web.filter.GenericFilterBean.initFilterBean()
  name: GenericFilterBean.initFilterBean()
  nameWithType: GenericFilterBean.initFilterBean()
  fullName: org.springframework.web.filter.GenericFilterBean.initFilterBean()
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
- uid: org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.isAsyncDispatch(HttpServletRequest)
  nameWithType: OncePerRequestFilter.isAsyncDispatch(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
- uid: org.springframework.web.filter.GenericFilterBean.destroy()
  name: GenericFilterBean.destroy()
  nameWithType: GenericFilterBean.destroy()
  fullName: org.springframework.web.filter.GenericFilterBean.destroy()
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: org.springframework.security.core.authority.SimpleGrantedAuthority
  name: SimpleGrantedAuthority
  nameWithType: SimpleGrantedAuthority
  fullName: org.springframework.security.core.authority.SimpleGrantedAuthority
