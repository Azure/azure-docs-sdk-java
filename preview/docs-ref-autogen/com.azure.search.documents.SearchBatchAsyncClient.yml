### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.SearchBatchAsyncClient
  id: SearchBatchAsyncClient
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents
  children:
  - com.azure.search.documents.SearchBatchAsyncClient.addActions(java.util.Collection<com.azure.search.documents.models.IndexAction<?>>)
  - com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions(java.util.Collection<?>)
  - com.azure.search.documents.SearchBatchAsyncClient.addMergeActions(java.util.Collection<?>)
  - com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions(java.util.Collection<?>)
  - com.azure.search.documents.SearchBatchAsyncClient.addUploadActions(java.util.Collection<?>)
  - com.azure.search.documents.SearchBatchAsyncClient.close()
  - com.azure.search.documents.SearchBatchAsyncClient.flush()
  - com.azure.search.documents.SearchBatchAsyncClient.getActions()
  - com.azure.search.documents.SearchBatchAsyncClient.getBatchSize()
  langs:
  - java
  name: SearchBatchAsyncClient
  nameWithType: SearchBatchAsyncClient
  fullName: com.azure.search.documents.SearchBatchAsyncClient
  type: Class
  package: com.azure.search.documents
  summary: This class provides a client that contains operations for conveniently indexing documents to an Azure Search index.
  syntax:
    content: public final class SearchBatchAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.SearchBatchAsyncClient.SearchBatchAsyncClient(com.azure.search.documents.SearchAsyncClient,java.lang.Boolean,java.time.Duration,java.lang.Integer,com.azure.search.documents.IndexingHook)
  id: SearchBatchAsyncClient(com.azure.search.documents.SearchAsyncClient,java.lang.Boolean,java.time.Duration,java.lang.Integer,com.azure.search.documents.IndexingHook)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: SearchBatchAsyncClient(SearchAsyncClient client, Boolean autoFlush, Duration flushWindow, Integer batchSize, IndexingHook indexingHook)
  nameWithType: SearchBatchAsyncClient.SearchBatchAsyncClient(SearchAsyncClient client, Boolean autoFlush, Duration flushWindow, Integer batchSize, IndexingHook indexingHook)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.SearchBatchAsyncClient(SearchAsyncClient client, Boolean autoFlush, Duration flushWindow, Integer batchSize, IndexingHook indexingHook)
  overload: com.azure.search.documents.SearchBatchAsyncClient.SearchBatchAsyncClient*
  type: Constructor
  package: com.azure.search.documents
  syntax:
    content: " SearchBatchAsyncClient(SearchAsyncClient client, Boolean autoFlush, Duration flushWindow, Integer batchSize, IndexingHook indexingHook)"
    parameters:
    - id: client
      type: com.azure.search.documents.SearchAsyncClient
    - id: autoFlush
      type: java.lang.Boolean
    - id: flushWindow
      type: java.time.Duration
    - id: batchSize
      type: java.lang.Integer
    - id: indexingHook
      type: com.azure.search.documents.IndexingHook
- uid: com.azure.search.documents.SearchBatchAsyncClient.addActions(java.util.Collection<com.azure.search.documents.models.IndexAction<?>>)
  id: addActions(java.util.Collection<com.azure.search.documents.models.IndexAction<?>>)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: addActions(Collection<IndexAction<?>> actions)
  nameWithType: SearchBatchAsyncClient.addActions(Collection<IndexAction<?>> actions)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addActions(Collection<IndexAction<?>> actions)
  overload: com.azure.search.documents.SearchBatchAsyncClient.addActions*
  type: Method
  package: com.azure.search.documents
  summary: >-
    Adds document index actions to the batch.


    If the client is enabled for automatic batch sending, adding documents may trigger the batch to be sent for indexing.
  syntax:
    content: public Mono<Void> addActions(Collection<IndexAction<?>> actions)
    parameters:
    - id: actions
      type: java.util.Collection<com.azure.search.documents.models.IndexAction<?>>
      description: Index actions.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the documents have been added to the batch.
- uid: com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions(java.util.Collection<?>)
  id: addDeleteActions(java.util.Collection<?>)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: addDeleteActions(Collection<?> documents)
  nameWithType: SearchBatchAsyncClient.addDeleteActions(Collection<?> documents)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions(Collection<?> documents)
  overload: com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions*
  type: Method
  package: com.azure.search.documents
  summary: >-
    Adds delete document actions to the batch.


    If the client is enabled for automatic batch sending, adding documents may trigger the batch to be sent for indexing.
  syntax:
    content: public Mono<Void> addDeleteActions(Collection<?> documents)
    parameters:
    - id: documents
      type: java.util.Collection<?>
      description: Documents to be deleted.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the documents have been added to the batch.
- uid: com.azure.search.documents.SearchBatchAsyncClient.addMergeActions(java.util.Collection<?>)
  id: addMergeActions(java.util.Collection<?>)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: addMergeActions(Collection<?> documents)
  nameWithType: SearchBatchAsyncClient.addMergeActions(Collection<?> documents)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addMergeActions(Collection<?> documents)
  overload: com.azure.search.documents.SearchBatchAsyncClient.addMergeActions*
  type: Method
  package: com.azure.search.documents
  summary: >-
    Adds merge document actions to the batch.


    If the client is enabled for automatic batch sending, adding documents may trigger the batch to be sent for indexing.
  syntax:
    content: public Mono<Void> addMergeActions(Collection<?> documents)
    parameters:
    - id: documents
      type: java.util.Collection<?>
      description: Documents to be merged.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the documents have been added to the batch.
- uid: com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions(java.util.Collection<?>)
  id: addMergeOrUploadActions(java.util.Collection<?>)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: addMergeOrUploadActions(Collection<?> documents)
  nameWithType: SearchBatchAsyncClient.addMergeOrUploadActions(Collection<?> documents)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions(Collection<?> documents)
  overload: com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions*
  type: Method
  package: com.azure.search.documents
  summary: >-
    Adds merge or upload document actions to the batch.


    If the client is enabled for automatic batch sending, adding documents may trigger the batch to be sent for indexing.
  syntax:
    content: public Mono<Void> addMergeOrUploadActions(Collection<?> documents)
    parameters:
    - id: documents
      type: java.util.Collection<?>
      description: Documents to be merged or uploaded.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the documents have been added to the batch.
- uid: com.azure.search.documents.SearchBatchAsyncClient.addUploadActions(java.util.Collection<?>)
  id: addUploadActions(java.util.Collection<?>)
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: addUploadActions(Collection<?> documents)
  nameWithType: SearchBatchAsyncClient.addUploadActions(Collection<?> documents)
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addUploadActions(Collection<?> documents)
  overload: com.azure.search.documents.SearchBatchAsyncClient.addUploadActions*
  type: Method
  package: com.azure.search.documents
  summary: >-
    Adds upload document actions to the batch.


    If the client is enabled for automatic batch sending, adding documents may trigger the batch to be sent for indexing.
  syntax:
    content: public Mono<Void> addUploadActions(Collection<?> documents)
    parameters:
    - id: documents
      type: java.util.Collection<?>
      description: Documents to be uploaded.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the documents have been added to the batch.
- uid: com.azure.search.documents.SearchBatchAsyncClient.close()
  id: close()
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: close()
  nameWithType: SearchBatchAsyncClient.close()
  fullName: com.azure.search.documents.SearchBatchAsyncClient.close()
  overload: com.azure.search.documents.SearchBatchAsyncClient.close*
  type: Method
  package: com.azure.search.documents
  summary: Closes the batch, any documents remaining in the batch will be sent to the Search index for indexing.
  syntax:
    content: public Mono<Void> close()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response indicating that the batch has been closed.
- uid: com.azure.search.documents.SearchBatchAsyncClient.flush()
  id: flush()
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: flush()
  nameWithType: SearchBatchAsyncClient.flush()
  fullName: com.azure.search.documents.SearchBatchAsyncClient.flush()
  overload: com.azure.search.documents.SearchBatchAsyncClient.flush*
  type: Method
  package: com.azure.search.documents
  summary: Sends the current batch of documents to be indexed.
  syntax:
    content: public Mono<Void> flush()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response that indicates if the flush operation has completed.
- uid: com.azure.search.documents.SearchBatchAsyncClient.getActions()
  id: getActions()
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: getActions()
  nameWithType: SearchBatchAsyncClient.getActions()
  fullName: com.azure.search.documents.SearchBatchAsyncClient.getActions()
  overload: com.azure.search.documents.SearchBatchAsyncClient.getActions*
  type: Method
  package: com.azure.search.documents
  summary: Gets the <xref uid="com.azure.search.documents.models.IndexAction" data-throw-if-not-resolved="false">IndexActions</xref> in the batch that are ready to be indexed.
  syntax:
    content: public Collection<IndexAction<?>> getActions()
    return:
      type: java.util.Collection<com.azure.search.documents.models.IndexAction<?>>
      description: The <xref uid="com.azure.search.documents.models.IndexAction" data-throw-if-not-resolved="false">IndexActions</xref> in the batch that are ready to be indexed.
- uid: com.azure.search.documents.SearchBatchAsyncClient.getBatchSize()
  id: getBatchSize()
  artifact: com.azure:azure-search-documents:11.2.0-beta.1
  parent: com.azure.search.documents.SearchBatchAsyncClient
  langs:
  - java
  name: getBatchSize()
  nameWithType: SearchBatchAsyncClient.getBatchSize()
  fullName: com.azure.search.documents.SearchBatchAsyncClient.getBatchSize()
  overload: com.azure.search.documents.SearchBatchAsyncClient.getBatchSize*
  type: Method
  package: com.azure.search.documents
  summary: Gets the batch size.
  syntax:
    content: public int getBatchSize()
    return:
      type: int
      description: The batch size.
references:
- uid: com.azure.search.documents.SearchAsyncClient
  name: SearchAsyncClient
  nameWithType: SearchAsyncClient
  fullName: com.azure.search.documents.SearchAsyncClient
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.IndexingHook
  name: IndexingHook
  nameWithType: IndexingHook
  fullName: com.azure.search.documents.IndexingHook
- uid: com.azure.search.documents.SearchBatchAsyncClient.SearchBatchAsyncClient*
  name: SearchBatchAsyncClient
  nameWithType: SearchBatchAsyncClient.SearchBatchAsyncClient
  fullName: com.azure.search.documents.SearchBatchAsyncClient.SearchBatchAsyncClient
  package: com.azure.search.documents
- uid: java.util.Collection<com.azure.search.documents.models.IndexAction<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.IndexAction
    name: IndexAction
    fullName: com.azure.search.documents.models.IndexAction
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.SearchBatchAsyncClient.getActions*
  name: getActions
  nameWithType: SearchBatchAsyncClient.getActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.getActions
  package: com.azure.search.documents
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.search.documents.SearchBatchAsyncClient.getBatchSize*
  name: getBatchSize
  nameWithType: SearchBatchAsyncClient.getBatchSize
  fullName: com.azure.search.documents.SearchBatchAsyncClient.getBatchSize
  package: com.azure.search.documents
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.SearchBatchAsyncClient.addUploadActions*
  name: addUploadActions
  nameWithType: SearchBatchAsyncClient.addUploadActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addUploadActions
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions*
  name: addDeleteActions
  nameWithType: SearchBatchAsyncClient.addDeleteActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addDeleteActions
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.addMergeActions*
  name: addMergeActions
  nameWithType: SearchBatchAsyncClient.addMergeActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addMergeActions
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions*
  name: addMergeOrUploadActions
  nameWithType: SearchBatchAsyncClient.addMergeOrUploadActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addMergeOrUploadActions
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.addActions*
  name: addActions
  nameWithType: SearchBatchAsyncClient.addActions
  fullName: com.azure.search.documents.SearchBatchAsyncClient.addActions
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.flush*
  name: flush
  nameWithType: SearchBatchAsyncClient.flush
  fullName: com.azure.search.documents.SearchBatchAsyncClient.flush
  package: com.azure.search.documents
- uid: com.azure.search.documents.SearchBatchAsyncClient.close*
  name: close
  nameWithType: SearchBatchAsyncClient.close
  fullName: com.azure.search.documents.SearchBatchAsyncClient.close
  package: com.azure.search.documents
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.search.documents.models.IndexAction
  name: IndexAction
  nameWithType: IndexAction
  fullName: com.azure.search.documents.models.IndexAction
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
