### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  id: Wrapper
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.get()
  - com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.hashCode()
  - com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.toString()
  langs:
  - java
  name: Equivalence.Wrapper<T>
  nameWithType: Equivalence.Wrapper<T>
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>
  type: Class
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Wraps an object so that <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.equals(java.lang.Object)" data-throw-if-not-resolved="false">#equals(Object)</xref> and <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.hashCode()" data-throw-if-not-resolved="false">#hashCode()</xref> delegate to an <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence" data-throw-if-not-resolved="false">Equivalence</xref>.


    For example, given an <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence" data-throw-if-not-resolved="false">Equivalence</xref> for <xref uid="java.lang.String" data-throw-if-not-resolved="false">strings</xref> named `equiv` that tests equivalence using their lengths:


    ```java

    equiv.wrap("a").equals(equiv.wrap("b")) // true
     equiv.wrap("a").equals(equiv.wrap("hello")) // false
    ```


    Note in particular that an equivalence wrapper is never equal to the object it wraps.


    ```java

    equiv.wrap(obj).equals(obj) // always false

    ```
  syntax:
    content: public static final class Equivalence.Wrapper<T> implements Serializable
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.Wrapper(com.azure.cosmos.implementation.guava25.base.Equivalence<? super T>,T)
  id: Wrapper(com.azure.cosmos.implementation.guava25.base.Equivalence<? super T>,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  langs:
  - java
  name: Wrapper(Equivalence<? super T> equivalence, T reference)
  nameWithType: Equivalence.Wrapper<T>.Wrapper(Equivalence<? super T> equivalence, T reference)
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.Wrapper(Equivalence<? super T> equivalence, T reference)
  overload: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.Wrapper*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: private Wrapper(Equivalence<? super T> equivalence, T reference)
    parameters:
    - id: equivalence
      type: com.azure.cosmos.implementation.guava25.base.Equivalence<? super T>
    - id: reference
      type: T
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  langs:
  - java
  name: equals(Object obj)
  nameWithType: Equivalence.Wrapper<T>.equals(Object obj)
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.equals(Object obj)
  overload: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns `true` if <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent*" data-throw-if-not-resolved="false">Equivalence#equivalent(Object, Object)</xref> applied to the wrapped references is `true` and both wrappers use the <xref uid="java.lang.Object.equals(java.lang.Object)" data-throw-if-not-resolved="false">same</xref> equivalence.
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.get()
  id: get()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  langs:
  - java
  name: get()
  nameWithType: Equivalence.Wrapper<T>.get()
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.get()
  overload: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.get*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns the (possibly null) reference wrapped by this instance.
  syntax:
    content: public T get()
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  langs:
  - java
  name: hashCode()
  nameWithType: Equivalence.Wrapper<T>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns the result of <xref uid="com.azure.cosmos.implementation.guava25.base.Equivalence.hash*" data-throw-if-not-resolved="false">Equivalence#hash(Object)</xref> applied to the wrapped reference.
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper
  langs:
  - java
  name: toString()
  nameWithType: Equivalence.Wrapper<T>.toString()
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.toString()
  overload: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.toString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a string representation for this equivalence wrapper. The form of this string representation is not specified.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence<? super T>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.base.Equivalence
    name: Equivalence
    fullName: com.azure.cosmos.implementation.guava25.base.Equivalence
  - name: <
    fullName: <
  - uid: '? super T'
    name: '? super T'
    fullName: '? super T'
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.Wrapper*
  name: Wrapper
  nameWithType: Equivalence.Wrapper<T>.Wrapper
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.Wrapper
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.get*
  name: get
  nameWithType: Equivalence.Wrapper<T>.get
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.get
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.equals*
  name: equals
  nameWithType: Equivalence.Wrapper<T>.equals
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.equals
  package: com.azure.cosmos.implementation.guava25.base
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.hashCode*
  name: hashCode
  nameWithType: Equivalence.Wrapper<T>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.hashCode
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper.toString*
  name: toString
  nameWithType: Equivalence.Wrapper<T>.toString
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence.Wrapper<T>.toString
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence
  name: Equivalence
  nameWithType: Equivalence
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence
- uid: '? super T'
  name: '? super T'
  nameWithType: '? super T'
  fullName: '? super T'
