### YamlMime:JavaMember
uid: "com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl.withExistingLocation*"
fullName: "com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl.withExistingLocation"
name: "withExistingLocation"
nameWithType: "JitNetworkAccessPolicyImpl.withExistingLocation"
members:
- uid: "com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl.withExistingLocation(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl.withExistingLocation(String resourceGroupName, String ascLocation)"
  name: "withExistingLocation(String resourceGroupName, String ascLocation)"
  nameWithType: "JitNetworkAccessPolicyImpl.withExistingLocation(String resourceGroupName, String ascLocation)"
  summary: "Specifies resourceGroupName, ascLocation."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "ascLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JitNetworkAccessPolicyImpl withExistingLocation(String resourceGroupName, String ascLocation)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl?alt=com.azure.resourcemanager.security.implementation.JitNetworkAccessPolicyImpl&text=JitNetworkAccessPolicyImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.security.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-security:1.0.0-beta.1
