### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.protocol.RedirectStrategy
  id: RedirectStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.protocol
  children:
  - org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: RedirectStrategy
  nameWithType: RedirectStrategy
  fullName: org.apache.hc.client5.http.protocol.RedirectStrategy
  type: Interface
  package: org.apache.hc.client5.http.protocol
  summary: >-
    A strategy for determining if an HTTP request should be redirected to a new location in response to an HTTP response received from the target server.


    Implementations of this interface must be thread-safe. Access to shared data must be synchronized as methods of this interface may be executed from multiple threads.
  syntax:
    content: public interface RedirectStrategy
- uid: org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  id: getLocationURI(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.protocol.RedirectStrategy
  langs:
  - java
  name: getLocationURI(HttpRequest request, HttpResponse response, HttpContext context)
  nameWithType: RedirectStrategy.getLocationURI(HttpRequest request, HttpResponse response, HttpContext context)
  fullName: org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI(HttpRequest request, HttpResponse response, HttpContext context)
  overload: org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI*
  type: Method
  package: org.apache.hc.client5.http.protocol
  syntax:
    content: public abstract URI getLocationURI(HttpRequest request, HttpResponse response, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.net.URI
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  id: isRedirected(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.protocol.RedirectStrategy
  langs:
  - java
  name: isRedirected(HttpRequest request, HttpResponse response, HttpContext context)
  nameWithType: RedirectStrategy.isRedirected(HttpRequest request, HttpResponse response, HttpContext context)
  fullName: org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected(HttpRequest request, HttpResponse response, HttpContext context)
  overload: org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected*
  type: Method
  package: org.apache.hc.client5.http.protocol
  summary: Determines if a request should be redirected to a new location given the response from the target server.
  syntax:
    content: public abstract boolean isRedirected(HttpRequest request, HttpResponse response, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
      description: the executed request
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: the response received from the target server
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the context for the request execution
    return:
      type: boolean
      description: >-
        <code>true</code> if the request should be redirected, <code>false</code>
         otherwise
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected*
  name: isRedirected
  nameWithType: RedirectStrategy.isRedirected
  fullName: org.apache.hc.client5.http.protocol.RedirectStrategy.isRedirected
  package: org.apache.hc.client5.http.protocol
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI*
  name: getLocationURI
  nameWithType: RedirectStrategy.getLocationURI
  fullName: org.apache.hc.client5.http.protocol.RedirectStrategy.getLocationURI
  package: org.apache.hc.client5.http.protocol
