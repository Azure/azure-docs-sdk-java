### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.pool.ConnPool
  id: ConnPool
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool
  children:
  - org.apache.hc.core5.pool.ConnPool.lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  - org.apache.hc.core5.pool.ConnPool.release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  langs:
  - java
  name: ConnPool<T,C>
  nameWithType: ConnPool<T,C>
  fullName: org.apache.hc.core5.pool.ConnPool<T,C>
  type: Interface
  package: org.apache.hc.core5.pool
  summary: '`ConnPool` represents a shared pool connections can be leased from and released back to.'
  syntax:
    content: public interface ConnPool<T,C>
    typeParameters:
    - id: T
    - id: C
- uid: org.apache.hc.core5.pool.ConnPool.lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  id: lease(T,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.ConnPool
  langs:
  - java
  name: lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  nameWithType: ConnPool<T,C>.lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  fullName: org.apache.hc.core5.pool.ConnPool<T,C>.lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
  overload: org.apache.hc.core5.pool.ConnPool.lease*
  type: Method
  package: org.apache.hc.core5.pool
  summary: Attempts to lease a connection for the given route and with the given state from the pool.
  syntax:
    content: public abstract Future<PoolEntry<T,C>> lease(T route, Object state, Timeout requestTimeout, FutureCallback<PoolEntry<T,C>> callback)
    parameters:
    - id: route
      type: T
      description: route of the connection.
    - id: state
      type: java.lang.Object
      description: >-
        arbitrary object that represents a particular state
          (usually a security principal or a unique token identifying
          the user whose credentials have been used while establishing the connection).
          May be <code>null</code>.
    - id: requestTimeout
      type: org.apache.hc.core5.util.Timeout
      description: request timeout.
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>
      description: operation completion callback.
    return:
      type: java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T,C>>
      description: future for a leased pool entry.
- uid: org.apache.hc.core5.pool.ConnPool.release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  id: release(org.apache.hc.core5.pool.PoolEntry<T,C>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.pool.ConnPool
  langs:
  - java
  name: release(PoolEntry<T,C> entry, boolean reusable)
  nameWithType: ConnPool<T,C>.release(PoolEntry<T,C> entry, boolean reusable)
  fullName: org.apache.hc.core5.pool.ConnPool<T,C>.release(PoolEntry<T,C> entry, boolean reusable)
  overload: org.apache.hc.core5.pool.ConnPool.release*
  type: Method
  package: org.apache.hc.core5.pool
  summary: Releases the pool entry back to the pool.
  syntax:
    content: public abstract void release(PoolEntry<T,C> entry, boolean reusable)
    parameters:
    - id: entry
      type: org.apache.hc.core5.pool.PoolEntry<T,C>
      description: pool entry leased from the pool
    - id: reusable
      type: boolean
      description: >-
        flag indicating whether or not the released connection
           is in a consistent state and is safe for further use.
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T,C>>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T,C>>
  spec.java:
  - uid: java.util.concurrent.Future
    name: Future
    fullName: java.util.concurrent.Future
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.ConnPool.lease*
  name: lease
  nameWithType: ConnPool<T,C>.lease
  fullName: org.apache.hc.core5.pool.ConnPool<T,C>.lease
  package: org.apache.hc.core5.pool
- uid: org.apache.hc.core5.pool.PoolEntry<T,C>
  spec.java:
  - uid: org.apache.hc.core5.pool.PoolEntry
    name: PoolEntry
    fullName: org.apache.hc.core5.pool.PoolEntry
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.pool.ConnPool.release*
  name: release
  nameWithType: ConnPool<T,C>.release
  fullName: org.apache.hc.core5.pool.ConnPool<T,C>.release
  package: org.apache.hc.core5.pool
- uid: C
  name: C
  nameWithType: C
  fullName: C
- uid: org.apache.hc.core5.pool.PoolEntry
  name: PoolEntry
  nameWithType: PoolEntry
  fullName: org.apache.hc.core5.pool.PoolEntry
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
- uid: T,C
  name: T,C
  nameWithType: T,C
  fullName: T,C
- uid: java.util.concurrent.Future
  name: Future
  nameWithType: Future
  fullName: java.util.concurrent.Future
