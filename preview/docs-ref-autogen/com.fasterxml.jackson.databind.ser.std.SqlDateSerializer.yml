### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  id: SqlDateSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std
  children:
  - com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer()
  - com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer(java.lang.Boolean,java.text.DateFormat)
  - com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp(java.sql.Date)
  - com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat(java.lang.Boolean,java.text.DateFormat)
  langs:
  - java
  name: SqlDateSerializer
  nameWithType: SqlDateSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  type: Class
  package: com.fasterxml.jackson.databind.ser.std
  summary: Compared to regular <xref uid="java.util.Date" data-throw-if-not-resolved="false">java.util.Date</xref> serialization, we do use String representation here. Why? Basically to truncate of time part, since that should not be used by plain SQL date.
  syntax:
    content: public class SqlDateSerializer extends DateTimeSerializerBase<Date>
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  - com.fasterxml.jackson.databind.ser.std.StdSerializer
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,boolean)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._timestamp(T)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.withFormat(java.lang.Boolean,java.text.DateFormat)
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer()
  id: SqlDateSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  langs:
  - java
  name: SqlDateSerializer()
  nameWithType: SqlDateSerializer.SqlDateSerializer()
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer()
  overload: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public SqlDateSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer(java.lang.Boolean,java.text.DateFormat)
  id: SqlDateSerializer(java.lang.Boolean,java.text.DateFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  langs:
  - java
  name: SqlDateSerializer(Boolean useTimestamp, DateFormat customFormat)
  nameWithType: SqlDateSerializer.SqlDateSerializer(Boolean useTimestamp, DateFormat customFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer(Boolean useTimestamp, DateFormat customFormat)
  overload: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected SqlDateSerializer(Boolean useTimestamp, DateFormat customFormat)
    parameters:
    - id: useTimestamp
      type: java.lang.Boolean
    - id: customFormat
      type: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp(java.sql.Date)
  id: _timestamp(java.sql.Date)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  langs:
  - java
  name: _timestamp(Date value)
  nameWithType: SqlDateSerializer._timestamp(Date value)
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp(Date value)
  overload: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected long _timestamp(Date value)
    parameters:
    - id: value
      type: java.sql.Date
    return:
      type: long
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  langs:
  - java
  name: serialize(Date value, JsonGenerator g, SerializerProvider provider)
  nameWithType: SqlDateSerializer.serialize(Date value, JsonGenerator g, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize(Date value, JsonGenerator g, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Method that can be called to ask implementation to serialize values of type this serializer handles.
  syntax:
    content: public void serialize(Date value, JsonGenerator g, SerializerProvider provider)
    parameters:
    - id: value
      type: java.sql.Date
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat(java.lang.Boolean,java.text.DateFormat)
  id: withFormat(java.lang.Boolean,java.text.DateFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
  langs:
  - java
  name: withFormat(Boolean timestamp, DateFormat customFormat)
  nameWithType: SqlDateSerializer.withFormat(Boolean timestamp, DateFormat customFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat(Boolean timestamp, DateFormat customFormat)
  overload: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public SqlDateSerializer withFormat(Boolean timestamp, DateFormat customFormat)
    parameters:
    - id: timestamp
      type: java.lang.Boolean
    - id: customFormat
      type: java.text.DateFormat
    return:
      type: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer
references:
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer*
  name: SqlDateSerializer
  nameWithType: SqlDateSerializer.SqlDateSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.SqlDateSerializer
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: java.text.DateFormat
  spec.java:
  - uid: java.text.DateFormat
    name: DateFormat
    fullName: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat*
  name: withFormat
  nameWithType: SqlDateSerializer.withFormat
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.withFormat
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.sql.Date
  spec.java:
  - uid: java.sql.Date
    name: Date
    fullName: java.sql.Date
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp*
  name: _timestamp
  nameWithType: SqlDateSerializer._timestamp
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer._timestamp
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize*
  name: serialize
  nameWithType: SqlDateSerializer.serialize
  fullName: com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase<java.sql.Date>
  name: DateTimeSerializerBase<Date>
  nameWithType: DateTimeSerializerBase<Date>
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase<java.sql.Date>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: DateTimeSerializerBase.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: DateTimeSerializerBase.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: DateTimeSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: DateTimeSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: DateTimeSerializerBase._serializeAsString(Date,JsonGenerator,SerializerProvider)
  nameWithType: DateTimeSerializerBase._serializeAsString(Date,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.withFormat(java.lang.Boolean,java.text.DateFormat)
  name: DateTimeSerializerBase.withFormat(Boolean,DateFormat)
  nameWithType: DateTimeSerializerBase.withFormat(Boolean,DateFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.withFormat(java.lang.Boolean,java.text.DateFormat)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  name: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  nameWithType: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  name: StdSerializer._nonEmpty(Collection<?>)
  nameWithType: StdSerializer._nonEmpty(Collection<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  name: StdSerializer.handledType()
  nameWithType: StdSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  name: StdSerializer.createSchemaNode(String,boolean)
  nameWithType: StdSerializer.createSchemaNode(String,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
  name: DateTimeSerializerBase._asTimestamp(SerializerProvider)
  nameWithType: DateTimeSerializerBase._asTimestamp(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  nameWithType: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  name: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  nameWithType: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: DateTimeSerializerBase.isEmpty(SerializerProvider,T)
  nameWithType: DateTimeSerializerBase.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: DateTimeSerializerBase.createContextual(SerializerProvider,BeanProperty)
  nameWithType: DateTimeSerializerBase.createContextual(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._timestamp(T)
  name: DateTimeSerializerBase._timestamp(T)
  nameWithType: DateTimeSerializerBase._timestamp(T)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._timestamp(T)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,boolean)
  name: DateTimeSerializerBase._acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,boolean)
  nameWithType: DateTimeSerializerBase._acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,boolean)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  name: DateTimeSerializerBase.getSchema(SerializerProvider,Type)
  nameWithType: DateTimeSerializerBase.getSchema(SerializerProvider,Type)
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: StdScalarSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: StdScalarSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  name: StdSerializer.createSchemaNode(String)
  nameWithType: StdSerializer.createSchemaNode(String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdSerializer._neitherNull(Object,Object)
  nameWithType: StdSerializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase
  name: DateTimeSerializerBase
  nameWithType: DateTimeSerializerBase
  fullName: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
  name: StdSerializer._nonEmpty(Collection
  nameWithType: StdSerializer._nonEmpty(Collection
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.isDefaultSerializer(JsonSerializer
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
