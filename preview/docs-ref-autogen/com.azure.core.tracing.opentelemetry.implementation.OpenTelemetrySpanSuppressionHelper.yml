### YamlMime:JavaType
uid: "com.azure.core.tracing.opentelemetry.implementation.OpenTelemetrySpanSuppressionHelper"
fullName: "com.azure.core.tracing.opentelemetry.implementation.OpenTelemetrySpanSuppressionHelper"
name: "OpenTelemetrySpanSuppressionHelper"
nameWithType: "OpenTelemetrySpanSuppressionHelper"
summary: "Helper allowing to register CLIENT spans to suppress nested auto-collected CLIENT spans and propagate context to lower levels of instrumentation or logs. Currently it's done through reflection against OpenTelemetry instrumentation-api in the agent. long-term solution for opentelemetry-api is under development https://github.com/open-telemetry/oteps/pull/172"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class OpenTelemetrySpanSuppressionHelper"
constructors:
- "com.azure.core.tracing.opentelemetry.implementation.OpenTelemetrySpanSuppressionHelper.OpenTelemetrySpanSuppressionHelper()"
methods:
- "com.azure.core.tracing.opentelemetry.implementation.OpenTelemetrySpanSuppressionHelper.makeCurrent(java.lang.Object,io.opentelemetry.context.Context)"
- "com.azure.core.tracing.opentelemetry.implementation.OpenTelemetrySpanSuppressionHelper.registerClientSpan(io.opentelemetry.context.Context)"
type: "class"
metadata: {}
package: "com.azure.core.tracing.opentelemetry.implementation"
artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.18
