### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Functions.forMap*"
fullName: "com.azure.cosmos.implementation.guava25.base.Functions.<K,V>forMap"
name: "<K,V>forMap"
nameWithType: "Functions.<K,V>forMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Functions.<K,V>forMap(java.util.Map<K,? extends V>,V)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Functions.<K,V>forMap(Map<K,? extends V> map, V defaultValue)"
  name: "<K,V>forMap(Map<K,? extends V> map, V defaultValue)"
  nameWithType: "Functions.<K,V>forMap(Map<K,? extends V> map, V defaultValue)"
  summary: "Returns a function which performs a map lookup with a default value. The function created by this method returns `defaultValue` for all inputs that do not belong to the map's key set. See also <xref uid=\"com.azure.cosmos.implementation.guava25.base.Functions.&lt;K,V&gt;forMap(java.util.Map&lt;K,V&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#forMap(Map)\"></xref>, which throws an exception in this case.\n\n**Java 8 users:** you can just write the lambda expression `k -> map.getWithDefault(k, defaultValue)` instead."
  parameters:
  - description: "source map that determines the function behavior"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the value to return for inputs that aren't map keys"
    name: "defaultValue"
    type: "<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Function<K,V> <K,V>forMap(Map<K,? extends V> map, V defaultValue)"
  returns:
    description: "function that returns <code>map.get(a)</code> when <code>a</code> is a key, or <code>\n     defaultValue</code> otherwise"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.base.Functions.<K,V>forMap(java.util.Map<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Functions.<K,V>forMap(Map<K,V> map)"
  name: "<K,V>forMap(Map<K,V> map)"
  nameWithType: "Functions.<K,V>forMap(Map<K,V> map)"
  summary: "Returns a function which performs a map lookup. The returned function throws an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if given a key that does not exist in the map. See also <xref uid=\"com.azure.cosmos.implementation.guava25.base.Functions.forMap*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#forMap(Map, Object)\"></xref>, which returns a default value in this case.\n\nNote: if `map` is a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.BiMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BiMap\"></xref> (or can be one), you can use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Maps.asConverter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Maps.asConverter\"></xref> instead to get a function that also supports reverse conversion.\n\n**Java 8 users:** if you are okay with `null` being returned for an unrecognized key (instead of an exception being thrown), you can use the method reference `map::get` instead."
  parameters:
  - name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Function<K,V> <K,V>forMap(Map<K,V> map)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
