### YamlMime:JavaType
uid: "com.azure.core.http.HttpHeaders"
fullName: "com.azure.core.http.HttpHeaders"
name: "HttpHeaders"
nameWithType: "HttpHeaders"
summary: "A collection of headers on an HTTP request or response."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpHeaders implements Iterable<HttpHeader>"
constructors:
- uid: "com.azure.core.http.HttpHeaders.HttpHeaders()"
  fullName: "com.azure.core.http.HttpHeaders.HttpHeaders()"
  name: "HttpHeaders()"
  nameWithType: "HttpHeaders.HttpHeaders()"
  summary: "Create an empty Http<wbr>Headers instance."
  syntax: "public HttpHeaders()"
  desc: "Create an empty HttpHeaders instance."
- uid: "com.azure.core.http.HttpHeaders.HttpHeaders(int)"
  fullName: "com.azure.core.http.HttpHeaders.HttpHeaders(int initialCapacity)"
  name: "HttpHeaders(int initialCapacity)"
  nameWithType: "HttpHeaders.HttpHeaders(int initialCapacity)"
  summary: "Create a Http<wbr>Headers instance with an initial `size` empty headers"
  parameters:
  - description: "the initial capacity of headers map."
    name: "initialCapacity"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpHeaders(int initialCapacity)"
  desc: "Create a HttpHeaders instance with an initial `size` empty headers"
- uid: "com.azure.core.http.HttpHeaders.HttpHeaders(java.lang.Iterable<com.azure.core.http.HttpHeader>)"
  fullName: "com.azure.core.http.HttpHeaders.HttpHeaders(Iterable<HttpHeader> headers)"
  name: "HttpHeaders(Iterable<HttpHeader> headers)"
  nameWithType: "HttpHeaders.HttpHeaders(Iterable<HttpHeader> headers)"
  summary: "Create a Http<wbr>Headers instance with the provided initial headers."
  parameters:
  - description: "the collection of initial headers"
    name: "headers"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpHeaders(Iterable<HttpHeader> headers)"
  desc: "Create a HttpHeaders instance with the provided initial headers."
- uid: "com.azure.core.http.HttpHeaders.HttpHeaders(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.core.http.HttpHeaders.HttpHeaders(Map<String,String> headers)"
  name: "HttpHeaders(Map<String,String> headers)"
  nameWithType: "HttpHeaders.HttpHeaders(Map<String,String> headers)"
  summary: "Create a Http<wbr>Headers instance with the provided initial headers."
  parameters:
  - description: "the map of initial headers"
    name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpHeaders(Map<String,String> headers)"
  desc: "Create a HttpHeaders instance with the provided initial headers."
methods:
- uid: "com.azure.core.http.HttpHeaders.add(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.add(String name, String value)"
  name: "add(String name, String value)"
  nameWithType: "HttpHeaders.add(String name, String value)"
  summary: "Adds a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value if a header with that name doesn't already exist, otherwise adds the `value` to the existing header."
  parameters:
  - description: "The name of the header."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value of the header."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpHeaders add(String name, String value)"
  desc: "Adds a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value if a header with that name doesn't already exist, otherwise adds the `value` to the existing header."
  returns:
    description: "The updated HttpHeaders object."
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.get(java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.get(String name)"
  name: "get(String name)"
  nameWithType: "HttpHeaders.get(String name)"
  summary: "Gets the <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> for the provided header name."
  parameters:
  - description: "the name of the header to find."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpHeader get(String name)"
  desc: "Gets the <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> for the provided header name. `Null` is returned if the header isn't found."
  returns:
    description: "the header if found, null otherwise."
    type: "<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.getSize()"
  fullName: "com.azure.core.http.HttpHeaders.getSize()"
  name: "getSize()"
  nameWithType: "HttpHeaders.getSize()"
  summary: "Gets the number of headers in the collection."
  syntax: "public int getSize()"
  desc: "Gets the number of headers in the collection."
  returns:
    description: "the number of headers in this collection."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.getValue(java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.getValue(String name)"
  name: "getValue(String name)"
  nameWithType: "HttpHeaders.getValue(String name)"
  summary: "Get the value for the provided header name."
  parameters:
  - description: "the name of the header whose value is being retrieved."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getValue(String name)"
  desc: "Get the value for the provided header name. `Null` is returned if the header name isn't found."
  returns:
    description: "the value of the header, or null if the header isn't found"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.getValues(java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.getValues(String name)"
  name: "getValues(String name)"
  nameWithType: "HttpHeaders.getValues(String name)"
  summary: "Get the values for the provided header name."
  parameters:
  - description: "the name of the header whose value is being retrieved."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String[] getValues(String name)"
  desc: "Get the values for the provided header name. `Null` is returned if the header name isn't found.\n\nThis returns <xref uid=\"com.azure.core.http.HttpHeaders.getValue(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getValue\"></xref> split by `comma`."
  returns:
    description: "the values of the header, or null if the header isn't found"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.http.HttpHeaders.iterator()"
  fullName: "com.azure.core.http.HttpHeaders.iterator()"
  name: "iterator()"
  nameWithType: "HttpHeaders.iterator()"
  syntax: "public Iterator<HttpHeader> iterator()"
  returns:
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpHeaders.put(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.put(String name, String value)"
  name: "put(String name, String value)"
  nameWithType: "HttpHeaders.put(String name, String value)"
  summary: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value."
  deprecatedTag: "Use <xref uid=\"com.azure.core.http.HttpHeaders.set(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#set(String, String)\"></xref> instead."
  parameters:
  - description: "the name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the value"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic HttpHeaders put(String name, String value)"
  desc: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value.\n\nIf header with same name already exists then the value will be overwritten."
  hasDeprecatedTag: true
  returns:
    description: "The updated HttpHeaders object"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.remove(java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.remove(String name)"
  name: "remove(String name)"
  nameWithType: "HttpHeaders.remove(String name)"
  summary: "Removes the <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the provided header name."
  parameters:
  - description: "the name of the header to remove."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpHeader remove(String name)"
  desc: "Removes the <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the provided header name. `Null` is returned if the header isn't found."
  returns:
    description: "the header if removed, null otherwise."
    type: "<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.set(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.http.HttpHeaders.set(String name, String value)"
  name: "set(String name, String value)"
  nameWithType: "HttpHeaders.set(String name, String value)"
  summary: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value."
  parameters:
  - description: "the name to set in the header. If it is null, this method will return with no changes to the\n headers."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the value"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpHeaders set(String name, String value)"
  desc: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and value. If a header with same name already exists then the value will be overwritten. If the given value is null, the header with the given name will be removed."
  returns:
    description: "The updated HttpHeaders object"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.set(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.core.http.HttpHeaders.set(String name, List<String> values)"
  name: "set(String name, List<String> values)"
  nameWithType: "HttpHeaders.set(String name, List<String> values)"
  summary: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and the list of values provided, such that the given values will be comma-separated when necessary."
  parameters:
  - description: "the name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the values that will be comma-separated as appropriate"
    name: "values"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpHeaders set(String name, List<String> values)"
  desc: "Sets a <xref uid=\"com.azure.core.http.HttpHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"header\"></xref> with the given name and the list of values provided, such that the given values will be comma-separated when necessary. If a header with same name already exists then the values will be overwritten. If the given values list is null, the header with the given name will be removed."
  returns:
    description: "The updated HttpHeaders object"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.setAll(java.util.Map<java.lang.String,java.util.List<java.lang.String>>)"
  fullName: "com.azure.core.http.HttpHeaders.setAll(Map<String,List<String>> headers)"
  name: "setAll(Map<String,List<String>> headers)"
  nameWithType: "HttpHeaders.setAll(Map<String,List<String>> headers)"
  summary: "Sets all provided header key/values pairs into this Http<wbr>Headers instance."
  parameters:
  - description: "a map containing keys representing header names, and keys representing the associated values."
    name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public HttpHeaders setAll(Map<String,List<String>> headers)"
  desc: "Sets all provided header key/values pairs into this HttpHeaders instance. This is equivalent to calling `headers.forEach(this::set)`, and therefore the behavior is as specified in <xref uid=\"com.azure.core.http.HttpHeaders.set(java.lang.String,java.util.List<java.lang.String>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#set(String, List)\"></xref>. In other words, this will create a header for each key in the provided map, replacing or removing an existing one, depending on the value. If the given values list is null, the header with the given name will be removed. If the given name is already a header, it will be removed and replaced with the headers provided."
  returns:
    description: "The updated HttpHeaders object"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpHeaders.stream()"
  fullName: "com.azure.core.http.HttpHeaders.stream()"
  name: "stream()"
  nameWithType: "HttpHeaders.stream()"
  summary: "Get a <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> representation of the Http<wbr>Header values in this instance."
  syntax: "public Stream<HttpHeader> stream()"
  desc: "Get a <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> representation of the HttpHeader values in this instance."
  returns:
    description: "A <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> of all header values in this instance."
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpHeaders.toMap()"
  fullName: "com.azure.core.http.HttpHeaders.toMap()"
  name: "toMap()"
  nameWithType: "HttpHeaders.toMap()"
  summary: "Returns a copy of the http headers as an unmodifiable <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> representation of the state of the headers at the time of the to<wbr>Map call."
  syntax: "public Map<String,String> toMap()"
  desc: "Returns a copy of the http headers as an unmodifiable <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> representation of the state of the headers at the time of the toMap call. This map will not change as the underlying http headers change, and nor will modifying the key or values contained in the map have any effect on the state of the http headers.\n\nNote that there may be performance implications of using Map APIs on the returned Map. It is highly recommended that users prefer to use alternate APIs present on the HttpHeaders class, over using APIs present on the returned Map class. For example, use the <xref uid=\"com.azure.core.http.HttpHeaders.get(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#get(String)\"></xref> API, rather than `httpHeaders.toMap().get(name)`."
  returns:
    description: "the headers in a copied and unmodifiable form."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpHeaders.toString()"
  fullName: "com.azure.core.http.HttpHeaders.toString()"
  name: "toString()"
  nameWithType: "HttpHeaders.toString()"
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A collection of headers on an HTTP request or response."
implements:
- "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.core.http"
artifact: com.azure:azure-core:1.22.0-beta.1
