### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.as*"
fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.as"
name: "as"
nameWithType: "JsonSerialize.as"
members:
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.as()"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.as()"
  name: "as()"
  nameWithType: "JsonSerialize.as()"
  summary: "Supertype (of declared type, which itself is supertype of runtime type) to use as type when locating serializer to use.\n\nBogus type <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref> can be used to indicate that declared type is used as is (i.e. this annotation property has no setting); this since annotation properties are not allowed to have null value.\n\nNote: if <xref uid=\"com.fasterxml.jackson.databind.annotation.JsonSerialize.using*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#using\"></xref> is also used it has precedence (since it directly specifies serializer, whereas this would only be used to locate the serializer) and value of this annotation property is ignored."
  syntax: "public abstract Class<?> as()"
  returns:
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
