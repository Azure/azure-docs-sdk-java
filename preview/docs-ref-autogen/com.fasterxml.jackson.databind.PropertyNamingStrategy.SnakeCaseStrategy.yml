### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy"
fullName: "com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy"
name: "PropertyNamingStrategy.SnakeCaseStrategy"
nameWithType: "PropertyNamingStrategy.SnakeCaseStrategy"
summary: "A <xref uid=\"com.fasterxml.jackson.databind.PropertyNamingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PropertyNamingStrategy\"></xref> that translates typical camel case Java property names to lower case JSON element names, separated by underscores. This implementation is somewhat lenient, in that it provides some additional translations beyond strictly translating from camel case only. In particular, the following translations are applied by this PropertyNamingStrategy.\n\n *  Every upper case letter in the Java property name is translated into two characters, an underscore and the lower case equivalent of the target character, with three exceptions.\n    \n    1.  For contiguous sequences of upper case letters, characters after the first character are replaced only by their lower case equivalent, and are not preceded by an underscore.\n        \n         *  This provides for reasonable translations of upper case acronyms, e.g., \"theWWW\" is translated to \"the\\_www\".\n    2.  An upper case character in the first position of the Java property name is not preceded by an underscore character, and is translated only to its lower case equivalent.\n        \n         *  For example, \"Results\" is translated to \"results\", and not to \"\\_results\".\n    3.  An upper case character in the Java property name that is already preceded by an underscore character is translated only to its lower case equivalent, and is not preceded by an additional underscore.\n        \n         *  For example, \"user\\_Name\" is translated to \"user\\_name\", and not to \"user\\_\\_name\" (with two underscore characters).\n *  If the Java property name starts with an underscore, then that underscore is not included in the translated name, unless the Java property name is just one character in length, i.e., it is the underscore character. This applies only to the first character of the Java property name.\n\nThese rules result in the following additional example translations from Java property names to JSON element names.\n\n *  \"userName\" is translated to \"user\\_name\"\n *  \"UserName\" is translated to \"user\\_name\"\n *  \"USER\\_NAME\" is translated to \"user\\_name\"\n *  \"user\\_name\" is translated to \"user\\_name\" (unchanged)\n *  \"user\" is translated to \"user\" (unchanged)\n *  \"User\" is translated to \"user\"\n *  \"USER\" is translated to \"user\"\n *  \"\\_user\" is translated to \"user\"\n *  \"\\_User\" is translated to \"user\"\n *  \"\\_\\_user\" is translated to \"\\_user\" (the first of two underscores was removed)\n *  \"user\\_\\_name\" is translated to \"user\\_\\_name\" (unchanged, with two underscores)"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.PropertyNamingStrategy\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String)"
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String)"
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)"
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)"
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.translate(java.lang.String)"
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase.translateLowerCaseWithSeparator(java.lang.String,char)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class PropertyNamingStrategy.SnakeCaseStrategy extends PropertyNamingStrategy.PropertyNamingStrategyBase"
constructors:
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy.SnakeCaseStrategy()"
methods:
- "com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy.translate(java.lang.String)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
