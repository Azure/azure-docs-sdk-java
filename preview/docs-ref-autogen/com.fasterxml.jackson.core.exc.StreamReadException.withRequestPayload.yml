### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload*"
fullName: "com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload"
name: "withRequestPayload"
nameWithType: "StreamReadException.withRequestPayload"
members:
- uid: "com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)"
  fullName: "com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload(RequestPayload payload)"
  name: "withRequestPayload(RequestPayload payload)"
  nameWithType: "StreamReadException.withRequestPayload(RequestPayload payload)"
  summary: "Fluent method that may be used to assign payload to this exception, to let recipient access it for diagnostics purposes.\n\nNOTE: \\`this\\` instance is modified and no new instance is constructed."
  parameters:
  - description: "Payload to assign to this exception"
    name: "payload"
    type: "<xref href=\"com.fasterxml.jackson.core.util.RequestPayload?alt=com.fasterxml.jackson.core.util.RequestPayload&text=RequestPayload\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamReadException withRequestPayload(RequestPayload payload)"
  returns:
    description: "This exception instance to allow call chaining"
    type: "<xref href=\"com.fasterxml.jackson.core.exc.StreamReadException?alt=com.fasterxml.jackson.core.exc.StreamReadException&text=StreamReadException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.exc"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
