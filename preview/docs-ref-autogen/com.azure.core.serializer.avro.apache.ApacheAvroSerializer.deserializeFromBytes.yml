### YamlMime:JavaMember
uid: "com.azure.core.serializer.avro.apache.ApacheAvroSerializer.deserializeFromBytes*"
fullName: "com.azure.core.serializer.avro.apache.ApacheAvroSerializer.<T>deserializeFromBytes"
name: "<T>deserializeFromBytes"
nameWithType: "ApacheAvroSerializer.<T>deserializeFromBytes"
members:
- uid: "com.azure.core.serializer.avro.apache.ApacheAvroSerializer.<T>deserializeFromBytes(byte[],com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.avro.apache.ApacheAvroSerializer.<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  name: "<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  nameWithType: "ApacheAvroSerializer.<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  parameters:
  - name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.serializer.avro.apache"
artifact: com.azure:azure-core-serializer-avro-apache:1.0.0-beta.9
