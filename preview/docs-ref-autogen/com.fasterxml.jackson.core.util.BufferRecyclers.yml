### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.BufferRecyclers
  id: BufferRecyclers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers()
  - com.fasterxml.jackson.core.util.BufferRecyclers.SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  - com.fasterxml.jackson.core.util.BufferRecyclers._recyclerRef
  - com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler()
  - com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers()
  langs:
  - java
  name: BufferRecyclers
  nameWithType: BufferRecyclers
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: Helper entity used to control access to simple buffer recyling scheme used for some encoding, decoding tasks.
  syntax:
    content: public class BufferRecyclers
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers()
  id: BufferRecyclers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecyclers
  langs:
  - java
  name: BufferRecyclers()
  nameWithType: BufferRecyclers.BufferRecyclers()
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers()
  overload: com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public BufferRecyclers()
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  id: SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecyclers
  langs:
  - java
  name: SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  nameWithType: BufferRecyclers.SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: System property that is checked to see if recycled buffers (see <xref uid="com.fasterxml.jackson.core.util.BufferRecycler" data-throw-if-not-resolved="false">BufferRecycler</xref>) should be tracked, for purpose of forcing release of all such buffers, typically during major classloading.
  syntax:
    content: public static final String SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.BufferRecyclers._recyclerRef
  id: _recyclerRef
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecyclers
  langs:
  - java
  name: _recyclerRef
  nameWithType: BufferRecyclers._recyclerRef
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers._recyclerRef
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: This `ThreadLocal` contains a <xref uid="java.lang.ref.SoftReference" data-throw-if-not-resolved="false">java.lang.ref.SoftReference</xref> to a <xref uid="com.fasterxml.jackson.core.util.BufferRecycler" data-throw-if-not-resolved="false">BufferRecycler</xref> used to provide a low-cost buffer recycling between reader and writer instances.
  syntax:
    content: protected static final ThreadLocal<SoftReference<BufferRecycler>> _recyclerRef
    return:
      type: java.lang.ThreadLocal<java.lang.ref.SoftReference<com.fasterxml.jackson.core.util.BufferRecycler>>
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler()
  id: getBufferRecycler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecyclers
  langs:
  - java
  name: getBufferRecycler()
  nameWithType: BufferRecyclers.getBufferRecycler()
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler()
  overload: com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Main accessor to call for accessing possibly recycled <xref uid="com.fasterxml.jackson.core.util.BufferRecycler" data-throw-if-not-resolved="false">BufferRecycler</xref> instance.
  syntax:
    content: public static BufferRecycler getBufferRecycler()
    return:
      type: com.fasterxml.jackson.core.util.BufferRecycler
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers()
  id: releaseBuffers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecyclers
  langs:
  - java
  name: releaseBuffers()
  nameWithType: BufferRecyclers.releaseBuffers()
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers()
  overload: com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Specialized method that will release all recycled <xref uid="com.fasterxml.jackson.core.util.BufferRecycler" data-throw-if-not-resolved="false">BufferRecycler</xref> if (and only if) recycler tracking has been enabled (see <xref uid="com.fasterxml.jackson.core.util.BufferRecyclers.SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS" data-throw-if-not-resolved="false">#SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS</xref>). This method is usually called on shutdown of the container like Application Server to ensure that no references are reachable via <xref uid="java.lang.ThreadLocal" data-throw-if-not-resolved="false">ThreadLocal</xref>s as this may cause unintentional retention of sizable amounts of memory. It may also be called regularly if GC for some reason does not clear up <xref uid="java.lang.ref.SoftReference" data-throw-if-not-resolved="false">SoftReference</xref>s aggressively enough.
  syntax:
    content: public static int releaseBuffers()
    return:
      type: int
      description: Number of buffers released, if tracking enabled (zero or more); -1 if tracking not enabled.
references:
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers*
  name: BufferRecyclers
  nameWithType: BufferRecyclers.BufferRecyclers
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.BufferRecyclers
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler
  name: BufferRecycler
  nameWithType: BufferRecycler
  fullName: com.fasterxml.jackson.core.util.BufferRecycler
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler*
  name: getBufferRecycler
  nameWithType: BufferRecyclers.getBufferRecycler
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers*
  name: releaseBuffers
  nameWithType: BufferRecyclers.releaseBuffers
  fullName: com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers
  package: com.fasterxml.jackson.core.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.ThreadLocal<java.lang.ref.SoftReference<com.fasterxml.jackson.core.util.BufferRecycler>>
  spec.java:
  - uid: java.lang.ThreadLocal
    name: ThreadLocal
    fullName: java.lang.ThreadLocal
  - name: <
    fullName: <
  - uid: java.lang.ref.SoftReference
    name: SoftReference
    fullName: java.lang.ref.SoftReference
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.core.util.BufferRecycler
    name: BufferRecycler
    fullName: com.fasterxml.jackson.core.util.BufferRecycler
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.ThreadLocal
  name: ThreadLocal
  nameWithType: ThreadLocal
  fullName: java.lang.ThreadLocal
- uid: java.lang.ref.SoftReference
  name: SoftReference
  nameWithType: SoftReference
  fullName: java.lang.ref.SoftReference
