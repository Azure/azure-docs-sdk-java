### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  id: ChangeFeedContextClient
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed
  children:
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close()
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient()
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient()
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint()
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  langs:
  - java
  name: ChangeFeedContextClient
  nameWithType: ChangeFeedContextClient
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  type: Interface
  package: com.azure.cosmos.implementation.changefeed
  summary: The interface that captures the APIs required to handle change feed processing logic.
  syntax:
    content: public interface ChangeFeedContextClient
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  id: <T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: <T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: ChangeFeedContextClient.<T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Creates a cosmos item.
  syntax:
    content: public abstract Mono<CosmosItemResponse<T>> <T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
      description: the reference to the parent container.
    - id: document
      type: T
      description: the document represented as a POJO or Document object.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the request options.
    - id: disableAutomaticIdGeneration
      type: boolean
      description: the flag for disabling automatic id generation.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the created cosmos item or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  id: <T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: <T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  nameWithType: ChangeFeedContextClient.<T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.queryItems*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Query for items in a container.
  syntax:
    content: public abstract Flux<FeedResponse<T>> <T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
      description: the reference to the parent container.
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
      description: the SQL query specification.
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the query request options.
    - id: klass
      type: java.lang.Class<T>
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
      description: a <xref uid="reactor.core.publisher.Flux" data-throw-if-not-resolved="false">Flux</xref> containing one or several feed response pages of the obtained items or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  id: <T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  nameWithType: ChangeFeedContextClient.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Reads a cosmos item
  syntax:
    content: public abstract Mono<CosmosItemResponse<T>> <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the request options.
    - id: itemType
      type: java.lang.Class<T>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the  cosmos item resource response with the read item or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: <T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  nameWithType: ChangeFeedContextClient.<T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.replaceItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Replaces a cosmos item.
  syntax:
    content: public abstract Mono<CosmosItemResponse<T>> <T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: document
      type: T
      description: the document represented as a POJO or Document object.
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the  cosmos item resource response with the replaced item or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close()
  id: close()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: close()
  nameWithType: ChangeFeedContextClient.close()
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close()
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Closes the document client instance and cleans up the resources.
  syntax:
    content: public abstract void close()
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  id: createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  nameWithType: ChangeFeedContextClient.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Method to create a change feed query for documents.
  syntax:
    content: public abstract Flux<FeedResponse<JsonNode>> createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
    parameters:
    - id: collectionLink
      type: com.azure.cosmos.CosmosAsyncContainer
      description: Specifies the collection to read documents from.
    - id: feedOptions
      type: com.azure.cosmos.implementation.ChangeFeedOptions
      description: The options for processing the query results feed.
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.fasterxml.jackson.databind.JsonNode>>
      description: a <xref uid="reactor.core.publisher.Flux" data-throw-if-not-resolved="false">Flux</xref> containing one or several feed response pages of the obtained items or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: ChangeFeedContextClient.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: DELETE a cosmos item.
  syntax:
    content: public abstract Mono<CosmosItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: itemId
      type: java.lang.String
      description: the item id.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the  cosmos item resource response with the deleted item or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient()
  id: getContainerClient()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: getContainerClient()
  nameWithType: ChangeFeedContextClient.getContainerClient()
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient()
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  syntax:
    content: public abstract CosmosAsyncContainer getContainerClient()
    return:
      type: com.azure.cosmos.CosmosAsyncContainer
      description: the Cosmos container client.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient()
  id: getDatabaseClient()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: getDatabaseClient()
  nameWithType: ChangeFeedContextClient.getDatabaseClient()
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient()
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  syntax:
    content: public abstract CosmosAsyncDatabase getDatabaseClient()
    return:
      type: com.azure.cosmos.CosmosAsyncDatabase
      description: the Cosmos database client.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint()
  id: getServiceEndpoint()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: getServiceEndpoint()
  nameWithType: ChangeFeedContextClient.getServiceEndpoint()
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint()
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  syntax:
    content: public abstract URI getServiceEndpoint()
    return:
      type: java.net.URI
      description: the Cosmos client's service endpoint.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  nameWithType: ChangeFeedContextClient.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Reads a <xref uid="com.azure.cosmos.CosmosAsyncContainer" data-throw-if-not-resolved="false">CosmosAsyncContainer</xref>.
  syntax:
    content: public abstract Mono<CosmosContainerResponse> readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
      description: a reference to the container.
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
      description: the <xref uid="com.azure.cosmos.models.CosmosContainerRequestOptions" data-throw-if-not-resolved="false">CosmosContainerRequestOptions</xref> for this request; it can be set as null.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single cosmos container response with the read container or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  nameWithType: ChangeFeedContextClient.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Reads and returns the container properties.
  syntax:
    content: public abstract Mono<CosmosContainerProperties> readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
      description: a reference to the container.
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
      description: the <xref uid="com.azure.cosmos.models.CosmosContainerRequestOptions" data-throw-if-not-resolved="false">CosmosContainerRequestOptions</xref> for this request; it can be set as null.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerProperties>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the read container properties.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  id: readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  nameWithType: ChangeFeedContextClient.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Reads a database.
  syntax:
    content: public abstract Mono<CosmosDatabaseResponse> readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
    parameters:
    - id: database
      type: com.azure.cosmos.CosmosAsyncDatabase
      description: a reference to the database.
    - id: options
      type: com.azure.cosmos.models.CosmosDatabaseRequestOptions
      description: the <xref uid="com.azure.cosmos.models.CosmosContainerRequestOptions" data-throw-if-not-resolved="false">CosmosContainerRequestOptions</xref> for this request; it can be set as null.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosDatabaseResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single cosmos database response with the read database or an error.
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  langs:
  - java
  name: readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  nameWithType: ChangeFeedContextClient.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  overload: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Reads the feed (sequence) of <xref uid="com.azure.cosmos.implementation.PartitionKeyRange" data-throw-if-not-resolved="false">PartitionKeyRange</xref> for a database account from the Azure Cosmos DB service as an asynchronous operation.
  syntax:
    content: public abstract Flux<FeedResponse<PartitionKeyRange>> readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
    parameters:
    - id: partitionKeyRangesOrCollectionLink
      type: java.lang.String
      description: the link of the resources to be read, or owner collection link, SelfLink or AltLink. E.g. /dbs/db_rid/colls/coll_rid/pkranges.
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options for the request; it can be set as null.
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>
      description: an a <xref uid="reactor.core.publisher.Flux" data-throw-if-not-resolved="false">Flux</xref> containing one or several feed response pages of the obtained items or an error.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed*
  name: readPartitionKeyRangeFeed
  nameWithType: ChangeFeedContextClient.readPartitionKeyRangeFeed
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.CosmosAsyncContainer
  name: CosmosAsyncContainer
  nameWithType: CosmosAsyncContainer
  fullName: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.implementation.ChangeFeedOptions
  name: ChangeFeedOptions
  nameWithType: ChangeFeedOptions
  fullName: com.azure.cosmos.implementation.ChangeFeedOptions
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.fasterxml.jackson.databind.JsonNode>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery*
  name: createDocumentChangeFeedQuery
  nameWithType: ChangeFeedContextClient.createDocumentChangeFeedQuery
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.CosmosAsyncDatabase
  name: CosmosAsyncDatabase
  nameWithType: CosmosAsyncDatabase
  fullName: com.azure.cosmos.CosmosAsyncDatabase
- uid: com.azure.cosmos.models.CosmosDatabaseRequestOptions
  name: CosmosDatabaseRequestOptions
  nameWithType: CosmosDatabaseRequestOptions
  fullName: com.azure.cosmos.models.CosmosDatabaseRequestOptions
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosDatabaseResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosDatabaseResponse
    name: CosmosDatabaseResponse
    fullName: com.azure.cosmos.models.CosmosDatabaseResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase*
  name: readDatabase
  nameWithType: ChangeFeedContextClient.readDatabase
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readDatabase
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.models.CosmosContainerRequestOptions
  name: CosmosContainerRequestOptions
  nameWithType: CosmosContainerRequestOptions
  fullName: com.azure.cosmos.models.CosmosContainerRequestOptions
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosContainerResponse
    name: CosmosContainerResponse
    fullName: com.azure.cosmos.models.CosmosContainerResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer*
  name: readContainer
  nameWithType: ChangeFeedContextClient.readContainer
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainer
  package: com.azure.cosmos.implementation.changefeed
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.models.CosmosItemRequestOptions
  name: CosmosItemRequestOptions
  nameWithType: CosmosItemRequestOptions
  fullName: com.azure.cosmos.models.CosmosItemRequestOptions
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.createItem*
  name: <T>createItem
  nameWithType: ChangeFeedContextClient.<T>createItem
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>createItem
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.models.PartitionKey
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: com.azure.cosmos.models.PartitionKey
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem*
  name: deleteItem
  nameWithType: ChangeFeedContextClient.deleteItem
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.deleteItem
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.replaceItem*
  name: <T>replaceItem
  nameWithType: ChangeFeedContextClient.<T>replaceItem
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>replaceItem
  package: com.azure.cosmos.implementation.changefeed
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readItem*
  name: <T>readItem
  nameWithType: ChangeFeedContextClient.<T>readItem
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>readItem
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.queryItems*
  name: <T>queryItems
  nameWithType: ChangeFeedContextClient.<T>queryItems
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.<T>queryItems
  package: com.azure.cosmos.implementation.changefeed
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint*
  name: getServiceEndpoint
  nameWithType: ChangeFeedContextClient.getServiceEndpoint
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getServiceEndpoint
  package: com.azure.cosmos.implementation.changefeed
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerProperties>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosContainerProperties
    name: CosmosContainerProperties
    fullName: com.azure.cosmos.models.CosmosContainerProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings*
  name: readContainerSettings
  nameWithType: ChangeFeedContextClient.readContainerSettings
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.readContainerSettings
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient*
  name: getContainerClient
  nameWithType: ChangeFeedContextClient.getContainerClient
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getContainerClient
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient*
  name: getDatabaseClient
  nameWithType: ChangeFeedContextClient.getDatabaseClient
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.getDatabaseClient
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close*
  name: close
  nameWithType: ChangeFeedContextClient.close
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient.close
  package: com.azure.cosmos.implementation.changefeed
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.azure.cosmos.models.CosmosDatabaseResponse
  name: CosmosDatabaseResponse
  nameWithType: CosmosDatabaseResponse
  fullName: com.azure.cosmos.models.CosmosDatabaseResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.models.CosmosContainerResponse
  name: CosmosContainerResponse
  nameWithType: CosmosContainerResponse
  fullName: com.azure.cosmos.models.CosmosContainerResponse
- uid: com.azure.cosmos.models.CosmosItemResponse
  name: CosmosItemResponse
  nameWithType: CosmosItemResponse
  fullName: com.azure.cosmos.models.CosmosItemResponse
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.azure.cosmos.models.CosmosContainerProperties
  name: CosmosContainerProperties
  nameWithType: CosmosContainerProperties
  fullName: com.azure.cosmos.models.CosmosContainerProperties
