### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.models.Volume"
fullName: "com.azure.resourcemanager.netapp.models.Volume"
name: "Volume"
nameWithType: "Volume"
summary: "An immutable client-side representation of Volume."
syntax: "public interface Volume"
methods:
- uid: "com.azure.resourcemanager.netapp.models.Volume.authorizeReplication(com.azure.resourcemanager.netapp.models.AuthorizeRequest)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.authorizeReplication(AuthorizeRequest body)"
  name: "authorizeReplication(AuthorizeRequest body)"
  nameWithType: "Volume.authorizeReplication(AuthorizeRequest body)"
  summary: "Authorize the replication connection on the source volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "Authorize request object supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.AuthorizeRequest?alt=com.azure.resourcemanager.netapp.models.AuthorizeRequest&text=AuthorizeRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void authorizeReplication(AuthorizeRequest body)"
  desc: "Authorize the replication connection on the source volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.authorizeReplication(com.azure.resourcemanager.netapp.models.AuthorizeRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.authorizeReplication(AuthorizeRequest body, Context context)"
  name: "authorizeReplication(AuthorizeRequest body, Context context)"
  nameWithType: "Volume.authorizeReplication(AuthorizeRequest body, Context context)"
  summary: "Authorize the replication connection on the source volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "Authorize request object supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.AuthorizeRequest?alt=com.azure.resourcemanager.netapp.models.AuthorizeRequest&text=AuthorizeRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void authorizeReplication(AuthorizeRequest body, Context context)"
  desc: "Authorize the replication connection on the source volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.avsDataStore()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.avsDataStore()"
  name: "avsDataStore()"
  nameWithType: "Volume.avsDataStore()"
  summary: "Gets the avs<wbr>Data<wbr>Store property: avs<wbr>Data<wbr>Store Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose."
  modifiers:
  - "abstract"
  syntax: "public abstract AvsDataStore avsDataStore()"
  desc: "Gets the avsDataStore property: avsDataStore Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose."
  returns:
    description: "the avsDataStore value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.AvsDataStore?alt=com.azure.resourcemanager.netapp.models.AvsDataStore&text=AvsDataStore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.backupId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.backupId()"
  name: "backupId()"
  nameWithType: "Volume.backupId()"
  summary: "Gets the backup<wbr>Id property: Backup ID UUID v4 or resource identifier used to identify the Backup."
  modifiers:
  - "abstract"
  syntax: "public abstract String backupId()"
  desc: "Gets the backupId property: Backup ID UUID v4 or resource identifier used to identify the Backup."
  returns:
    description: "the backupId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.baremetalTenantId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.baremetalTenantId()"
  name: "baremetalTenantId()"
  nameWithType: "Volume.baremetalTenantId()"
  summary: "Gets the baremetal<wbr>Tenant<wbr>Id property: Baremetal Tenant ID Unique Baremetal Tenant Identifier."
  modifiers:
  - "abstract"
  syntax: "public abstract String baremetalTenantId()"
  desc: "Gets the baremetalTenantId property: Baremetal Tenant ID Unique Baremetal Tenant Identifier."
  returns:
    description: "the baremetalTenantId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.breakReplication()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.breakReplication()"
  name: "breakReplication()"
  nameWithType: "Volume.breakReplication()"
  summary: "Break the replication connection on the destination volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void breakReplication()"
  desc: "Break the replication connection on the destination volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.breakReplication(com.azure.resourcemanager.netapp.models.BreakReplicationRequest)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.breakReplication(BreakReplicationRequest body)"
  name: "breakReplication(BreakReplicationRequest body)"
  nameWithType: "Volume.breakReplication(BreakReplicationRequest body)"
  summary: "Break the replication connection on the destination volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "Optional body to force break the replication."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.BreakReplicationRequest?alt=com.azure.resourcemanager.netapp.models.BreakReplicationRequest&text=BreakReplicationRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void breakReplication(BreakReplicationRequest body)"
  desc: "Break the replication connection on the destination volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.breakReplication(com.azure.resourcemanager.netapp.models.BreakReplicationRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.breakReplication(BreakReplicationRequest body, Context context)"
  name: "breakReplication(BreakReplicationRequest body, Context context)"
  nameWithType: "Volume.breakReplication(BreakReplicationRequest body, Context context)"
  summary: "Break the replication connection on the destination volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "Optional body to force break the replication."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.BreakReplicationRequest?alt=com.azure.resourcemanager.netapp.models.BreakReplicationRequest&text=BreakReplicationRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void breakReplication(BreakReplicationRequest body, Context context)"
  desc: "Break the replication connection on the destination volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.capacityPoolResourceId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.capacityPoolResourceId()"
  name: "capacityPoolResourceId()"
  nameWithType: "Volume.capacityPoolResourceId()"
  summary: "Gets the capacity<wbr>Pool<wbr>Resource<wbr>Id property: Pool Resource Id used in case of creating a volume through volume group."
  modifiers:
  - "abstract"
  syntax: "public abstract String capacityPoolResourceId()"
  desc: "Gets the capacityPoolResourceId property: Pool Resource Id used in case of creating a volume through volume group."
  returns:
    description: "the capacityPoolResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.cloneProgress()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.cloneProgress()"
  name: "cloneProgress()"
  nameWithType: "Volume.cloneProgress()"
  summary: "Gets the clone<wbr>Progress property: When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer cloneProgress()"
  desc: "Gets the cloneProgress property: When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning."
  returns:
    description: "the cloneProgress value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.coolAccess()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.coolAccess()"
  name: "coolAccess()"
  nameWithType: "Volume.coolAccess()"
  summary: "Gets the cool<wbr>Access property: Specifies whether Cool Access(tiering) is enabled for the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean coolAccess()"
  desc: "Gets the coolAccess property: Specifies whether Cool Access(tiering) is enabled for the volume."
  returns:
    description: "the coolAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.coolnessPeriod()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.coolnessPeriod()"
  name: "coolnessPeriod()"
  nameWithType: "Volume.coolnessPeriod()"
  summary: "Gets the coolness<wbr>Period property: Specifies the number of days after which data that is not accessed by clients will be tiered."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer coolnessPeriod()"
  desc: "Gets the coolnessPeriod property: Specifies the number of days after which data that is not accessed by clients will be tiered."
  returns:
    description: "the coolnessPeriod value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.creationToken()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.creationToken()"
  name: "creationToken()"
  nameWithType: "Volume.creationToken()"
  summary: "Gets the creation<wbr>Token property: Creation Token or File Path A unique file path for the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract String creationToken()"
  desc: "Gets the creationToken property: Creation Token or File Path A unique file path for the volume. Used when creating mount targets."
  returns:
    description: "the creationToken value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.dataProtection()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.dataProtection()"
  name: "dataProtection()"
  nameWithType: "Volume.dataProtection()"
  summary: "Gets the data<wbr>Protection property: Data<wbr>Protection Data<wbr>Protection type volumes include an object containing details of the replication."
  modifiers:
  - "abstract"
  syntax: "public abstract VolumePropertiesDataProtection dataProtection()"
  desc: "Gets the dataProtection property: DataProtection DataProtection type volumes include an object containing details of the replication."
  returns:
    description: "the dataProtection value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.VolumePropertiesDataProtection?alt=com.azure.resourcemanager.netapp.models.VolumePropertiesDataProtection&text=VolumePropertiesDataProtection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.defaultGroupQuotaInKiBs()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.defaultGroupQuotaInKiBs()"
  name: "defaultGroupQuotaInKiBs()"
  nameWithType: "Volume.defaultGroupQuotaInKiBs()"
  summary: "Gets the default<wbr>Group<wbr>Quota<wbr>InKi<wbr>Bs property: Default group quota for volume in Ki<wbr>Bs."
  modifiers:
  - "abstract"
  syntax: "public abstract Long defaultGroupQuotaInKiBs()"
  desc: "Gets the defaultGroupQuotaInKiBs property: Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies."
  returns:
    description: "the defaultGroupQuotaInKiBs value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.defaultUserQuotaInKiBs()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.defaultUserQuotaInKiBs()"
  name: "defaultUserQuotaInKiBs()"
  nameWithType: "Volume.defaultUserQuotaInKiBs()"
  summary: "Gets the default<wbr>User<wbr>Quota<wbr>InKi<wbr>Bs property: Default user quota for volume in Ki<wbr>Bs."
  modifiers:
  - "abstract"
  syntax: "public abstract Long defaultUserQuotaInKiBs()"
  desc: "Gets the defaultUserQuotaInKiBs property: Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies ."
  returns:
    description: "the defaultUserQuotaInKiBs value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.deleteReplication()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.deleteReplication()"
  name: "deleteReplication()"
  nameWithType: "Volume.deleteReplication()"
  summary: "Delete the replication connection on the destination volume, and send release to the source replication."
  modifiers:
  - "abstract"
  syntax: "public abstract void deleteReplication()"
  desc: "Delete the replication connection on the destination volume, and send release to the source replication."
- uid: "com.azure.resourcemanager.netapp.models.Volume.deleteReplication(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.deleteReplication(Context context)"
  name: "deleteReplication(Context context)"
  nameWithType: "Volume.deleteReplication(Context context)"
  summary: "Delete the replication connection on the destination volume, and send release to the source replication."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteReplication(Context context)"
  desc: "Delete the replication connection on the destination volume, and send release to the source replication."
- uid: "com.azure.resourcemanager.netapp.models.Volume.enableSubvolumes()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.enableSubvolumes()"
  name: "enableSubvolumes()"
  nameWithType: "Volume.enableSubvolumes()"
  summary: "Gets the enable<wbr>Subvolumes property: Flag indicating whether subvolume operations are enabled on the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract EnableSubvolumes enableSubvolumes()"
  desc: "Gets the enableSubvolumes property: Flag indicating whether subvolume operations are enabled on the volume."
  returns:
    description: "the enableSubvolumes value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EnableSubvolumes?alt=com.azure.resourcemanager.netapp.models.EnableSubvolumes&text=EnableSubvolumes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.encrypted()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.encrypted()"
  name: "encrypted()"
  nameWithType: "Volume.encrypted()"
  summary: "Gets the encrypted property: Specifies if the volume is encrypted or not."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean encrypted()"
  desc: "Gets the encrypted property: Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01."
  returns:
    description: "the encrypted value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.encryptionKeySource()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.encryptionKeySource()"
  name: "encryptionKeySource()"
  nameWithType: "Volume.encryptionKeySource()"
  summary: "Gets the encryption<wbr>Key<wbr>Source property: Source of key used to encrypt data in volume."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionKeySource encryptionKeySource()"
  desc: "Gets the encryptionKeySource property: Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'."
  returns:
    description: "the encryptionKeySource value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionKeySource?alt=com.azure.resourcemanager.netapp.models.EncryptionKeySource&text=EncryptionKeySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.etag()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.etag()"
  name: "etag()"
  nameWithType: "Volume.etag()"
  summary: "Gets the etag property: A unique read-only string that changes whenever the resource is updated."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  desc: "Gets the etag property: A unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.exportPolicy()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.exportPolicy()"
  name: "exportPolicy()"
  nameWithType: "Volume.exportPolicy()"
  summary: "Gets the export<wbr>Policy property: export<wbr>Policy Set of export policy rules."
  modifiers:
  - "abstract"
  syntax: "public abstract VolumePropertiesExportPolicy exportPolicy()"
  desc: "Gets the exportPolicy property: exportPolicy Set of export policy rules."
  returns:
    description: "the exportPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.VolumePropertiesExportPolicy?alt=com.azure.resourcemanager.netapp.models.VolumePropertiesExportPolicy&text=VolumePropertiesExportPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.fileSystemId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.fileSystemId()"
  name: "fileSystemId()"
  nameWithType: "Volume.fileSystemId()"
  summary: "Gets the file<wbr>System<wbr>Id property: File<wbr>System ID Unique File<wbr>System Identifier."
  modifiers:
  - "abstract"
  syntax: "public abstract String fileSystemId()"
  desc: "Gets the fileSystemId property: FileSystem ID Unique FileSystem Identifier."
  returns:
    description: "the fileSystemId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.finalizeRelocation()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.finalizeRelocation()"
  name: "finalizeRelocation()"
  nameWithType: "Volume.finalizeRelocation()"
  summary: "Finalizes the relocation of the volume and cleans up the old volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void finalizeRelocation()"
  desc: "Finalizes the relocation of the volume and cleans up the old volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.finalizeRelocation(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.finalizeRelocation(Context context)"
  name: "finalizeRelocation(Context context)"
  nameWithType: "Volume.finalizeRelocation(Context context)"
  summary: "Finalizes the relocation of the volume and cleans up the old volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void finalizeRelocation(Context context)"
  desc: "Finalizes the relocation of the volume and cleans up the old volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.id()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.id()"
  name: "id()"
  nameWithType: "Volume.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.innerModel()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.innerModel()"
  name: "innerModel()"
  nameWithType: "Volume.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>netapp.<wbr>fluent.<wbr>models.<wbr>Volume<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract VolumeInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.netapp.fluent.models.VolumeInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.VolumeInner?alt=com.azure.resourcemanager.netapp.fluent.models.VolumeInner&text=VolumeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.isDefaultQuotaEnabled()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.isDefaultQuotaEnabled()"
  name: "isDefaultQuotaEnabled()"
  nameWithType: "Volume.isDefaultQuotaEnabled()"
  summary: "Gets the is<wbr>Default<wbr>Quota<wbr>Enabled property: Specifies if default quota is enabled for the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean isDefaultQuotaEnabled()"
  desc: "Gets the isDefaultQuotaEnabled property: Specifies if default quota is enabled for the volume."
  returns:
    description: "the isDefaultQuotaEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.isRestoring()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.isRestoring()"
  name: "isRestoring()"
  nameWithType: "Volume.isRestoring()"
  summary: "Gets the is<wbr>Restoring property: Restoring."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean isRestoring()"
  desc: "Gets the isRestoring property: Restoring."
  returns:
    description: "the isRestoring value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.kerberosEnabled()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.kerberosEnabled()"
  name: "kerberosEnabled()"
  nameWithType: "Volume.kerberosEnabled()"
  summary: "Gets the kerberos<wbr>Enabled property: Describe if a volume is Kerberos<wbr>Enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean kerberosEnabled()"
  desc: "Gets the kerberosEnabled property: Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later."
  returns:
    description: "the kerberosEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.keyVaultPrivateEndpointResourceId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.keyVaultPrivateEndpointResourceId()"
  name: "keyVaultPrivateEndpointResourceId()"
  nameWithType: "Volume.keyVaultPrivateEndpointResourceId()"
  summary: "Gets the key<wbr>Vault<wbr>Private<wbr>Endpoint<wbr>Resource<wbr>Id property: The resource ID of private endpoint for Key<wbr>Vault."
  modifiers:
  - "abstract"
  syntax: "public abstract String keyVaultPrivateEndpointResourceId()"
  desc: "Gets the keyVaultPrivateEndpointResourceId property: The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
  returns:
    description: "the keyVaultPrivateEndpointResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.ldapEnabled()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.ldapEnabled()"
  name: "ldapEnabled()"
  nameWithType: "Volume.ldapEnabled()"
  summary: "Gets the ldap<wbr>Enabled property: Specifies whether LDAP is enabled or not for a given NFS volume."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean ldapEnabled()"
  desc: "Gets the ldapEnabled property: Specifies whether LDAP is enabled or not for a given NFS volume."
  returns:
    description: "the ldapEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.listReplications()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.listReplications()"
  name: "listReplications()"
  nameWithType: "Volume.listReplications()"
  summary: "List all replications for a specified volume."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Replication> listReplications()"
  desc: "List all replications for a specified volume."
  returns:
    description: "list Replications as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.netapp.models.Replication?alt=com.azure.resourcemanager.netapp.models.Replication&text=Replication\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.listReplications(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.listReplications(Context context)"
  name: "listReplications(Context context)"
  nameWithType: "Volume.listReplications(Context context)"
  summary: "List all replications for a specified volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Replication> listReplications(Context context)"
  desc: "List all replications for a specified volume."
  returns:
    description: "list Replications as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.netapp.models.Replication?alt=com.azure.resourcemanager.netapp.models.Replication&text=Replication\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.location()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.location()"
  name: "location()"
  nameWithType: "Volume.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.maximumNumberOfFiles()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.maximumNumberOfFiles()"
  name: "maximumNumberOfFiles()"
  nameWithType: "Volume.maximumNumberOfFiles()"
  summary: "Gets the maximum<wbr>Number<wbr>OfFiles property: Maximum number of files allowed."
  modifiers:
  - "abstract"
  syntax: "public abstract Long maximumNumberOfFiles()"
  desc: "Gets the maximumNumberOfFiles property: Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB."
  returns:
    description: "the maximumNumberOfFiles value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.mountTargets()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.mountTargets()"
  name: "mountTargets()"
  nameWithType: "Volume.mountTargets()"
  summary: "Gets the mount<wbr>Targets property: mount<wbr>Targets List of mount targets."
  modifiers:
  - "abstract"
  syntax: "public abstract List<MountTargetProperties> mountTargets()"
  desc: "Gets the mountTargets property: mountTargets List of mount targets."
  returns:
    description: "the mountTargets value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.netapp.fluent.models.MountTargetProperties?alt=com.azure.resourcemanager.netapp.fluent.models.MountTargetProperties&text=MountTargetProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.name()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.name()"
  name: "name()"
  nameWithType: "Volume.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.networkFeatures()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.networkFeatures()"
  name: "networkFeatures()"
  nameWithType: "Volume.networkFeatures()"
  summary: "Gets the network<wbr>Features property: Network features Basic network, or Standard features available to the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkFeatures networkFeatures()"
  desc: "Gets the networkFeatures property: Network features Basic network, or Standard features available to the volume."
  returns:
    description: "the networkFeatures value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.NetworkFeatures?alt=com.azure.resourcemanager.netapp.models.NetworkFeatures&text=NetworkFeatures\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.networkSiblingSetId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.networkSiblingSetId()"
  name: "networkSiblingSetId()"
  nameWithType: "Volume.networkSiblingSetId()"
  summary: "Gets the network<wbr>Sibling<wbr>Set<wbr>Id property: Network Sibling Set ID Network Sibling Set ID for the the group of volumes sharing networking resources."
  modifiers:
  - "abstract"
  syntax: "public abstract String networkSiblingSetId()"
  desc: "Gets the networkSiblingSetId property: Network Sibling Set ID Network Sibling Set ID for the the group of volumes sharing networking resources."
  returns:
    description: "the networkSiblingSetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.placementRules()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.placementRules()"
  name: "placementRules()"
  nameWithType: "Volume.placementRules()"
  summary: "Gets the placement<wbr>Rules property: Volume placement rules Application specific placement rules for the particular volume."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PlacementKeyValuePairs> placementRules()"
  desc: "Gets the placementRules property: Volume placement rules Application specific placement rules for the particular volume."
  returns:
    description: "the placementRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.netapp.models.PlacementKeyValuePairs?alt=com.azure.resourcemanager.netapp.models.PlacementKeyValuePairs&text=PlacementKeyValuePairs\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.poolChange(com.azure.resourcemanager.netapp.models.PoolChangeRequest)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.poolChange(PoolChangeRequest body)"
  name: "poolChange(PoolChangeRequest body)"
  nameWithType: "Volume.poolChange(PoolChangeRequest body)"
  summary: "Moves volume to another pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "Move volume to the pool supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.PoolChangeRequest?alt=com.azure.resourcemanager.netapp.models.PoolChangeRequest&text=PoolChangeRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void poolChange(PoolChangeRequest body)"
  desc: "Moves volume to another pool."
- uid: "com.azure.resourcemanager.netapp.models.Volume.poolChange(com.azure.resourcemanager.netapp.models.PoolChangeRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.poolChange(PoolChangeRequest body, Context context)"
  name: "poolChange(PoolChangeRequest body, Context context)"
  nameWithType: "Volume.poolChange(PoolChangeRequest body, Context context)"
  summary: "Moves volume to another pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "Move volume to the pool supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.PoolChangeRequest?alt=com.azure.resourcemanager.netapp.models.PoolChangeRequest&text=PoolChangeRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void poolChange(PoolChangeRequest body, Context context)"
  desc: "Moves volume to another pool."
- uid: "com.azure.resourcemanager.netapp.models.Volume.protocolTypes()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.protocolTypes()"
  name: "protocolTypes()"
  nameWithType: "Volume.protocolTypes()"
  summary: "Gets the protocol<wbr>Types property: protocol<wbr>Types Set of protocol types, default NFSv3, CIFS for SMB protocol."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> protocolTypes()"
  desc: "Gets the protocolTypes property: protocolTypes Set of protocol types, default NFSv3, CIFS for SMB protocol."
  returns:
    description: "the protocolTypes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.provisioningState()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Volume.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Azure lifecycle management."
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  desc: "Gets the provisioningState property: Azure lifecycle management."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.proximityPlacementGroup()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.proximityPlacementGroup()"
  name: "proximityPlacementGroup()"
  nameWithType: "Volume.proximityPlacementGroup()"
  summary: "Gets the proximity<wbr>Placement<wbr>Group property: Proximity placement group associated with the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract String proximityPlacementGroup()"
  desc: "Gets the proximityPlacementGroup property: Proximity placement group associated with the volume."
  returns:
    description: "the proximityPlacementGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.reInitializeReplication()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.reInitializeReplication()"
  name: "reInitializeReplication()"
  nameWithType: "Volume.reInitializeReplication()"
  summary: "Re-Initializes the replication connection on the destination volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void reInitializeReplication()"
  desc: "Re-Initializes the replication connection on the destination volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.reInitializeReplication(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.reInitializeReplication(Context context)"
  name: "reInitializeReplication(Context context)"
  nameWithType: "Volume.reInitializeReplication(Context context)"
  summary: "Re-Initializes the replication connection on the destination volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reInitializeReplication(Context context)"
  desc: "Re-Initializes the replication connection on the destination volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.reestablishReplication(com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.reestablishReplication(ReestablishReplicationRequest body)"
  name: "reestablishReplication(ReestablishReplicationRequest body)"
  nameWithType: "Volume.reestablishReplication(ReestablishReplicationRequest body)"
  summary: "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots."
  modifiers:
  - "abstract"
  parameters:
  - description: "body for the id of the source volume."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest?alt=com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest&text=ReestablishReplicationRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reestablishReplication(ReestablishReplicationRequest body)"
  desc: "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots."
- uid: "com.azure.resourcemanager.netapp.models.Volume.reestablishReplication(com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.reestablishReplication(ReestablishReplicationRequest body, Context context)"
  name: "reestablishReplication(ReestablishReplicationRequest body, Context context)"
  nameWithType: "Volume.reestablishReplication(ReestablishReplicationRequest body, Context context)"
  summary: "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots."
  modifiers:
  - "abstract"
  parameters:
  - description: "body for the id of the source volume."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest?alt=com.azure.resourcemanager.netapp.models.ReestablishReplicationRequest&text=ReestablishReplicationRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reestablishReplication(ReestablishReplicationRequest body, Context context)"
  desc: "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots."
- uid: "com.azure.resourcemanager.netapp.models.Volume.refresh()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.refresh()"
  name: "refresh()"
  nameWithType: "Volume.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Volume refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.Volume?alt=com.azure.resourcemanager.netapp.models.Volume&text=Volume\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Volume.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Volume refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.Volume?alt=com.azure.resourcemanager.netapp.models.Volume&text=Volume\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.region()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.region()"
  name: "region()"
  nameWithType: "Volume.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.regionName()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.regionName()"
  name: "regionName()"
  nameWithType: "Volume.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.relocate()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.relocate()"
  name: "relocate()"
  nameWithType: "Volume.relocate()"
  summary: "Relocates volume to a new stamp."
  modifiers:
  - "abstract"
  syntax: "public abstract void relocate()"
  desc: "Relocates volume to a new stamp."
- uid: "com.azure.resourcemanager.netapp.models.Volume.relocate(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.relocate(Context context)"
  name: "relocate(Context context)"
  nameWithType: "Volume.relocate(Context context)"
  summary: "Relocates volume to a new stamp."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void relocate(Context context)"
  desc: "Relocates volume to a new stamp."
- uid: "com.azure.resourcemanager.netapp.models.Volume.resetCifsPassword()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.resetCifsPassword()"
  name: "resetCifsPassword()"
  nameWithType: "Volume.resetCifsPassword()"
  summary: "Reset cifs password from volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void resetCifsPassword()"
  desc: "Reset cifs password from volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.resetCifsPassword(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.resetCifsPassword(Context context)"
  name: "resetCifsPassword(Context context)"
  nameWithType: "Volume.resetCifsPassword(Context context)"
  summary: "Reset cifs password from volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resetCifsPassword(Context context)"
  desc: "Reset cifs password from volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.resourceGroupName()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Volume.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.resyncReplication()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.resyncReplication()"
  name: "resyncReplication()"
  nameWithType: "Volume.resyncReplication()"
  summary: "Resync the connection on the destination volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void resyncReplication()"
  desc: "Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source."
- uid: "com.azure.resourcemanager.netapp.models.Volume.resyncReplication(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.resyncReplication(Context context)"
  name: "resyncReplication(Context context)"
  nameWithType: "Volume.resyncReplication(Context context)"
  summary: "Resync the connection on the destination volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resyncReplication(Context context)"
  desc: "Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source."
- uid: "com.azure.resourcemanager.netapp.models.Volume.revert(com.azure.resourcemanager.netapp.models.VolumeRevert)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.revert(VolumeRevert body)"
  name: "revert(VolumeRevert body)"
  nameWithType: "Volume.revert(VolumeRevert body)"
  summary: "Revert a volume to the snapshot specified in the body."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object for snapshot to revert supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.VolumeRevert?alt=com.azure.resourcemanager.netapp.models.VolumeRevert&text=VolumeRevert\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void revert(VolumeRevert body)"
  desc: "Revert a volume to the snapshot specified in the body."
- uid: "com.azure.resourcemanager.netapp.models.Volume.revert(com.azure.resourcemanager.netapp.models.VolumeRevert,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.revert(VolumeRevert body, Context context)"
  name: "revert(VolumeRevert body, Context context)"
  nameWithType: "Volume.revert(VolumeRevert body, Context context)"
  summary: "Revert a volume to the snapshot specified in the body."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object for snapshot to revert supplied in the body of the operation."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.VolumeRevert?alt=com.azure.resourcemanager.netapp.models.VolumeRevert&text=VolumeRevert\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void revert(VolumeRevert body, Context context)"
  desc: "Revert a volume to the snapshot specified in the body."
- uid: "com.azure.resourcemanager.netapp.models.Volume.revertRelocation()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.revertRelocation()"
  name: "revertRelocation()"
  nameWithType: "Volume.revertRelocation()"
  summary: "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume."
  modifiers:
  - "abstract"
  syntax: "public abstract void revertRelocation()"
  desc: "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.revertRelocation(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.revertRelocation(Context context)"
  name: "revertRelocation(Context context)"
  nameWithType: "Volume.revertRelocation(Context context)"
  summary: "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void revertRelocation(Context context)"
  desc: "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume."
- uid: "com.azure.resourcemanager.netapp.models.Volume.securityStyle()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.securityStyle()"
  name: "securityStyle()"
  nameWithType: "Volume.securityStyle()"
  summary: "Gets the security<wbr>Style property: The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol."
  modifiers:
  - "abstract"
  syntax: "public abstract SecurityStyle securityStyle()"
  desc: "Gets the securityStyle property: The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol."
  returns:
    description: "the securityStyle value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.SecurityStyle?alt=com.azure.resourcemanager.netapp.models.SecurityStyle&text=SecurityStyle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.serviceLevel()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.serviceLevel()"
  name: "serviceLevel()"
  nameWithType: "Volume.serviceLevel()"
  summary: "Gets the service<wbr>Level property: service<wbr>Level The service level of the file system."
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceLevel serviceLevel()"
  desc: "Gets the serviceLevel property: serviceLevel The service level of the file system."
  returns:
    description: "the serviceLevel value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.smbContinuouslyAvailable()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.smbContinuouslyAvailable()"
  name: "smbContinuouslyAvailable()"
  nameWithType: "Volume.smbContinuouslyAvailable()"
  summary: "Gets the smb<wbr>Continuously<wbr>Available property: Enables continuously available share property for smb volume."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean smbContinuouslyAvailable()"
  desc: "Gets the smbContinuouslyAvailable property: Enables continuously available share property for smb volume. Only applicable for SMB volume."
  returns:
    description: "the smbContinuouslyAvailable value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.smbEncryption()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.smbEncryption()"
  name: "smbEncryption()"
  nameWithType: "Volume.smbEncryption()"
  summary: "Gets the smb<wbr>Encryption property: Enables encryption for in-flight smb3 data."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean smbEncryption()"
  desc: "Gets the smbEncryption property: Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later."
  returns:
    description: "the smbEncryption value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.snapshotDirectoryVisible()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.snapshotDirectoryVisible()"
  name: "snapshotDirectoryVisible()"
  nameWithType: "Volume.snapshotDirectoryVisible()"
  summary: "Gets the snapshot<wbr>Directory<wbr>Visible property: If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true)."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean snapshotDirectoryVisible()"
  desc: "Gets the snapshotDirectoryVisible property: If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true)."
  returns:
    description: "the snapshotDirectoryVisible value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.snapshotId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.snapshotId()"
  name: "snapshotId()"
  nameWithType: "Volume.snapshotId()"
  summary: "Gets the snapshot<wbr>Id property: Snapshot ID UUID v4 or resource identifier used to identify the Snapshot."
  modifiers:
  - "abstract"
  syntax: "public abstract String snapshotId()"
  desc: "Gets the snapshotId property: Snapshot ID UUID v4 or resource identifier used to identify the Snapshot."
  returns:
    description: "the snapshotId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.storageToNetworkProximity()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.storageToNetworkProximity()"
  name: "storageToNetworkProximity()"
  nameWithType: "Volume.storageToNetworkProximity()"
  summary: "Gets the storage<wbr>ToNetwork<wbr>Proximity property: Storage to Network Proximity Provides storage to network proximity information for the volume."
  modifiers:
  - "abstract"
  syntax: "public abstract VolumeStorageToNetworkProximity storageToNetworkProximity()"
  desc: "Gets the storageToNetworkProximity property: Storage to Network Proximity Provides storage to network proximity information for the volume."
  returns:
    description: "the storageToNetworkProximity value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.VolumeStorageToNetworkProximity?alt=com.azure.resourcemanager.netapp.models.VolumeStorageToNetworkProximity&text=VolumeStorageToNetworkProximity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.subnetId()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.subnetId()"
  name: "subnetId()"
  nameWithType: "Volume.subnetId()"
  summary: "Gets the subnet<wbr>Id property: The Azure Resource URI for a delegated subnet."
  modifiers:
  - "abstract"
  syntax: "public abstract String subnetId()"
  desc: "Gets the subnetId property: The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes."
  returns:
    description: "the subnetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.systemData()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.systemData()"
  name: "systemData()"
  nameWithType: "Volume.systemData()"
  summary: "Gets the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.t2Network()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.t2Network()"
  name: "t2Network()"
  nameWithType: "Volume.t2Network()"
  summary: "Gets the t2Network property: T2 network information."
  modifiers:
  - "abstract"
  syntax: "public abstract String t2Network()"
  desc: "Gets the t2Network property: T2 network information."
  returns:
    description: "the t2Network value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.tags()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.tags()"
  name: "tags()"
  nameWithType: "Volume.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.Volume.throughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.throughputMibps()"
  name: "throughputMibps()"
  nameWithType: "Volume.throughputMibps()"
  summary: "Gets the throughput<wbr>Mibps property: Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qos<wbr>Type volume."
  modifiers:
  - "abstract"
  syntax: "public abstract Float throughputMibps()"
  desc: "Gets the throughputMibps property: Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume."
  returns:
    description: "the throughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.type()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.type()"
  name: "type()"
  nameWithType: "Volume.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.unixPermissions()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.unixPermissions()"
  name: "unixPermissions()"
  nameWithType: "Volume.unixPermissions()"
  summary: "Gets the unix<wbr>Permissions property: UNIX permissions for NFS volume accepted in octal 4 digit format."
  modifiers:
  - "abstract"
  syntax: "public abstract String unixPermissions()"
  desc: "Gets the unixPermissions property: UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users."
  returns:
    description: "the unixPermissions value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.update()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.update()"
  name: "update()"
  nameWithType: "Volume.update()"
  summary: "Begins update for the Volume resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Volume.Update update()"
  desc: "Begins update for the Volume resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.Volume.Update?alt=com.azure.resourcemanager.netapp.models.Volume.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.usageThreshold()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.usageThreshold()"
  name: "usageThreshold()"
  nameWithType: "Volume.usageThreshold()"
  summary: "Gets the usage<wbr>Threshold property: usage<wbr>Threshold Maximum storage quota allowed for a file system in bytes."
  modifiers:
  - "abstract"
  syntax: "public abstract long usageThreshold()"
  desc: "Gets the usageThreshold property: usageThreshold Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes."
  returns:
    description: "the usageThreshold value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.volumeGroupName()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.volumeGroupName()"
  name: "volumeGroupName()"
  nameWithType: "Volume.volumeGroupName()"
  summary: "Gets the volume<wbr>Group<wbr>Name property: Volume Group Name."
  modifiers:
  - "abstract"
  syntax: "public abstract String volumeGroupName()"
  desc: "Gets the volumeGroupName property: Volume Group Name."
  returns:
    description: "the volumeGroupName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.volumeSpecName()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.volumeSpecName()"
  name: "volumeSpecName()"
  nameWithType: "Volume.volumeSpecName()"
  summary: "Gets the volume<wbr>Spec<wbr>Name property: Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.<wbr>g."
  modifiers:
  - "abstract"
  syntax: "public abstract String volumeSpecName()"
  desc: "Gets the volumeSpecName property: Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log."
  returns:
    description: "the volumeSpecName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.volumeType()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.volumeType()"
  name: "volumeType()"
  nameWithType: "Volume.volumeType()"
  summary: "Gets the volume<wbr>Type property: What type of volume is this."
  modifiers:
  - "abstract"
  syntax: "public abstract String volumeType()"
  desc: "Gets the volumeType property: What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection."
  returns:
    description: "the volumeType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.Volume.zones()"
  fullName: "com.azure.resourcemanager.netapp.models.Volume.zones()"
  name: "zones()"
  nameWithType: "Volume.zones()"
  summary: "Gets the zones property: Availability Zone."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> zones()"
  desc: "Gets the zones property: Availability Zone."
  returns:
    description: "the zones value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An immutable client-side representation of Volume."
metadata: {}
package: "com.azure.resourcemanager.netapp.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.10
