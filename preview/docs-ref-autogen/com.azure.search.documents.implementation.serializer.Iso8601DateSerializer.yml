### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer
  id: Iso8601DateSerializer
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.serializer
  children:
  - com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer()
  - com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule()
  - com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: Iso8601DateSerializer
  nameWithType: Iso8601DateSerializer
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer
  type: Class
  package: com.azure.search.documents.implementation.serializer
  summary: Custom serializer to serialize <xref uid="java.util.Date" data-throw-if-not-resolved="false">Date</xref> to Iso8601 standard date format "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'".
  syntax:
    content: public final class Iso8601DateSerializer extends JsonSerializer<Date>
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.handledType()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer()
  id: Iso8601DateSerializer()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer
  langs:
  - java
  name: Iso8601DateSerializer()
  nameWithType: Iso8601DateSerializer.Iso8601DateSerializer()
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer()
  overload: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer*
  type: Constructor
  package: com.azure.search.documents.implementation.serializer
  syntax:
    content: public Iso8601DateSerializer()
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule()
  id: getModule()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer
  langs:
  - java
  name: getModule()
  nameWithType: Iso8601DateSerializer.getModule()
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule()
  overload: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule*
  type: Method
  package: com.azure.search.documents.implementation.serializer
  summary: Gets a module wrapping this serializer as an adapter for the Jackson ObjectMapper.
  syntax:
    content: public static SimpleModule getModule()
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
      description: a simple module to be plugged onto Jackson ObjectMapper.
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer
  langs:
  - java
  name: serialize(Date dateValue, JsonGenerator gen, SerializerProvider serializers)
  nameWithType: Iso8601DateSerializer.serialize(Date dateValue, JsonGenerator gen, SerializerProvider serializers)
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize(Date dateValue, JsonGenerator gen, SerializerProvider serializers)
  overload: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize*
  type: Method
  package: com.azure.search.documents.implementation.serializer
  summary: Serializes the date value to service accepted iso8601 format with UTC time zone.
  syntax:
    content: public void serialize(Date dateValue, JsonGenerator gen, SerializerProvider serializers)
    parameters:
    - id: dateValue
      type: java.util.Date
      description: The <xref uid="java.util.Date" data-throw-if-not-resolved="false">Date</xref> value.
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
      description: Generator used to output resulting Json content
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
      description: Provider that can be used to get serializers for serializing Objects value contains, if any.
  exceptions:
  - type: java.io.IOException
    description: Throws exception when the dateValue cannot convert to json content.
references:
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer*
  name: Iso8601DateSerializer
  nameWithType: Iso8601DateSerializer.Iso8601DateSerializer
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.Iso8601DateSerializer
  package: com.azure.search.documents.implementation.serializer
- uid: com.fasterxml.jackson.databind.module.SimpleModule
  spec.java:
  - uid: com.fasterxml.jackson.databind.module.SimpleModule
    name: SimpleModule
    fullName: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule*
  name: getModule
  nameWithType: Iso8601DateSerializer.getModule
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.getModule
  package: com.azure.search.documents.implementation.serializer
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: com.fasterxml.jackson.core.JsonGenerator
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator
    name: JsonGenerator
    fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializerProvider
    name: SerializerProvider
    fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize*
  name: serialize
  nameWithType: Iso8601DateSerializer.serialize
  fullName: com.azure.search.documents.implementation.serializer.Iso8601DateSerializer.serialize
  package: com.azure.search.documents.implementation.serializer
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.util.Date>
  name: JsonSerializer<Date>
  nameWithType: JsonSerializer<Date>
  fullName: com.fasterxml.jackson.databind.JsonSerializer<java.util.Date>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.handledType()
  name: JsonSerializer.handledType()
  nameWithType: JsonSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.handledType()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
