### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties"
name: "PhoenixLinkedServiceTypeProperties"
nameWithType: "PhoenixLinkedServiceTypeProperties"
summary: "Phoenix server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PhoenixLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.PhoenixLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.PhoenixLinkedServiceTypeProperties()"
  name: "PhoenixLinkedServiceTypeProperties()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.PhoenixLinkedServiceTypeProperties()"
  syntax: "public PhoenixLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  name: "allowHostnameCNMismatch()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  summary: "Get the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  syntax: "public Object allowHostnameCNMismatch()"
  returns:
    description: "the allowHostnameCNMismatch value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  name: "allowSelfSignedServerCert()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  summary: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  syntax: "public Object allowSelfSignedServerCert()"
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authenticationType property: The authentication mechanism used to connect to the Phoenix server."
  syntax: "public PhoenixAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PhoenixAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.PhoenixAuthenticationType&text=PhoenixAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.enableSsl()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.enableSsl()"
  name: "enableSsl()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.enableSsl()"
  summary: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  syntax: "public Object enableSsl()"
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.host()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.host()"
  name: "host()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.host()"
  summary: "Get the host property: The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)."
  syntax: "public Object host()"
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.httpPath()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.httpPath()"
  name: "httpPath()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.httpPath()"
  summary: "Get the httpPath property: The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
  syntax: "public Object httpPath()"
  returns:
    description: "the httpPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password corresponding to the user name."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.port()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.port()"
  name: "port()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.port()"
  summary: "Get the port property: The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
  syntax: "public Object port()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.trustedCertPath()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.trustedCertPath()"
  name: "trustedCertPath()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.trustedCertPath()"
  summary: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  syntax: "public Object trustedCertPath()"
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.useSystemTrustStore()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.useSystemTrustStore()"
  name: "useSystemTrustStore()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.useSystemTrustStore()"
  summary: "Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  syntax: "public Object useSystemTrustStore()"
  returns:
    description: "the useSystemTrustStore value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The user name used to connect to the Phoenix server."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "PhoenixLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAllowHostnameCNMismatch(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  name: "withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  summary: "Set the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  parameters:
  - description: "the allowHostnameCNMismatch value to set."
    name: "allowHostnameCNMismatch"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.PhoenixAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withAuthenticationType(PhoenixAuthenticationType authenticationType)"
  name: "withAuthenticationType(PhoenixAuthenticationType authenticationType)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withAuthenticationType(PhoenixAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication mechanism used to connect to the Phoenix server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PhoenixAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.PhoenixAuthenticationType&text=PhoenixAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withAuthenticationType(PhoenixAuthenticationType authenticationType)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withEnableSsl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  name: "withEnableSsl(Object enableSsl)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  summary: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withEnableSsl(Object enableSsl)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withHost(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withHost(Object host)"
  name: "withHost(Object host)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withHost(Object host)"
  summary: "Set the host property: The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withHost(Object host)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withHttpPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withHttpPath(Object httpPath)"
  name: "withHttpPath(Object httpPath)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withHttpPath(Object httpPath)"
  summary: "Set the httpPath property: The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
  parameters:
  - description: "the httpPath value to set."
    name: "httpPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withHttpPath(Object httpPath)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withPort(Object port)"
  summary: "Set the port property: The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withPort(Object port)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withTrustedCertPath(Object trustedCertPath)"
  name: "withTrustedCertPath(Object trustedCertPath)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withTrustedCertPath(Object trustedCertPath)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withUseSystemTrustStore(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withUseSystemTrustStore(Object useSystemTrustStore)"
  name: "withUseSystemTrustStore(Object useSystemTrustStore)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withUseSystemTrustStore(Object useSystemTrustStore)"
  summary: "Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  parameters:
  - description: "the useSystemTrustStore value to set."
    name: "useSystemTrustStore"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withUseSystemTrustStore(Object useSystemTrustStore)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "PhoenixLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The user name used to connect to the Phoenix server."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the PhoenixLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.PhoenixLinkedServiceTypeProperties&text=PhoenixLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
