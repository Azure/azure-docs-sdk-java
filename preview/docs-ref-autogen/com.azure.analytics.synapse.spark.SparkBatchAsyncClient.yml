### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient"
fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient"
name: "SparkBatchAsyncClient"
nameWithType: "SparkBatchAsyncClient"
summary: "Initializes a new instance of the asynchronous Spark<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkBatchAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.cancelSparkBatchJob(int)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.cancelSparkBatchJob(int batchId)"
  name: "cancelSparkBatchJob(int batchId)"
  nameWithType: "SparkBatchAsyncClient.cancelSparkBatchJob(int batchId)"
  summary: "Cancels a running spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> cancelSparkBatchJob(int batchId)"
  desc: "Cancels a running spark batch job."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.cancelSparkBatchJobWithResponse(int)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.cancelSparkBatchJobWithResponse(int batchId)"
  name: "cancelSparkBatchJobWithResponse(int batchId)"
  nameWithType: "SparkBatchAsyncClient.cancelSparkBatchJobWithResponse(int batchId)"
  summary: "Cancels a running spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> cancelSparkBatchJobWithResponse(int batchId)"
  desc: "Cancels a running spark batch job."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJob(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  name: "createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  nameWithType: "SparkBatchAsyncClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJob(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  name: "createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJobWithResponse(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  name: "createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJob>> createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJob(int)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJob(int batchId)"
  name: "getSparkBatchJob(int batchId)"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJob(int batchId)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> getSparkBatchJob(int batchId)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJob(int,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJob(int batchId, Boolean detailed)"
  name: "getSparkBatchJob(int batchId, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJob(int batchId, Boolean detailed)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> getSparkBatchJob(int batchId, Boolean detailed)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobWithResponse(int,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobWithResponse(int batchId, Boolean detailed)"
  name: "getSparkBatchJobWithResponse(int batchId, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJobWithResponse(int batchId, Boolean detailed)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJob>> getSparkBatchJobWithResponse(int batchId, Boolean detailed)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobs()"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobs()"
  name: "getSparkBatchJobs()"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJobs()"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  syntax: "public Mono<SparkBatchJobCollection> getSparkBatchJobs()"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobs(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  name: "getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJobCollection> getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobsWithResponse(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchAsyncClient.getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed)"
  name: "getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed)"
  nameWithType: "SparkBatchAsyncClient.getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJobCollection>> getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed)"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous SparkClient type."
metadata: {}
package: "com.azure.analytics.synapse.spark"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
