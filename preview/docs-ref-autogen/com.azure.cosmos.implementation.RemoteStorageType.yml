### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.RemoteStorageType
  id: RemoteStorageType
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.RemoteStorageType.NotSpecified
  - com.azure.cosmos.implementation.RemoteStorageType.Premium
  - com.azure.cosmos.implementation.RemoteStorageType.Standard
  - com.azure.cosmos.implementation.RemoteStorageType.valueOf(java.lang.String)
  - com.azure.cosmos.implementation.RemoteStorageType.values()
  langs:
  - java
  name: RemoteStorageType
  nameWithType: RemoteStorageType
  fullName: com.azure.cosmos.implementation.RemoteStorageType
  type: Enum
  package: com.azure.cosmos.implementation
  syntax:
    content: public enum RemoteStorageType extends Enum<RemoteStorageType>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.RemoteStorageType.NotSpecified
  id: NotSpecified
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: NotSpecified
  nameWithType: RemoteStorageType.NotSpecified
  fullName: com.azure.cosmos.implementation.RemoteStorageType.NotSpecified
  type: Field
  package: com.azure.cosmos.implementation
  summary: Use standard storage
  syntax:
    content: public static final RemoteStorageType NotSpecified
    return:
      type: com.azure.cosmos.implementation.RemoteStorageType
- uid: com.azure.cosmos.implementation.RemoteStorageType.Premium
  id: Premium
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: Premium
  nameWithType: RemoteStorageType.Premium
  fullName: com.azure.cosmos.implementation.RemoteStorageType.Premium
  type: Field
  package: com.azure.cosmos.implementation
  summary: Use premium storage
  syntax:
    content: public static final RemoteStorageType Premium
    return:
      type: com.azure.cosmos.implementation.RemoteStorageType
- uid: com.azure.cosmos.implementation.RemoteStorageType.RemoteStorageType()
  id: RemoteStorageType()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: RemoteStorageType()
  nameWithType: RemoteStorageType.RemoteStorageType()
  fullName: com.azure.cosmos.implementation.RemoteStorageType.RemoteStorageType()
  overload: com.azure.cosmos.implementation.RemoteStorageType.RemoteStorageType*
  type: Constructor
  package: com.azure.cosmos.implementation
  syntax:
    content: private RemoteStorageType()
- uid: com.azure.cosmos.implementation.RemoteStorageType.Standard
  id: Standard
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: Standard
  nameWithType: RemoteStorageType.Standard
  fullName: com.azure.cosmos.implementation.RemoteStorageType.Standard
  type: Field
  package: com.azure.cosmos.implementation
  summary: Use standard storage
  syntax:
    content: public static final RemoteStorageType Standard
    return:
      type: com.azure.cosmos.implementation.RemoteStorageType
- uid: com.azure.cosmos.implementation.RemoteStorageType.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: valueOf(String name)
  nameWithType: RemoteStorageType.valueOf(String name)
  fullName: com.azure.cosmos.implementation.RemoteStorageType.valueOf(String name)
  overload: com.azure.cosmos.implementation.RemoteStorageType.valueOf*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static RemoteStorageType valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.RemoteStorageType
- uid: com.azure.cosmos.implementation.RemoteStorageType.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.RemoteStorageType
  langs:
  - java
  name: values()
  nameWithType: RemoteStorageType.values()
  fullName: com.azure.cosmos.implementation.RemoteStorageType.values()
  overload: com.azure.cosmos.implementation.RemoteStorageType.values*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static RemoteStorageType[] values()
    return:
      type: com.azure.cosmos.implementation.RemoteStorageType[]
references:
- uid: com.azure.cosmos.implementation.RemoteStorageType.RemoteStorageType*
  name: RemoteStorageType
  nameWithType: RemoteStorageType.RemoteStorageType
  fullName: com.azure.cosmos.implementation.RemoteStorageType.RemoteStorageType
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.RemoteStorageType[]
  spec.java:
  - uid: com.azure.cosmos.implementation.RemoteStorageType
    name: RemoteStorageType
    fullName: com.azure.cosmos.implementation.RemoteStorageType
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.RemoteStorageType.values*
  name: values
  nameWithType: RemoteStorageType.values
  fullName: com.azure.cosmos.implementation.RemoteStorageType.values
  package: com.azure.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.RemoteStorageType.valueOf*
  name: valueOf
  nameWithType: RemoteStorageType.valueOf
  fullName: com.azure.cosmos.implementation.RemoteStorageType.valueOf
  package: com.azure.cosmos.implementation
- uid: java.lang.Enum<com.azure.cosmos.implementation.RemoteStorageType>
  name: Enum<RemoteStorageType>
  nameWithType: Enum<RemoteStorageType>
  fullName: java.lang.Enum<com.azure.cosmos.implementation.RemoteStorageType>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
