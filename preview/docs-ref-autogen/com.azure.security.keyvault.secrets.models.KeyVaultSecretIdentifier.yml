### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  id: KeyVaultSecretIdentifier
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models
  children:
  - com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName()
  - com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId()
  - com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl()
  - com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion()
  - com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse(java.lang.String)
  langs:
  - java
  name: KeyVaultSecretIdentifier
  nameWithType: KeyVaultSecretIdentifier
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  type: Class
  package: com.azure.security.keyvault.secrets.models
  summary: Information about a <xref uid="com.azure.security.keyvault.secrets.models.KeyVaultSecret" data-throw-if-not-resolved="false">KeyVaultSecret</xref> parsed from the secret URL. You can use this information when calling methods of <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref> or <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref>.
  syntax:
    content: public final class KeyVaultSecretIdentifier
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.KeyVaultSecretIdentifier(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: KeyVaultSecretIdentifier(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: KeyVaultSecretIdentifier(String secretId, String vaultUrl, String name, String version)
  nameWithType: KeyVaultSecretIdentifier.KeyVaultSecretIdentifier(String secretId, String vaultUrl, String name, String version)
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.KeyVaultSecretIdentifier(String secretId, String vaultUrl, String name, String version)
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.KeyVaultSecretIdentifier*
  type: Constructor
  package: com.azure.security.keyvault.secrets.models
  syntax:
    content: private KeyVaultSecretIdentifier(String secretId, String vaultUrl, String name, String version)
    parameters:
    - id: secretId
      type: java.lang.String
    - id: vaultUrl
      type: java.lang.String
    - id: name
      type: java.lang.String
    - id: version
      type: java.lang.String
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: getName()
  nameWithType: KeyVaultSecretIdentifier.getName()
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName()
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName*
  type: Method
  package: com.azure.security.keyvault.secrets.models
  summary: Gets the name of the secret.
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
      description: The secret name.
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId()
  id: getSecretId()
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: getSecretId()
  nameWithType: KeyVaultSecretIdentifier.getSecretId()
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId()
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId*
  type: Method
  package: com.azure.security.keyvault.secrets.models
  summary: Gets the key identifier used to create this object
  syntax:
    content: public String getSecretId()
    return:
      type: java.lang.String
      description: The secret identifier.
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl()
  id: getVaultUrl()
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: getVaultUrl()
  nameWithType: KeyVaultSecretIdentifier.getVaultUrl()
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl()
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl*
  type: Method
  package: com.azure.security.keyvault.secrets.models
  summary: Gets the URL of the Key Vault.
  syntax:
    content: public String getVaultUrl()
    return:
      type: java.lang.String
      description: The Key Vault URL.
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion()
  id: getVersion()
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: getVersion()
  nameWithType: KeyVaultSecretIdentifier.getVersion()
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion()
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion*
  type: Method
  package: com.azure.security.keyvault.secrets.models
  summary: Gets the optional version of the secret.
  syntax:
    content: public String getVersion()
    return:
      type: java.lang.String
      description: The secret version.
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse(java.lang.String)
  id: parse(java.lang.String)
  artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
  parent: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
  langs:
  - java
  name: parse(String secretId)
  nameWithType: KeyVaultSecretIdentifier.parse(String secretId)
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse(String secretId)
  overload: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse*
  type: Method
  package: com.azure.security.keyvault.secrets.models
  summary: >-
    Create a new <xref uid="com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier" data-throw-if-not-resolved="false">KeyVaultSecretIdentifier</xref> from a given secret identifier.


    Valid examples are:

     *  https://\{key-vault-name\}.vault.azure.net/secrets/\{secret-name\}
     *  https://\{key-vault-name\}.vault.azure.net/secrets/\{secret-name\}/pending
     *  https://\{key-vault-name\}.vault.azure.net/secrets/\{secret-name\}/\{unique-version-id\}
     *  https://\{key-vault-name\}.vault.azure.net/deletedsecrets/\{deleted-secret-name\}
  syntax:
    content: public static KeyVaultSecretIdentifier parse(String secretId)
    parameters:
    - id: secretId
      type: java.lang.String
      description: The secret identifier to extract information from.
    return:
      type: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier
      description: a new instance of <xref uid="com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier" data-throw-if-not-resolved="false">KeyVaultSecretIdentifier</xref>.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: >-
      if the given identifier is <code>null</code> or an invalid Key Vault Secret
       identifier.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.KeyVaultSecretIdentifier*
  name: KeyVaultSecretIdentifier
  nameWithType: KeyVaultSecretIdentifier.KeyVaultSecretIdentifier
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.KeyVaultSecretIdentifier
  package: com.azure.security.keyvault.secrets.models
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId*
  name: getSecretId
  nameWithType: KeyVaultSecretIdentifier.getSecretId
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getSecretId
  package: com.azure.security.keyvault.secrets.models
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl*
  name: getVaultUrl
  nameWithType: KeyVaultSecretIdentifier.getVaultUrl
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVaultUrl
  package: com.azure.security.keyvault.secrets.models
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName*
  name: getName
  nameWithType: KeyVaultSecretIdentifier.getName
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getName
  package: com.azure.security.keyvault.secrets.models
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion*
  name: getVersion
  nameWithType: KeyVaultSecretIdentifier.getVersion
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.getVersion
  package: com.azure.security.keyvault.secrets.models
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse*
  name: parse
  nameWithType: KeyVaultSecretIdentifier.parse
  fullName: com.azure.security.keyvault.secrets.models.KeyVaultSecretIdentifier.parse
  package: com.azure.security.keyvault.secrets.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
