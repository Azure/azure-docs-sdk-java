### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.DatabindContext
  id: DatabindContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.DatabindContext()
  - com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers()
  - com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  - com.fasterxml.jackson.databind.DatabindContext.getActiveView()
  - com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector()
  - com.fasterxml.jackson.databind.DatabindContext.getAttribute(java.lang.Object)
  - com.fasterxml.jackson.databind.DatabindContext.getConfig()
  - com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.DatabindContext.getLocale()
  - com.fasterxml.jackson.databind.DatabindContext.getTimeZone()
  - com.fasterxml.jackson.databind.DatabindContext.getTypeFactory()
  - com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  - com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  - com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.DatabindContext.setAttribute(java.lang.Object,java.lang.Object)
  langs:
  - java
  name: DatabindContext
  nameWithType: DatabindContext
  fullName: com.fasterxml.jackson.databind.DatabindContext
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Shared base class for <xref uid="com.fasterxml.jackson.databind.DeserializationContext" data-throw-if-not-resolved="false">DeserializationContext</xref> and <xref uid="com.fasterxml.jackson.databind.SerializerProvider" data-throw-if-not-resolved="false">SerializerProvider</xref>, context objects passed through data-binding process. Designed so that some of implementations can rely on shared aspects like access to secondary contextual objects like type factories or handler instantiators.
  syntax:
    content: public abstract class DatabindContext
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: <T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: <T>_throwNotASubtype(JavaType baseType, String subType)
  nameWithType: DatabindContext.<T>_throwNotASubtype(JavaType baseType, String subType)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(JavaType baseType, String subType)
  overload: com.fasterxml.jackson.databind.DatabindContext._throwNotASubtype*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected T <T>_throwNotASubtype(JavaType baseType, String subType)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: java.lang.String
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: <T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: <T>_throwSubtypeClassNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  nameWithType: DatabindContext.<T>_throwSubtypeClassNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.DatabindContext._throwSubtypeClassNotAllowed*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected T <T>_throwSubtypeClassNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: java.lang.String
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: <T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: <T>_throwSubtypeNameNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  nameWithType: DatabindContext.<T>_throwSubtypeNameNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.DatabindContext._throwSubtypeNameNotAllowed*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected T <T>_throwSubtypeNameNotAllowed(JavaType baseType, String subType, PolymorphicTypeValidator ptv)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: java.lang.String
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: <T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: <T>reportBadDefinition(JavaType type, String msg)
  nameWithType: DatabindContext.<T>reportBadDefinition(JavaType type, String msg)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(JavaType type, String msg)
  overload: com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Helper method called to indicate a generic problem that stems from type definition(s), not input data, or input/output state; typically this means throwing a <xref uid="com.fasterxml.jackson.databind.exc.InvalidDefinitionException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidDefinitionException</xref>.
  syntax:
    content: public abstract T <T>reportBadDefinition(JavaType type, String msg)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: msg
      type: java.lang.String
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
  id: <T>reportBadDefinition(java.lang.Class<?>,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: <T>reportBadDefinition(Class<?> type, String msg)
  nameWithType: DatabindContext.<T>reportBadDefinition(Class<?> type, String msg)
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(Class<?> type, String msg)
  overload: com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public T <T>reportBadDefinition(Class<?> type, String msg)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: msg
      type: java.lang.String
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.DatabindContext()
  id: DatabindContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: DatabindContext()
  nameWithType: DatabindContext.DatabindContext()
  fullName: com.fasterxml.jackson.databind.DatabindContext.DatabindContext()
  overload: com.fasterxml.jackson.databind.DatabindContext.DatabindContext*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public DatabindContext()
- uid: com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)
  id: _colonConcat(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: _colonConcat(String msgBase, String extra)
  nameWithType: DatabindContext._colonConcat(String msgBase, String extra)
  fullName: com.fasterxml.jackson.databind.DatabindContext._colonConcat(String msgBase, String extra)
  overload: com.fasterxml.jackson.databind.DatabindContext._colonConcat*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected String _colonConcat(String msgBase, String extra)
    parameters:
    - id: msgBase
      type: java.lang.String
    - id: extra
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)
  id: _desc(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: _desc(String desc)
  nameWithType: DatabindContext._desc(String desc)
  fullName: com.fasterxml.jackson.databind.DatabindContext._desc(String desc)
  overload: com.fasterxml.jackson.databind.DatabindContext._desc*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected String _desc(String desc)
    parameters:
    - id: desc
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)
  id: _format(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: _format(String msg, Object[] msgArgs)
  nameWithType: DatabindContext._format(String msg, Object[] msgArgs)
  fullName: com.fasterxml.jackson.databind.DatabindContext._format(String msg, Object[] msgArgs)
  overload: com.fasterxml.jackson.databind.DatabindContext._format*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final String _format(String msg, Object[] msgArgs)
    parameters:
    - id: msg
      type: java.lang.String
    - id: msgArgs
      type: java.lang.Object[]
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)
  id: _quotedString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: _quotedString(String desc)
  nameWithType: DatabindContext._quotedString(String desc)
  fullName: com.fasterxml.jackson.databind.DatabindContext._quotedString(String desc)
  overload: com.fasterxml.jackson.databind.DatabindContext._quotedString*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected String _quotedString(String desc)
    parameters:
    - id: desc
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)
  id: _truncate(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: _truncate(String desc)
  nameWithType: DatabindContext._truncate(String desc)
  fullName: com.fasterxml.jackson.databind.DatabindContext._truncate(String desc)
  overload: com.fasterxml.jackson.databind.DatabindContext._truncate*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final String _truncate(String desc)
    parameters:
    - id: desc
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers()
  id: canOverrideAccessModifiers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: canOverrideAccessModifiers()
  nameWithType: DatabindContext.canOverrideAccessModifiers()
  fullName: com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers()
  overload: com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method for accessing serialization view in use (if any); equivalent to:


    ```java

    getConfig().canOverrideAccessModifiers();

    ```
  syntax:
    content: public abstract boolean canOverrideAccessModifiers()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  id: constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: constructSpecializedType(JavaType baseType, Class<?> subclass)
  nameWithType: DatabindContext.constructSpecializedType(JavaType baseType, Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType(JavaType baseType, Class<?> subclass)
  overload: com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method for constructing subtypes, retaining generic type parameter (if any).


    Note: since 2.11 handling has varied a bit across serialization, deserialization.
  syntax:
    content: public abstract JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)
  id: constructType(java.lang.reflect.Type)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: constructType(Type type)
  nameWithType: DatabindContext.constructType(Type type)
  fullName: com.fasterxml.jackson.databind.DatabindContext.constructType(Type type)
  overload: com.fasterxml.jackson.databind.DatabindContext.constructType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method for constructing <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref> for given JDK type (usually <xref uid="java.lang.Class" data-throw-if-not-resolved="false">java.lang.Class</xref>)
  syntax:
    content: public JavaType constructType(Type type)
    parameters:
    - id: type
      type: java.lang.reflect.Type
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  id: converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: converterInstance(Annotated annotated, Object converterDef)
  nameWithType: DatabindContext.converterInstance(Annotated annotated, Object converterDef)
  fullName: com.fasterxml.jackson.databind.DatabindContext.converterInstance(Annotated annotated, Object converterDef)
  overload: com.fasterxml.jackson.databind.DatabindContext.converterInstance*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Helper method to use to construct a <xref uid="com.fasterxml.jackson.databind.util.Converter" data-throw-if-not-resolved="false">Converter</xref>, given a definition that may be either actual converter instance, or Class for instantiating one.
  syntax:
    content: public Converter<Object,Object> converterInstance(Annotated annotated, Object converterDef)
    parameters:
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: converterDef
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.util.Converter<java.lang.Object,java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.getActiveView()
  id: getActiveView()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getActiveView()
  nameWithType: DatabindContext.getActiveView()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getActiveView()
  overload: com.fasterxml.jackson.databind.DatabindContext.getActiveView*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for locating currently active view, if any; returns null if no view has been set.
  syntax:
    content: public abstract Class<?> getActiveView()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector()
  id: getAnnotationIntrospector()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getAnnotationIntrospector()
  nameWithType: DatabindContext.getAnnotationIntrospector()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector()
  overload: com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method for accessing serialization view in use (if any); equivalent to:


    ```java

    getConfig().getAnnotationIntrospector();

    ```
  syntax:
    content: public abstract AnnotationIntrospector getAnnotationIntrospector()
    return:
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.DatabindContext.getAttribute(java.lang.Object)
  id: getAttribute(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getAttribute(Object key)
  nameWithType: DatabindContext.getAttribute(Object key)
  fullName: com.fasterxml.jackson.databind.DatabindContext.getAttribute(Object key)
  overload: com.fasterxml.jackson.databind.DatabindContext.getAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing attributes available in this context. Per-call attributes have highest precedence; attributes set via <xref uid="com.fasterxml.jackson.databind.ObjectReader" data-throw-if-not-resolved="false">ObjectReader</xref> or <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref> have lower precedence.
  syntax:
    content: public abstract Object getAttribute(Object key)
    parameters:
    - id: key
      type: java.lang.Object
      description: Key of the attribute to get
    return:
      type: java.lang.Object
      description: Value of the attribute, if any; null otherwise
- uid: com.fasterxml.jackson.databind.DatabindContext.getConfig()
  id: getConfig()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getConfig()
  nameWithType: DatabindContext.getConfig()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getConfig()
  overload: com.fasterxml.jackson.databind.DatabindContext.getConfig*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor to currently active configuration (both per-request configs and per-mapper config).
  syntax:
    content: public abstract MapperConfig<?> getConfig()
    return:
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
- uid: com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat(java.lang.Class<?>)
  id: getDefaultPropertyFormat(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getDefaultPropertyFormat(Class<?> baseType)
  nameWithType: DatabindContext.getDefaultPropertyFormat(Class<?> baseType)
  fullName: com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat(Class<?> baseType)
  overload: com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract JsonFormat.Value getDefaultPropertyFormat(Class<?> baseType)
    parameters:
    - id: baseType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.DatabindContext.getLocale()
  id: getLocale()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getLocale()
  nameWithType: DatabindContext.getLocale()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getLocale()
  overload: com.fasterxml.jackson.databind.DatabindContext.getLocale*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract Locale getLocale()
    return:
      type: java.util.Locale
- uid: com.fasterxml.jackson.databind.DatabindContext.getTimeZone()
  id: getTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getTimeZone()
  nameWithType: DatabindContext.getTimeZone()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getTimeZone()
  overload: com.fasterxml.jackson.databind.DatabindContext.getTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract TimeZone getTimeZone()
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.DatabindContext.getTypeFactory()
  id: getTypeFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: getTypeFactory()
  nameWithType: DatabindContext.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.DatabindContext.getTypeFactory()
  overload: com.fasterxml.jackson.databind.DatabindContext.getTypeFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract TypeFactory getTypeFactory()
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  id: invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: invalidTypeIdException(JavaType baseType, String typeId, String extraDesc)
  nameWithType: DatabindContext.invalidTypeIdException(JavaType baseType, String typeId, String extraDesc)
  fullName: com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException(JavaType baseType, String typeId, String extraDesc)
  overload: com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Helper method for constructing exception to indicate that given type id could not be resolved to a valid subtype of specified base type. Most commonly called during polymorphic deserialization.


    Note that most of the time this method should NOT be called directly: instead, method `handleUnknownTypeId()` should be called which will call this method if necessary.
  syntax:
    content: protected abstract JsonMappingException invalidTypeIdException(JavaType baseType, String typeId, String extraDesc)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: typeId
      type: java.lang.String
    - id: extraDesc
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  id: isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: isEnabled(MapperFeature feature)
  nameWithType: DatabindContext.isEnabled(MapperFeature feature)
  fullName: com.fasterxml.jackson.databind.DatabindContext.isEnabled(MapperFeature feature)
  overload: com.fasterxml.jackson.databind.DatabindContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method for checking whether specified serialization feature is enabled or not. Shortcut for:


    ```java

    getConfig().isEnabled(feature);

    ```
  syntax:
    content: public abstract boolean isEnabled(MapperFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.MapperFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  id: objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: objectIdGeneratorInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  nameWithType: DatabindContext.objectIdGeneratorInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  overload: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
    parameters:
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: objectIdInfo
      type: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  id: objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  nameWithType: DatabindContext.objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
  overload: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
    parameters:
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: objectIdInfo
      type: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: resolveAndValidateSubType(JavaType baseType, String subClass, PolymorphicTypeValidator ptv)
  nameWithType: DatabindContext.resolveAndValidateSubType(JavaType baseType, String subClass, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(JavaType baseType, String subClass, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Lookup method similar to <xref uid="com.fasterxml.jackson.databind.DatabindContext.resolveSubType*" data-throw-if-not-resolved="false">#resolveSubType</xref> but one that also validates that resulting subtype is valid according to given <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref>.
  syntax:
    content: public JavaType resolveAndValidateSubType(JavaType baseType, String subClass, PolymorphicTypeValidator ptv)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subClass
      type: java.lang.String
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: resolveSubType(JavaType baseType, String subClassName)
  nameWithType: DatabindContext.resolveSubType(JavaType baseType, String subClassName)
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveSubType(JavaType baseType, String subClassName)
  overload: com.fasterxml.jackson.databind.DatabindContext.resolveSubType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Lookup method called when code needs to resolve class name from input; usually simple lookup. Note that unlike <xref uid="com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType*" data-throw-if-not-resolved="false">#resolveAndValidateSubType</xref> this method DOES NOT validate subtype against configured <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref>: usually because such check has already been made.'
  syntax:
    content: public JavaType resolveSubType(JavaType baseType, String subClassName)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subClassName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DatabindContext.setAttribute(java.lang.Object,java.lang.Object)
  id: setAttribute(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.DatabindContext
  langs:
  - java
  name: setAttribute(Object key, Object value)
  nameWithType: DatabindContext.setAttribute(Object key, Object value)
  fullName: com.fasterxml.jackson.databind.DatabindContext.setAttribute(Object key, Object value)
  overload: com.fasterxml.jackson.databind.DatabindContext.setAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for setting per-call value of given attribute. This will override any previously defined value for the attribute within this context.
  syntax:
    content: public abstract DatabindContext setAttribute(Object key, Object value)
    parameters:
    - id: key
      type: java.lang.Object
      description: Key of the attribute to set
    - id: value
      type: java.lang.Object
      description: Value to set attribute to
    return:
      type: com.fasterxml.jackson.databind.DatabindContext
      description: This context object, to allow chaining
references:
- uid: com.fasterxml.jackson.databind.DatabindContext.DatabindContext*
  name: DatabindContext
  nameWithType: DatabindContext.DatabindContext
  fullName: com.fasterxml.jackson.databind.DatabindContext.DatabindContext
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DatabindContext.getConfig*
  name: getConfig
  nameWithType: DatabindContext.getConfig
  fullName: com.fasterxml.jackson.databind.DatabindContext.getConfig
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector*
  name: getAnnotationIntrospector
  nameWithType: DatabindContext.getAnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.DatabindContext.getAnnotationIntrospector
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.DatabindContext.isEnabled*
  name: isEnabled
  nameWithType: DatabindContext.isEnabled
  fullName: com.fasterxml.jackson.databind.DatabindContext.isEnabled
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers*
  name: canOverrideAccessModifiers
  nameWithType: DatabindContext.canOverrideAccessModifiers
  fullName: com.fasterxml.jackson.databind.DatabindContext.canOverrideAccessModifiers
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DatabindContext.getActiveView*
  name: getActiveView
  nameWithType: DatabindContext.getActiveView
  fullName: com.fasterxml.jackson.databind.DatabindContext.getActiveView
  package: com.fasterxml.jackson.databind
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: com.fasterxml.jackson.databind.DatabindContext.getLocale*
  name: getLocale
  nameWithType: DatabindContext.getLocale
  fullName: com.fasterxml.jackson.databind.DatabindContext.getLocale
  package: com.fasterxml.jackson.databind
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.DatabindContext.getTimeZone*
  name: getTimeZone
  nameWithType: DatabindContext.getTimeZone
  fullName: com.fasterxml.jackson.databind.DatabindContext.getTimeZone
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat*
  name: getDefaultPropertyFormat
  nameWithType: DatabindContext.getDefaultPropertyFormat
  fullName: com.fasterxml.jackson.databind.DatabindContext.getDefaultPropertyFormat
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.DatabindContext.getAttribute*
  name: getAttribute
  nameWithType: DatabindContext.getAttribute
  fullName: com.fasterxml.jackson.databind.DatabindContext.getAttribute
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext.setAttribute*
  name: setAttribute
  nameWithType: DatabindContext.setAttribute
  fullName: com.fasterxml.jackson.databind.DatabindContext.setAttribute
  package: com.fasterxml.jackson.databind
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.DatabindContext.constructType*
  name: constructType
  nameWithType: DatabindContext.constructType
  fullName: com.fasterxml.jackson.databind.DatabindContext.constructType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType*
  name: constructSpecializedType
  nameWithType: DatabindContext.constructSpecializedType
  fullName: com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveSubType*
  name: resolveSubType
  nameWithType: DatabindContext.resolveSubType
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveSubType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  name: PolymorphicTypeValidator
  nameWithType: PolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType*
  name: resolveAndValidateSubType
  nameWithType: DatabindContext.resolveAndValidateSubType
  fullName: com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType
  package: com.fasterxml.jackson.databind
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.DatabindContext._throwNotASubtype*
  name: <T>_throwNotASubtype
  nameWithType: DatabindContext.<T>_throwNotASubtype
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._throwSubtypeNameNotAllowed*
  name: <T>_throwSubtypeNameNotAllowed
  nameWithType: DatabindContext.<T>_throwSubtypeNameNotAllowed
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._throwSubtypeClassNotAllowed*
  name: <T>_throwSubtypeClassNotAllowed
  nameWithType: DatabindContext.<T>_throwSubtypeClassNotAllowed
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException*
  name: invalidTypeIdException
  nameWithType: DatabindContext.invalidTypeIdException
  fullName: com.fasterxml.jackson.databind.DatabindContext.invalidTypeIdException
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.DatabindContext.getTypeFactory*
  name: getTypeFactory
  nameWithType: DatabindContext.getTypeFactory
  fullName: com.fasterxml.jackson.databind.DatabindContext.getTypeFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.introspect.Annotated
  name: Annotated
  nameWithType: Annotated
  fullName: com.fasterxml.jackson.databind.introspect.Annotated
- uid: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
  name: ObjectIdInfo
  nameWithType: ObjectIdInfo
  fullName: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
  spec.java:
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
    name: ObjectIdGenerator
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance*
  name: objectIdGeneratorInstance
  nameWithType: DatabindContext.objectIdGeneratorInstance
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver
  name: ObjectIdResolver
  nameWithType: ObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance*
  name: objectIdResolverInstance
  nameWithType: DatabindContext.objectIdResolverInstance
  fullName: com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.util.Converter<java.lang.Object,java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.Converter
    name: Converter
    fullName: com.fasterxml.jackson.databind.util.Converter
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DatabindContext.converterInstance*
  name: converterInstance
  nameWithType: DatabindContext.converterInstance
  fullName: com.fasterxml.jackson.databind.DatabindContext.converterInstance
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition*
  name: <T>reportBadDefinition
  nameWithType: DatabindContext.<T>reportBadDefinition
  fullName: com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.DatabindContext._format*
  name: _format
  nameWithType: DatabindContext._format
  fullName: com.fasterxml.jackson.databind.DatabindContext._format
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._truncate*
  name: _truncate
  nameWithType: DatabindContext._truncate
  fullName: com.fasterxml.jackson.databind.DatabindContext._truncate
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._quotedString*
  name: _quotedString
  nameWithType: DatabindContext._quotedString
  fullName: com.fasterxml.jackson.databind.DatabindContext._quotedString
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._colonConcat*
  name: _colonConcat
  nameWithType: DatabindContext._colonConcat
  fullName: com.fasterxml.jackson.databind.DatabindContext._colonConcat
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DatabindContext._desc*
  name: _desc
  nameWithType: DatabindContext._desc
  fullName: com.fasterxml.jackson.databind.DatabindContext._desc
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: ObjectIdGenerator
  nameWithType: ObjectIdGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: com.fasterxml.jackson.databind.util.Converter
  name: Converter
  nameWithType: Converter
  fullName: com.fasterxml.jackson.databind.util.Converter
- uid: java.lang.Object,java.lang.Object
  name: Object,Object
  nameWithType: Object,Object
  fullName: java.lang.Object,java.lang.Object
