### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  id: SimpleMixInResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect
  children:
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._localMixIns
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._overrides
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy()
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns()
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize()
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  - com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions()
  langs:
  - java
  name: SimpleMixInResolver
  nameWithType: SimpleMixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  type: Class
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Simple implementation of <xref uid="com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver" data-throw-if-not-resolved="false">ClassIntrospector.MixInResolver</xref> that just uses a <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> for containing mapping from target to mix-in classes.


    Implementation is only thread-safe after initialization (that is, when underlying Map is not modified but only read).
  syntax:
    content: public class SimpleMixInResolver implements ClassIntrospector.MixInResolver, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  id: SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: SimpleMixInResolver(ClassIntrospector.MixInResolver overrides)
  nameWithType: SimpleMixInResolver.SimpleMixInResolver(ClassIntrospector.MixInResolver overrides)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(ClassIntrospector.MixInResolver overrides)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver*
  type: Constructor
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public SimpleMixInResolver(ClassIntrospector.MixInResolver overrides)
    parameters:
    - id: overrides
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>)
  id: SimpleMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: SimpleMixInResolver(ClassIntrospector.MixInResolver overrides, Map<ClassKey,Class<?>> mixins)
  nameWithType: SimpleMixInResolver.SimpleMixInResolver(ClassIntrospector.MixInResolver overrides, Map<ClassKey,Class<?>> mixins)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver(ClassIntrospector.MixInResolver overrides, Map<ClassKey,Class<?>> mixins)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver*
  type: Constructor
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: protected SimpleMixInResolver(ClassIntrospector.MixInResolver overrides, Map<ClassKey,Class<?>> mixins)
    parameters:
    - id: overrides
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
    - id: mixins
      type: java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._localMixIns
  id: _localMixIns
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: _localMixIns
  nameWithType: SimpleMixInResolver._localMixIns
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._localMixIns
  type: Field
  package: com.fasterxml.jackson.databind.introspect
  summary: Simple mix-in targets defined locally.
  syntax:
    content: protected Map<ClassKey,Class<?>> _localMixIns
    return:
      type: java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._overrides
  id: _overrides
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: _overrides
  nameWithType: SimpleMixInResolver._overrides
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._overrides
  type: Field
  package: com.fasterxml.jackson.databind.introspect
  summary: External resolver that gets called before looking at any locally defined mix-in target classes.
  syntax:
    content: protected final ClassIntrospector.MixInResolver _overrides
    return:
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition(java.lang.Class<?>,java.lang.Class<?>)
  id: addLocalDefinition(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: addLocalDefinition(Class<?> target, Class<?> mixinSource)
  nameWithType: SimpleMixInResolver.addLocalDefinition(Class<?> target, Class<?> mixinSource)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition(Class<?> target, Class<?> mixinSource)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public void addLocalDefinition(Class<?> target, Class<?> mixinSource)
    parameters:
    - id: target
      type: java.lang.Class<?>
    - id: mixinSource
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy()
  id: copy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: copy()
  nameWithType: SimpleMixInResolver.copy()
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy()
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method called to create a new, non-shared copy, to be used by different `ObjectMapper` instance, and one that should not be connected to this instance, if resolver has mutable state. If resolver is immutable may simply return \`this\`.
  syntax:
    content: public SimpleMixInResolver copy()
    return:
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor(java.lang.Class<?>)
  id: findMixInClassFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: findMixInClassFor(Class<?> cls)
  nameWithType: SimpleMixInResolver.findMixInClassFor(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor(Class<?> cls)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method that will check if there are "mix-in" classes (with mix-in annotations) for given class
  syntax:
    content: public Class<?> findMixInClassFor(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns()
  id: hasMixIns()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: hasMixIns()
  nameWithType: SimpleMixInResolver.hasMixIns()
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns()
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Method that may be called for optimization purposes, to see if calls to mix-in resolver may be avoided. Return value of `true` means that it is possible that a mix-in class will be found; `false` that no mix-in will ever be found. In latter case caller can avoid calls altogether.


    Note that the reason for "empty" resolvers is to use "null object" for simplifying code.
  syntax:
    content: public boolean hasMixIns()
    return:
      type: boolean
      description: >-
        True, if this resolver MAY have mix-ins to apply; false if not (it
           is "empty")
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize()
  id: localSize()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: localSize()
  nameWithType: SimpleMixInResolver.localSize()
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize()
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public int localSize()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)
  id: setLocalDefinitions(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: setLocalDefinitions(Map<Class<?>,Class<?>> sourceMixins)
  nameWithType: SimpleMixInResolver.setLocalDefinitions(Map<Class<?>,Class<?>> sourceMixins)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions(Map<Class<?>,Class<?>> sourceMixins)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public void setLocalDefinitions(Map<Class<?>,Class<?>> sourceMixins)
    parameters:
    - id: sourceMixins
      type: java.util.Map<java.lang.Class<?>,java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  id: withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: withOverrides(ClassIntrospector.MixInResolver overrides)
  nameWithType: SimpleMixInResolver.withOverrides(ClassIntrospector.MixInResolver overrides)
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides(ClassIntrospector.MixInResolver overrides)
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Mutant factory for constructor a new resolver instance with given mix-in resolver override.
  syntax:
    content: public SimpleMixInResolver withOverrides(ClassIntrospector.MixInResolver overrides)
    parameters:
    - id: overrides
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
    return:
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions()
  id: withoutLocalDefinitions()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
  langs:
  - java
  name: withoutLocalDefinitions()
  nameWithType: SimpleMixInResolver.withoutLocalDefinitions()
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions()
  overload: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Mutant factory method that constructs a new instance that has no locally defined mix-in/target mappings.
  syntax:
    content: public SimpleMixInResolver withoutLocalDefinitions()
    return:
      type: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver
references:
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  name: ClassIntrospector.MixInResolver
  nameWithType: ClassIntrospector.MixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver*
  name: SimpleMixInResolver
  nameWithType: SimpleMixInResolver.SimpleMixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.SimpleMixInResolver
  package: com.fasterxml.jackson.databind.introspect
- uid: java.util.Map<com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class<?>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.type.ClassKey
    name: ClassKey
    fullName: com.fasterxml.jackson.databind.type.ClassKey
  - name: ','
    fullName: ','
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides*
  name: withOverrides
  nameWithType: SimpleMixInResolver.withOverrides
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withOverrides
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions*
  name: withoutLocalDefinitions
  nameWithType: SimpleMixInResolver.withoutLocalDefinitions
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.withoutLocalDefinitions
  package: com.fasterxml.jackson.databind.introspect
- uid: java.util.Map<java.lang.Class<?>,java.lang.Class<?>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions*
  name: setLocalDefinitions
  nameWithType: SimpleMixInResolver.setLocalDefinitions
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition*
  name: addLocalDefinition
  nameWithType: SimpleMixInResolver.addLocalDefinition
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy*
  name: copy
  nameWithType: SimpleMixInResolver.copy
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor*
  name: findMixInClassFor
  nameWithType: SimpleMixInResolver.findMixInClassFor
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor
  package: com.fasterxml.jackson.databind.introspect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize*
  name: localSize
  nameWithType: SimpleMixInResolver.localSize
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize
  package: com.fasterxml.jackson.databind.introspect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns*
  name: hasMixIns
  nameWithType: SimpleMixInResolver.hasMixIns
  fullName: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns
  package: com.fasterxml.jackson.databind.introspect
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class
  name: ClassKey,Class
  nameWithType: ClassKey,Class
  fullName: com.fasterxml.jackson.databind.type.ClassKey,java.lang.Class
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
