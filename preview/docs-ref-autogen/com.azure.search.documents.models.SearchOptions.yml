### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.models.SearchOptions
  id: SearchOptions
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models
  children:
  - com.azure.search.documents.models.SearchOptions.SearchOptions()
  - com.azure.search.documents.models.SearchOptions.getFacets()
  - com.azure.search.documents.models.SearchOptions.getFilter()
  - com.azure.search.documents.models.SearchOptions.getHighlightFields()
  - com.azure.search.documents.models.SearchOptions.getHighlightPostTag()
  - com.azure.search.documents.models.SearchOptions.getHighlightPreTag()
  - com.azure.search.documents.models.SearchOptions.getMinimumCoverage()
  - com.azure.search.documents.models.SearchOptions.getOrderBy()
  - com.azure.search.documents.models.SearchOptions.getQueryType()
  - com.azure.search.documents.models.SearchOptions.getScoringParameters()
  - com.azure.search.documents.models.SearchOptions.getScoringProfile()
  - com.azure.search.documents.models.SearchOptions.getSearchFields()
  - com.azure.search.documents.models.SearchOptions.getSearchMode()
  - com.azure.search.documents.models.SearchOptions.getSelect()
  - com.azure.search.documents.models.SearchOptions.getSkip()
  - com.azure.search.documents.models.SearchOptions.getTop()
  - com.azure.search.documents.models.SearchOptions.isTotalCountIncluded()
  - com.azure.search.documents.models.SearchOptions.setFacets(java.lang.String...)
  - com.azure.search.documents.models.SearchOptions.setFilter(java.lang.String)
  - com.azure.search.documents.models.SearchOptions.setHighlightFields(java.lang.String...)
  - com.azure.search.documents.models.SearchOptions.setHighlightPostTag(java.lang.String)
  - com.azure.search.documents.models.SearchOptions.setHighlightPreTag(java.lang.String)
  - com.azure.search.documents.models.SearchOptions.setIncludeTotalCount(java.lang.Boolean)
  - com.azure.search.documents.models.SearchOptions.setMinimumCoverage(java.lang.Double)
  - com.azure.search.documents.models.SearchOptions.setOrderBy(java.lang.String...)
  - com.azure.search.documents.models.SearchOptions.setQueryType(com.azure.search.documents.models.QueryType)
  - com.azure.search.documents.models.SearchOptions.setScoringParameters(com.azure.search.documents.models.ScoringParameter...)
  - com.azure.search.documents.models.SearchOptions.setScoringProfile(java.lang.String)
  - com.azure.search.documents.models.SearchOptions.setSearchFields(java.lang.String...)
  - com.azure.search.documents.models.SearchOptions.setSearchMode(com.azure.search.documents.models.SearchMode)
  - com.azure.search.documents.models.SearchOptions.setSelect(java.lang.String...)
  - com.azure.search.documents.models.SearchOptions.setSkip(java.lang.Integer)
  - com.azure.search.documents.models.SearchOptions.setTop(java.lang.Integer)
  langs:
  - java
  name: SearchOptions
  nameWithType: SearchOptions
  fullName: com.azure.search.documents.models.SearchOptions
  type: Class
  package: com.azure.search.documents.models
  summary: Additional parameters for searchGet operation.
  syntax:
    content: public final class SearchOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.models.SearchOptions.SearchOptions()
  id: SearchOptions()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: SearchOptions()
  nameWithType: SearchOptions.SearchOptions()
  fullName: com.azure.search.documents.models.SearchOptions.SearchOptions()
  overload: com.azure.search.documents.models.SearchOptions.SearchOptions*
  type: Constructor
  package: com.azure.search.documents.models
  syntax:
    content: public SearchOptions()
- uid: com.azure.search.documents.models.SearchOptions.getFacets()
  id: getFacets()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getFacets()
  nameWithType: SearchOptions.getFacets()
  fullName: com.azure.search.documents.models.SearchOptions.getFacets()
  overload: com.azure.search.documents.models.SearchOptions.getFacets*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the facets property: The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
  syntax:
    content: public List<String> getFacets()
    return:
      type: java.util.List<java.lang.String>
      description: the facets value.
- uid: com.azure.search.documents.models.SearchOptions.getFilter()
  id: getFilter()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getFilter()
  nameWithType: SearchOptions.getFilter()
  fullName: com.azure.search.documents.models.SearchOptions.getFilter()
  overload: com.azure.search.documents.models.SearchOptions.getFilter*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the filter property: The OData $filter expression to apply to the search query.'
  syntax:
    content: public String getFilter()
    return:
      type: java.lang.String
      description: the filter value.
- uid: com.azure.search.documents.models.SearchOptions.getHighlightFields()
  id: getHighlightFields()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getHighlightFields()
  nameWithType: SearchOptions.getHighlightFields()
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightFields()
  overload: com.azure.search.documents.models.SearchOptions.getHighlightFields*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the highlightFields property: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.'
  syntax:
    content: public List<String> getHighlightFields()
    return:
      type: java.util.List<java.lang.String>
      description: the highlightFields value.
- uid: com.azure.search.documents.models.SearchOptions.getHighlightPostTag()
  id: getHighlightPostTag()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getHighlightPostTag()
  nameWithType: SearchOptions.getHighlightPostTag()
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightPostTag()
  overload: com.azure.search.documents.models.SearchOptions.getHighlightPostTag*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is </em>.'
  syntax:
    content: public String getHighlightPostTag()
    return:
      type: java.lang.String
      description: the highlightPostTag value.
- uid: com.azure.search.documents.models.SearchOptions.getHighlightPreTag()
  id: getHighlightPreTag()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getHighlightPreTag()
  nameWithType: SearchOptions.getHighlightPreTag()
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightPreTag()
  overload: com.azure.search.documents.models.SearchOptions.getHighlightPreTag*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is <em>.'
  syntax:
    content: public String getHighlightPreTag()
    return:
      type: java.lang.String
      description: the highlightPreTag value.
- uid: com.azure.search.documents.models.SearchOptions.getMinimumCoverage()
  id: getMinimumCoverage()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getMinimumCoverage()
  nameWithType: SearchOptions.getMinimumCoverage()
  fullName: com.azure.search.documents.models.SearchOptions.getMinimumCoverage()
  overload: com.azure.search.documents.models.SearchOptions.getMinimumCoverage*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.'
  syntax:
    content: public Double getMinimumCoverage()
    return:
      type: java.lang.Double
      description: the minimumCoverage value.
- uid: com.azure.search.documents.models.SearchOptions.getOrderBy()
  id: getOrderBy()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getOrderBy()
  nameWithType: SearchOptions.getOrderBy()
  fullName: com.azure.search.documents.models.SearchOptions.getOrderBy()
  overload: com.azure.search.documents.models.SearchOptions.getOrderBy*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the orderBy property: The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.'
  syntax:
    content: public List<String> getOrderBy()
    return:
      type: java.util.List<java.lang.String>
      description: the orderBy value.
- uid: com.azure.search.documents.models.SearchOptions.getQueryType()
  id: getQueryType()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getQueryType()
  nameWithType: SearchOptions.getQueryType()
  fullName: com.azure.search.documents.models.SearchOptions.getQueryType()
  overload: com.azure.search.documents.models.SearchOptions.getQueryType*
  type: Method
  package: com.azure.search.documents.models
  summary: "Get the queryType property: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax. Possible values include: 'Simple', 'Full'."
  syntax:
    content: public QueryType getQueryType()
    return:
      type: com.azure.search.documents.models.QueryType
      description: the queryType value.
- uid: com.azure.search.documents.models.SearchOptions.getScoringParameters()
  id: getScoringParameters()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getScoringParameters()
  nameWithType: SearchOptions.getScoringParameters()
  fullName: com.azure.search.documents.models.SearchOptions.getScoringParameters()
  overload: com.azure.search.documents.models.SearchOptions.getScoringParameters*
  type: Method
  package: com.azure.search.documents.models
  summary: "Get the scoringParameters property: The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes)."
  syntax:
    content: public List<ScoringParameter> getScoringParameters()
    return:
      type: java.util.List<com.azure.search.documents.models.ScoringParameter>
      description: the scoringParameters value.
- uid: com.azure.search.documents.models.SearchOptions.getScoringProfile()
  id: getScoringProfile()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getScoringProfile()
  nameWithType: SearchOptions.getScoringProfile()
  fullName: com.azure.search.documents.models.SearchOptions.getScoringProfile()
  overload: com.azure.search.documents.models.SearchOptions.getScoringProfile*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the scoringProfile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.'
  syntax:
    content: public String getScoringProfile()
    return:
      type: java.lang.String
      description: the scoringProfile value.
- uid: com.azure.search.documents.models.SearchOptions.getSearchFields()
  id: getSearchFields()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getSearchFields()
  nameWithType: SearchOptions.getSearchFields()
  fullName: com.azure.search.documents.models.SearchOptions.getSearchFields()
  overload: com.azure.search.documents.models.SearchOptions.getSearchFields*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the searchFields property: The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter.'
  syntax:
    content: public List<String> getSearchFields()
    return:
      type: java.util.List<java.lang.String>
      description: the searchFields value.
- uid: com.azure.search.documents.models.SearchOptions.getSearchMode()
  id: getSearchMode()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getSearchMode()
  nameWithType: SearchOptions.getSearchMode()
  fullName: com.azure.search.documents.models.SearchOptions.getSearchMode()
  overload: com.azure.search.documents.models.SearchOptions.getSearchMode*
  type: Method
  package: com.azure.search.documents.models
  summary: "Get the searchMode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match. Possible values include: 'Any', 'All'."
  syntax:
    content: public SearchMode getSearchMode()
    return:
      type: com.azure.search.documents.models.SearchMode
      description: the searchMode value.
- uid: com.azure.search.documents.models.SearchOptions.getSelect()
  id: getSelect()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getSelect()
  nameWithType: SearchOptions.getSelect()
  fullName: com.azure.search.documents.models.SearchOptions.getSelect()
  overload: com.azure.search.documents.models.SearchOptions.getSelect*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the select property: The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
  syntax:
    content: public List<String> getSelect()
    return:
      type: java.util.List<java.lang.String>
      description: the select value.
- uid: com.azure.search.documents.models.SearchOptions.getSkip()
  id: getSkip()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getSkip()
  nameWithType: SearchOptions.getSkip()
  fullName: com.azure.search.documents.models.SearchOptions.getSkip()
  overload: com.azure.search.documents.models.SearchOptions.getSkip*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the skip property: The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead.'
  syntax:
    content: public Integer getSkip()
    return:
      type: java.lang.Integer
      description: the skip value.
- uid: com.azure.search.documents.models.SearchOptions.getTop()
  id: getTop()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: getTop()
  nameWithType: SearchOptions.getTop()
  fullName: com.azure.search.documents.models.SearchOptions.getTop()
  overload: com.azure.search.documents.models.SearchOptions.getTop*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the top property: The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.'
  syntax:
    content: public Integer getTop()
    return:
      type: java.lang.Integer
      description: the top value.
- uid: com.azure.search.documents.models.SearchOptions.isTotalCountIncluded()
  id: isTotalCountIncluded()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: isTotalCountIncluded()
  nameWithType: SearchOptions.isTotalCountIncluded()
  fullName: com.azure.search.documents.models.SearchOptions.isTotalCountIncluded()
  overload: com.azure.search.documents.models.SearchOptions.isTotalCountIncluded*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Get the includeTotalResultCount property: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.'
  syntax:
    content: public Boolean isTotalCountIncluded()
    return:
      type: java.lang.Boolean
      description: the includeTotalResultCount value.
- uid: com.azure.search.documents.models.SearchOptions.setFacets(java.lang.String...)
  id: setFacets(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setFacets(String[] facets)
  nameWithType: SearchOptions.setFacets(String[] facets)
  fullName: com.azure.search.documents.models.SearchOptions.setFacets(String[] facets)
  overload: com.azure.search.documents.models.SearchOptions.setFacets*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the facets property: The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
  syntax:
    content: public SearchOptions setFacets(String[] facets)
    parameters:
    - id: facets
      type: java.lang.String[]
      description: the facets value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setFilter(java.lang.String)
  id: setFilter(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setFilter(String filter)
  nameWithType: SearchOptions.setFilter(String filter)
  fullName: com.azure.search.documents.models.SearchOptions.setFilter(String filter)
  overload: com.azure.search.documents.models.SearchOptions.setFilter*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the filter property: The OData $filter expression to apply to the search query.'
  syntax:
    content: public SearchOptions setFilter(String filter)
    parameters:
    - id: filter
      type: java.lang.String
      description: the filter value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setHighlightFields(java.lang.String...)
  id: setHighlightFields(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setHighlightFields(String[] highlightFields)
  nameWithType: SearchOptions.setHighlightFields(String[] highlightFields)
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightFields(String[] highlightFields)
  overload: com.azure.search.documents.models.SearchOptions.setHighlightFields*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the highlightFields property: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.'
  syntax:
    content: public SearchOptions setHighlightFields(String[] highlightFields)
    parameters:
    - id: highlightFields
      type: java.lang.String[]
      description: the highlightFields value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setHighlightPostTag(java.lang.String)
  id: setHighlightPostTag(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setHighlightPostTag(String highlightPostTag)
  nameWithType: SearchOptions.setHighlightPostTag(String highlightPostTag)
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightPostTag(String highlightPostTag)
  overload: com.azure.search.documents.models.SearchOptions.setHighlightPostTag*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is </em>.'
  syntax:
    content: public SearchOptions setHighlightPostTag(String highlightPostTag)
    parameters:
    - id: highlightPostTag
      type: java.lang.String
      description: the highlightPostTag value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setHighlightPreTag(java.lang.String)
  id: setHighlightPreTag(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setHighlightPreTag(String highlightPreTag)
  nameWithType: SearchOptions.setHighlightPreTag(String highlightPreTag)
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightPreTag(String highlightPreTag)
  overload: com.azure.search.documents.models.SearchOptions.setHighlightPreTag*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is <em>.'
  syntax:
    content: public SearchOptions setHighlightPreTag(String highlightPreTag)
    parameters:
    - id: highlightPreTag
      type: java.lang.String
      description: the highlightPreTag value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setIncludeTotalCount(java.lang.Boolean)
  id: setIncludeTotalCount(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setIncludeTotalCount(Boolean includeTotalCount)
  nameWithType: SearchOptions.setIncludeTotalCount(Boolean includeTotalCount)
  fullName: com.azure.search.documents.models.SearchOptions.setIncludeTotalCount(Boolean includeTotalCount)
  overload: com.azure.search.documents.models.SearchOptions.setIncludeTotalCount*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the includeTotalResultCount property: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.'
  syntax:
    content: public SearchOptions setIncludeTotalCount(Boolean includeTotalCount)
    parameters:
    - id: includeTotalCount
      type: java.lang.Boolean
      description: the includeTotalResultCount value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setMinimumCoverage(java.lang.Double)
  id: setMinimumCoverage(java.lang.Double)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setMinimumCoverage(Double minimumCoverage)
  nameWithType: SearchOptions.setMinimumCoverage(Double minimumCoverage)
  fullName: com.azure.search.documents.models.SearchOptions.setMinimumCoverage(Double minimumCoverage)
  overload: com.azure.search.documents.models.SearchOptions.setMinimumCoverage*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.'
  syntax:
    content: public SearchOptions setMinimumCoverage(Double minimumCoverage)
    parameters:
    - id: minimumCoverage
      type: java.lang.Double
      description: the minimumCoverage value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setOrderBy(java.lang.String...)
  id: setOrderBy(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setOrderBy(String[] orderBy)
  nameWithType: SearchOptions.setOrderBy(String[] orderBy)
  fullName: com.azure.search.documents.models.SearchOptions.setOrderBy(String[] orderBy)
  overload: com.azure.search.documents.models.SearchOptions.setOrderBy*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the orderBy property: The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.'
  syntax:
    content: public SearchOptions setOrderBy(String[] orderBy)
    parameters:
    - id: orderBy
      type: java.lang.String[]
      description: the orderBy value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setQueryType(com.azure.search.documents.models.QueryType)
  id: setQueryType(com.azure.search.documents.models.QueryType)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setQueryType(QueryType queryType)
  nameWithType: SearchOptions.setQueryType(QueryType queryType)
  fullName: com.azure.search.documents.models.SearchOptions.setQueryType(QueryType queryType)
  overload: com.azure.search.documents.models.SearchOptions.setQueryType*
  type: Method
  package: com.azure.search.documents.models
  summary: "Set the queryType property: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax. Possible values include: 'Simple', 'Full'."
  syntax:
    content: public SearchOptions setQueryType(QueryType queryType)
    parameters:
    - id: queryType
      type: com.azure.search.documents.models.QueryType
      description: the queryType value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setScoringParameters(com.azure.search.documents.models.ScoringParameter...)
  id: setScoringParameters(com.azure.search.documents.models.ScoringParameter...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setScoringParameters(ScoringParameter[] scoringParameters)
  nameWithType: SearchOptions.setScoringParameters(ScoringParameter[] scoringParameters)
  fullName: com.azure.search.documents.models.SearchOptions.setScoringParameters(ScoringParameter[] scoringParameters)
  overload: com.azure.search.documents.models.SearchOptions.setScoringParameters*
  type: Method
  package: com.azure.search.documents.models
  summary: "Set the scoringParameters property: The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes)."
  syntax:
    content: public SearchOptions setScoringParameters(ScoringParameter[] scoringParameters)
    parameters:
    - id: scoringParameters
      type: com.azure.search.documents.models.ScoringParameter[]
      description: the scoringParameters value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setScoringProfile(java.lang.String)
  id: setScoringProfile(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setScoringProfile(String scoringProfile)
  nameWithType: SearchOptions.setScoringProfile(String scoringProfile)
  fullName: com.azure.search.documents.models.SearchOptions.setScoringProfile(String scoringProfile)
  overload: com.azure.search.documents.models.SearchOptions.setScoringProfile*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the scoringProfile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.'
  syntax:
    content: public SearchOptions setScoringProfile(String scoringProfile)
    parameters:
    - id: scoringProfile
      type: java.lang.String
      description: the scoringProfile value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setSearchFields(java.lang.String...)
  id: setSearchFields(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setSearchFields(String[] searchFields)
  nameWithType: SearchOptions.setSearchFields(String[] searchFields)
  fullName: com.azure.search.documents.models.SearchOptions.setSearchFields(String[] searchFields)
  overload: com.azure.search.documents.models.SearchOptions.setSearchFields*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the searchFields property: The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter.'
  syntax:
    content: public SearchOptions setSearchFields(String[] searchFields)
    parameters:
    - id: searchFields
      type: java.lang.String[]
      description: the searchFields value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setSearchMode(com.azure.search.documents.models.SearchMode)
  id: setSearchMode(com.azure.search.documents.models.SearchMode)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setSearchMode(SearchMode searchMode)
  nameWithType: SearchOptions.setSearchMode(SearchMode searchMode)
  fullName: com.azure.search.documents.models.SearchOptions.setSearchMode(SearchMode searchMode)
  overload: com.azure.search.documents.models.SearchOptions.setSearchMode*
  type: Method
  package: com.azure.search.documents.models
  summary: "Set the searchMode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match. Possible values include: 'Any', 'All'."
  syntax:
    content: public SearchOptions setSearchMode(SearchMode searchMode)
    parameters:
    - id: searchMode
      type: com.azure.search.documents.models.SearchMode
      description: the searchMode value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setSelect(java.lang.String...)
  id: setSelect(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setSelect(String[] select)
  nameWithType: SearchOptions.setSelect(String[] select)
  fullName: com.azure.search.documents.models.SearchOptions.setSelect(String[] select)
  overload: com.azure.search.documents.models.SearchOptions.setSelect*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the select property: The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
  syntax:
    content: public SearchOptions setSelect(String[] select)
    parameters:
    - id: select
      type: java.lang.String[]
      description: the select value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setSkip(java.lang.Integer)
  id: setSkip(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setSkip(Integer skip)
  nameWithType: SearchOptions.setSkip(Integer skip)
  fullName: com.azure.search.documents.models.SearchOptions.setSkip(Integer skip)
  overload: com.azure.search.documents.models.SearchOptions.setSkip*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the skip property: The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead.'
  syntax:
    content: public SearchOptions setSkip(Integer skip)
    parameters:
    - id: skip
      type: java.lang.Integer
      description: the skip value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
- uid: com.azure.search.documents.models.SearchOptions.setTop(java.lang.Integer)
  id: setTop(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.models.SearchOptions
  langs:
  - java
  name: setTop(Integer top)
  nameWithType: SearchOptions.setTop(Integer top)
  fullName: com.azure.search.documents.models.SearchOptions.setTop(Integer top)
  overload: com.azure.search.documents.models.SearchOptions.setTop*
  type: Method
  package: com.azure.search.documents.models
  summary: 'Set the top property: The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.'
  syntax:
    content: public SearchOptions setTop(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: the top value to set.
    return:
      type: com.azure.search.documents.models.SearchOptions
      description: the SearchOptions object itself.
references:
- uid: com.azure.search.documents.models.SearchOptions.SearchOptions*
  name: SearchOptions
  nameWithType: SearchOptions.SearchOptions
  fullName: com.azure.search.documents.models.SearchOptions.SearchOptions
  package: com.azure.search.documents.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.models.SearchOptions.isTotalCountIncluded*
  name: isTotalCountIncluded
  nameWithType: SearchOptions.isTotalCountIncluded
  fullName: com.azure.search.documents.models.SearchOptions.isTotalCountIncluded
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setIncludeTotalCount*
  name: setIncludeTotalCount
  nameWithType: SearchOptions.setIncludeTotalCount
  fullName: com.azure.search.documents.models.SearchOptions.setIncludeTotalCount
  package: com.azure.search.documents.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.models.SearchOptions.getFacets*
  name: getFacets
  nameWithType: SearchOptions.getFacets
  fullName: com.azure.search.documents.models.SearchOptions.getFacets
  package: com.azure.search.documents.models
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.models.SearchOptions.setFacets*
  name: setFacets
  nameWithType: SearchOptions.setFacets
  fullName: com.azure.search.documents.models.SearchOptions.setFacets
  package: com.azure.search.documents.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.models.SearchOptions.getFilter*
  name: getFilter
  nameWithType: SearchOptions.getFilter
  fullName: com.azure.search.documents.models.SearchOptions.getFilter
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setFilter*
  name: setFilter
  nameWithType: SearchOptions.setFilter
  fullName: com.azure.search.documents.models.SearchOptions.setFilter
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getHighlightFields*
  name: getHighlightFields
  nameWithType: SearchOptions.getHighlightFields
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightFields
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setHighlightFields*
  name: setHighlightFields
  nameWithType: SearchOptions.setHighlightFields
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightFields
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getHighlightPostTag*
  name: getHighlightPostTag
  nameWithType: SearchOptions.getHighlightPostTag
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightPostTag
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setHighlightPostTag*
  name: setHighlightPostTag
  nameWithType: SearchOptions.setHighlightPostTag
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightPostTag
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getHighlightPreTag*
  name: getHighlightPreTag
  nameWithType: SearchOptions.getHighlightPreTag
  fullName: com.azure.search.documents.models.SearchOptions.getHighlightPreTag
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setHighlightPreTag*
  name: setHighlightPreTag
  nameWithType: SearchOptions.setHighlightPreTag
  fullName: com.azure.search.documents.models.SearchOptions.setHighlightPreTag
  package: com.azure.search.documents.models
- uid: java.lang.Double
  spec.java:
  - uid: java.lang.Double
    name: Double
    fullName: java.lang.Double
- uid: com.azure.search.documents.models.SearchOptions.getMinimumCoverage*
  name: getMinimumCoverage
  nameWithType: SearchOptions.getMinimumCoverage
  fullName: com.azure.search.documents.models.SearchOptions.getMinimumCoverage
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setMinimumCoverage*
  name: setMinimumCoverage
  nameWithType: SearchOptions.setMinimumCoverage
  fullName: com.azure.search.documents.models.SearchOptions.setMinimumCoverage
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getOrderBy*
  name: getOrderBy
  nameWithType: SearchOptions.getOrderBy
  fullName: com.azure.search.documents.models.SearchOptions.getOrderBy
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setOrderBy*
  name: setOrderBy
  nameWithType: SearchOptions.setOrderBy
  fullName: com.azure.search.documents.models.SearchOptions.setOrderBy
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.QueryType
  name: QueryType
  nameWithType: QueryType
  fullName: com.azure.search.documents.models.QueryType
- uid: com.azure.search.documents.models.SearchOptions.getQueryType*
  name: getQueryType
  nameWithType: SearchOptions.getQueryType
  fullName: com.azure.search.documents.models.SearchOptions.getQueryType
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setQueryType*
  name: setQueryType
  nameWithType: SearchOptions.setQueryType
  fullName: com.azure.search.documents.models.SearchOptions.setQueryType
  package: com.azure.search.documents.models
- uid: java.util.List<com.azure.search.documents.models.ScoringParameter>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.ScoringParameter
    name: ScoringParameter
    fullName: com.azure.search.documents.models.ScoringParameter
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.models.SearchOptions.getScoringParameters*
  name: getScoringParameters
  nameWithType: SearchOptions.getScoringParameters
  fullName: com.azure.search.documents.models.SearchOptions.getScoringParameters
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.ScoringParameter[]
  spec.java:
  - uid: com.azure.search.documents.models.ScoringParameter
    name: ScoringParameter
    fullName: com.azure.search.documents.models.ScoringParameter
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.models.SearchOptions.setScoringParameters*
  name: setScoringParameters
  nameWithType: SearchOptions.setScoringParameters
  fullName: com.azure.search.documents.models.SearchOptions.setScoringParameters
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getScoringProfile*
  name: getScoringProfile
  nameWithType: SearchOptions.getScoringProfile
  fullName: com.azure.search.documents.models.SearchOptions.getScoringProfile
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setScoringProfile*
  name: setScoringProfile
  nameWithType: SearchOptions.setScoringProfile
  fullName: com.azure.search.documents.models.SearchOptions.setScoringProfile
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getSearchFields*
  name: getSearchFields
  nameWithType: SearchOptions.getSearchFields
  fullName: com.azure.search.documents.models.SearchOptions.getSearchFields
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setSearchFields*
  name: setSearchFields
  nameWithType: SearchOptions.setSearchFields
  fullName: com.azure.search.documents.models.SearchOptions.setSearchFields
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchMode
  name: SearchMode
  nameWithType: SearchMode
  fullName: com.azure.search.documents.models.SearchMode
- uid: com.azure.search.documents.models.SearchOptions.getSearchMode*
  name: getSearchMode
  nameWithType: SearchOptions.getSearchMode
  fullName: com.azure.search.documents.models.SearchOptions.getSearchMode
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setSearchMode*
  name: setSearchMode
  nameWithType: SearchOptions.setSearchMode
  fullName: com.azure.search.documents.models.SearchOptions.setSearchMode
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getSelect*
  name: getSelect
  nameWithType: SearchOptions.getSelect
  fullName: com.azure.search.documents.models.SearchOptions.getSelect
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setSelect*
  name: setSelect
  nameWithType: SearchOptions.setSelect
  fullName: com.azure.search.documents.models.SearchOptions.setSelect
  package: com.azure.search.documents.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.models.SearchOptions.getSkip*
  name: getSkip
  nameWithType: SearchOptions.getSkip
  fullName: com.azure.search.documents.models.SearchOptions.getSkip
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setSkip*
  name: setSkip
  nameWithType: SearchOptions.setSkip
  fullName: com.azure.search.documents.models.SearchOptions.setSkip
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.getTop*
  name: getTop
  nameWithType: SearchOptions.getTop
  fullName: com.azure.search.documents.models.SearchOptions.getTop
  package: com.azure.search.documents.models
- uid: com.azure.search.documents.models.SearchOptions.setTop*
  name: setTop
  nameWithType: SearchOptions.setTop
  fullName: com.azure.search.documents.models.SearchOptions.setTop
  package: com.azure.search.documents.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.search.documents.models.ScoringParameter
  name: ScoringParameter
  nameWithType: ScoringParameter
  fullName: com.azure.search.documents.models.ScoringParameter
