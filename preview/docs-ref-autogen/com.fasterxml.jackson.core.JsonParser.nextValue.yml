### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.nextValue*"
fullName: "com.fasterxml.jackson.core.JsonParser.nextValue"
name: "nextValue"
nameWithType: "JsonParser.nextValue"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.nextValue()"
  fullName: "com.fasterxml.jackson.core.JsonParser.nextValue()"
  name: "nextValue()"
  nameWithType: "JsonParser.nextValue()"
  summary: "Iteration method that will advance stream enough to determine type of the next token that is a value type (including JSON Array and Object start/end markers). Or put another way, nextToken() will be called once, and if <xref uid=\"com.fasterxml.jackson.core.JsonToken.FIELD_NAME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#FIELD_NAME\"></xref> is returned, another time to get the value for the field. Method is most useful for iterating over value entries of JSON objects; field name will still be available by calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.getCurrentName*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getCurrentName\"></xref> when parser points to the value."
  syntax: "public abstract JsonToken nextValue()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Next non-field-name token from the stream, if any found,\n   or null to indicate end-of-input (or, for non-blocking\n   parsers, <xref uid=\"com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#NOT_AVAILABLE\"></xref> if no tokens were\n   available yet)"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
