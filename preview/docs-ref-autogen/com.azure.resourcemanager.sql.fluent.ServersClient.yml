### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ServersClient
  id: ServersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient(com.azure.resourcemanager.sql.SqlManagementClient)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  - com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.list()
  - com.azure.resourcemanager.sql.fluent.ServersClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listAsync()
  - com.azure.resourcemanager.sql.fluent.ServersClient.listAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync()
  - com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  langs:
  - java
  name: ServersClient
  nameWithType: ServersClient
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient
  type: Class
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in Servers.
  syntax:
    content: public final class ServersClient implements InnerSupportsGet<ServerInner>, InnerSupportsListing<ServerInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient(com.azure.resourcemanager.sql.SqlManagementClient)
  id: ServersClient(com.azure.resourcemanager.sql.SqlManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: ServersClient(SqlManagementClient client)
  nameWithType: ServersClient.ServersClient(SqlManagementClient client)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient(SqlManagementClient client)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient*
  type: Constructor
  package: com.azure.resourcemanager.sql.fluent
  summary: Initializes an instance of ServersClient.
  syntax:
    content: public ServersClient(SqlManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.SqlManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<ServerInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<ServerInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<Response<ServerInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<Response<ServerInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName)
  nameWithType: ServersClient.beginDelete(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.beginDelete(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String serverName)
  nameWithType: ServersClient.beginDeleteWithoutPolling(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.beginDeleteWithoutPolling(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public ServerInner beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public ServerInner beginUpdateWithoutPolling(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<ServerInner> beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<ServerInner> beginUpdateWithoutPollingAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<Response<ServerInner>> beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<Response<ServerInner>> beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: ServersClient.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public CheckNameAvailabilityResponseInner checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailability(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailability(String name, Context context)
  nameWithType: ServersClient.checkNameAvailability(String name, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability(String name, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public CheckNameAvailabilityResponseInner checkNameAvailability(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: ServersClient.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<CheckNameAvailabilityResponseInner> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailabilityAsync(String name, Context context)
  nameWithType: ServersClient.checkNameAvailabilityAsync(String name, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync(String name, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<CheckNameAvailabilityResponseInner> checkNameAvailabilityAsync(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(java.lang.String)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name)
  nameWithType: ServersClient.checkNameAvailabilityWithResponseAsync(String name)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(String name)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResponseInner>> checkNameAvailabilityWithResponseAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name, Context context)
  nameWithType: ServersClient.checkNameAvailabilityWithResponseAsync(String name, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync(String name, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResponseInner>> checkNameAvailabilityWithResponseAsync(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<ServerInner> createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<ServerInner> createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates or updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName)
  nameWithType: ServersClient.delete(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.delete(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public void delete(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.delete(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.delete(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public void delete(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.deleteAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.deleteAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.deleteWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.deleteWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String serverName)
  nameWithType: ServersClient.getByResourceGroup(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public ServerInner getByResourceGroup(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.getByResourceGroup(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public ServerInner getByResourceGroup(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public Mono<ServerInner> getByResourceGroupAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public Mono<ServerInner> getByResourceGroupAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public Mono<Response<ServerInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server.
  syntax:
    content: public Mono<Response<ServerInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: list()
  nameWithType: ServersClient.list()
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.list()
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.list*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedIterable<ServerInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: list(Context context)
  nameWithType: ServersClient.list(Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.list(Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.list*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedIterable<ServerInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listAsync()
  nameWithType: ServersClient.listAsync()
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync()
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedFlux<ServerInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync(com.azure.core.util.Context)
  id: listAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listAsync(Context context)
  nameWithType: ServersClient.listAsync(Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync(Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedFlux<ServerInner> listAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ServersClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedIterable<ServerInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: ServersClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedIterable<ServerInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ServersClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedFlux<ServerInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Context context)
  nameWithType: ServersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedFlux<ServerInner> listByResourceGroupAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink)
  nameWithType: ServersClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listByResourceGroupNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ServersClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName)
  nameWithType: ServersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listByResourceGroupSinglePageAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  nameWithType: ServersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: ServersClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ServersClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of servers.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync()
  id: listSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: ServersClient.listSinglePageAsync()
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync()
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync(com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: listSinglePageAsync(Context context)
  nameWithType: ServersClient.listSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public Mono<PagedResponse<ServerInner>> listSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: update(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.update(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.update(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public ServerInner update(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public ServerInner update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<ServerInner> updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<ServerInner> updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClient.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ServersClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClient.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
references:
- uid: com.azure.resourcemanager.sql.SqlManagementClient
  name: SqlManagementClient
  nameWithType: SqlManagementClient
  fullName: com.azure.resourcemanager.sql.SqlManagementClient
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient*
  name: ServersClient
  nameWithType: ServersClient.ServersClient
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.ServersClient
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: ServersClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ServersClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ServersClient.listByResourceGroup
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroup
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ServerInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: ServersClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: ServersClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  name: ServerInner
  nameWithType: ServerInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: ServersClient.getByResourceGroup
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroup
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ServersClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ServersClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ServersClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: ServersClient.createOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.createOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ServersClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete*
  name: beginDelete
  nameWithType: ServersClient.beginDelete
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDelete
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync*
  name: deleteAsync
  nameWithType: ServersClient.deleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.deleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.delete*
  name: delete
  nameWithType: ServersClient.delete
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.delete
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.ServerUpdate
  name: ServerUpdate
  nameWithType: ServerUpdate
  fullName: com.azure.resourcemanager.sql.models.ServerUpdate
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ServersClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate*
  name: beginUpdate
  nameWithType: ServersClient.beginUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync*
  name: updateAsync
  nameWithType: ServersClient.updateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.updateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.update*
  name: update
  nameWithType: ServersClient.update
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.update
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ServersClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync*
  name: listAsync
  nameWithType: ServersClient.listAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.list*
  name: list
  nameWithType: ServersClient.list
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.list
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
    name: CheckNameAvailabilityResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: ServersClient.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
    name: CheckNameAvailabilityResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: ServersClient.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
  name: CheckNameAvailabilityResponseInner
  nameWithType: CheckNameAvailabilityResponseInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.CheckNameAvailabilityResponseInner
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: ServersClient.checkNameAvailability
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.checkNameAvailability
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: ServersClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: ServersClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: ServersClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: ServersClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync*
  name: beginUpdateWithoutPollingWithResponseAsync
  nameWithType: ServersClient.beginUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync*
  name: beginUpdateWithoutPollingAsync
  nameWithType: ServersClient.beginUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling*
  name: beginUpdateWithoutPolling
  nameWithType: ServersClient.beginUpdateWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.beginUpdateWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync*
  name: listByResourceGroupNextSinglePageAsync
  nameWithType: ServersClient.listByResourceGroupNextSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listByResourceGroupNextSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ServersClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  name: InnerSupportsGet<ServerInner>
  nameWithType: InnerSupportsGet<ServerInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
  name: InnerSupportsListing<ServerInner>
  nameWithType: InnerSupportsListing<ServerInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.inner.ServerInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner
  name: ServerInner>,ServerInner
  nameWithType: ServerInner>,ServerInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.ServerInner>,com.azure.resourcemanager.sql.fluent.inner.ServerInner
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
