### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.primitives.Longs"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Longs"
name: "Longs"
nameWithType: "Longs"
summary: "Static utility methods pertaining to `long` primitives, that are not already found in either <xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Arrays\"></xref>.\n\nSee the Guava User Guide article on [primitive utilities][].\n\n\n[primitive utilities]: https://github.com/google/guava/wiki/PrimitivesExplained"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Longs"
fields:
- "com.azure.cosmos.implementation.guava25.primitives.Longs.BYTES"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.MAX_POWER_OF_TWO"
methods:
- "com.azure.cosmos.implementation.guava25.primitives.Longs.asList(long...)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.compare(long,long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.concat(long[]...)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.constrainToRange(long,long,long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.contains(long[],long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.ensureCapacity(long[],int,int)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.fromByteArray(byte[])"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.fromBytes(byte,byte,byte,byte,byte,byte,byte,byte)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.hashCode(long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.indexOf(long[],long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.indexOf(long[],long[])"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.join(java.lang.String,long...)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.lastIndexOf(long[],long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.lexicographicalComparator()"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.max(long...)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.min(long...)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.reverse(long[])"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.reverse(long[],int,int)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.sortDescending(long[])"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.sortDescending(long[],int,int)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.stringConverter()"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.toArray(java.util.Collection<? extends java.lang.Number>)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.toByteArray(long)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.tryParse(java.lang.String)"
- "com.azure.cosmos.implementation.guava25.primitives.Longs.tryParse(java.lang.String,int)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
