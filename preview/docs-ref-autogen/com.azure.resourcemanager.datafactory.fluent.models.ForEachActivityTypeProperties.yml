### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties"
name: "ForEachActivityTypeProperties"
nameWithType: "ForEachActivityTypeProperties"
summary: "For<wbr>Each activity properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ForEachActivityTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.ForEachActivityTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.ForEachActivityTypeProperties()"
  name: "ForEachActivityTypeProperties()"
  nameWithType: "ForEachActivityTypeProperties.ForEachActivityTypeProperties()"
  syntax: "public ForEachActivityTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.activities()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.activities()"
  name: "activities()"
  nameWithType: "ForEachActivityTypeProperties.activities()"
  summary: "Get the activities property: List of activities to execute ."
  syntax: "public List<Activity> activities()"
  desc: "Get the activities property: List of activities to execute ."
  returns:
    description: "the activities value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.batchCount()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.batchCount()"
  name: "batchCount()"
  nameWithType: "ForEachActivityTypeProperties.batchCount()"
  summary: "Get the batch<wbr>Count property: Batch count to be used for controlling the number of parallel execution (when is<wbr>Sequential is set to false)."
  syntax: "public Integer batchCount()"
  desc: "Get the batchCount property: Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
  returns:
    description: "the batchCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.isSequential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.isSequential()"
  name: "isSequential()"
  nameWithType: "ForEachActivityTypeProperties.isSequential()"
  summary: "Get the is<wbr>Sequential property: Should the loop be executed in sequence or in parallel (max 50)."
  syntax: "public Boolean isSequential()"
  desc: "Get the isSequential property: Should the loop be executed in sequence or in parallel (max 50)."
  returns:
    description: "the isSequential value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.items()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.items()"
  name: "items()"
  nameWithType: "ForEachActivityTypeProperties.items()"
  summary: "Get the items property: Collection to iterate."
  syntax: "public Expression items()"
  desc: "Get the items property: Collection to iterate."
  returns:
    description: "the items value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.validate()"
  name: "validate()"
  nameWithType: "ForEachActivityTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withActivities(java.util.List<com.azure.resourcemanager.datafactory.models.Activity>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withActivities(List<Activity> activities)"
  name: "withActivities(List<Activity> activities)"
  nameWithType: "ForEachActivityTypeProperties.withActivities(List<Activity> activities)"
  summary: "Set the activities property: List of activities to execute ."
  parameters:
  - description: "the activities value to set."
    name: "activities"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ForEachActivityTypeProperties withActivities(List<Activity> activities)"
  desc: "Set the activities property: List of activities to execute ."
  returns:
    description: "the ForEachActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties&text=ForEachActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withBatchCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withBatchCount(Integer batchCount)"
  name: "withBatchCount(Integer batchCount)"
  nameWithType: "ForEachActivityTypeProperties.withBatchCount(Integer batchCount)"
  summary: "Set the batch<wbr>Count property: Batch count to be used for controlling the number of parallel execution (when is<wbr>Sequential is set to false)."
  parameters:
  - description: "the batchCount value to set."
    name: "batchCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivityTypeProperties withBatchCount(Integer batchCount)"
  desc: "Set the batchCount property: Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
  returns:
    description: "the ForEachActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties&text=ForEachActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withIsSequential(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withIsSequential(Boolean isSequential)"
  name: "withIsSequential(Boolean isSequential)"
  nameWithType: "ForEachActivityTypeProperties.withIsSequential(Boolean isSequential)"
  summary: "Set the is<wbr>Sequential property: Should the loop be executed in sequence or in parallel (max 50)."
  parameters:
  - description: "the isSequential value to set."
    name: "isSequential"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivityTypeProperties withIsSequential(Boolean isSequential)"
  desc: "Set the isSequential property: Should the loop be executed in sequence or in parallel (max 50)."
  returns:
    description: "the ForEachActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties&text=ForEachActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withItems(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties.withItems(Expression items)"
  name: "withItems(Expression items)"
  nameWithType: "ForEachActivityTypeProperties.withItems(Expression items)"
  summary: "Set the items property: Collection to iterate."
  parameters:
  - description: "the items value to set."
    name: "items"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivityTypeProperties withItems(Expression items)"
  desc: "Set the items property: Collection to iterate."
  returns:
    description: "the ForEachActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ForEachActivityTypeProperties&text=ForEachActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "ForEach activity properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
