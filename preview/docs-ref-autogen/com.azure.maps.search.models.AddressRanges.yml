### YamlMime:JavaType
uid: "com.azure.maps.search.models.AddressRanges"
fullName: "com.azure.maps.search.models.AddressRanges"
name: "AddressRanges"
nameWithType: "AddressRanges"
summary: "Describes the address range on both sides of the street for a search result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AddressRanges"
constructors:
- uid: "com.azure.maps.search.models.AddressRanges.AddressRanges()"
  fullName: "com.azure.maps.search.models.AddressRanges.AddressRanges()"
  name: "AddressRanges()"
  nameWithType: "AddressRanges.AddressRanges()"
  syntax: "public AddressRanges()"
methods:
- uid: "com.azure.maps.search.models.AddressRanges.getFrom()"
  fullName: "com.azure.maps.search.models.AddressRanges.getFrom()"
  name: "getFrom()"
  nameWithType: "AddressRanges.getFrom()"
  summary: "Get the from property: A location represented as a latitude and longitude using short names 'lat' & 'lon'."
  syntax: "public GeoPosition getFrom()"
  desc: "Get the from property: A location represented as a latitude and longitude using short names 'lat' & 'lon'."
  returns:
    description: "the from value."
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.models.AddressRanges.getRangeLeft()"
  fullName: "com.azure.maps.search.models.AddressRanges.getRangeLeft()"
  name: "getRangeLeft()"
  nameWithType: "AddressRanges.getRangeLeft()"
  summary: "Get the range<wbr>Left property: Address range on the left side of the street."
  syntax: "public String getRangeLeft()"
  desc: "Get the rangeLeft property: Address range on the left side of the street."
  returns:
    description: "the rangeLeft value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.search.models.AddressRanges.getRangeRight()"
  fullName: "com.azure.maps.search.models.AddressRanges.getRangeRight()"
  name: "getRangeRight()"
  nameWithType: "AddressRanges.getRangeRight()"
  summary: "Get the range<wbr>Right property: Address range on the right side of the street."
  syntax: "public String getRangeRight()"
  desc: "Get the rangeRight property: Address range on the right side of the street."
  returns:
    description: "the rangeRight value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.search.models.AddressRanges.getTo()"
  fullName: "com.azure.maps.search.models.AddressRanges.getTo()"
  name: "getTo()"
  nameWithType: "AddressRanges.getTo()"
  summary: "Get the to property: A location represented as a latitude and longitude using short names 'lat' & 'lon'."
  syntax: "public GeoPosition getTo()"
  desc: "Get the to property: A location represented as a latitude and longitude using short names 'lat' & 'lon'."
  returns:
    description: "the to value."
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included."
metadata: {}
package: "com.azure.maps.search.models"
artifact: com.azure:azure-maps-search:1.0.0-beta.1
