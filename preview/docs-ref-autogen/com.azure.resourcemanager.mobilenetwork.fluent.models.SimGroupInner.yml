### YamlMime:JavaType
uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner"
fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner"
name: "SimGroupInner"
nameWithType: "SimGroupInner"
summary: "SIM group resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SimGroupInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.SimGroupInner()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.SimGroupInner()"
  name: "SimGroupInner()"
  nameWithType: "SimGroupInner.SimGroupInner()"
  syntax: "public SimGroupInner()"
methods:
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.encryptionKey()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.encryptionKey()"
  name: "encryptionKey()"
  nameWithType: "SimGroupInner.encryptionKey()"
  summary: "Get the encryption<wbr>Key property: A key to encrypt the SIM data that belongs to this SIM group."
  syntax: "public KeyVaultKey encryptionKey()"
  desc: "Get the encryptionKey property: A key to encrypt the SIM data that belongs to this SIM group."
  returns:
    description: "the encryptionKey value."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.KeyVaultKey?alt=com.azure.resourcemanager.mobilenetwork.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.identity()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.identity()"
  name: "identity()"
  nameWithType: "SimGroupInner.identity()"
  summary: "Get the identity property: The identity used to retrieve the encryption key from Azure key vault."
  syntax: "public ManagedServiceIdentity identity()"
  desc: "Get the identity property: The identity used to retrieve the encryption key from Azure key vault."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity?alt=com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity&text=ManagedServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.mobileNetwork()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.mobileNetwork()"
  name: "mobileNetwork()"
  nameWithType: "SimGroupInner.mobileNetwork()"
  summary: "Get the mobile<wbr>Network property: Mobile network that this SIM belongs to."
  syntax: "public MobileNetworkResourceId mobileNetwork()"
  desc: "Get the mobileNetwork property: Mobile network that this SIM belongs to."
  returns:
    description: "the mobileNetwork value."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId?alt=com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId&text=MobileNetworkResourceId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.provisioningState()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "SimGroupInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the SIM group resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the SIM group resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.ProvisioningState?alt=com.azure.resourcemanager.mobilenetwork.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.systemData()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.systemData()"
  name: "systemData()"
  nameWithType: "SimGroupInner.systemData()"
  summary: "Get the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.validate()"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.validate()"
  name: "validate()"
  nameWithType: "SimGroupInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withEncryptionKey(com.azure.resourcemanager.mobilenetwork.models.KeyVaultKey)"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withEncryptionKey(KeyVaultKey encryptionKey)"
  name: "withEncryptionKey(KeyVaultKey encryptionKey)"
  nameWithType: "SimGroupInner.withEncryptionKey(KeyVaultKey encryptionKey)"
  summary: "Set the encryption<wbr>Key property: A key to encrypt the SIM data that belongs to this SIM group."
  parameters:
  - description: "the encryptionKey value to set."
    name: "encryptionKey"
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.KeyVaultKey?alt=com.azure.resourcemanager.mobilenetwork.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimGroupInner withEncryptionKey(KeyVaultKey encryptionKey)"
  desc: "Set the encryptionKey property: A key to encrypt the SIM data that belongs to this SIM group."
  returns:
    description: "the SimGroupInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner?alt=com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner&text=SimGroupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withIdentity(com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity)"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withIdentity(ManagedServiceIdentity identity)"
  name: "withIdentity(ManagedServiceIdentity identity)"
  nameWithType: "SimGroupInner.withIdentity(ManagedServiceIdentity identity)"
  summary: "Set the identity property: The identity used to retrieve the encryption key from Azure key vault."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity?alt=com.azure.resourcemanager.mobilenetwork.models.ManagedServiceIdentity&text=ManagedServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimGroupInner withIdentity(ManagedServiceIdentity identity)"
  desc: "Set the identity property: The identity used to retrieve the encryption key from Azure key vault."
  returns:
    description: "the SimGroupInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner?alt=com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner&text=SimGroupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "SimGroupInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimGroupInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner?alt=com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner&text=SimGroupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withMobileNetwork(com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId)"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withMobileNetwork(MobileNetworkResourceId mobileNetwork)"
  name: "withMobileNetwork(MobileNetworkResourceId mobileNetwork)"
  nameWithType: "SimGroupInner.withMobileNetwork(MobileNetworkResourceId mobileNetwork)"
  summary: "Set the mobile<wbr>Network property: Mobile network that this SIM belongs to."
  parameters:
  - description: "the mobileNetwork value to set."
    name: "mobileNetwork"
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId?alt=com.azure.resourcemanager.mobilenetwork.models.MobileNetworkResourceId&text=MobileNetworkResourceId\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimGroupInner withMobileNetwork(MobileNetworkResourceId mobileNetwork)"
  desc: "Set the mobileNetwork property: Mobile network that this SIM belongs to."
  returns:
    description: "the SimGroupInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner?alt=com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner&text=SimGroupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "SimGroupInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SimGroupInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner?alt=com.azure.resourcemanager.mobilenetwork.fluent.models.SimGroupInner&text=SimGroupInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "SIM group resource."
metadata: {}
package: "com.azure.resourcemanager.mobilenetwork.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mobilenetwork:1.0.0-beta.3
