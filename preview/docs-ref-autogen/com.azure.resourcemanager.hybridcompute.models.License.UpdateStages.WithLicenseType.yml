### YamlMime:JavaType
uid: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithLicenseType"
fullName: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithLicenseType"
name: "License.UpdateStages.WithLicenseType"
nameWithType: "License.UpdateStages.WithLicenseType"
summary: "The stage of the License update allowing to specify license<wbr>Type."
syntax: "public static interface **License.UpdateStages.WithLicenseType**"
methods:
- uid: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithLicenseType.withLicenseType(com.azure.resourcemanager.hybridcompute.models.LicenseType)"
  fullName: "com.azure.resourcemanager.hybridcompute.models.License.UpdateStages.WithLicenseType.withLicenseType(LicenseType licenseType)"
  name: "withLicenseType(LicenseType licenseType)"
  nameWithType: "License.UpdateStages.WithLicenseType.withLicenseType(LicenseType licenseType)"
  summary: "Specifies the license<wbr>Type property: The type of the license resource.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The type of the license resource."
    name: "licenseType"
    type: "<xref href=\"com.azure.resourcemanager.hybridcompute.models.LicenseType?alt=com.azure.resourcemanager.hybridcompute.models.LicenseType&text=LicenseType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract License.Update withLicenseType(LicenseType licenseType)"
  desc: "Specifies the licenseType property: The type of the license resource.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.hybridcompute.models.License.Update?alt=com.azure.resourcemanager.hybridcompute.models.License.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the License update allowing to specify licenseType."
metadata: {}
package: "com.azure.resourcemanager.hybridcompute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridcompute:1.1.0-beta.1
