### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy
  id: NullBackoffStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic
  children:
  - org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy()
  - org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(java.lang.Throwable)
  - org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  langs:
  - java
  name: NullBackoffStrategy
  nameWithType: NullBackoffStrategy
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy
  type: Class
  package: org.apache.hc.client5.http.impl.classic
  summary: This is a <xref uid="org.apache.hc.client5.http.classic.ConnectionBackoffStrategy" data-throw-if-not-resolved="false">ConnectionBackoffStrategy</xref> that never backs off, for compatibility with existing behavior.
  syntax:
    content: public class NullBackoffStrategy implements ConnectionBackoffStrategy
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy()
  id: NullBackoffStrategy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy
  langs:
  - java
  name: NullBackoffStrategy()
  nameWithType: NullBackoffStrategy.NullBackoffStrategy()
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy()
  overload: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.impl.classic
  syntax:
    content: public NullBackoffStrategy()
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(java.lang.Throwable)
  id: shouldBackoff(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy
  langs:
  - java
  name: shouldBackoff(Throwable t)
  nameWithType: NullBackoffStrategy.shouldBackoff(Throwable t)
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(Throwable t)
  overload: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  summary: Determines whether seeing the given `Throwable` as a result of request execution should result in a backoff signal.
  syntax:
    content: public boolean shouldBackoff(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  id: shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy
  langs:
  - java
  name: shouldBackoff(HttpResponse response)
  nameWithType: NullBackoffStrategy.shouldBackoff(HttpResponse response)
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff(HttpResponse response)
  overload: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  summary: Determines whether receiving the given <xref uid="org.apache.hc.core5.http.HttpResponse" data-throw-if-not-resolved="false">HttpResponse</xref> as a result of request execution should result in a backoff signal. Implementations MUST restrict themselves to examining the response header and MUST NOT consume any of the response body, if any.
  syntax:
    content: public boolean shouldBackoff(HttpResponse response)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
    return:
      type: boolean
references:
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy*
  name: NullBackoffStrategy
  nameWithType: NullBackoffStrategy.NullBackoffStrategy
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.NullBackoffStrategy
  package: org.apache.hc.client5.http.impl.classic
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff*
  name: shouldBackoff
  nameWithType: NullBackoffStrategy.shouldBackoff
  fullName: org.apache.hc.client5.http.impl.classic.NullBackoffStrategy.shouldBackoff
  package: org.apache.hc.client5.http.impl.classic
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  name: ConnectionBackoffStrategy
  nameWithType: ConnectionBackoffStrategy
  fullName: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
