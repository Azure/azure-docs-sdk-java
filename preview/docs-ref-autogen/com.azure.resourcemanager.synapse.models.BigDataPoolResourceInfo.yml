### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo"
fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo"
name: "BigDataPoolResourceInfo"
nameWithType: "BigDataPoolResourceInfo"
summary: "An immutable client-side representation of Big<wbr>Data<wbr>Pool<wbr>Resource<wbr>Info."
syntax: "public interface BigDataPoolResourceInfo"
methods:
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.autoPause()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.autoPause()"
  name: "autoPause()"
  nameWithType: "BigDataPoolResourceInfo.autoPause()"
  summary: "Gets the auto<wbr>Pause property: Spark pool auto-pausing properties Auto-pausing properties."
  modifiers:
  - "abstract"
  syntax: "public abstract AutoPauseProperties autoPause()"
  desc: "Gets the autoPause property: Spark pool auto-pausing properties Auto-pausing properties."
  returns:
    description: "the autoPause value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoPauseProperties?alt=com.azure.resourcemanager.synapse.models.AutoPauseProperties&text=AutoPauseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.autoScale()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.autoScale()"
  name: "autoScale()"
  nameWithType: "BigDataPoolResourceInfo.autoScale()"
  summary: "Gets the auto<wbr>Scale property: Spark pool auto-scaling properties Auto-scaling properties."
  modifiers:
  - "abstract"
  syntax: "public abstract AutoScaleProperties autoScale()"
  desc: "Gets the autoScale property: Spark pool auto-scaling properties Auto-scaling properties."
  returns:
    description: "the autoScale value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoScaleProperties?alt=com.azure.resourcemanager.synapse.models.AutoScaleProperties&text=AutoScaleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.cacheSize()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.cacheSize()"
  name: "cacheSize()"
  nameWithType: "BigDataPoolResourceInfo.cacheSize()"
  summary: "Gets the cache<wbr>Size property: The cache size."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer cacheSize()"
  desc: "Gets the cacheSize property: The cache size."
  returns:
    description: "the cacheSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.creationDate()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.creationDate()"
  name: "creationDate()"
  nameWithType: "BigDataPoolResourceInfo.creationDate()"
  summary: "Gets the creation<wbr>Date property: The time when the Big Data pool was created."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime creationDate()"
  desc: "Gets the creationDate property: The time when the Big Data pool was created."
  returns:
    description: "the creationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.customLibraries()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.customLibraries()"
  name: "customLibraries()"
  nameWithType: "BigDataPoolResourceInfo.customLibraries()"
  summary: "Gets the custom<wbr>Libraries property: List of custom libraries/packages associated with the spark pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<LibraryInfo> customLibraries()"
  desc: "Gets the customLibraries property: List of custom libraries/packages associated with the spark pool."
  returns:
    description: "the customLibraries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.fluent.models.LibraryInfo?alt=com.azure.resourcemanager.synapse.fluent.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.defaultSparkLogFolder()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.defaultSparkLogFolder()"
  name: "defaultSparkLogFolder()"
  nameWithType: "BigDataPoolResourceInfo.defaultSparkLogFolder()"
  summary: "Gets the default<wbr>Spark<wbr>Log<wbr>Folder property: The default folder where Spark logs will be written."
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultSparkLogFolder()"
  desc: "Gets the defaultSparkLogFolder property: The default folder where Spark logs will be written."
  returns:
    description: "the defaultSparkLogFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.dynamicExecutorAllocation()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.dynamicExecutorAllocation()"
  name: "dynamicExecutorAllocation()"
  nameWithType: "BigDataPoolResourceInfo.dynamicExecutorAllocation()"
  summary: "Gets the dynamic<wbr>Executor<wbr>Allocation property: Dynamic Executor Allocation."
  modifiers:
  - "abstract"
  syntax: "public abstract DynamicExecutorAllocation dynamicExecutorAllocation()"
  desc: "Gets the dynamicExecutorAllocation property: Dynamic Executor Allocation."
  returns:
    description: "the dynamicExecutorAllocation value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation?alt=com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation&text=DynamicExecutorAllocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.id()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.id()"
  name: "id()"
  nameWithType: "BigDataPoolResourceInfo.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.innerModel()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.innerModel()"
  name: "innerModel()"
  nameWithType: "BigDataPoolResourceInfo.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>synapse.<wbr>fluent.<wbr>models.<wbr>Big<wbr>Data<wbr>Pool<wbr>Resource<wbr>Info<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract BigDataPoolResourceInfoInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  name: "isComputeIsolationEnabled()"
  nameWithType: "BigDataPoolResourceInfo.isComputeIsolationEnabled()"
  summary: "Gets the is<wbr>Compute<wbr>Isolation<wbr>Enabled property: Whether compute isolation is required or not."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean isComputeIsolationEnabled()"
  desc: "Gets the isComputeIsolationEnabled property: Whether compute isolation is required or not."
  returns:
    description: "the isComputeIsolationEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.lastSucceededTimestamp()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.lastSucceededTimestamp()"
  name: "lastSucceededTimestamp()"
  nameWithType: "BigDataPoolResourceInfo.lastSucceededTimestamp()"
  summary: "Gets the last<wbr>Succeeded<wbr>Timestamp property: The time when the Big Data pool was updated successfully."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastSucceededTimestamp()"
  desc: "Gets the lastSucceededTimestamp property: The time when the Big Data pool was updated successfully."
  returns:
    description: "the lastSucceededTimestamp value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.libraryRequirements()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.libraryRequirements()"
  name: "libraryRequirements()"
  nameWithType: "BigDataPoolResourceInfo.libraryRequirements()"
  summary: "Gets the library<wbr>Requirements property: Spark pool library version requirements Library version requirements."
  modifiers:
  - "abstract"
  syntax: "public abstract LibraryRequirements libraryRequirements()"
  desc: "Gets the libraryRequirements property: Spark pool library version requirements Library version requirements."
  returns:
    description: "the libraryRequirements value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.LibraryRequirements?alt=com.azure.resourcemanager.synapse.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.location()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.location()"
  name: "location()"
  nameWithType: "BigDataPoolResourceInfo.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.name()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.name()"
  name: "name()"
  nameWithType: "BigDataPoolResourceInfo.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeCount()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeCount()"
  name: "nodeCount()"
  nameWithType: "BigDataPoolResourceInfo.nodeCount()"
  summary: "Gets the node<wbr>Count property: The number of nodes in the Big Data pool."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer nodeCount()"
  desc: "Gets the nodeCount property: The number of nodes in the Big Data pool."
  returns:
    description: "the nodeCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeSize()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeSize()"
  name: "nodeSize()"
  nameWithType: "BigDataPoolResourceInfo.nodeSize()"
  summary: "Gets the node<wbr>Size property: The level of compute power that each node in the Big Data pool has."
  modifiers:
  - "abstract"
  syntax: "public abstract NodeSize nodeSize()"
  desc: "Gets the nodeSize property: The level of compute power that each node in the Big Data pool has."
  returns:
    description: "the nodeSize value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSize?alt=com.azure.resourcemanager.synapse.models.NodeSize&text=NodeSize\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeSizeFamily()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.nodeSizeFamily()"
  name: "nodeSizeFamily()"
  nameWithType: "BigDataPoolResourceInfo.nodeSizeFamily()"
  summary: "Gets the node<wbr>Size<wbr>Family property: The kind of nodes that the Big Data pool provides."
  modifiers:
  - "abstract"
  syntax: "public abstract NodeSizeFamily nodeSizeFamily()"
  desc: "Gets the nodeSizeFamily property: The kind of nodes that the Big Data pool provides."
  returns:
    description: "the nodeSizeFamily value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSizeFamily?alt=com.azure.resourcemanager.synapse.models.NodeSizeFamily&text=NodeSizeFamily\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.provisioningState()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.provisioningState()"
  name: "provisioningState()"
  nameWithType: "BigDataPoolResourceInfo.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The state of the Big Data pool."
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  desc: "Gets the provisioningState property: The state of the Big Data pool."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.refresh()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.refresh()"
  name: "refresh()"
  nameWithType: "BigDataPoolResourceInfo.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract BigDataPoolResourceInfo refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo?alt=com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "BigDataPoolResourceInfo.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BigDataPoolResourceInfo refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo?alt=com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.region()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.region()"
  name: "region()"
  nameWithType: "BigDataPoolResourceInfo.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.regionName()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.regionName()"
  name: "regionName()"
  nameWithType: "BigDataPoolResourceInfo.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sessionLevelPackagesEnabled()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sessionLevelPackagesEnabled()"
  name: "sessionLevelPackagesEnabled()"
  nameWithType: "BigDataPoolResourceInfo.sessionLevelPackagesEnabled()"
  summary: "Gets the session<wbr>Level<wbr>Packages<wbr>Enabled property: Whether session level packages enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean sessionLevelPackagesEnabled()"
  desc: "Gets the sessionLevelPackagesEnabled property: Whether session level packages enabled."
  returns:
    description: "the sessionLevelPackagesEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkConfigProperties()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkConfigProperties()"
  name: "sparkConfigProperties()"
  nameWithType: "BigDataPoolResourceInfo.sparkConfigProperties()"
  summary: "Gets the spark<wbr>Config<wbr>Properties property: Spark pool Config Properties Spark configuration file to specify additional properties."
  modifiers:
  - "abstract"
  syntax: "public abstract SparkConfigProperties sparkConfigProperties()"
  desc: "Gets the sparkConfigProperties property: Spark pool Config Properties Spark configuration file to specify additional properties."
  returns:
    description: "the sparkConfigProperties value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkEventsFolder()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkEventsFolder()"
  name: "sparkEventsFolder()"
  nameWithType: "BigDataPoolResourceInfo.sparkEventsFolder()"
  summary: "Gets the spark<wbr>Events<wbr>Folder property: The Spark events folder."
  modifiers:
  - "abstract"
  syntax: "public abstract String sparkEventsFolder()"
  desc: "Gets the sparkEventsFolder property: The Spark events folder."
  returns:
    description: "the sparkEventsFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkVersion()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.sparkVersion()"
  name: "sparkVersion()"
  nameWithType: "BigDataPoolResourceInfo.sparkVersion()"
  summary: "Gets the spark<wbr>Version property: The Apache Spark version."
  modifiers:
  - "abstract"
  syntax: "public abstract String sparkVersion()"
  desc: "Gets the sparkVersion property: The Apache Spark version."
  returns:
    description: "the sparkVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.tags()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.tags()"
  name: "tags()"
  nameWithType: "BigDataPoolResourceInfo.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.type()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.type()"
  name: "type()"
  nameWithType: "BigDataPoolResourceInfo.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.update()"
  fullName: "com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.update()"
  name: "update()"
  nameWithType: "BigDataPoolResourceInfo.update()"
  summary: "Begins update for the Big<wbr>Data<wbr>Pool<wbr>Resource<wbr>Info resource."
  modifiers:
  - "abstract"
  syntax: "public abstract BigDataPoolResourceInfo.Update update()"
  desc: "Begins update for the BigDataPoolResourceInfo resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.Update?alt=com.azure.resourcemanager.synapse.models.BigDataPoolResourceInfo.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of BigDataPoolResourceInfo."
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.6
