### YamlMime:JavaType
uid: "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule"
fullName: "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule"
name: "ScalingSchedule"
nameWithType: "ScalingSchedule"
summary: "Scaling plan schedule."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ScalingSchedule"
constructors:
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.ScalingSchedule()"
methods:
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.daysOfWeek()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.name()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.offPeakLoadBalancingAlgorithm()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.offPeakStartTime()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.peakLoadBalancingAlgorithm()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.peakStartTime()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownCapacityThresholdPct()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownForceLogoffUsers()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownLoadBalancingAlgorithm()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownMinimumHostsPct()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownNotificationMessage()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownStartTime()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownStopHostsWhen()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampDownWaitTimeMinutes()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampUpCapacityThresholdPct()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampUpLoadBalancingAlgorithm()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampUpMinimumHostsPct()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.rampUpStartTime()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.validate()"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withDaysOfWeek(java.util.List<com.azure.resourcemanager.desktopvirtualization.models.ScalingScheduleDaysOfWeekItem>)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withName(java.lang.String)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withOffPeakLoadBalancingAlgorithm(com.azure.resourcemanager.desktopvirtualization.models.SessionHostLoadBalancingAlgorithm)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withOffPeakStartTime(com.azure.resourcemanager.desktopvirtualization.models.Time)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withPeakLoadBalancingAlgorithm(com.azure.resourcemanager.desktopvirtualization.models.SessionHostLoadBalancingAlgorithm)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withPeakStartTime(com.azure.resourcemanager.desktopvirtualization.models.Time)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownCapacityThresholdPct(java.lang.Integer)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownForceLogoffUsers(java.lang.Boolean)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownLoadBalancingAlgorithm(com.azure.resourcemanager.desktopvirtualization.models.SessionHostLoadBalancingAlgorithm)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownMinimumHostsPct(java.lang.Integer)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownNotificationMessage(java.lang.String)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownStartTime(com.azure.resourcemanager.desktopvirtualization.models.Time)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownStopHostsWhen(com.azure.resourcemanager.desktopvirtualization.models.StopHostsWhen)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampDownWaitTimeMinutes(java.lang.Integer)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampUpCapacityThresholdPct(java.lang.Integer)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampUpLoadBalancingAlgorithm(com.azure.resourcemanager.desktopvirtualization.models.SessionHostLoadBalancingAlgorithm)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampUpMinimumHostsPct(java.lang.Integer)"
- "com.azure.resourcemanager.desktopvirtualization.models.ScalingSchedule.withRampUpStartTime(com.azure.resourcemanager.desktopvirtualization.models.Time)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.desktopvirtualization.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-desktopvirtualization:1.0.0-beta.1
