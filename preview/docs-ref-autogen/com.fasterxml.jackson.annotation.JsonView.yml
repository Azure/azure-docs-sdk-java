### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonView
  id: JsonView
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonView.value()
  langs:
  - java
  name: JsonView
  nameWithType: JsonView
  fullName: com.fasterxml.jackson.annotation.JsonView
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: >-
    Annotation used for indicating view(s) that the property that is defined by method or field annotated is part of.


    An example annotation would be:


    ```java

    @JsonView(BasicView.class)

    ```


    which would specify that property annotated would be included when processing (serializing, deserializing) View identified by `BasicView.class` (or its sub-class). If multiple View class identifiers are included, property will be part of all of them.


    Starting with 2.9, it is also possible to use this annotation on POJO classes to indicate the default view(s) for properties of the type, unless overridden by per-property annotation.
  syntax:
    content: public interface JsonView implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.annotation.JsonView.value()
  id: value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonView
  langs:
  - java
  name: value()
  nameWithType: JsonView.value()
  fullName: com.fasterxml.jackson.annotation.JsonView.value()
  overload: com.fasterxml.jackson.annotation.JsonView.value*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: 'View or views that annotated element is part of. Views are identified by classes, and use expected class inheritance relationship: child views contain all elements parent views have, for example.'
  syntax:
    content: public abstract Class<?>[] value()
    return:
      type: java.lang.Class<?>[]
references:
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.JsonView.value*
  name: value
  nameWithType: JsonView.value
  fullName: com.fasterxml.jackson.annotation.JsonView.value
  package: com.fasterxml.jackson.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
