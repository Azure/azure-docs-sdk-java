### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.Tools"
fullName: "com.microsoft.azure.sdk.iot.service.Tools"
name: "Tools"
nameWithType: "Tools"
summary: "Collection of static helper functions"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Tools"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.Tools.Tools()"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.Tools()"
  name: "Tools()"
  nameWithType: "Tools.Tools()"
  syntax: "public Tools()"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.Tools.appendJsonAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.appendJsonAttribute(StringBuilder strBuilder, String name, String value, Boolean isQuoted, Boolean isLast)"
  name: "appendJsonAttribute(StringBuilder strBuilder, String name, String value, Boolean isQuoted, Boolean isLast)"
  nameWithType: "Tools.appendJsonAttribute(StringBuilder strBuilder, String name, String value, Boolean isQuoted, Boolean isLast)"
  summary: "Helper function to properly craft Json string of key-value pair"
  modifiers:
  - "static"
  parameters:
  - description: "The StringBuilder to work on"
    name: "strBuilder"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the key"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value of the key"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "If true leading and trailing quotes will be added"
    name: "isQuoted"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "If false trailing comma will added"
    name: "isLast"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void appendJsonAttribute(StringBuilder strBuilder, String name, String value, Boolean isQuoted, Boolean isLast)"
  desc: "Helper function to properly craft Json string of key-value pair"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.areEqual(java.lang.Object,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.areEqual(Object a, Object b)"
  name: "areEqual(Object a, Object b)"
  nameWithType: "Tools.areEqual(Object a, Object b)"
  summary: "Equality check for objects that accounts for null value comparisons."
  modifiers:
  - "static"
  parameters:
  - description: "the first object"
    name: "a"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the seconds object"
    name: "b"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean areEqual(Object a, Object b)"
  desc: "Equality check for objects that accounts for null value comparisons. If both objects are null, this will return false. Both objects must have .equals(...) implemented correctly for this method to work properly."
  returns:
    description: "if the two are equal"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.getNumberValueFromJsonObject(javax.json.JsonObject,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.getNumberValueFromJsonObject(JsonObject jsonObject, String key)"
  name: "getNumberValueFromJsonObject(JsonObject jsonObject, String key)"
  nameWithType: "Tools.getNumberValueFromJsonObject(JsonObject jsonObject, String key)"
  summary: "Helper function to get numeric value from a Json<wbr>Object"
  modifiers:
  - "static"
  parameters:
  - description: "The JsonObject object to get the value from"
    name: "jsonObject"
    type: "<xref href=\"javax.json.JsonObject?alt=javax.json.JsonObject&text=JsonObject\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the key"
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static long getNumberValueFromJsonObject(JsonObject jsonObject, String key)"
  desc: "Helper function to get numeric value from a JsonObject"
  returns:
    description: "The numeric value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.getValueFromJsonObject(javax.json.JsonObject,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.getValueFromJsonObject(JsonObject jsonObject, String key)"
  name: "getValueFromJsonObject(JsonObject jsonObject, String key)"
  nameWithType: "Tools.getValueFromJsonObject(JsonObject jsonObject, String key)"
  summary: "Helper function to get a value from the given Json<wbr>Object if the key name exists"
  modifiers:
  - "static"
  parameters:
  - description: "The JsonObject object to get the value from"
    name: "jsonObject"
    type: "<xref href=\"javax.json.JsonObject?alt=javax.json.JsonObject&text=JsonObject\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the key"
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getValueFromJsonObject(JsonObject jsonObject, String key)"
  desc: "Helper function to get a value from the given JsonObject if the key name exists"
  returns:
    description: "The value of the given key if exists otherwise empty string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.getValueFromJsonString(javax.json.JsonString)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.getValueFromJsonString(JsonString jsonString)"
  name: "getValueFromJsonString(JsonString jsonString)"
  nameWithType: "Tools.getValueFromJsonString(JsonString jsonString)"
  summary: "Helper function to get trim the leading and trailing parenthesis from a Json string if they exists"
  modifiers:
  - "static"
  parameters:
  - description: "The JsonString to trim"
    name: "jsonString"
    type: "<xref href=\"javax.json.JsonString?alt=javax.json.JsonString&text=JsonString\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getValueFromJsonString(JsonString jsonString)"
  desc: "Helper function to get trim the leading and trailing parenthesis from a Json string if they exists"
  returns:
    description: "The trimmed string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.getValueStringByKey(java.util.Map,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.getValueStringByKey(Map map, String keyName)"
  name: "getValueStringByKey(Map map, String keyName)"
  nameWithType: "Tools.getValueStringByKey(Map map, String keyName)"
  summary: "Helper function to get a value from the given Map if the key name exists"
  modifiers:
  - "static"
  parameters:
  - description: "The Map object to get the value from"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the key"
    name: "keyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getValueStringByKey(Map map, String keyName)"
  desc: "Helper function to get a value from the given Map if the key name exists"
  returns:
    description: "The value of the given key if exists otherwise empty string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.isNullOrEmpty(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.isNullOrEmpty(String value)"
  name: "isNullOrEmpty(String value)"
  nameWithType: "Tools.isNullOrEmpty(String value)"
  summary: "Helper function to check if the input string is null or empty"
  modifiers:
  - "static"
  parameters:
  - description: "The string to check"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Boolean isNullOrEmpty(String value)"
  desc: "Helper function to check if the input string is null or empty"
  returns:
    description: "The value true if the input string is empty or null"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Tools.isNullOrWhiteSpace(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.Tools.isNullOrWhiteSpace(String value)"
  name: "isNullOrWhiteSpace(String value)"
  nameWithType: "Tools.isNullOrWhiteSpace(String value)"
  summary: "Helper function to check if the input string is null or contains only whitespace(s)"
  modifiers:
  - "static"
  parameters:
  - description: "The string to check"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Boolean isNullOrWhiteSpace(String value)"
  desc: "Helper function to check if the input string is null or contains only whitespace(s)"
  returns:
    description: "The value true if the input string is empty or contains only whitespace(s)"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Collection of static helper functions"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
