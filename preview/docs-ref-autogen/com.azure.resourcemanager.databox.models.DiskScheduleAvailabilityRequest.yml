### YamlMime:JavaType
uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest"
fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest"
name: "DiskScheduleAvailabilityRequest"
nameWithType: "DiskScheduleAvailabilityRequest"
summary: "Request body to get the availability for scheduling disk orders."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest&text=ScheduleAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.country()?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.country&text=country\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.storageLocation()?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.storageLocation&text=storageLocation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.validate()?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withCountry(java.lang.String)?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withCountry&text=withCountry\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withStorageLocation(java.lang.String)?alt=com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withStorageLocation&text=withStorageLocation\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class DiskScheduleAvailabilityRequest extends ScheduleAvailabilityRequest"
constructors:
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.DiskScheduleAvailabilityRequest()"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.DiskScheduleAvailabilityRequest()"
  name: "DiskScheduleAvailabilityRequest()"
  nameWithType: "DiskScheduleAvailabilityRequest.DiskScheduleAvailabilityRequest()"
  syntax: "public DiskScheduleAvailabilityRequest()"
methods:
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.expectedDataSizeInTeraBytes()"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.expectedDataSizeInTeraBytes()"
  name: "expectedDataSizeInTeraBytes()"
  nameWithType: "DiskScheduleAvailabilityRequest.expectedDataSizeInTeraBytes()"
  summary: "Get the expected<wbr>Data<wbr>Size<wbr>InTera<wbr>Bytes property: The expected size of the data, which needs to be transferred in this job, in terabytes."
  syntax: "public int expectedDataSizeInTeraBytes()"
  desc: "Get the expectedDataSizeInTeraBytes property: The expected size of the data, which needs to be transferred in this job, in terabytes."
  returns:
    description: "the expectedDataSizeInTeraBytes value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.validate()"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.validate()"
  name: "validate()"
  nameWithType: "DiskScheduleAvailabilityRequest.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withCountry(java.lang.String)"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withCountry(String country)"
  name: "withCountry(String country)"
  nameWithType: "DiskScheduleAvailabilityRequest.withCountry(String country)"
  summary: "Set the country property: Country in which storage location should be supported."
  overridden: "com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withCountry(java.lang.String)"
  parameters:
  - name: "country"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskScheduleAvailabilityRequest withCountry(String country)"
  desc: "Set the country property: Country in which storage location should be supported."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest?alt=com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest&text=DiskScheduleAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int)"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  name: "withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  nameWithType: "DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  summary: "Set the expected<wbr>Data<wbr>Size<wbr>InTera<wbr>Bytes property: The expected size of the data, which needs to be transferred in this job, in terabytes."
  parameters:
  - description: "the expectedDataSizeInTeraBytes value to set."
    name: "expectedDataSizeInTeraBytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskScheduleAvailabilityRequest withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  desc: "Set the expectedDataSizeInTeraBytes property: The expected size of the data, which needs to be transferred in this job, in terabytes."
  returns:
    description: "the DiskScheduleAvailabilityRequest object itself."
    type: "<xref href=\"com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest?alt=com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest&text=DiskScheduleAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withStorageLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withStorageLocation(String storageLocation)"
  name: "withStorageLocation(String storageLocation)"
  nameWithType: "DiskScheduleAvailabilityRequest.withStorageLocation(String storageLocation)"
  summary: "Set the storage<wbr>Location property: Location for data transfer."
  overridden: "com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest.withStorageLocation(java.lang.String)"
  parameters:
  - name: "storageLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskScheduleAvailabilityRequest withStorageLocation(String storageLocation)"
  desc: "Set the storageLocation property: Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest?alt=com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest&text=DiskScheduleAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Request body to get the availability for scheduling disk orders."
metadata: {}
package: "com.azure.resourcemanager.databox.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databox:1.0.0-beta.1
