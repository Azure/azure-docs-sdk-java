### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  id: "SentenceSentiment"
  parent: "com.azure.ai.textanalytics.implementation.models"
  children:
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings()"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength(int)"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset(int)"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores(com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel)"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment(com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue)"
  - "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings(java.util.List<java.lang.String>)"
  langs:
  - "java"
  name: "SentenceSentiment"
  nameWithType: "SentenceSentiment"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  type: "Class"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "The SentenceSentiment model."
  syntax:
    content: "public final class SentenceSentiment"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment()"
  id: "SentenceSentiment()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "SentenceSentiment()"
  nameWithType: "SentenceSentiment.SentenceSentiment()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.implementation.models"
  syntax:
    content: "public SentenceSentiment()"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength()"
  id: "getLength()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "SentenceSentiment.getLength()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Get the length property: The length of the sentence by Unicode standard."
  syntax:
    content: "public int getLength()"
    return:
      type: "int"
      description: "the length value."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset()"
  id: "getOffset()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "getOffset()"
  nameWithType: "SentenceSentiment.getOffset()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Get the offset property: The sentence offset from the start of the document."
  syntax:
    content: "public int getOffset()"
    return:
      type: "int"
      description: "the offset value."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores()"
  id: "getSentenceScores()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "getSentenceScores()"
  nameWithType: "SentenceSentiment.getSentenceScores()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Get the sentenceScores property: The sentiment confidence score between 0 and 1 for the sentence for all classes."
  syntax:
    content: "public SentimentConfidenceScorePerLabel getSentenceScores()"
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel"
      description: "the sentenceScores value."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment()"
  id: "getSentiment()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "getSentiment()"
  nameWithType: "SentenceSentiment.getSentiment()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Get the sentiment property: The predicted Sentiment for the sentence. Possible values include: 'positive', 'neutral', 'negative'."
  syntax:
    content: "public SentenceSentimentValue getSentiment()"
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue"
      description: "the sentiment value."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings()"
  id: "getWarnings()"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "getWarnings()"
  nameWithType: "SentenceSentiment.getWarnings()"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings()"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Get the warnings property: The warnings generated for the sentence."
  syntax:
    content: "public List<String> getWarnings()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the warnings value."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength(int)"
  id: "setLength(int)"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "setLength(int length)"
  nameWithType: "SentenceSentiment.setLength(int length)"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength(int length)"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Set the length property: The length of the sentence by Unicode standard."
  syntax:
    content: "public SentenceSentiment setLength(int length)"
    parameters:
    - id: "length"
      type: "int"
      description: "the length value to set."
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
      description: "the SentenceSentiment object itself."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset(int)"
  id: "setOffset(int)"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "setOffset(int offset)"
  nameWithType: "SentenceSentiment.setOffset(int offset)"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset(int offset)"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Set the offset property: The sentence offset from the start of the document."
  syntax:
    content: "public SentenceSentiment setOffset(int offset)"
    parameters:
    - id: "offset"
      type: "int"
      description: "the offset value to set."
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
      description: "the SentenceSentiment object itself."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores(com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel)"
  id: "setSentenceScores(com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel)"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "setSentenceScores(SentimentConfidenceScorePerLabel sentenceScores)"
  nameWithType: "SentenceSentiment.setSentenceScores(SentimentConfidenceScorePerLabel sentenceScores)"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores(SentimentConfidenceScorePerLabel sentenceScores)"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Set the sentenceScores property: The sentiment confidence score between 0 and 1 for the sentence for all classes."
  syntax:
    content: "public SentenceSentiment setSentenceScores(SentimentConfidenceScorePerLabel sentenceScores)"
    parameters:
    - id: "sentenceScores"
      type: "com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel"
      description: "the sentenceScores value to set."
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
      description: "the SentenceSentiment object itself."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment(com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue)"
  id: "setSentiment(com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue)"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "setSentiment(SentenceSentimentValue sentiment)"
  nameWithType: "SentenceSentiment.setSentiment(SentenceSentimentValue sentiment)"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment(SentenceSentimentValue sentiment)"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Set the sentiment property: The predicted Sentiment for the sentence. Possible values include: 'positive', 'neutral', 'negative'."
  syntax:
    content: "public SentenceSentiment setSentiment(SentenceSentimentValue sentiment)"
    parameters:
    - id: "sentiment"
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue"
      description: "the sentiment value to set."
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
      description: "the SentenceSentiment object itself."
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings(java.util.List<java.lang.String>)"
  id: "setWarnings(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
  langs:
  - "java"
  name: "setWarnings(List<String> warnings)"
  nameWithType: "SentenceSentiment.setWarnings(List<String> warnings)"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings(List<String> warnings)"
  overload: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings*"
  type: "Method"
  package: "com.azure.ai.textanalytics.implementation.models"
  summary: "Set the warnings property: The warnings generated for the sentence."
  syntax:
    content: "public SentenceSentiment setWarnings(List<String> warnings)"
    parameters:
    - id: "warnings"
      type: "java.util.List<java.lang.String>"
      description: "the warnings value to set."
    return:
      type: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment"
      description: "the SentenceSentiment object itself."
references:
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment*"
  name: "SentenceSentiment"
  nameWithType: "SentenceSentiment.SentenceSentiment"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.SentenceSentiment"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue"
  name: "SentenceSentimentValue"
  nameWithType: "SentenceSentimentValue"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentimentValue"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment*"
  name: "getSentiment"
  nameWithType: "SentenceSentiment.getSentiment"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentiment"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment*"
  name: "setSentiment"
  nameWithType: "SentenceSentiment.setSentiment"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentiment"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel"
  name: "SentimentConfidenceScorePerLabel"
  nameWithType: "SentimentConfidenceScorePerLabel"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores*"
  name: "getSentenceScores"
  nameWithType: "SentenceSentiment.getSentenceScores"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getSentenceScores"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores*"
  name: "setSentenceScores"
  nameWithType: "SentenceSentiment.setSentenceScores"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setSentenceScores"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset*"
  name: "getOffset"
  nameWithType: "SentenceSentiment.getOffset"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getOffset"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset*"
  name: "setOffset"
  nameWithType: "SentenceSentiment.setOffset"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setOffset"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength*"
  name: "getLength"
  nameWithType: "SentenceSentiment.getLength"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getLength"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength*"
  name: "setLength"
  nameWithType: "SentenceSentiment.setLength"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setLength"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings*"
  name: "getWarnings"
  nameWithType: "SentenceSentiment.getWarnings"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.getWarnings"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings*"
  name: "setWarnings"
  nameWithType: "SentenceSentiment.setWarnings"
  fullName: "com.azure.ai.textanalytics.implementation.models.SentenceSentiment.setWarnings"
  package: "com.azure.ai.textanalytics.implementation.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
