### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  id: PhoneticTokenFilter
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter(java.lang.String)
  - com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced()
  - com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder()
  - com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder(com.azure.search.documents.indexes.models.PhoneticEncoder)
  - com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced(java.lang.Boolean)
  langs:
  - java
  name: PhoneticTokenFilter
  nameWithType: PhoneticTokenFilter
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Create tokens for phonetic matches. This token filter is implemented using Apache Lucene.
  syntax:
    content: public final class PhoneticTokenFilter extends TokenFilter
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.models.TokenFilter
  inheritedMembers:
  - com.azure.search.documents.indexes.models.TokenFilter.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter(java.lang.String)
  id: PhoneticTokenFilter(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  langs:
  - java
  name: PhoneticTokenFilter(String name)
  nameWithType: PhoneticTokenFilter.PhoneticTokenFilter(String name)
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter(String name)
  overload: com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.PhoneticTokenFilter" data-throw-if-not-resolved="false">PhoneticTokenFilter</xref>.
  syntax:
    content: public PhoneticTokenFilter(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: >-
        The name of the token filter. It must only contain letters, digits,
         spaces, dashes or underscores, can only start and end with alphanumeric
         characters, and is limited to 128 characters.
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced()
  id: areOriginalTokensReplaced()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  langs:
  - java
  name: areOriginalTokensReplaced()
  nameWithType: PhoneticTokenFilter.areOriginalTokensReplaced()
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced()
  overload: com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the replaceOriginalTokens property: A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true.'
  syntax:
    content: public Boolean areOriginalTokensReplaced()
    return:
      type: java.lang.Boolean
      description: the replaceOriginalTokens value.
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder()
  id: getEncoder()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  langs:
  - java
  name: getEncoder()
  nameWithType: PhoneticTokenFilter.getEncoder()
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder()
  overload: com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Get the encoder property: The phonetic encoder to use. Default is \"metaphone\". Possible values include: 'Metaphone', 'DoubleMetaphone', 'Soundex', 'RefinedSoundex', 'Caverphone1', 'Caverphone2', 'Cologne', 'Nysiis', 'KoelnerPhonetik', 'HaasePhonetik', 'BeiderMorse'."
  syntax:
    content: public PhoneticEncoder getEncoder()
    return:
      type: com.azure.search.documents.indexes.models.PhoneticEncoder
      description: the encoder value.
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder(com.azure.search.documents.indexes.models.PhoneticEncoder)
  id: setEncoder(com.azure.search.documents.indexes.models.PhoneticEncoder)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  langs:
  - java
  name: setEncoder(PhoneticEncoder encoder)
  nameWithType: PhoneticTokenFilter.setEncoder(PhoneticEncoder encoder)
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder(PhoneticEncoder encoder)
  overload: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Set the encoder property: The phonetic encoder to use. Default is \"metaphone\". Possible values include: 'Metaphone', 'DoubleMetaphone', 'Soundex', 'RefinedSoundex', 'Caverphone1', 'Caverphone2', 'Cologne', 'Nysiis', 'KoelnerPhonetik', 'HaasePhonetik', 'BeiderMorse'."
  syntax:
    content: public PhoneticTokenFilter setEncoder(PhoneticEncoder encoder)
    parameters:
    - id: encoder
      type: com.azure.search.documents.indexes.models.PhoneticEncoder
      description: the encoder value to set.
    return:
      type: com.azure.search.documents.indexes.models.PhoneticTokenFilter
      description: the PhoneticTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced(java.lang.Boolean)
  id: setOriginalTokensReplaced(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PhoneticTokenFilter
  langs:
  - java
  name: setOriginalTokensReplaced(Boolean originalTokensReplaced)
  nameWithType: PhoneticTokenFilter.setOriginalTokensReplaced(Boolean originalTokensReplaced)
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced(Boolean originalTokensReplaced)
  overload: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the replaceOriginalTokens property: A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true.'
  syntax:
    content: public PhoneticTokenFilter setOriginalTokensReplaced(Boolean originalTokensReplaced)
    parameters:
    - id: originalTokensReplaced
      type: java.lang.Boolean
      description: the replaceOriginalTokens value to set.
    return:
      type: com.azure.search.documents.indexes.models.PhoneticTokenFilter
      description: the PhoneticTokenFilter object itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter*
  name: PhoneticTokenFilter
  nameWithType: PhoneticTokenFilter.PhoneticTokenFilter
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.PhoneticTokenFilter
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PhoneticEncoder
  name: PhoneticEncoder
  nameWithType: PhoneticEncoder
  fullName: com.azure.search.documents.indexes.models.PhoneticEncoder
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder*
  name: getEncoder
  nameWithType: PhoneticTokenFilter.getEncoder
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.getEncoder
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder*
  name: setEncoder
  nameWithType: PhoneticTokenFilter.setEncoder
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setEncoder
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced*
  name: areOriginalTokensReplaced
  nameWithType: PhoneticTokenFilter.areOriginalTokensReplaced
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.areOriginalTokensReplaced
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced*
  name: setOriginalTokensReplaced
  nameWithType: PhoneticTokenFilter.setOriginalTokensReplaced
  fullName: com.azure.search.documents.indexes.models.PhoneticTokenFilter.setOriginalTokensReplaced
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.models.TokenFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.models.TokenFilter.getName()
  name: TokenFilter.getName()
  nameWithType: TokenFilter.getName()
  fullName: com.azure.search.documents.indexes.models.TokenFilter.getName()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
