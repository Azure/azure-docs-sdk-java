### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner"
fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner"
name: "CheckAvailabilityResponseInner"
nameWithType: "CheckAvailabilityResponseInner"
summary: "Information regarding availability of a resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CheckAvailabilityResponseInner"
constructors:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.CheckAvailabilityResponseInner()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.CheckAvailabilityResponseInner()"
  name: "CheckAvailabilityResponseInner()"
  nameWithType: "CheckAvailabilityResponseInner.CheckAvailabilityResponseInner()"
  syntax: "public CheckAvailabilityResponseInner()"
methods:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.isAvailable()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.isAvailable()"
  name: "isAvailable()"
  nameWithType: "CheckAvailabilityResponseInner.isAvailable()"
  summary: "Get the is<wbr>Available property: <code>true</code> indicates name is valid and available."
  syntax: "public Boolean isAvailable()"
  desc: "Get the isAvailable property: <code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both."
  returns:
    description: "the isAvailable value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.message()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.message()"
  name: "message()"
  nameWithType: "CheckAvailabilityResponseInner.message()"
  summary: "Get the message property: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name."
  syntax: "public String message()"
  desc: "Get the message property: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name."
  returns:
    description: "the message value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.reason()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.reason()"
  name: "reason()"
  nameWithType: "CheckAvailabilityResponseInner.reason()"
  summary: "Get the reason property: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements."
  syntax: "public InAvailabilityReasonType reason()"
  desc: "Get the reason property: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable."
  returns:
    description: "the reason value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.InAvailabilityReasonType?alt=com.azure.resourcemanager.netapp.models.InAvailabilityReasonType&text=InAvailabilityReasonType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.validate()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.validate()"
  name: "validate()"
  nameWithType: "CheckAvailabilityResponseInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withIsAvailable(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withIsAvailable(Boolean isAvailable)"
  name: "withIsAvailable(Boolean isAvailable)"
  nameWithType: "CheckAvailabilityResponseInner.withIsAvailable(Boolean isAvailable)"
  summary: "Set the is<wbr>Available property: <code>true</code> indicates name is valid and available."
  parameters:
  - description: "the isAvailable value to set."
    name: "isAvailable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckAvailabilityResponseInner withIsAvailable(Boolean isAvailable)"
  desc: "Set the isAvailable property: <code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both."
  returns:
    description: "the CheckAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner?alt=com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner&text=CheckAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withMessage(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withMessage(String message)"
  name: "withMessage(String message)"
  nameWithType: "CheckAvailabilityResponseInner.withMessage(String message)"
  summary: "Set the message property: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name."
  parameters:
  - description: "the message value to set."
    name: "message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckAvailabilityResponseInner withMessage(String message)"
  desc: "Set the message property: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name."
  returns:
    description: "the CheckAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner?alt=com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner&text=CheckAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withReason(com.azure.resourcemanager.netapp.models.InAvailabilityReasonType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner.withReason(InAvailabilityReasonType reason)"
  name: "withReason(InAvailabilityReasonType reason)"
  nameWithType: "CheckAvailabilityResponseInner.withReason(InAvailabilityReasonType reason)"
  summary: "Set the reason property: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements."
  parameters:
  - description: "the reason value to set."
    name: "reason"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.InAvailabilityReasonType?alt=com.azure.resourcemanager.netapp.models.InAvailabilityReasonType&text=InAvailabilityReasonType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckAvailabilityResponseInner withReason(InAvailabilityReasonType reason)"
  desc: "Set the reason property: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable."
  returns:
    description: "the CheckAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner?alt=com.azure.resourcemanager.netapp.fluent.models.CheckAvailabilityResponseInner&text=CheckAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Information regarding availability of a resource."
metadata: {}
package: "com.azure.resourcemanager.netapp.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.10
