### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler"
fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler"
name: "AmqpsCbsSessionHandler"
nameWithType: "AmqpsCbsSessionHandler"
summary: "This class defines the special CBS session that owns a CBS sender and receiver link."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.add&text=add\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.children()?alt=org.apache.qpid.proton.engine.BaseHandler.children&text=children\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.handle&text=handle\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionBound&text=onConnectionBound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal&text=onConnectionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionInit&text=onConnectionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose&text=onConnectionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen&text=onConnectionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose&text=onConnectionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen&text=onConnectionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound&text=onConnectionUnbound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onDelivery&text=onDelivery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFinal&text=onLinkFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFlow&text=onLinkFlow\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkInit&text=onLinkInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose&text=onLinkLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach&text=onLinkLocalDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen&text=onLinkLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose&text=onLinkRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach&text=onLinkRemoteDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen&text=onLinkRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorFinal&text=onReactorFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorInit&text=onReactorInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced&text=onReactorQuiesced\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableError&text=onSelectableError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired&text=onSelectableExpired\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal&text=onSelectableFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableInit&text=onSelectableInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable&text=onSelectableReadable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated&text=onSelectableUpdated\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable&text=onSelectableWritable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionFinal&text=onSessionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionInit&text=onSessionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose&text=onSessionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen&text=onSessionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose&text=onSessionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen&text=onSessionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTimerTask&text=onTimerTask\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransport&text=onTransport\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportClosed&text=onTransportClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportError&text=onTransportError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed&text=onTransportHeadClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed&text=onTransportTailClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onUnhandled&text=onUnhandled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **AmqpsCbsSessionHandler**</br> extends <xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" /></br> implements <xref href=\"com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsLinkStateCallback?alt=com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsLinkStateCallback&text=AmqpsLinkStateCallback\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.close()"
  name: "close()"
  nameWithType: "AmqpsCbsSessionHandler.close()"
  syntax: "public void close()"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onAuthenticationFailed(com.microsoft.azure.sdk.iot.device.exceptions.TransportException)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onAuthenticationFailed(TransportException transportException)"
  name: "onAuthenticationFailed(TransportException transportException)"
  nameWithType: "AmqpsCbsSessionHandler.onAuthenticationFailed(TransportException transportException)"
  parameters:
  - name: "transportException"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onAuthenticationFailed(TransportException transportException)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onLinkClosedUnexpectedly(org.apache.qpid.proton.amqp.transport.ErrorCondition)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onLinkClosedUnexpectedly(ErrorCondition errorCondition)"
  name: "onLinkClosedUnexpectedly(ErrorCondition errorCondition)"
  nameWithType: "AmqpsCbsSessionHandler.onLinkClosedUnexpectedly(ErrorCondition errorCondition)"
  summary: "Executed if a link closes remotely unexpectedly"
  parameters:
  - name: "errorCondition"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.ErrorCondition?alt=org.apache.qpid.proton.amqp.transport.ErrorCondition&text=ErrorCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkClosedUnexpectedly(ErrorCondition errorCondition)"
  desc: "Executed if a link closes remotely unexpectedly"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onLinkOpened(org.apache.qpid.proton.engine.BaseHandler)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onLinkOpened(BaseHandler linkHandler)"
  name: "onLinkOpened(BaseHandler linkHandler)"
  nameWithType: "AmqpsCbsSessionHandler.onLinkOpened(BaseHandler linkHandler)"
  summary: "Executed when a link has finished opening"
  parameters:
  - name: "linkHandler"
    type: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkOpened(BaseHandler linkHandler)"
  desc: "Executed when a link has finished opening"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onMessageAcknowledged(com.microsoft.azure.sdk.iot.device.Message,int,org.apache.qpid.proton.amqp.transport.DeliveryState)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onMessageAcknowledged(Message message, int deliveryTag, DeliveryState deliveryState)"
  name: "onMessageAcknowledged(Message message, int deliveryTag, DeliveryState deliveryState)"
  nameWithType: "AmqpsCbsSessionHandler.onMessageAcknowledged(Message message, int deliveryTag, DeliveryState deliveryState)"
  summary: "Executed when a message sent by a link in this session was acknowledged by the service"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - name: "deliveryTag"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "deliveryState"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageAcknowledged(Message message, int deliveryTag, DeliveryState deliveryState)"
  desc: "Executed when a message sent by a link in this session was acknowledged by the service"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onMessageReceived(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onMessageReceived(IotHubTransportMessage message)"
  name: "onMessageReceived(IotHubTransportMessage message)"
  nameWithType: "AmqpsCbsSessionHandler.onMessageReceived(IotHubTransportMessage message)"
  summary: "Executed when a message is received by a link in this session."
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageReceived(IotHubTransportMessage message)"
  desc: "Executed when a message is received by a link in this session. This message should be acknowledged later."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionLocalClose(Event e)"
  name: "onSessionLocalClose(Event e)"
  nameWithType: "AmqpsCbsSessionHandler.onSessionLocalClose(Event e)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "e"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionLocalClose(Event e)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionLocalOpen(Event event)"
  name: "onSessionLocalOpen(Event event)"
  nameWithType: "AmqpsCbsSessionHandler.onSessionLocalOpen(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionLocalOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionRemoteClose(Event e)"
  name: "onSessionRemoteClose(Event e)"
  nameWithType: "AmqpsCbsSessionHandler.onSessionRemoteClose(Event e)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "e"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionRemoteClose(Event e)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.onSessionRemoteOpen(Event e)"
  name: "onSessionRemoteOpen(Event e)"
  nameWithType: "AmqpsCbsSessionHandler.onSessionRemoteOpen(Event e)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "e"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionRemoteOpen(Event e)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.sendAuthenticationMessage(com.microsoft.azure.sdk.iot.device.DeviceClientConfig,com.microsoft.azure.sdk.iot.device.transport.amqps.AuthenticationMessageCallback)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsCbsSessionHandler.sendAuthenticationMessage(DeviceClientConfig deviceClientConfig, AuthenticationMessageCallback authenticationMessageCallback)"
  name: "sendAuthenticationMessage(DeviceClientConfig deviceClientConfig, AuthenticationMessageCallback authenticationMessageCallback)"
  nameWithType: "AmqpsCbsSessionHandler.sendAuthenticationMessage(DeviceClientConfig deviceClientConfig, AuthenticationMessageCallback authenticationMessageCallback)"
  parameters:
  - name: "deviceClientConfig"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "authenticationMessageCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.amqps.AuthenticationMessageCallback?alt=com.microsoft.azure.sdk.iot.device.transport.amqps.AuthenticationMessageCallback&text=AuthenticationMessageCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void sendAuthenticationMessage(DeviceClientConfig deviceClientConfig, AuthenticationMessageCallback authenticationMessageCallback)"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class defines the special CBS session that owns a CBS sender and receiver link. This session is responsible for sending authentication messages on behalf of all device sessions in this connection. Even when multiplexing, there is only one CBS session."
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsLinkStateCallback?alt=com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsLinkStateCallback&text=AmqpsLinkStateCallback\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
