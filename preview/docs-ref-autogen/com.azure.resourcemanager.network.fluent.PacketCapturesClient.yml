### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  id: PacketCapturesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient(com.azure.resourcemanager.network.NetworkManagementClient)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: PacketCapturesClient
  nameWithType: PacketCapturesClient
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  type: Class
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in PacketCaptures.
  syntax:
    content: public final class PacketCapturesClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient(com.azure.resourcemanager.network.NetworkManagementClient)
  id: PacketCapturesClient(com.azure.resourcemanager.network.NetworkManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: PacketCapturesClient(NetworkManagementClient client)
  nameWithType: PacketCapturesClient.PacketCapturesClient(NetworkManagementClient client)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient(NetworkManagementClient client)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient*
  type: Constructor
  package: com.azure.resourcemanager.network.fluent
  summary: Initializes an instance of PacketCapturesClient.
  syntax:
    content: public PacketCapturesClient(NetworkManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.network.NetworkManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PollerFlux<PollResult<PacketCaptureResultInner>,PacketCaptureResultInner> beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PollerFlux<PollResult<PacketCaptureResultInner>,PacketCaptureResultInner> beginCreate(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PacketCaptureResultInner beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: beginCreateWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PacketCaptureResultInner beginCreateWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<PacketCaptureResultInner> beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<PacketCaptureResultInner> beginCreateWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<Response<PacketCaptureResultInner>> beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<Response<PacketCaptureResultInner>> beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetStatus(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PollerFlux<PollResult<PacketCaptureQueryStatusResultInner>,PacketCaptureQueryStatusResultInner> beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PollerFlux<PollResult<PacketCaptureQueryStatusResultInner>,PacketCaptureQueryStatusResultInner> beginGetStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PacketCaptureQueryStatusResultInner beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PacketCaptureQueryStatusResultInner beginGetStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<PacketCaptureQueryStatusResultInner> beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<PacketCaptureQueryStatusResultInner> beginGetStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<Response<PacketCaptureQueryStatusResultInner>> beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<Response<PacketCaptureQueryStatusResultInner>> beginGetStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(java.lang.String,java.lang.String,java.lang.String)
  id: beginStop(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginStop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginStop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public void beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginStopWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public void beginStopWithoutPolling(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Void> beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginStopWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Void> beginStopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Response<Void>> beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginStopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Response<Void>> beginStopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PacketCaptureResultInner create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public PacketCaptureResultInner create(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<PacketCaptureResultInner> createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<PacketCaptureResultInner> createAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  nameWithType: PacketCapturesClient.createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  nameWithType: PacketCapturesClient.createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Create and start a packet capture on the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, PacketCaptureInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
      description: Parameters that define the create packet capture operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information about packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: delete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.delete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public void delete(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: delete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.delete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public void delete(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: get(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.get(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public PacketCaptureResultInner get(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: get(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.get(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public PacketCaptureResultInner get(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public Mono<PacketCaptureResultInner> getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public Mono<PacketCaptureResultInner> getAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(java.lang.String,java.lang.String,java.lang.String)
  id: getStatus(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PacketCaptureQueryStatusResultInner getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public PacketCaptureQueryStatusResultInner getStatus(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<PacketCaptureQueryStatusResultInner> getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<PacketCaptureQueryStatusResultInner> getStatusAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Query the status of a running packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: packetCaptureName
      type: java.lang.String
      description: The name given to the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: status of packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public Mono<Response<PacketCaptureResultInner>> getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets a packet capture session by name.
  syntax:
    content: public Mono<Response<PacketCaptureResultInner>> getWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: a packet capture session by name.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: list(String resourceGroupName, String networkWatcherName)
  nameWithType: PacketCapturesClient.list(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public PagedIterable<PacketCaptureResultInner> list(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: list(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: PacketCapturesClient.list(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public PagedIterable<PacketCaptureResultInner> list(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: PacketCapturesClient.listAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public PagedFlux<PacketCaptureResultInner> listAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: PacketCapturesClient.listAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public PagedFlux<PacketCaptureResultInner> listAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(java.lang.String,java.lang.String)
  id: listSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: listSinglePageAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: PacketCapturesClient.listSinglePageAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public Mono<PagedResponse<PacketCaptureResultInner>> listSinglePageAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: listSinglePageAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: PacketCapturesClient.listSinglePageAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all packet capture sessions within the specified resource group.
  syntax:
    content: public Mono<PagedResponse<PacketCaptureResultInner>> listSinglePageAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the Network Watcher resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
      description: list of packet capture sessions.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(java.lang.String,java.lang.String,java.lang.String)
  id: stop(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.stop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public void stop(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: stop(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.stop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public void stop(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(java.lang.String,java.lang.String,java.lang.String)
  id: stopAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Void> stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: stopAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Void> stopAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  nameWithType: PacketCapturesClient.stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: stopWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.PacketCapturesClient
  langs:
  - java
  name: stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  nameWithType: PacketCapturesClient.stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Stops a specified packet capture session.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> stopWithResponseAsync(String resourceGroupName, String networkWatcherName, String packetCaptureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: packetCaptureName
      type: java.lang.String
      description: The name of the packet capture session.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.network.NetworkManagementClient
  name: NetworkManagementClient
  nameWithType: NetworkManagementClient
  fullName: com.azure.resourcemanager.network.NetworkManagementClient
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient*
  name: PacketCapturesClient
  nameWithType: PacketCapturesClient.PacketCapturesClient
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.PacketCapturesClient
  package: com.azure.resourcemanager.network.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
  name: PacketCaptureInner
  nameWithType: PacketCaptureInner
  fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: PacketCapturesClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate*
  name: beginCreate
  nameWithType: PacketCapturesClient.beginCreate
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreate
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync*
  name: createAsync
  nameWithType: PacketCapturesClient.createAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.createAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  name: PacketCaptureResultInner
  nameWithType: PacketCaptureResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create*
  name: create
  nameWithType: PacketCapturesClient.create
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.create
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: PacketCapturesClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync*
  name: getAsync
  nameWithType: PacketCapturesClient.getAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get*
  name: get
  nameWithType: PacketCapturesClient.get
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.get
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: PacketCapturesClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete*
  name: beginDelete
  nameWithType: PacketCapturesClient.beginDelete
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDelete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync*
  name: deleteAsync
  nameWithType: PacketCapturesClient.deleteAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.deleteAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete*
  name: delete
  nameWithType: PacketCapturesClient.delete
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.delete
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync*
  name: stopWithResponseAsync
  nameWithType: PacketCapturesClient.stopWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop*
  name: beginStop
  nameWithType: PacketCapturesClient.beginStop
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStop
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync*
  name: stopAsync
  nameWithType: PacketCapturesClient.stopAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stopAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop*
  name: stop
  nameWithType: PacketCapturesClient.stop
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.stop
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync*
  name: getStatusWithResponseAsync
  nameWithType: PacketCapturesClient.getStatusWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
    name: PacketCaptureQueryStatusResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
    name: PacketCaptureQueryStatusResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus*
  name: beginGetStatus
  nameWithType: PacketCapturesClient.beginGetStatus
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatus
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
    name: PacketCaptureQueryStatusResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync*
  name: getStatusAsync
  nameWithType: PacketCapturesClient.getStatusAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatusAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  name: PacketCaptureQueryStatusResultInner
  nameWithType: PacketCaptureQueryStatusResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus*
  name: getStatus
  nameWithType: PacketCapturesClient.getStatus
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.getStatus
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: PacketCapturesClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync*
  name: listAsync
  nameWithType: PacketCapturesClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
    name: PacketCaptureResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list*
  name: list
  nameWithType: PacketCapturesClient.list
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync*
  name: beginCreateWithoutPollingWithResponseAsync
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync*
  name: beginCreateWithoutPollingAsync
  nameWithType: PacketCapturesClient.beginCreateWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling*
  name: beginCreateWithoutPolling
  nameWithType: PacketCapturesClient.beginCreateWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginCreateWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: PacketCapturesClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: PacketCapturesClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync*
  name: beginStopWithoutPollingWithResponseAsync
  nameWithType: PacketCapturesClient.beginStopWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync*
  name: beginStopWithoutPollingAsync
  nameWithType: PacketCapturesClient.beginStopWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling*
  name: beginStopWithoutPolling
  nameWithType: PacketCapturesClient.beginStopWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginStopWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
    name: PacketCaptureQueryStatusResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync*
  name: beginGetStatusWithoutPollingWithResponseAsync
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync*
  name: beginGetStatusWithoutPollingAsync
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling*
  name: beginGetStatusWithoutPolling
  nameWithType: PacketCapturesClient.beginGetStatusWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.PacketCapturesClient.beginGetStatusWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
  name: PacketCaptureResultInner>,PacketCaptureResultInner
  nameWithType: PacketCaptureResultInner>,PacketCaptureResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureResultInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
  name: PacketCaptureQueryStatusResultInner>,PacketCaptureQueryStatusResultInner
  nameWithType: PacketCaptureQueryStatusResultInner>,PacketCaptureQueryStatusResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner>,com.azure.resourcemanager.network.fluent.inner.PacketCaptureQueryStatusResultInner
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
