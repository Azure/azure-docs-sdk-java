### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner"
name: "TopicTypeInfoInner"
nameWithType: "TopicTypeInfoInner"
summary: "Properties of a topic type info."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TopicTypeInfoInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.TopicTypeInfoInner()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.TopicTypeInfoInner()"
  name: "TopicTypeInfoInner()"
  nameWithType: "TopicTypeInfoInner.TopicTypeInfoInner()"
  syntax: "public TopicTypeInfoInner()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.description()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.description()"
  name: "description()"
  nameWithType: "TopicTypeInfoInner.description()"
  summary: "Get the description property: Description of the topic type."
  syntax: "public String description()"
  desc: "Get the description property: Description of the topic type."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.displayName()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.displayName()"
  name: "displayName()"
  nameWithType: "TopicTypeInfoInner.displayName()"
  summary: "Get the display<wbr>Name property: Display Name for the topic type."
  syntax: "public String displayName()"
  desc: "Get the displayName property: Display Name for the topic type."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.provider()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.provider()"
  name: "provider()"
  nameWithType: "TopicTypeInfoInner.provider()"
  summary: "Get the provider property: Namespace of the provider of the topic type."
  syntax: "public String provider()"
  desc: "Get the provider property: Namespace of the provider of the topic type."
  returns:
    description: "the provider value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "TopicTypeInfoInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the topic type."
  syntax: "public TopicTypeProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the topic type."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState&text=TopicTypeProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.resourceRegionType()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.resourceRegionType()"
  name: "resourceRegionType()"
  nameWithType: "TopicTypeInfoInner.resourceRegionType()"
  summary: "Get the resource<wbr>Region<wbr>Type property: Region type of the resource."
  syntax: "public ResourceRegionType resourceRegionType()"
  desc: "Get the resourceRegionType property: Region type of the resource."
  returns:
    description: "the resourceRegionType value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ResourceRegionType?alt=com.azure.resourcemanager.eventgrid.models.ResourceRegionType&text=ResourceRegionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.sourceResourceFormat()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.sourceResourceFormat()"
  name: "sourceResourceFormat()"
  nameWithType: "TopicTypeInfoInner.sourceResourceFormat()"
  summary: "Get the source<wbr>Resource<wbr>Format property: Source resource format."
  syntax: "public String sourceResourceFormat()"
  desc: "Get the sourceResourceFormat property: Source resource format."
  returns:
    description: "the sourceResourceFormat value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.supportedLocations()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.supportedLocations()"
  name: "supportedLocations()"
  nameWithType: "TopicTypeInfoInner.supportedLocations()"
  summary: "Get the supported<wbr>Locations property: List of locations supported by this topic type."
  syntax: "public List<String> supportedLocations()"
  desc: "Get the supportedLocations property: List of locations supported by this topic type."
  returns:
    description: "the supportedLocations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.supportedScopesForSource()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.supportedScopesForSource()"
  name: "supportedScopesForSource()"
  nameWithType: "TopicTypeInfoInner.supportedScopesForSource()"
  summary: "Get the supported<wbr>Scopes<wbr>For<wbr>Source property: Supported source scopes."
  syntax: "public List<TopicTypeSourceScope> supportedScopesForSource()"
  desc: "Get the supportedScopesForSource property: Supported source scopes."
  returns:
    description: "the supportedScopesForSource value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope&text=TopicTypeSourceScope\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.validate()"
  name: "validate()"
  nameWithType: "TopicTypeInfoInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "TopicTypeInfoInner.withDescription(String description)"
  summary: "Set the description property: Description of the topic type."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withDescription(String description)"
  desc: "Set the description property: Description of the topic type."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "TopicTypeInfoInner.withDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: Display Name for the topic type."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withDisplayName(String displayName)"
  desc: "Set the displayName property: Display Name for the topic type."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withProvider(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withProvider(String provider)"
  name: "withProvider(String provider)"
  nameWithType: "TopicTypeInfoInner.withProvider(String provider)"
  summary: "Set the provider property: Namespace of the provider of the topic type."
  parameters:
  - description: "the provider value to set."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withProvider(String provider)"
  desc: "Set the provider property: Namespace of the provider of the topic type."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withProvisioningState(com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withProvisioningState(TopicTypeProvisioningState provisioningState)"
  name: "withProvisioningState(TopicTypeProvisioningState provisioningState)"
  nameWithType: "TopicTypeInfoInner.withProvisioningState(TopicTypeProvisioningState provisioningState)"
  summary: "Set the provisioning<wbr>State property: Provisioning state of the topic type."
  parameters:
  - description: "the provisioningState value to set."
    name: "provisioningState"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeProvisioningState&text=TopicTypeProvisioningState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withProvisioningState(TopicTypeProvisioningState provisioningState)"
  desc: "Set the provisioningState property: Provisioning state of the topic type."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withResourceRegionType(com.azure.resourcemanager.eventgrid.models.ResourceRegionType)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withResourceRegionType(ResourceRegionType resourceRegionType)"
  name: "withResourceRegionType(ResourceRegionType resourceRegionType)"
  nameWithType: "TopicTypeInfoInner.withResourceRegionType(ResourceRegionType resourceRegionType)"
  summary: "Set the resource<wbr>Region<wbr>Type property: Region type of the resource."
  parameters:
  - description: "the resourceRegionType value to set."
    name: "resourceRegionType"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ResourceRegionType?alt=com.azure.resourcemanager.eventgrid.models.ResourceRegionType&text=ResourceRegionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withResourceRegionType(ResourceRegionType resourceRegionType)"
  desc: "Set the resourceRegionType property: Region type of the resource."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSourceResourceFormat(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSourceResourceFormat(String sourceResourceFormat)"
  name: "withSourceResourceFormat(String sourceResourceFormat)"
  nameWithType: "TopicTypeInfoInner.withSourceResourceFormat(String sourceResourceFormat)"
  summary: "Set the source<wbr>Resource<wbr>Format property: Source resource format."
  parameters:
  - description: "the sourceResourceFormat value to set."
    name: "sourceResourceFormat"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicTypeInfoInner withSourceResourceFormat(String sourceResourceFormat)"
  desc: "Set the sourceResourceFormat property: Source resource format."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSupportedLocations(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSupportedLocations(List<String> supportedLocations)"
  name: "withSupportedLocations(List<String> supportedLocations)"
  nameWithType: "TopicTypeInfoInner.withSupportedLocations(List<String> supportedLocations)"
  summary: "Set the supported<wbr>Locations property: List of locations supported by this topic type."
  parameters:
  - description: "the supportedLocations value to set."
    name: "supportedLocations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TopicTypeInfoInner withSupportedLocations(List<String> supportedLocations)"
  desc: "Set the supportedLocations property: List of locations supported by this topic type."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSupportedScopesForSource(java.util.List<com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner.withSupportedScopesForSource(List<TopicTypeSourceScope> supportedScopesForSource)"
  name: "withSupportedScopesForSource(List<TopicTypeSourceScope> supportedScopesForSource)"
  nameWithType: "TopicTypeInfoInner.withSupportedScopesForSource(List<TopicTypeSourceScope> supportedScopesForSource)"
  summary: "Set the supported<wbr>Scopes<wbr>For<wbr>Source property: Supported source scopes."
  parameters:
  - description: "the supportedScopesForSource value to set."
    name: "supportedScopesForSource"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope?alt=com.azure.resourcemanager.eventgrid.models.TopicTypeSourceScope&text=TopicTypeSourceScope\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TopicTypeInfoInner withSupportedScopesForSource(List<TopicTypeSourceScope> supportedScopesForSource)"
  desc: "Set the supportedScopesForSource property: Supported source scopes."
  returns:
    description: "the TopicTypeInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicTypeInfoInner&text=TopicTypeInfoInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of a topic type info."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
