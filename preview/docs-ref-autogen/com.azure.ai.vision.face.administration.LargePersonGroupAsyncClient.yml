### YamlMime:JavaType
uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient"
fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient"
name: "LargePersonGroupAsyncClient"
nameWithType: "LargePersonGroupAsyncClient"
summary: "Initializes a new instance of the asynchronous Face<wbr>Administration<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LargePersonGroupAsyncClient**"
methods:
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(java.lang.String,com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(String personId, BinaryData imageContent)"
  name: "addFace(String personId, BinaryData imageContent)"
  nameWithType: "LargePersonGroupAsyncClient.addFace(String personId, BinaryData imageContent)"
  summary: "Add a face to a person into a Large Person Group for face identification or verification."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image to be analyzed."
    name: "imageContent"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AddFaceResult> addFace(String personId, BinaryData imageContent)"
  desc: "Add a face to a person into a Large Person Group for face identification or verification. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/add-large-person-group-person-face for more details."
  returns:
    description: "response body for adding face on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(java.lang.String,com.azure.core.util.BinaryData,java.util.List<java.lang.Integer>,com.azure.ai.vision.face.models.FaceDetectionModel,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(String personId, BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  name: "addFace(String personId, BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.addFace(String personId, BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  summary: "Add a face to a person into a Large Person Group for face identification or verification."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image to be analyzed."
    name: "imageContent"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "A face rectangle to specify the target face to be added to a person, in the format of\n 'targetFace=left,top,width,height'."
    name: "targetFace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
  - description: "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel'\n values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'."
    name: "detectionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceDetectionModel?alt=com.azure.ai.vision.face.models.FaceDetectionModel&text=FaceDetectionModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "User-provided data attached to the face. The size limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<AddFaceResult> addFace(String personId, BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  desc: "Add a face to a person into a Large Person Group for face identification or verification. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/add-large-person-group-person-face for more details."
  returns:
    description: "response body for adding face on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(String personId, String url)"
  name: "addFace(String personId, String url)"
  nameWithType: "LargePersonGroupAsyncClient.addFace(String personId, String url)"
  summary: "Add a face to a person into a Large Person Group for face identification or verification."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "URL of input image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<AddFaceResult> addFace(String personId, String url)"
  desc: "Add a face to a person into a Large Person Group for face identification or verification. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/add-large-person-group-person-face-from-url for more details."
  returns:
    description: "response body for adding face on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(java.lang.String,java.lang.String,java.util.List<java.lang.Integer>,com.azure.ai.vision.face.models.FaceDetectionModel,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.addFace(String personId, String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  name: "addFace(String personId, String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.addFace(String personId, String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  summary: "Add a face to a person into a Large Person Group for face identification or verification."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "URL of input image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A face rectangle to specify the target face to be added to a person, in the format of\n 'targetFace=left,top,width,height'."
    name: "targetFace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
  - description: "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel'\n values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'."
    name: "detectionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceDetectionModel?alt=com.azure.ai.vision.face.models.FaceDetectionModel&text=FaceDetectionModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "User-provided data attached to the face. The size limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<AddFaceResult> addFace(String personId, String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  desc: "Add a face to a person into a Large Person Group for face identification or verification. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/add-large-person-group-person-face-from-url for more details."
  returns:
    description: "response body for adding face on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.beginTrain()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.beginTrain()"
  name: "beginTrain()"
  nameWithType: "LargePersonGroupAsyncClient.beginTrain()"
  summary: "Submit a Large Person Group training task."
  syntax: "public PollerFlux<FaceTrainingResult,Void> beginTrain()"
  desc: "Submit a Large Person Group training task. Training is a crucial step that only a trained Large Person Group can be used by \"Identify From Large Person Group\". Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/train-large-person-group for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.vision.face.models.FaceTrainingResult?alt=com.azure.ai.vision.face.models.FaceTrainingResult&text=FaceTrainingResult\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.beginTrain(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.beginTrain(RequestOptions requestOptions)"
  name: "beginTrain(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.beginTrain(RequestOptions requestOptions)"
  summary: "Submit a Large Person Group training task."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginTrain(RequestOptions requestOptions)"
  desc: "Submit a Large Person Group training task. Training is a crucial step that only a trained Large Person Group can be used by \"Identify From Large Person Group\". Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/train-large-person-group for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.create(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.create(String name)"
  name: "create(String name)"
  nameWithType: "LargePersonGroupAsyncClient.create(String name)"
  summary: "Create a new Large Person Group with user-specified large<wbr>Person<wbr>Group<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> create(String name)"
  desc: "Create a new Large Person Group with user-specified largePersonGroupId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.create(java.lang.String,java.lang.String,com.azure.ai.vision.face.models.FaceRecognitionModel)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.create(String name, String userData, FaceRecognitionModel recognitionModel)"
  name: "create(String name, String userData, FaceRecognitionModel recognitionModel)"
  nameWithType: "LargePersonGroupAsyncClient.create(String name, String userData, FaceRecognitionModel recognitionModel)"
  summary: "Create a new Large Person Group with user-specified large<wbr>Person<wbr>Group<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The 'recognitionModel' associated with this face list. Supported 'recognitionModel'\n values include 'recognition_01', 'recognition_02, 'recognition_03', and 'recognition_04'. The default value is\n 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared\n with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'."
    name: "recognitionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceRecognitionModel?alt=com.azure.ai.vision.face.models.FaceRecognitionModel&text=FaceRecognitionModel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> create(String name, String userData, FaceRecognitionModel recognitionModel)"
  desc: "Create a new Large Person Group with user-specified largePersonGroupId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPerson(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPerson(String name)"
  name: "createPerson(String name)"
  nameWithType: "LargePersonGroupAsyncClient.createPerson(String name)"
  summary: "Create a new person in a specified Large Person Group."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<CreatePersonResult> createPerson(String name)"
  desc: "Create a new person in a specified Large Person Group. To add face to this person, please call \"Add Large Person Group Person Face\". Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group-person for more details."
  returns:
    description: "response of create person on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.CreatePersonResult?alt=com.azure.ai.vision.face.models.CreatePersonResult&text=CreatePersonResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPerson(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPerson(String name, String userData)"
  name: "createPerson(String name, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.createPerson(String name, String userData)"
  summary: "Create a new person in a specified Large Person Group."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<CreatePersonResult> createPerson(String name, String userData)"
  desc: "Create a new person in a specified Large Person Group. To add face to this person, please call \"Add Large Person Group Person Face\". Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group-person for more details."
  returns:
    description: "response of create person on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.CreatePersonResult?alt=com.azure.ai.vision.face.models.CreatePersonResult&text=CreatePersonResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPersonWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createPersonWithResponse(BinaryData createPersonRequest, RequestOptions requestOptions)"
  name: "createPersonWithResponse(BinaryData createPersonRequest, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.createPersonWithResponse(BinaryData createPersonRequest, RequestOptions requestOptions)"
  summary: "Create a new person in a specified Large Person Group."
  parameters:
  - description: "The createPersonRequest parameter."
    name: "createPersonRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createPersonWithResponse(BinaryData createPersonRequest, RequestOptions requestOptions)"
  desc: "Create a new person in a specified Large Person Group. To add face to this person, please call \"Add Large Person Group Person Face\". Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group-person for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Required)\n     userData: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     personId: String (Required)\n }\n```"
  returns:
    description: "response of create person along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.createWithResponse(BinaryData createRequest, RequestOptions requestOptions)"
  name: "createWithResponse(BinaryData createRequest, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.createWithResponse(BinaryData createRequest, RequestOptions requestOptions)"
  summary: "Create a new Large Person Group with user-specified large<wbr>Person<wbr>Group<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "The createRequest parameter."
    name: "createRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> createWithResponse(BinaryData createRequest, RequestOptions requestOptions)"
  desc: "Create a new Large Person Group with user-specified largePersonGroupId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/create-large-person-group for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Required)\n     userData: String (Optional)\n     recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.delete()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.delete()"
  name: "delete()"
  nameWithType: "LargePersonGroupAsyncClient.delete()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/delete-large-person-group for more details."
  syntax: "public Mono<Void> delete()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteFace(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteFace(String personId, String persistedFaceId)"
  name: "deleteFace(String personId, String persistedFaceId)"
  nameWithType: "LargePersonGroupAsyncClient.deleteFace(String personId, String persistedFaceId)"
  summary: "Delete a face from a person in a Large Person Group by specified large<wbr>Person<wbr>Group<wbr>Id, person<wbr>Id and persisted<wbr>Face<wbr>Id."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteFace(String personId, String persistedFaceId)"
  desc: "Delete a face from a person in a Large Person Group by specified largePersonGroupId, personId and persistedFaceId. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group-person-face for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteFaceWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  name: "deleteFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.deleteFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  summary: "Delete a face from a person in a Large Person Group by specified large<wbr>Person<wbr>Group<wbr>Id, person<wbr>Id and persisted<wbr>Face<wbr>Id."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  desc: "Delete a face from a person in a Large Person Group by specified largePersonGroupId, personId and persistedFaceId. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group-person-face for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deletePerson(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deletePerson(String personId)"
  name: "deletePerson(String personId)"
  nameWithType: "LargePersonGroupAsyncClient.deletePerson(String personId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/delete-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deletePerson(String personId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group-person for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deletePersonWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deletePersonWithResponse(String personId, RequestOptions requestOptions)"
  name: "deletePersonWithResponse(String personId, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.deletePersonWithResponse(String personId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/delete-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deletePersonWithResponse(String personId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group-person for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.deleteWithResponse(RequestOptions requestOptions)"
  name: "deleteWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.deleteWithResponse(RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/delete-large-person-group for more details."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteWithResponse(RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/delete-large-person-group for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.get()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.get()"
  name: "get()"
  nameWithType: "LargePersonGroupAsyncClient.get()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group for more details."
  syntax: "public Mono<LargePersonGroup> get()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group for more details."
  returns:
    description: "the container of the uploaded person data, including face recognition feature, and up to 1,000,000 people\n on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroup?alt=com.azure.ai.vision.face.models.LargePersonGroup&text=LargePersonGroup\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.get(java.lang.Boolean)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.get(Boolean returnRecognitionModel)"
  name: "get(Boolean returnRecognitionModel)"
  nameWithType: "LargePersonGroupAsyncClient.get(Boolean returnRecognitionModel)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group for more details."
  parameters:
  - description: "Return 'recognitionModel' or not. The default value is false."
    name: "returnRecognitionModel"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Mono<LargePersonGroup> get(Boolean returnRecognitionModel)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group for more details."
  returns:
    description: "the container of the uploaded person data, including face recognition feature, and up to 1,000,000 people\n on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroup?alt=com.azure.ai.vision.face.models.LargePersonGroup&text=LargePersonGroup\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getFace(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getFace(String personId, String persistedFaceId)"
  name: "getFace(String personId, String persistedFaceId)"
  nameWithType: "LargePersonGroupAsyncClient.getFace(String personId, String persistedFaceId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group-person-face for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<LargePersonGroupPersonFace> getFace(String personId, String persistedFaceId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-person-face for more details."
  returns:
    description: "face resource for large person group person on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroupPersonFace?alt=com.azure.ai.vision.face.models.LargePersonGroupPersonFace&text=LargePersonGroupPersonFace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getFaceWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  name: "getFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group-person-face for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getFaceWithResponse(String personId, String persistedFaceId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-person-face for more details.\n\n**Response Body Schema**\n\n```java\n{\n     persistedFaceId: String (Required)\n     userData: String (Optional)\n }\n```"
  returns:
    description: "face resource for large person group person along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroups()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroups()"
  name: "getLargePersonGroups()"
  nameWithType: "LargePersonGroupAsyncClient.getLargePersonGroups()"
  summary: "List all existing Large Person Groups' large<wbr>Person<wbr>Group<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  syntax: "public Mono<List<LargePersonGroup>> getLargePersonGroups()"
  desc: "List all existing Large Person Groups' largePersonGroupId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-groups for more details."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroup?alt=com.azure.ai.vision.face.models.LargePersonGroup&text=LargePersonGroup\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroups(java.lang.String,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroups(String start, Integer top, Boolean returnRecognitionModel)"
  name: "getLargePersonGroups(String start, Integer top, Boolean returnRecognitionModel)"
  nameWithType: "LargePersonGroupAsyncClient.getLargePersonGroups(String start, Integer top, Boolean returnRecognitionModel)"
  summary: "List all existing Large Person Groups' large<wbr>Person<wbr>Group<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Return 'recognitionModel' or not. The default value is false."
    name: "returnRecognitionModel"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Mono<List<LargePersonGroup>> getLargePersonGroups(String start, Integer top, Boolean returnRecognitionModel)"
  desc: "List all existing Large Person Groups' largePersonGroupId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-groups for more details."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroup?alt=com.azure.ai.vision.face.models.LargePersonGroup&text=LargePersonGroup\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroupsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getLargePersonGroupsWithResponse(RequestOptions requestOptions)"
  name: "getLargePersonGroupsWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getLargePersonGroupsWithResponse(RequestOptions requestOptions)"
  summary: "List all existing Large Person Groups' large<wbr>Person<wbr>Group<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getLargePersonGroupsWithResponse(RequestOptions requestOptions)"
  desc: "List all existing Large Person Groups' largePersonGroupId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-groups for more details.\n\n**Query Parameters**\n\n    | ---------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name                   | Type    | Required | Description                                                                                        |\n    | start                  | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top                    | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n    | returnRecognitionModel | Boolean | No       | Return 'recognitionModel' or not. The default value is false.                                      |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         name: String (Required)\n         userData: String (Optional)\n         recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n         largePersonGroupId: String (Required)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPerson(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPerson(String personId)"
  name: "getPerson(String personId)"
  nameWithType: "LargePersonGroupAsyncClient.getPerson(String personId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<LargePersonGroupPerson> getPerson(String personId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-person for more details."
  returns:
    description: "the person in a specified large person group on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroupPerson?alt=com.azure.ai.vision.face.models.LargePersonGroupPerson&text=LargePersonGroupPerson\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersonWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersonWithResponse(String personId, RequestOptions requestOptions)"
  name: "getPersonWithResponse(String personId, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getPersonWithResponse(String personId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getPersonWithResponse(String personId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-person for more details.\n\n**Response Body Schema**\n\n```java\n{\n     personId: String (Required)\n     name: String (Required)\n     userData: String (Optional)\n     persistedFaceIds (Optional): [\n         String (Optional)\n     ]\n }\n```"
  returns:
    description: "the person in a specified large person group along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersons()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersons()"
  name: "getPersons()"
  nameWithType: "LargePersonGroupAsyncClient.getPersons()"
  summary: "List all persons' information in the specified Large Person Group, including person<wbr>Id, name, user<wbr>Data and persisted<wbr>Face<wbr>Ids of registered person faces."
  syntax: "public Mono<List<LargePersonGroupPerson>> getPersons()"
  desc: "List all persons' information in the specified Large Person Group, including personId, name, userData and persistedFaceIds of registered person faces. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-persons for more details."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroupPerson?alt=com.azure.ai.vision.face.models.LargePersonGroupPerson&text=LargePersonGroupPerson\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersons(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersons(String start, Integer top)"
  name: "getPersons(String start, Integer top)"
  nameWithType: "LargePersonGroupAsyncClient.getPersons(String start, Integer top)"
  summary: "List all persons' information in the specified Large Person Group, including person<wbr>Id, name, user<wbr>Data and persisted<wbr>Face<wbr>Ids of registered person faces."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public Mono<List<LargePersonGroupPerson>> getPersons(String start, Integer top)"
  desc: "List all persons' information in the specified Large Person Group, including personId, name, userData and persistedFaceIds of registered person faces. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-persons for more details."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargePersonGroupPerson?alt=com.azure.ai.vision.face.models.LargePersonGroupPerson&text=LargePersonGroupPerson\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersonsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getPersonsWithResponse(RequestOptions requestOptions)"
  name: "getPersonsWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getPersonsWithResponse(RequestOptions requestOptions)"
  summary: "List all persons' information in the specified Large Person Group, including person<wbr>Id, name, user<wbr>Data and persisted<wbr>Face<wbr>Ids of registered person faces."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getPersonsWithResponse(RequestOptions requestOptions)"
  desc: "List all persons' information in the specified Large Person Group, including personId, name, userData and persistedFaceIds of registered person faces. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-persons for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         personId: String (Required)\n         name: String (Required)\n         userData: String (Optional)\n         persistedFaceIds (Optional): [\n             String (Optional)\n         ]\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getTrainingStatus()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getTrainingStatus()"
  name: "getTrainingStatus()"
  nameWithType: "LargePersonGroupAsyncClient.getTrainingStatus()"
  summary: "To check Large Person Group training status completed or still ongoing."
  syntax: "public Mono<FaceTrainingResult> getTrainingStatus()"
  desc: "To check Large Person Group training status completed or still ongoing. Large Person Group training is an asynchronous operation triggered by \"Train Large Person Group\" API. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-training-status for more details."
  returns:
    description: "training result of a container on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.vision.face.models.FaceTrainingResult?alt=com.azure.ai.vision.face.models.FaceTrainingResult&text=FaceTrainingResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getTrainingStatusWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getTrainingStatusWithResponse(RequestOptions requestOptions)"
  name: "getTrainingStatusWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getTrainingStatusWithResponse(RequestOptions requestOptions)"
  summary: "To check Large Person Group training status completed or still ongoing."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getTrainingStatusWithResponse(RequestOptions requestOptions)"
  desc: "To check Large Person Group training status completed or still ongoing. Large Person Group training is an asynchronous operation triggered by \"Train Large Person Group\" API. Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group-training-status for more details.\n\n**Response Body Schema**\n\n```java\n{\n     status: String(notStarted/running/succeeded/failed) (Required)\n     createdDateTime: OffsetDateTime (Required)\n     lastActionDateTime: OffsetDateTime (Required)\n     lastSuccessfulTrainingDateTime: OffsetDateTime (Required)\n     message: String (Optional)\n }\n```"
  returns:
    description: "training result of a container along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.getWithResponse(RequestOptions requestOptions)"
  name: "getWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.getWithResponse(RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/get-large-person-group for more details."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getWithResponse(RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/get-large-person-group for more details.\n\n**Query Parameters**\n\n    | ---------------------- | ------- | -------- | ------------------------------------------------------------- |\n    | Name                   | Type    | Required | Description                                                   |\n    | returnRecognitionModel | Boolean | No       | Return 'recognitionModel' or not. The default value is false. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     userData: String (Optional)\n     recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n     largePersonGroupId: String (Required)\n }\n```"
  returns:
    description: "the container of the uploaded person data, including face recognition feature, and up to 1,000,000 people\n along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.update()"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.update()"
  name: "update()"
  nameWithType: "LargePersonGroupAsyncClient.update()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group for more details."
  syntax: "public Mono<Void> update()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.update(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.update(String name, String userData)"
  name: "update(String name, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.update(String name, String userData)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group for more details."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> update(String name, String userData)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFace(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFace(String personId, String persistedFaceId)"
  name: "updateFace(String personId, String persistedFaceId)"
  nameWithType: "LargePersonGroupAsyncClient.updateFace(String personId, String persistedFaceId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> updateFace(String personId, String persistedFaceId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFace(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFace(String personId, String persistedFaceId, String userData)"
  name: "updateFace(String personId, String persistedFaceId, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.updateFace(String personId, String persistedFaceId, String userData)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "User-provided data attached to the face. The length limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> updateFace(String personId, String persistedFaceId, String userData)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFaceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateFaceWithResponse(String personId, String persistedFaceId, BinaryData updateFaceRequest, RequestOptions requestOptions)"
  name: "updateFaceWithResponse(String personId, String persistedFaceId, BinaryData updateFaceRequest, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.updateFaceWithResponse(String personId, String persistedFaceId, BinaryData updateFaceRequest, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The updateFaceRequest parameter."
    name: "updateFaceRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> updateFaceWithResponse(String personId, String persistedFaceId, BinaryData updateFaceRequest, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person-face for more details.\n\n**Request Body Schema**\n\n```java\n{\n     userData: String (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePerson(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePerson(String personId)"
  name: "updatePerson(String personId)"
  nameWithType: "LargePersonGroupAsyncClient.updatePerson(String personId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> updatePerson(String personId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePerson(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePerson(String personId, String name, String userData)"
  name: "updatePerson(String personId, String name, String userData)"
  nameWithType: "LargePersonGroupAsyncClient.updatePerson(String personId, String name, String userData)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> updatePerson(String personId, String name, String userData)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person for more details."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePersonWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updatePersonWithResponse(String personId, BinaryData updatePersonRequest, RequestOptions requestOptions)"
  name: "updatePersonWithResponse(String personId, BinaryData updatePersonRequest, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.updatePersonWithResponse(String personId, BinaryData updatePersonRequest, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group-person for more details."
  parameters:
  - description: "ID of the person."
    name: "personId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The updatePersonRequest parameter."
    name: "updatePersonRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> updatePersonWithResponse(String personId, BinaryData updatePersonRequest, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group-person for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Optional)\n     userData: String (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargePersonGroupAsyncClient.updateWithResponse(BinaryData updateRequest, RequestOptions requestOptions)"
  name: "updateWithResponse(BinaryData updateRequest, RequestOptions requestOptions)"
  nameWithType: "LargePersonGroupAsyncClient.updateWithResponse(BinaryData updateRequest, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/person-group-operations/update-large-person-group for more details."
  parameters:
  - description: "The updateRequest parameter."
    name: "updateRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> updateWithResponse(BinaryData updateRequest, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/person-group-operations/update-large-person-group for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Optional)\n     userData: String (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous FaceAdministrationClient type."
metadata: {}
package: "com.azure.ai.vision.face.administration"
artifact: com.azure:azure-ai-vision-face:1.0.0-beta.2
