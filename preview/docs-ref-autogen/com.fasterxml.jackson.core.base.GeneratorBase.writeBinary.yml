### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.base.GeneratorBase.writeBinary*"
fullName: "com.fasterxml.jackson.core.base.GeneratorBase.writeBinary"
name: "writeBinary"
nameWithType: "GeneratorBase.writeBinary"
members:
- uid: "com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)"
  fullName: "com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(Base64Variant b64variant, InputStream data, int dataLength)"
  name: "writeBinary(Base64Variant b64variant, InputStream data, int dataLength)"
  nameWithType: "GeneratorBase.writeBinary(Base64Variant b64variant, InputStream data, int dataLength)"
  summary: "Method similar to <xref uid=\"com.fasterxml.jackson.core.base.GeneratorBase.writeBinary*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeBinary(Base64Variant,byte[],int,int)\"></xref>, but where input is provided through a stream, allowing for incremental writes without holding the whole input in memory."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)"
  parameters:
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  - name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "dataLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.base"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
