### YamlMime:JavaType
uid: "com.azure.resourcemanager.frontdoor.models.Backend"
fullName: "com.azure.resourcemanager.frontdoor.models.Backend"
name: "Backend"
nameWithType: "Backend"
summary: "Backend address of a frontDoor load balancer."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Backend"
constructors:
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.Backend()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.Backend()"
  name: "Backend()"
  nameWithType: "Backend.Backend()"
  syntax: "public Backend()"
methods:
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.address()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.address()"
  name: "address()"
  nameWithType: "Backend.address()"
  summary: "Get the address property: Location of the backend (IP address or FQDN)."
  syntax: "public String address()"
  returns:
    description: "the address value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.backendHostHeader()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.backendHostHeader()"
  name: "backendHostHeader()"
  nameWithType: "Backend.backendHostHeader()"
  summary: "Get the backendHostHeader property: The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
  syntax: "public String backendHostHeader()"
  returns:
    description: "the backendHostHeader value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.enabledState()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.enabledState()"
  name: "enabledState()"
  nameWithType: "Backend.enabledState()"
  summary: "Get the enabledState property: Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'."
  syntax: "public BackendEnabledState enabledState()"
  returns:
    description: "the enabledState value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendEnabledState?alt=com.azure.resourcemanager.frontdoor.models.BackendEnabledState&text=BackendEnabledState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.httpPort()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.httpPort()"
  name: "httpPort()"
  nameWithType: "Backend.httpPort()"
  summary: "Get the httpPort property: The HTTP TCP port number. Must be between 1 and 65535."
  syntax: "public Integer httpPort()"
  returns:
    description: "the httpPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.httpsPort()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.httpsPort()"
  name: "httpsPort()"
  nameWithType: "Backend.httpsPort()"
  summary: "Get the httpsPort property: The HTTPS TCP port number. Must be between 1 and 65535."
  syntax: "public Integer httpsPort()"
  returns:
    description: "the httpsPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.priority()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.priority()"
  name: "priority()"
  nameWithType: "Backend.priority()"
  summary: "Get the priority property: Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy."
  syntax: "public Integer priority()"
  returns:
    description: "the priority value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.privateEndpointStatus()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.privateEndpointStatus()"
  name: "privateEndpointStatus()"
  nameWithType: "Backend.privateEndpointStatus()"
  summary: "Get the privateEndpointStatus property: The Approval status for the connection to the Private Link."
  syntax: "public PrivateEndpointStatus privateEndpointStatus()"
  returns:
    description: "the privateEndpointStatus value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.PrivateEndpointStatus?alt=com.azure.resourcemanager.frontdoor.models.PrivateEndpointStatus&text=PrivateEndpointStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkAlias()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkAlias()"
  name: "privateLinkAlias()"
  nameWithType: "Backend.privateLinkAlias()"
  summary: "Get the privateLinkAlias property: The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'."
  syntax: "public String privateLinkAlias()"
  returns:
    description: "the privateLinkAlias value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkApprovalMessage()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkApprovalMessage()"
  name: "privateLinkApprovalMessage()"
  nameWithType: "Backend.privateLinkApprovalMessage()"
  summary: "Get the privateLinkApprovalMessage property: A custom message to be included in the approval request to connect to the Private Link."
  syntax: "public String privateLinkApprovalMessage()"
  returns:
    description: "the privateLinkApprovalMessage value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkLocation()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkLocation()"
  name: "privateLinkLocation()"
  nameWithType: "Backend.privateLinkLocation()"
  summary: "Get the privateLinkLocation property: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated."
  syntax: "public String privateLinkLocation()"
  returns:
    description: "the privateLinkLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkResourceId()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.privateLinkResourceId()"
  name: "privateLinkResourceId()"
  nameWithType: "Backend.privateLinkResourceId()"
  summary: "Get the privateLinkResourceId property: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'."
  syntax: "public String privateLinkResourceId()"
  returns:
    description: "the privateLinkResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.validate()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.validate()"
  name: "validate()"
  nameWithType: "Backend.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.weight()"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.weight()"
  name: "weight()"
  nameWithType: "Backend.weight()"
  summary: "Get the weight property: Weight of this endpoint for load balancing purposes."
  syntax: "public Integer weight()"
  returns:
    description: "the weight value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withAddress(String address)"
  name: "withAddress(String address)"
  nameWithType: "Backend.withAddress(String address)"
  summary: "Set the address property: Location of the backend (IP address or FQDN)."
  parameters:
  - description: "the address value to set."
    name: "address"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withAddress(String address)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withBackendHostHeader(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withBackendHostHeader(String backendHostHeader)"
  name: "withBackendHostHeader(String backendHostHeader)"
  nameWithType: "Backend.withBackendHostHeader(String backendHostHeader)"
  summary: "Set the backendHostHeader property: The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
  parameters:
  - description: "the backendHostHeader value to set."
    name: "backendHostHeader"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withBackendHostHeader(String backendHostHeader)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withEnabledState(com.azure.resourcemanager.frontdoor.models.BackendEnabledState)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withEnabledState(BackendEnabledState enabledState)"
  name: "withEnabledState(BackendEnabledState enabledState)"
  nameWithType: "Backend.withEnabledState(BackendEnabledState enabledState)"
  summary: "Set the enabledState property: Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'."
  parameters:
  - description: "the enabledState value to set."
    name: "enabledState"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendEnabledState?alt=com.azure.resourcemanager.frontdoor.models.BackendEnabledState&text=BackendEnabledState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withEnabledState(BackendEnabledState enabledState)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withHttpPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withHttpPort(Integer httpPort)"
  name: "withHttpPort(Integer httpPort)"
  nameWithType: "Backend.withHttpPort(Integer httpPort)"
  summary: "Set the httpPort property: The HTTP TCP port number. Must be between 1 and 65535."
  parameters:
  - description: "the httpPort value to set."
    name: "httpPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withHttpPort(Integer httpPort)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withHttpsPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withHttpsPort(Integer httpsPort)"
  name: "withHttpsPort(Integer httpsPort)"
  nameWithType: "Backend.withHttpsPort(Integer httpsPort)"
  summary: "Set the httpsPort property: The HTTPS TCP port number. Must be between 1 and 65535."
  parameters:
  - description: "the httpsPort value to set."
    name: "httpsPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withHttpsPort(Integer httpsPort)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withPriority(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withPriority(Integer priority)"
  name: "withPriority(Integer priority)"
  nameWithType: "Backend.withPriority(Integer priority)"
  summary: "Set the priority property: Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy."
  parameters:
  - description: "the priority value to set."
    name: "priority"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withPriority(Integer priority)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkAlias(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkAlias(String privateLinkAlias)"
  name: "withPrivateLinkAlias(String privateLinkAlias)"
  nameWithType: "Backend.withPrivateLinkAlias(String privateLinkAlias)"
  summary: "Set the privateLinkAlias property: The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'."
  parameters:
  - description: "the privateLinkAlias value to set."
    name: "privateLinkAlias"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withPrivateLinkAlias(String privateLinkAlias)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkApprovalMessage(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkApprovalMessage(String privateLinkApprovalMessage)"
  name: "withPrivateLinkApprovalMessage(String privateLinkApprovalMessage)"
  nameWithType: "Backend.withPrivateLinkApprovalMessage(String privateLinkApprovalMessage)"
  summary: "Set the privateLinkApprovalMessage property: A custom message to be included in the approval request to connect to the Private Link."
  parameters:
  - description: "the privateLinkApprovalMessage value to set."
    name: "privateLinkApprovalMessage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withPrivateLinkApprovalMessage(String privateLinkApprovalMessage)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkLocation(String privateLinkLocation)"
  name: "withPrivateLinkLocation(String privateLinkLocation)"
  nameWithType: "Backend.withPrivateLinkLocation(String privateLinkLocation)"
  summary: "Set the privateLinkLocation property: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated."
  parameters:
  - description: "the privateLinkLocation value to set."
    name: "privateLinkLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withPrivateLinkLocation(String privateLinkLocation)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withPrivateLinkResourceId(String privateLinkResourceId)"
  name: "withPrivateLinkResourceId(String privateLinkResourceId)"
  nameWithType: "Backend.withPrivateLinkResourceId(String privateLinkResourceId)"
  summary: "Set the privateLinkResourceId property: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'."
  parameters:
  - description: "the privateLinkResourceId value to set."
    name: "privateLinkResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withPrivateLinkResourceId(String privateLinkResourceId)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.Backend.withWeight(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.frontdoor.models.Backend.withWeight(Integer weight)"
  name: "withWeight(Integer weight)"
  nameWithType: "Backend.withWeight(Integer weight)"
  summary: "Set the weight property: Weight of this endpoint for load balancing purposes."
  parameters:
  - description: "the weight value to set."
    name: "weight"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Backend withWeight(Integer weight)"
  returns:
    description: "the Backend object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.Backend?alt=com.azure.resourcemanager.frontdoor.models.Backend&text=Backend\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.frontdoor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.0.0-beta.1
