### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  id: LinuxUserConfiguration
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration()
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid()
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey()
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid()
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid(java.lang.Integer)
  langs:
  - java
  name: LinuxUserConfiguration
  nameWithType: LinuxUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Properties used to create a user Account on a Linux Compute Node.
  syntax:
    content: public class LinuxUserConfiguration
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration()
  id: LinuxUserConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: LinuxUserConfiguration()
  nameWithType: LinuxUserConfiguration.LinuxUserConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public LinuxUserConfiguration()
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid()
  id: gid()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: gid()
  nameWithType: LinuxUserConfiguration.gid()
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid()
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
  syntax:
    content: public Integer gid()
    return:
      type: java.lang.Integer
      description: the gid value
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey()
  id: sshPrivateKey()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: sshPrivateKey()
  nameWithType: LinuxUserConfiguration.sshPrivateKey()
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey()
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done).
  syntax:
    content: public String sshPrivateKey()
    return:
      type: java.lang.String
      description: the sshPrivateKey value
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid()
  id: uid()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: uid()
  nameWithType: LinuxUserConfiguration.uid()
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid()
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
  syntax:
    content: public Integer uid()
    return:
      type: java.lang.Integer
      description: the uid value
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid(java.lang.Integer)
  id: withGid(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: withGid(Integer gid)
  nameWithType: LinuxUserConfiguration.withGid(Integer gid)
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid(Integer gid)
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
  syntax:
    content: public LinuxUserConfiguration withGid(Integer gid)
    parameters:
    - id: gid
      type: java.lang.Integer
      description: the gid value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
      description: the LinuxUserConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey(java.lang.String)
  id: withSshPrivateKey(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: withSshPrivateKey(String sshPrivateKey)
  nameWithType: LinuxUserConfiguration.withSshPrivateKey(String sshPrivateKey)
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey(String sshPrivateKey)
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done).
  syntax:
    content: public LinuxUserConfiguration withSshPrivateKey(String sshPrivateKey)
    parameters:
    - id: sshPrivateKey
      type: java.lang.String
      description: the sshPrivateKey value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
      description: the LinuxUserConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid(java.lang.Integer)
  id: withUid(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  langs:
  - java
  name: withUid(Integer uid)
  nameWithType: LinuxUserConfiguration.withUid(Integer uid)
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid(Integer uid)
  overload: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
  syntax:
    content: public LinuxUserConfiguration withUid(Integer uid)
    parameters:
    - id: uid
      type: java.lang.Integer
      description: the uid value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
      description: the LinuxUserConfiguration object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration*
  name: LinuxUserConfiguration
  nameWithType: LinuxUserConfiguration.LinuxUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.LinuxUserConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid*
  name: uid
  nameWithType: LinuxUserConfiguration.uid
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid*
  name: withUid
  nameWithType: LinuxUserConfiguration.withUid
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid*
  name: gid
  nameWithType: LinuxUserConfiguration.gid
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid*
  name: withGid
  nameWithType: LinuxUserConfiguration.withGid
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey*
  name: sshPrivateKey
  nameWithType: LinuxUserConfiguration.sshPrivateKey
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey*
  name: withSshPrivateKey
  nameWithType: LinuxUserConfiguration.withSshPrivateKey
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
