### YamlMime:JavaType
uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes"
fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes"
name: "AzureBlobFileAttributes"
nameWithType: "AzureBlobFileAttributes"
summary: "Provides support for attributes associated with a file stored as a blob in Azure Storage."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureBlobFileAttributes implements BasicFileAttributes"
methods:
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.accessTier()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.accessTier()"
  name: "accessTier()"
  nameWithType: "AzureBlobFileAttributes.accessTier()"
  summary: "Returns the tier of the blob."
  syntax: "public AccessTier accessTier()"
  desc: "Returns the tier of the blob. This is only set for Page blobs on a premium storage account or for Block blobs on blob storage or general purpose V2 account. Returns null if this is a virtual directory."
  returns:
    description: "the tier of the blob or null if this is a virtual directory"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.accessTierChangeTime()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.accessTierChangeTime()"
  name: "accessTierChangeTime()"
  nameWithType: "AzureBlobFileAttributes.accessTierChangeTime()"
  summary: "Returns the time when the access tier for the blob was last changed or null if this is a virtual directory."
  syntax: "public OffsetDateTime accessTierChangeTime()"
  desc: "Returns the time when the access tier for the blob was last changed or null if this is a virtual directory."
  returns:
    description: "the time when the access tier for the blob was last changed or null if this is a virtual directory"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.archiveStatus()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.archiveStatus()"
  name: "archiveStatus()"
  nameWithType: "AzureBlobFileAttributes.archiveStatus()"
  summary: "Returns the archive status of the blob."
  syntax: "public ArchiveStatus archiveStatus()"
  desc: "Returns the archive status of the blob. This is only for blobs on a blob storage and general purpose v2 account. Returns null if this is a virtual directory."
  returns:
    description: "the archive status of the blob or null if this is a virtual directory"
    type: "<xref href=\"com.azure.storage.blob.models.ArchiveStatus?alt=com.azure.storage.blob.models.ArchiveStatus&text=ArchiveStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.blobHttpHeaders()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.blobHttpHeaders()"
  name: "blobHttpHeaders()"
  nameWithType: "AzureBlobFileAttributes.blobHttpHeaders()"
  summary: "Returns the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref> of the blob or null if this is a virtual directory."
  syntax: "public BlobHttpHeaders blobHttpHeaders()"
  desc: "Returns the <xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref> of the blob or null if this is a virtual directory."
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref> or null if this is a virtual directory"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.blobType()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.blobType()"
  name: "blobType()"
  nameWithType: "AzureBlobFileAttributes.blobType()"
  summary: "Returns the type of the blob or null if this is a virtual directory"
  syntax: "public BlobType blobType()"
  desc: "Returns the type of the blob or null if this is a virtual directory"
  returns:
    description: "the type of the blob or null if this is a virtual directory"
    type: "<xref href=\"com.azure.storage.blob.models.BlobType?alt=com.azure.storage.blob.models.BlobType&text=BlobType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyCompletionTime()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyCompletionTime()"
  name: "copyCompletionTime()"
  nameWithType: "AzureBlobFileAttributes.copyCompletionTime()"
  summary: "Returns the completion time of the last copy operation."
  syntax: "public OffsetDateTime copyCompletionTime()"
  desc: "Returns the completion time of the last copy operation. If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory."
  returns:
    description: "the completion time of the last copy operation or null if this is a virtual directory"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyId()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyId()"
  name: "copyId()"
  nameWithType: "AzureBlobFileAttributes.copyId()"
  summary: "Returns the identifier of the last copy operation."
  syntax: "public String copyId()"
  desc: "Returns the identifier of the last copy operation. If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory"
  returns:
    description: "the identifier of the last copy operation or null if this is a virtual directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyProgress()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyProgress()"
  name: "copyProgress()"
  nameWithType: "AzureBlobFileAttributes.copyProgress()"
  summary: "Returns the number of bytes copied and total bytes in the source from the last copy operation (bytes copied/total bytes)."
  syntax: "public String copyProgress()"
  desc: "Returns the number of bytes copied and total bytes in the source from the last copy operation (bytes copied/total bytes). If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory"
  returns:
    description: "the number of bytes copied and total bytes in the source from the last copy operation null if this is a\n virtual directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copySource()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copySource()"
  name: "copySource()"
  nameWithType: "AzureBlobFileAttributes.copySource()"
  summary: "Returns the source blob URL from the last copy operation."
  syntax: "public String copySource()"
  desc: "Returns the source blob URL from the last copy operation. If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory"
  returns:
    description: "the source blob URL from the last copy operation or null if this is a virtual directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatus()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatus()"
  name: "copyStatus()"
  nameWithType: "AzureBlobFileAttributes.copyStatus()"
  summary: "Returns the status of the last copy operation."
  syntax: "public CopyStatusType copyStatus()"
  desc: "Returns the status of the last copy operation. If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory"
  returns:
    description: "the status of the last copy operation or null if this is a virtual directory"
    type: "<xref href=\"com.azure.storage.blob.models.CopyStatusType?alt=com.azure.storage.blob.models.CopyStatusType&text=CopyStatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatusDescription()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatusDescription()"
  name: "copyStatusDescription()"
  nameWithType: "AzureBlobFileAttributes.copyStatusDescription()"
  summary: "Returns the description of the last copy failure, this is set when the <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getCopyStatus\"></xref> is <xref uid=\"com.azure.storage.blob.models.CopyStatusType.FAILED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"failed\"></xref> or <xref uid=\"com.azure.storage.blob.models.CopyStatusType.ABORTED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"aborted\"></xref>."
  syntax: "public String copyStatusDescription()"
  desc: "Returns the description of the last copy failure, this is set when the <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes.copyStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getCopyStatus\"></xref> is <xref uid=\"com.azure.storage.blob.models.CopyStatusType.FAILED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"failed\"></xref> or <xref uid=\"com.azure.storage.blob.models.CopyStatusType.ABORTED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"aborted\"></xref>. If this blob hasn't been the target of a copy operation or has been modified since this won't be set. Returns null if this is a virtual directory."
  returns:
    description: "the description of the last copy failure or null if this is a virtual directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.creationTime()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.creationTime()"
  name: "creationTime()"
  nameWithType: "AzureBlobFileAttributes.creationTime()"
  summary: "Returns the creation time."
  syntax: "public FileTime creationTime()"
  desc: "Returns the creation time. The creation time is the time that the file was created. Returns null if this is a virtual directory."
  returns:
    description: "The creation time or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.eTag()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.eTag()"
  name: "eTag()"
  nameWithType: "AzureBlobFileAttributes.eTag()"
  summary: "Returns the e<wbr>Tag of the blob or null if this is a virtual directory"
  syntax: "public String eTag()"
  desc: "Returns the eTag of the blob or null if this is a virtual directory"
  returns:
    description: "the eTag of the blob or null if this is a virtual directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.fileKey()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.fileKey()"
  name: "fileKey()"
  nameWithType: "AzureBlobFileAttributes.fileKey()"
  summary: "Returns the url of the resource."
  syntax: "public Object fileKey()"
  desc: "Returns the url of the resource."
  returns:
    description: "The file key, which is the url."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isAccessTierInferred()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isAccessTierInferred()"
  name: "isAccessTierInferred()"
  nameWithType: "AzureBlobFileAttributes.isAccessTierInferred()"
  summary: "Returns the status of the tier being inferred for the blob."
  syntax: "public Boolean isAccessTierInferred()"
  desc: "Returns the status of the tier being inferred for the blob. This is only set for Page blobs on a premium storage account or for Block blobs on blob storage or general purpose V2 account. Returns null if this is a virtual directory."
  returns:
    description: "the status of the tier being inferred for the blob or null if this is a virtual directory"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isDirectory()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isDirectory()"
  name: "isDirectory()"
  nameWithType: "AzureBlobFileAttributes.isDirectory()"
  summary: "Tells whether the file is a directory."
  syntax: "public boolean isDirectory()"
  desc: "Tells whether the file is a directory.\n\nWill return true if the directory is a concrete or virtual directory. See <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute<?>...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual and concrete directories."
  returns:
    description: "whether the file is a directory"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isOther()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isOther()"
  name: "isOther()"
  nameWithType: "AzureBlobFileAttributes.isOther()"
  summary: "Tells whether the file is something other than a regular file, directory, or symbolic link."
  syntax: "public boolean isOther()"
  desc: "Tells whether the file is something other than a regular file, directory, or symbolic link."
  returns:
    description: "false. No other object types are supported."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isRegularFile()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isRegularFile()"
  name: "isRegularFile()"
  nameWithType: "AzureBlobFileAttributes.isRegularFile()"
  summary: "Tells whether the file is a regular file with opaque content."
  syntax: "public boolean isRegularFile()"
  desc: "Tells whether the file is a regular file with opaque content."
  returns:
    description: "whether the file is a regular file."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isServerEncrypted()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isServerEncrypted()"
  name: "isServerEncrypted()"
  nameWithType: "AzureBlobFileAttributes.isServerEncrypted()"
  summary: "Returns the status of the blob being encrypted on the server or null if this is a virtual directory."
  syntax: "public Boolean isServerEncrypted()"
  desc: "Returns the status of the blob being encrypted on the server or null if this is a virtual directory."
  returns:
    description: "the status of the blob being encrypted on the server or null if this is a virtual directory"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isSymbolicLink()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isSymbolicLink()"
  name: "isSymbolicLink()"
  nameWithType: "AzureBlobFileAttributes.isSymbolicLink()"
  summary: "Tells whether the file is a symbolic link."
  syntax: "public boolean isSymbolicLink()"
  desc: "Tells whether the file is a symbolic link."
  returns:
    description: "false. Symbolic links are not supported."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isVirtualDirectory()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.isVirtualDirectory()"
  name: "isVirtualDirectory()"
  nameWithType: "AzureBlobFileAttributes.isVirtualDirectory()"
  summary: "Tells whether the file is a virtual directory."
  syntax: "public boolean isVirtualDirectory()"
  desc: "Tells whether the file is a virtual directory.\n\nSee <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute<?>...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual and concrete directories."
  returns:
    description: "whether the file is a virtual directory"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.lastAccessTime()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.lastAccessTime()"
  name: "lastAccessTime()"
  nameWithType: "AzureBlobFileAttributes.lastAccessTime()"
  summary: "Returns the time of last modification or null if this is a virtual directory."
  syntax: "public FileTime lastAccessTime()"
  desc: "Returns the time of last modification or null if this is a virtual directory.\n\nLast access time is not supported by the blob service. In this case, it is typical for implementations to return the <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes.lastModifiedTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#lastModifiedTime()\"></xref>."
  returns:
    description: "the time of last modification or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.lastModifiedTime()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "AzureBlobFileAttributes.lastModifiedTime()"
  summary: "Returns the time of last modification."
  syntax: "public FileTime lastModifiedTime()"
  desc: "Returns the time of last modification. Returns null if this is a virtual directory"
  returns:
    description: "the time of last modification or null if this is a virtual directory"
    type: "<xref href=\"java.nio.file.attribute.FileTime?alt=java.nio.file.attribute.FileTime&text=FileTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.metadata()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.metadata()"
  name: "metadata()"
  nameWithType: "AzureBlobFileAttributes.metadata()"
  summary: "Returns the metadata associated with this blob or null if this is a virtual directory."
  syntax: "public Map<String,String> metadata()"
  desc: "Returns the metadata associated with this blob or null if this is a virtual directory."
  returns:
    description: "the metadata associated with this blob or null if this is a virtual directory"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.nio.AzureBlobFileAttributes.size()"
  fullName: "com.azure.storage.blob.nio.AzureBlobFileAttributes.size()"
  name: "size()"
  nameWithType: "AzureBlobFileAttributes.size()"
  summary: "Returns the size of the file (in bytes)."
  syntax: "public long size()"
  desc: "Returns the size of the file (in bytes)."
  returns:
    description: "the size of the file"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Provides support for attributes associated with a file stored as a blob in Azure Storage.\n\nSome of the attributes inherited from <xref uid=\"java.nio.file.attribute.BasicFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicFileAttributes\"></xref> are not supported. See the docs on each method for more information.\n\nIf the target file is a virtual directory, most attributes will be set to null."
implements:
- "<xref href=\"java.nio.file.attribute.BasicFileAttributes?alt=java.nio.file.attribute.BasicFileAttributes&text=BasicFileAttributes\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.19
