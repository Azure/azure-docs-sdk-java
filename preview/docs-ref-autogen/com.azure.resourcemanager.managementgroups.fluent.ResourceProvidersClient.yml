### YamlMime:JavaType
uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient"
fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient"
name: "ResourceProvidersClient"
nameWithType: "ResourceProvidersClient"
summary: "An instance of this class provides access to all the operations defined in Resource<wbr>Providers<wbr>Client."
syntax: "public interface **ResourceProvidersClient**"
methods:
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.checkNameAvailability(com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  name: "checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  nameWithType: "ResourceProvidersClient.checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  summary: "Checks if the specified management group name is valid and unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group name availability check parameters."
    name: "checkNameAvailabilityRequest"
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResultInner checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  desc: "Checks if the specified management group name is valid and unique."
  returns:
    description: "describes the result of the request to check management group name availability."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.CheckNameAvailabilityResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponse(com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  nameWithType: "ResourceProvidersClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  summary: "Checks if the specified management group name is valid and unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group name availability check parameters."
    name: "checkNameAvailabilityRequest"
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResultInner> checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  desc: "Checks if the specified management group name is valid and unique."
  returns:
    description: "describes the result of the request to check management group name availability along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.CheckNameAvailabilityResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.startTenantBackfill()"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.startTenantBackfill()"
  name: "startTenantBackfill()"
  nameWithType: "ResourceProvidersClient.startTenantBackfill()"
  summary: "Starts backfilling subscriptions for the Tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract TenantBackfillStatusResultInner startTenantBackfill()"
  desc: "Starts backfilling subscriptions for the Tenant."
  returns:
    description: "the tenant backfill status."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner&text=TenantBackfillStatusResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.startTenantBackfillWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.startTenantBackfillWithResponse(Context context)"
  name: "startTenantBackfillWithResponse(Context context)"
  nameWithType: "ResourceProvidersClient.startTenantBackfillWithResponse(Context context)"
  summary: "Starts backfilling subscriptions for the Tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TenantBackfillStatusResultInner> startTenantBackfillWithResponse(Context context)"
  desc: "Starts backfilling subscriptions for the Tenant."
  returns:
    description: "the tenant backfill status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner&text=TenantBackfillStatusResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.tenantBackfillStatus()"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.tenantBackfillStatus()"
  name: "tenantBackfillStatus()"
  nameWithType: "ResourceProvidersClient.tenantBackfillStatus()"
  summary: "Gets tenant backfill status."
  modifiers:
  - "abstract"
  syntax: "public abstract TenantBackfillStatusResultInner tenantBackfillStatus()"
  desc: "Gets tenant backfill status."
  returns:
    description: "tenant backfill status."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner&text=TenantBackfillStatusResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.tenantBackfillStatusWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.fluent.ResourceProvidersClient.tenantBackfillStatusWithResponse(Context context)"
  name: "tenantBackfillStatusWithResponse(Context context)"
  nameWithType: "ResourceProvidersClient.tenantBackfillStatusWithResponse(Context context)"
  summary: "Gets tenant backfill status."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TenantBackfillStatusResultInner> tenantBackfillStatusWithResponse(Context context)"
  desc: "Gets tenant backfill status."
  returns:
    description: "tenant backfill status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner?alt=com.azure.resourcemanager.managementgroups.fluent.models.TenantBackfillStatusResultInner&text=TenantBackfillStatusResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ResourceProvidersClient."
metadata: {}
package: "com.azure.resourcemanager.managementgroups.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-managementgroups:1.0.0-beta.2
