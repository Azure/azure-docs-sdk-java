### YamlMime:JavaMember
uid: "com.azure.core.experimental.credential.AccessTokenCache.getToken*"
fullName: "com.azure.core.experimental.credential.AccessTokenCache.getToken"
name: "getToken"
nameWithType: "AccessTokenCache.getToken"
members:
- uid: "com.azure.core.experimental.credential.AccessTokenCache.getToken()"
  fullName: "com.azure.core.experimental.credential.AccessTokenCache.getToken()"
  name: "getToken()"
  nameWithType: "AccessTokenCache.getToken()"
  summary: "Asynchronously get a token from either the cache or replenish the cache with a new token."
  syntax: "public Mono<AccessToken> getToken()"
  returns:
    description: "a Publisher that emits an AccessToken"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.credential.AccessTokenCache.getToken(java.util.function.Supplier<reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>,boolean)"
  fullName: "com.azure.core.experimental.credential.AccessTokenCache.getToken(Supplier<Mono<AccessToken>> tokenSupplier, boolean forceRefresh)"
  name: "getToken(Supplier<Mono<AccessToken>> tokenSupplier, boolean forceRefresh)"
  nameWithType: "AccessTokenCache.getToken(Supplier<Mono<AccessToken>> tokenSupplier, boolean forceRefresh)"
  summary: "Asynchronously get a token from either the cache or replenish the cache with a new token."
  parameters:
  - description: "The method to get a new token"
    name: "tokenSupplier"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "The flag indicating if the cache needs to be skipped and a token needs to be fetched via the\n credential."
    name: "forceRefresh"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getToken(Supplier<Mono<AccessToken>> tokenSupplier, boolean forceRefresh)"
  returns:
    description: "The Publisher that emits an AccessToken"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.experimental.credential"
artifact: com.azure:azure-core-experimental:1.0.0-beta.10
