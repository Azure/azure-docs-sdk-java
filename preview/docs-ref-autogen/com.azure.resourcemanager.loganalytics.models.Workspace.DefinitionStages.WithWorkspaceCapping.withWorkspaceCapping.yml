### YamlMime:JavaMember
uid: "com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping*"
fullName: "com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping"
name: "withWorkspaceCapping"
nameWithType: "Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping"
members:
- uid: "com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping(com.azure.resourcemanager.loganalytics.models.WorkspaceCapping)"
  fullName: "com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping(WorkspaceCapping workspaceCapping)"
  name: "withWorkspaceCapping(WorkspaceCapping workspaceCapping)"
  nameWithType: "Workspace.DefinitionStages.WithWorkspaceCapping.withWorkspaceCapping(WorkspaceCapping workspaceCapping)"
  summary: "Specifies the workspaceCapping property: The daily volume cap for ingestion.."
  parameters:
  - description: "The daily volume cap for ingestion."
    name: "workspaceCapping"
    type: "<xref href=\"com.azure.resourcemanager.loganalytics.models.WorkspaceCapping?alt=com.azure.resourcemanager.loganalytics.models.WorkspaceCapping&text=WorkspaceCapping\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Workspace.DefinitionStages.WithCreate withWorkspaceCapping(WorkspaceCapping workspaceCapping)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.loganalytics.models.Workspace.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.loganalytics.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-loganalytics:1.0.0-beta.1
