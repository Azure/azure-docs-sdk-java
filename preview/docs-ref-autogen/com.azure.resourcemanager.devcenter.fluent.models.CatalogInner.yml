### YamlMime:JavaType
uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner"
fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner"
name: "CatalogInner"
nameWithType: "CatalogInner"
summary: "Represents a catalog."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CatalogInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.CatalogInner()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.CatalogInner()"
  name: "CatalogInner()"
  nameWithType: "CatalogInner.CatalogInner()"
  syntax: "public CatalogInner()"
methods:
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.adoGit()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.adoGit()"
  name: "adoGit()"
  nameWithType: "CatalogInner.adoGit()"
  summary: "Get the ado<wbr>Git property: Properties for an Azure Dev<wbr>Ops catalog type."
  syntax: "public GitCatalog adoGit()"
  desc: "Get the adoGit property: Properties for an Azure DevOps catalog type."
  returns:
    description: "the adoGit value."
    type: "<xref href=\"com.azure.resourcemanager.devcenter.models.GitCatalog?alt=com.azure.resourcemanager.devcenter.models.GitCatalog&text=GitCatalog\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.gitHub()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.gitHub()"
  name: "gitHub()"
  nameWithType: "CatalogInner.gitHub()"
  summary: "Get the git<wbr>Hub property: Properties for a Git<wbr>Hub catalog type."
  syntax: "public GitCatalog gitHub()"
  desc: "Get the gitHub property: Properties for a GitHub catalog type."
  returns:
    description: "the gitHub value."
    type: "<xref href=\"com.azure.resourcemanager.devcenter.models.GitCatalog?alt=com.azure.resourcemanager.devcenter.models.GitCatalog&text=GitCatalog\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.lastSyncTime()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.lastSyncTime()"
  name: "lastSyncTime()"
  nameWithType: "CatalogInner.lastSyncTime()"
  summary: "Get the last<wbr>Sync<wbr>Time property: When the catalog was last synced."
  syntax: "public OffsetDateTime lastSyncTime()"
  desc: "Get the lastSyncTime property: When the catalog was last synced."
  returns:
    description: "the lastSyncTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.provisioningState()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CatalogInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the resource."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.systemData()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.systemData()"
  name: "systemData()"
  nameWithType: "CatalogInner.systemData()"
  summary: "Get the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.validate()"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.validate()"
  name: "validate()"
  nameWithType: "CatalogInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.withAdoGit(com.azure.resourcemanager.devcenter.models.GitCatalog)"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.withAdoGit(GitCatalog adoGit)"
  name: "withAdoGit(GitCatalog adoGit)"
  nameWithType: "CatalogInner.withAdoGit(GitCatalog adoGit)"
  summary: "Set the ado<wbr>Git property: Properties for an Azure Dev<wbr>Ops catalog type."
  parameters:
  - description: "the adoGit value to set."
    name: "adoGit"
    type: "<xref href=\"com.azure.resourcemanager.devcenter.models.GitCatalog?alt=com.azure.resourcemanager.devcenter.models.GitCatalog&text=GitCatalog\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CatalogInner withAdoGit(GitCatalog adoGit)"
  desc: "Set the adoGit property: Properties for an Azure DevOps catalog type."
  returns:
    description: "the CatalogInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devcenter.fluent.models.CatalogInner?alt=com.azure.resourcemanager.devcenter.fluent.models.CatalogInner&text=CatalogInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.withGitHub(com.azure.resourcemanager.devcenter.models.GitCatalog)"
  fullName: "com.azure.resourcemanager.devcenter.fluent.models.CatalogInner.withGitHub(GitCatalog gitHub)"
  name: "withGitHub(GitCatalog gitHub)"
  nameWithType: "CatalogInner.withGitHub(GitCatalog gitHub)"
  summary: "Set the git<wbr>Hub property: Properties for a Git<wbr>Hub catalog type."
  parameters:
  - description: "the gitHub value to set."
    name: "gitHub"
    type: "<xref href=\"com.azure.resourcemanager.devcenter.models.GitCatalog?alt=com.azure.resourcemanager.devcenter.models.GitCatalog&text=GitCatalog\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CatalogInner withGitHub(GitCatalog gitHub)"
  desc: "Set the gitHub property: Properties for a GitHub catalog type."
  returns:
    description: "the CatalogInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devcenter.fluent.models.CatalogInner?alt=com.azure.resourcemanager.devcenter.fluent.models.CatalogInner&text=CatalogInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a catalog."
metadata: {}
package: "com.azure.resourcemanager.devcenter.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devcenter:1.0.0-beta.1
