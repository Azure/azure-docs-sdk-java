### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.Nonce"
fullName: "com.azure.resourcemanager.appcontainers.models.Nonce"
name: "Nonce"
nameWithType: "Nonce"
summary: "The configuration settings of the nonce used in the login flow."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Nonce"
constructors:
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.Nonce()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.Nonce()"
  name: "Nonce()"
  nameWithType: "Nonce.Nonce()"
  syntax: "public Nonce()"
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.nonceExpirationInterval()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.nonceExpirationInterval()"
  name: "nonceExpirationInterval()"
  nameWithType: "Nonce.nonceExpirationInterval()"
  summary: "Get the nonce<wbr>Expiration<wbr>Interval property: The time after the request is made when the nonce should expire."
  syntax: "public String nonceExpirationInterval()"
  desc: "Get the nonceExpirationInterval property: The time after the request is made when the nonce should expire."
  returns:
    description: "the nonceExpirationInterval value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.validate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.validate()"
  name: "validate()"
  nameWithType: "Nonce.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.validateNonce()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.validateNonce()"
  name: "validateNonce()"
  nameWithType: "Nonce.validateNonce()"
  summary: "Get the validate<wbr>Nonce property: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
  syntax: "public Boolean validateNonce()"
  desc: "Get the validateNonce property: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
  returns:
    description: "the validateNonce value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.withNonceExpirationInterval(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.withNonceExpirationInterval(String nonceExpirationInterval)"
  name: "withNonceExpirationInterval(String nonceExpirationInterval)"
  nameWithType: "Nonce.withNonceExpirationInterval(String nonceExpirationInterval)"
  summary: "Set the nonce<wbr>Expiration<wbr>Interval property: The time after the request is made when the nonce should expire."
  parameters:
  - description: "the nonceExpirationInterval value to set."
    name: "nonceExpirationInterval"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Nonce withNonceExpirationInterval(String nonceExpirationInterval)"
  desc: "Set the nonceExpirationInterval property: The time after the request is made when the nonce should expire."
  returns:
    description: "the Nonce object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Nonce?alt=com.azure.resourcemanager.appcontainers.models.Nonce&text=Nonce\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Nonce.withValidateNonce(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Nonce.withValidateNonce(Boolean validateNonce)"
  name: "withValidateNonce(Boolean validateNonce)"
  nameWithType: "Nonce.withValidateNonce(Boolean validateNonce)"
  summary: "Set the validate<wbr>Nonce property: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
  parameters:
  - description: "the validateNonce value to set."
    name: "validateNonce"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Nonce withValidateNonce(Boolean validateNonce)"
  desc: "Set the validateNonce property: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
  returns:
    description: "the Nonce object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Nonce?alt=com.azure.resourcemanager.appcontainers.models.Nonce&text=Nonce\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration settings of the nonce used in the login flow."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.3
