### YamlMime:JavaType
uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity"
fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity"
name: "CloudCapacity"
nameWithType: "CloudCapacity"
summary: "Cloud Capacity model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CloudCapacity"
constructors:
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.CloudCapacity()"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.CloudCapacity()"
  name: "CloudCapacity()"
  nameWithType: "CloudCapacity.CloudCapacity()"
  syntax: "public CloudCapacity()"
methods:
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.cpuCount()"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.cpuCount()"
  name: "cpuCount()"
  nameWithType: "CloudCapacity.cpuCount()"
  summary: "Get the cpuCount property: CPUCount specifies the maximum number of CPUs that can be allocated in the cloud."
  syntax: "public Long cpuCount()"
  returns:
    description: "the cpuCount value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.memoryMB()"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.memoryMB()"
  name: "memoryMB()"
  nameWithType: "CloudCapacity.memoryMB()"
  summary: "Get the memoryMB property: MemoryMB specifies a memory usage limit in megabytes."
  syntax: "public Long memoryMB()"
  returns:
    description: "the memoryMB value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.validate()"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.validate()"
  name: "validate()"
  nameWithType: "CloudCapacity.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.vmCount()"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.vmCount()"
  name: "vmCount()"
  nameWithType: "CloudCapacity.vmCount()"
  summary: "Get the vmCount property: VMCount gives the max number of VMs that can be deployed in the cloud."
  syntax: "public Long vmCount()"
  returns:
    description: "the vmCount value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withCpuCount(java.lang.Long)"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withCpuCount(Long cpuCount)"
  name: "withCpuCount(Long cpuCount)"
  nameWithType: "CloudCapacity.withCpuCount(Long cpuCount)"
  summary: "Set the cpuCount property: CPUCount specifies the maximum number of CPUs that can be allocated in the cloud."
  parameters:
  - description: "the cpuCount value to set."
    name: "cpuCount"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudCapacity withCpuCount(Long cpuCount)"
  returns:
    description: "the CloudCapacity object itself."
    type: "<xref href=\"com.azure.resourcemanager.scvmm.models.CloudCapacity?alt=com.azure.resourcemanager.scvmm.models.CloudCapacity&text=CloudCapacity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withMemoryMB(java.lang.Long)"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withMemoryMB(Long memoryMB)"
  name: "withMemoryMB(Long memoryMB)"
  nameWithType: "CloudCapacity.withMemoryMB(Long memoryMB)"
  summary: "Set the memoryMB property: MemoryMB specifies a memory usage limit in megabytes."
  parameters:
  - description: "the memoryMB value to set."
    name: "memoryMB"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudCapacity withMemoryMB(Long memoryMB)"
  returns:
    description: "the CloudCapacity object itself."
    type: "<xref href=\"com.azure.resourcemanager.scvmm.models.CloudCapacity?alt=com.azure.resourcemanager.scvmm.models.CloudCapacity&text=CloudCapacity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withVmCount(java.lang.Long)"
  fullName: "com.azure.resourcemanager.scvmm.models.CloudCapacity.withVmCount(Long vmCount)"
  name: "withVmCount(Long vmCount)"
  nameWithType: "CloudCapacity.withVmCount(Long vmCount)"
  summary: "Set the vmCount property: VMCount gives the max number of VMs that can be deployed in the cloud."
  parameters:
  - description: "the vmCount value to set."
    name: "vmCount"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudCapacity withVmCount(Long vmCount)"
  returns:
    description: "the CloudCapacity object itself."
    type: "<xref href=\"com.azure.resourcemanager.scvmm.models.CloudCapacity?alt=com.azure.resourcemanager.scvmm.models.CloudCapacity&text=CloudCapacity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.scvmm.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-scvmm:1.0.0-beta.1
