### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex*"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>.hashIndex"
name: "hashIndex"
nameWithType: "AbstractHashedMap<K,V>.hashIndex"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)"
  fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>.hashIndex(int hashCode, int dataSize)"
  name: "hashIndex(int hashCode, int dataSize)"
  nameWithType: "AbstractHashedMap<K,V>.hashIndex(int hashCode, int dataSize)"
  summary: "Gets the index into the data storage for the hashCode specified. This implementation uses the least significant bits of the hashCode. Subclasses can override this to return alternate bucketing."
  parameters:
  - description: "the hash code to use"
    name: "hashCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the size of the data to pick a bucket from"
    name: "dataSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected int hashIndex(int hashCode, int dataSize)"
  returns:
    description: "the bucket index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.map"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
