### YamlMime:JavaType
uid: "com.azure.resourcemanager.deploymentmanager.models.Services"
fullName: "com.azure.resourcemanager.deploymentmanager.models.Services"
name: "Services"
nameWithType: "Services"
summary: "Resource collection API of Services."
syntax: "public interface Services"
methods:
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.define(String name)"
  name: "define(String name)"
  nameWithType: "Services.define(String name)"
  summary: "Begins definition for a new Service<wbr>Resource resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResource.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new ServiceResource resource."
  returns:
    description: "the first stage of the new ServiceResource definition."
    type: "<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource.DefinitionStages.Blank?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.delete(String resourceGroupName, String serviceTopologyName, String serviceName)"
  name: "delete(String resourceGroupName, String serviceTopologyName, String serviceName)"
  nameWithType: "Services.delete(String resourceGroupName, String serviceTopologyName, String serviceName)"
  summary: "Deletes the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceTopologyName, String serviceName)"
  desc: "Deletes the service."
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Services.deleteById(String id)"
  summary: "Deletes the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes the service."
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Services.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes the service."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.deleteWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  nameWithType: "Services.deleteWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  summary: "Deletes the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  desc: "Deletes the service."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.get(String resourceGroupName, String serviceTopologyName, String serviceName)"
  name: "get(String resourceGroupName, String serviceTopologyName, String serviceName)"
  nameWithType: "Services.get(String resourceGroupName, String serviceTopologyName, String serviceName)"
  summary: "Gets the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResource get(String resourceGroupName, String serviceTopologyName, String serviceName)"
  desc: "Gets the service."
  returns:
    description: "the service."
    type: "<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Services.getById(String id)"
  summary: "Gets the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServiceResource getById(String id)"
  desc: "Gets the service."
  returns:
    description: "the service."
    type: "<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Services.getByIdWithResponse(String id, Context context)"
  summary: "Gets the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServiceResource> getByIdWithResponse(String id, Context context)"
  desc: "Gets the service."
  returns:
    description: "the service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.getWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  nameWithType: "Services.getWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  summary: "Gets the service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServiceResource> getWithResponse(String resourceGroupName, String serviceTopologyName, String serviceName, Context context)"
  desc: "Gets the service."
  returns:
    description: "the service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.list(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.list(String resourceGroupName, String serviceTopologyName)"
  name: "list(String resourceGroupName, String serviceTopologyName)"
  nameWithType: "Services.list(String resourceGroupName, String serviceTopologyName)"
  summary: "Lists the services in the service topology."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<ServiceResource> list(String resourceGroupName, String serviceTopologyName)"
  desc: "Lists the services in the service topology."
  returns:
    description: "the list of services."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.deploymentmanager.models.Services.listWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.deploymentmanager.models.Services.listWithResponse(String resourceGroupName, String serviceTopologyName, Context context)"
  name: "listWithResponse(String resourceGroupName, String serviceTopologyName, Context context)"
  nameWithType: "Services.listWithResponse(String resourceGroupName, String serviceTopologyName, Context context)"
  summary: "Lists the services in the service topology."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service topology ."
    name: "serviceTopologyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<ServiceResource>> listWithResponse(String resourceGroupName, String serviceTopologyName, Context context)"
  desc: "Lists the services in the service topology."
  returns:
    description: "the list of services."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.deploymentmanager.models.ServiceResource?alt=com.azure.resourcemanager.deploymentmanager.models.ServiceResource&text=ServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "Resource collection API of Services."
metadata: {}
package: "com.azure.resourcemanager.deploymentmanager.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-deploymentmanager:1.0.0-beta.1
