### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory"
fullName: "com.fasterxml.jackson.databind.ser.BeanSerializerFactory"
name: "BeanSerializerFactory"
nameWithType: "BeanSerializerFactory"
summary: "Factory class that can provide serializers for any regular Java beans (as defined by \"having at least one get method recognizable as bean accessor\" -- where <xref uid=\"java.lang.Object.getClass\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#getClass\"></xref> does not count); as well as for \"standard\" JDK types. Latter is achieved by delegating calls to <xref uid=\"com.fasterxml.jackson.databind.ser.BasicSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicSerializerFactory\"></xref> to find serializers both for \"standard\" JDK types (and in some cases, sub-classes as is the case for collection classes like <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.List\"></xref>s and <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>s) and bean (value) classes.\n\nNote about delegating calls to <xref uid=\"com.fasterxml.jackson.databind.ser.BasicSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicSerializerFactory\"></xref>: although it would be nicer to use linear delegation for construction (to essentially dispatch all calls first to the underlying <xref uid=\"com.fasterxml.jackson.databind.ser.BasicSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicSerializerFactory\"></xref>; or alternatively after failing to provide bean-based serializer\\}, there is a problem: priority levels for detecting standard types are mixed. That is, we want to check if a type is a bean after some of \"standard\" JDK types, but before the rest. As a result, \"mixed\" delegation used, and calls are NOT done using regular <xref uid=\"com.fasterxml.jackson.databind.ser.SerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializerFactory\"></xref> interface but rather via direct calls to <xref uid=\"com.fasterxml.jackson.databind.ser.BasicSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicSerializerFactory\"></xref>.\n\nFinally, since all caching is handled by the serializer provider (not factory) and there is no configurability, this factory is stateless. This means that a global singleton instance can be used."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.SerializerFactory\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.BasicSerializerFactory\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.customSerializers()"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.getFactoryConfig()"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
- "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BeanSerializerFactory extends BasicSerializerFactory implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
fields:
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance"
methods:
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class<?>[])"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers()"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)"
- "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
