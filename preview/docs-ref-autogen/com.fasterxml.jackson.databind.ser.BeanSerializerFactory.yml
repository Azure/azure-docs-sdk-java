### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  id: BeanSerializerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class<?>[])
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers()
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  langs:
  - java
  name: BeanSerializerFactory
  nameWithType: BeanSerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Factory class that can provide serializers for any regular Java beans (as defined by "having at least one get method recognizable as bean accessor" -- where <xref uid="java.lang.Object.getClass" data-throw-if-not-resolved="false">Object#getClass</xref> does not count); as well as for "standard" JDK types. Latter is achieved by delegating calls to <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">BasicSerializerFactory</xref> to find serializers both for "standard" JDK types (and in some cases, sub-classes as is the case for collection classes like <xref uid="java.util.List" data-throw-if-not-resolved="false">java.util.List</xref>s and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s) and bean (value) classes.


    Note about delegating calls to <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">BasicSerializerFactory</xref>: although it would be nicer to use linear delegation for construction (to essentially dispatch all calls first to the underlying <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">BasicSerializerFactory</xref>; or alternatively after failing to provide bean-based serializer\}, there is a problem: priority levels for detecting standard types are mixed. That is, we want to check if a type is a bean after some of "standard" JDK types, but before the rest. As a result, "mixed" delegation used, and calls are NOT done using regular <xref uid="com.fasterxml.jackson.databind.ser.SerializerFactory" data-throw-if-not-resolved="false">SerializerFactory</xref> interface but rather via direct calls to <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">BasicSerializerFactory</xref>.


    Finally, since all caching is handled by the serializer provider (not factory) and there is no configurability, this factory is stateless. This means that a global singleton instance can be used.
  syntax:
    content: public class BeanSerializerFactory extends BasicSerializerFactory implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.ser.SerializerFactory
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory._checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.customSerializers()
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.getFactoryConfig()
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  - com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  id: BeanSerializerFactory(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: BeanSerializerFactory(SerializerFactoryConfig config)
  nameWithType: BeanSerializerFactory.BeanSerializerFactory(SerializerFactoryConfig config)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory(SerializerFactoryConfig config)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Constructor for creating instances with specified configuration.
  syntax:
    content: protected BeanSerializerFactory(SerializerFactoryConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  id: _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: _constructWriter(SerializerProvider prov, BeanPropertyDefinition propDef, PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)
  nameWithType: BeanSerializerFactory._constructWriter(SerializerProvider prov, BeanPropertyDefinition propDef, PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(SerializerProvider prov, BeanPropertyDefinition propDef, PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Secondary helper method for constructing <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> for given member (field or method).
  syntax:
    content: protected BeanPropertyWriter _constructWriter(SerializerProvider prov, BeanPropertyDefinition propDef, PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: pb
      type: com.fasterxml.jackson.databind.ser.PropertyBuilder
    - id: staticTyping
      type: boolean
    - id: accessor
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  id: _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: _createSerializer2(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  nameWithType: BeanSerializerFactory._createSerializer2(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected JsonSerializer<?> _createSerializer2(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: staticTyping
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  id: constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  nameWithType: BeanSerializerFactory.constructBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to construct serializer for serializing specified bean type if (but only if, as of 2.10), at least one property is found.
  syntax:
    content: protected JsonSerializer<Object> constructBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: staticTyping
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)
  id: constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructBeanSerializer(SerializerProvider prov, BeanDescription beanDesc)
  nameWithType: BeanSerializerFactory.constructBeanSerializer(SerializerProvider prov, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(SerializerProvider prov, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov, BeanDescription beanDesc)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
  id: constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructBeanSerializerBuilder(BeanDescription beanDesc)
  nameWithType: BeanSerializerFactory.constructBeanSerializerBuilder(BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder(BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanSerializerBuilder constructBeanSerializerBuilder(BeanDescription beanDesc)
    parameters:
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class<?>[])
  id: constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class<?>[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructFilteredBeanWriter(BeanPropertyWriter writer, Class<?>[] inViews)
  nameWithType: BeanSerializerFactory.constructFilteredBeanWriter(BeanPropertyWriter writer, Class<?>[] inViews)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter(BeanPropertyWriter writer, Class<?>[] inViews)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to construct a filtered writer, for given view definitions. Default implementation constructs filter that checks active view type to views property is to be included in.
  syntax:
    content: protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer, Class<?>[] inViews)
    parameters:
    - id: writer
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    - id: inViews
      type: java.lang.Class<?>[]
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  id: constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructObjectIdHandler(SerializerProvider prov, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  nameWithType: BeanSerializerFactory.constructObjectIdHandler(SerializerProvider prov, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler(SerializerProvider prov, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected ObjectIdWriter constructObjectIdHandler(SerializerProvider prov, BeanDescription beanDesc, List<BeanPropertyWriter> props)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: props
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
    return:
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  nameWithType: BeanSerializerFactory.constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.ser.PropertyBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
  id: createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: createSerializer(SerializerProvider prov, JavaType origType)
  nameWithType: BeanSerializerFactory.createSerializer(SerializerProvider prov, JavaType origType)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(SerializerProvider prov, JavaType origType)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Main serializer constructor method. We will have to be careful with respect to ordering of various method calls: essentially we want to reliably figure out which classes are standard types, and which are beans. The problem is that some bean Classes may implement standard interfaces (say, <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">java.lang.Iterable</xref>.


    Note: sub-classes may choose to complete replace implementation, if they want to alter priority of serializer lookups.
  syntax:
    content: public JsonSerializer<Object> createSerializer(SerializerProvider prov, JavaType origType)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: origType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers()
  id: customSerializers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: customSerializers()
  nameWithType: BeanSerializerFactory.customSerializers()
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers()
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected Iterable<Serializers> customSerializers()
    return:
      type: java.lang.Iterable<com.fasterxml.jackson.databind.ser.Serializers>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  id: filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: filterBeanProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  nameWithType: BeanSerializerFactory.filterBeanProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> props)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Overridable method that can filter out properties. Default implementation checks annotations class may have.
  syntax:
    content: protected List<BeanPropertyWriter> filterBeanProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> props)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: props
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  id: findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: findBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  nameWithType: BeanSerializerFactory.findBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method that will try to construct a <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">BeanSerializer</xref> for given class if at least one property is found, OR, if not, one of add-on types.


    NOTE: behavior changed a bit
  syntax:
    content: public JsonSerializer<Object> findBeanOrAddOnSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: staticTyping
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  id: findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)
  nameWithType: BeanSerializerFactory.findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method used to collect all actual serializable properties. Can be overridden to implement custom detection schemes.
  syntax:
    content: protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
    return:
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)
  nameWithType: BeanSerializerFactory.findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  id: findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: findPropertyContentTypeSerializer(JavaType containerType, SerializationConfig config, AnnotatedMember accessor)
  nameWithType: BeanSerializerFactory.findPropertyContentTypeSerializer(JavaType containerType, SerializationConfig config, AnnotatedMember accessor)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer(JavaType containerType, SerializationConfig config, AnnotatedMember accessor)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to create a type information serializer for values of given container property if one is needed. If not needed (no polymorphic handling configured), should return null.
  syntax:
    content: public TypeSerializer findPropertyContentTypeSerializer(JavaType containerType, SerializationConfig config, AnnotatedMember accessor)
    parameters:
    - id: containerType
      type: com.fasterxml.jackson.databind.JavaType
      description: Declared type of the container to use as the base type for type information serializer
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: accessor
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
      description: Type serializer to use for property value contents, if one is needed; null if not.
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  id: findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: findPropertyTypeSerializer(JavaType baseType, SerializationConfig config, AnnotatedMember accessor)
  nameWithType: BeanSerializerFactory.findPropertyTypeSerializer(JavaType baseType, SerializationConfig config, AnnotatedMember accessor)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer(JavaType baseType, SerializationConfig config, AnnotatedMember accessor)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to create a type information serializer for values of given non-container property if one is needed. If not needed (no polymorphic handling configured), should return null.
  syntax:
    content: public TypeSerializer findPropertyTypeSerializer(JavaType baseType, SerializationConfig config, AnnotatedMember accessor)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: Declared type to use as the base type for type information serializer
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: accessor
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
      description: Type serializer to use for property values, if one is needed; null if not.
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance
  id: instance
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: instance
  nameWithType: BeanSerializerFactory.instance
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Like <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">BasicSerializerFactory</xref>, this factory is stateless, and thus a single shared global (== singleton) instance can be used without thread-safety issues.
  syntax:
    content: public static final BeanSerializerFactory instance
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType(java.lang.Class<?>)
  id: isPotentialBeanType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: isPotentialBeanType(Class<?> type)
  nameWithType: BeanSerializerFactory.isPotentialBeanType(Class<?> type)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType(Class<?> type)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Helper method used to skip processing for types that we know cannot be (i.e. are never consider to be) beans: things like primitives, Arrays, Enums, and proxy types.


    Note that usually we shouldn't really be getting these sort of types anyway; but better safe than sorry.
  syntax:
    content: protected boolean isPotentialBeanType(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  id: processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: processViews(SerializationConfig config, BeanSerializerBuilder builder)
  nameWithType: BeanSerializerFactory.processViews(SerializationConfig config, BeanSerializerBuilder builder)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews(SerializationConfig config, BeanSerializerBuilder builder)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method called to handle view information for constructed serializer, based on bean property writers.


    Note that this method is designed to be overridden by sub-classes if they want to provide custom view handling. As such it is not considered an internal implementation detail, and will be supported as part of API going forward.
  syntax:
    content: protected void processViews(SerializationConfig config, BeanSerializerBuilder builder)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  id: removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  nameWithType: BeanSerializerFactory.removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method that will apply by-type limitations (as per \[JACKSON-429\]); by default this is based on <xref uid="com.fasterxml.jackson.annotation.JsonIgnoreType" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonIgnoreType</xref> annotation but can be supplied by module-provided introspectors too. Starting with 2.8 there are also "Config overrides" to consider.
  syntax:
    content: protected void removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: properties
      type: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  id: removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: removeOverlappingTypeIds(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder, List<BeanPropertyWriter> props)
  nameWithType: BeanSerializerFactory.removeOverlappingTypeIds(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder, List<BeanPropertyWriter> props)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder, List<BeanPropertyWriter> props)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Helper method called to ensure that we do not have "duplicate" type ids. Added to resolve \[databind\#222\]
  syntax:
    content: protected List<BeanPropertyWriter> removeOverlappingTypeIds(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder, List<BeanPropertyWriter> props)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
    - id: props
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  id: removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  nameWithType: BeanSerializerFactory.removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Helper method that will remove all properties that do not have a mutator.
  syntax:
    content: protected void removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> properties)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: properties
      type: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  id: withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerFactory
  langs:
  - java
  name: withConfig(SerializerFactoryConfig config)
  nameWithType: BeanSerializerFactory.withConfig(SerializerFactoryConfig config)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(SerializerFactoryConfig config)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method used by module registration functionality, to attach additional serializer providers into this serializer factory. This is typically handled by constructing a new instance with additional serializers, to ensure thread-safe access.
  syntax:
    content: public SerializerFactory withConfig(SerializerFactoryConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig
    return:
      type: com.fasterxml.jackson.databind.ser.SerializerFactory
references:
- uid: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig
  name: SerializerFactoryConfig
  nameWithType: SerializerFactoryConfig
  fullName: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory*
  name: BeanSerializerFactory
  nameWithType: BeanSerializerFactory.BeanSerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.BeanSerializerFactory
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.SerializerFactory
  name: SerializerFactory
  nameWithType: SerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.SerializerFactory
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig*
  name: withConfig
  nameWithType: BeanSerializerFactory.withConfig
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Iterable<com.fasterxml.jackson.databind.ser.Serializers>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.ser.Serializers
    name: Serializers
    fullName: com.fasterxml.jackson.databind.ser.Serializers
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers*
  name: customSerializers
  nameWithType: BeanSerializerFactory.customSerializers
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.customSerializers
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer*
  name: createSerializer
  nameWithType: BeanSerializerFactory.createSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2*
  name: _createSerializer2
  nameWithType: BeanSerializerFactory._createSerializer2
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer*
  name: findBeanSerializer
  nameWithType: BeanSerializerFactory.findBeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer*
  name: findBeanOrAddOnSerializer
  nameWithType: BeanSerializerFactory.findBeanOrAddOnSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer*
  name: findPropertyTypeSerializer
  nameWithType: BeanSerializerFactory.findPropertyTypeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer*
  name: findPropertyContentTypeSerializer
  nameWithType: BeanSerializerFactory.findPropertyContentTypeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer*
  name: constructBeanSerializer
  nameWithType: BeanSerializerFactory.constructBeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer*
  name: constructBeanOrAddOnSerializer
  nameWithType: BeanSerializerFactory.constructBeanOrAddOnSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanOrAddOnSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    name: BeanPropertyWriter
    fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler*
  name: constructObjectIdHandler
  nameWithType: BeanSerializerFactory.constructObjectIdHandler
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter*
  name: constructFilteredBeanWriter
  nameWithType: BeanSerializerFactory.constructFilteredBeanWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructFilteredBeanWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder*
  name: constructPropertyBuilder
  nameWithType: BeanSerializerFactory.constructPropertyBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructPropertyBuilder
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
  name: BeanSerializerBuilder
  nameWithType: BeanSerializerBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder*
  name: constructBeanSerializerBuilder
  nameWithType: BeanSerializerFactory.constructBeanSerializerBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializerBuilder
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType*
  name: isPotentialBeanType
  nameWithType: BeanSerializerFactory.isPotentialBeanType
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties*
  name: findBeanProperties
  nameWithType: BeanSerializerFactory.findBeanProperties
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties*
  name: filterBeanProperties
  nameWithType: BeanSerializerFactory.filterBeanProperties
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterBeanProperties
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews*
  name: processViews
  nameWithType: BeanSerializerFactory.processViews
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews
  package: com.fasterxml.jackson.databind.ser
- uid: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    name: BeanPropertyDefinition
    fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes*
  name: removeIgnorableTypes
  nameWithType: BeanSerializerFactory.removeIgnorableTypes
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters*
  name: removeSetterlessGetters
  nameWithType: BeanSerializerFactory.removeSetterlessGetters
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeSetterlessGetters
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds*
  name: removeOverlappingTypeIds
  nameWithType: BeanSerializerFactory.removeOverlappingTypeIds
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter*
  name: _constructWriter
  nameWithType: BeanSerializerFactory._constructWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory
  name: BasicSerializerFactory
  nameWithType: BasicSerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.findSerializerByAddonType(SerializationConfig,JavaType,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.findSerializerByAddonType(SerializationConfig,JavaType,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.buildEnumSetSerializer(JavaType)
  nameWithType: BasicSerializerFactory.buildEnumSetSerializer(JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  name: BasicSerializerFactory._findContentSerializer(SerializerProvider,Annotated)
  nameWithType: BasicSerializerFactory._findContentSerializer(SerializerProvider,Annotated)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
  name: BasicSerializerFactory.withAdditionalKeySerializers(Serializers)
  nameWithType: BasicSerializerFactory.withAdditionalKeySerializers(Serializers)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  name: BasicSerializerFactory.withSerializerModifier(BeanSerializerModifier)
  nameWithType: BasicSerializerFactory.withSerializerModifier(BeanSerializerModifier)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildIndexedListSerializer(JavaType,boolean,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildIndexedListSerializer(JavaType,boolean,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildArraySerializer(SerializerProvider,ArrayType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildArraySerializer(SerializerProvider,ArrayType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildCollectionSerializer(JavaType,boolean,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildCollectionSerializer(JavaType,boolean,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.buildIteratorSerializer(SerializationConfig,JavaType,BeanDescription,boolean,JavaType)
  nameWithType: BasicSerializerFactory.buildIteratorSerializer(SerializationConfig,JavaType,BeanDescription,boolean,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildCollectionSerializer(SerializerProvider,CollectionType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildCollectionSerializer(SerializerProvider,CollectionType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.createSerializer(SerializerProvider,JavaType)
  nameWithType: BasicSerializerFactory.createSerializer(SerializerProvider,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.buildIterableSerializer(SerializationConfig,JavaType,BeanDescription,boolean,JavaType)
  nameWithType: BasicSerializerFactory.buildIterableSerializer(SerializationConfig,JavaType,BeanDescription,boolean,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
  name: BasicSerializerFactory._findInclusionWithContent(SerializerProvider,BeanDescription,JavaType,Class<?>)
  nameWithType: BasicSerializerFactory._findInclusionWithContent(SerializerProvider,BeanDescription,JavaType,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.findOptionalStdSerializer(SerializerProvider,JavaType,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.findOptionalStdSerializer(SerializerProvider,JavaType,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)
  name: BasicSerializerFactory.withAdditionalSerializers(Serializers)
  nameWithType: BasicSerializerFactory.withAdditionalSerializers(Serializers)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildAtomicReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildAtomicReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class<?>)
  name: BasicSerializerFactory.isIndexedList(Class<?>)
  nameWithType: BasicSerializerFactory.isIndexedList(Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.findReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.findReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: BasicSerializerFactory.findConvertingSerializer(SerializerProvider,Annotated,JsonSerializer<?>)
  nameWithType: BasicSerializerFactory.findConvertingSerializer(SerializerProvider,Annotated,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.createKeySerializer(SerializationConfig,JavaType,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.createKeySerializer(SerializationConfig,JavaType,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.buildMapEntrySerializer(SerializerProvider,JavaType,BeanDescription,boolean,JavaType,JavaType)
  nameWithType: BasicSerializerFactory.buildMapEntrySerializer(SerializerProvider,JavaType,BeanDescription,boolean,JavaType,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  name: BasicSerializerFactory.findSerializerByAnnotations(SerializerProvider,JavaType,BeanDescription)
  nameWithType: BasicSerializerFactory.findSerializerByAnnotations(SerializerProvider,JavaType,BeanDescription)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  name: BasicSerializerFactory.findFilterId(SerializationConfig,BeanDescription)
  nameWithType: BasicSerializerFactory.findFilterId(SerializationConfig,BeanDescription)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  name: BasicSerializerFactory.findConverter(SerializerProvider,Annotated)
  nameWithType: BasicSerializerFactory.findConverter(SerializerProvider,Annotated)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  name: BasicSerializerFactory.findSerializerFromAnnotation(SerializerProvider,Annotated)
  nameWithType: BasicSerializerFactory.findSerializerFromAnnotation(SerializerProvider,Annotated)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.buildMapSerializer(SerializerProvider,MapType,BeanDescription,boolean,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.buildMapSerializer(SerializerProvider,MapType,BeanDescription,boolean,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BasicSerializerFactory.usesStaticTyping(SerializationConfig,BeanDescription,TypeSerializer)
  nameWithType: BasicSerializerFactory.usesStaticTyping(SerializationConfig,BeanDescription,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer)
  name: BasicSerializerFactory._checkMapContentInclusion(SerializerProvider,BeanDescription,MapSerializer)
  nameWithType: BasicSerializerFactory._checkMapContentInclusion(SerializerProvider,BeanDescription,MapSerializer)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  name: BasicSerializerFactory.buildEnumSerializer(SerializationConfig,JavaType,BeanDescription)
  nameWithType: BasicSerializerFactory.buildEnumSerializer(SerializationConfig,JavaType,BeanDescription)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.buildContainerSerializer(SerializerProvider,JavaType,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.buildContainerSerializer(SerializerProvider,JavaType,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.getFactoryConfig()
  name: BasicSerializerFactory.getFactoryConfig()
  nameWithType: BasicSerializerFactory.getFactoryConfig()
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.getFactoryConfig()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
  name: BasicSerializerFactory.withConfig(SerializerFactoryConfig)
  nameWithType: BasicSerializerFactory.withConfig(SerializerFactoryConfig)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
  name: BasicSerializerFactory.createTypeSerializer(SerializationConfig,JavaType)
  nameWithType: BasicSerializerFactory.createTypeSerializer(SerializationConfig,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.findSerializerByPrimaryType(SerializerProvider,JavaType,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.findSerializerByPrimaryType(SerializerProvider,JavaType,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)
  name: BasicSerializerFactory.findSerializerByLookup(JavaType,SerializationConfig,BeanDescription,boolean)
  nameWithType: BasicSerializerFactory.findSerializerByLookup(JavaType,SerializationConfig,BeanDescription,boolean)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
  name: BasicSerializerFactory._findKeySerializer(SerializerProvider,Annotated)
  nameWithType: BasicSerializerFactory._findKeySerializer(SerializerProvider,Annotated)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.customSerializers()
  name: BasicSerializerFactory.customSerializers()
  nameWithType: BasicSerializerFactory.customSerializers()
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.customSerializers()
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BasicSerializerFactory.createKeySerializer(SerializerProvider,JavaType,JsonSerializer<Object>)
  nameWithType: BasicSerializerFactory.createKeySerializer(SerializerProvider,JavaType,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.Serializers
  name: Serializers
  nameWithType: Serializers
  fullName: com.fasterxml.jackson.databind.ser.Serializers
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildIndexedListSerializer(JavaType,boolean,TypeSerializer,JsonSerializer
  nameWithType: BasicSerializerFactory.buildIndexedListSerializer(JavaType,boolean,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object>)
  name: Object>)
  nameWithType: Object>)
  fullName: java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildArraySerializer(SerializerProvider,ArrayType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  nameWithType: BasicSerializerFactory.buildArraySerializer(SerializerProvider,ArrayType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildCollectionSerializer(JavaType,boolean,TypeSerializer,JsonSerializer
  nameWithType: BasicSerializerFactory.buildCollectionSerializer(JavaType,boolean,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildCollectionSerializer(SerializerProvider,CollectionType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  nameWithType: BasicSerializerFactory.buildCollectionSerializer(SerializerProvider,CollectionType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class
  name: BasicSerializerFactory._findInclusionWithContent(SerializerProvider,BeanDescription,JavaType,Class
  nameWithType: BasicSerializerFactory._findInclusionWithContent(SerializerProvider,BeanDescription,JavaType,Class
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildAtomicReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  nameWithType: BasicSerializerFactory.buildAtomicReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class
  name: BasicSerializerFactory.isIndexedList(Class
  nameWithType: BasicSerializerFactory.isIndexedList(Class
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.isIndexedList(java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.findConvertingSerializer(SerializerProvider,Annotated,JsonSerializer
  nameWithType: BasicSerializerFactory.findConvertingSerializer(SerializerProvider,Annotated,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.createKeySerializer(SerializationConfig,JavaType,JsonSerializer
  nameWithType: BasicSerializerFactory.createKeySerializer(SerializationConfig,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.buildMapSerializer(SerializerProvider,MapType,BeanDescription,boolean,JsonSerializer
  nameWithType: BasicSerializerFactory.buildMapSerializer(SerializerProvider,MapType,BeanDescription,boolean,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Object>,TypeSerializer,JsonSerializer
  nameWithType: Object>,TypeSerializer,JsonSerializer
  fullName: java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: BasicSerializerFactory.createKeySerializer(SerializerProvider,JavaType,JsonSerializer
  nameWithType: BasicSerializerFactory.createKeySerializer(SerializerProvider,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
