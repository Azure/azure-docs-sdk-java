### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  id: RandomBasedGenerator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl
  children:
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator(java.util.Random)
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._random
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._secureRandom
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._sharedRandom
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate()
  - com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType()
  langs:
  - java
  name: RandomBasedGenerator
  nameWithType: RandomBasedGenerator
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  type: Class
  package: com.azure.cosmos.implementation.uuid.impl
  summary: >-
    Implementation of UUID generator that uses generation method 4.


    Note on random number generation when using <xref uid="" data-throw-if-not-resolved="false">SecureRandom</xref> for random number generation: the first time <xref uid="" data-throw-if-not-resolved="false">SecureRandom</xref> object is used, there is noticeable delay between calling the method and getting the reply. This is because SecureRandom has to initialize itself to reasonably random state. Thus, if you want to lessen delay, it may be be a good idea to either get the first random UUID asynchronously from a separate thread, or to use the other generateRandomBasedUUID passing a previously initialized SecureRandom instance.
  syntax:
    content: public class RandomBasedGenerator extends NoArgGenerator
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.uuid.UUIDGenerator
  - com.azure.cosmos.implementation.uuid.NoArgGenerator
  inheritedMembers:
  - com.azure.cosmos.implementation.uuid.NoArgGenerator.generate()
  - com.azure.cosmos.implementation.uuid.UUIDGenerator.getType()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator(java.util.Random)
  id: RandomBasedGenerator(java.util.Random)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: RandomBasedGenerator(Random rnd)
  nameWithType: RandomBasedGenerator.RandomBasedGenerator(Random rnd)
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator(Random rnd)
  overload: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator*
  type: Constructor
  package: com.azure.cosmos.implementation.uuid.impl
  syntax:
    content: public RandomBasedGenerator(Random rnd)
    parameters:
    - id: rnd
      type: java.util.Random
      description: >-
        Random number generator to use for generating UUIDs; if null,
           shared default generator is used. Note that it is strongly recommend to
           use a <b>good</b> (pseudo) random number generator; for example, JDK's
           <xref uid="" data-throw-if-not-resolved="false">SecureRandom</xref>.
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._random
  id: _random
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: _random
  nameWithType: RandomBasedGenerator._random
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._random
  type: Field
  package: com.azure.cosmos.implementation.uuid.impl
  summary: Random number generator that this generator uses.
  syntax:
    content: protected final Random _random
    return:
      type: java.util.Random
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._secureRandom
  id: _secureRandom
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: _secureRandom
  nameWithType: RandomBasedGenerator._secureRandom
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._secureRandom
  type: Field
  package: com.azure.cosmos.implementation.uuid.impl
  summary: Looks like <xref uid="" data-throw-if-not-resolved="false">SecureRandom</xref> implementation is more efficient using single call access (compared to basic <xref uid="java.util.Random" data-throw-if-not-resolved="false">Random</xref>), so let's use that knowledge to our benefit.
  syntax:
    content: protected final boolean _secureRandom
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._sharedRandom
  id: _sharedRandom
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: _sharedRandom
  nameWithType: RandomBasedGenerator._sharedRandom
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator._sharedRandom
  type: Field
  package: com.azure.cosmos.implementation.uuid.impl
  summary: Default shared random number generator, used if no random number generator is explicitly specified for instance
  syntax:
    content: protected static Random _sharedRandom
    return:
      type: java.util.Random
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate()
  id: generate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: generate()
  nameWithType: RandomBasedGenerator.generate()
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate()
  overload: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate*
  type: Method
  package: com.azure.cosmos.implementation.uuid.impl
  syntax:
    content: public UUID generate()
    return:
      type: java.util.UUID
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType()
  id: getType()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator
  langs:
  - java
  name: getType()
  nameWithType: RandomBasedGenerator.getType()
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType()
  overload: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType*
  type: Method
  package: com.azure.cosmos.implementation.uuid.impl
  summary: Accessor for determining type of UUIDs (variant) that this generator instance will produce.
  syntax:
    content: public UUIDType getType()
    return:
      type: com.azure.cosmos.implementation.uuid.UUIDType
references:
- uid: java.util.Random
  spec.java:
  - uid: java.util.Random
    name: Random
    fullName: java.util.Random
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator*
  name: RandomBasedGenerator
  nameWithType: RandomBasedGenerator.RandomBasedGenerator
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.RandomBasedGenerator
  package: com.azure.cosmos.implementation.uuid.impl
- uid: com.azure.cosmos.implementation.uuid.UUIDType
  name: UUIDType
  nameWithType: UUIDType
  fullName: com.azure.cosmos.implementation.uuid.UUIDType
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType*
  name: getType
  nameWithType: RandomBasedGenerator.getType
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.getType
  package: com.azure.cosmos.implementation.uuid.impl
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate*
  name: generate
  nameWithType: RandomBasedGenerator.generate
  fullName: com.azure.cosmos.implementation.uuid.impl.RandomBasedGenerator.generate
  package: com.azure.cosmos.implementation.uuid.impl
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.uuid.NoArgGenerator
  name: NoArgGenerator
  nameWithType: NoArgGenerator
  fullName: com.azure.cosmos.implementation.uuid.NoArgGenerator
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.uuid.NoArgGenerator.generate()
  name: NoArgGenerator.generate()
  nameWithType: NoArgGenerator.generate()
  fullName: com.azure.cosmos.implementation.uuid.NoArgGenerator.generate()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.uuid.UUIDGenerator.getType()
  name: UUIDGenerator.getType()
  nameWithType: UUIDGenerator.getType()
  fullName: com.azure.cosmos.implementation.uuid.UUIDGenerator.getType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
