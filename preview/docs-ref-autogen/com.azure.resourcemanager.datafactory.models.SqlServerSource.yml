### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource"
fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource"
name: "SqlServerSource"
nameWithType: "SqlServerSource"
summary: "A copy activity SQL server source."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.TabularSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySource.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySource.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySource.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySource.sourceRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySource.sourceRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySource.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.additionalColumns()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.queryTimeout()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.validate()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withAdditionalColumns(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withQueryTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryWait(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SqlServerSource extends TabularSource"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.SqlServerSource()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.SqlServerSource()"
  name: "SqlServerSource()"
  nameWithType: "SqlServerSource.SqlServerSource()"
  syntax: "public SqlServerSource()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.partitionOption()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.partitionOption()"
  name: "partitionOption()"
  nameWithType: "SqlServerSource.partitionOption()"
  summary: "Get the partitionOption property: The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
  syntax: "public Object partitionOption()"
  returns:
    description: "the partitionOption value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.partitionSettings()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.partitionSettings()"
  name: "partitionSettings()"
  nameWithType: "SqlServerSource.partitionSettings()"
  summary: "Get the partitionSettings property: The settings that will be leveraged for Sql source partitioning."
  syntax: "public SqlPartitionSettings partitionSettings()"
  returns:
    description: "the partitionSettings value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlPartitionSettings?alt=com.azure.resourcemanager.datafactory.models.SqlPartitionSettings&text=SqlPartitionSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.produceAdditionalTypes()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.produceAdditionalTypes()"
  name: "produceAdditionalTypes()"
  nameWithType: "SqlServerSource.produceAdditionalTypes()"
  summary: "Get the produceAdditionalTypes property: Which additional types to produce."
  syntax: "public Object produceAdditionalTypes()"
  returns:
    description: "the produceAdditionalTypes value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.sqlReaderQuery()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.sqlReaderQuery()"
  name: "sqlReaderQuery()"
  nameWithType: "SqlServerSource.sqlReaderQuery()"
  summary: "Get the sqlReaderQuery property: SQL reader query. Type: string (or Expression with resultType string)."
  syntax: "public Object sqlReaderQuery()"
  returns:
    description: "the sqlReaderQuery value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.sqlReaderStoredProcedureName()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.sqlReaderStoredProcedureName()"
  name: "sqlReaderStoredProcedureName()"
  nameWithType: "SqlServerSource.sqlReaderStoredProcedureName()"
  summary: "Get the sqlReaderStoredProcedureName property: Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
  syntax: "public Object sqlReaderStoredProcedureName()"
  returns:
    description: "the sqlReaderStoredProcedureName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.storedProcedureParameters()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.storedProcedureParameters()"
  name: "storedProcedureParameters()"
  nameWithType: "SqlServerSource.storedProcedureParameters()"
  summary: "Get the storedProcedureParameters property: Value and type setting for stored procedure parameters. Example: \"\\{Parameter1: \\{value: \"1\", type: \"int\"\\}\\}\"."
  syntax: "public Map<String,StoredProcedureParameter> storedProcedureParameters()"
  returns:
    description: "the storedProcedureParameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.StoredProcedureParameter?alt=com.azure.resourcemanager.datafactory.models.StoredProcedureParameter&text=StoredProcedureParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.validate()"
  name: "validate()"
  nameWithType: "SqlServerSource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withAdditionalColumns(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withAdditionalColumns(Object additionalColumns)"
  name: "withAdditionalColumns(Object additionalColumns)"
  nameWithType: "SqlServerSource.withAdditionalColumns(Object additionalColumns)"
  summary: "Set the additionalColumns property: Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withAdditionalColumns(java.lang.Object)"
  parameters:
  - name: "additionalColumns"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withAdditionalColumns(Object additionalColumns)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "SqlServerSource.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withDisableMetricsCollection(Object disableMetricsCollection)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "SqlServerSource.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withMaxConcurrentConnections(Object maxConcurrentConnections)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withPartitionOption(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withPartitionOption(Object partitionOption)"
  name: "withPartitionOption(Object partitionOption)"
  nameWithType: "SqlServerSource.withPartitionOption(Object partitionOption)"
  summary: "Set the partitionOption property: The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
  parameters:
  - description: "the partitionOption value to set."
    name: "partitionOption"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withPartitionOption(Object partitionOption)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withPartitionSettings(com.azure.resourcemanager.datafactory.models.SqlPartitionSettings)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withPartitionSettings(SqlPartitionSettings partitionSettings)"
  name: "withPartitionSettings(SqlPartitionSettings partitionSettings)"
  nameWithType: "SqlServerSource.withPartitionSettings(SqlPartitionSettings partitionSettings)"
  summary: "Set the partitionSettings property: The settings that will be leveraged for Sql source partitioning."
  parameters:
  - description: "the partitionSettings value to set."
    name: "partitionSettings"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlPartitionSettings?alt=com.azure.resourcemanager.datafactory.models.SqlPartitionSettings&text=SqlPartitionSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withPartitionSettings(SqlPartitionSettings partitionSettings)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withProduceAdditionalTypes(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withProduceAdditionalTypes(Object produceAdditionalTypes)"
  name: "withProduceAdditionalTypes(Object produceAdditionalTypes)"
  nameWithType: "SqlServerSource.withProduceAdditionalTypes(Object produceAdditionalTypes)"
  summary: "Set the produceAdditionalTypes property: Which additional types to produce."
  parameters:
  - description: "the produceAdditionalTypes value to set."
    name: "produceAdditionalTypes"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withProduceAdditionalTypes(Object produceAdditionalTypes)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withQueryTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withQueryTimeout(Object queryTimeout)"
  name: "withQueryTimeout(Object queryTimeout)"
  nameWithType: "SqlServerSource.withQueryTimeout(Object queryTimeout)"
  summary: "Set the queryTimeout property: Query timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withQueryTimeout(java.lang.Object)"
  parameters:
  - name: "queryTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withQueryTimeout(Object queryTimeout)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSourceRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSourceRetryCount(Object sourceRetryCount)"
  name: "withSourceRetryCount(Object sourceRetryCount)"
  nameWithType: "SqlServerSource.withSourceRetryCount(Object sourceRetryCount)"
  summary: "Set the sourceRetryCount property: Source retry count. Type: integer (or Expression with resultType integer)."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryCount(java.lang.Object)"
  parameters:
  - name: "sourceRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withSourceRetryCount(Object sourceRetryCount)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSourceRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSourceRetryWait(Object sourceRetryWait)"
  name: "withSourceRetryWait(Object sourceRetryWait)"
  nameWithType: "SqlServerSource.withSourceRetryWait(Object sourceRetryWait)"
  summary: "Set the sourceRetryWait property: Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryWait(java.lang.Object)"
  parameters:
  - name: "sourceRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withSourceRetryWait(Object sourceRetryWait)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSqlReaderQuery(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSqlReaderQuery(Object sqlReaderQuery)"
  name: "withSqlReaderQuery(Object sqlReaderQuery)"
  nameWithType: "SqlServerSource.withSqlReaderQuery(Object sqlReaderQuery)"
  summary: "Set the sqlReaderQuery property: SQL reader query. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the sqlReaderQuery value to set."
    name: "sqlReaderQuery"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withSqlReaderQuery(Object sqlReaderQuery)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSqlReaderStoredProcedureName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withSqlReaderStoredProcedureName(Object sqlReaderStoredProcedureName)"
  name: "withSqlReaderStoredProcedureName(Object sqlReaderStoredProcedureName)"
  nameWithType: "SqlServerSource.withSqlReaderStoredProcedureName(Object sqlReaderStoredProcedureName)"
  summary: "Set the sqlReaderStoredProcedureName property: Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the sqlReaderStoredProcedureName value to set."
    name: "sqlReaderStoredProcedureName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlServerSource withSqlReaderStoredProcedureName(Object sqlReaderStoredProcedureName)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withStoredProcedureParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.StoredProcedureParameter>)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlServerSource.withStoredProcedureParameters(Map<String,StoredProcedureParameter> storedProcedureParameters)"
  name: "withStoredProcedureParameters(Map<String,StoredProcedureParameter> storedProcedureParameters)"
  nameWithType: "SqlServerSource.withStoredProcedureParameters(Map<String,StoredProcedureParameter> storedProcedureParameters)"
  summary: "Set the storedProcedureParameters property: Value and type setting for stored procedure parameters. Example: \"\\{Parameter1: \\{value: \"1\", type: \"int\"\\}\\}\"."
  parameters:
  - description: "the storedProcedureParameters value to set."
    name: "storedProcedureParameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.StoredProcedureParameter?alt=com.azure.resourcemanager.datafactory.models.StoredProcedureParameter&text=StoredProcedureParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SqlServerSource withStoredProcedureParameters(Map<String,StoredProcedureParameter> storedProcedureParameters)"
  returns:
    description: "the SqlServerSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerSource?alt=com.azure.resourcemanager.datafactory.models.SqlServerSource&text=SqlServerSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
