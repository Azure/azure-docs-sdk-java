### YamlMime:JavaMember
uid: "com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress*"
fullName: "com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress"
name: "withStartIpAddress"
nameWithType: "FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress"
members:
- uid: "com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress(String startIpAddress)"
  name: "withStartIpAddress(String startIpAddress)"
  nameWithType: "FirewallRule.DefinitionStages.WithStartIpAddress.withStartIpAddress(String startIpAddress)"
  summary: "Specifies the startIpAddress property: The start IP address of the server firewall rule. Must be IPv4 format.."
  parameters:
  - description: "The start IP address of the server firewall rule. Must be IPv4 format."
    name: "startIpAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FirewallRule.DefinitionStages.WithEndIpAddress withStartIpAddress(String startIpAddress)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithEndIpAddress?alt=com.azure.resourcemanager.mysql.models.FirewallRule.DefinitionStages.WithEndIpAddress&text=WithEndIpAddress\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.mysql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mysql:1.0.0-beta.1
