### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder<K,V>"
name: "ImmutableSortedMap.Builder<K,V>"
nameWithType: "ImmutableSortedMap.Builder<K,V>"
summary: "A builder for creating immutable sorted map instances, especially `public static final` maps (\"constant maps\"). Example:\n\n```java\nstatic final ImmutableSortedMap INT_TO_WORD =\n     new ImmutableSortedMap.Builder(Ordering.natural())\n         .put(1, \"one\")\n         .put(2, \"two\")\n         .put(3, \"three\")\n         .build();\n```\n\nFor *small* immutable sorted maps, the `ImmutableSortedMap.of()` methods are even more convenient.\n\nBuilder instances can be reused - it is safe to call <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.build\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#build\"></xref> multiple times to build multiple maps in series. Each map is a superset of the maps created before it."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.build()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.orderEntriesByValue(java.util.Comparator<? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.put(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.put(java.util.Map.Entry<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.putAll(java.util.Map<? extends K,? extends V>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class ImmutableSortedMap.Builder<K,V> extends ImmutableMap.Builder<K,V>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.Builder(java.util.Comparator<? super K>)"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.build()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.orderEntriesByValue(java.util.Comparator<? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.put(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.put(java.util.Map.Entry<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.Builder.putAll(java.util.Map<? extends K,? extends V>)"
type: "class"
typeParameters:
- name: "K"
- name: "V"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
