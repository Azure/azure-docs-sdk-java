### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.policy.PortPolicy
  id: PortPolicy
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy
  children:
  - com.azure.core.http.policy.PortPolicy.PortPolicy(int,boolean)
  - com.azure.core.http.policy.PortPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  langs:
  - java
  name: PortPolicy
  nameWithType: PortPolicy
  fullName: com.azure.core.http.policy.PortPolicy
  type: Class
  package: com.azure.core.http.policy
  summary: The pipeline policy that adds a given port to each <xref uid="com.azure.core.http.HttpRequest" data-throw-if-not-resolved="false">HttpRequest</xref>.
  syntax:
    content: public class PortPolicy implements HttpPipelinePolicy
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.http.policy.HttpPipelinePolicy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.policy.PortPolicy.PortPolicy(int,boolean)
  id: PortPolicy(int,boolean)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy.PortPolicy
  langs:
  - java
  name: PortPolicy(int port, boolean overwrite)
  nameWithType: PortPolicy.PortPolicy(int port, boolean overwrite)
  fullName: com.azure.core.http.policy.PortPolicy.PortPolicy(int port, boolean overwrite)
  overload: com.azure.core.http.policy.PortPolicy.PortPolicy*
  type: Constructor
  package: com.azure.core.http.policy
  summary: Creates a new PortPolicy object.
  syntax:
    content: public PortPolicy(int port, boolean overwrite)
    parameters:
    - id: port
      type: int
      description: The port to set.
    - id: overwrite
      type: boolean
      description: Whether or not to overwrite a <xref uid="com.azure.core.http.HttpRequest" data-throw-if-not-resolved="false">HttpRequest's</xref> port if it already has one.
- uid: com.azure.core.http.policy.PortPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  id: process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.policy.PortPolicy
  langs:
  - java
  name: process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  nameWithType: PortPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  fullName: com.azure.core.http.policy.PortPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  overload: com.azure.core.http.policy.PortPolicy.process*
  type: Method
  package: com.azure.core.http.policy
  summary: Process provided request context and invokes the next policy.
  syntax:
    content: public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
    parameters:
    - id: context
      type: com.azure.core.http.HttpPipelineCallContext
    - id: next
      type: com.azure.core.http.HttpPipelineNextPolicy
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.http.policy.PortPolicy.PortPolicy*
  name: PortPolicy
  nameWithType: PortPolicy.PortPolicy
  fullName: com.azure.core.http.policy.PortPolicy.PortPolicy
  package: com.azure.core.http.policy
- uid: com.azure.core.http.HttpPipelineCallContext
  name: HttpPipelineCallContext
  nameWithType: HttpPipelineCallContext
  fullName: com.azure.core.http.HttpPipelineCallContext
- uid: com.azure.core.http.HttpPipelineNextPolicy
  name: HttpPipelineNextPolicy
  nameWithType: HttpPipelineNextPolicy
  fullName: com.azure.core.http.HttpPipelineNextPolicy
- uid: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.HttpResponse
    name: HttpResponse
    fullName: com.azure.core.http.HttpResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.policy.PortPolicy.process*
  name: process
  nameWithType: PortPolicy.process
  fullName: com.azure.core.http.policy.PortPolicy.process
  package: com.azure.core.http.policy
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
