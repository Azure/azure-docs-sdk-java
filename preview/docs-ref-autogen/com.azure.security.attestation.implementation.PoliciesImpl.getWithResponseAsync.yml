### YamlMime:JavaMember
uid: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync*"
fullName: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync"
name: "getWithResponseAsync"
nameWithType: "PoliciesImpl.getWithResponseAsync"
members:
- uid: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync(com.azure.security.attestation.models.AttestationType)"
  fullName: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync(AttestationType attestationType)"
  name: "getWithResponseAsync(AttestationType attestationType)"
  nameWithType: "PoliciesImpl.getWithResponseAsync(AttestationType attestationType)"
  summary: "Retrieves the current policy for an attestation type."
  parameters:
  - description: "Specifies the trusted execution environment to be used to validate the evidence."
    name: "attestationType"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationType?alt=com.azure.security.attestation.models.AttestationType&text=AttestationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PolicyResponse>> getWithResponseAsync(AttestationType attestationType)"
  returns:
    description: "the response to an attestation policy operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.models.PolicyResponse?alt=com.azure.security.attestation.models.PolicyResponse&text=PolicyResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync(com.azure.security.attestation.models.AttestationType,com.azure.core.util.Context)"
  fullName: "com.azure.security.attestation.implementation.PoliciesImpl.getWithResponseAsync(AttestationType attestationType, Context context)"
  name: "getWithResponseAsync(AttestationType attestationType, Context context)"
  nameWithType: "PoliciesImpl.getWithResponseAsync(AttestationType attestationType, Context context)"
  summary: "Retrieves the current policy for an attestation type."
  parameters:
  - description: "Specifies the trusted execution environment to be used to validate the evidence."
    name: "attestationType"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationType?alt=com.azure.security.attestation.models.AttestationType&text=AttestationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PolicyResponse>> getWithResponseAsync(AttestationType attestationType, Context context)"
  returns:
    description: "the response to an attestation policy operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.models.PolicyResponse?alt=com.azure.security.attestation.models.PolicyResponse&text=PolicyResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.attestation.implementation"
artifact: com.azure:azure-security-attestation:1.0.0-beta.1
