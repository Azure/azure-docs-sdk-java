### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  id: LeaseLostException
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions
  children:
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException()
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease,java.lang.Exception,boolean)
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(java.lang.String,java.lang.Exception)
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease()
  - com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone()
  langs:
  - java
  name: LeaseLostException
  nameWithType: LeaseLostException
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  type: Class
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: 'Exception occurred when lease is lost, that would typically happen when it is taken by another host. Other cases: communication failure, number of retries reached, lease not found.'
  syntax:
    content: public class LeaseLostException extends RuntimeException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.lang.RuntimeException
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  - java.lang.Throwable.toString()
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException()
  id: LeaseLostException()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: LeaseLostException()
  nameWithType: LeaseLostException.LeaseLostException()
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException()
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Initializes a new instance of the @link LeaseLostException\} class.
  syntax:
    content: public LeaseLostException()
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease)
  id: LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: LeaseLostException(Lease lease)
  nameWithType: LeaseLostException.LeaseLostException(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Initializes a new instance of the @link LeaseLostException\} class using the specified lease.
  syntax:
    content: public LeaseLostException(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
      description: an instance of a lost lease.
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease,java.lang.Exception,boolean)
  id: LeaseLostException(com.azure.cosmos.implementation.changefeed.Lease,java.lang.Exception,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: LeaseLostException(Lease lease, Exception innerException, boolean isGone)
  nameWithType: LeaseLostException.LeaseLostException(Lease lease, Exception innerException, boolean isGone)
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(Lease lease, Exception innerException, boolean isGone)
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Initializes a new instance of the @link LeaseLostException\} class using the specified lease, inner exception, and a flag indicating whether lease is gone..
  syntax:
    content: public LeaseLostException(Lease lease, Exception innerException, boolean isGone)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
      description: an instance of a lost lease.
    - id: innerException
      type: java.lang.Exception
      description: the inner exception.
    - id: isGone
      type: boolean
      description: true if lease doesn't exist.
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(java.lang.String)
  id: LeaseLostException(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: LeaseLostException(String message)
  nameWithType: LeaseLostException.LeaseLostException(String message)
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(String message)
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Initializes a new instance of the @link LeaseLostException\} class using error message.
  syntax:
    content: public LeaseLostException(String message)
    parameters:
    - id: message
      type: java.lang.String
      description: the exception error message.
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(java.lang.String,java.lang.Exception)
  id: LeaseLostException(java.lang.String,java.lang.Exception)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: LeaseLostException(String message, Exception innerException)
  nameWithType: LeaseLostException.LeaseLostException(String message, Exception innerException)
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException(String message, Exception innerException)
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Initializes a new instance of the @link LeaseLostException\} class using error message and inner exception.
  syntax:
    content: public LeaseLostException(String message, Exception innerException)
    parameters:
    - id: message
      type: java.lang.String
      description: the exception error message.
    - id: innerException
      type: java.lang.Exception
      description: the inner exception.
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease()
  id: getLease()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: getLease()
  nameWithType: LeaseLostException.getLease()
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease()
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Gets the lost lease.
  syntax:
    content: public Lease getLease()
    return:
      type: com.azure.cosmos.implementation.changefeed.Lease
      description: the lost lease.
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone()
  id: isGone()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException
  langs:
  - java
  name: isGone()
  nameWithType: LeaseLostException.isGone()
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone()
  overload: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.exceptions
  summary: Gets a value indicating whether lease doesn't exist.
  syntax:
    content: public boolean isGone()
    return:
      type: boolean
      description: true if lease is gone.
references:
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException*
  name: LeaseLostException
  nameWithType: LeaseLostException.LeaseLostException
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.LeaseLostException
  package: com.azure.cosmos.implementation.changefeed.exceptions
- uid: com.azure.cosmos.implementation.changefeed.Lease
  name: Lease
  nameWithType: Lease
  fullName: com.azure.cosmos.implementation.changefeed.Lease
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease*
  name: getLease
  nameWithType: LeaseLostException.getLease
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.getLease
  package: com.azure.cosmos.implementation.changefeed.exceptions
- uid: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone*
  name: isGone
  nameWithType: LeaseLostException.isGone
  fullName: com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException.isGone
  package: com.azure.cosmos.implementation.changefeed.exceptions
- uid: java.lang.RuntimeException
  name: RuntimeException
  nameWithType: RuntimeException
  fullName: java.lang.RuntimeException
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: java.lang.Throwable.toString()
  name: Throwable.toString()
  nameWithType: Throwable.toString()
  fullName: java.lang.Throwable.toString()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: java.lang.Throwable.getMessage()
  name: Throwable.getMessage()
  nameWithType: Throwable.getMessage()
  fullName: java.lang.Throwable.getMessage()
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
