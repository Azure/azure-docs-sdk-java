### YamlMime:JavaType
uid: "com.azure.developer.devcenter.DevBoxesAsyncClient"
fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient"
name: "DevBoxesAsyncClient"
nameWithType: "DevBoxesAsyncClient"
summary: "Initializes a new instance of the asynchronous Dev<wbr>Boxes<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DevBoxesAsyncClient**"
methods:
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginCreateDevBox(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginCreateDevBox(String projectName, String userId, String devBoxName, BinaryData body, RequestOptions requestOptions)"
  name: "beginCreateDevBox(String projectName, String userId, String devBoxName, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.beginCreateDevBox(String projectName, String userId, String devBoxName, BinaryData body, RequestOptions requestOptions)"
  summary: "Creates or replaces a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Represents a environment."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginCreateDevBox(String projectName, String userId, String devBoxName, BinaryData body, RequestOptions requestOptions)"
  desc: "Creates or replaces a Dev Box.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of a Dev Box."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginDeleteDevBox(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginDeleteDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "beginDeleteDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.beginDeleteDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Deletes a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,Void> beginDeleteDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Deletes a Dev Box.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Optional)\n     name: String (Optional)\n     status: String(Running/Completed/Canceled/Failed) (Required)\n     resourceId: String (Optional)\n     startTime: OffsetDateTime (Optional)\n     endTime: OffsetDateTime (Optional)\n     percentComplete: Double (Optional)\n     properties: Object (Optional)\n     error (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginRestartDevBox(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginRestartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "beginRestartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.beginRestartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Restarts a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginRestartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Restarts a Dev Box.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Optional)\n     name: String (Optional)\n     status: String(Running/Completed/Canceled/Failed) (Required)\n     resourceId: String (Optional)\n     startTime: OffsetDateTime (Optional)\n     endTime: OffsetDateTime (Optional)\n     percentComplete: Double (Optional)\n     properties: Object (Optional)\n     error (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginStartDevBox(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginStartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "beginStartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.beginStartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Starts a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginStartDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Starts a Dev Box.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Optional)\n     name: String (Optional)\n     status: String(Running/Completed/Canceled/Failed) (Required)\n     resourceId: String (Optional)\n     startTime: OffsetDateTime (Optional)\n     endTime: OffsetDateTime (Optional)\n     percentComplete: Double (Optional)\n     properties: Object (Optional)\n     error (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginStopDevBox(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.beginStopDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "beginStopDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.beginStopDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Stops a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginStopDevBox(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Stops a Dev Box.\n\n**Query Parameters**\n\n    | --------- | ------- | -------- | -------------------------------------------- |\n    | Name      | Type    | Required | Description                                  |\n    | hibernate | Boolean | No       | Optional parameter to hibernate the dev box. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Optional)\n     name: String (Optional)\n     status: String(Running/Completed/Canceled/Failed) (Required)\n     resourceId: String (Optional)\n     startTime: OffsetDateTime (Optional)\n     endTime: OffsetDateTime (Optional)\n     percentComplete: Double (Optional)\n     properties: Object (Optional)\n     error (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.delayActionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.OffsetDateTime,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.delayActionWithResponse(String projectName, String userId, String devBoxName, String actionName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  name: "delayActionWithResponse(String projectName, String userId, String devBoxName, String actionName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.delayActionWithResponse(String projectName, String userId, String devBoxName, String actionName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  summary: "Delays the occurrence of an action."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of an action that will take place on a Dev Box."
    name: "actionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The time to delay the Dev Box action or actions until."
    name: "delayUntil"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> delayActionWithResponse(String projectName, String userId, String devBoxName, String actionName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  desc: "Delays the occurrence of an action.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     actionType: String(Stop) (Required)\n     sourceId: String (Required)\n     suspendedUntil: OffsetDateTime (Optional)\n     next (Optional): {\n         scheduledTime: OffsetDateTime (Required)\n     }\n }\n```"
  returns:
    description: "an action which will take place on a Dev Box along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.delayAllActions(java.lang.String,java.lang.String,java.lang.String,java.time.OffsetDateTime,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.delayAllActions(String projectName, String userId, String devBoxName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  name: "delayAllActions(String projectName, String userId, String devBoxName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.delayAllActions(String projectName, String userId, String devBoxName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  summary: "Delays all actions."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The time to delay the Dev Box action or actions until."
    name: "delayUntil"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> delayAllActions(String projectName, String userId, String devBoxName, OffsetDateTime delayUntil, RequestOptions requestOptions)"
  desc: "Delays all actions.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     result: String(Succeeded/Failed) (Required)\n     action (Optional): {\n         name: String (Required)\n         actionType: String(Stop) (Required)\n         sourceId: String (Required)\n         suspendedUntil: OffsetDateTime (Optional)\n         next (Optional): {\n             scheduledTime: OffsetDateTime (Required)\n         }\n     }\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "the actions list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.getDevBoxActionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.getDevBoxActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  name: "getDevBoxActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.getDevBoxActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  summary: "Gets an action."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of an action that will take place on a Dev Box."
    name: "actionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getDevBoxActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  desc: "Gets an action.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     actionType: String(Stop) (Required)\n     sourceId: String (Required)\n     suspendedUntil: OffsetDateTime (Optional)\n     next (Optional): {\n         scheduledTime: OffsetDateTime (Required)\n     }\n }\n```"
  returns:
    description: "an action along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.getDevBoxWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.getDevBoxWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "getDevBoxWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.getDevBoxWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Gets a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getDevBoxWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Gets a Dev Box.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "a Dev Box along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.getPoolWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.getPoolWithResponse(String projectName, String poolName, RequestOptions requestOptions)"
  name: "getPoolWithResponse(String projectName, String poolName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.getPoolWithResponse(String projectName, String poolName, RequestOptions requestOptions)"
  summary: "Gets a pool."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a pool of Dev Boxes."
    name: "poolName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getPoolWithResponse(String projectName, String poolName, RequestOptions requestOptions)"
  desc: "Gets a pool.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     location: String (Required)\n     osType: String(Windows) (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     localAdministrator: String(Enabled/Disabled) (Optional)\n     stopOnDisconnect (Optional): {\n         status: String(Enabled/Disabled) (Required)\n         gracePeriodMinutes: Integer (Optional)\n     }\n     healthStatus: String(Unknown/Pending/Healthy/Warning/Unhealthy) (Required)\n }\n```"
  returns:
    description: "a pool along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.getRemoteConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.getRemoteConnectionWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "getRemoteConnectionWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.getRemoteConnectionWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Gets RDP Connection info."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getRemoteConnectionWithResponse(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Gets RDP Connection info.\n\n**Response Body Schema**\n\n```java\n{\n     webUrl: String (Optional)\n     rdpConnectionUrl: String (Optional)\n }\n```"
  returns:
    description: "rDP Connection info along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.getScheduleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.getScheduleWithResponse(String projectName, String poolName, String scheduleName, RequestOptions requestOptions)"
  name: "getScheduleWithResponse(String projectName, String poolName, String scheduleName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.getScheduleWithResponse(String projectName, String poolName, String scheduleName, RequestOptions requestOptions)"
  summary: "Gets a schedule."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a pool of Dev Boxes."
    name: "poolName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a schedule."
    name: "scheduleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getScheduleWithResponse(String projectName, String poolName, String scheduleName, RequestOptions requestOptions)"
  desc: "Gets a schedule.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     type: String(StopDevBox) (Required)\n     frequency: String(Daily) (Required)\n     time: String (Required)\n     timeZone: String (Required)\n }\n```"
  returns:
    description: "a schedule along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listAllDevBoxes(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listAllDevBoxes(RequestOptions requestOptions)"
  name: "listAllDevBoxes(RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listAllDevBoxes(RequestOptions requestOptions)"
  summary: "Lists Dev Boxes that the caller has access to in the Dev<wbr>Center."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAllDevBoxes(RequestOptions requestOptions)"
  desc: "Lists Dev Boxes that the caller has access to in the DevCenter.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the Dev Box list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listAllDevBoxesByUser(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  name: "listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  summary: "Lists Dev Boxes in the Dev Center for a particular user."
  parameters:
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  desc: "Lists Dev Boxes in the Dev Center for a particular user.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the Dev Box list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listDevBoxActions(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listDevBoxActions(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  name: "listDevBoxActions(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listDevBoxActions(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  summary: "Lists actions on a Dev Box."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listDevBoxActions(String projectName, String userId, String devBoxName, RequestOptions requestOptions)"
  desc: "Lists actions on a Dev Box.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     actionType: String(Stop) (Required)\n     sourceId: String (Required)\n     suspendedUntil: OffsetDateTime (Optional)\n     next (Optional): {\n         scheduledTime: OffsetDateTime (Required)\n     }\n }\n```"
  returns:
    description: "the actions list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listDevBoxes(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listDevBoxes(String projectName, String userId, RequestOptions requestOptions)"
  name: "listDevBoxes(String projectName, String userId, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listDevBoxes(String projectName, String userId, RequestOptions requestOptions)"
  summary: "Lists Dev Boxes in the project for a particular user."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listDevBoxes(String projectName, String userId, RequestOptions requestOptions)"
  desc: "Lists Dev Boxes in the project for a particular user.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     projectName: String (Optional)\n     poolName: String (Required)\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Running/Deallocated/PoweredOff/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the Dev Box list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listPools(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listPools(String projectName, RequestOptions requestOptions)"
  name: "listPools(String projectName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listPools(String projectName, RequestOptions requestOptions)"
  summary: "Lists available pools."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listPools(String projectName, RequestOptions requestOptions)"
  desc: "Lists available pools.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     location: String (Required)\n     osType: String(Windows) (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     hibernateSupport: String(Enabled/Disabled/OsUnsupported) (Optional)\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     localAdministrator: String(Enabled/Disabled) (Optional)\n     stopOnDisconnect (Optional): {\n         status: String(Enabled/Disabled) (Required)\n         gracePeriodMinutes: Integer (Optional)\n     }\n     healthStatus: String(Unknown/Pending/Healthy/Warning/Unhealthy) (Required)\n }\n```"
  returns:
    description: "the Pool list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.listSchedules(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.listSchedules(String projectName, String poolName, RequestOptions requestOptions)"
  name: "listSchedules(String projectName, String poolName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.listSchedules(String projectName, String poolName, RequestOptions requestOptions)"
  summary: "Lists available schedules for a pool."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a pool of Dev Boxes."
    name: "poolName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listSchedules(String projectName, String poolName, RequestOptions requestOptions)"
  desc: "Lists available schedules for a pool.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     type: String(StopDevBox) (Required)\n     frequency: String(Daily) (Required)\n     time: String (Required)\n     timeZone: String (Required)\n }\n```"
  returns:
    description: "the Schedule list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevBoxesAsyncClient.skipActionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevBoxesAsyncClient.skipActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  name: "skipActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  nameWithType: "DevBoxesAsyncClient.skipActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  summary: "Skips an occurrence of an action."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of a Dev Box."
    name: "devBoxName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of an action that will take place on a Dev Box."
    name: "actionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> skipActionWithResponse(String projectName, String userId, String devBoxName, String actionName, RequestOptions requestOptions)"
  desc: "Skips an occurrence of an action."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DevBoxesClient type."
metadata: {}
package: "com.azure.developer.devcenter"
artifact: com.azure:azure-developer-devcenter:1.0.0-beta.3
