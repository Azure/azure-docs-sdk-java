### YamlMime:JavaMember
uid: "com.azure.resourcemanager.costmanagement.implementation.QueriesImpl.usageByExternalCloudProviderTypeWithResponse*"
fullName: "com.azure.resourcemanager.costmanagement.implementation.QueriesImpl.usageByExternalCloudProviderTypeWithResponse"
name: "usageByExternalCloudProviderTypeWithResponse"
nameWithType: "QueriesImpl.usageByExternalCloudProviderTypeWithResponse"
members:
- uid: "com.azure.resourcemanager.costmanagement.implementation.QueriesImpl.usageByExternalCloudProviderTypeWithResponse(com.azure.resourcemanager.costmanagement.models.ExternalCloudProviderType,java.lang.String,com.azure.resourcemanager.costmanagement.models.QueryDefinition,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.implementation.QueriesImpl.usageByExternalCloudProviderTypeWithResponse(ExternalCloudProviderType externalCloudProviderType, String externalCloudProviderId, QueryDefinition parameters, Context context)"
  name: "usageByExternalCloudProviderTypeWithResponse(ExternalCloudProviderType externalCloudProviderType, String externalCloudProviderId, QueryDefinition parameters, Context context)"
  nameWithType: "QueriesImpl.usageByExternalCloudProviderTypeWithResponse(ExternalCloudProviderType externalCloudProviderType, String externalCloudProviderId, QueryDefinition parameters, Context context)"
  summary: "Query the usage data for external cloud provider type defined."
  parameters:
  - name: "externalCloudProviderType"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExternalCloudProviderType?alt=com.azure.resourcemanager.costmanagement.models.ExternalCloudProviderType&text=ExternalCloudProviderType\" data-throw-if-not-resolved=\"False\" />"
  - name: "externalCloudProviderId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDefinition?alt=com.azure.resourcemanager.costmanagement.models.QueryDefinition&text=QueryDefinition\" data-throw-if-not-resolved=\"False\" />"
  - name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<QueryResult> usageByExternalCloudProviderTypeWithResponse(ExternalCloudProviderType externalCloudProviderType, String externalCloudProviderId, QueryDefinition parameters, Context context)"
  returns:
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryResult?alt=com.azure.resourcemanager.costmanagement.models.QueryResult&text=QueryResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.costmanagement.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.1
