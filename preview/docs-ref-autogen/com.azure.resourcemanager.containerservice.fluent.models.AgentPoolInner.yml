### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner"
fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner"
name: "AgentPoolInner"
nameWithType: "AgentPoolInner"
summary: "Agent Pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AgentPoolInner extends SubResource"
constructors:
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.AgentPoolInner()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.AgentPoolInner()"
  name: "AgentPoolInner()"
  nameWithType: "AgentPoolInner.AgentPoolInner()"
  syntax: "public AgentPoolInner()"
methods:
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.availabilityZones()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.availabilityZones()"
  name: "availabilityZones()"
  nameWithType: "AgentPoolInner.availabilityZones()"
  summary: "Get the availabilityZones property: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'."
  syntax: "public List<String> availabilityZones()"
  returns:
    description: "the availabilityZones value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.count()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.count()"
  name: "count()"
  nameWithType: "AgentPoolInner.count()"
  summary: "Get the count property: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1."
  syntax: "public Integer count()"
  returns:
    description: "the count value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.creationData()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.creationData()"
  name: "creationData()"
  nameWithType: "AgentPoolInner.creationData()"
  summary: "Get the creationData property: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot."
  syntax: "public CreationData creationData()"
  returns:
    description: "the creationData value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.CreationData?alt=com.azure.resourcemanager.containerservice.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableAutoScaling()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableAutoScaling()"
  name: "enableAutoScaling()"
  nameWithType: "AgentPoolInner.enableAutoScaling()"
  summary: "Get the enableAutoScaling property: Whether to enable auto-scaler."
  syntax: "public Boolean enableAutoScaling()"
  returns:
    description: "the enableAutoScaling value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableEncryptionAtHost()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableEncryptionAtHost()"
  name: "enableEncryptionAtHost()"
  nameWithType: "AgentPoolInner.enableEncryptionAtHost()"
  summary: "Get the enableEncryptionAtHost property: Whether to enable host based OS and data drive encryption. This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption."
  syntax: "public Boolean enableEncryptionAtHost()"
  returns:
    description: "the enableEncryptionAtHost value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableFips()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableFips()"
  name: "enableFips()"
  nameWithType: "AgentPoolInner.enableFips()"
  summary: "Get the enableFips property: Whether to use a FIPS-enabled OS. See \\[Add a FIPS-enabled node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#add-a-fips-enabled-node-pool-preview) for more details."
  syntax: "public Boolean enableFips()"
  returns:
    description: "the enableFips value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableNodePublicIp()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableNodePublicIp()"
  name: "enableNodePublicIp()"
  nameWithType: "AgentPoolInner.enableNodePublicIp()"
  summary: "Get the enableNodePublicIp property: Whether each node is allocated its own public IP. Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see \\[assigning a public IP per node\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#assign-a-public-ip-per-node-for-your-node-pools). The default is false."
  syntax: "public Boolean enableNodePublicIp()"
  returns:
    description: "the enableNodePublicIp value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableUltraSsd()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.enableUltraSsd()"
  name: "enableUltraSsd()"
  nameWithType: "AgentPoolInner.enableUltraSsd()"
  summary: "Get the enableUltraSsd property: Whether to enable UltraSSD."
  syntax: "public Boolean enableUltraSsd()"
  returns:
    description: "the enableUltraSsd value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.gpuInstanceProfile()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.gpuInstanceProfile()"
  name: "gpuInstanceProfile()"
  nameWithType: "AgentPoolInner.gpuInstanceProfile()"
  summary: "Get the gpuInstanceProfile property: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU."
  syntax: "public GpuInstanceProfile gpuInstanceProfile()"
  returns:
    description: "the gpuInstanceProfile value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.GpuInstanceProfile?alt=com.azure.resourcemanager.containerservice.models.GpuInstanceProfile&text=GpuInstanceProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.kubeletConfig()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.kubeletConfig()"
  name: "kubeletConfig()"
  nameWithType: "AgentPoolInner.kubeletConfig()"
  summary: "Get the kubeletConfig property: Kubelet configurations of agent nodes. The Kubelet configuration on the agent pool nodes."
  syntax: "public KubeletConfig kubeletConfig()"
  returns:
    description: "the kubeletConfig value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.kubeletDiskType()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.kubeletDiskType()"
  name: "kubeletDiskType()"
  nameWithType: "AgentPoolInner.kubeletDiskType()"
  summary: "Get the kubeletDiskType property: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage."
  syntax: "public KubeletDiskType kubeletDiskType()"
  returns:
    description: "the kubeletDiskType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletDiskType?alt=com.azure.resourcemanager.containerservice.models.KubeletDiskType&text=KubeletDiskType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.linuxOSConfig()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.linuxOSConfig()"
  name: "linuxOSConfig()"
  nameWithType: "AgentPoolInner.linuxOSConfig()"
  summary: "Get the linuxOSConfig property: OS configurations of Linux agent nodes. The OS configuration of Linux agent nodes."
  syntax: "public LinuxOSConfig linuxOSConfig()"
  returns:
    description: "the linuxOSConfig value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LinuxOSConfig?alt=com.azure.resourcemanager.containerservice.models.LinuxOSConfig&text=LinuxOSConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.maxCount()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.maxCount()"
  name: "maxCount()"
  nameWithType: "AgentPoolInner.maxCount()"
  summary: "Get the maxCount property: The maximum number of nodes for auto-scaling."
  syntax: "public Integer maxCount()"
  returns:
    description: "the maxCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.maxPods()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.maxPods()"
  name: "maxPods()"
  nameWithType: "AgentPoolInner.maxPods()"
  summary: "Get the maxPods property: The maximum number of pods that can run on a node."
  syntax: "public Integer maxPods()"
  returns:
    description: "the maxPods value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.minCount()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.minCount()"
  name: "minCount()"
  nameWithType: "AgentPoolInner.minCount()"
  summary: "Get the minCount property: The minimum number of nodes for auto-scaling."
  syntax: "public Integer minCount()"
  returns:
    description: "the minCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.mode()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.mode()"
  name: "mode()"
  nameWithType: "AgentPoolInner.mode()"
  summary: "Get the mode property: The mode of an agent pool. A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools."
  syntax: "public AgentPoolMode mode()"
  returns:
    description: "the mode value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolMode?alt=com.azure.resourcemanager.containerservice.models.AgentPoolMode&text=AgentPoolMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.name()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.name()"
  name: "name()"
  nameWithType: "AgentPoolInner.name()"
  summary: "Get the name property: The name of the resource that is unique within a resource group. This name can be used to access the resource."
  syntax: "public String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeImageVersion()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeImageVersion()"
  name: "nodeImageVersion()"
  nameWithType: "AgentPoolInner.nodeImageVersion()"
  summary: "Get the nodeImageVersion property: The version of node image."
  syntax: "public String nodeImageVersion()"
  returns:
    description: "the nodeImageVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeLabels()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeLabels()"
  name: "nodeLabels()"
  nameWithType: "AgentPoolInner.nodeLabels()"
  summary: "Get the nodeLabels property: The node labels to be persisted across all nodes in agent pool."
  syntax: "public Map<String,String> nodeLabels()"
  returns:
    description: "the nodeLabels value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodePublicIpPrefixId()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodePublicIpPrefixId()"
  name: "nodePublicIpPrefixId()"
  nameWithType: "AgentPoolInner.nodePublicIpPrefixId()"
  summary: "Get the nodePublicIpPrefixId property: The public IP prefix ID which VM nodes should use IPs from. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/publicIPPrefixes/\\{publicIPPrefixName\\}."
  syntax: "public String nodePublicIpPrefixId()"
  returns:
    description: "the nodePublicIpPrefixId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeTaints()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.nodeTaints()"
  name: "nodeTaints()"
  nameWithType: "AgentPoolInner.nodeTaints()"
  summary: "Get the nodeTaints property: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
  syntax: "public List<String> nodeTaints()"
  returns:
    description: "the nodeTaints value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.orchestratorVersion()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.orchestratorVersion()"
  name: "orchestratorVersion()"
  nameWithType: "AgentPoolInner.orchestratorVersion()"
  summary: "Get the orchestratorVersion property: The version of Kubernetes running on the Agent Pool. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see \\[upgrading a node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#upgrade-a-node-pool)."
  syntax: "public String orchestratorVersion()"
  returns:
    description: "the orchestratorVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osDiskSizeGB()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osDiskSizeGB()"
  name: "osDiskSizeGB()"
  nameWithType: "AgentPoolInner.osDiskSizeGB()"
  summary: "Get the osDiskSizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
  syntax: "public Integer osDiskSizeGB()"
  returns:
    description: "the osDiskSizeGB value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osDiskType()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osDiskType()"
  name: "osDiskType()"
  nameWithType: "AgentPoolInner.osDiskType()"
  summary: "Get the osDiskType property: The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see \\[Ephemeral OS\\](https://docs.microsoft.com/azure/aks/cluster-configuration\\#ephemeral-os)."
  syntax: "public OSDiskType osDiskType()"
  returns:
    description: "the osDiskType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSDiskType?alt=com.azure.resourcemanager.containerservice.models.OSDiskType&text=OSDiskType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osSku()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osSku()"
  name: "osSku()"
  nameWithType: "AgentPoolInner.osSku()"
  summary: "Get the osSku property: Specifies an OS SKU. This value must not be specified if OSType is Windows."
  syntax: "public OSSku osSku()"
  returns:
    description: "the osSku value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSSku?alt=com.azure.resourcemanager.containerservice.models.OSSku&text=OSSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osType()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.osType()"
  name: "osType()"
  nameWithType: "AgentPoolInner.osType()"
  summary: "Get the osType property: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
  syntax: "public OSType osType()"
  returns:
    description: "the osType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSType?alt=com.azure.resourcemanager.containerservice.models.OSType&text=OSType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.podSubnetId()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.podSubnetId()"
  name: "podSubnetId()"
  nameWithType: "AgentPoolInner.podSubnetId()"
  summary: "Get the podSubnetId property: The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  syntax: "public String podSubnetId()"
  returns:
    description: "the podSubnetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.powerState()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.powerState()"
  name: "powerState()"
  nameWithType: "AgentPoolInner.powerState()"
  summary: "Get the powerState property: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded."
  syntax: "public PowerState powerState()"
  returns:
    description: "the powerState value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PowerState?alt=com.azure.resourcemanager.containerservice.models.PowerState&text=PowerState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.provisioningState()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "AgentPoolInner.provisioningState()"
  summary: "Get the provisioningState property: The current deployment or provisioning state."
  syntax: "public String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.proximityPlacementGroupId()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.proximityPlacementGroupId()"
  name: "proximityPlacementGroupId()"
  nameWithType: "AgentPoolInner.proximityPlacementGroupId()"
  summary: "Get the proximityPlacementGroupId property: The ID for Proximity Placement Group."
  syntax: "public String proximityPlacementGroupId()"
  returns:
    description: "the proximityPlacementGroupId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleDownMode()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleDownMode()"
  name: "scaleDownMode()"
  nameWithType: "AgentPoolInner.scaleDownMode()"
  summary: "Get the scaleDownMode property: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete."
  syntax: "public ScaleDownMode scaleDownMode()"
  returns:
    description: "the scaleDownMode value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleDownMode?alt=com.azure.resourcemanager.containerservice.models.ScaleDownMode&text=ScaleDownMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleSetEvictionPolicy()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleSetEvictionPolicy()"
  name: "scaleSetEvictionPolicy()"
  nameWithType: "AgentPoolInner.scaleSetEvictionPolicy()"
  summary: "Get the scaleSetEvictionPolicy property: The Virtual Machine Scale Set eviction policy. This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'."
  syntax: "public ScaleSetEvictionPolicy scaleSetEvictionPolicy()"
  returns:
    description: "the scaleSetEvictionPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy?alt=com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy&text=ScaleSetEvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleSetPriority()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.scaleSetPriority()"
  name: "scaleSetPriority()"
  nameWithType: "AgentPoolInner.scaleSetPriority()"
  summary: "Get the scaleSetPriority property: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'."
  syntax: "public ScaleSetPriority scaleSetPriority()"
  returns:
    description: "the scaleSetPriority value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetPriority?alt=com.azure.resourcemanager.containerservice.models.ScaleSetPriority&text=ScaleSetPriority\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.spotMaxPrice()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.spotMaxPrice()"
  name: "spotMaxPrice()"
  nameWithType: "AgentPoolInner.spotMaxPrice()"
  summary: "Get the spotMaxPrice property: The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see \\[spot VMs pricing\\](https://docs.microsoft.com/azure/virtual-machines/spot-vms\\#pricing)."
  syntax: "public Float spotMaxPrice()"
  returns:
    description: "the spotMaxPrice value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.tags()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.tags()"
  name: "tags()"
  nameWithType: "AgentPoolInner.tags()"
  summary: "Get the tags property: The tags to be persisted on the agent pool virtual machine scale set."
  syntax: "public Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.type()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.type()"
  name: "type()"
  nameWithType: "AgentPoolInner.type()"
  summary: "Get the type property: Resource type."
  syntax: "public String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.typePropertiesType()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.typePropertiesType()"
  name: "typePropertiesType()"
  nameWithType: "AgentPoolInner.typePropertiesType()"
  summary: "Get the type property: The type of Agent Pool."
  syntax: "public AgentPoolType typePropertiesType()"
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolType?alt=com.azure.resourcemanager.containerservice.models.AgentPoolType&text=AgentPoolType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.upgradeSettings()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.upgradeSettings()"
  name: "upgradeSettings()"
  nameWithType: "AgentPoolInner.upgradeSettings()"
  summary: "Get the upgradeSettings property: Settings for upgrading the agentpool."
  syntax: "public AgentPoolUpgradeSettings upgradeSettings()"
  returns:
    description: "the upgradeSettings value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings?alt=com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings&text=AgentPoolUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.validate()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.validate()"
  name: "validate()"
  nameWithType: "AgentPoolInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.vmSize()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.vmSize()"
  name: "vmSize()"
  nameWithType: "AgentPoolInner.vmSize()"
  summary: "Get the vmSize property: The size of the agent pool VMs. VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions."
  syntax: "public String vmSize()"
  returns:
    description: "the vmSize value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.vnetSubnetId()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.vnetSubnetId()"
  name: "vnetSubnetId()"
  nameWithType: "AgentPoolInner.vnetSubnetId()"
  summary: "Get the vnetSubnetId property: The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  syntax: "public String vnetSubnetId()"
  returns:
    description: "the vnetSubnetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withAvailabilityZones(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withAvailabilityZones(List<String> availabilityZones)"
  name: "withAvailabilityZones(List<String> availabilityZones)"
  nameWithType: "AgentPoolInner.withAvailabilityZones(List<String> availabilityZones)"
  summary: "Set the availabilityZones property: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'."
  parameters:
  - description: "the availabilityZones value to set."
    name: "availabilityZones"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AgentPoolInner withAvailabilityZones(List<String> availabilityZones)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withCount(Integer count)"
  name: "withCount(Integer count)"
  nameWithType: "AgentPoolInner.withCount(Integer count)"
  summary: "Set the count property: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1."
  parameters:
  - description: "the count value to set."
    name: "count"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withCount(Integer count)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withCreationData(com.azure.resourcemanager.containerservice.models.CreationData)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withCreationData(CreationData creationData)"
  name: "withCreationData(CreationData creationData)"
  nameWithType: "AgentPoolInner.withCreationData(CreationData creationData)"
  summary: "Set the creationData property: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot."
  parameters:
  - description: "the creationData value to set."
    name: "creationData"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.CreationData?alt=com.azure.resourcemanager.containerservice.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withCreationData(CreationData creationData)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableAutoScaling(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableAutoScaling(Boolean enableAutoScaling)"
  name: "withEnableAutoScaling(Boolean enableAutoScaling)"
  nameWithType: "AgentPoolInner.withEnableAutoScaling(Boolean enableAutoScaling)"
  summary: "Set the enableAutoScaling property: Whether to enable auto-scaler."
  parameters:
  - description: "the enableAutoScaling value to set."
    name: "enableAutoScaling"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withEnableAutoScaling(Boolean enableAutoScaling)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableEncryptionAtHost(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  name: "withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  nameWithType: "AgentPoolInner.withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  summary: "Set the enableEncryptionAtHost property: Whether to enable host based OS and data drive encryption. This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption."
  parameters:
  - description: "the enableEncryptionAtHost value to set."
    name: "enableEncryptionAtHost"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableFips(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableFips(Boolean enableFips)"
  name: "withEnableFips(Boolean enableFips)"
  nameWithType: "AgentPoolInner.withEnableFips(Boolean enableFips)"
  summary: "Set the enableFips property: Whether to use a FIPS-enabled OS. See \\[Add a FIPS-enabled node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#add-a-fips-enabled-node-pool-preview) for more details."
  parameters:
  - description: "the enableFips value to set."
    name: "enableFips"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withEnableFips(Boolean enableFips)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableNodePublicIp(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableNodePublicIp(Boolean enableNodePublicIp)"
  name: "withEnableNodePublicIp(Boolean enableNodePublicIp)"
  nameWithType: "AgentPoolInner.withEnableNodePublicIp(Boolean enableNodePublicIp)"
  summary: "Set the enableNodePublicIp property: Whether each node is allocated its own public IP. Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see \\[assigning a public IP per node\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#assign-a-public-ip-per-node-for-your-node-pools). The default is false."
  parameters:
  - description: "the enableNodePublicIp value to set."
    name: "enableNodePublicIp"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withEnableNodePublicIp(Boolean enableNodePublicIp)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableUltraSsd(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withEnableUltraSsd(Boolean enableUltraSsd)"
  name: "withEnableUltraSsd(Boolean enableUltraSsd)"
  nameWithType: "AgentPoolInner.withEnableUltraSsd(Boolean enableUltraSsd)"
  summary: "Set the enableUltraSsd property: Whether to enable UltraSSD."
  parameters:
  - description: "the enableUltraSsd value to set."
    name: "enableUltraSsd"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withEnableUltraSsd(Boolean enableUltraSsd)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withGpuInstanceProfile(com.azure.resourcemanager.containerservice.models.GpuInstanceProfile)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  name: "withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  nameWithType: "AgentPoolInner.withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  summary: "Set the gpuInstanceProfile property: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU."
  parameters:
  - description: "the gpuInstanceProfile value to set."
    name: "gpuInstanceProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.GpuInstanceProfile?alt=com.azure.resourcemanager.containerservice.models.GpuInstanceProfile&text=GpuInstanceProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withId(String id)"
  name: "withId(String id)"
  nameWithType: "AgentPoolInner.withId(String id)"
  overridden: "com.azure.core.management.SubResource.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withId(String id)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withKubeletConfig(com.azure.resourcemanager.containerservice.models.KubeletConfig)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withKubeletConfig(KubeletConfig kubeletConfig)"
  name: "withKubeletConfig(KubeletConfig kubeletConfig)"
  nameWithType: "AgentPoolInner.withKubeletConfig(KubeletConfig kubeletConfig)"
  summary: "Set the kubeletConfig property: Kubelet configurations of agent nodes. The Kubelet configuration on the agent pool nodes."
  parameters:
  - description: "the kubeletConfig value to set."
    name: "kubeletConfig"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withKubeletConfig(KubeletConfig kubeletConfig)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withKubeletDiskType(com.azure.resourcemanager.containerservice.models.KubeletDiskType)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  name: "withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  nameWithType: "AgentPoolInner.withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  summary: "Set the kubeletDiskType property: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage."
  parameters:
  - description: "the kubeletDiskType value to set."
    name: "kubeletDiskType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletDiskType?alt=com.azure.resourcemanager.containerservice.models.KubeletDiskType&text=KubeletDiskType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withLinuxOSConfig(com.azure.resourcemanager.containerservice.models.LinuxOSConfig)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  name: "withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  nameWithType: "AgentPoolInner.withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  summary: "Set the linuxOSConfig property: OS configurations of Linux agent nodes. The OS configuration of Linux agent nodes."
  parameters:
  - description: "the linuxOSConfig value to set."
    name: "linuxOSConfig"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LinuxOSConfig?alt=com.azure.resourcemanager.containerservice.models.LinuxOSConfig&text=LinuxOSConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMaxCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMaxCount(Integer maxCount)"
  name: "withMaxCount(Integer maxCount)"
  nameWithType: "AgentPoolInner.withMaxCount(Integer maxCount)"
  summary: "Set the maxCount property: The maximum number of nodes for auto-scaling."
  parameters:
  - description: "the maxCount value to set."
    name: "maxCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withMaxCount(Integer maxCount)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMaxPods(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMaxPods(Integer maxPods)"
  name: "withMaxPods(Integer maxPods)"
  nameWithType: "AgentPoolInner.withMaxPods(Integer maxPods)"
  summary: "Set the maxPods property: The maximum number of pods that can run on a node."
  parameters:
  - description: "the maxPods value to set."
    name: "maxPods"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withMaxPods(Integer maxPods)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMinCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMinCount(Integer minCount)"
  name: "withMinCount(Integer minCount)"
  nameWithType: "AgentPoolInner.withMinCount(Integer minCount)"
  summary: "Set the minCount property: The minimum number of nodes for auto-scaling."
  parameters:
  - description: "the minCount value to set."
    name: "minCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withMinCount(Integer minCount)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMode(com.azure.resourcemanager.containerservice.models.AgentPoolMode)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withMode(AgentPoolMode mode)"
  name: "withMode(AgentPoolMode mode)"
  nameWithType: "AgentPoolInner.withMode(AgentPoolMode mode)"
  summary: "Set the mode property: The mode of an agent pool. A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools."
  parameters:
  - description: "the mode value to set."
    name: "mode"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolMode?alt=com.azure.resourcemanager.containerservice.models.AgentPoolMode&text=AgentPoolMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withMode(AgentPoolMode mode)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodeLabels(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodeLabels(Map<String,String> nodeLabels)"
  name: "withNodeLabels(Map<String,String> nodeLabels)"
  nameWithType: "AgentPoolInner.withNodeLabels(Map<String,String> nodeLabels)"
  summary: "Set the nodeLabels property: The node labels to be persisted across all nodes in agent pool."
  parameters:
  - description: "the nodeLabels value to set."
    name: "nodeLabels"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AgentPoolInner withNodeLabels(Map<String,String> nodeLabels)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodePublicIpPrefixId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  name: "withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  nameWithType: "AgentPoolInner.withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  summary: "Set the nodePublicIpPrefixId property: The public IP prefix ID which VM nodes should use IPs from. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/publicIPPrefixes/\\{publicIPPrefixName\\}."
  parameters:
  - description: "the nodePublicIpPrefixId value to set."
    name: "nodePublicIpPrefixId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodeTaints(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withNodeTaints(List<String> nodeTaints)"
  name: "withNodeTaints(List<String> nodeTaints)"
  nameWithType: "AgentPoolInner.withNodeTaints(List<String> nodeTaints)"
  summary: "Set the nodeTaints property: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
  parameters:
  - description: "the nodeTaints value to set."
    name: "nodeTaints"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AgentPoolInner withNodeTaints(List<String> nodeTaints)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOrchestratorVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOrchestratorVersion(String orchestratorVersion)"
  name: "withOrchestratorVersion(String orchestratorVersion)"
  nameWithType: "AgentPoolInner.withOrchestratorVersion(String orchestratorVersion)"
  summary: "Set the orchestratorVersion property: The version of Kubernetes running on the Agent Pool. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see \\[upgrading a node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#upgrade-a-node-pool)."
  parameters:
  - description: "the orchestratorVersion value to set."
    name: "orchestratorVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withOrchestratorVersion(String orchestratorVersion)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsDiskSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsDiskSizeGB(Integer osDiskSizeGB)"
  name: "withOsDiskSizeGB(Integer osDiskSizeGB)"
  nameWithType: "AgentPoolInner.withOsDiskSizeGB(Integer osDiskSizeGB)"
  summary: "Set the osDiskSizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
  parameters:
  - description: "the osDiskSizeGB value to set."
    name: "osDiskSizeGB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withOsDiskSizeGB(Integer osDiskSizeGB)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsDiskType(com.azure.resourcemanager.containerservice.models.OSDiskType)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsDiskType(OSDiskType osDiskType)"
  name: "withOsDiskType(OSDiskType osDiskType)"
  nameWithType: "AgentPoolInner.withOsDiskType(OSDiskType osDiskType)"
  summary: "Set the osDiskType property: The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see \\[Ephemeral OS\\](https://docs.microsoft.com/azure/aks/cluster-configuration\\#ephemeral-os)."
  parameters:
  - description: "the osDiskType value to set."
    name: "osDiskType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSDiskType?alt=com.azure.resourcemanager.containerservice.models.OSDiskType&text=OSDiskType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withOsDiskType(OSDiskType osDiskType)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsSku(com.azure.resourcemanager.containerservice.models.OSSku)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsSku(OSSku osSku)"
  name: "withOsSku(OSSku osSku)"
  nameWithType: "AgentPoolInner.withOsSku(OSSku osSku)"
  summary: "Set the osSku property: Specifies an OS SKU. This value must not be specified if OSType is Windows."
  parameters:
  - description: "the osSku value to set."
    name: "osSku"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSSku?alt=com.azure.resourcemanager.containerservice.models.OSSku&text=OSSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withOsSku(OSSku osSku)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsType(com.azure.resourcemanager.containerservice.models.OSType)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withOsType(OSType osType)"
  name: "withOsType(OSType osType)"
  nameWithType: "AgentPoolInner.withOsType(OSType osType)"
  summary: "Set the osType property: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
  parameters:
  - description: "the osType value to set."
    name: "osType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSType?alt=com.azure.resourcemanager.containerservice.models.OSType&text=OSType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withOsType(OSType osType)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPodSubnetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPodSubnetId(String podSubnetId)"
  name: "withPodSubnetId(String podSubnetId)"
  nameWithType: "AgentPoolInner.withPodSubnetId(String podSubnetId)"
  summary: "Set the podSubnetId property: The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  parameters:
  - description: "the podSubnetId value to set."
    name: "podSubnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withPodSubnetId(String podSubnetId)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState(com.azure.resourcemanager.containerservice.models.PowerState)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState(PowerState powerState)"
  name: "withPowerState(PowerState powerState)"
  nameWithType: "AgentPoolInner.withPowerState(PowerState powerState)"
  summary: "Set the powerState property: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded."
  parameters:
  - description: "the powerState value to set."
    name: "powerState"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PowerState?alt=com.azure.resourcemanager.containerservice.models.PowerState&text=PowerState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withPowerState(PowerState powerState)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withProximityPlacementGroupId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withProximityPlacementGroupId(String proximityPlacementGroupId)"
  name: "withProximityPlacementGroupId(String proximityPlacementGroupId)"
  nameWithType: "AgentPoolInner.withProximityPlacementGroupId(String proximityPlacementGroupId)"
  summary: "Set the proximityPlacementGroupId property: The ID for Proximity Placement Group."
  parameters:
  - description: "the proximityPlacementGroupId value to set."
    name: "proximityPlacementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withProximityPlacementGroupId(String proximityPlacementGroupId)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleDownMode(com.azure.resourcemanager.containerservice.models.ScaleDownMode)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleDownMode(ScaleDownMode scaleDownMode)"
  name: "withScaleDownMode(ScaleDownMode scaleDownMode)"
  nameWithType: "AgentPoolInner.withScaleDownMode(ScaleDownMode scaleDownMode)"
  summary: "Set the scaleDownMode property: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete."
  parameters:
  - description: "the scaleDownMode value to set."
    name: "scaleDownMode"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleDownMode?alt=com.azure.resourcemanager.containerservice.models.ScaleDownMode&text=ScaleDownMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withScaleDownMode(ScaleDownMode scaleDownMode)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleSetEvictionPolicy(com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  name: "withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  nameWithType: "AgentPoolInner.withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  summary: "Set the scaleSetEvictionPolicy property: The Virtual Machine Scale Set eviction policy. This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'."
  parameters:
  - description: "the scaleSetEvictionPolicy value to set."
    name: "scaleSetEvictionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy?alt=com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy&text=ScaleSetEvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleSetPriority(com.azure.resourcemanager.containerservice.models.ScaleSetPriority)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  name: "withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  nameWithType: "AgentPoolInner.withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  summary: "Set the scaleSetPriority property: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'."
  parameters:
  - description: "the scaleSetPriority value to set."
    name: "scaleSetPriority"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetPriority?alt=com.azure.resourcemanager.containerservice.models.ScaleSetPriority&text=ScaleSetPriority\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withSpotMaxPrice(java.lang.Float)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withSpotMaxPrice(Float spotMaxPrice)"
  name: "withSpotMaxPrice(Float spotMaxPrice)"
  nameWithType: "AgentPoolInner.withSpotMaxPrice(Float spotMaxPrice)"
  summary: "Set the spotMaxPrice property: The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see \\[spot VMs pricing\\](https://docs.microsoft.com/azure/virtual-machines/spot-vms\\#pricing)."
  parameters:
  - description: "the spotMaxPrice value to set."
    name: "spotMaxPrice"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withSpotMaxPrice(Float spotMaxPrice)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "AgentPoolInner.withTags(Map<String,String> tags)"
  summary: "Set the tags property: The tags to be persisted on the agent pool virtual machine scale set."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AgentPoolInner withTags(Map<String,String> tags)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withTypePropertiesType(com.azure.resourcemanager.containerservice.models.AgentPoolType)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withTypePropertiesType(AgentPoolType type)"
  name: "withTypePropertiesType(AgentPoolType type)"
  nameWithType: "AgentPoolInner.withTypePropertiesType(AgentPoolType type)"
  summary: "Set the type property: The type of Agent Pool."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolType?alt=com.azure.resourcemanager.containerservice.models.AgentPoolType&text=AgentPoolType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withTypePropertiesType(AgentPoolType type)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withUpgradeSettings(com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  name: "withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  nameWithType: "AgentPoolInner.withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  summary: "Set the upgradeSettings property: Settings for upgrading the agentpool."
  parameters:
  - description: "the upgradeSettings value to set."
    name: "upgradeSettings"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings?alt=com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings&text=AgentPoolUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withVmSize(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "AgentPoolInner.withVmSize(String vmSize)"
  summary: "Set the vmSize property: The size of the agent pool VMs. VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions."
  parameters:
  - description: "the vmSize value to set."
    name: "vmSize"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withVmSize(String vmSize)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withVnetSubnetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withVnetSubnetId(String vnetSubnetId)"
  name: "withVnetSubnetId(String vnetSubnetId)"
  nameWithType: "AgentPoolInner.withVnetSubnetId(String vnetSubnetId)"
  summary: "Set the vnetSubnetId property: The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  parameters:
  - description: "the vnetSubnetId value to set."
    name: "vnetSubnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withVnetSubnetId(String vnetSubnetId)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withWorkloadRuntime(com.azure.resourcemanager.containerservice.models.WorkloadRuntime)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  name: "withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  nameWithType: "AgentPoolInner.withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  summary: "Set the workloadRuntime property: Determines the type of workload a node can run."
  parameters:
  - description: "the workloadRuntime value to set."
    name: "workloadRuntime"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.WorkloadRuntime?alt=com.azure.resourcemanager.containerservice.models.WorkloadRuntime&text=WorkloadRuntime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.workloadRuntime()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.workloadRuntime()"
  name: "workloadRuntime()"
  nameWithType: "AgentPoolInner.workloadRuntime()"
  summary: "Get the workloadRuntime property: Determines the type of workload a node can run."
  syntax: "public WorkloadRuntime workloadRuntime()"
  returns:
    description: "the workloadRuntime value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.WorkloadRuntime?alt=com.azure.resourcemanager.containerservice.models.WorkloadRuntime&text=WorkloadRuntime\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.containerservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.13.0-beta.1
