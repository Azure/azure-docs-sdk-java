### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.language.Soundex
  id: Soundex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language
  children:
  - org.apache.commons.codec.language.Soundex.SILENT_MARKER
  - org.apache.commons.codec.language.Soundex.Soundex()
  - org.apache.commons.codec.language.Soundex.Soundex(char[])
  - org.apache.commons.codec.language.Soundex.Soundex(java.lang.String)
  - org.apache.commons.codec.language.Soundex.Soundex(java.lang.String,boolean)
  - org.apache.commons.codec.language.Soundex.US_ENGLISH
  - org.apache.commons.codec.language.Soundex.US_ENGLISH_GENEALOGY
  - org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING_STRING
  - org.apache.commons.codec.language.Soundex.US_ENGLISH_SIMPLIFIED
  - org.apache.commons.codec.language.Soundex.difference(java.lang.String,java.lang.String)
  - org.apache.commons.codec.language.Soundex.encode(java.lang.Object)
  - org.apache.commons.codec.language.Soundex.encode(java.lang.String)
  - org.apache.commons.codec.language.Soundex.getMaxLength()
  - org.apache.commons.codec.language.Soundex.setMaxLength(int)
  - org.apache.commons.codec.language.Soundex.soundex(java.lang.String)
  langs:
  - java
  name: Soundex
  nameWithType: Soundex
  fullName: org.apache.commons.codec.language.Soundex
  type: Class
  package: org.apache.commons.codec.language
  summary: Encodes a string into a Soundex value. Soundex is an encoding used to relate similar names, but can also be used as a general purpose scheme to find word with similar phonemes. This class is thread-safe. Although not strictly immutable, the <xref uid="org.apache.commons.codec.language.Soundex.maxLength" data-throw-if-not-resolved="false">#maxLength</xref> field is not actually used.
  syntax:
    content: public class Soundex implements StringEncoder
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.commons.codec.StringEncoder
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.language.Soundex.SILENT_MARKER
  id: SILENT_MARKER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: SILENT_MARKER
  nameWithType: Soundex.SILENT_MARKER
  fullName: org.apache.commons.codec.language.Soundex.SILENT_MARKER
  type: Field
  package: org.apache.commons.codec.language
  summary: >-
    The marker character used to indicate a silent (ignored) character. These are ignored except when they appear as the first character.


    Note: the <xref uid="org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING_STRING" data-throw-if-not-resolved="false">#US_ENGLISH_MAPPING_STRING</xref> does not use this mechanism because changing it might break existing code. Mappings that don't contain a silent marker code are treated as though H and W are silent.


    To override this, use the <xref uid="org.apache.commons.codec.language.Soundex.Soundex(java.lang.String,boolean)" data-throw-if-not-resolved="false">#Soundex(String, boolean)</xref> constructor.
  syntax:
    content: public static final char SILENT_MARKER
    return:
      type: char
- uid: org.apache.commons.codec.language.Soundex.Soundex()
  id: Soundex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: Soundex()
  nameWithType: Soundex.Soundex()
  fullName: org.apache.commons.codec.language.Soundex.Soundex()
  overload: org.apache.commons.codec.language.Soundex.Soundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: Creates an instance using US\_ENGLISH\_MAPPING
  syntax:
    content: public Soundex()
- uid: org.apache.commons.codec.language.Soundex.Soundex(char[])
  id: Soundex(char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: Soundex(char[] mapping)
  nameWithType: Soundex.Soundex(char[] mapping)
  fullName: org.apache.commons.codec.language.Soundex.Soundex(char[] mapping)
  overload: org.apache.commons.codec.language.Soundex.Soundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: >-
    Creates a soundex instance using the given mapping. This constructor can be used to provide an internationalized mapping for a non-Western character set. Every letter of the alphabet is "mapped" to a numerical value. This char array holds the values to which each letter is mapped. This implementation contains a default map for US\_ENGLISH


    If the mapping contains an instance of <xref uid="org.apache.commons.codec.language.Soundex.SILENT_MARKER" data-throw-if-not-resolved="false">#SILENT_MARKER</xref> then H and W are not given special treatment
  syntax:
    content: public Soundex(char[] mapping)
    parameters:
    - id: mapping
      type: char[]
      description: Mapping array to use when finding the corresponding code for a given character
- uid: org.apache.commons.codec.language.Soundex.Soundex(java.lang.String)
  id: Soundex(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: Soundex(String mapping)
  nameWithType: Soundex.Soundex(String mapping)
  fullName: org.apache.commons.codec.language.Soundex.Soundex(String mapping)
  overload: org.apache.commons.codec.language.Soundex.Soundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: >-
    Creates a refined soundex instance using a custom mapping. This constructor can be used to customize the mapping, and/or possibly provide an internationalized mapping for a non-Western character set.


    If the mapping contains an instance of <xref uid="org.apache.commons.codec.language.Soundex.SILENT_MARKER" data-throw-if-not-resolved="false">#SILENT_MARKER</xref> then H and W are not given special treatment
  syntax:
    content: public Soundex(String mapping)
    parameters:
    - id: mapping
      type: java.lang.String
      description: Mapping string to use when finding the corresponding code for a given character
- uid: org.apache.commons.codec.language.Soundex.Soundex(java.lang.String,boolean)
  id: Soundex(java.lang.String,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: Soundex(String mapping, boolean specialCaseHW)
  nameWithType: Soundex.Soundex(String mapping, boolean specialCaseHW)
  fullName: org.apache.commons.codec.language.Soundex.Soundex(String mapping, boolean specialCaseHW)
  overload: org.apache.commons.codec.language.Soundex.Soundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: Creates a refined soundex instance using a custom mapping. This constructor can be used to customize the mapping, and/or possibly provide an internationalized mapping for a non-Western character set.
  syntax:
    content: public Soundex(String mapping, boolean specialCaseHW)
    parameters:
    - id: mapping
      type: java.lang.String
      description: Mapping string to use when finding the corresponding code for a given character
    - id: specialCaseHW
      type: boolean
      description: if true, then
- uid: org.apache.commons.codec.language.Soundex.US_ENGLISH
  id: US_ENGLISH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: US_ENGLISH
  nameWithType: Soundex.US_ENGLISH
  fullName: org.apache.commons.codec.language.Soundex.US_ENGLISH
  type: Field
  package: org.apache.commons.codec.language
  summary: An instance of Soundex using the US\_ENGLISH\_MAPPING mapping. This treats H and W as silent letters. Apart from when they appear as the first letter, they are ignored. They don't act as separators between duplicate codes.
  syntax:
    content: public static final Soundex US_ENGLISH
    return:
      type: org.apache.commons.codec.language.Soundex
- uid: org.apache.commons.codec.language.Soundex.US_ENGLISH_GENEALOGY
  id: US_ENGLISH_GENEALOGY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: US_ENGLISH_GENEALOGY
  nameWithType: Soundex.US_ENGLISH_GENEALOGY
  fullName: org.apache.commons.codec.language.Soundex.US_ENGLISH_GENEALOGY
  type: Field
  package: org.apache.commons.codec.language
  summary: >-
    An instance of Soundex using the mapping as per the Genealogy site: http://www.genealogy.com/articles/research/00000060.html


    This treats vowels (AEIOUY), H and W as silent letters. Such letters are ignored (after the first) and do not act as separators when dropping duplicate codes.


    The codes for consonants are otherwise the same as for <xref uid="org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING_STRING" data-throw-if-not-resolved="false">#US_ENGLISH_MAPPING_STRING</xref> and <xref uid="org.apache.commons.codec.language.Soundex.US_ENGLISH_SIMPLIFIED" data-throw-if-not-resolved="false">#US_ENGLISH_SIMPLIFIED</xref>
  syntax:
    content: public static final Soundex US_ENGLISH_GENEALOGY
    return:
      type: org.apache.commons.codec.language.Soundex
- uid: org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING_STRING
  id: US_ENGLISH_MAPPING_STRING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: US_ENGLISH_MAPPING_STRING
  nameWithType: Soundex.US_ENGLISH_MAPPING_STRING
  fullName: org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING_STRING
  type: Field
  package: org.apache.commons.codec.language
  summary: >-
    This is a default mapping of the 26 letters used in US English. A value of `0` for a letter position means do not encode, but treat as a separator when it occurs between consonants with the same code.


    (This constant is provided as both an implementation convenience and to allow Javadoc to pick up the value for the constant values page.)


    **Note that letters H and W are treated specially.** They are ignored (after the first letter) and don't act as separators between consonants with the same code.
  syntax:
    content: public static final String US_ENGLISH_MAPPING_STRING
    return:
      type: java.lang.String
- uid: org.apache.commons.codec.language.Soundex.US_ENGLISH_SIMPLIFIED
  id: US_ENGLISH_SIMPLIFIED
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: US_ENGLISH_SIMPLIFIED
  nameWithType: Soundex.US_ENGLISH_SIMPLIFIED
  fullName: org.apache.commons.codec.language.Soundex.US_ENGLISH_SIMPLIFIED
  type: Field
  package: org.apache.commons.codec.language
  summary: >-
    An instance of Soundex using the Simplified Soundex mapping, as described here: http://west-penwith.org.uk/misc/soundex.htm


    This treats H and W the same as vowels (AEIOUY). Such letters aren't encoded (after the first), but they do act as separators when dropping duplicate codes. The mapping is otherwise the same as for <xref uid="org.apache.commons.codec.language.Soundex.US_ENGLISH" data-throw-if-not-resolved="false">#US_ENGLISH</xref>
  syntax:
    content: public static final Soundex US_ENGLISH_SIMPLIFIED
    return:
      type: org.apache.commons.codec.language.Soundex
- uid: org.apache.commons.codec.language.Soundex.difference(java.lang.String,java.lang.String)
  id: difference(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: difference(String s1, String s2)
  nameWithType: Soundex.difference(String s1, String s2)
  fullName: org.apache.commons.codec.language.Soundex.difference(String s1, String s2)
  overload: org.apache.commons.codec.language.Soundex.difference*
  type: Method
  package: org.apache.commons.codec.language
  summary: 'Encodes the Strings and returns the number of characters in the two encoded Strings that are the same. This return value ranges from 0 through 4: 0 indicates little or no similarity, and 4 indicates strong similarity or identical values.'
  syntax:
    content: public int difference(String s1, String s2)
    parameters:
    - id: s1
      type: java.lang.String
      description: A String that will be encoded and compared.
    - id: s2
      type: java.lang.String
      description: A String that will be encoded and compared.
    return:
      type: int
      description: The number of characters in the two encoded Strings that are the same from 0 to 4.
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: if an error occurs encoding one of the strings
- uid: org.apache.commons.codec.language.Soundex.encode(java.lang.Object)
  id: encode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: encode(Object obj)
  nameWithType: Soundex.encode(Object obj)
  fullName: org.apache.commons.codec.language.Soundex.encode(Object obj)
  overload: org.apache.commons.codec.language.Soundex.encode*
  type: Method
  package: org.apache.commons.codec.language
  summary: Encodes an Object using the soundex algorithm. This method is provided in order to satisfy the requirements of the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String.
  syntax:
    content: public Object encode(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
      description: Object to encode
    return:
      type: java.lang.Object
      description: >-
        An object (or type java.lang.String) containing the soundex code which corresponds to the String
                     supplied.
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: if the parameter supplied is not of type java.lang.String
- uid: org.apache.commons.codec.language.Soundex.encode(java.lang.String)
  id: encode(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: encode(String str)
  nameWithType: Soundex.encode(String str)
  fullName: org.apache.commons.codec.language.Soundex.encode(String str)
  overload: org.apache.commons.codec.language.Soundex.encode*
  type: Method
  package: org.apache.commons.codec.language
  summary: Encodes a String using the soundex algorithm.
  syntax:
    content: public String encode(String str)
    parameters:
    - id: str
      type: java.lang.String
      description: A String object to encode
    return:
      type: java.lang.String
      description: A Soundex code corresponding to the String supplied
- uid: org.apache.commons.codec.language.Soundex.getMaxLength()
  id: getMaxLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: getMaxLength()
  nameWithType: Soundex.getMaxLength()
  fullName: org.apache.commons.codec.language.Soundex.getMaxLength()
  overload: org.apache.commons.codec.language.Soundex.getMaxLength*
  type: Method
  package: org.apache.commons.codec.language
  summary: Returns the maxLength. Standard Soundex
  syntax:
    content: public int getMaxLength()
    return:
      type: int
      description: int
- uid: org.apache.commons.codec.language.Soundex.setMaxLength(int)
  id: setMaxLength(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: setMaxLength(int maxLength)
  nameWithType: Soundex.setMaxLength(int maxLength)
  fullName: org.apache.commons.codec.language.Soundex.setMaxLength(int maxLength)
  overload: org.apache.commons.codec.language.Soundex.setMaxLength*
  type: Method
  package: org.apache.commons.codec.language
  summary: Sets the maxLength.
  syntax:
    content: public void setMaxLength(int maxLength)
    parameters:
    - id: maxLength
      type: int
      description: The maxLength to set
- uid: org.apache.commons.codec.language.Soundex.soundex(java.lang.String)
  id: soundex(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.Soundex
  langs:
  - java
  name: soundex(String str)
  nameWithType: Soundex.soundex(String str)
  fullName: org.apache.commons.codec.language.Soundex.soundex(String str)
  overload: org.apache.commons.codec.language.Soundex.soundex*
  type: Method
  package: org.apache.commons.codec.language
  summary: Retrieves the Soundex code for a given String object.
  syntax:
    content: public String soundex(String str)
    parameters:
    - id: str
      type: java.lang.String
      description: String to encode using the Soundex algorithm
    return:
      type: java.lang.String
      description: A soundex code for the String supplied
references:
- uid: org.apache.commons.codec.language.Soundex.Soundex*
  name: Soundex
  nameWithType: Soundex.Soundex
  fullName: org.apache.commons.codec.language.Soundex.Soundex
  package: org.apache.commons.codec.language
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.EncoderException
  name: EncoderException
  nameWithType: EncoderException
  fullName: org.apache.commons.codec.EncoderException
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.commons.codec.language.Soundex.difference*
  name: difference
  nameWithType: Soundex.difference
  fullName: org.apache.commons.codec.language.Soundex.difference
  package: org.apache.commons.codec.language
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.commons.codec.language.Soundex.encode*
  name: encode
  nameWithType: Soundex.encode
  fullName: org.apache.commons.codec.language.Soundex.encode
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.language.Soundex.getMaxLength*
  name: getMaxLength
  nameWithType: Soundex.getMaxLength
  fullName: org.apache.commons.codec.language.Soundex.getMaxLength
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.language.Soundex.setMaxLength*
  name: setMaxLength
  nameWithType: Soundex.setMaxLength
  fullName: org.apache.commons.codec.language.Soundex.setMaxLength
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.language.Soundex.soundex*
  name: soundex
  nameWithType: Soundex.soundex
  fullName: org.apache.commons.codec.language.Soundex.soundex
  package: org.apache.commons.codec.language
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: org.apache.commons.codec.StringEncoder
  name: StringEncoder
  nameWithType: StringEncoder
  fullName: org.apache.commons.codec.StringEncoder
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
