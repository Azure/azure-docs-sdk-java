### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.SearchIndexClient"
  id: "SearchIndexClient"
  parent: "com.azure.search.documents"
  children:
  - "com.azure.search.documents.SearchIndexClient.SearchIndexClient(com.azure.search.documents.SearchIndexAsyncClient)"
  - "com.azure.search.documents.SearchIndexClient.autocomplete(java.lang.String,java.lang.String)"
  - "com.azure.search.documents.SearchIndexClient.autocomplete(java.lang.String,java.lang.String,com.azure.search.documents.models.AutocompleteOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.deleteDocuments(java.lang.Iterable<?>)"
  - "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.getDocument(java.lang.String)"
  - "com.azure.search.documents.SearchIndexClient.getDocumentCount()"
  - "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse(com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.getEndpoint()"
  - "com.azure.search.documents.SearchIndexClient.getHttpPipeline()"
  - "com.azure.search.documents.SearchIndexClient.getIndexName()"
  - "com.azure.search.documents.SearchIndexClient.getServiceVersion()"
  - "com.azure.search.documents.SearchIndexClient.indexDocuments(com.azure.search.documents.models.IndexDocumentsBatch<?>)"
  - "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse(com.azure.search.documents.models.IndexDocumentsBatch<?>,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.mergeDocuments(java.lang.Iterable<?>)"
  - "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments(java.lang.Iterable<?>)"
  - "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.search(java.lang.String)"
  - "com.azure.search.documents.SearchIndexClient.search(java.lang.String,com.azure.search.documents.models.SearchOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.suggest(java.lang.String,java.lang.String)"
  - "com.azure.search.documents.SearchIndexClient.suggest(java.lang.String,java.lang.String,com.azure.search.documents.models.SuggestOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchIndexClient.uploadDocuments(java.lang.Iterable<?>)"
  - "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "SearchIndexClient"
  nameWithType: "SearchIndexClient"
  fullName: "com.azure.search.documents.SearchIndexClient"
  type: "Class"
  package: "com.azure.search.documents"
  summary: "Cognitive Search Synchronous Client to query an index and upload, merge, or delete documents"
  syntax:
    content: "public final class SearchIndexClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.SearchIndexClient.SearchIndexClient(com.azure.search.documents.SearchIndexAsyncClient)"
  id: "SearchIndexClient(com.azure.search.documents.SearchIndexAsyncClient)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "SearchIndexClient(SearchIndexAsyncClient searchIndexAsyncClient)"
  nameWithType: "SearchIndexClient.SearchIndexClient(SearchIndexAsyncClient searchIndexAsyncClient)"
  fullName: "com.azure.search.documents.SearchIndexClient.SearchIndexClient(SearchIndexAsyncClient searchIndexAsyncClient)"
  overload: "com.azure.search.documents.SearchIndexClient.SearchIndexClient*"
  type: "Constructor"
  package: "com.azure.search.documents"
  summary: "Package private constructor to be used by <xref uid=\"com.azure.search.documents.SearchIndexClientBuilder\" data-throw-if-not-resolved=\"false\">SearchIndexClientBuilder</xref>"
  syntax:
    content: " SearchIndexClient(SearchIndexAsyncClient searchIndexAsyncClient)"
    parameters:
    - id: "searchIndexAsyncClient"
      type: "com.azure.search.documents.SearchIndexAsyncClient"
      description: "Async SearchIndex Client"
- uid: "com.azure.search.documents.SearchIndexClient.autocomplete(java.lang.String,java.lang.String)"
  id: "autocomplete(java.lang.String,java.lang.String)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "autocomplete(String searchText, String suggesterName)"
  nameWithType: "SearchIndexClient.autocomplete(String searchText, String suggesterName)"
  fullName: "com.azure.search.documents.SearchIndexClient.autocomplete(String searchText, String suggesterName)"
  overload: "com.azure.search.documents.SearchIndexClient.autocomplete*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Autocompletes incomplete query terms based on input text and matching terms in the index."
  syntax:
    content: "public AutocompletePagedIterable autocomplete(String searchText, String suggesterName)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "search text"
    - id: "suggesterName"
      type: "java.lang.String"
      description: "suggester name"
    return:
      type: "com.azure.search.documents.util.AutocompletePagedIterable"
      description: "auto complete result."
- uid: "com.azure.search.documents.SearchIndexClient.autocomplete(java.lang.String,java.lang.String,com.azure.search.documents.models.AutocompleteOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "autocomplete(java.lang.String,java.lang.String,com.azure.search.documents.models.AutocompleteOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchIndexClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.autocomplete*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Autocompletes incomplete query terms based on input text and matching terms in the index."
  syntax:
    content: "public AutocompletePagedIterable autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "search text"
    - id: "suggesterName"
      type: "java.lang.String"
      description: "suggester name"
    - id: "autocompleteOptions"
      type: "com.azure.search.documents.models.AutocompleteOptions"
      description: "autocomplete options"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.search.documents.util.AutocompletePagedIterable"
      description: "auto complete result."
- uid: "com.azure.search.documents.SearchIndexClient.deleteDocuments(java.lang.Iterable<?>)"
  id: "deleteDocuments(java.lang.Iterable<?>)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "deleteDocuments(Iterable<?> documents)"
  nameWithType: "SearchIndexClient.deleteDocuments(Iterable<?> documents)"
  fullName: "com.azure.search.documents.SearchIndexClient.deleteDocuments(Iterable<?> documents)"
  overload: "com.azure.search.documents.SearchIndexClient.deleteDocuments*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes a collection of documents from the target index."
  syntax:
    content: "public IndexDocumentsResult deleteDocuments(Iterable<?> documents)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to delete from the target Index. Fields other than the key are ignored."
    return:
      type: "com.azure.search.documents.models.IndexDocumentsResult"
      description: "document index result."
- uid: "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  id: "deleteDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "deleteDocumentsWithResponse(Iterable<?> documents, Context context)"
  nameWithType: "SearchIndexClient.deleteDocumentsWithResponse(Iterable<?> documents, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse(Iterable<?> documents, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes a collection of documents from the target index."
  syntax:
    content: "public Response<IndexDocumentsResult> deleteDocumentsWithResponse(Iterable<?> documents, Context context)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to delete from the target Index. Fields other than the key are ignored."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
      description: "response containing a document index result."
- uid: "com.azure.search.documents.SearchIndexClient.getDocument(java.lang.String)"
  id: "getDocument(java.lang.String)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getDocument(String key)"
  nameWithType: "SearchIndexClient.getDocument(String key)"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocument(String key)"
  overload: "com.azure.search.documents.SearchIndexClient.getDocument*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a document from the Azure Cognitive Search index.\n\nView [naming rules][] for guidelines on constructing valid document keys.\n\n\n[naming rules]: https://docs.microsoft.com/rest/api/searchservice/Naming-rules"
  syntax:
    content: "public SearchDocument getDocument(String key)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "The key of the document to retrieve."
    return:
      type: "com.azure.search.documents.SearchDocument"
      description: "document object"
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentCount()"
  id: "getDocumentCount()"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getDocumentCount()"
  nameWithType: "SearchIndexClient.getDocumentCount()"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentCount()"
  overload: "com.azure.search.documents.SearchIndexClient.getDocumentCount*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Queries the number of documents in the search index."
  syntax:
    content: "public long getDocumentCount()"
    return:
      type: "long"
      description: "the number of documents."
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse(com.azure.core.util.Context)"
  id: "getDocumentCountWithResponse(com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getDocumentCountWithResponse(Context context)"
  nameWithType: "SearchIndexClient.getDocumentCountWithResponse(Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse(Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Queries the number of documents in the search index."
  syntax:
    content: "public Response<Long> getDocumentCountWithResponse(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Long>"
      description: "response containing the number of documents."
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getDocumentWithResponse(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getDocumentWithResponse(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchIndexClient.getDocumentWithResponse(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a document from the Azure Cognitive Search index.\n\nView [naming rules][] for guidelines on constructing valid document keys.\n\n\n[naming rules]: https://docs.microsoft.com/rest/api/searchservice/Naming-rules"
  syntax:
    content: "public Response<SearchDocument> getDocumentWithResponse(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "The key of the document to retrieve."
    - id: "selectedFields"
      type: "java.util.List<java.lang.String>"
      description: "List of field names to retrieve for the document; Any field not retrieved will have null or\n default as its corresponding property value in the returned object."
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.SearchDocument>"
      description: "response containing a document object"
- uid: "com.azure.search.documents.SearchIndexClient.getEndpoint()"
  id: "getEndpoint()"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getEndpoint()"
  nameWithType: "SearchIndexClient.getEndpoint()"
  fullName: "com.azure.search.documents.SearchIndexClient.getEndpoint()"
  overload: "com.azure.search.documents.SearchIndexClient.getEndpoint*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the endpoint for the Azure Cognitive Search service."
  syntax:
    content: "public String getEndpoint()"
    return:
      type: "java.lang.String"
      description: "the endpoint value."
- uid: "com.azure.search.documents.SearchIndexClient.getHttpPipeline()"
  id: "getHttpPipeline()"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getHttpPipeline()"
  nameWithType: "SearchIndexClient.getHttpPipeline()"
  fullName: "com.azure.search.documents.SearchIndexClient.getHttpPipeline()"
  overload: "com.azure.search.documents.SearchIndexClient.getHttpPipeline*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> powering this client."
  syntax:
    content: " HttpPipeline getHttpPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "the pipeline."
- uid: "com.azure.search.documents.SearchIndexClient.getIndexName()"
  id: "getIndexName()"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getIndexName()"
  nameWithType: "SearchIndexClient.getIndexName()"
  fullName: "com.azure.search.documents.SearchIndexClient.getIndexName()"
  overload: "com.azure.search.documents.SearchIndexClient.getIndexName*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the name of the Azure Cognitive Search index."
  syntax:
    content: "public String getIndexName()"
    return:
      type: "java.lang.String"
      description: "the indexName value."
- uid: "com.azure.search.documents.SearchIndexClient.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "SearchIndexClient.getServiceVersion()"
  fullName: "com.azure.search.documents.SearchIndexClient.getServiceVersion()"
  overload: "com.azure.search.documents.SearchIndexClient.getServiceVersion*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the version of the Search service the client is using."
  syntax:
    content: "public SearchServiceVersion getServiceVersion()"
    return:
      type: "com.azure.search.documents.SearchServiceVersion"
      description: "The version of the Search service the client is using."
- uid: "com.azure.search.documents.SearchIndexClient.indexDocuments(com.azure.search.documents.models.IndexDocumentsBatch<?>)"
  id: "indexDocuments(com.azure.search.documents.models.IndexDocumentsBatch<?>)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "indexDocuments(IndexDocumentsBatch<?> batch)"
  nameWithType: "SearchIndexClient.indexDocuments(IndexDocumentsBatch<?> batch)"
  fullName: "com.azure.search.documents.SearchIndexClient.indexDocuments(IndexDocumentsBatch<?> batch)"
  overload: "com.azure.search.documents.SearchIndexClient.indexDocuments*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Sends a batch of upload, merge, and/or delete actions to the search index."
  syntax:
    content: "public IndexDocumentsResult indexDocuments(IndexDocumentsBatch<?> batch)"
    parameters:
    - id: "batch"
      type: "com.azure.search.documents.models.IndexDocumentsBatch<?>"
      description: "The batch of index actions"
    return:
      type: "com.azure.search.documents.models.IndexDocumentsResult"
      description: "Response containing the status of operations for all actions in the batch"
- uid: "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse(com.azure.search.documents.models.IndexDocumentsBatch<?>,com.azure.core.util.Context)"
  id: "indexDocumentsWithResponse(com.azure.search.documents.models.IndexDocumentsBatch<?>,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "indexDocumentsWithResponse(IndexDocumentsBatch<?> batch, Context context)"
  nameWithType: "SearchIndexClient.indexDocumentsWithResponse(IndexDocumentsBatch<?> batch, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse(IndexDocumentsBatch<?> batch, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Sends a batch of upload, merge, and/or delete actions to the search index."
  syntax:
    content: "public Response<IndexDocumentsResult> indexDocumentsWithResponse(IndexDocumentsBatch<?> batch, Context context)"
    parameters:
    - id: "batch"
      type: "com.azure.search.documents.models.IndexDocumentsBatch<?>"
      description: "The batch of index actions"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
      description: "Response containing the status of operations for all actions in the batch"
- uid: "com.azure.search.documents.SearchIndexClient.mergeDocuments(java.lang.Iterable<?>)"
  id: "mergeDocuments(java.lang.Iterable<?>)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "mergeDocuments(Iterable<?> documents)"
  nameWithType: "SearchIndexClient.mergeDocuments(Iterable<?> documents)"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeDocuments(Iterable<?> documents)"
  overload: "com.azure.search.documents.SearchIndexClient.mergeDocuments*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Merges a collection of documents with existing documents in the target index.\n\nIf the type of the document contains non-nullable primitive-typed properties, these properties may not merge correctly. If you do not set such a property, it will automatically take its default value (for example, `0` for `int` or `false` for `boolean`), which will override the value of the property currently stored in the index, even if this was not your intent. For this reason, it is strongly recommended that you always declare primitive-typed properties with their class equivalents (for example, an integer property should be of type `Integer` instead of `int`)."
  syntax:
    content: "public IndexDocumentsResult mergeDocuments(Iterable<?> documents)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to be merged"
    return:
      type: "com.azure.search.documents.models.IndexDocumentsResult"
      description: "document index result"
- uid: "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  id: "mergeDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "mergeDocumentsWithResponse(Iterable<?> documents, Context context)"
  nameWithType: "SearchIndexClient.mergeDocumentsWithResponse(Iterable<?> documents, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse(Iterable<?> documents, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Merges a collection of documents with existing documents in the target index.\n\nIf the type of the document contains non-nullable primitive-typed properties, these properties may not merge correctly. If you do not set such a property, it will automatically take its default value (for example, `0` for `int` or `false` for `boolean`), which will override the value of the property currently stored in the index, even if this was not your intent. For this reason, it is strongly recommended that you always declare primitive-typed properties with their class equivalents (for example, an integer property should be of type `Integer` instead of `int`)."
  syntax:
    content: "public Response<IndexDocumentsResult> mergeDocumentsWithResponse(Iterable<?> documents, Context context)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to be merged"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
      description: "response containing the document index result."
- uid: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments(java.lang.Iterable<?>)"
  id: "mergeOrUploadDocuments(java.lang.Iterable<?>)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "mergeOrUploadDocuments(Iterable<?> documents)"
  nameWithType: "SearchIndexClient.mergeOrUploadDocuments(Iterable<?> documents)"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments(Iterable<?> documents)"
  overload: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "This action behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document.\n\nIf the type of the document contains non-nullable primitive-typed properties, these properties may not merge correctly. If you do not set such a property, it will automatically take its default value (for example, `0` for `int` or `false` for `boolean`), which will override the value of the property currently stored in the index, even if this was not your intent. For this reason, it is strongly recommended that you always declare primitive-typed properties with their class equivalents (for example, an integer property should be of type `Integer` instead of `int`)."
  syntax:
    content: "public IndexDocumentsResult mergeOrUploadDocuments(Iterable<?> documents)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to be merged, if exists, otherwise uploaded"
    return:
      type: "com.azure.search.documents.models.IndexDocumentsResult"
      description: "document index result"
- uid: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  id: "mergeOrUploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "mergeOrUploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  nameWithType: "SearchIndexClient.mergeOrUploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "This action behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document.\n\nIf the type of the document contains non-nullable primitive-typed properties, these properties may not merge correctly. If you do not set such a property, it will automatically take its default value (for example, `0` for `int` or `false` for `boolean`), which will override the value of the property currently stored in the index, even if this was not your intent. For this reason, it is strongly recommended that you always declare primitive-typed properties with their class equivalents (for example, an integer property should be of type `Integer` instead of `int`)."
  syntax:
    content: "public Response<IndexDocumentsResult> mergeOrUploadDocumentsWithResponse(Iterable<?> documents, Context context)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to be merged, if exists, otherwise uploaded"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
      description: "response containing a document index result"
- uid: "com.azure.search.documents.SearchIndexClient.search(java.lang.String)"
  id: "search(java.lang.String)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "search(String searchText)"
  nameWithType: "SearchIndexClient.search(String searchText)"
  fullName: "com.azure.search.documents.SearchIndexClient.search(String searchText)"
  overload: "com.azure.search.documents.SearchIndexClient.search*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Searches for documents in the Azure Cognitive Search index.\n\nIf `searchText` is set to `null` or `\"*\"` all documents will be matched, see [simple query syntax in Azure Search][] for more information about search query syntax.\n\n\n[simple query syntax in Azure Search]: https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"
  syntax:
    content: "public SearchPagedIterable search(String searchText)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "A full-text search query expression."
    return:
      type: "com.azure.search.documents.util.SearchPagedIterable"
      description: "A <xref uid=\"com.azure.search.documents.util.SearchPagedIterable\" data-throw-if-not-resolved=\"false\">SearchPagedIterable</xref> that iterates over <xref uid=\"com.azure.search.documents.models.SearchResult\" data-throw-if-not-resolved=\"false\">SearchResult</xref> objects and provides access to the\n <xref uid=\"com.azure.search.documents.util.SearchPagedResponse\" data-throw-if-not-resolved=\"false\">SearchPagedResponse</xref> object for each page containing HTTP response and count, facet, and coverage\n information."
- uid: "com.azure.search.documents.SearchIndexClient.search(java.lang.String,com.azure.search.documents.models.SearchOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "search(java.lang.String,com.azure.search.documents.models.SearchOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "search(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchIndexClient.search(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.search(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.search*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Searches for documents in the Azure Cognitive Search index.\n\nIf `searchText` is set to `null` or `\"*\"` all documents will be matched, see [simple query syntax in Azure Search][] for more information about search query syntax.\n\n\n[simple query syntax in Azure Search]: https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"
  syntax:
    content: "public SearchPagedIterable search(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "A full-text search query expression."
    - id: "searchOptions"
      type: "com.azure.search.documents.models.SearchOptions"
      description: "Parameters to further refine the search query"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.search.documents.util.SearchPagedIterable"
      description: "A <xref uid=\"com.azure.search.documents.util.SearchPagedIterable\" data-throw-if-not-resolved=\"false\">SearchPagedIterable</xref> that iterates over <xref uid=\"com.azure.search.documents.models.SearchResult\" data-throw-if-not-resolved=\"false\">SearchResult</xref> objects and provides access to the\n <xref uid=\"com.azure.search.documents.util.SearchPagedResponse\" data-throw-if-not-resolved=\"false\">SearchPagedResponse</xref> object for each page containing HTTP response and count, facet, and coverage\n information."
- uid: "com.azure.search.documents.SearchIndexClient.suggest(java.lang.String,java.lang.String)"
  id: "suggest(java.lang.String,java.lang.String)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "suggest(String searchText, String suggesterName)"
  nameWithType: "SearchIndexClient.suggest(String searchText, String suggesterName)"
  fullName: "com.azure.search.documents.SearchIndexClient.suggest(String searchText, String suggesterName)"
  overload: "com.azure.search.documents.SearchIndexClient.suggest*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Suggests documents in the index that match the given partial query."
  syntax:
    content: "public SuggestPagedIterable suggest(String searchText, String suggesterName)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "The search text on which to base suggestions"
    - id: "suggesterName"
      type: "java.lang.String"
      description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    return:
      type: "com.azure.search.documents.util.SuggestPagedIterable"
      description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedIterable\" data-throw-if-not-resolved=\"false\">SuggestPagedIterable</xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\">SuggestResult</xref> objects and provides access to\n the <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\">SuggestPagedResponse</xref> object for each page containing HTTP response and coverage information."
- uid: "com.azure.search.documents.SearchIndexClient.suggest(java.lang.String,java.lang.String,com.azure.search.documents.models.SuggestOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "suggest(java.lang.String,java.lang.String,com.azure.search.documents.models.SuggestOptions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchIndexClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.suggest*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Suggests documents in the index that match the given partial query."
  syntax:
    content: "public SuggestPagedIterable suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "searchText"
      type: "java.lang.String"
      description: "The search text on which to base suggestions"
    - id: "suggesterName"
      type: "java.lang.String"
      description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    - id: "suggestOptions"
      type: "com.azure.search.documents.models.SuggestOptions"
      description: "Parameters to further refine the suggestion query."
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.search.documents.util.SuggestPagedIterable"
      description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedIterable\" data-throw-if-not-resolved=\"false\">SuggestPagedIterable</xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\">SuggestResult</xref> objects and provides access to\n the <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\">SuggestPagedResponse</xref> object for each page containing HTTP response and coverage information."
- uid: "com.azure.search.documents.SearchIndexClient.uploadDocuments(java.lang.Iterable<?>)"
  id: "uploadDocuments(java.lang.Iterable<?>)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "uploadDocuments(Iterable<?> documents)"
  nameWithType: "SearchIndexClient.uploadDocuments(Iterable<?> documents)"
  fullName: "com.azure.search.documents.SearchIndexClient.uploadDocuments(Iterable<?> documents)"
  overload: "com.azure.search.documents.SearchIndexClient.uploadDocuments*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Uploads a collection of documents to the target index."
  syntax:
    content: "public IndexDocumentsResult uploadDocuments(Iterable<?> documents)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to upload to the target Index."
    return:
      type: "com.azure.search.documents.models.IndexDocumentsResult"
      description: "document index result."
- uid: "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  id: "uploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchIndexClient"
  langs:
  - "java"
  name: "uploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  nameWithType: "SearchIndexClient.uploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  fullName: "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse(Iterable<?> documents, Context context)"
  overload: "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Uploads a collection of documents to the target index."
  syntax:
    content: "public Response<IndexDocumentsResult> uploadDocumentsWithResponse(Iterable<?> documents, Context context)"
    parameters:
    - id: "documents"
      type: "java.lang.Iterable<?>"
      description: "collection of documents to upload to the target Index."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
      description: "response containing the document index result."
references:
- uid: "com.azure.search.documents.SearchIndexAsyncClient"
  name: "SearchIndexAsyncClient"
  nameWithType: "SearchIndexAsyncClient"
  fullName: "com.azure.search.documents.SearchIndexAsyncClient"
- uid: "com.azure.search.documents.SearchIndexClient.SearchIndexClient*"
  name: "SearchIndexClient"
  nameWithType: "SearchIndexClient.SearchIndexClient"
  fullName: "com.azure.search.documents.SearchIndexClient.SearchIndexClient"
  package: "com.azure.search.documents"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.SearchIndexClient.getIndexName*"
  name: "getIndexName"
  nameWithType: "SearchIndexClient.getIndexName"
  fullName: "com.azure.search.documents.SearchIndexClient.getIndexName"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.search.documents.SearchIndexClient.getHttpPipeline*"
  name: "getHttpPipeline"
  nameWithType: "SearchIndexClient.getHttpPipeline"
  fullName: "com.azure.search.documents.SearchIndexClient.getHttpPipeline"
  package: "com.azure.search.documents"
- uid: "java.lang.Iterable<?>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.IndexDocumentsResult"
  name: "IndexDocumentsResult"
  nameWithType: "IndexDocumentsResult"
  fullName: "com.azure.search.documents.models.IndexDocumentsResult"
- uid: "com.azure.search.documents.SearchIndexClient.uploadDocuments*"
  name: "uploadDocuments"
  nameWithType: "SearchIndexClient.uploadDocuments"
  fullName: "com.azure.search.documents.SearchIndexClient.uploadDocuments"
  package: "com.azure.search.documents"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexDocumentsResult>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.IndexDocumentsResult"
    name: "IndexDocumentsResult"
    fullName: "com.azure.search.documents.models.IndexDocumentsResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse*"
  name: "uploadDocumentsWithResponse"
  nameWithType: "SearchIndexClient.uploadDocumentsWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.uploadDocumentsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.mergeDocuments*"
  name: "mergeDocuments"
  nameWithType: "SearchIndexClient.mergeDocuments"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeDocuments"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse*"
  name: "mergeDocumentsWithResponse"
  nameWithType: "SearchIndexClient.mergeDocumentsWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeDocumentsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments*"
  name: "mergeOrUploadDocuments"
  nameWithType: "SearchIndexClient.mergeOrUploadDocuments"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocuments"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse*"
  name: "mergeOrUploadDocumentsWithResponse"
  nameWithType: "SearchIndexClient.mergeOrUploadDocumentsWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.mergeOrUploadDocumentsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.deleteDocuments*"
  name: "deleteDocuments"
  nameWithType: "SearchIndexClient.deleteDocuments"
  fullName: "com.azure.search.documents.SearchIndexClient.deleteDocuments"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse*"
  name: "deleteDocumentsWithResponse"
  nameWithType: "SearchIndexClient.deleteDocumentsWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.deleteDocumentsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceVersion"
  name: "SearchServiceVersion"
  nameWithType: "SearchServiceVersion"
  fullName: "com.azure.search.documents.SearchServiceVersion"
- uid: "com.azure.search.documents.SearchIndexClient.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "SearchIndexClient.getServiceVersion"
  fullName: "com.azure.search.documents.SearchIndexClient.getServiceVersion"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.getEndpoint*"
  name: "getEndpoint"
  nameWithType: "SearchIndexClient.getEndpoint"
  fullName: "com.azure.search.documents.SearchIndexClient.getEndpoint"
  package: "com.azure.search.documents"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentCount*"
  name: "getDocumentCount"
  nameWithType: "SearchIndexClient.getDocumentCount"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentCount"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<java.lang.Long>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse*"
  name: "getDocumentCountWithResponse"
  nameWithType: "SearchIndexClient.getDocumentCountWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentCountWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.util.SearchPagedIterable"
  name: "SearchPagedIterable"
  nameWithType: "SearchPagedIterable"
  fullName: "com.azure.search.documents.util.SearchPagedIterable"
- uid: "com.azure.search.documents.SearchIndexClient.search*"
  name: "search"
  nameWithType: "SearchIndexClient.search"
  fullName: "com.azure.search.documents.SearchIndexClient.search"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.SearchOptions"
  name: "SearchOptions"
  nameWithType: "SearchOptions"
  fullName: "com.azure.search.documents.models.SearchOptions"
- uid: "com.azure.search.documents.models.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.azure.search.documents.models.RequestOptions"
- uid: "com.azure.search.documents.SearchDocument"
  name: "SearchDocument"
  nameWithType: "SearchDocument"
  fullName: "com.azure.search.documents.SearchDocument"
- uid: "com.azure.search.documents.SearchIndexClient.getDocument*"
  name: "getDocument"
  nameWithType: "SearchIndexClient.getDocument"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocument"
  package: "com.azure.search.documents"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.SearchDocument>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.SearchDocument"
    name: "SearchDocument"
    fullName: "com.azure.search.documents.SearchDocument"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse*"
  name: "getDocumentWithResponse"
  nameWithType: "SearchIndexClient.getDocumentWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.getDocumentWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.util.SuggestPagedIterable"
  name: "SuggestPagedIterable"
  nameWithType: "SuggestPagedIterable"
  fullName: "com.azure.search.documents.util.SuggestPagedIterable"
- uid: "com.azure.search.documents.SearchIndexClient.suggest*"
  name: "suggest"
  nameWithType: "SearchIndexClient.suggest"
  fullName: "com.azure.search.documents.SearchIndexClient.suggest"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.SuggestOptions"
  name: "SuggestOptions"
  nameWithType: "SuggestOptions"
  fullName: "com.azure.search.documents.models.SuggestOptions"
- uid: "com.azure.search.documents.models.IndexDocumentsBatch<?>"
  spec.java:
  - uid: "com.azure.search.documents.models.IndexDocumentsBatch"
    name: "IndexDocumentsBatch"
    fullName: "com.azure.search.documents.models.IndexDocumentsBatch"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchIndexClient.indexDocuments*"
  name: "indexDocuments"
  nameWithType: "SearchIndexClient.indexDocuments"
  fullName: "com.azure.search.documents.SearchIndexClient.indexDocuments"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse*"
  name: "indexDocumentsWithResponse"
  nameWithType: "SearchIndexClient.indexDocumentsWithResponse"
  fullName: "com.azure.search.documents.SearchIndexClient.indexDocumentsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.util.AutocompletePagedIterable"
  name: "AutocompletePagedIterable"
  nameWithType: "AutocompletePagedIterable"
  fullName: "com.azure.search.documents.util.AutocompletePagedIterable"
- uid: "com.azure.search.documents.SearchIndexClient.autocomplete*"
  name: "autocomplete"
  nameWithType: "SearchIndexClient.autocomplete"
  fullName: "com.azure.search.documents.SearchIndexClient.autocomplete"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.AutocompleteOptions"
  name: "AutocompleteOptions"
  nameWithType: "AutocompleteOptions"
  fullName: "com.azure.search.documents.models.AutocompleteOptions"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.search.documents.models.IndexDocumentsBatch"
  name: "IndexDocumentsBatch"
  nameWithType: "IndexDocumentsBatch"
  fullName: "com.azure.search.documents.models.IndexDocumentsBatch"
