### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.linkedHashKeys*"
fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder<K0,V0>.linkedHashKeys"
name: "linkedHashKeys"
nameWithType: "MultimapBuilder<K0,V0>.linkedHashKeys"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.linkedHashKeys()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder<K0,V0>.linkedHashKeys()"
  name: "linkedHashKeys()"
  nameWithType: "MultimapBuilder<K0,V0>.linkedHashKeys()"
  summary: "Uses a hash table to map keys to value collections.\n\nThe collections returned by <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.keySet()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#keySet()\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.keys()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#keys()\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.asMap()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#asMap()\"></xref> will iterate through the keys in the order that they were first added to the multimap, save that if all values associated with a key are removed and then the key is added back into the multimap, that key will come last in the key iteration order."
  syntax: "public static MultimapBuilder.MultimapBuilderWithKeys<Object> linkedHashKeys()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.MultimapBuilderWithKeys?alt=com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.MultimapBuilderWithKeys&text=MultimapBuilderWithKeys\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.linkedHashKeys(int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder<K0,V0>.linkedHashKeys(int expectedKeys)"
  name: "linkedHashKeys(int expectedKeys)"
  nameWithType: "MultimapBuilder<K0,V0>.linkedHashKeys(int expectedKeys)"
  summary: "Uses an hash table to map keys to value collections, initialized to expect the specified number of keys.\n\nThe collections returned by <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.keySet()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#keySet()\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.keys()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#keys()\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.asMap()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#asMap()\"></xref> will iterate through the keys in the order that they were first added to the multimap, save that if all values associated with a key are removed and then the key is added back into the multimap, that key will come last in the key iteration order."
  parameters:
  - name: "expectedKeys"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MultimapBuilder.MultimapBuilderWithKeys<Object> linkedHashKeys(int expectedKeys)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.MultimapBuilderWithKeys?alt=com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.MultimapBuilderWithKeys&text=MultimapBuilderWithKeys\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
