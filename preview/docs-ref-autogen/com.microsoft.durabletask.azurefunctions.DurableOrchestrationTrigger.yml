### YamlMime:JavaType
uid: "com.microsoft.durabletask.azurefunctions.DurableOrchestrationTrigger"
fullName: "com.microsoft.durabletask.azurefunctions.DurableOrchestrationTrigger"
name: "DurableOrchestrationTrigger"
nameWithType: "DurableOrchestrationTrigger"
summary: "Azure Functions attribute for binding a function parameter to a Durable Task orchestration request.\n\nThe following is an example of an orchestrator function that calls three activity functions in sequence.\n\n```java\n@FunctionName(\"HelloCities\")\n public String helloCitiesOrchestrator(\n         @DurableOrchestrationTrigger(name = \"orchestratorRequestProtoBytes\") String orchestratorRequestProtoBytes) {\n     return OrchestrationRunner.loadAndRun(orchestratorRequestProtoBytes, ctx -> {\n         String result = \"\";\n         result += ctx.callActivity(\"SayHello\", \"Tokyo\", String.class).await() + \", \";\n         result += ctx.callActivity(\"SayHello\", \"London\", String.class).await() + \", \";\n         result += ctx.callActivity(\"SayHello\", \"Seattle\", String.class).await();\n         return result;\n     });\n }\n```"
syntax: "public interface DurableOrchestrationTrigger implements Annotation"
methods:
- "com.microsoft.durabletask.azurefunctions.DurableOrchestrationTrigger.dataType()"
- "com.microsoft.durabletask.azurefunctions.DurableOrchestrationTrigger.name()"
- "com.microsoft.durabletask.azurefunctions.DurableOrchestrationTrigger.orchestration()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.durabletask.azurefunctions"
artifact: com.microsoft:durabletask-azure-functions:1.0.0-beta.1
