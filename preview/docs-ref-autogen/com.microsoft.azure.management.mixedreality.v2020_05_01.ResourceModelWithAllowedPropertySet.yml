### YamlMime:JavaType
uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet"
fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet"
name: "ResourceModelWithAllowedPropertySet"
nameWithType: "ResourceModelWithAllowedPropertySet"
summary: "The resource model definition containing the full set of allowed properties for a resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.ProxyResource?alt=com.microsoft.azure.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.ProxyResource.id()?alt=com.microsoft.azure.ProxyResource.id&text=id\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.ProxyResource.name()?alt=com.microsoft.azure.ProxyResource.name&text=name\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.ProxyResource.type()?alt=com.microsoft.azure.ProxyResource.type&text=type\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.microsoft.azure.Resource?alt=com.microsoft.azure.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.Resource.getTags()?alt=com.microsoft.azure.Resource.getTags&text=getTags\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.Resource.location()?alt=com.microsoft.azure.Resource.location&text=location\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.Resource.withLocation(java.lang.String)?alt=com.microsoft.azure.Resource.withLocation&text=withLocation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)?alt=com.microsoft.azure.Resource.withTags&text=withTags\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ResourceModelWithAllowedPropertySet**</br> extends <xref href=\"com.microsoft.azure.Resource?alt=com.microsoft.azure.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.ResourceModelWithAllowedPropertySet()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.ResourceModelWithAllowedPropertySet()"
  name: "ResourceModelWithAllowedPropertySet()"
  nameWithType: "ResourceModelWithAllowedPropertySet.ResourceModelWithAllowedPropertySet()"
  syntax: "public ResourceModelWithAllowedPropertySet()"
methods:
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.etag()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.etag()"
  name: "etag()"
  nameWithType: "ResourceModelWithAllowedPropertySet.etag()"
  summary: "Get the etag field is \\*not\\* required."
  syntax: "public String etag()"
  desc: "Get the etag field is \\*not\\* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention. Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
  returns:
    description: "the etag value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.identity()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.identity()"
  name: "identity()"
  nameWithType: "ResourceModelWithAllowedPropertySet.identity()"
  summary: "Get the identity value."
  syntax: "public ResourceModelWithAllowedPropertySetIdentity identity()"
  desc: "Get the identity value."
  returns:
    description: "the identity value"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetIdentity?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetIdentity&text=ResourceModelWithAllowedPropertySetIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.kind()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.kind()"
  name: "kind()"
  nameWithType: "ResourceModelWithAllowedPropertySet.kind()"
  summary: "Get metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.<wbr>g."
  syntax: "public String kind()"
  desc: "Get metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value."
  returns:
    description: "the kind value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.managedBy()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.managedBy()"
  name: "managedBy()"
  nameWithType: "ResourceModelWithAllowedPropertySet.managedBy()"
  summary: "Get the fully qualified resource ID of the resource that manages this resource."
  syntax: "public String managedBy()"
  desc: "Get the fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
  returns:
    description: "the managedBy value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.plan()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.plan()"
  name: "plan()"
  nameWithType: "ResourceModelWithAllowedPropertySet.plan()"
  summary: "Get the plan value."
  syntax: "public ResourceModelWithAllowedPropertySetPlan plan()"
  desc: "Get the plan value."
  returns:
    description: "the plan value"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetPlan?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetPlan&text=ResourceModelWithAllowedPropertySetPlan\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.sku()"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.sku()"
  name: "sku()"
  nameWithType: "ResourceModelWithAllowedPropertySet.sku()"
  summary: "Get the sku value."
  syntax: "public ResourceModelWithAllowedPropertySetSku sku()"
  desc: "Get the sku value."
  returns:
    description: "the sku value"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetSku?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetSku&text=ResourceModelWithAllowedPropertySetSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withIdentity(com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetIdentity)"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withIdentity(ResourceModelWithAllowedPropertySetIdentity identity)"
  name: "withIdentity(ResourceModelWithAllowedPropertySetIdentity identity)"
  nameWithType: "ResourceModelWithAllowedPropertySet.withIdentity(ResourceModelWithAllowedPropertySetIdentity identity)"
  summary: "Set the identity value."
  parameters:
  - description: "the identity value to set"
    name: "identity"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetIdentity?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetIdentity&text=ResourceModelWithAllowedPropertySetIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySet withIdentity(ResourceModelWithAllowedPropertySetIdentity identity)"
  desc: "Set the identity value."
  returns:
    description: "the ResourceModelWithAllowedPropertySet object itself."
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet&text=ResourceModelWithAllowedPropertySet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withKind(java.lang.String)"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "ResourceModelWithAllowedPropertySet.withKind(String kind)"
  summary: "Set metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.<wbr>g."
  parameters:
  - description: "the kind value to set"
    name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySet withKind(String kind)"
  desc: "Set metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value."
  returns:
    description: "the ResourceModelWithAllowedPropertySet object itself."
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet&text=ResourceModelWithAllowedPropertySet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withManagedBy(java.lang.String)"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withManagedBy(String managedBy)"
  name: "withManagedBy(String managedBy)"
  nameWithType: "ResourceModelWithAllowedPropertySet.withManagedBy(String managedBy)"
  summary: "Set the fully qualified resource ID of the resource that manages this resource."
  parameters:
  - description: "the managedBy value to set"
    name: "managedBy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySet withManagedBy(String managedBy)"
  desc: "Set the fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
  returns:
    description: "the ResourceModelWithAllowedPropertySet object itself."
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet&text=ResourceModelWithAllowedPropertySet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withPlan(com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetPlan)"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withPlan(ResourceModelWithAllowedPropertySetPlan plan)"
  name: "withPlan(ResourceModelWithAllowedPropertySetPlan plan)"
  nameWithType: "ResourceModelWithAllowedPropertySet.withPlan(ResourceModelWithAllowedPropertySetPlan plan)"
  summary: "Set the plan value."
  parameters:
  - description: "the plan value to set"
    name: "plan"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetPlan?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetPlan&text=ResourceModelWithAllowedPropertySetPlan\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySet withPlan(ResourceModelWithAllowedPropertySetPlan plan)"
  desc: "Set the plan value."
  returns:
    description: "the ResourceModelWithAllowedPropertySet object itself."
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet&text=ResourceModelWithAllowedPropertySet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withSku(com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetSku)"
  fullName: "com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet.withSku(ResourceModelWithAllowedPropertySetSku sku)"
  name: "withSku(ResourceModelWithAllowedPropertySetSku sku)"
  nameWithType: "ResourceModelWithAllowedPropertySet.withSku(ResourceModelWithAllowedPropertySetSku sku)"
  summary: "Set the sku value."
  parameters:
  - description: "the sku value to set"
    name: "sku"
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetSku?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySetSku&text=ResourceModelWithAllowedPropertySetSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySet withSku(ResourceModelWithAllowedPropertySetSku sku)"
  desc: "Set the sku value."
  returns:
    description: "the ResourceModelWithAllowedPropertySet object itself."
    type: "<xref href=\"com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet?alt=com.microsoft.azure.management.mixedreality.v2020_05_01.ResourceModelWithAllowedPropertySet&text=ResourceModelWithAllowedPropertySet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set."
metadata: {}
package: "com.microsoft.azure.management.mixedreality.v2020_05_01"
artifact: com.microsoft.azure.mixedreality.v2020_05_01:azure-mgmt-mixedreality:1.0.0-beta
