### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter
  id: PropertyWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.ser.PropertyWriter)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: PropertyWriter
  nameWithType: PropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: Base class for writers used to output property values (name-value pairs) as key/value pairs via streaming API. This is the most generic abstraction implemented by both POJO and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> serializers, and invoked by filtering functionality.
  syntax:
    content: public abstract class PropertyWriter extends ConcreteBeanPropertyBase implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  id: <A>findAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: <A>findAnnotation(Class<A> acls)
  nameWithType: PropertyWriter.<A>findAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.findAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Convenience method for accessing annotation that may be associated either directly on property, or, if not, via enclosing class (context). This allows adding baseline contextual annotations, for example, by adding an annotation for a given class and making that apply to all properties unless overridden by per-property annotations.


    This method is functionally equivalent to:


    ```java

    MyAnnotation ann = propWriter.getAnnotation(MyAnnotation.class);
      if (ann == null) {
        ann = propWriter.getContextAnnotation(MyAnnotation.class);
      }
    ```


    that is, tries to find a property annotation first, but if one is not found, tries to find context-annotation (from enclosing class) of same type.
  syntax:
    content: public A <A>findAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  id: <A>getAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: <A>getAnnotation(Class<A> acls)
  nameWithType: PropertyWriter.<A>getAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.getAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for accessing annotations directly declared for property that this writer is associated with.
  syntax:
    content: public abstract A <A>getAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  id: <A>getContextAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: <A>getContextAnnotation(Class<A> acls)
  nameWithType: PropertyWriter.<A>getContextAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.getContextAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for accessing annotations declared in context of the property that this writer is associated with; usually this means annotations on enclosing class for property.
  syntax:
    content: public abstract A <A>getContextAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.PropertyMetadata)
  id: PropertyWriter(com.fasterxml.jackson.databind.PropertyMetadata)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: PropertyWriter(PropertyMetadata md)
  nameWithType: PropertyWriter.PropertyWriter(PropertyMetadata md)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(PropertyMetadata md)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected PropertyWriter(PropertyMetadata md)
    parameters:
    - id: md
      type: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
  id: PropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: PropertyWriter(BeanPropertyDefinition propDef)
  nameWithType: PropertyWriter.PropertyWriter(BeanPropertyDefinition propDef)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(BeanPropertyDefinition propDef)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected PropertyWriter(BeanPropertyDefinition propDef)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(com.fasterxml.jackson.databind.ser.PropertyWriter)
  id: PropertyWriter(com.fasterxml.jackson.databind.ser.PropertyWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: PropertyWriter(PropertyWriter base)
  nameWithType: PropertyWriter.PropertyWriter(PropertyWriter base)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter(PropertyWriter base)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected PropertyWriter(PropertyWriter base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.PropertyWriter
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  nameWithType: PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Traversal method used for things like JSON Schema generation, or POJO introspection.
  syntax:
    content: public abstract void depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
    parameters:
    - id: objectVisitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  nameWithType: PropertyWriter.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Legacy method called for JSON Schema generation; should not be called by new code
  syntax:
    content: public abstract void depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
    parameters:
    - id: propertiesNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  id: getFullName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: getFullName()
  nameWithType: PropertyWriter.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public abstract PropertyName getFullName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: getName()
  nameWithType: PropertyWriter.getName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.getName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public abstract String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: serializeAsElement(Object value, JsonGenerator jgen, SerializerProvider provider)
  nameWithType: PropertyWriter.serializeAsElement(Object value, JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(Object value, JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Serialization method called when output is to be done as an array, that is, not using property names. This is needed when serializing container (<xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>, array) types, or POJOs using `tabular` ("as array") output format.


    Note that this mode of operation is independent of underlying data format; so it is typically NOT called for fully tabular formats such as CSV, where logical output is still as form of POJOs.
  syntax:
    content: public abstract void serializeAsElement(Object value, JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: value
      type: java.lang.Object
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: serializeAsField(Object value, JsonGenerator jgen, SerializerProvider provider)
  nameWithType: PropertyWriter.serializeAsField(Object value, JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(Object value, JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: The main serialization method called by filter when property is to be written normally.
  syntax:
    content: public abstract void serializeAsField(Object value, JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: value
      type: java.lang.Object
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: serializeAsOmittedField(Object value, JsonGenerator jgen, SerializerProvider provider)
  nameWithType: PropertyWriter.serializeAsOmittedField(Object value, JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(Object value, JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Serialization method that filter needs to call in cases where property is to be filtered, but the underlying data format requires a placeholder of some kind. This is usually the case for tabular (positional) data formats such as CSV.
  syntax:
    content: public abstract void serializeAsOmittedField(Object value, JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: value
      type: java.lang.Object
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyWriter
  langs:
  - java
  name: serializeAsPlaceholder(Object value, JsonGenerator jgen, SerializerProvider provider)
  nameWithType: PropertyWriter.serializeAsPlaceholder(Object value, JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(Object value, JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Serialization method called when doing tabular (positional) output from databind, but then value is to be omitted. This requires output of a placeholder value of some sort; often similar to <xref uid="com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField*" data-throw-if-not-resolved="false">#serializeAsOmittedField</xref>.
  syntax:
    content: public abstract void serializeAsPlaceholder(Object value, JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: value
      type: java.lang.Object
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
references:
- uid: com.fasterxml.jackson.databind.PropertyMetadata
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter*
  name: PropertyWriter
  nameWithType: PropertyWriter.PropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.PropertyWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getName*
  name: getName
  nameWithType: PropertyWriter.getName
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getName
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName*
  name: getFullName
  nameWithType: PropertyWriter.getFullName
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.findAnnotation*
  name: <A>findAnnotation
  nameWithType: PropertyWriter.<A>findAnnotation
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getAnnotation*
  name: <A>getAnnotation
  nameWithType: PropertyWriter.<A>getAnnotation
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getContextAnnotation*
  name: <A>getContextAnnotation
  nameWithType: PropertyWriter.<A>getContextAnnotation
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField*
  name: serializeAsField
  nameWithType: PropertyWriter.serializeAsField
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField*
  name: serializeAsOmittedField
  nameWithType: PropertyWriter.serializeAsOmittedField
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement*
  name: serializeAsElement
  nameWithType: PropertyWriter.serializeAsElement
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder*
  name: serializeAsPlaceholder
  nameWithType: PropertyWriter.serializeAsPlaceholder
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
  name: jsonFormatVisitors.JsonObjectFormatVisitor
  nameWithType: jsonFormatVisitors.JsonObjectFormatVisitor
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty*
  name: depositSchemaProperty
  nameWithType: PropertyWriter.depositSchemaProperty
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  name: ObjectNode
  nameWithType: ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
  name: ConcreteBeanPropertyBase
  nameWithType: ConcreteBeanPropertyBase
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  name: ConcreteBeanPropertyBase.getMetadata()
  nameWithType: ConcreteBeanPropertyBase.getMetadata()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  name: ConcreteBeanPropertyBase.isRequired()
  nameWithType: ConcreteBeanPropertyBase.isRequired()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  name: ConcreteBeanPropertyBase.isVirtual()
  nameWithType: ConcreteBeanPropertyBase.isVirtual()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  name: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  nameWithType: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
