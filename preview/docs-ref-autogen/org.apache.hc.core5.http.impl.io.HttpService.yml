### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.impl.io.HttpService
  id: HttpService
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io
  children:
  - org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>)
  - org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>,org.apache.hc.core5.http.impl.Http1StreamListener)
  - org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler)
  - org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.impl.Http1StreamListener)
  - org.apache.hc.core5.http.impl.io.HttpService.handleException(org.apache.hc.core5.http.HttpException,org.apache.hc.core5.http.ClassicHttpResponse)
  - org.apache.hc.core5.http.impl.io.HttpService.handleRequest(org.apache.hc.core5.http.io.HttpServerConnection,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.core5.http.impl.io.HttpService.toStatusCode(java.lang.Exception)
  langs:
  - java
  name: HttpService
  nameWithType: HttpService
  fullName: org.apache.hc.core5.http.impl.io.HttpService
  type: Class
  package: org.apache.hc.core5.http.impl.io
  summary: >-
    `HttpService` is a server side HTTP protocol handler based on the classic (blocking) I/O model.


    `HttpService` relies on <xref uid="org.apache.hc.core5.http.protocol.HttpProcessor" data-throw-if-not-resolved="false">HttpProcessor</xref> to generate mandatory protocol headers for all outgoing messages and apply common, cross-cutting message transformations to all incoming and outgoing messages, whereas individual <xref uid="org.apache.hc.core5.http.io.HttpRequestHandler" data-throw-if-not-resolved="false">HttpRequestHandler</xref>s are expected to implement application specific content generation and processing.


    `HttpService` uses <xref uid="org.apache.hc.core5.http.HttpRequestMapper" data-throw-if-not-resolved="false">HttpRequestMapper</xref> to map matching request handler for a particular request URI of an incoming HTTP request.
  syntax:
    content: public class HttpService
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>)
  id: HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory)
  nameWithType: HttpService.HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory)
  overload: org.apache.hc.core5.http.impl.io.HttpService.HttpService*
  type: Constructor
  package: org.apache.hc.core5.http.impl.io
  summary: Create a new HTTP service.
  syntax:
    content: public HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory)
    parameters:
    - id: processor
      type: org.apache.hc.core5.http.protocol.HttpProcessor
      description: the processor to use on requests and responses
    - id: handlerMapper
      type: org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>
      description: the handler mapper
    - id: connReuseStrategy
      type: org.apache.hc.core5.http.ConnectionReuseStrategy
      description: >-
        the connection reuse strategy. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.impl.DefaultConnectionReuseStrategy.INSTANCE" data-throw-if-not-resolved="false">DefaultConnectionReuseStrategy#INSTANCE</xref> will be used.
    - id: responseFactory
      type: org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>
      description: >-
        the response factory. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.impl.io.DefaultClassicHttpResponseFactory.INSTANCE" data-throw-if-not-resolved="false">DefaultClassicHttpResponseFactory#INSTANCE</xref> will be used.
- uid: org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>,org.apache.hc.core5.http.impl.Http1StreamListener)
  id: HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>,org.apache.hc.core5.http.impl.Http1StreamListener)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory, Http1StreamListener streamListener)
  nameWithType: HttpService.HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory, Http1StreamListener streamListener)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory, Http1StreamListener streamListener)
  overload: org.apache.hc.core5.http.impl.io.HttpService.HttpService*
  type: Constructor
  package: org.apache.hc.core5.http.impl.io
  summary: Create a new HTTP service.
  syntax:
    content: public HttpService(HttpProcessor processor, HttpRequestMapper<HttpRequestHandler> handlerMapper, ConnectionReuseStrategy connReuseStrategy, HttpResponseFactory<ClassicHttpResponse> responseFactory, Http1StreamListener streamListener)
    parameters:
    - id: processor
      type: org.apache.hc.core5.http.protocol.HttpProcessor
      description: the processor to use on requests and responses
    - id: handlerMapper
      type: org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>
      description: the handler mapper
    - id: connReuseStrategy
      type: org.apache.hc.core5.http.ConnectionReuseStrategy
      description: >-
        the connection reuse strategy. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.impl.DefaultConnectionReuseStrategy.INSTANCE" data-throw-if-not-resolved="false">DefaultConnectionReuseStrategy#INSTANCE</xref> will be used.
    - id: responseFactory
      type: org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>
      description: >-
        the response factory. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.impl.io.DefaultClassicHttpResponseFactory.INSTANCE" data-throw-if-not-resolved="false">DefaultClassicHttpResponseFactory#INSTANCE</xref> will be used.
    - id: streamListener
      type: org.apache.hc.core5.http.impl.Http1StreamListener
      description: message stream listener.
- uid: org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler)
  id: HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler)
  nameWithType: HttpService.HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler)
  overload: org.apache.hc.core5.http.impl.io.HttpService.HttpService*
  type: Constructor
  package: org.apache.hc.core5.http.impl.io
  summary: Create a new HTTP service.
  syntax:
    content: public HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler)
    parameters:
    - id: processor
      type: org.apache.hc.core5.http.protocol.HttpProcessor
      description: the processor to use on requests and responses
    - id: requestHandler
      type: org.apache.hc.core5.http.io.HttpServerRequestHandler
      description: the request handler.
- uid: org.apache.hc.core5.http.impl.io.HttpService.HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.impl.Http1StreamListener)
  id: HttpService(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.core5.http.io.HttpServerRequestHandler,org.apache.hc.core5.http.ConnectionReuseStrategy,org.apache.hc.core5.http.impl.Http1StreamListener)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler, ConnectionReuseStrategy connReuseStrategy, Http1StreamListener streamListener)
  nameWithType: HttpService.HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler, ConnectionReuseStrategy connReuseStrategy, Http1StreamListener streamListener)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler, ConnectionReuseStrategy connReuseStrategy, Http1StreamListener streamListener)
  overload: org.apache.hc.core5.http.impl.io.HttpService.HttpService*
  type: Constructor
  package: org.apache.hc.core5.http.impl.io
  summary: Create a new HTTP service.
  syntax:
    content: public HttpService(HttpProcessor processor, HttpServerRequestHandler requestHandler, ConnectionReuseStrategy connReuseStrategy, Http1StreamListener streamListener)
    parameters:
    - id: processor
      type: org.apache.hc.core5.http.protocol.HttpProcessor
      description: the processor to use on requests and responses
    - id: requestHandler
      type: org.apache.hc.core5.http.io.HttpServerRequestHandler
      description: the request handler.
    - id: connReuseStrategy
      type: org.apache.hc.core5.http.ConnectionReuseStrategy
      description: >-
        the connection reuse strategy. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.impl.DefaultConnectionReuseStrategy.INSTANCE" data-throw-if-not-resolved="false">DefaultConnectionReuseStrategy#INSTANCE</xref> will be used.
    - id: streamListener
      type: org.apache.hc.core5.http.impl.Http1StreamListener
      description: message stream listener.
- uid: org.apache.hc.core5.http.impl.io.HttpService.handleException(org.apache.hc.core5.http.HttpException,org.apache.hc.core5.http.ClassicHttpResponse)
  id: handleException(org.apache.hc.core5.http.HttpException,org.apache.hc.core5.http.ClassicHttpResponse)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: handleException(HttpException ex, ClassicHttpResponse response)
  nameWithType: HttpService.handleException(HttpException ex, ClassicHttpResponse response)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.handleException(HttpException ex, ClassicHttpResponse response)
  overload: org.apache.hc.core5.http.impl.io.HttpService.handleException*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Handles the given exception and generates an HTTP response to be sent back to the client to inform about the exceptional condition encountered in the course of the request processing.
  syntax:
    content: protected void handleException(HttpException ex, ClassicHttpResponse response)
    parameters:
    - id: ex
      type: org.apache.hc.core5.http.HttpException
      description: the exception.
    - id: response
      type: org.apache.hc.core5.http.ClassicHttpResponse
      description: the HTTP response.
- uid: org.apache.hc.core5.http.impl.io.HttpService.handleRequest(org.apache.hc.core5.http.io.HttpServerConnection,org.apache.hc.core5.http.protocol.HttpContext)
  id: handleRequest(org.apache.hc.core5.http.io.HttpServerConnection,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: handleRequest(HttpServerConnection conn, HttpContext context)
  nameWithType: HttpService.handleRequest(HttpServerConnection conn, HttpContext context)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.handleRequest(HttpServerConnection conn, HttpContext context)
  overload: org.apache.hc.core5.http.impl.io.HttpService.handleRequest*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Handles receives one HTTP request over the given connection within the given execution context and sends a response back to the client.
  syntax:
    content: public void handleRequest(HttpServerConnection conn, HttpContext context)
    parameters:
    - id: conn
      type: org.apache.hc.core5.http.io.HttpServerConnection
      description: the active connection to the client
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
  exceptions:
  - type: java.io.IOException
    description: in case of an I/O error.
  - type: org.apache.hc.core5.http.HttpException
    description: in case of an I/O error.
- uid: org.apache.hc.core5.http.impl.io.HttpService.toStatusCode(java.lang.Exception)
  id: toStatusCode(java.lang.Exception)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.HttpService
  langs:
  - java
  name: toStatusCode(Exception ex)
  nameWithType: HttpService.toStatusCode(Exception ex)
  fullName: org.apache.hc.core5.http.impl.io.HttpService.toStatusCode(Exception ex)
  overload: org.apache.hc.core5.http.impl.io.HttpService.toStatusCode*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  syntax:
    content: protected int toStatusCode(Exception ex)
    parameters:
    - id: ex
      type: java.lang.Exception
    return:
      type: int
references:
- uid: org.apache.hc.core5.http.protocol.HttpProcessor
  name: HttpProcessor
  nameWithType: HttpProcessor
  fullName: org.apache.hc.core5.http.protocol.HttpProcessor
- uid: org.apache.hc.core5.http.HttpRequestMapper<org.apache.hc.core5.http.io.HttpRequestHandler>
  spec.java:
  - uid: org.apache.hc.core5.http.HttpRequestMapper
    name: HttpRequestMapper
    fullName: org.apache.hc.core5.http.HttpRequestMapper
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.http.io.HttpRequestHandler
    name: HttpRequestHandler
    fullName: org.apache.hc.core5.http.io.HttpRequestHandler
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.ConnectionReuseStrategy
  name: ConnectionReuseStrategy
  nameWithType: ConnectionReuseStrategy
  fullName: org.apache.hc.core5.http.ConnectionReuseStrategy
- uid: org.apache.hc.core5.http.HttpResponseFactory<org.apache.hc.core5.http.ClassicHttpResponse>
  spec.java:
  - uid: org.apache.hc.core5.http.HttpResponseFactory
    name: HttpResponseFactory
    fullName: org.apache.hc.core5.http.HttpResponseFactory
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.http.ClassicHttpResponse
    name: ClassicHttpResponse
    fullName: org.apache.hc.core5.http.ClassicHttpResponse
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.impl.Http1StreamListener
  name: Http1StreamListener
  nameWithType: Http1StreamListener
  fullName: org.apache.hc.core5.http.impl.Http1StreamListener
- uid: org.apache.hc.core5.http.impl.io.HttpService.HttpService*
  name: HttpService
  nameWithType: HttpService.HttpService
  fullName: org.apache.hc.core5.http.impl.io.HttpService.HttpService
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.io.HttpServerRequestHandler
  name: HttpServerRequestHandler
  nameWithType: HttpServerRequestHandler
  fullName: org.apache.hc.core5.http.io.HttpServerRequestHandler
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.io.HttpServerConnection
  name: HttpServerConnection
  nameWithType: HttpServerConnection
  fullName: org.apache.hc.core5.http.io.HttpServerConnection
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.impl.io.HttpService.handleRequest*
  name: handleRequest
  nameWithType: HttpService.handleRequest
  fullName: org.apache.hc.core5.http.impl.io.HttpService.handleRequest
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.ClassicHttpResponse
  name: ClassicHttpResponse
  nameWithType: ClassicHttpResponse
  fullName: org.apache.hc.core5.http.ClassicHttpResponse
- uid: org.apache.hc.core5.http.impl.io.HttpService.handleException*
  name: handleException
  nameWithType: HttpService.handleException
  fullName: org.apache.hc.core5.http.impl.io.HttpService.handleException
  package: org.apache.hc.core5.http.impl.io
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.impl.io.HttpService.toStatusCode*
  name: toStatusCode
  nameWithType: HttpService.toStatusCode
  fullName: org.apache.hc.core5.http.impl.io.HttpService.toStatusCode
  package: org.apache.hc.core5.http.impl.io
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.core5.http.HttpRequestMapper
  name: HttpRequestMapper
  nameWithType: HttpRequestMapper
  fullName: org.apache.hc.core5.http.HttpRequestMapper
- uid: org.apache.hc.core5.http.io.HttpRequestHandler
  name: HttpRequestHandler
  nameWithType: HttpRequestHandler
  fullName: org.apache.hc.core5.http.io.HttpRequestHandler
- uid: org.apache.hc.core5.http.HttpResponseFactory
  name: HttpResponseFactory
  nameWithType: HttpResponseFactory
  fullName: org.apache.hc.core5.http.HttpResponseFactory
