### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.type.TypeReference"
fullName: "com.fasterxml.jackson.core.type.TypeReference<T>"
name: "TypeReference<T>"
nameWithType: "TypeReference<T>"
summary: "This generic abstract class is used for obtaining full generics type information by sub-classing; it must be converted to <xref uid=\"com.fasterxml.jackson.core.type.ResolvedType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvedType\"></xref> implementation (implemented by `JavaType` from \"databind\" bundle) to be used. Class is based on ideas from http://gafter.blogspot.com/2006/12/super-type-tokens.html, Additional idea (from a suggestion made in comments of the article) is to require bogus implementation of `Comparable` (any such generic interface would do, as long as it forces a method with generic type to be implemented). to ensure that a Type argument is indeed given.\n\nUsage is by sub-classing: here is one way to instantiate reference to generic type `List<Integer>`:\n\n```java\nTypeReference ref = new TypeReference<List<Integer>>() { };\n```\n\nwhich can be passed to methods that accept TypeReference, or resolved using `TypeFactory` to obtain <xref uid=\"com.fasterxml.jackson.core.type.ResolvedType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvedType\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class TypeReference<T> implements Comparable<TypeReference<T>>"
constructors:
- "com.fasterxml.jackson.core.type.TypeReference.TypeReference()"
fields:
- "com.fasterxml.jackson.core.type.TypeReference._type"
methods:
- "com.fasterxml.jackson.core.type.TypeReference.compareTo(com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.type.TypeReference.getType()"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"java.lang.Comparable?alt=java.lang.Comparable&text=Comparable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.core.type.TypeReference?alt=com.fasterxml.jackson.core.type.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
metadata: {}
package: "com.fasterxml.jackson.core.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
