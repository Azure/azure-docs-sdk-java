### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.util.ByteArrayBuilder"
fullName: "com.fasterxml.jackson.core.util.ByteArrayBuilder"
name: "ByteArrayBuilder"
nameWithType: "ByteArrayBuilder"
summary: "Helper class that is similar to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.ByteArrayOutputStream\"></xref> in usage, but more geared to Jackson use cases internally. Specific changes include segment storage (no need to have linear backing buffer, can avoid reallocations, copying), as well API not based on <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.OutputStream\"></xref>. In short, a very much specialized builder object.\n\nAlso implements <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> to allow efficient aggregation of output content as a byte array, similar to how <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.ByteArrayOutputStream\"></xref> works, but somewhat more efficiently for many use cases.\n\nNOTE: maximum size limited to Java Array maximum, 2 gigabytes: this because usage pattern is to collect content for a \\`byte\\[\\]\\` and so although theoretically this builder can aggregate more content it will not be usable as things are. Behavior may be improved if we solve the access problem."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.OutputStream\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.OutputStream.close()"
- "java.io.OutputStream.flush()"
- "java.io.OutputStream.nullOutputStream()"
- "java.io.OutputStream.write(byte[])"
- "java.io.OutputStream.write(byte[],int,int)"
- "java.io.OutputStream.write(int)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ByteArrayBuilder extends OutputStream"
constructors:
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(com.fasterxml.jackson.core.util.BufferRecycler,int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.ByteArrayBuilder(int)"
fields:
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.NO_BYTES"
methods:
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.appendFourBytes(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.close()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.completeAndCoalesce(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.finishCurrentSegment()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.flush()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.fromInitial(byte[],int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegment()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.getCurrentSegmentLength()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.release()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.reset()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.resetAndGetFirstSegment()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.setCurrentSegmentLength(int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.size()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray()"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[])"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[],int,int)"
- "com.fasterxml.jackson.core.util.ByteArrayBuilder.write(int)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.core.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
