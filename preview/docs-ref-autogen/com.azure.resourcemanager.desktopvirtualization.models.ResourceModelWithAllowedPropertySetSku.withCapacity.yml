### YamlMime:JavaMember
uid: "com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku.withCapacity*"
fullName: "com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku.withCapacity"
name: "withCapacity"
nameWithType: "ResourceModelWithAllowedPropertySetSku.withCapacity"
members:
- uid: "com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku.withCapacity(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku.withCapacity(Integer capacity)"
  name: "withCapacity(Integer capacity)"
  nameWithType: "ResourceModelWithAllowedPropertySetSku.withCapacity(Integer capacity)"
  summary: "Set the capacity property: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
  overridden: "com.azure.resourcemanager.desktopvirtualization.models.Sku.withCapacity(java.lang.Integer)"
  parameters:
  - name: "capacity"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceModelWithAllowedPropertySetSku withCapacity(Integer capacity)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku?alt=com.azure.resourcemanager.desktopvirtualization.models.ResourceModelWithAllowedPropertySetSku&text=ResourceModelWithAllowedPropertySetSku\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.desktopvirtualization.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-desktopvirtualization:1.0.0-beta.1
