### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.language.AbstractCaverphone
  id: AbstractCaverphone
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language
  children:
  - org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()
  - org.apache.commons.codec.language.AbstractCaverphone.encode(java.lang.Object)
  - org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(java.lang.String,java.lang.String)
  langs:
  - java
  name: AbstractCaverphone
  nameWithType: AbstractCaverphone
  fullName: org.apache.commons.codec.language.AbstractCaverphone
  type: Class
  package: org.apache.commons.codec.language
  summary: >-
    Encodes a string into a Caverphone value. This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0 algorithm:


    This class is immutable and thread-safe.
  syntax:
    content: public abstract class AbstractCaverphone implements StringEncoder
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.commons.codec.StringEncoder
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()
  id: AbstractCaverphone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.AbstractCaverphone
  langs:
  - java
  name: AbstractCaverphone()
  nameWithType: AbstractCaverphone.AbstractCaverphone()
  fullName: org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()
  overload: org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: Creates an instance of the Caverphone encoder
  syntax:
    content: public AbstractCaverphone()
- uid: org.apache.commons.codec.language.AbstractCaverphone.encode(java.lang.Object)
  id: encode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.AbstractCaverphone
  langs:
  - java
  name: encode(Object source)
  nameWithType: AbstractCaverphone.encode(Object source)
  fullName: org.apache.commons.codec.language.AbstractCaverphone.encode(Object source)
  overload: org.apache.commons.codec.language.AbstractCaverphone.encode*
  type: Method
  package: org.apache.commons.codec.language
  summary: Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String.
  syntax:
    content: public Object encode(Object source)
    parameters:
    - id: source
      type: java.lang.Object
      description: Object to encode
    return:
      type: java.lang.Object
      description: >-
        An object (or type java.lang.String) containing the caverphone code which corresponds to the String
                 supplied.
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: if the parameter supplied is not of type java.lang.String
- uid: org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(java.lang.String,java.lang.String)
  id: isEncodeEqual(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.AbstractCaverphone
  langs:
  - java
  name: isEncodeEqual(String str1, String str2)
  nameWithType: AbstractCaverphone.isEncodeEqual(String str1, String str2)
  fullName: org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String str1, String str2)
  overload: org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual*
  type: Method
  package: org.apache.commons.codec.language
  summary: Tests if the encodings of two strings are equal. This method might be promoted to a new AbstractStringEncoder superclass.
  syntax:
    content: public boolean isEncodeEqual(String str1, String str2)
    parameters:
    - id: str1
      type: java.lang.String
      description: First of two strings to compare
    - id: str2
      type: java.lang.String
      description: Second of two strings to compare
    return:
      type: boolean
      description: <code>true</code> if the encodings of these strings are identical, <code>false</code> otherwise.
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: thrown if there is an error condition during the encoding process.
references:
- uid: org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone*
  name: AbstractCaverphone
  nameWithType: AbstractCaverphone.AbstractCaverphone
  fullName: org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.EncoderException
  name: EncoderException
  nameWithType: EncoderException
  fullName: org.apache.commons.codec.EncoderException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.commons.codec.language.AbstractCaverphone.encode*
  name: encode
  nameWithType: AbstractCaverphone.encode
  fullName: org.apache.commons.codec.language.AbstractCaverphone.encode
  package: org.apache.commons.codec.language
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual*
  name: isEncodeEqual
  nameWithType: AbstractCaverphone.isEncodeEqual
  fullName: org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.StringEncoder
  name: StringEncoder
  nameWithType: StringEncoder
  fullName: org.apache.commons.codec.StringEncoder
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
