### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals"
name: "getDefaultPropertyIgnorals"
nameWithType: "MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> type)"
  name: "getDefaultPropertyIgnorals(Class<?> type)"
  nameWithType: "MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> type)"
  summary: "Accessor for default property ignorals to use, if any, for given base type, based on config overrides settings (see <xref uid=\"com.fasterxml.jackson.databind.cfg.MapperConfigBase.findConfigOverride(java.lang.Class&lt;?&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findConfigOverride(Class)\"></xref>)."
  overridden: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>)"
  parameters:
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final JsonIgnoreProperties.Value getDefaultPropertyIgnorals(Class<?> type)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value?alt=com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)"
  name: "getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)"
  nameWithType: "MapperConfigBase<CFG,T>.getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)"
  summary: "Helper method that may be called to see if there are property ignoral definitions from annotations (via <xref uid=\"com.fasterxml.jackson.databind.introspect.AnnotatedClass\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnnotatedClass\"></xref>) or through \"config overrides\". If both exist, config overrides have precedence over class annotations."
  overridden: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyIgnorals(java.lang.Class<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass)"
  parameters:
  - name: "baseType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "actualClass"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.AnnotatedClass?alt=com.fasterxml.jackson.databind.introspect.AnnotatedClass&text=AnnotatedClass\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final JsonIgnoreProperties.Value getDefaultPropertyIgnorals(Class<?> baseType, AnnotatedClass actualClass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value?alt=com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
