### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Strings.isNullOrEmpty*"
fullName: "com.azure.cosmos.implementation.guava25.base.Strings.isNullOrEmpty"
name: "isNullOrEmpty"
nameWithType: "Strings.isNullOrEmpty"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Strings.isNullOrEmpty(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Strings.isNullOrEmpty(String string)"
  name: "isNullOrEmpty(String string)"
  nameWithType: "Strings.isNullOrEmpty(String string)"
  summary: "Returns `true` if the given string is null or is the empty string.\n\nConsider normalizing your string references with <xref uid=\"com.azure.cosmos.implementation.guava25.base.Strings.nullToEmpty*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#nullToEmpty\"></xref>. If you do, you can use <xref uid=\"java.lang.String.isEmpty*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#isEmpty()\"></xref> instead of this method, and you won't need special null-safe forms of methods like <xref uid=\"java.lang.String.toUpperCase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#toUpperCase\"></xref> either. Or, if you'd like to normalize \"in the other direction,\" converting empty strings to `null`, you can use <xref uid=\"com.azure.cosmos.implementation.guava25.base.Strings.emptyToNull*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#emptyToNull\"></xref>."
  parameters:
  - description: "a string reference to check"
    name: "string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isNullOrEmpty(String string)"
  returns:
    description: "<code>true</code> if the string is null or is the empty string"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
