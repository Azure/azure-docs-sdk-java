### YamlMime:JavaType
uid: "com.azure.compute.batch.models.DataDisk"
fullName: "com.azure.compute.batch.models.DataDisk"
name: "DataDisk"
nameWithType: "DataDisk"
summary: "Settings which will be used by the data disks associated to Compute Nodes in the Pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DataDisk**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.DataDisk.DataDisk(int,int)"
  fullName: "com.azure.compute.batch.models.DataDisk.DataDisk(int logicalUnitNumber, int diskSizeGb)"
  name: "DataDisk(int logicalUnitNumber, int diskSizeGb)"
  nameWithType: "DataDisk.DataDisk(int logicalUnitNumber, int diskSizeGb)"
  summary: "Creates an instance of Data<wbr>Disk class."
  parameters:
  - description: "the logicalUnitNumber value to set."
    name: "logicalUnitNumber"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the diskSizeGb value to set."
    name: "diskSizeGb"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk(int logicalUnitNumber, int diskSizeGb)"
  desc: "Creates an instance of DataDisk class."
methods:
- uid: "com.azure.compute.batch.models.DataDisk.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.DataDisk.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DataDisk.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Data<wbr>Disk from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataDisk fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DataDisk from the JsonReader."
  returns:
    description: "An instance of DataDisk if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.getCaching()"
  fullName: "com.azure.compute.batch.models.DataDisk.getCaching()"
  name: "getCaching()"
  nameWithType: "DataDisk.getCaching()"
  summary: "Get the caching property: The type of caching to be enabled for the data disks."
  syntax: "public CachingType getCaching()"
  desc: "Get the caching property: The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.compute.batch.models.CachingType?alt=com.azure.compute.batch.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.getDiskSizeGb()"
  fullName: "com.azure.compute.batch.models.DataDisk.getDiskSizeGb()"
  name: "getDiskSizeGb()"
  nameWithType: "DataDisk.getDiskSizeGb()"
  summary: "Get the disk<wbr>Size<wbr>Gb property: The initial disk size in gigabytes."
  syntax: "public int getDiskSizeGb()"
  desc: "Get the diskSizeGb property: The initial disk size in gigabytes."
  returns:
    description: "the diskSizeGb value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.getLogicalUnitNumber()"
  fullName: "com.azure.compute.batch.models.DataDisk.getLogicalUnitNumber()"
  name: "getLogicalUnitNumber()"
  nameWithType: "DataDisk.getLogicalUnitNumber()"
  summary: "Get the logical<wbr>Unit<wbr>Number property: The logical unit number."
  syntax: "public int getLogicalUnitNumber()"
  desc: "Get the logicalUnitNumber property: The logical unit number. The logicalUnitNumber is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct logicalUnitNumber. The value must be between 0 and 63, inclusive."
  returns:
    description: "the logicalUnitNumber value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.getStorageAccountType()"
  fullName: "com.azure.compute.batch.models.DataDisk.getStorageAccountType()"
  name: "getStorageAccountType()"
  nameWithType: "DataDisk.getStorageAccountType()"
  summary: "Get the storage<wbr>Account<wbr>Type property: The storage Account type to be used for the data disk."
  syntax: "public StorageAccountType getStorageAccountType()"
  desc: "Get the storageAccountType property: The storage Account type to be used for the data disk. If omitted, the default is \"standard\\_lrs\"."
  returns:
    description: "the storageAccountType value."
    type: "<xref href=\"com.azure.compute.batch.models.StorageAccountType?alt=com.azure.compute.batch.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.setCaching(com.azure.compute.batch.models.CachingType)"
  fullName: "com.azure.compute.batch.models.DataDisk.setCaching(CachingType caching)"
  name: "setCaching(CachingType caching)"
  nameWithType: "DataDisk.setCaching(CachingType caching)"
  summary: "Set the caching property: The type of caching to be enabled for the data disks."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.compute.batch.models.CachingType?alt=com.azure.compute.batch.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk setCaching(CachingType caching)"
  desc: "Set the caching property: The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.setStorageAccountType(com.azure.compute.batch.models.StorageAccountType)"
  fullName: "com.azure.compute.batch.models.DataDisk.setStorageAccountType(StorageAccountType storageAccountType)"
  name: "setStorageAccountType(StorageAccountType storageAccountType)"
  nameWithType: "DataDisk.setStorageAccountType(StorageAccountType storageAccountType)"
  summary: "Set the storage<wbr>Account<wbr>Type property: The storage Account type to be used for the data disk."
  parameters:
  - description: "the storageAccountType value to set."
    name: "storageAccountType"
    type: "<xref href=\"com.azure.compute.batch.models.StorageAccountType?alt=com.azure.compute.batch.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk setStorageAccountType(StorageAccountType storageAccountType)"
  desc: "Set the storageAccountType property: The storage Account type to be used for the data disk. If omitted, the default is \"standard\\_lrs\"."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.DataDisk.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.DataDisk.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DataDisk.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.DataDisk?alt=com.azure.compute.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
