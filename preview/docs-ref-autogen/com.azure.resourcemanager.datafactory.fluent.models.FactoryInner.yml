### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner"
name: "FactoryInner"
nameWithType: "FactoryInner"
summary: "Factory resource type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FactoryInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.FactoryInner()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.FactoryInner()"
  name: "FactoryInner()"
  nameWithType: "FactoryInner.FactoryInner()"
  syntax: "public FactoryInner()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.additionalProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.additionalProperties()"
  name: "additionalProperties()"
  nameWithType: "FactoryInner.additionalProperties()"
  summary: "Get the additionalProperties property: Factory resource type."
  syntax: "public Map<String,Object> additionalProperties()"
  returns:
    description: "the additionalProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.createTime()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.createTime()"
  name: "createTime()"
  nameWithType: "FactoryInner.createTime()"
  summary: "Get the createTime property: Time the factory was created in ISO8601 format."
  syntax: "public OffsetDateTime createTime()"
  returns:
    description: "the createTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.encryption()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.encryption()"
  name: "encryption()"
  nameWithType: "FactoryInner.encryption()"
  summary: "Get the encryption property: Properties to enable Customer Managed Key for the factory."
  syntax: "public EncryptionConfiguration encryption()"
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EncryptionConfiguration?alt=com.azure.resourcemanager.datafactory.models.EncryptionConfiguration&text=EncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.etag()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.etag()"
  name: "etag()"
  nameWithType: "FactoryInner.etag()"
  summary: "Get the etag property: Etag identifies change in the resource."
  syntax: "public String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.globalParameters()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.globalParameters()"
  name: "globalParameters()"
  nameWithType: "FactoryInner.globalParameters()"
  summary: "Get the globalParameters property: List of parameters for factory."
  syntax: "public Map<String,GlobalParameterSpecification> globalParameters()"
  returns:
    description: "the globalParameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification&text=GlobalParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.identity()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.identity()"
  name: "identity()"
  nameWithType: "FactoryInner.identity()"
  summary: "Get the identity property: Managed service identity of the factory."
  syntax: "public FactoryIdentity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryIdentity?alt=com.azure.resourcemanager.datafactory.models.FactoryIdentity&text=FactoryIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.provisioningState()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "FactoryInner.provisioningState()"
  summary: "Get the provisioningState property: Factory provisioning state, example Succeeded."
  syntax: "public String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "FactoryInner.publicNetworkAccess()"
  summary: "Get the publicNetworkAccess property: Whether or not public network access is allowed for the data factory."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PublicNetworkAccess?alt=com.azure.resourcemanager.datafactory.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.purviewConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.purviewConfiguration()"
  name: "purviewConfiguration()"
  nameWithType: "FactoryInner.purviewConfiguration()"
  summary: "Get the purviewConfiguration property: Purview information of the factory."
  syntax: "public PurviewConfiguration purviewConfiguration()"
  returns:
    description: "the purviewConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PurviewConfiguration?alt=com.azure.resourcemanager.datafactory.models.PurviewConfiguration&text=PurviewConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.repoConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.repoConfiguration()"
  name: "repoConfiguration()"
  nameWithType: "FactoryInner.repoConfiguration()"
  summary: "Get the repoConfiguration property: Git repo information of the factory."
  syntax: "public FactoryRepoConfiguration repoConfiguration()"
  returns:
    description: "the repoConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration&text=FactoryRepoConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.validate()"
  name: "validate()"
  nameWithType: "FactoryInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.version()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.version()"
  name: "version()"
  nameWithType: "FactoryInner.version()"
  summary: "Get the version property: Version of the factory."
  syntax: "public String version()"
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withAdditionalProperties(Map<String,Object> additionalProperties)"
  name: "withAdditionalProperties(Map<String,Object> additionalProperties)"
  nameWithType: "FactoryInner.withAdditionalProperties(Map<String,Object> additionalProperties)"
  summary: "Set the additionalProperties property: Factory resource type."
  parameters:
  - description: "the additionalProperties value to set."
    name: "additionalProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FactoryInner withAdditionalProperties(Map<String,Object> additionalProperties)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withEncryption(com.azure.resourcemanager.datafactory.models.EncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withEncryption(EncryptionConfiguration encryption)"
  name: "withEncryption(EncryptionConfiguration encryption)"
  nameWithType: "FactoryInner.withEncryption(EncryptionConfiguration encryption)"
  summary: "Set the encryption property: Properties to enable Customer Managed Key for the factory."
  parameters:
  - description: "the encryption value to set."
    name: "encryption"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EncryptionConfiguration?alt=com.azure.resourcemanager.datafactory.models.EncryptionConfiguration&text=EncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withEncryption(EncryptionConfiguration encryption)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withGlobalParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  name: "withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  nameWithType: "FactoryInner.withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  summary: "Set the globalParameters property: List of parameters for factory."
  parameters:
  - description: "the globalParameters value to set."
    name: "globalParameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification&text=GlobalParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FactoryInner withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withIdentity(com.azure.resourcemanager.datafactory.models.FactoryIdentity)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withIdentity(FactoryIdentity identity)"
  name: "withIdentity(FactoryIdentity identity)"
  nameWithType: "FactoryInner.withIdentity(FactoryIdentity identity)"
  summary: "Set the identity property: Managed service identity of the factory."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryIdentity?alt=com.azure.resourcemanager.datafactory.models.FactoryIdentity&text=FactoryIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withIdentity(FactoryIdentity identity)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "FactoryInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withPublicNetworkAccess(com.azure.resourcemanager.datafactory.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "FactoryInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: Whether or not public network access is allowed for the data factory."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PublicNetworkAccess?alt=com.azure.resourcemanager.datafactory.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withPurviewConfiguration(com.azure.resourcemanager.datafactory.models.PurviewConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  name: "withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  nameWithType: "FactoryInner.withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  summary: "Set the purviewConfiguration property: Purview information of the factory."
  parameters:
  - description: "the purviewConfiguration value to set."
    name: "purviewConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PurviewConfiguration?alt=com.azure.resourcemanager.datafactory.models.PurviewConfiguration&text=PurviewConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withRepoConfiguration(com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  name: "withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  nameWithType: "FactoryInner.withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  summary: "Set the repoConfiguration property: Git repo information of the factory."
  parameters:
  - description: "the repoConfiguration value to set."
    name: "repoConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration&text=FactoryRepoConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryInner withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  returns:
    description: "the FactoryInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "FactoryInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FactoryInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
