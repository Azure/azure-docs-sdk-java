### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.unionOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet<C>.<C>unionOf"
name: "<C>unionOf"
nameWithType: "ImmutableRangeSet<C>.<C>unionOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>unionOf(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet<C>.<C>unionOf(Iterable<Range<C>> ranges)"
  name: "<C>unionOf(Iterable<Range<C>> ranges)"
  nameWithType: "ImmutableRangeSet<C>.<C>unionOf(Iterable<Range<C>> ranges)"
  summary: "Returns an `ImmutableRangeSet` representing the union of the specified ranges.\n\nThis is the smallest `RangeSet` which encloses each of the specified ranges. Duplicate or connected ranges are permitted, and will be coalesced in the result."
  parameters:
  - name: "ranges"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public static ImmutableRangeSet<C> <C>unionOf(Iterable<Range<C>> ranges)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet&text=ImmutableRangeSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
