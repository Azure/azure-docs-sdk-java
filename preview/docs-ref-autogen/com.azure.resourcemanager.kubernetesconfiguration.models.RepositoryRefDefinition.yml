### YamlMime:JavaType
uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition"
fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition"
name: "RepositoryRefDefinition"
nameWithType: "RepositoryRefDefinition"
summary: "The source reference for the Git<wbr>Repository object."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RepositoryRefDefinition"
constructors:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.RepositoryRefDefinition()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.RepositoryRefDefinition()"
  name: "RepositoryRefDefinition()"
  nameWithType: "RepositoryRefDefinition.RepositoryRefDefinition()"
  syntax: "public RepositoryRefDefinition()"
methods:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.branch()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.branch()"
  name: "branch()"
  nameWithType: "RepositoryRefDefinition.branch()"
  summary: "Get the branch property: The git repository branch name to checkout."
  syntax: "public String branch()"
  desc: "Get the branch property: The git repository branch name to checkout."
  returns:
    description: "the branch value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.commit()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.commit()"
  name: "commit()"
  nameWithType: "RepositoryRefDefinition.commit()"
  summary: "Get the commit property: The commit SHA to checkout."
  syntax: "public String commit()"
  desc: "Get the commit property: The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver."
  returns:
    description: "the commit value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.semver()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.semver()"
  name: "semver()"
  nameWithType: "RepositoryRefDefinition.semver()"
  summary: "Get the semver property: The semver range used to match against git repository tags."
  syntax: "public String semver()"
  desc: "Get the semver property: The semver range used to match against git repository tags. This takes precedence over tag."
  returns:
    description: "the semver value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.tag()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.tag()"
  name: "tag()"
  nameWithType: "RepositoryRefDefinition.tag()"
  summary: "Get the tag property: The git repository tag name to checkout."
  syntax: "public String tag()"
  desc: "Get the tag property: The git repository tag name to checkout. This takes precedence over branch."
  returns:
    description: "the tag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.validate()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.validate()"
  name: "validate()"
  nameWithType: "RepositoryRefDefinition.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withBranch(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withBranch(String branch)"
  name: "withBranch(String branch)"
  nameWithType: "RepositoryRefDefinition.withBranch(String branch)"
  summary: "Set the branch property: The git repository branch name to checkout."
  parameters:
  - description: "the branch value to set."
    name: "branch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RepositoryRefDefinition withBranch(String branch)"
  desc: "Set the branch property: The git repository branch name to checkout."
  returns:
    description: "the RepositoryRefDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withCommit(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withCommit(String commit)"
  name: "withCommit(String commit)"
  nameWithType: "RepositoryRefDefinition.withCommit(String commit)"
  summary: "Set the commit property: The commit SHA to checkout."
  parameters:
  - description: "the commit value to set."
    name: "commit"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RepositoryRefDefinition withCommit(String commit)"
  desc: "Set the commit property: The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver."
  returns:
    description: "the RepositoryRefDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withSemver(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withSemver(String semver)"
  name: "withSemver(String semver)"
  nameWithType: "RepositoryRefDefinition.withSemver(String semver)"
  summary: "Set the semver property: The semver range used to match against git repository tags."
  parameters:
  - description: "the semver value to set."
    name: "semver"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RepositoryRefDefinition withSemver(String semver)"
  desc: "Set the semver property: The semver range used to match against git repository tags. This takes precedence over tag."
  returns:
    description: "the RepositoryRefDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withTag(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition.withTag(String tag)"
  name: "withTag(String tag)"
  nameWithType: "RepositoryRefDefinition.withTag(String tag)"
  summary: "Set the tag property: The git repository tag name to checkout."
  parameters:
  - description: "the tag value to set."
    name: "tag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RepositoryRefDefinition withTag(String tag)"
  desc: "Set the tag property: The git repository tag name to checkout. This takes precedence over branch."
  returns:
    description: "the RepositoryRefDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The source reference for the GitRepository object."
metadata: {}
package: "com.azure.resourcemanager.kubernetesconfiguration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-kubernetesconfiguration:1.0.0-beta.3
