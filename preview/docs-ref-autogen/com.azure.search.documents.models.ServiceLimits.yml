### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.models.ServiceLimits"
  id: "ServiceLimits"
  parent: "com.azure.search.documents.models"
  children:
  - "com.azure.search.documents.models.ServiceLimits.ServiceLimits()"
  - "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex()"
  - "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()"
  - "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex()"
  - "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex()"
  - "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)"
  - "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)"
  - "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex(java.lang.Integer)"
  - "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex(java.lang.Integer)"
  langs:
  - "java"
  name: "ServiceLimits"
  nameWithType: "ServiceLimits"
  fullName: "com.azure.search.documents.models.ServiceLimits"
  type: "Class"
  package: "com.azure.search.documents.models"
  summary: "Represents various service level limits."
  syntax:
    content: "public final class ServiceLimits"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.models.ServiceLimits.ServiceLimits()"
  id: "ServiceLimits()"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "ServiceLimits()"
  nameWithType: "ServiceLimits.ServiceLimits()"
  fullName: "com.azure.search.documents.models.ServiceLimits.ServiceLimits()"
  overload: "com.azure.search.documents.models.ServiceLimits.ServiceLimits*"
  type: "Constructor"
  package: "com.azure.search.documents.models"
  syntax:
    content: "public ServiceLimits()"
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex()"
  id: "getMaxComplexCollectionFieldsPerIndex()"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "getMaxComplexCollectionFieldsPerIndex()"
  nameWithType: "ServiceLimits.getMaxComplexCollectionFieldsPerIndex()"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex()"
  overload: "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the maxComplexCollectionFieldsPerIndex property: The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index."
  syntax:
    content: "public Integer getMaxComplexCollectionFieldsPerIndex()"
    return:
      type: "java.lang.Integer"
      description: "the maxComplexCollectionFieldsPerIndex value."
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()"
  id: "getMaxComplexObjectsInCollectionsPerDocument()"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "getMaxComplexObjectsInCollectionsPerDocument()"
  nameWithType: "ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()"
  overload: "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the maxComplexObjectsInCollectionsPerDocument property: The maximum number of objects in complex collections allowed per document."
  syntax:
    content: "public Integer getMaxComplexObjectsInCollectionsPerDocument()"
    return:
      type: "java.lang.Integer"
      description: "the maxComplexObjectsInCollectionsPerDocument value."
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex()"
  id: "getMaxFieldNestingDepthPerIndex()"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "getMaxFieldNestingDepthPerIndex()"
  nameWithType: "ServiceLimits.getMaxFieldNestingDepthPerIndex()"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex()"
  overload: "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the maxFieldNestingDepthPerIndex property: The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3."
  syntax:
    content: "public Integer getMaxFieldNestingDepthPerIndex()"
    return:
      type: "java.lang.Integer"
      description: "the maxFieldNestingDepthPerIndex value."
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex()"
  id: "getMaxFieldsPerIndex()"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "getMaxFieldsPerIndex()"
  nameWithType: "ServiceLimits.getMaxFieldsPerIndex()"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex()"
  overload: "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the maxFieldsPerIndex property: The maximum allowed fields per index."
  syntax:
    content: "public Integer getMaxFieldsPerIndex()"
    return:
      type: "java.lang.Integer"
      description: "the maxFieldsPerIndex value."
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)"
  id: "setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)"
  nameWithType: "ServiceLimits.setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)"
  overload: "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the maxComplexCollectionFieldsPerIndex property: The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index."
  syntax:
    content: "public ServiceLimits setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)"
    parameters:
    - id: "maxComplexCollectionFieldsPerIndex"
      type: "java.lang.Integer"
      description: "the\n maxComplexCollectionFieldsPerIndex value to set."
    return:
      type: "com.azure.search.documents.models.ServiceLimits"
      description: "the ServiceLimits object itself."
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)"
  id: "setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)"
  nameWithType: "ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)"
  overload: "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the maxComplexObjectsInCollectionsPerDocument property: The maximum number of objects in complex collections allowed per document."
  syntax:
    content: "public ServiceLimits setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)"
    parameters:
    - id: "maxComplexObjectsInCollectionsPerDocument"
      type: "java.lang.Integer"
      description: "the\n maxComplexObjectsInCollectionsPerDocument value to set."
    return:
      type: "com.azure.search.documents.models.ServiceLimits"
      description: "the ServiceLimits object itself."
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex(java.lang.Integer)"
  id: "setMaxFieldNestingDepthPerIndex(java.lang.Integer)"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)"
  nameWithType: "ServiceLimits.setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)"
  overload: "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the maxFieldNestingDepthPerIndex property: The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3."
  syntax:
    content: "public ServiceLimits setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)"
    parameters:
    - id: "maxFieldNestingDepthPerIndex"
      type: "java.lang.Integer"
      description: "the maxFieldNestingDepthPerIndex\n value to set."
    return:
      type: "com.azure.search.documents.models.ServiceLimits"
      description: "the ServiceLimits object itself."
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex(java.lang.Integer)"
  id: "setMaxFieldsPerIndex(java.lang.Integer)"
  parent: "com.azure.search.documents.models.ServiceLimits"
  langs:
  - "java"
  name: "setMaxFieldsPerIndex(Integer maxFieldsPerIndex)"
  nameWithType: "ServiceLimits.setMaxFieldsPerIndex(Integer maxFieldsPerIndex)"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex(Integer maxFieldsPerIndex)"
  overload: "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the maxFieldsPerIndex property: The maximum allowed fields per index."
  syntax:
    content: "public ServiceLimits setMaxFieldsPerIndex(Integer maxFieldsPerIndex)"
    parameters:
    - id: "maxFieldsPerIndex"
      type: "java.lang.Integer"
      description: "the maxFieldsPerIndex value to set."
    return:
      type: "com.azure.search.documents.models.ServiceLimits"
      description: "the ServiceLimits object itself."
references:
- uid: "com.azure.search.documents.models.ServiceLimits.ServiceLimits*"
  name: "ServiceLimits"
  nameWithType: "ServiceLimits.ServiceLimits"
  fullName: "com.azure.search.documents.models.ServiceLimits.ServiceLimits"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex*"
  name: "getMaxFieldsPerIndex"
  nameWithType: "ServiceLimits.getMaxFieldsPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxFieldsPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex*"
  name: "setMaxFieldsPerIndex"
  nameWithType: "ServiceLimits.setMaxFieldsPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxFieldsPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex*"
  name: "getMaxFieldNestingDepthPerIndex"
  nameWithType: "ServiceLimits.getMaxFieldNestingDepthPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxFieldNestingDepthPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex*"
  name: "setMaxFieldNestingDepthPerIndex"
  nameWithType: "ServiceLimits.setMaxFieldNestingDepthPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxFieldNestingDepthPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex*"
  name: "getMaxComplexCollectionFieldsPerIndex"
  nameWithType: "ServiceLimits.getMaxComplexCollectionFieldsPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxComplexCollectionFieldsPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex*"
  name: "setMaxComplexCollectionFieldsPerIndex"
  nameWithType: "ServiceLimits.setMaxComplexCollectionFieldsPerIndex"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxComplexCollectionFieldsPerIndex"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument*"
  name: "getMaxComplexObjectsInCollectionsPerDocument"
  nameWithType: "ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument"
  fullName: "com.azure.search.documents.models.ServiceLimits.getMaxComplexObjectsInCollectionsPerDocument"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument*"
  name: "setMaxComplexObjectsInCollectionsPerDocument"
  nameWithType: "ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument"
  fullName: "com.azure.search.documents.models.ServiceLimits.setMaxComplexObjectsInCollectionsPerDocument"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
