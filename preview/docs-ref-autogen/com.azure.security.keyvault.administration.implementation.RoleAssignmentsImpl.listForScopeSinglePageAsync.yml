### YamlMime:JavaMember
uid: "com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync*"
fullName: "com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync"
name: "listForScopeSinglePageAsync"
nameWithType: "RoleAssignmentsImpl.listForScopeSinglePageAsync"
members:
- uid: "com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)"
  name: "listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)"
  nameWithType: "RoleAssignmentsImpl.listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)"
  summary: "Gets role assignments for a scope."
  parameters:
  - description: "simple string."
    name: "vaultBaseUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The scope of the role assignments."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<RoleAssignment>> listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)"
  returns:
    description: "role assignments for a scope."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.implementation.models.RoleAssignment?alt=com.azure.security.keyvault.administration.implementation.models.RoleAssignment&text=RoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.administration.implementation"
artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
