### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors
  id: MoreCollectors
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>onlyElement()
  - com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>toOptional()
  langs:
  - java
  name: MoreCollectors
  nameWithType: MoreCollectors
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Collectors not present in `java.util.stream.Collectors` that are not otherwise associated with a `com.google.common` type.
  syntax:
    content: public final class MoreCollectors
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>onlyElement()
  id: <T>onlyElement()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MoreCollectors
  langs:
  - java
  name: <T>onlyElement()
  nameWithType: MoreCollectors.<T>onlyElement()
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>onlyElement()
  overload: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.onlyElement*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A collector that takes a stream containing exactly one element and returns that element. The returned collector throws an `IllegalArgumentException` if the stream consists of two or more elements, and a `NoSuchElementException` if the stream is empty.
  syntax:
    content: public static Collector<T,?,T> <T>onlyElement()
    return:
      type: java.util.stream.Collector<T,?,T>
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>toOptional()
  id: <T>toOptional()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MoreCollectors
  langs:
  - java
  name: <T>toOptional()
  nameWithType: MoreCollectors.<T>toOptional()
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>toOptional()
  overload: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.toOptional*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A collector that converts a stream of zero or one elements to an `Optional`. The returned collector throws an `IllegalArgumentException` if the stream consists of two or more elements, and a `NullPointerException` if the stream consists of exactly one element, which is null.
  syntax:
    content: public static Collector<T,?,Optional<T>> <T>toOptional()
    return:
      type: java.util.stream.Collector<T,?,java.util.Optional<T>>
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.MoreCollectors()
  id: MoreCollectors()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MoreCollectors
  langs:
  - java
  name: MoreCollectors()
  nameWithType: MoreCollectors.MoreCollectors()
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.MoreCollectors()
  overload: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.MoreCollectors*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private MoreCollectors()
references:
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.MoreCollectors*
  name: MoreCollectors
  nameWithType: MoreCollectors.MoreCollectors
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.MoreCollectors
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.stream.Collector<T,?,java.util.Optional<T>>
  spec.java:
  - uid: java.util.stream.Collector
    name: Collector
    fullName: java.util.stream.Collector
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: java.util.Optional
    name: Optional
    fullName: java.util.Optional
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.toOptional*
  name: <T>toOptional
  nameWithType: MoreCollectors.<T>toOptional
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>toOptional
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.stream.Collector<T,?,T>
  spec.java:
  - uid: java.util.stream.Collector
    name: Collector
    fullName: java.util.stream.Collector
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.onlyElement*
  name: <T>onlyElement
  nameWithType: MoreCollectors.<T>onlyElement
  fullName: com.azure.cosmos.implementation.guava25.collect.MoreCollectors.<T>onlyElement
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T,?,java.util.Optional
  name: T,?,Optional
  nameWithType: T,?,Optional
  fullName: T,?,java.util.Optional
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.util.stream.Collector
  name: Collector
  nameWithType: Collector
  fullName: java.util.stream.Collector
- uid: T,?,T
  name: T,?,T
  nameWithType: T,?,T
  fullName: T,?,T
