### YamlMime:JavaType
uid: "com.azure.resourcemanager.webpubsub.models.EventHandler"
fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler"
name: "EventHandler"
nameWithType: "EventHandler"
summary: "Properties of event handler."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EventHandler"
constructors:
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.EventHandler()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.EventHandler()"
  name: "EventHandler()"
  nameWithType: "EventHandler.EventHandler()"
  syntax: "public EventHandler()"
methods:
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.auth()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.auth()"
  name: "auth()"
  nameWithType: "EventHandler.auth()"
  summary: "Get the auth property: Gets or sets the auth settings for an event handler."
  syntax: "public UpstreamAuthSettings auth()"
  desc: "Get the auth property: Gets or sets the auth settings for an event handler. If not set, no auth is used."
  returns:
    description: "the auth value."
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings?alt=com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings&text=UpstreamAuthSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.systemEvents()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.systemEvents()"
  name: "systemEvents()"
  nameWithType: "EventHandler.systemEvents()"
  summary: "Get the system<wbr>Events property: Gets ot sets the list of system events."
  syntax: "public List<String> systemEvents()"
  desc: "Get the systemEvents property: Gets ot sets the list of system events."
  returns:
    description: "the systemEvents value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.urlTemplate()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.urlTemplate()"
  name: "urlTemplate()"
  nameWithType: "EventHandler.urlTemplate()"
  summary: "Get the url<wbr>Template property: Gets or sets the Event<wbr>Handler URL template."
  syntax: "public String urlTemplate()"
  desc: "Get the urlTemplate property: Gets or sets the EventHandler URL template. You can use a predefined parameter \\{hub\\} and \\{event\\} inside the template, the value of the EventHandler URL is dynamically calculated when the client request comes in. For example, UrlTemplate can be \\`http://example.com/api/\\{hub\\}/\\{event\\}\\`. The host part can't contains parameters."
  returns:
    description: "the urlTemplate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.userEventPattern()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.userEventPattern()"
  name: "userEventPattern()"
  nameWithType: "EventHandler.userEventPattern()"
  summary: "Get the user<wbr>Event<wbr>Pattern property: Gets or sets the matching pattern for event names."
  syntax: "public String userEventPattern()"
  desc: "Get the userEventPattern property: Gets or sets the matching pattern for event names. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any event name 2. Combine multiple events with \",\", for example \"event1,event2\", it matches event \"event1\" and \"event2\" 3. The single event name, for example, \"event1\", it matches \"event1\"."
  returns:
    description: "the userEventPattern value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.validate()"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.validate()"
  name: "validate()"
  nameWithType: "EventHandler.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.withAuth(com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings)"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.withAuth(UpstreamAuthSettings auth)"
  name: "withAuth(UpstreamAuthSettings auth)"
  nameWithType: "EventHandler.withAuth(UpstreamAuthSettings auth)"
  summary: "Set the auth property: Gets or sets the auth settings for an event handler."
  parameters:
  - description: "the auth value to set."
    name: "auth"
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings?alt=com.azure.resourcemanager.webpubsub.models.UpstreamAuthSettings&text=UpstreamAuthSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHandler withAuth(UpstreamAuthSettings auth)"
  desc: "Set the auth property: Gets or sets the auth settings for an event handler. If not set, no auth is used."
  returns:
    description: "the EventHandler object itself."
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.EventHandler?alt=com.azure.resourcemanager.webpubsub.models.EventHandler&text=EventHandler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.withSystemEvents(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.withSystemEvents(List<String> systemEvents)"
  name: "withSystemEvents(List<String> systemEvents)"
  nameWithType: "EventHandler.withSystemEvents(List<String> systemEvents)"
  summary: "Set the system<wbr>Events property: Gets ot sets the list of system events."
  parameters:
  - description: "the systemEvents value to set."
    name: "systemEvents"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventHandler withSystemEvents(List<String> systemEvents)"
  desc: "Set the systemEvents property: Gets ot sets the list of system events."
  returns:
    description: "the EventHandler object itself."
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.EventHandler?alt=com.azure.resourcemanager.webpubsub.models.EventHandler&text=EventHandler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.withUrlTemplate(java.lang.String)"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.withUrlTemplate(String urlTemplate)"
  name: "withUrlTemplate(String urlTemplate)"
  nameWithType: "EventHandler.withUrlTemplate(String urlTemplate)"
  summary: "Set the url<wbr>Template property: Gets or sets the Event<wbr>Handler URL template."
  parameters:
  - description: "the urlTemplate value to set."
    name: "urlTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHandler withUrlTemplate(String urlTemplate)"
  desc: "Set the urlTemplate property: Gets or sets the EventHandler URL template. You can use a predefined parameter \\{hub\\} and \\{event\\} inside the template, the value of the EventHandler URL is dynamically calculated when the client request comes in. For example, UrlTemplate can be \\`http://example.com/api/\\{hub\\}/\\{event\\}\\`. The host part can't contains parameters."
  returns:
    description: "the EventHandler object itself."
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.EventHandler?alt=com.azure.resourcemanager.webpubsub.models.EventHandler&text=EventHandler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.webpubsub.models.EventHandler.withUserEventPattern(java.lang.String)"
  fullName: "com.azure.resourcemanager.webpubsub.models.EventHandler.withUserEventPattern(String userEventPattern)"
  name: "withUserEventPattern(String userEventPattern)"
  nameWithType: "EventHandler.withUserEventPattern(String userEventPattern)"
  summary: "Set the user<wbr>Event<wbr>Pattern property: Gets or sets the matching pattern for event names."
  parameters:
  - description: "the userEventPattern value to set."
    name: "userEventPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHandler withUserEventPattern(String userEventPattern)"
  desc: "Set the userEventPattern property: Gets or sets the matching pattern for event names. There are 3 kind of patterns supported: 1. \"\\*\", it to matches any event name 2. Combine multiple events with \",\", for example \"event1,event2\", it matches event \"event1\" and \"event2\" 3. The single event name, for example, \"event1\", it matches \"event1\"."
  returns:
    description: "the EventHandler object itself."
    type: "<xref href=\"com.azure.resourcemanager.webpubsub.models.EventHandler?alt=com.azure.resourcemanager.webpubsub.models.EventHandler&text=EventHandler\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of event handler."
metadata: {}
package: "com.azure.resourcemanager.webpubsub.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-webpubsub:1.0.0-beta.2
