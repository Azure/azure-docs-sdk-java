### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient"
name: "SparkConfigurationAsyncClient"
nameWithType: "SparkConfigurationAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SparkConfigurationAsyncClient**"
methods:
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  name: "createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  nameWithType: "SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkConfigurationResource> createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration)"
  desc: "Creates or updates a sparkconfiguration."
  returns:
    description: "spark Configuration resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  name: "createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  nameWithType: "SparkConfigurationAsyncClient.createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for update, for which it should\n match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SparkConfigurationResource> createOrUpdateSparkConfiguration(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  desc: "Creates or updates a sparkconfiguration."
  returns:
    description: "spark Configuration resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfigurationWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  name: "createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  nameWithType: "SparkConfigurationAsyncClient.createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  summary: "Creates or updates a sparkconfiguration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "SparkConfiguration resource definition."
    name: "sparkConfiguration"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for update, for which it should\n match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<SparkConfigurationResource>> createOrUpdateSparkConfigurationWithResponse(String sparkConfigurationName, SparkConfigurationResource sparkConfiguration, String ifMatch)"
  desc: "Creates or updates a sparkconfiguration."
  returns:
    description: "spark Configuration resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.deleteSparkConfiguration(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.deleteSparkConfiguration(String sparkConfigurationName)"
  name: "deleteSparkConfiguration(String sparkConfigurationName)"
  nameWithType: "SparkConfigurationAsyncClient.deleteSparkConfiguration(String sparkConfigurationName)"
  summary: "Deletes a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteSparkConfiguration(String sparkConfigurationName)"
  desc: "Deletes a sparkConfiguration."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.deleteSparkConfigurationWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.deleteSparkConfigurationWithResponse(String sparkConfigurationName)"
  name: "deleteSparkConfigurationWithResponse(String sparkConfigurationName)"
  nameWithType: "SparkConfigurationAsyncClient.deleteSparkConfigurationWithResponse(String sparkConfigurationName)"
  summary: "Deletes a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteSparkConfigurationWithResponse(String sparkConfigurationName)"
  desc: "Deletes a sparkConfiguration."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfiguration(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfiguration(String sparkConfigurationName)"
  name: "getSparkConfiguration(String sparkConfigurationName)"
  nameWithType: "SparkConfigurationAsyncClient.getSparkConfiguration(String sparkConfigurationName)"
  summary: "Gets a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SparkConfigurationResource> getSparkConfiguration(String sparkConfigurationName)"
  desc: "Gets a sparkConfiguration."
  returns:
    description: "a sparkConfiguration on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfiguration(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  name: "getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  nameWithType: "SparkConfigurationAsyncClient.getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  summary: "Gets a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches\n the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SparkConfigurationResource> getSparkConfiguration(String sparkConfigurationName, String ifNoneMatch)"
  desc: "Gets a sparkConfiguration."
  returns:
    description: "a sparkConfiguration on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfigurationWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch)"
  name: "getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch)"
  nameWithType: "SparkConfigurationAsyncClient.getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch)"
  summary: "Gets a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches\n the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<SparkConfigurationResource>> getSparkConfigurationWithResponse(String sparkConfigurationName, String ifNoneMatch)"
  desc: "Gets a sparkConfiguration."
  returns:
    description: "a sparkConfiguration along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfigurationsByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.getSparkConfigurationsByWorkspace()"
  name: "getSparkConfigurationsByWorkspace()"
  nameWithType: "SparkConfigurationAsyncClient.getSparkConfigurationsByWorkspace()"
  summary: "Lists sparkconfigurations."
  syntax: "public PagedFlux<SparkConfigurationResource> getSparkConfigurationsByWorkspace()"
  desc: "Lists sparkconfigurations."
  returns:
    description: "a list of sparkconfiguration resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource?alt=com.azure.analytics.synapse.artifacts.models.SparkConfigurationResource&text=SparkConfigurationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.renameSparkConfiguration(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  name: "renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  nameWithType: "SparkConfigurationAsyncClient.renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  summary: "Renames a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renameSparkConfiguration(String sparkConfigurationName, ArtifactRenameRequest request)"
  desc: "Renames a sparkConfiguration."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.renameSparkConfigurationWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkConfigurationAsyncClient.renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request)"
  name: "renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request)"
  nameWithType: "SparkConfigurationAsyncClient.renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request)"
  summary: "Renames a spark<wbr>Configuration."
  parameters:
  - description: "The spark Configuration name."
    name: "sparkConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renameSparkConfigurationWithResponse(String sparkConfigurationName, ArtifactRenameRequest request)"
  desc: "Renames a sparkConfiguration."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.14
