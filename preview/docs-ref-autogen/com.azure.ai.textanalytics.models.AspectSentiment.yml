### YamlMime:ManagedReference
items:
- uid: com.azure.ai.textanalytics.models.AspectSentiment
  id: AspectSentiment
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models
  children:
  - com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment(java.lang.String,com.azure.ai.textanalytics.models.TextSentiment,int,com.azure.ai.textanalytics.models.SentimentConfidenceScores)
  - com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores()
  - com.azure.ai.textanalytics.models.AspectSentiment.getOffset()
  - com.azure.ai.textanalytics.models.AspectSentiment.getSentiment()
  - com.azure.ai.textanalytics.models.AspectSentiment.getText()
  langs:
  - java
  name: AspectSentiment
  nameWithType: AspectSentiment
  fullName: com.azure.ai.textanalytics.models.AspectSentiment
  type: Class
  package: com.azure.ai.textanalytics.models
  summary: The <xref uid="com.azure.ai.textanalytics.models.AspectSentiment" data-throw-if-not-resolved="false">AspectSentiment</xref> model.
  syntax:
    content: public final class AspectSentiment
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment(java.lang.String,com.azure.ai.textanalytics.models.TextSentiment,int,com.azure.ai.textanalytics.models.SentimentConfidenceScores)
  id: AspectSentiment(java.lang.String,com.azure.ai.textanalytics.models.TextSentiment,int,com.azure.ai.textanalytics.models.SentimentConfidenceScores)
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models.AspectSentiment
  langs:
  - java
  name: AspectSentiment(String text, TextSentiment sentiment, int offset, SentimentConfidenceScores confidenceScores)
  nameWithType: AspectSentiment.AspectSentiment(String text, TextSentiment sentiment, int offset, SentimentConfidenceScores confidenceScores)
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment(String text, TextSentiment sentiment, int offset, SentimentConfidenceScores confidenceScores)
  overload: com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment*
  type: Constructor
  package: com.azure.ai.textanalytics.models
  summary: Create an <xref uid="com.azure.ai.textanalytics.models.AspectSentiment" data-throw-if-not-resolved="false">AspectSentiment</xref> model that describes aspect.
  syntax:
    content: public AspectSentiment(String text, TextSentiment sentiment, int offset, SentimentConfidenceScores confidenceScores)
    parameters:
    - id: text
      type: java.lang.String
      description: The aspect text property.
    - id: sentiment
      type: com.azure.ai.textanalytics.models.TextSentiment
      description: >-
        The text sentiment label: POSITIVE, NEGATIVE, MIXED. <xref uid="com.azure.ai.textanalytics.models.TextSentiment" data-throw-if-not-resolved="false">TextSentiment</xref> has
         NEUTRAL sentiment type additionally, but aspect sentiment can only be POSITIVE, NEGATIVE, or MIXED.
    - id: offset
      type: int
      description: The aspect text offset from the start of document.
    - id: confidenceScores
      type: com.azure.ai.textanalytics.models.SentimentConfidenceScores
      description: The <xref uid="com.azure.ai.textanalytics.models.SentimentConfidenceScores" data-throw-if-not-resolved="false">SentimentConfidenceScores</xref>.
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores()
  id: getConfidenceScores()
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models.AspectSentiment
  langs:
  - java
  name: getConfidenceScores()
  nameWithType: AspectSentiment.getConfidenceScores()
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores()
  overload: com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores*
  type: Method
  package: com.azure.ai.textanalytics.models
  summary: Get the confidence score of the sentiment label. All score values sum up to 1, the higher the score, the higher the confidence in the sentiment. AspectSentiment only has positive or negative confidence score value because there is no neutral sentiment label in the AspectSentiment.
  syntax:
    content: public SentimentConfidenceScores getConfidenceScores()
    return:
      type: com.azure.ai.textanalytics.models.SentimentConfidenceScores
      description: The <xref uid="com.azure.ai.textanalytics.models.SentimentConfidenceScores" data-throw-if-not-resolved="false">SentimentConfidenceScores</xref>.
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getOffset()
  id: getOffset()
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models.AspectSentiment
  langs:
  - java
  name: getOffset()
  nameWithType: AspectSentiment.getOffset()
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getOffset()
  overload: com.azure.ai.textanalytics.models.AspectSentiment.getOffset*
  type: Method
  package: com.azure.ai.textanalytics.models
  summary: Get the aspect text offset from the start of document.
  syntax:
    content: public int getOffset()
    return:
      type: int
      description: The aspect text offset from the start of document.
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getSentiment()
  id: getSentiment()
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models.AspectSentiment
  langs:
  - java
  name: getSentiment()
  nameWithType: AspectSentiment.getSentiment()
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getSentiment()
  overload: com.azure.ai.textanalytics.models.AspectSentiment.getSentiment*
  type: Method
  package: com.azure.ai.textanalytics.models
  summary: 'Get the aspect text sentiment label: POSITIVE, NEGATIVE, MIXED. <xref uid="com.azure.ai.textanalytics.models.TextSentiment" data-throw-if-not-resolved="false">TextSentiment</xref> has NEUTRAL sentiment type additionally, but aspect sentiment can only be POSITIVE, NEGATIVE, or MIXED.'
  syntax:
    content: public TextSentiment getSentiment()
    return:
      type: com.azure.ai.textanalytics.models.TextSentiment
      description: The sentiment value.
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getText()
  id: getText()
  artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.3
  parent: com.azure.ai.textanalytics.models.AspectSentiment
  langs:
  - java
  name: getText()
  nameWithType: AspectSentiment.getText()
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getText()
  overload: com.azure.ai.textanalytics.models.AspectSentiment.getText*
  type: Method
  package: com.azure.ai.textanalytics.models
  summary: Get the aspect text property.
  syntax:
    content: public String getText()
    return:
      type: java.lang.String
      description: The text value.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.ai.textanalytics.models.TextSentiment
  name: TextSentiment
  nameWithType: TextSentiment
  fullName: com.azure.ai.textanalytics.models.TextSentiment
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.ai.textanalytics.models.SentimentConfidenceScores
  name: SentimentConfidenceScores
  nameWithType: SentimentConfidenceScores
  fullName: com.azure.ai.textanalytics.models.SentimentConfidenceScores
- uid: com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment*
  name: AspectSentiment
  nameWithType: AspectSentiment.AspectSentiment
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.AspectSentiment
  package: com.azure.ai.textanalytics.models
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getText*
  name: getText
  nameWithType: AspectSentiment.getText
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getText
  package: com.azure.ai.textanalytics.models
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getSentiment*
  name: getSentiment
  nameWithType: AspectSentiment.getSentiment
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getSentiment
  package: com.azure.ai.textanalytics.models
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getOffset*
  name: getOffset
  nameWithType: AspectSentiment.getOffset
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getOffset
  package: com.azure.ai.textanalytics.models
- uid: com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores*
  name: getConfidenceScores
  nameWithType: AspectSentiment.getConfidenceScores
  fullName: com.azure.ai.textanalytics.models.AspectSentiment.getConfidenceScores
  package: com.azure.ai.textanalytics.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
