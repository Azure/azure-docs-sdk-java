### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  id: DictionaryDecompounderTokenFilter
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models
  children:
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter(java.lang.String,java.util.List<java.lang.String>)
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize()
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize()
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize()
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList()
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch()
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize(java.lang.Integer)
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize(java.lang.Integer)
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize(java.lang.Integer)
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch(java.lang.Boolean)
  - com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate()
  langs:
  - java
  name: DictionaryDecompounderTokenFilter
  nameWithType: DictionaryDecompounderTokenFilter
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  type: Class
  package: com.azure.search.documents.indexes.implementation.models
  summary: The DictionaryDecompounderTokenFilter model.
  syntax:
    content: public class DictionaryDecompounderTokenFilter extends TokenFilter
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.implementation.models.TokenFilter
  inheritedMembers:
  - com.azure.search.documents.indexes.implementation.models.TokenFilter.getName()
  - com.azure.search.documents.indexes.implementation.models.TokenFilter.validate()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter(java.lang.String,java.util.List<java.lang.String>)
  id: DictionaryDecompounderTokenFilter(java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: DictionaryDecompounderTokenFilter(String name, List<String> wordList)
  nameWithType: DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter(String name, List<String> wordList)
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter(String name, List<String> wordList)
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation.models
  summary: Creates an instance of DictionaryDecompounderTokenFilter class.
  syntax:
    content: public DictionaryDecompounderTokenFilter(String name, List<String> wordList)
    parameters:
    - id: name
      type: java.lang.String
    - id: wordList
      type: java.util.List<java.lang.String>
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize()
  id: getMaxSubwordSize()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: getMaxSubwordSize()
  nameWithType: DictionaryDecompounderTokenFilter.getMaxSubwordSize()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the maxSubwordSize property: The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300.'
  syntax:
    content: public Integer getMaxSubwordSize()
    return:
      type: java.lang.Integer
      description: the maxSubwordSize value.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize()
  id: getMinSubwordSize()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: getMinSubwordSize()
  nameWithType: DictionaryDecompounderTokenFilter.getMinSubwordSize()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the minSubwordSize property: The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300.'
  syntax:
    content: public Integer getMinSubwordSize()
    return:
      type: java.lang.Integer
      description: the minSubwordSize value.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize()
  id: getMinWordSize()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: getMinWordSize()
  nameWithType: DictionaryDecompounderTokenFilter.getMinWordSize()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the minWordSize property: The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300.'
  syntax:
    content: public Integer getMinWordSize()
    return:
      type: java.lang.Integer
      description: the minWordSize value.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList()
  id: getWordList()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: getWordList()
  nameWithType: DictionaryDecompounderTokenFilter.getWordList()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the wordList property: The list of words to match against.'
  syntax:
    content: public List<String> getWordList()
    return:
      type: java.util.List<java.lang.String>
      description: the wordList value.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch()
  id: isOnlyLongestMatch()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: isOnlyLongestMatch()
  nameWithType: DictionaryDecompounderTokenFilter.isOnlyLongestMatch()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the onlyLongestMatch property: A value indicating whether to add only the longest matching subword to the output. Default is false.'
  syntax:
    content: public Boolean isOnlyLongestMatch()
    return:
      type: java.lang.Boolean
      description: the onlyLongestMatch value.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize(java.lang.Integer)
  id: setMaxSubwordSize(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: setMaxSubwordSize(Integer maxSubwordSize)
  nameWithType: DictionaryDecompounderTokenFilter.setMaxSubwordSize(Integer maxSubwordSize)
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize(Integer maxSubwordSize)
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the maxSubwordSize property: The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300.'
  syntax:
    content: public DictionaryDecompounderTokenFilter setMaxSubwordSize(Integer maxSubwordSize)
    parameters:
    - id: maxSubwordSize
      type: java.lang.Integer
      description: the maxSubwordSize value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
      description: the DictionaryDecompounderTokenFilter object itself.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize(java.lang.Integer)
  id: setMinSubwordSize(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: setMinSubwordSize(Integer minSubwordSize)
  nameWithType: DictionaryDecompounderTokenFilter.setMinSubwordSize(Integer minSubwordSize)
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize(Integer minSubwordSize)
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the minSubwordSize property: The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300.'
  syntax:
    content: public DictionaryDecompounderTokenFilter setMinSubwordSize(Integer minSubwordSize)
    parameters:
    - id: minSubwordSize
      type: java.lang.Integer
      description: the minSubwordSize value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
      description: the DictionaryDecompounderTokenFilter object itself.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize(java.lang.Integer)
  id: setMinWordSize(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: setMinWordSize(Integer minWordSize)
  nameWithType: DictionaryDecompounderTokenFilter.setMinWordSize(Integer minWordSize)
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize(Integer minWordSize)
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the minWordSize property: The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300.'
  syntax:
    content: public DictionaryDecompounderTokenFilter setMinWordSize(Integer minWordSize)
    parameters:
    - id: minWordSize
      type: java.lang.Integer
      description: the minWordSize value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
      description: the DictionaryDecompounderTokenFilter object itself.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch(java.lang.Boolean)
  id: setOnlyLongestMatch(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: setOnlyLongestMatch(Boolean onlyLongestMatch)
  nameWithType: DictionaryDecompounderTokenFilter.setOnlyLongestMatch(Boolean onlyLongestMatch)
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch(Boolean onlyLongestMatch)
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the onlyLongestMatch property: A value indicating whether to add only the longest matching subword to the output. Default is false.'
  syntax:
    content: public DictionaryDecompounderTokenFilter setOnlyLongestMatch(Boolean onlyLongestMatch)
    parameters:
    - id: onlyLongestMatch
      type: java.lang.Boolean
      description: the onlyLongestMatch value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
      description: the DictionaryDecompounderTokenFilter object itself.
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate()
  id: validate()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter
  langs:
  - java
  name: validate()
  nameWithType: DictionaryDecompounderTokenFilter.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate()
  overload: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter*
  name: DictionaryDecompounderTokenFilter
  nameWithType: DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.DictionaryDecompounderTokenFilter
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList*
  name: getWordList
  nameWithType: DictionaryDecompounderTokenFilter.getWordList
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getWordList
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize*
  name: getMinWordSize
  nameWithType: DictionaryDecompounderTokenFilter.getMinWordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinWordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize*
  name: setMinWordSize
  nameWithType: DictionaryDecompounderTokenFilter.setMinWordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinWordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize*
  name: getMinSubwordSize
  nameWithType: DictionaryDecompounderTokenFilter.getMinSubwordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMinSubwordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize*
  name: setMinSubwordSize
  nameWithType: DictionaryDecompounderTokenFilter.setMinSubwordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMinSubwordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize*
  name: getMaxSubwordSize
  nameWithType: DictionaryDecompounderTokenFilter.getMaxSubwordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.getMaxSubwordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize*
  name: setMaxSubwordSize
  nameWithType: DictionaryDecompounderTokenFilter.setMaxSubwordSize
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setMaxSubwordSize
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch*
  name: isOnlyLongestMatch
  nameWithType: DictionaryDecompounderTokenFilter.isOnlyLongestMatch
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.isOnlyLongestMatch
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch*
  name: setOnlyLongestMatch
  nameWithType: DictionaryDecompounderTokenFilter.setOnlyLongestMatch
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.setOnlyLongestMatch
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate*
  name: validate
  nameWithType: DictionaryDecompounderTokenFilter.validate
  fullName: com.azure.search.documents.indexes.implementation.models.DictionaryDecompounderTokenFilter.validate
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.implementation.models.TokenFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.search.documents.indexes.implementation.models.TokenFilter.getName()
  name: TokenFilter.getName()
  nameWithType: TokenFilter.getName()
  fullName: com.azure.search.documents.indexes.implementation.models.TokenFilter.getName()
- uid: com.azure.search.documents.indexes.implementation.models.TokenFilter.validate()
  name: TokenFilter.validate()
  nameWithType: TokenFilter.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.TokenFilter.validate()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
