### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet<C>"
name: "TreeRangeSet<C>"
nameWithType: "TreeRangeSet<C>"
summary: "An implementation of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RangeSet\"></xref> backed by a <xref uid=\"java.util.TreeMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TreeMap\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.addAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.clear()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.contains(C)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.encloses(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.enclosesAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.rangeContaining(C)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.remove(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.removeAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TreeRangeSet<C> extends AbstractRangeSet<C> implements Serializable"
methods:
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.<C>create()"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.<C>create(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.<C>create(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.asDescendingSetOfRanges()"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.asRanges()"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.complement()"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.encloses(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.rangeContaining(C)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.remove(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.span()"
- "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.subRangeSet(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
type: "class"
typeParameters:
- name: "C"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
