### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.PathsImpl.readWithResponseAsync*"
fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.readWithResponseAsync"
name: "readWithResponseAsync"
nameWithType: "PathsImpl.readWithResponseAsync"
members:
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.readWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Boolean,com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.readWithResponseAsync(String requestId, Integer timeout, String range, Boolean xMsRangeGetContentMd5, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  name: "readWithResponseAsync(String requestId, Integer timeout, String range, Boolean xMsRangeGetContentMd5, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  nameWithType: "PathsImpl.readWithResponseAsync(String requestId, Integer timeout, String range, Boolean xMsRangeGetContentMd5, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  summary: "Read the contents of a file. For read operations, range requests are supported. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  parameters:
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n     analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a\n     href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting\n     Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The HTTP Range request header specifies one or more byte ranges of the resource to be retrieved."
    name: "range"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. When this header is set to \"true\" and specified together with the Range\n     header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB in\n     size. If this header is specified without the Range header, the service returns status code 400 (Bad\n     Request). If this header is set to true when the range exceeds 4 MB in size, the service returns status code\n     400 (Bad Request)."
    name: "xMsRangeGetContentMd5"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter group."
    name: "leaseAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions&text=LeaseAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter group."
    name: "modifiedAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions&text=ModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<StreamResponse> readWithResponseAsync(String requestId, Integer timeout, String range, Boolean xMsRangeGetContentMd5, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation"
artifact: com.azure:azure-storage-file-datalake:12.5.0-beta.2
