### YamlMime:JavaType
uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile"
fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile"
name: "ControlPlaneProfile"
nameWithType: "ControlPlaneProfile"
summary: "Control<wbr>Plane<wbr>Profile - The control plane properties for the provisioned cluster."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile&text=AgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.availabilityZones()?alt=com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.availabilityZones&text=availabilityZones\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.nodeImageVersion()?alt=com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.nodeImageVersion&text=nodeImageVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.osSku()?alt=com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.osSku&text=osSku\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.osType()?alt=com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile.osType&text=osType\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile&text=NamedAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.count()?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.count&text=count\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.name()?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.name&text=name\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.validate()?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.vmSize()?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.vmSize&text=vmSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withAvailabilityZones(java.util.List<java.lang.String>)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withAvailabilityZones&text=withAvailabilityZones\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withCount(java.lang.Integer)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withCount&text=withCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withName(java.lang.String)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withName&text=withName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withNodeImageVersion(java.lang.String)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withNodeImageVersion&text=withNodeImageVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsSku(com.azure.resourcemanager.hybridcontainerservice.models.Ossku)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsSku&text=withOsSku\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsType(com.azure.resourcemanager.hybridcontainerservice.models.OsType)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsType&text=withOsType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withVmSize(java.lang.String)?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withVmSize&text=withVmSize\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ControlPlaneProfile**</br> extends <xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile&text=NamedAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.ControlPlaneProfile()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.ControlPlaneProfile()"
  name: "ControlPlaneProfile()"
  nameWithType: "ControlPlaneProfile.ControlPlaneProfile()"
  summary: "Creates an instance of Control<wbr>Plane<wbr>Profile class."
  syntax: "public ControlPlaneProfile()"
  desc: "Creates an instance of ControlPlaneProfile class."
methods:
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.controlPlaneEndpoint()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.controlPlaneEndpoint()"
  name: "controlPlaneEndpoint()"
  nameWithType: "ControlPlaneProfile.controlPlaneEndpoint()"
  summary: "Get the control<wbr>Plane<wbr>Endpoint property: API server endpoint for the control plane."
  syntax: "public ControlPlaneEndpointProfileControlPlaneEndpoint controlPlaneEndpoint()"
  desc: "Get the controlPlaneEndpoint property: API server endpoint for the control plane."
  returns:
    description: "the controlPlaneEndpoint value."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneEndpointProfileControlPlaneEndpoint?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneEndpointProfileControlPlaneEndpoint&text=ControlPlaneEndpointProfileControlPlaneEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.linuxProfile()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.linuxProfile()"
  name: "linuxProfile()"
  nameWithType: "ControlPlaneProfile.linuxProfile()"
  summary: "Get the linux<wbr>Profile property: Profile for Linux VMs in the container service cluster."
  syntax: "public LinuxProfileProperties linuxProfile()"
  desc: "Get the linuxProfile property: Profile for Linux VMs in the container service cluster."
  returns:
    description: "the linuxProfile value."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties?alt=com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties&text=LinuxProfileProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.validate()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.validate()"
  name: "validate()"
  nameWithType: "ControlPlaneProfile.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withAvailabilityZones(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withAvailabilityZones(List<String> availabilityZones)"
  name: "withAvailabilityZones(List<String> availabilityZones)"
  nameWithType: "ControlPlaneProfile.withAvailabilityZones(List<String> availabilityZones)"
  summary: "Set the availability<wbr>Zones property: Availability<wbr>Zones - The list of Availability zones to use for nodes."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withAvailabilityZones(java.util.List<java.lang.String>)"
  parameters:
  - name: "availabilityZones"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ControlPlaneProfile withAvailabilityZones(List<String> availabilityZones)"
  desc: "Set the availabilityZones property: AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withControlPlaneEndpoint(com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneEndpointProfileControlPlaneEndpoint)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withControlPlaneEndpoint(ControlPlaneEndpointProfileControlPlaneEndpoint controlPlaneEndpoint)"
  name: "withControlPlaneEndpoint(ControlPlaneEndpointProfileControlPlaneEndpoint controlPlaneEndpoint)"
  nameWithType: "ControlPlaneProfile.withControlPlaneEndpoint(ControlPlaneEndpointProfileControlPlaneEndpoint controlPlaneEndpoint)"
  summary: "Set the control<wbr>Plane<wbr>Endpoint property: API server endpoint for the control plane."
  parameters:
  - description: "the controlPlaneEndpoint value to set."
    name: "controlPlaneEndpoint"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneEndpointProfileControlPlaneEndpoint?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneEndpointProfileControlPlaneEndpoint&text=ControlPlaneEndpointProfileControlPlaneEndpoint\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ControlPlaneProfile withControlPlaneEndpoint(ControlPlaneEndpointProfileControlPlaneEndpoint controlPlaneEndpoint)"
  desc: "Set the controlPlaneEndpoint property: API server endpoint for the control plane."
  returns:
    description: "the ControlPlaneProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withCount(Integer count)"
  name: "withCount(Integer count)"
  nameWithType: "ControlPlaneProfile.withCount(Integer count)"
  summary: "Set the count property: Count - Number of agents to host docker containers."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withCount(java.lang.Integer)"
  parameters:
  - name: "count"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public ControlPlaneProfile withCount(Integer count)"
  desc: "Set the count property: Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withLinuxProfile(com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withLinuxProfile(LinuxProfileProperties linuxProfile)"
  name: "withLinuxProfile(LinuxProfileProperties linuxProfile)"
  nameWithType: "ControlPlaneProfile.withLinuxProfile(LinuxProfileProperties linuxProfile)"
  summary: "Set the linux<wbr>Profile property: Profile for Linux VMs in the container service cluster."
  parameters:
  - description: "the linuxProfile value to set."
    name: "linuxProfile"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties?alt=com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties&text=LinuxProfileProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ControlPlaneProfile withLinuxProfile(LinuxProfileProperties linuxProfile)"
  desc: "Set the linuxProfile property: Profile for Linux VMs in the container service cluster."
  returns:
    description: "the ControlPlaneProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ControlPlaneProfile.withName(String name)"
  summary: "Set the name property: Unique name of the agent pool profile in the context of the subscription and resource group."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ControlPlaneProfile withName(String name)"
  desc: "Set the name property: Unique name of the agent pool profile in the context of the subscription and resource group."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withNodeImageVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withNodeImageVersion(String nodeImageVersion)"
  name: "withNodeImageVersion(String nodeImageVersion)"
  nameWithType: "ControlPlaneProfile.withNodeImageVersion(String nodeImageVersion)"
  summary: "Set the node<wbr>Image<wbr>Version property: The version of node image."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withNodeImageVersion(java.lang.String)"
  parameters:
  - name: "nodeImageVersion"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ControlPlaneProfile withNodeImageVersion(String nodeImageVersion)"
  desc: "Set the nodeImageVersion property: The version of node image."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withOsSku(com.azure.resourcemanager.hybridcontainerservice.models.Ossku)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withOsSku(Ossku osSku)"
  name: "withOsSku(Ossku osSku)"
  nameWithType: "ControlPlaneProfile.withOsSku(Ossku osSku)"
  summary: "Set the os<wbr>Sku property: Specifies the OS SKU used by the agent pool."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsSku(com.azure.resourcemanager.hybridcontainerservice.models.Ossku)"
  parameters:
  - name: "osSku"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.Ossku?alt=com.azure.resourcemanager.hybridcontainerservice.models.Ossku&text=Ossku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ControlPlaneProfile withOsSku(Ossku osSku)"
  desc: "Set the osSku property: Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withOsType(com.azure.resourcemanager.hybridcontainerservice.models.OsType)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withOsType(OsType osType)"
  name: "withOsType(OsType osType)"
  nameWithType: "ControlPlaneProfile.withOsType(OsType osType)"
  summary: "Set the os<wbr>Type property: The particular Kubernetes<wbr>Version's Image's OS Type (Linux, Windows)."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withOsType(com.azure.resourcemanager.hybridcontainerservice.models.OsType)"
  parameters:
  - name: "osType"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.OsType?alt=com.azure.resourcemanager.hybridcontainerservice.models.OsType&text=OsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ControlPlaneProfile withOsType(OsType osType)"
  desc: "Set the osType property: The particular KubernetesVersion's Image's OS Type (Linux, Windows)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withVmSize(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "ControlPlaneProfile.withVmSize(String vmSize)"
  summary: "Set the vm<wbr>Size property: Vm<wbr>Size - The size of the agent pool VMs."
  overridden: "com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile.withVmSize(java.lang.String)"
  parameters:
  - name: "vmSize"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ControlPlaneProfile withVmSize(String vmSize)"
  desc: "Set the vmSize property: VmSize - The size of the agent pool VMs."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile&text=ControlPlaneProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "ControlPlaneProfile - The control plane properties for the provisioned cluster."
metadata: {}
package: "com.azure.resourcemanager.hybridcontainerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridcontainerservice:1.0.0-beta.3
