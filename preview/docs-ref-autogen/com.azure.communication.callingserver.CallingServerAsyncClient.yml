### YamlMime:JavaType
uid: "com.azure.communication.callingserver.CallingServerAsyncClient"
fullName: "com.azure.communication.callingserver.CallingServerAsyncClient"
name: "CallingServerAsyncClient"
nameWithType: "CallingServerAsyncClient"
summary: "Asynchronous client that supports calling server operations.\n\n**Instantiating a asynchronous CallingServer client**\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n \n CallingServerAsyncClient callingServerAsyncClient = new CallingServerClientBuilder()\n     .pipeline(pipeline)\n     .connectionString(connectionString)\n     .buildAsyncClient();\n```\n\nView <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CallingServerAsyncClient"
methods:
- "com.azure.communication.callingserver.CallingServerAsyncClient.createCallConnection(com.azure.communication.common.CommunicationIdentifier,java.util.List<com.azure.communication.common.CommunicationIdentifier>,com.azure.communication.callingserver.models.CreateCallOptions)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.createCallConnectionWithResponse(com.azure.communication.common.CommunicationIdentifier,java.util.List<com.azure.communication.common.CommunicationIdentifier>,com.azure.communication.callingserver.models.CreateCallOptions)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.downloadStream(java.lang.String)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.downloadStream(java.lang.String,com.azure.core.http.HttpRange)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.downloadStreamWithResponse(java.lang.String,com.azure.core.http.HttpRange)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.downloadTo(java.lang.String,java.nio.file.Path,com.azure.communication.callingserver.models.ParallelDownloadOptions,boolean)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.downloadToWithResponse(java.lang.String,java.nio.file.Path,com.azure.communication.callingserver.models.ParallelDownloadOptions,boolean)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.getCallConnection(java.lang.String)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.initializeServerCall(java.lang.String)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.joinCall(java.lang.String,com.azure.communication.common.CommunicationIdentifier,com.azure.communication.callingserver.models.JoinCallOptions)"
- "com.azure.communication.callingserver.CallingServerAsyncClient.joinCallWithResponse(java.lang.String,com.azure.communication.common.CommunicationIdentifier,com.azure.communication.callingserver.models.JoinCallOptions)"
type: "class"
metadata: {}
package: "com.azure.communication.callingserver"
artifact: com.azure:azure-communication-callingserver:1.0.0-beta.4
