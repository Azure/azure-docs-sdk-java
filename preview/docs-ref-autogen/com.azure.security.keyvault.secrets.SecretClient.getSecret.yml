### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretClient.getSecret*"
fullName: "com.azure.security.keyvault.secrets.SecretClient.getSecret"
name: "getSecret"
nameWithType: "SecretClient.getSecret"
members:
- uid: "com.azure.security.keyvault.secrets.SecretClient.getSecret(java.lang.String)"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.getSecret(String name)"
  name: "getSecret(String name)"
  nameWithType: "SecretClient.getSecret(String name)"
  summary: "Gets the latest version of the specified secret from the key vault. This operation requires the `secrets/get` permission.\n\n**Code sample**\n\nGets the latest version of the secret in the key vault. Prints out the details of the returned secret.\n\n```java\nKeyVaultSecret secretWithoutVersion = secretClient.getSecret(\"secretName\", secretVersion);\n System.out.printf(\"Secret is returned with name %s and value %s%n\",\n     secretWithoutVersion.getName(), secretWithoutVersion.getValue());\n```"
  parameters:
  - description: "The name of the secret."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultSecret getSecret(String name)"
  returns:
    description: "The requested <xref uid=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultSecret\"></xref>."
    type: "<xref href=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.secrets.SecretClient.getSecret(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.getSecret(String name, String version)"
  name: "getSecret(String name, String version)"
  nameWithType: "SecretClient.getSecret(String name, String version)"
  summary: "Gets the specified secret with specified version from the key vault. This operation requires the `secrets/get` permission.\n\n**Code sample**\n\nGets a specific version of the secret in the key vault. Prints out the details of the returned secret.\n\n```java\nString secretVersion = \"6A385B124DEF4096AF1361A85B16C204\";\n KeyVaultSecret secretWithVersion = secretClient.getSecret(\"secretName\", secretVersion);\n System.out.printf(\"Secret is returned with name %s and value %s%n\",\n     secretWithVersion.getName(), secretWithVersion.getValue());\n```"
  parameters:
  - description: "The name of the secret, cannot be null."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the secret to retrieve. If this is an empty string or null, this call is\n     equivalent to calling <xref uid=\"com.azure.security.keyvault.secrets.SecretClient.getSecret(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getSecret(String)\"></xref>, with the latest version being retrieved."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultSecret getSecret(String name, String version)"
  returns:
    description: "The requested <xref uid=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secret\"></xref>."
    type: "<xref href=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
