### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep*"
fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep"
name: "withMaxUnusedVersionsToKeep"
nameWithType: "ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep"
members:
- uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  name: "withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  nameWithType: "ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  summary: "Set the maxUnusedVersionsToKeep property: Number of unused versions per application type to keep."
  parameters:
  - description: "the maxUnusedVersionsToKeep value to set."
    name: "maxUnusedVersionsToKeep"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationTypeVersionsCleanupPolicy withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  desc: "Set the maxUnusedVersionsToKeep property: Number of unused versions per application type to keep."
  returns:
    description: "the ApplicationTypeVersionsCleanupPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy?alt=com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy&text=ApplicationTypeVersionsCleanupPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
