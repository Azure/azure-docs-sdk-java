### YamlMime:JavaType
uid: "com.azure.core.annotation.Head"
fullName: "com.azure.core.annotation.Head"
name: "Head"
nameWithType: "Head"
summary: "HTTP HEAD method annotation describing the parameterized relative path to a REST endpoint."
syntax: "public interface Head implements Annotation"
methods:
- uid: "com.azure.core.annotation.Head.value()"
  fullName: "com.azure.core.annotation.Head.value()"
  name: "value()"
  nameWithType: "Head.value()"
  summary: "Get the relative path of the annotated method's HEAD URL."
  modifiers:
  - "abstract"
  syntax: "public abstract String value()"
  desc: "Get the relative path of the annotated method's HEAD URL."
  returns:
    description: "The relative path of the annotated method's HEAD URL."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "HTTP HEAD method annotation describing the parameterized relative path to a REST endpoint.\n\nThe required value can be either a relative path or an absolute path. When it's an absolute path, it must start with a protocol or a parameterized segment (otherwise the parse cannot tell if it's absolute or relative)\n\n**Example 1: Relative path segments**\n\n```java\n@Head(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft\n .Compute/virtualMachines/{vmName}\")\n  boolean checkNameAvailability(@PathParam(\"resourceGroupName\") String rgName, @PathParam(\"vmName\") String\n  vmName, @PathParam(\"subscriptionId\") String subscriptionId);\n```\n\n**Example 2: Absolute path segment**\n\n```java\n@Head(https://management.azure.com/{storageAccountId})\n  boolean checkNameAvailability(@PathParam(\"nextLink\") String storageAccountId);\n```"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.annotation"
artifact: com.azure:azure-core:1.22.0-beta.1
