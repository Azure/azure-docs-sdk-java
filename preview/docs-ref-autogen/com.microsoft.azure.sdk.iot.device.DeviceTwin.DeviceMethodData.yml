### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData"
fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData"
name: "DeviceMethodData"
nameWithType: "DeviceMethodData"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DeviceMethodData"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.DeviceMethodData(int,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.DeviceMethodData(int status, String responseMessage)"
  name: "DeviceMethodData(int status, String responseMessage)"
  nameWithType: "DeviceMethodData.DeviceMethodData(int status, String responseMessage)"
  parameters:
  - name: "status"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "responseMessage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DeviceMethodData(int status, String responseMessage)"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.getResponseMessage()"
  fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.getResponseMessage()"
  name: "getResponseMessage()"
  nameWithType: "DeviceMethodData.getResponseMessage()"
  syntax: "public String getResponseMessage()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.getStatus()"
  name: "getStatus()"
  nameWithType: "DeviceMethodData.getStatus()"
  syntax: "public int getStatus()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.setResponseMessage(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.setResponseMessage(String responseMessage)"
  name: "setResponseMessage(String responseMessage)"
  nameWithType: "DeviceMethodData.setResponseMessage(String responseMessage)"
  parameters:
  - name: "responseMessage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setResponseMessage(String responseMessage)"
- uid: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.setStatus(int)"
  fullName: "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodData.setStatus(int status)"
  name: "setStatus(int status)"
  nameWithType: "DeviceMethodData.setStatus(int status)"
  parameters:
  - name: "status"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStatus(int status)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.DeviceTwin"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
