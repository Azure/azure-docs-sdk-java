### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner"
name: "TopicInner"
nameWithType: "TopicInner"
summary: "Event<wbr>Grid Topic."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TopicInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.TopicInner()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.TopicInner()"
  name: "TopicInner()"
  nameWithType: "TopicInner.TopicInner()"
  syntax: "public TopicInner()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.dataResidencyBoundary()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.dataResidencyBoundary()"
  name: "dataResidencyBoundary()"
  nameWithType: "TopicInner.dataResidencyBoundary()"
  summary: "Get the data<wbr>Residency<wbr>Boundary property: Data Residency Boundary of the resource."
  syntax: "public DataResidencyBoundary dataResidencyBoundary()"
  desc: "Get the dataResidencyBoundary property: Data Residency Boundary of the resource."
  returns:
    description: "the dataResidencyBoundary value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary?alt=com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary&text=DataResidencyBoundary\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "TopicInner.disableLocalAuth()"
  summary: "Get the disable<wbr>Local<wbr>Auth property: This boolean is used to enable or disable local auth."
  syntax: "public Boolean disableLocalAuth()"
  desc: "Get the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic."
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.endpoint()"
  name: "endpoint()"
  nameWithType: "TopicInner.endpoint()"
  summary: "Get the endpoint property: Endpoint for the topic."
  syntax: "public String endpoint()"
  desc: "Get the endpoint property: Endpoint for the topic."
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.identity()"
  name: "identity()"
  nameWithType: "TopicInner.identity()"
  summary: "Get the identity property: Identity information for the resource."
  syntax: "public IdentityInfo identity()"
  desc: "Get the identity property: Identity information for the resource."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "TopicInner.inboundIpRules()"
  summary: "Get the inbound<wbr>IpRules property: This can be used to restrict traffic from specific IPs instead of all IPs."
  syntax: "public List<InboundIpRule> inboundIpRules()"
  desc: "Get the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inputSchema()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inputSchema()"
  name: "inputSchema()"
  nameWithType: "TopicInner.inputSchema()"
  summary: "Get the input<wbr>Schema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  syntax: "public InputSchema inputSchema()"
  desc: "Get the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  returns:
    description: "the inputSchema value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inputSchemaMapping()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.inputSchemaMapping()"
  name: "inputSchemaMapping()"
  nameWithType: "TopicInner.inputSchemaMapping()"
  summary: "Get the input<wbr>Schema<wbr>Mapping property: This enables publishing using custom event schemas."
  syntax: "public InputSchemaMapping inputSchemaMapping()"
  desc: "Get the inputSchemaMapping property: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
  returns:
    description: "the inputSchemaMapping value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.metricResourceId()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.metricResourceId()"
  name: "metricResourceId()"
  nameWithType: "TopicInner.metricResourceId()"
  summary: "Get the metric<wbr>Resource<wbr>Id property: Metric resource id for the topic."
  syntax: "public String metricResourceId()"
  desc: "Get the metricResourceId property: Metric resource id for the topic."
  returns:
    description: "the metricResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "TopicInner.privateEndpointConnections()"
  summary: "Get the private<wbr>Endpoint<wbr>Connections property: The private<wbr>Endpoint<wbr>Connections property."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  desc: "Get the privateEndpointConnections property: The privateEndpointConnections property."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "TopicInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the topic."
  syntax: "public TopicProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the topic."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.TopicProvisioningState&text=TopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "TopicInner.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: This determines if traffic is allowed over public network."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.systemData()"
  name: "systemData()"
  nameWithType: "TopicInner.systemData()"
  summary: "Get the system<wbr>Data property: The system metadata relating to Topic resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: The system metadata relating to Topic resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.validate()"
  name: "validate()"
  nameWithType: "TopicInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withDataResidencyBoundary(com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  name: "withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  nameWithType: "TopicInner.withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  summary: "Set the data<wbr>Residency<wbr>Boundary property: Data Residency Boundary of the resource."
  parameters:
  - description: "the dataResidencyBoundary value to set."
    name: "dataResidencyBoundary"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary?alt=com.azure.resourcemanager.eventgrid.models.DataResidencyBoundary&text=DataResidencyBoundary\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withDataResidencyBoundary(DataResidencyBoundary dataResidencyBoundary)"
  desc: "Set the dataResidencyBoundary property: Data Residency Boundary of the resource."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withDisableLocalAuth(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withDisableLocalAuth(Boolean disableLocalAuth)"
  name: "withDisableLocalAuth(Boolean disableLocalAuth)"
  nameWithType: "TopicInner.withDisableLocalAuth(Boolean disableLocalAuth)"
  summary: "Set the disable<wbr>Local<wbr>Auth property: This boolean is used to enable or disable local auth."
  parameters:
  - description: "the disableLocalAuth value to set."
    name: "disableLocalAuth"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withDisableLocalAuth(Boolean disableLocalAuth)"
  desc: "Set the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withIdentity(com.azure.resourcemanager.eventgrid.models.IdentityInfo)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withIdentity(IdentityInfo identity)"
  name: "withIdentity(IdentityInfo identity)"
  nameWithType: "TopicInner.withIdentity(IdentityInfo identity)"
  summary: "Set the identity property: Identity information for the resource."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withIdentity(IdentityInfo identity)"
  desc: "Set the identity property: Identity information for the resource."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInboundIpRules(java.util.List<com.azure.resourcemanager.eventgrid.models.InboundIpRule>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  name: "withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  nameWithType: "TopicInner.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  summary: "Set the inbound<wbr>IpRules property: This can be used to restrict traffic from specific IPs instead of all IPs."
  parameters:
  - description: "the inboundIpRules value to set."
    name: "inboundIpRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TopicInner withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  desc: "Set the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInputSchema(com.azure.resourcemanager.eventgrid.models.InputSchema)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInputSchema(InputSchema inputSchema)"
  name: "withInputSchema(InputSchema inputSchema)"
  nameWithType: "TopicInner.withInputSchema(InputSchema inputSchema)"
  summary: "Set the input<wbr>Schema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  parameters:
  - description: "the inputSchema value to set."
    name: "inputSchema"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withInputSchema(InputSchema inputSchema)"
  desc: "Set the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInputSchemaMapping(com.azure.resourcemanager.eventgrid.models.InputSchemaMapping)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  name: "withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  nameWithType: "TopicInner.withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  summary: "Set the input<wbr>Schema<wbr>Mapping property: This enables publishing using custom event schemas."
  parameters:
  - description: "the inputSchemaMapping value to set."
    name: "inputSchemaMapping"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withInputSchemaMapping(InputSchemaMapping inputSchemaMapping)"
  desc: "Set the inputSchemaMapping property: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "TopicInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withPublicNetworkAccess(com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "TopicInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: This determines if traffic is allowed over public network."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
  returns:
    description: "the TopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.TopicInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "TopicInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TopicInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "EventGrid Topic."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
