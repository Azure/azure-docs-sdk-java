### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient"
fullName: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient"
name: "SchemaRegistryAsyncClient"
nameWithType: "SchemaRegistryAsyncClient"
summary: "HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaRegistryAsyncClient"
methods:
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.getSchema(java.lang.String)"
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.getSchemaId(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)"
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.getSchemaIdWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)"
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.getSchemaWithResponse(java.lang.String)"
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)"
- "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)"
type: "class"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
