### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.implementation.DatabasesClientImpl.createImportOperationAsync*"
fullName: "com.azure.resourcemanager.sql.implementation.DatabasesClientImpl.createImportOperationAsync"
name: "createImportOperationAsync"
nameWithType: "DatabasesClientImpl.createImportOperationAsync"
members:
- uid: "com.azure.resourcemanager.sql.implementation.DatabasesClientImpl.createImportOperationAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ExtensionName,com.azure.resourcemanager.sql.models.ImportExtensionRequest)"
  fullName: "com.azure.resourcemanager.sql.implementation.DatabasesClientImpl.createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)"
  name: "createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)"
  nameWithType: "DatabasesClientImpl.createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)"
  summary: "Creates an import operation that imports a bacpac into an existing database. The existing database must be empty."
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the database to import into."
    name: "databaseName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the operation to perform."
    name: "extensionName"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ExtensionName?alt=com.azure.resourcemanager.sql.models.ExtensionName&text=ExtensionName\" data-throw-if-not-resolved=\"False\" />"
  - description: "Import database parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ImportExtensionRequest?alt=com.azure.resourcemanager.sql.models.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ImportExportResponseInner> createImportOperationAsync(String resourceGroupName, String serverName, String databaseName, ExtensionName extensionName, ImportExtensionRequest parameters)"
  returns:
    description: "response for Import/Export Get operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner?alt=com.azure.resourcemanager.sql.fluent.models.ImportExportResponseInner&text=ImportExportResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
