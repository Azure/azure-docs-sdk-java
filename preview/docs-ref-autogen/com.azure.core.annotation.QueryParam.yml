### YamlMime:ManagedReference
items:
- uid: com.azure.core.annotation.QueryParam
  id: QueryParam
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation
  children:
  - com.azure.core.annotation.QueryParam.encoded()
  - com.azure.core.annotation.QueryParam.value()
  langs:
  - java
  name: QueryParam
  nameWithType: QueryParam
  fullName: com.azure.core.annotation.QueryParam
  type: Interface
  package: com.azure.core.annotation
  summary: >-
    Annotation for query parameters to be appended to a REST API Request URI.


    **Example 1:**


    ```java

    @GET("subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources")
     Single> listByResourceGroup(@PathParam("resourceGroupName") String
     resourceGroupName, @PathParam("subscriptionId") String subscriptionId, @QueryParam("$filter") String
     filter, @QueryParam("$expand") String expand, @QueryParam("$top") Integer top, @QueryParam("api-version") String
     apiVersion);
    ```


    The value of parameters filter, expand, top, apiVersion will be encoded and encoded value will be used to replace the corresponding path segment \{$filter\}, \{$expand\}, \{$top\}, \{api-version\} respectively.


    **Example 2:** (A use case where PathParam.encoded=true will be used)


    It is possible that, a path segment variable can be used to represent sub path:


    ```java

    @GET("http://wq.com/foo/{subpath}/values")
      String getValues(@PathParam("subpath") String param, @QueryParam("connectionString") String connectionString);
    ```


    In this case, if consumer pass "a=b" as the value for query then the resolved url looks like: "`http://wq.com/foo/paramblah/values?connectionString=a%3Db`"


    For such cases the encoded attribute can be used:


    ```java

    @GET("http://wq.com/foo/{subpath}/values")
      String getValues(@PathParam("subpath") String param, @QueryParam("query", encoded = true) String query);
    ```


    In this case, if consumer pass "a=b" as the value for param1 then the resolved url looks as expected: "`http://wq.com/foo/paramblah/values?connectionString=a=b`"
  syntax:
    content: public interface QueryParam implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.azure.core.annotation.QueryParam.encoded()
  id: encoded()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation.QueryParam
  langs:
  - java
  name: encoded()
  nameWithType: QueryParam.encoded()
  fullName: com.azure.core.annotation.QueryParam.encoded()
  overload: com.azure.core.annotation.QueryParam.encoded*
  type: Method
  package: com.azure.core.annotation
  summary: A value true for this argument indicates that value of <xref uid="com.azure.core.annotation.QueryParam.value()" data-throw-if-not-resolved="false">QueryParam#value()</xref> is already encoded hence engine should not encode it, by default value will be encoded.
  syntax:
    content: public abstract boolean encoded()
    return:
      type: boolean
      description: Whether or not this query parameter is already encoded.
- uid: com.azure.core.annotation.QueryParam.value()
  id: value()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation.QueryParam
  langs:
  - java
  name: value()
  nameWithType: QueryParam.value()
  fullName: com.azure.core.annotation.QueryParam.value()
  overload: com.azure.core.annotation.QueryParam.value*
  type: Method
  package: com.azure.core.annotation
  summary: The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation.
  syntax:
    content: public abstract String value()
    return:
      type: java.lang.String
      description: >-
        The name of the variable in the endpoint uri template which will be replaced with the
             value of the parameter annotated with this annotation.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.annotation.QueryParam.value*
  name: value
  nameWithType: QueryParam.value
  fullName: com.azure.core.annotation.QueryParam.value
  package: com.azure.core.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.annotation.QueryParam.encoded*
  name: encoded
  nameWithType: QueryParam.encoded
  fullName: com.azure.core.annotation.QueryParam.encoded
  package: com.azure.core.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
