### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query
  id: Query
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.Query(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize()
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.next()
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.next(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize(int)
  langs:
  - java
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query
  type: Class
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    The query iterator.


    The `Query` iterator is the result of the query factory for

        | ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | **IndividualEnrollment:** | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createIndividualEnrollmentQuery(QuerySpecification, int)</xref>                                                    |
        | **EnrollmentGroup:**      | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupQuery(QuerySpecification, int)</xref>                                                              |
        | **RegistrationStatus:**   | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupRegistrationStatusQuery(QuerySpecification, String, int)</xref> |

    On all cases, the **QuerySpecification** contains a SQL query that must follow the [Query Language][] for the Device Provisioning Service.


    Optionally, an `Integer` with the **pageSize**, can determine the maximum number of the items in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> returned by the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">#next()</xref>. It must be any positive integer, and if it contains 0, the Device Provisioning Service will ignore it and use a standard page size.


    You can use this Object as a standard Iterator, just using the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">#hasNext()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">#next()</xref> in a `while` loop, up to the point where the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">#hasNext()</xref> return `false`. But, keep in mind that the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> can contain a empty list, even if the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()" data-throw-if-not-resolved="false">#hasNext()</xref> returned `true`. For example, image that you have 10 IndividualEnrollment in the Device Provisioning Service and you created new query with the `pageSize` equals 5. The first `hasNext()` will return `true`, and the first `next()` will return a `QueryResult` with 5 items. After that you call the `hasNext`, which will returns `true`. Now, before you get the next page, somebody delete all the IndividualEnrollment, What happened, when you call the `next()`, it will return a valid `QueryResult`, but the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getItems()" data-throw-if-not-resolved="false">QueryResult#getItems()</xref> will return a empty list.


    You can also store a query context (QuerySpecification + ContinuationToken) and restart it in the future, from the point where you stopped.


    Besides the Items, the queryResult contains the continuationToken, the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getContinuationToken()" data-throw-if-not-resolved="false">QueryResult#getContinuationToken()</xref> shall return it. In any point in the future, you may recreate the query using the same query factories that you used for the first time, and call <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next(java.lang.String)" data-throw-if-not-resolved="false">#next(String)</xref> providing the stored continuationToken to get the next page.



    [Query Language]: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language
  syntax:
    content: public class Query implements Iterator
  inheritance:
  - java.lang.Object
  implements:
  - java.util.Iterator
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.Query(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  id: Query(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: Query(ContractApiHttp contractApiHttp, String targetPath, QuerySpecification querySpecification, int pageSize)
  nameWithType: Query.Query(ContractApiHttp contractApiHttp, String targetPath, QuerySpecification querySpecification, int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.Query(ContractApiHttp contractApiHttp, String targetPath, QuerySpecification querySpecification, int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.Query*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    INTERNAL CONSTRUCTOR


    Use one of the factories to create a new query.

        | ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | **IndividualEnrollment:** | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createIndividualEnrollmentQuery(QuerySpecification, int)</xref>                                                    |
        | **EnrollmentGroup:**      | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupQuery(QuerySpecification, int)</xref>                                                              |
        | **RegistrationStatus:**   | <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createEnrollmentGroupRegistrationStatusQuery(QuerySpecification, String, int)</xref> |
  syntax:
    content: protected Query(ContractApiHttp contractApiHttp, String targetPath, QuerySpecification querySpecification, int pageSize)
    parameters:
    - id: contractApiHttp
      type: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp" data-throw-if-not-resolved="false">ContractApiHttp</xref> that send request messages to the Device Provisioning Service. It cannot be <code>null</code>.
    - id: targetPath
      type: java.lang.String
      description: the <code>String</code> with the path that will be part of the URL in the rest API. It cannot be <code>null</code>.
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: pageSize
      type: int
      description: the <code>int</code> with the maximum number of items per iteration. It cannot be negative.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize()
  id: getPageSize()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: getPageSize()
  nameWithType: Query.getPageSize()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Getter for the pageSize.


    PageSize is the maximum number of items in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> per iteration.
  syntax:
    content: public int getPageSize()
    return:
      type: int
      description: An <code>int</code> with the current pageSize.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()
  id: hasNext()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: hasNext()
  nameWithType: Query.hasNext()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Getter for hasNext.


    It will return `true` if the query is not finished in the Device Provisioning Service, and another iteration with <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">#next()</xref> may return more items. Call <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">#next()</xref> after receive a `hasNext` `true` will result in a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> that can or cannot contains elements. And call <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query.next()" data-throw-if-not-resolved="false">#next()</xref> after receive a `hasNext` `false` will result in a exception.
  syntax:
    content: public boolean hasNext()
    return:
      type: boolean
      description: The<code>boolean</code> <code>true</code> if query is not finalize in the Service.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.next()
  id: next()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: next()
  nameWithType: Query.next()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.next()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.next*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: Return the next page of result for the query.
  syntax:
    content: public QueryResult next()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
      description: A <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> with the next page of items for the query.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.next(java.lang.String)
  id: next(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: next(String continuationToken)
  nameWithType: Query.next(String continuationToken)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.next(String continuationToken)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.next*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: Return the next page of result for the query using a new continuationToken.
  syntax:
    content: public QueryResult next(String continuationToken)
    parameters:
    - id: continuationToken
      type: java.lang.String
      description: the <code>String</code> with the previous continuationToken. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
      description: A <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> with the next page of items for the query.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize(int)
  id: setPageSize(int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.Query
  langs:
  - java
  name: setPageSize(int pageSize)
  nameWithType: Query.setPageSize(int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize(int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Setter for the pageSize.


    PageSize is the maximum number of items in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult" data-throw-if-not-resolved="false">QueryResult</xref> per iteration.
  syntax:
    content: public void setPageSize(int pageSize)
    parameters:
    - id: pageSize
      type: int
      description: >-
        an <code>int</code> with the new pageSize. It cannot be negative. The Device Service Client
                         will use its own default pageSize if it is <b>0</b>.
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
  name: ContractApiHttp
  nameWithType: ContractApiHttp
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  name: QuerySpecification
  nameWithType: QuerySpecification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.Query*
  name: Query
  nameWithType: Query.Query
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.Query
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext*
  name: hasNext
  nameWithType: Query.hasNext
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
  name: QueryResult
  nameWithType: QueryResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.next*
  name: next
  nameWithType: Query.next
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.next
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize*
  name: getPageSize
  nameWithType: Query.getPageSize
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize*
  name: setPageSize
  nameWithType: Query.setPageSize
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
