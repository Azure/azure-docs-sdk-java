### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  id: EventHubConsumerOptions
  parent: com.azure.messaging.eventhubs.models
  children:
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier(String)
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long)
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount(int)
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry(Retry)
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()
  - com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler(Scheduler)
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: EventHubConsumerOptions
  nameWithType: EventHubConsumerOptions
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 26
  package: com.azure.messaging.eventhubs.models
  summary: "<p>The baseline set of options that can be specified when creating a <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> to configure its behavior.</p>\r\n<p></p>"
  syntax: &o1
    content: public class EventHubConsumerOptions
  inheritance:
  - java.lang.Object
  - Cloneable
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()
  id: clone()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: clone()
  nameWithType: EventHubConsumerOptions.clone()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 213
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a shallow clone of this instance.</p>\r\n<p>The object is cloned, but this instance's fields are not cloned. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Duration</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">String</xref> are immutable objects and are not an issue. The implementation of <xref uid=\"\" data-throw-if-not-resolved=\"false\">Retry</xref> could be mutable. In addition, the <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()\" data-throw-if-not-resolved=\"false\">scheduler()</xref> set is not cloned.</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions clone()
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>A shallow clone of this object. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()
  id: EventHubConsumerOptions()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: EventHubConsumerOptions()
  nameWithType: EventHubConsumerOptions.EventHubConsumerOptions()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 54
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a new instance with the default prefetch amount. </p>"
  syntax:
    content: public EventHubConsumerOptions()
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier()
  id: identifier()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: identifier()
  nameWithType: EventHubConsumerOptions.identifier()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 158
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the optional text-based identifier label to assign to an event receiver. The identifier is used for informational purposes only. If not specified, the receiver will have no assigned identifier label.</p>\r\n<p></p>"
  syntax:
    content: public String identifier()
    return:
      type: "26831127"
      description: <p>The identifier of the receiver. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier(String)
  id: identifier(String)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: identifier(String identifier)
  nameWithType: EventHubConsumerOptions.identifier(String identifier)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier(String identifier)
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 66
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Sets an optional text-based identifier label to assign to an event consumer.</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions identifier(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
      description: <p>The receiver name. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref> object. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if<code>identifierÂ 

          </code> is greater than <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH" data-throw-if-not-resolved="false">MAXIMUM_IDENTIFIER_LENGTH</xref>. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  id: MAXIMUM_IDENTIFIER_LENGTH
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: MAXIMUM_IDENTIFIER_LENGTH
  nameWithType: EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 32
  package: com.azure.messaging.eventhubs.models
  summary: "<p>The maximum length, in characters, for the identifier assigned to an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref>. </p>"
  syntax: &o2
    content: public static final int MAXIMUM_IDENTIFIER_LENGTH= 64
    return:
      type: cd225469
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  id: MAXIMUM_PREFETCH_COUNT
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: MAXIMUM_PREFETCH_COUNT
  nameWithType: EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 40
  package: com.azure.messaging.eventhubs.models
  summary: "<p>The maximum value allowed for the prefetch count of the consumer. </p>"
  syntax: &o5
    content: public static final int MAXIMUM_PREFETCH_COUNT= 8000
    return:
      type: cd225469
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  id: MINIMUM_PREFETCH_COUNT
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: MINIMUM_PREFETCH_COUNT
  nameWithType: EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 36
  package: com.azure.messaging.eventhubs.models
  summary: "<p>The minimum value allowed for the prefetch count of the consumer. </p>"
  syntax: &o4
    content: public static final int MINIMUM_PREFETCH_COUNT= 1
    return:
      type: cd225469
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()
  id: ownerLevel()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: ownerLevel()
  nameWithType: EventHubConsumerOptions.ownerLevel()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 179
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the owner level for this consumer. If <xref uid=\"\" data-throw-if-not-resolved=\"false\">Optional#isPresent()</xref> is<code>falseÂ \r\n    </code> , then this is not an exclusive consumer. Otherwise, it is an exclusive consumer, and there can only be one active consumer for each partition and consumer group combination.</p>\r\n<p></p>"
  syntax: &o3
    content: public Long ownerLevel()
    return:
      type: 34f09483
      description: <p>An optional owner level for this consumer. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long)
  id: ownerLevel(Long)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: ownerLevel(Long priority)
  nameWithType: EventHubConsumerOptions.ownerLevel(Long priority)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long priority)
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 95
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Sets the<code>ownerLevelÂ \r\n    </code> value on this consumer. When populated, the level indicates that a consumer is intended to be the only reader of events for the requested partition and an associated consumer group. To do so, this consumer will attempt to assert ownership over the partition; in the case where more than one exclusive consumer attempts to assert ownership for the same partition/consumer group pair, the one having a larger <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> value will \"win\".</p>\r\n<p>When an exclusive consumer is used, those consumers which are not exclusive or which have a lower priority will either not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation. </p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions ownerLevel(Long priority)
    parameters:
    - id: priority
      type: 34f09483
      description: >-
        <p>The priority associated with an exclusive consumer; for a non-exclusive consumer, this value should be<code>nullÂ 

            </code> . </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref> object. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if<code>priorityÂ 

          </code> is not<code>nullÂ 

          </code> and is less than 0. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount()
  id: prefetchCount()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: prefetchCount()
  nameWithType: EventHubConsumerOptions.prefetchCount()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 200
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the count used by the consumer to control the number of events this receiver will actively receive and queue locally without regard to whether a receive operation is currently active.</p>\r\n<p></p>"
  syntax:
    content: public int prefetchCount()
    return:
      type: f75371fa
      description: <p>The prefetch count receiver will receive and queue locally regardless of whether or not a receive operation is active. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount(int)
  id: prefetchCount(int)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: prefetchCount(int prefetchCount)
  nameWithType: EventHubConsumerOptions.prefetchCount(int prefetchCount)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount(int prefetchCount)
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 125
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Sets the count used by the receiver to control the number of events this receiver will actively receive and queue locally without regard to whether a receive operation is currently active.</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions prefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: f75371fa
      description: <p>The amount of events to queue locally. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref> object. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if<code>prefetchCountÂ 

          </code> is less than the <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT" data-throw-if-not-resolved="false">MINIMUM_PREFETCH_COUNT</xref> or greater than <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT" data-throw-if-not-resolved="false">MAXIMUM_PREFETCH_COUNT</xref>. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry()
  id: retry()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: retry()
  nameWithType: EventHubConsumerOptions.retry()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 168
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the retry policy when receiving events. If not specified, the retry policy configured on the associated <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is used.</p>\r\n<p></p>"
  syntax:
    content: public Retry retry()
    return:
      type: com.azure.core.amqp.Retry
      description: <p>The retry policy when receiving events. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry(Retry)
  id: retry(Retry)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: retry(Retry retry)
  nameWithType: EventHubConsumerOptions.retry(Retry retry)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry(Retry retry)
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 111
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Sets the retry policy used to govern retry attempts for receiving events. If not specified, the retry policy configured on the associated <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is used.</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions retry(Retry retry)
    parameters:
    - id: retry
      type: com.azure.core.amqp.Retry
      description: <p>The retry policy to use when receiving events. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()
  id: scheduler()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: scheduler()
  nameWithType: EventHubConsumerOptions.scheduler()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 189
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the scheduler for reading events from Event Hubs. If not specified, the scheduler configured with the associated <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is used.</p>\r\n<p></p>"
  syntax: &o6
    content: public Scheduler scheduler()
    return:
      type: 79c1aaff
      description: <p>The scheduler for reading events. </p>
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler(Scheduler)
  id: scheduler(Scheduler)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  langs:
  - java
  name: scheduler(Scheduler scheduler)
  nameWithType: EventHubConsumerOptions.scheduler(Scheduler scheduler)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler(Scheduler scheduler)
  overload: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventHubConsumerOptions.java
    startLine: 147
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Sets the scheduler for receiving events from Event Hubs. If not specified, the scheduler configured with the associated <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is used.</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions scheduler(Scheduler scheduler)
    parameters:
    - id: scheduler
      type: 79c1aaff
      description: <p>The scheduler for receiving events. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated EventHubClientBuilder object. </p>
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions*
  name: EventHubConsumerOptions
  nameWithType: EventHubConsumerOptions.EventHubConsumerOptions
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions
  package: com.azure.messaging.eventhubs.models
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier*
  name: identifier
  nameWithType: EventHubConsumerOptions.identifier
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.identifier
  package: com.azure.messaging.eventhubs.models
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel*
  name: ownerLevel
  nameWithType: EventHubConsumerOptions.ownerLevel
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry*
  name: retry
  nameWithType: EventHubConsumerOptions.retry
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.retry
  package: com.azure.messaging.eventhubs.models
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount*
  name: prefetchCount
  nameWithType: EventHubConsumerOptions.prefetchCount
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.prefetchCount
  package: com.azure.messaging.eventhubs.models
- uid: 79c1aaff
  spec.java:
  - name: Scheduler
    fullName: Scheduler
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler*
  name: scheduler
  nameWithType: EventHubConsumerOptions.scheduler
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone*
  name: clone
  nameWithType: EventHubConsumerOptions.clone
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.core.util.logging.ClientLogger
  parent: com.azure.core.util.logging
  href: com.azure.core.util.logging.ClientLogger.yml
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{}Â \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
- uid: com.azure.core.amqp.Retry
  parent: com.azure.core.amqp
  href: com.azure.core.amqp.Retry.yml
  name: Retry
  nameWithType: Retry
  fullName: com.azure.core.amqp.Retry
  type: Class
  summary: "<p>An abstract representation of a policy to govern retrying of messaging operations. </p>"
  syntax:
    content: public class Retry
- uid: com.azure.messaging.eventhubs.EventHubConsumer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubConsumer.yml
  name: EventHubConsumer
  nameWithType: EventHubConsumer
  fullName: com.azure.messaging.eventhubs.EventHubConsumer
  type: Class
  summary: "<p>A consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition in the context of a specific consumer group.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> is created where <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> has a value, then Event Hubs service will guarantee only one active consumer exists per partitionId and consumer group combination. This consumer is sometimes referred to as an \"Epoch Consumer.\" </p>\r\n    </li>\r\n    <li>\r\n      <p>Multiple consumers per partitionId and consumer group combination can be created by not setting <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> when creating consumers. This non-exclusive consumer is sometimes referred to as a \"Non-Epoch Consumer.\" </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Consuming events from Event Hub</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receive}</p>\r\n<p>\r\n  <b>Rate limiting consumption of events from Event Hub</b>\r\n</p>\r\n<p>For event consumers that need to limit the number of events they receive at a given time, they can use <xref uid=\"\" data-throw-if-not-resolved=\"false\">BaseSubscriber#request(long)</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receiveBackpressure}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumer
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  parent: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: EventHubConsumerOptions
  nameWithType: EventHubConsumerOptions
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  type: Class
  summary: "<p>The baseline set of options that can be specified when creating a <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> to configure its behavior.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: MAXIMUM_IDENTIFIER_LENGTH
  nameWithType: EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH
  type: Field
  summary: "<p>The maximum length, in characters, for the identifier assigned to an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref>. </p>"
  syntax: *o2
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: ownerLevel()
  nameWithType: EventHubConsumerOptions.ownerLevel()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()
  type: Method
  summary: "<p>Gets the owner level for this consumer. If <xref uid=\"\" data-throw-if-not-resolved=\"false\">Optional#isPresent()</xref> is<code>falseÂ \r\n    </code> , then this is not an exclusive consumer. Otherwise, it is an exclusive consumer, and there can only be one active consumer for each partition and consumer group combination.</p>\r\n<p></p>"
  syntax: *o3
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient
  type: Class
  summary: "<p>The main point of interaction with Azure Event Hubs, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub.</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hubs namespace connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionString::string-string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub instance connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionstring::string}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubAsyncClient
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: MINIMUM_PREFETCH_COUNT
  nameWithType: EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT
  type: Field
  summary: "<p>The minimum value allowed for the prefetch count of the consumer. </p>"
  syntax: *o4
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: MAXIMUM_PREFETCH_COUNT
  nameWithType: EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT
  type: Field
  summary: "<p>The maximum value allowed for the prefetch count of the consumer. </p>"
  syntax: *o5
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: scheduler()
  nameWithType: EventHubConsumerOptions.scheduler()
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.scheduler()
  type: Method
  summary: "<p>Gets the scheduler for reading events from Event Hubs. If not specified, the scheduler configured with the associated <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is used.</p>\r\n<p></p>"
  syntax: *o6
