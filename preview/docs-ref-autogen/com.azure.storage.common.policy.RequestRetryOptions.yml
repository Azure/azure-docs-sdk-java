### YamlMime:JavaType
uid: "com.azure.storage.common.policy.RequestRetryOptions"
fullName: "com.azure.storage.common.policy.RequestRetryOptions"
name: "RequestRetryOptions"
nameWithType: "RequestRetryOptions"
summary: "Configuration options for <xref uid=\"com.azure.storage.common.policy.RequestRetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryPolicy\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RequestRetryOptions"
constructors:
- uid: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions()"
  name: "RequestRetryOptions()"
  nameWithType: "RequestRetryOptions.RequestRetryOptions()"
  summary: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
  syntax: "public RequestRetryOptions()"
  desc: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
- uid: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions(com.azure.storage.common.policy.RetryPolicyType,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.String)"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Integer tryTimeoutInSeconds, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)"
  name: "RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Integer tryTimeoutInSeconds, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)"
  nameWithType: "RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Integer tryTimeoutInSeconds, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)"
  summary: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
  parameters:
  - description: "Optional. A <xref uid=\"com.azure.storage.common.policy.RetryPolicyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicyType\"></xref> specifying the type of retry pattern to use, default\n value is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.EXPONENTIAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EXPONENTIAL\"></xref>."
    name: "retryPolicyType"
    type: "<xref href=\"com.azure.storage.common.policy.RetryPolicyType?alt=com.azure.storage.common.policy.RetryPolicyType&text=RetryPolicyType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Maximum number of attempts an operation will be retried, default is <code>4</code>."
    name: "maxTries"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified the maximum time allowed before a request is cancelled and\n assumed failed, default is <xref uid=\"java.lang.Integer.MAX_VALUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#MAX_VALUE\"></xref> s.\n\n <p>This value should be based on the bandwidth available to the host machine and proximity to the Storage\n service, a good starting point may be 60 seconds per MB of anticipated payload size.</p>"
    name: "tryTimeoutInSeconds"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specifies the amount of delay to use before retrying an operation, default value\n is <code>4ms</code> when <code>retryPolicyType</code> is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.EXPONENTIAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EXPONENTIAL\"></xref> and <code>30ms</code>\n when <code>retryPolicyType</code> is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.FIXED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FIXED\"></xref>."
    name: "retryDelayInMs"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specifies the maximum delay allowed before retrying an operation, default\n value is <code>120ms</code>."
    name: "maxRetryDelayInMs"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified a secondary Storage account to retry requests against, default is none.\n\n <p>Before setting this understand the issues around reading stale and potentially-inconsistent data, view these\n <a href=https://docs.microsoft.com/azure/storage/common/storage-designing-ha-apps-with-ragrs>Azure Docs</a>\n for more information.</p>"
    name: "secondaryHost"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Integer tryTimeoutInSeconds, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)"
  desc: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
- uid: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions(com.azure.storage.common.policy.RetryPolicyType,java.lang.Integer,java.time.Duration,java.time.Duration,java.time.Duration,java.lang.String)"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Duration tryTimeout, Duration retryDelay, Duration maxRetryDelay, String secondaryHost)"
  name: "RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Duration tryTimeout, Duration retryDelay, Duration maxRetryDelay, String secondaryHost)"
  nameWithType: "RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Duration tryTimeout, Duration retryDelay, Duration maxRetryDelay, String secondaryHost)"
  summary: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
  parameters:
  - description: "Optional. A <xref uid=\"com.azure.storage.common.policy.RetryPolicyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicyType\"></xref> specifying the type of retry pattern to use, default\n value is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.EXPONENTIAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EXPONENTIAL\"></xref>."
    name: "retryPolicyType"
    type: "<xref href=\"com.azure.storage.common.policy.RetryPolicyType?alt=com.azure.storage.common.policy.RetryPolicyType&text=RetryPolicyType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Maximum number of attempts an operation will be retried, default is <code>4</code>."
    name: "maxTries"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified the maximum time allowed before a request is cancelled and\n assumed failed, default is <xref uid=\"java.lang.Integer.MAX_VALUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#MAX_VALUE\"></xref>.\n\n <p>This value should be based on the bandwidth available to the host machine and proximity to the Storage\n service, a good starting point may be 60 seconds per MB of anticipated payload size.</p>"
    name: "tryTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specifies the amount of delay to use before retrying an operation, default value\n is <code>4ms</code> when <code>retryPolicyType</code> is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.EXPONENTIAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EXPONENTIAL\"></xref> and <code>30ms</code>\n when <code>retryPolicyType</code> is <xref uid=\"com.azure.storage.common.policy.RetryPolicyType.FIXED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FIXED\"></xref>."
    name: "retryDelay"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specifies the maximum delay allowed before retrying an operation, default\n value is <code>120ms</code>."
    name: "maxRetryDelay"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified a secondary Storage account to retry requests against, default is none.\n\n <p>Before setting this understand the issues around reading stale and potentially-inconsistent data, view these\n <a href=https://docs.microsoft.com/azure/storage/common/storage-designing-ha-apps-with-ragrs>Azure Docs</a>\n for more information.</p>"
    name: "secondaryHost"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestRetryOptions(RetryPolicyType retryPolicyType, Integer maxTries, Duration tryTimeout, Duration retryDelay, Duration maxRetryDelay, String secondaryHost)"
  desc: "Configures how the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> should retry requests."
methods:
- uid: "com.azure.storage.common.policy.RequestRetryOptions.fromRetryOptions(com.azure.core.http.policy.RetryOptions,java.time.Duration,java.lang.String)"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.fromRetryOptions(RetryOptions retryOptions, Duration tryTimeout, String secondaryHost)"
  name: "fromRetryOptions(RetryOptions retryOptions, Duration tryTimeout, String secondaryHost)"
  nameWithType: "RequestRetryOptions.fromRetryOptions(RetryOptions retryOptions, Duration tryTimeout, String secondaryHost)"
  summary: "Creates new <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions\"></xref> from <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> and let specify storage specific parameters."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref>."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified the maximum time allowed before a request is cancelled and\n assumed failed, default is <xref uid=\"java.lang.Integer.MAX_VALUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#MAX_VALUE\"></xref>."
    name: "tryTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Specified a secondary Storage account to retry requests against, default is none."
    name: "secondaryHost"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RequestRetryOptions fromRetryOptions(RetryOptions retryOptions, Duration tryTimeout, String secondaryHost)"
  desc: "Creates new <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions\"></xref> from <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> and let specify storage specific parameters."
  returns:
    description: "The <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions\"></xref>"
    type: "<xref href=\"com.azure.storage.common.policy.RequestRetryOptions?alt=com.azure.storage.common.policy.RequestRetryOptions&text=RequestRetryOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getMaxRetryDelay()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getMaxRetryDelay()"
  name: "getMaxRetryDelay()"
  nameWithType: "RequestRetryOptions.getMaxRetryDelay()"
  syntax: "public Duration getMaxRetryDelay()"
  returns:
    description: "the maximum delay allowed between each retry."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getMaxRetryDelayInMs()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getMaxRetryDelayInMs()"
  name: "getMaxRetryDelayInMs()"
  nameWithType: "RequestRetryOptions.getMaxRetryDelayInMs()"
  deprecatedTag: "Please use <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions.getTryTimeoutDuration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions#getTryTimeoutDuration()\"></xref>"
  syntax: "@Deprecated\npublic long getMaxRetryDelayInMs()"
  hasDeprecatedTag: true
  returns:
    description: "the maximum delay in milliseconds allowed between each retry."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getMaxTries()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getMaxTries()"
  name: "getMaxTries()"
  nameWithType: "RequestRetryOptions.getMaxTries()"
  syntax: "public int getMaxTries()"
  returns:
    description: "the maximum number of retries that will be attempted."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getRetryDelay()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getRetryDelay()"
  name: "getRetryDelay()"
  nameWithType: "RequestRetryOptions.getRetryDelay()"
  syntax: "public Duration getRetryDelay()"
  returns:
    description: "the delay between each retry attempt."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getRetryDelayInMs()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getRetryDelayInMs()"
  name: "getRetryDelayInMs()"
  nameWithType: "RequestRetryOptions.getRetryDelayInMs()"
  deprecatedTag: "Please use <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions.getTryTimeoutDuration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions#getTryTimeoutDuration()\"></xref>"
  syntax: "@Deprecated\npublic long getRetryDelayInMs()"
  hasDeprecatedTag: true
  returns:
    description: "the delay in milliseconds between each retry attempt."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getSecondaryHost()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getSecondaryHost()"
  name: "getSecondaryHost()"
  nameWithType: "RequestRetryOptions.getSecondaryHost()"
  syntax: "public String getSecondaryHost()"
  returns:
    description: "the URI of the secondary host where retries are attempted. If this is null then there is no secondary\n host and all retries are attempted against the original host."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getTryTimeout()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getTryTimeout()"
  name: "getTryTimeout()"
  nameWithType: "RequestRetryOptions.getTryTimeout()"
  deprecatedTag: "Please use <xref uid=\"com.azure.storage.common.policy.RequestRetryOptions.getTryTimeoutDuration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions#getTryTimeoutDuration()\"></xref>"
  syntax: "@Deprecated\npublic int getTryTimeout()"
  hasDeprecatedTag: true
  returns:
    description: "the maximum time, in seconds, allowed for a request until it is considered timed out."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.policy.RequestRetryOptions.getTryTimeoutDuration()"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions.getTryTimeoutDuration()"
  name: "getTryTimeoutDuration()"
  nameWithType: "RequestRetryOptions.getTryTimeoutDuration()"
  syntax: "public Duration getTryTimeoutDuration()"
  returns:
    description: "the maximum time, in seconds, allowed for a request until it is considered timed out."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Configuration options for <xref uid=\"com.azure.storage.common.policy.RequestRetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryPolicy\"></xref>."
metadata: {}
package: "com.azure.storage.common.policy"
artifact: com.azure:azure-storage-common:12.17.0-beta.1
