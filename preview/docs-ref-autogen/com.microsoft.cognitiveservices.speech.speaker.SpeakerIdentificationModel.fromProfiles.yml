### YamlMime:JavaMember
uid: "com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel.fromProfiles*"
fullName: "com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel.fromProfiles"
name: "fromProfiles"
nameWithType: "SpeakerIdentificationModel.fromProfiles"
members:
- uid: "com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel.fromProfiles(java.util.List<com.microsoft.cognitiveservices.speech.speaker.VoiceProfile>)"
  fullName: "com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel.fromProfiles(List<VoiceProfile> profiles)"
  name: "fromProfiles(List<VoiceProfile> profiles)"
  nameWithType: "SpeakerIdentificationModel.fromProfiles(List<VoiceProfile> profiles)"
  summary: "Creates a speaker identification model from the voice profiles."
  parameters:
  - description: "A collection of voice profiles."
    name: "profiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static SpeakerIdentificationModel fromProfiles(List<VoiceProfile> profiles)"
  returns:
    description: "The speaker identification model being created."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel?alt=com.microsoft.cognitiveservices.speech.speaker.SpeakerIdentificationModel&text=SpeakerIdentificationModel\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.cognitiveservices.speech.speaker"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.23.0-alpha.0.29223413
