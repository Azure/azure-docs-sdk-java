### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value
  id: Value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JacksonInject.Value.EMPTY
  - com.fasterxml.jackson.annotation.JacksonInject.Value.Value(java.lang.Object,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JacksonInject.Value._id
  - com.fasterxml.jackson.annotation.JacksonInject.Value._useInput
  - com.fasterxml.jackson.annotation.JacksonInject.Value.construct(java.lang.Object,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.empty()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.equals(java.lang.Object)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.forId(java.lang.Object)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.from(com.fasterxml.jackson.annotation.JacksonInject)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.getId()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.hasId()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.toString()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor()
  - com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput(boolean)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.withId(java.lang.Object)
  - com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput(java.lang.Boolean)
  langs:
  - java
  name: JacksonInject.Value
  nameWithType: JacksonInject.Value
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value
  type: Class
  package: com.fasterxml.jackson.annotation
  summary: Helper class used to contain information from a single <xref uid="com.fasterxml.jackson.annotation.JacksonInject" data-throw-if-not-resolved="false">JacksonInject</xref> annotation, as well as to provide possible overrides from non-annotation sources.
  syntax:
    content: public static class JacksonInject.Value implements JacksonAnnotationValue<JacksonInject>, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JacksonInject>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.EMPTY
  id: EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: EMPTY
  nameWithType: JacksonInject.Value.EMPTY
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.EMPTY
  type: Field
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected static final JacksonInject.Value EMPTY
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.Value(java.lang.Object,java.lang.Boolean)
  id: Value(java.lang.Object,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: Value(Object id, Boolean useInput)
  nameWithType: JacksonInject.Value.Value(Object id, Boolean useInput)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.Value(Object id, Boolean useInput)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected Value(Object id, Boolean useInput)
    parameters:
    - id: id
      type: java.lang.Object
    - id: useInput
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value._id
  id: _id
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: _id
  nameWithType: JacksonInject.Value._id
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value._id
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Id to use to access injected value; if \`null\`, "default" name, derived from accessor will be used.
  syntax:
    content: protected final Object _id
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value._useInput
  id: _useInput
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: _useInput
  nameWithType: JacksonInject.Value._useInput
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value._useInput
  type: Field
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected final Boolean _useInput
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.construct(java.lang.Object,java.lang.Boolean)
  id: construct(java.lang.Object,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: construct(Object id, Boolean useInput)
  nameWithType: JacksonInject.Value.construct(Object id, Boolean useInput)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.construct(Object id, Boolean useInput)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.construct*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JacksonInject.Value construct(Object id, Boolean useInput)
    parameters:
    - id: id
      type: java.lang.Object
    - id: useInput
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.empty()
  id: empty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: empty()
  nameWithType: JacksonInject.Value.empty()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.empty()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.empty*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JacksonInject.Value empty()
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: equals(Object o)
  nameWithType: JacksonInject.Value.equals(Object o)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.equals(Object o)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.equals*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.forId(java.lang.Object)
  id: forId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: forId(Object id)
  nameWithType: JacksonInject.Value.forId(Object id)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.forId(Object id)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.forId*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JacksonInject.Value forId(Object id)
    parameters:
    - id: id
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.from(com.fasterxml.jackson.annotation.JacksonInject)
  id: from(com.fasterxml.jackson.annotation.JacksonInject)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: from(JacksonInject src)
  nameWithType: JacksonInject.Value.from(JacksonInject src)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.from(JacksonInject src)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.from*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JacksonInject.Value from(JacksonInject src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.annotation.JacksonInject
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.getId()
  id: getId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: getId()
  nameWithType: JacksonInject.Value.getId()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.getId()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.getId*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Object getId()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput()
  id: getUseInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: getUseInput()
  nameWithType: JacksonInject.Value.getUseInput()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Boolean getUseInput()
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.hasId()
  id: hasId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: hasId()
  nameWithType: JacksonInject.Value.hasId()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.hasId()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.hasId*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean hasId()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: hashCode()
  nameWithType: JacksonInject.Value.hashCode()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: toString()
  nameWithType: JacksonInject.Value.toString()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.toString()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.toString*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor()
  id: valueFor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: valueFor()
  nameWithType: JacksonInject.Value.valueFor()
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor()
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Introspection method that may be used to find actual annotation that may be used as the source for value instance.
  syntax:
    content: public Class<JacksonInject> valueFor()
    return:
      type: java.lang.Class<com.fasterxml.jackson.annotation.JacksonInject>
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput(boolean)
  id: willUseInput(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: willUseInput(boolean defaultSetting)
  nameWithType: JacksonInject.Value.willUseInput(boolean defaultSetting)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput(boolean defaultSetting)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean willUseInput(boolean defaultSetting)
    parameters:
    - id: defaultSetting
      type: boolean
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.withId(java.lang.Object)
  id: withId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: withId(Object id)
  nameWithType: JacksonInject.Value.withId(Object id)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.withId(Object id)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.withId*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JacksonInject.Value withId(Object id)
    parameters:
    - id: id
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput(java.lang.Boolean)
  id: withUseInput(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JacksonInject.Value
  langs:
  - java
  name: withUseInput(Boolean useInput)
  nameWithType: JacksonInject.Value.withUseInput(Boolean useInput)
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput(Boolean useInput)
  overload: com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JacksonInject.Value withUseInput(Boolean useInput)
    parameters:
    - id: useInput
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.annotation.JacksonInject.Value
references:
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.Value*
  name: Value
  nameWithType: JacksonInject.Value.Value
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.Value
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Class<com.fasterxml.jackson.annotation.JacksonInject>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.annotation.JacksonInject
    name: JacksonInject
    fullName: com.fasterxml.jackson.annotation.JacksonInject
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor*
  name: valueFor
  nameWithType: JacksonInject.Value.valueFor
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.valueFor
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.empty*
  name: empty
  nameWithType: JacksonInject.Value.empty
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.empty
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.construct*
  name: construct
  nameWithType: JacksonInject.Value.construct
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.construct
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject
  name: JacksonInject
  nameWithType: JacksonInject
  fullName: com.fasterxml.jackson.annotation.JacksonInject
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.from*
  name: from
  nameWithType: JacksonInject.Value.from
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.from
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.forId*
  name: forId
  nameWithType: JacksonInject.Value.forId
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.forId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.withId*
  name: withId
  nameWithType: JacksonInject.Value.withId
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.withId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput*
  name: withUseInput
  nameWithType: JacksonInject.Value.withUseInput
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.withUseInput
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.getId*
  name: getId
  nameWithType: JacksonInject.Value.getId
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.getId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput*
  name: getUseInput
  nameWithType: JacksonInject.Value.getUseInput
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.getUseInput
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.hasId*
  name: hasId
  nameWithType: JacksonInject.Value.hasId
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.hasId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput*
  name: willUseInput
  nameWithType: JacksonInject.Value.willUseInput
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.willUseInput
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.toString*
  name: toString
  nameWithType: JacksonInject.Value.toString
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.toString
  package: com.fasterxml.jackson.annotation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode*
  name: hashCode
  nameWithType: JacksonInject.Value.hashCode
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.hashCode
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonInject.Value.equals*
  name: equals
  nameWithType: JacksonInject.Value.equals
  fullName: com.fasterxml.jackson.annotation.JacksonInject.Value.equals
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JacksonInject>
  name: JacksonAnnotationValue<JacksonInject>
  nameWithType: JacksonAnnotationValue<JacksonInject>
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JacksonInject>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue
  name: JacksonAnnotationValue
  nameWithType: JacksonAnnotationValue
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue
