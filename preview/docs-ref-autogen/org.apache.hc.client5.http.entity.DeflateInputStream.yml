### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.entity.DeflateInputStream
  id: DeflateInputStream
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity
  children:
  - org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream(java.io.InputStream)
  - org.apache.hc.client5.http.entity.DeflateInputStream.available()
  - org.apache.hc.client5.http.entity.DeflateInputStream.close()
  - org.apache.hc.client5.http.entity.DeflateInputStream.mark(int)
  - org.apache.hc.client5.http.entity.DeflateInputStream.markSupported()
  - org.apache.hc.client5.http.entity.DeflateInputStream.read()
  - org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[])
  - org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[],int,int)
  - org.apache.hc.client5.http.entity.DeflateInputStream.reset()
  - org.apache.hc.client5.http.entity.DeflateInputStream.skip(long)
  langs:
  - java
  name: DeflateInputStream
  nameWithType: DeflateInputStream
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream
  type: Class
  package: org.apache.hc.client5.http.entity
  summary: Deflate input stream. This class includes logic needed for various Rfc's in order to reasonably implement the "deflate" compression style.
  syntax:
    content: public class DeflateInputStream extends InputStream
  inheritance:
  - java.lang.Object
  - java.io.InputStream
  inheritedMembers:
  - java.io.InputStream.available()
  - java.io.InputStream.close()
  - java.io.InputStream.mark(int)
  - java.io.InputStream.markSupported()
  - java.io.InputStream.nullInputStream()
  - java.io.InputStream.read()
  - java.io.InputStream.read(byte[])
  - java.io.InputStream.read(byte[],int,int)
  - java.io.InputStream.readAllBytes()
  - java.io.InputStream.readNBytes(byte[],int,int)
  - java.io.InputStream.readNBytes(int)
  - java.io.InputStream.reset()
  - java.io.InputStream.skip(long)
  - java.io.InputStream.transferTo(java.io.OutputStream)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream(java.io.InputStream)
  id: DeflateInputStream(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: DeflateInputStream(InputStream wrapped)
  nameWithType: DeflateInputStream.DeflateInputStream(InputStream wrapped)
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream(InputStream wrapped)
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream*
  type: Constructor
  package: org.apache.hc.client5.http.entity
  syntax:
    content: public DeflateInputStream(InputStream wrapped)
    parameters:
    - id: wrapped
      type: java.io.InputStream
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.available()
  id: available()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: available()
  nameWithType: DeflateInputStream.available()
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.available()
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.available*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Get available.
  syntax:
    content: public int available()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: close()
  nameWithType: DeflateInputStream.close()
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.close()
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.close*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Close.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.mark(int)
  id: mark(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: mark(int readLimit)
  nameWithType: DeflateInputStream.mark(int readLimit)
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.mark(int readLimit)
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.mark*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Mark.
  syntax:
    content: public void mark(int readLimit)
    parameters:
    - id: readLimit
      type: int
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.markSupported()
  id: markSupported()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: markSupported()
  nameWithType: DeflateInputStream.markSupported()
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.markSupported()
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.markSupported*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Check if mark is supported.
  syntax:
    content: public boolean markSupported()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.read()
  id: read()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: read()
  nameWithType: DeflateInputStream.read()
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.read()
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.read*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Read a byte.
  syntax:
    content: public int read()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[])
  id: read(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: read(byte[] b)
  nameWithType: DeflateInputStream.read(byte[] b)
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[] b)
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.read*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Read lots of bytes.
  syntax:
    content: public int read(byte[] b)
    parameters:
    - id: b
      type: byte[]
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[],int,int)
  id: read(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: read(byte[] b, int off, int len)
  nameWithType: DeflateInputStream.read(byte[] b, int off, int len)
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.read(byte[] b, int off, int len)
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.read*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Read lots of specific bytes.
  syntax:
    content: public int read(byte[] b, int off, int len)
    parameters:
    - id: b
      type: byte[]
    - id: off
      type: int
    - id: len
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.reset()
  id: reset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: reset()
  nameWithType: DeflateInputStream.reset()
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.reset()
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.reset*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Reset.
  syntax:
    content: public void reset()
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.skip(long)
  id: skip(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.DeflateInputStream
  langs:
  - java
  name: skip(long n)
  nameWithType: DeflateInputStream.skip(long n)
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.skip(long n)
  overload: org.apache.hc.client5.http.entity.DeflateInputStream.skip*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Skip
  syntax:
    content: public long skip(long n)
    parameters:
    - id: n
      type: long
    return:
      type: long
  exceptions:
  - type: java.io.IOException
references:
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream*
  name: DeflateInputStream
  nameWithType: DeflateInputStream.DeflateInputStream
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.DeflateInputStream
  package: org.apache.hc.client5.http.entity
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.read*
  name: read
  nameWithType: DeflateInputStream.read
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.read
  package: org.apache.hc.client5.http.entity
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.skip*
  name: skip
  nameWithType: DeflateInputStream.skip
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.skip
  package: org.apache.hc.client5.http.entity
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.available*
  name: available
  nameWithType: DeflateInputStream.available
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.available
  package: org.apache.hc.client5.http.entity
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.mark*
  name: mark
  nameWithType: DeflateInputStream.mark
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.mark
  package: org.apache.hc.client5.http.entity
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.reset*
  name: reset
  nameWithType: DeflateInputStream.reset
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.reset
  package: org.apache.hc.client5.http.entity
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.markSupported*
  name: markSupported
  nameWithType: DeflateInputStream.markSupported
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.markSupported
  package: org.apache.hc.client5.http.entity
- uid: org.apache.hc.client5.http.entity.DeflateInputStream.close*
  name: close
  nameWithType: DeflateInputStream.close
  fullName: org.apache.hc.client5.http.entity.DeflateInputStream.close
  package: org.apache.hc.client5.http.entity
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.io.InputStream.mark(int)
  name: InputStream.mark(int)
  nameWithType: InputStream.mark(int)
  fullName: java.io.InputStream.mark(int)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.io.InputStream.readNBytes(int)
  name: InputStream.readNBytes(int)
  nameWithType: InputStream.readNBytes(int)
  fullName: java.io.InputStream.readNBytes(int)
- uid: java.io.InputStream.close()
  name: InputStream.close()
  nameWithType: InputStream.close()
  fullName: java.io.InputStream.close()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.io.InputStream.markSupported()
  name: InputStream.markSupported()
  nameWithType: InputStream.markSupported()
  fullName: java.io.InputStream.markSupported()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.io.InputStream.nullInputStream()
  name: InputStream.nullInputStream()
  nameWithType: InputStream.nullInputStream()
  fullName: java.io.InputStream.nullInputStream()
- uid: java.io.InputStream.transferTo(java.io.OutputStream)
  name: InputStream.transferTo(OutputStream)
  nameWithType: InputStream.transferTo(OutputStream)
  fullName: java.io.InputStream.transferTo(java.io.OutputStream)
- uid: java.io.InputStream.read(byte[])
  name: InputStream.read(byte[])
  nameWithType: InputStream.read(byte[])
  fullName: java.io.InputStream.read(byte[])
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.io.InputStream.available()
  name: InputStream.available()
  nameWithType: InputStream.available()
  fullName: java.io.InputStream.available()
- uid: java.io.InputStream.readNBytes(byte[],int,int)
  name: InputStream.readNBytes(byte[],int,int)
  nameWithType: InputStream.readNBytes(byte[],int,int)
  fullName: java.io.InputStream.readNBytes(byte[],int,int)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.io.InputStream.readAllBytes()
  name: InputStream.readAllBytes()
  nameWithType: InputStream.readAllBytes()
  fullName: java.io.InputStream.readAllBytes()
- uid: java.io.InputStream.skip(long)
  name: InputStream.skip(long)
  nameWithType: InputStream.skip(long)
  fullName: java.io.InputStream.skip(long)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.io.InputStream.read()
  name: InputStream.read()
  nameWithType: InputStream.read()
  fullName: java.io.InputStream.read()
- uid: java.io.InputStream.read(byte[],int,int)
  name: InputStream.read(byte[],int,int)
  nameWithType: InputStream.read(byte[],int,int)
  fullName: java.io.InputStream.read(byte[],int,int)
- uid: java.io.InputStream.reset()
  name: InputStream.reset()
  nameWithType: InputStream.reset()
  fullName: java.io.InputStream.reset()
