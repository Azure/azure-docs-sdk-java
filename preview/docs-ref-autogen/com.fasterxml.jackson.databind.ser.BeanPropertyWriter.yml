### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  id: BeanPropertyWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class<?>[])
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.MARKER_FOR_EMPTY
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._accessorMethod
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._cfgSerializationType
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._contextAnnotations
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._declaredType
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._dynamicSerializers
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._field
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._includeInViews
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._internalSettings
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._member
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._name
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nonTrivialBaseType
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nullSerializer
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._serializer
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressNulls
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressableValue
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._typeSerializer
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._wrapperName
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
  langs:
  - java
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Base bean property handler class, which implements common parts of reflection-based functionality for accessing a property value and serializing it.


    Note that current design tries to keep instances immutable (semi-functional style); mostly because these instances are exposed to application code and this is to reduce likelihood of data corruption and synchronization issues.
  syntax:
    content: public class BeanPropertyWriter extends PropertyWriter implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
  - com.fasterxml.jackson.databind.ser.PropertyWriter
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  id: <A>getAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: <A>getAnnotation(Class<A> acls)
  nameWithType: BeanPropertyWriter.<A>getAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for accessing annotations directly declared for property that this writer is associated with.
  syntax:
    content: public A <A>getAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  id: <A>getContextAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: <A>getContextAnnotation(Class<A> acls)
  nameWithType: BeanPropertyWriter.<A>getContextAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getContextAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for accessing annotations declared in context of the property that this writer is associated with; usually this means annotations on enclosing class for property.
  syntax:
    content: public A <A>getContextAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter()
  id: BeanPropertyWriter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter()
  nameWithType: BeanPropertyWriter.BeanPropertyWriter()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Constructor that may be of use to virtual properties, when there is need for the zero-arg ("default") constructor, and actual initialization is done after constructor call.
  syntax:
    content: protected BeanPropertyWriter()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
  id: BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue)
  nameWithType: BeanPropertyWriter.BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: member
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: contextAnnotations
      type: com.fasterxml.jackson.databind.util.Annotations
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: serType
      type: com.fasterxml.jackson.databind.JavaType
    - id: suppressNulls
      type: boolean
    - id: suppressableValue
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class<?>[])
  id: BeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class<?>[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue, Class<?>[] includeInViews)
  nameWithType: BeanPropertyWriter.BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue, Class<?>[] includeInViews)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue, Class<?>[] includeInViews)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public BeanPropertyWriter(BeanPropertyDefinition propDef, AnnotatedMember member, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, boolean suppressNulls, Object suppressableValue, Class<?>[] includeInViews)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: member
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: contextAnnotations
      type: com.fasterxml.jackson.databind.util.Annotations
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: serType
      type: com.fasterxml.jackson.databind.JavaType
    - id: suppressNulls
      type: boolean
    - id: suppressableValue
      type: java.lang.Object
    - id: includeInViews
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  id: BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter(BeanPropertyWriter base)
  nameWithType: BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: "\"Copy constructor\" to be used by filtering sub-classes"
  syntax:
    content: protected BeanPropertyWriter(BeanPropertyWriter base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
  id: BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter(BeanPropertyWriter base, SerializedString name)
  nameWithType: BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base, SerializedString name)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base, SerializedString name)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanPropertyWriter(BeanPropertyWriter base, SerializedString name)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    - id: name
      type: com.fasterxml.jackson.core.io.SerializedString
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  id: BeanPropertyWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: BeanPropertyWriter(BeanPropertyWriter base, PropertyName name)
  nameWithType: BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base, PropertyName name)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter(BeanPropertyWriter base, PropertyName name)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanPropertyWriter(BeanPropertyWriter base, PropertyName name)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    - id: name
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.MARKER_FOR_EMPTY
  id: MARKER_FOR_EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: MARKER_FOR_EMPTY
  nameWithType: BeanPropertyWriter.MARKER_FOR_EMPTY
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.MARKER_FOR_EMPTY
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Marker object used to indicate "do not serialize if empty"
  syntax:
    content: public static final Object MARKER_FOR_EMPTY
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._accessorMethod
  id: _accessorMethod
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _accessorMethod
  nameWithType: BeanPropertyWriter._accessorMethod
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._accessorMethod
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Accessor method used to get property value, for method-accessible properties. Null if and only if <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter._field" data-throw-if-not-resolved="false">#_field</xref> is null.


    \`transient\` (and non-final) only to support JDK serializability.
  syntax:
    content: protected transient Method _accessorMethod
    return:
      type: java.lang.reflect.Method
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._cfgSerializationType
  id: _cfgSerializationType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _cfgSerializationType
  nameWithType: BeanPropertyWriter._cfgSerializationType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._cfgSerializationType
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Type to use for locating serializer; normally same as return type of the accessor method, but may be overridden by annotations.
  syntax:
    content: protected final JavaType _cfgSerializationType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._contextAnnotations
  id: _contextAnnotations
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _contextAnnotations
  nameWithType: BeanPropertyWriter._contextAnnotations
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._contextAnnotations
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Annotations from context (most often, class that declares property, or in case of sub-class serializer, from that sub-class)


    NOTE: transient just to support JDK serializability; Annotations do not serialize. At all.
  syntax:
    content: protected final transient Annotations _contextAnnotations
    return:
      type: com.fasterxml.jackson.databind.util.Annotations
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._declaredType
  id: _declaredType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _declaredType
  nameWithType: BeanPropertyWriter._declaredType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._declaredType
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Type property is declared to have, either in class definition or associated annotations.
  syntax:
    content: protected final JavaType _declaredType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
  id: _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _depositSchemaProperty(ObjectNode propertiesNode, JsonNode schemaNode)
  nameWithType: BeanPropertyWriter._depositSchemaProperty(ObjectNode propertiesNode, JsonNode schemaNode)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(ObjectNode propertiesNode, JsonNode schemaNode)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected void _depositSchemaProperty(ObjectNode propertiesNode, JsonNode schemaNode)
    parameters:
    - id: propertiesNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
    - id: schemaNode
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._dynamicSerializers
  id: _dynamicSerializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _dynamicSerializers
  nameWithType: BeanPropertyWriter._dynamicSerializers
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._dynamicSerializers
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: In case serializer is not known statically (i.e. `_serializer` is null), we will use a lookup structure for storing dynamically resolved mapping from type(s) to serializer(s).
  syntax:
    content: protected transient PropertySerializerMap _dynamicSerializers
    return:
      type: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._field
  id: _field
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _field
  nameWithType: BeanPropertyWriter._field
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._field
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Field that contains the property value for field-accessible properties. Null if and only if <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter._accessorMethod" data-throw-if-not-resolved="false">#_accessorMethod</xref> is null.


    \`transient\` (and non-final) only to support JDK serializability.
  syntax:
    content: protected transient Field _field
    return:
      type: java.lang.reflect.Field
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
  id: _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _findAndAddDynamic(PropertySerializerMap map, Class<?> type, SerializerProvider provider)
  nameWithType: BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap map, Class<?> type, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap map, Class<?> type, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected JsonSerializer<Object> _findAndAddDynamic(PropertySerializerMap map, Class<?> type, SerializerProvider provider)
    parameters:
    - id: map
      type: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
    - id: type
      type: java.lang.Class<?>
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)
  nameWithType: BeanPropertyWriter._handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method called to handle a direct self-reference through this property. Method can choose to indicate an error by throwing <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref>; fully handle serialization (and return true); or indicate that it should be serialized normally (return false).


    Default implementation will throw <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> if <xref uid="com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_SELF_REFERENCES" data-throw-if-not-resolved="false">SerializationFeature#FAIL_ON_SELF_REFERENCES</xref> is enabled; or return `false` if it is disabled.
  syntax:
    content: protected boolean _handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: boolean
      description: >-
        True if method fully handled self-referential value; false if not
                 (caller is to handle it) or <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> if there
                 is no way handle it
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._includeInViews
  id: _includeInViews
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _includeInViews
  nameWithType: BeanPropertyWriter._includeInViews
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._includeInViews
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Alternate set of property writers used when view-based filtering is available for the Bean.
  syntax:
    content: protected final Class<?>[] _includeInViews
    return:
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._internalSettings
  id: _internalSettings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _internalSettings
  nameWithType: BeanPropertyWriter._internalSettings
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._internalSettings
  type: Field
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected transient HashMap<Object,Object> _internalSettings
    return:
      type: java.util.HashMap<java.lang.Object,java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._member
  id: _member
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _member
  nameWithType: BeanPropertyWriter._member
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._member
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Member (field, method) that represents property and allows access to associated annotations.
  syntax:
    content: protected final AnnotatedMember _member
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._name
  id: _name
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _name
  nameWithType: BeanPropertyWriter._name
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._name
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Logical name of the property; will be used as the field name under which value for the property is written.


    NOTE: do NOT change name of this field; it is accessed by Afterburner module (until 2.4; not directly from 2.5) ALSO NOTE: ... and while it really ought to be \`SerializableString\`, changing that is also binary-incompatible change. So nope.
  syntax:
    content: protected final SerializedString _name
    return:
      type: com.fasterxml.jackson.core.io.SerializedString
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(com.fasterxml.jackson.databind.PropertyName)
  id: _new(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _new(PropertyName newName)
  nameWithType: BeanPropertyWriter._new(PropertyName newName)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(PropertyName newName)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Overridable factory method used by sub-classes
  syntax:
    content: protected BeanPropertyWriter _new(PropertyName newName)
    parameters:
    - id: newName
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nonTrivialBaseType
  id: _nonTrivialBaseType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _nonTrivialBaseType
  nameWithType: BeanPropertyWriter._nonTrivialBaseType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nonTrivialBaseType
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Base type of the property, if the declared type is "non-trivial"; meaning it is either a structured type (collection, map, array), or parameterized. Used to retain type information about contained type, which is mostly necessary if type meta-data is to be included.
  syntax:
    content: protected JavaType _nonTrivialBaseType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nullSerializer
  id: _nullSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _nullSerializer
  nameWithType: BeanPropertyWriter._nullSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nullSerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: 'Serializer used for writing out null values, if any: if null, null values are to be suppressed.'
  syntax:
    content: protected JsonSerializer<Object> _nullSerializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._serializer
  id: _serializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _serializer
  nameWithType: BeanPropertyWriter._serializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._serializer
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: 'Serializer to use for writing out the value: null if it cannot be known statically; non-null if it can.'
  syntax:
    content: protected JsonSerializer<Object> _serializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressNulls
  id: _suppressNulls
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _suppressNulls
  nameWithType: BeanPropertyWriter._suppressNulls
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressNulls
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Whether null values are to be suppressed (nothing written out if value is null) or not. Note that this is a configuration value during construction, and actual handling relies on setting (or not) of <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nullSerializer" data-throw-if-not-resolved="false">#_nullSerializer</xref>.
  syntax:
    content: protected final boolean _suppressNulls
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressableValue
  id: _suppressableValue
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _suppressableValue
  nameWithType: BeanPropertyWriter._suppressableValue
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressableValue
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Value that is considered default value of the property; used for default-value-suppression if enabled.
  syntax:
    content: protected final Object _suppressableValue
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._typeSerializer
  id: _typeSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _typeSerializer
  nameWithType: BeanPropertyWriter._typeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._typeSerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: If property being serialized needs type information to be included this is the type serializer to use. Declared type (possibly augmented with annotations) of property is used for determining exact mechanism to use (compared to actual runtime type used for serializing actual state).
  syntax:
    content: protected TypeSerializer _typeSerializer
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._wrapperName
  id: _wrapperName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: _wrapperName
  nameWithType: BeanPropertyWriter._wrapperName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._wrapperName
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Wrapper name to use for this element, if any
  syntax:
    content: protected final PropertyName _wrapperName
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: assignNullSerializer(JsonSerializer<Object> nullSer)
  nameWithType: BeanPropertyWriter.assignNullSerializer(JsonSerializer<Object> nullSer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(JsonSerializer<Object> nullSer)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to assign null value serializer for property
  syntax:
    content: public void assignNullSerializer(JsonSerializer<Object> nullSer)
    parameters:
    - id: nullSer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: assignSerializer(JsonSerializer<Object> ser)
  nameWithType: BeanPropertyWriter.assignSerializer(JsonSerializer<Object> ser)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(JsonSerializer<Object> ser)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to assign value serializer for property
  syntax:
    content: public void assignSerializer(JsonSerializer<Object> ser)
    parameters:
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: assignTypeSerializer(TypeSerializer typeSer)
  nameWithType: BeanPropertyWriter.assignTypeSerializer(TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to set, reset or clear the configured type serializer for property.
  syntax:
    content: public void assignTypeSerializer(TypeSerializer typeSer)
    parameters:
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor v, SerializerProvider provider)
  nameWithType: BeanPropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor v, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor v, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Traversal method used for things like JSON Schema generation, or POJO introspection.
  syntax:
    content: public void depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor v, SerializerProvider provider)
    parameters:
    - id: v
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  nameWithType: BeanPropertyWriter.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Attempt to add the output of the given <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> in the given <xref uid="com.fasterxml.jackson.databind.node.ObjectNode" data-throw-if-not-resolved="false">ObjectNode</xref>. Otherwise, add the default schema <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> in place of the writer's output
  syntax:
    content: public void depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
    parameters:
    - id: propertiesNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: Node which the given property would exist within
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
      description: >-
        Provider that can be used for accessing dynamic aspects of
                    serialization processing
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
  id: fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: fixAccess(SerializationConfig config)
  nameWithType: BeanPropertyWriter.fixAccess(SerializationConfig config)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(SerializationConfig config)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to ensure that the mutator has proper access rights to be called, as per configuration. Overridden by implementations that have mutators that require access, fields and setters.
  syntax:
    content: public void fixAccess(SerializationConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(java.lang.Object)
  id: get(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: get(Object bean)
  nameWithType: BeanPropertyWriter.get(Object bean)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(Object bean)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method that can be used to access value of the property this Object describes, from given bean instance.


    Note: method is final as it should not need to be overridden -- rather, calling method(s) (<xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField*" data-throw-if-not-resolved="false">#serializeAsField</xref>) should be overridden to change the behavior
  syntax:
    content: public final Object get(Object bean)
    parameters:
    - id: bean
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
  id: getFullName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getFullName()
  nameWithType: BeanPropertyWriter.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public PropertyName getFullName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
  id: getGenericPropertyType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getGenericPropertyType()
  nameWithType: BeanPropertyWriter.getGenericPropertyType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Get the generic property type of this property writer.
  syntax:
    content: public Type getGenericPropertyType()
    return:
      type: java.lang.reflect.Type
      description: The property type, or null if not found.
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(java.lang.Object)
  id: getInternalSetting(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getInternalSetting(Object key)
  nameWithType: BeanPropertyWriter.getInternalSetting(Object key)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(Object key)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for accessing value of specified internal setting.
  syntax:
    content: public Object getInternalSetting(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: java.lang.Object
      description: Value of the setting, if any; null if none.
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
  id: getMember()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getMember()
  nameWithType: BeanPropertyWriter.getMember()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public AnnotatedMember getMember()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getName()
  nameWithType: BeanPropertyWriter.getName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
  id: getPropertyType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getPropertyType()
  nameWithType: BeanPropertyWriter.getPropertyType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public Class<?> getPropertyType()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
  id: getRawSerializationType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getRawSerializationType()
  nameWithType: BeanPropertyWriter.getRawSerializationType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public Class<?> getRawSerializationType()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
  id: getSerializationType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getSerializationType()
  nameWithType: BeanPropertyWriter.getSerializationType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JavaType getSerializationType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
  id: getSerializedName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getSerializedName()
  nameWithType: BeanPropertyWriter.getSerializedName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public SerializableString getSerializedName()
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
  id: getSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getSerializer()
  nameWithType: BeanPropertyWriter.getSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<Object> getSerializer()
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
  id: getType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getType()
  nameWithType: BeanPropertyWriter.getType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JavaType getType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
  id: getTypeSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getTypeSerializer()
  nameWithType: BeanPropertyWriter.getTypeSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public TypeSerializer getTypeSerializer()
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
  id: getViews()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getViews()
  nameWithType: BeanPropertyWriter.getViews()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public Class<?>[] getViews()
    return:
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
  id: getWrapperName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: getWrapperName()
  nameWithType: BeanPropertyWriter.getWrapperName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public PropertyName getWrapperName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
  id: hasNullSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: hasNullSerializer()
  nameWithType: BeanPropertyWriter.hasNullSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public boolean hasNullSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
  id: hasSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: hasSerializer()
  nameWithType: BeanPropertyWriter.hasSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public boolean hasSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
  id: isUnwrapping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: isUnwrapping()
  nameWithType: BeanPropertyWriter.isUnwrapping()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Accessor that will return true if this bean property has to support "unwrapping"; ability to replace POJO structural wrapping with optional name prefix and/or suffix (or in some cases, just removal of wrapper name).


    Default implementation simply returns false.
  syntax:
    content: public boolean isUnwrapping()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(java.lang.Object)
  id: removeInternalSetting(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: removeInternalSetting(Object key)
  nameWithType: BeanPropertyWriter.removeInternalSetting(Object key)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(Object key)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for removing entry for specified internal setting.
  syntax:
    content: public Object removeInternalSetting(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: java.lang.Object
      description: Existing value of the setting, if any (null if none)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(com.fasterxml.jackson.databind.util.NameTransformer)
  id: rename(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: rename(NameTransformer transformer)
  nameWithType: BeanPropertyWriter.rename(NameTransformer transformer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(NameTransformer transformer)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public BeanPropertyWriter rename(NameTransformer transformer)
    parameters:
    - id: transformer
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: BeanPropertyWriter.serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Alternative to <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField*" data-throw-if-not-resolved="false">#serializeAsField</xref> that is used when a POJO is serialized as JSON Array; the difference is that no field names are written.
  syntax:
    content: public void serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: BeanPropertyWriter.serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to access property that this bean stands for, from within given bean, and to serialize it as a JSON Object field using appropriate serializer.
  syntax:
    content: public void serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: serializeAsOmittedField(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: BeanPropertyWriter.serializeAsOmittedField(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to indicate that serialization of a field was omitted due to filtering, in cases where backend data format does not allow basic omission.
  syntax:
    content: public void serializeAsOmittedField(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: BeanPropertyWriter.serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to serialize a placeholder used in tabular output when real value is not to be included (is filtered out), but when we need an entry so that field indexes will not be off. Typically this should output null or empty String, depending on datatype.
  syntax:
    content: public void serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(java.lang.Object,java.lang.Object)
  id: setInternalSetting(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: setInternalSetting(Object key, Object value)
  nameWithType: BeanPropertyWriter.setInternalSetting(Object key, Object value)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(Object key, Object value)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for setting specific internal setting to given value
  syntax:
    content: public Object setInternalSetting(Object key, Object value)
    parameters:
    - id: key
      type: java.lang.Object
    - id: value
      type: java.lang.Object
    return:
      type: java.lang.Object
      description: Old value of the setting, if any (null if none)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
  id: setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: setNonTrivialBaseType(JavaType t)
  nameWithType: BeanPropertyWriter.setNonTrivialBaseType(JavaType t)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(JavaType t)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to define type to consider as "non-trivial" basetype, needed for dynamic serialization resolution for complex (usually container) types
  syntax:
    content: public void setNonTrivialBaseType(JavaType t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: toString()
  nameWithType: BeanPropertyWriter.toString()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
  id: unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: unwrappingWriter(NameTransformer unwrapper)
  nameWithType: BeanPropertyWriter.unwrappingWriter(NameTransformer unwrapper)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(NameTransformer unwrapper)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called create an instance that handles details of unwrapping contained value.
  syntax:
    content: public BeanPropertyWriter unwrappingWriter(NameTransformer unwrapper)
    parameters:
    - id: unwrapper
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
  id: willSuppressNulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: willSuppressNulls()
  nameWithType: BeanPropertyWriter.willSuppressNulls()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public boolean willSuppressNulls()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
  id: wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  langs:
  - java
  name: wouldConflictWithName(PropertyName name)
  nameWithType: BeanPropertyWriter.wouldConflictWithName(PropertyName name)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(PropertyName name)
  overload: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to check to see if this property has a name that would conflict with a given name.
  syntax:
    content: public boolean wouldConflictWithName(PropertyName name)
    parameters:
    - id: name
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: boolean
references:
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.util.Annotations
  name: Annotations
  nameWithType: Annotations
  fullName: com.fasterxml.jackson.databind.util.Annotations
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter*
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter.BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.BeanPropertyWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.core.io.SerializedString
  name: SerializedString
  nameWithType: SerializedString
  fullName: com.fasterxml.jackson.core.io.SerializedString
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename*
  name: rename
  nameWithType: BeanPropertyWriter.rename
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new*
  name: _new
  nameWithType: BeanPropertyWriter._new
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer*
  name: assignTypeSerializer
  nameWithType: BeanPropertyWriter.assignTypeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer*
  name: assignSerializer
  nameWithType: BeanPropertyWriter.assignSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer*
  name: assignNullSerializer
  nameWithType: BeanPropertyWriter.assignNullSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter*
  name: unwrappingWriter
  nameWithType: BeanPropertyWriter.unwrappingWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType*
  name: setNonTrivialBaseType
  nameWithType: BeanPropertyWriter.setNonTrivialBaseType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess*
  name: fixAccess
  nameWithType: BeanPropertyWriter.fixAccess
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName*
  name: getName
  nameWithType: BeanPropertyWriter.getName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName*
  name: getFullName
  nameWithType: BeanPropertyWriter.getFullName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType*
  name: getType
  nameWithType: BeanPropertyWriter.getType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName*
  name: getWrapperName
  nameWithType: BeanPropertyWriter.getWrapperName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getAnnotation*
  name: <A>getAnnotation
  nameWithType: BeanPropertyWriter.<A>getAnnotation
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getContextAnnotation*
  name: <A>getContextAnnotation
  nameWithType: BeanPropertyWriter.<A>getContextAnnotation
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember*
  name: getMember
  nameWithType: BeanPropertyWriter.getMember
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  name: ObjectNode
  nameWithType: ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty*
  name: _depositSchemaProperty
  nameWithType: BeanPropertyWriter._depositSchemaProperty
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting*
  name: getInternalSetting
  nameWithType: BeanPropertyWriter.getInternalSetting
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting*
  name: setInternalSetting
  nameWithType: BeanPropertyWriter.setInternalSetting
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting*
  name: removeInternalSetting
  nameWithType: BeanPropertyWriter.removeInternalSetting
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName*
  name: getSerializedName
  nameWithType: BeanPropertyWriter.getSerializedName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer*
  name: hasSerializer
  nameWithType: BeanPropertyWriter.hasSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer*
  name: hasNullSerializer
  nameWithType: BeanPropertyWriter.hasNullSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer*
  name: getTypeSerializer
  nameWithType: BeanPropertyWriter.getTypeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping*
  name: isUnwrapping
  nameWithType: BeanPropertyWriter.isUnwrapping
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls*
  name: willSuppressNulls
  nameWithType: BeanPropertyWriter.willSuppressNulls
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName*
  name: wouldConflictWithName
  nameWithType: BeanPropertyWriter.wouldConflictWithName
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer*
  name: getSerializer
  nameWithType: BeanPropertyWriter.getSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType*
  name: getSerializationType
  nameWithType: BeanPropertyWriter.getSerializationType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType*
  name: getRawSerializationType
  nameWithType: BeanPropertyWriter.getRawSerializationType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType*
  name: getPropertyType
  nameWithType: BeanPropertyWriter.getPropertyType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType*
  name: getGenericPropertyType
  nameWithType: BeanPropertyWriter.getGenericPropertyType
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews*
  name: getViews
  nameWithType: BeanPropertyWriter.getViews
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField*
  name: serializeAsField
  nameWithType: BeanPropertyWriter.serializeAsField
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField*
  name: serializeAsOmittedField
  nameWithType: BeanPropertyWriter.serializeAsOmittedField
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement*
  name: serializeAsElement
  nameWithType: BeanPropertyWriter.serializeAsElement
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder*
  name: serializeAsPlaceholder
  nameWithType: BeanPropertyWriter.serializeAsPlaceholder
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
  name: jsonFormatVisitors.JsonObjectFormatVisitor
  nameWithType: jsonFormatVisitors.JsonObjectFormatVisitor
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty*
  name: depositSchemaProperty
  nameWithType: BeanPropertyWriter.depositSchemaProperty
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
  name: PropertySerializerMap
  nameWithType: PropertySerializerMap
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic*
  name: _findAndAddDynamic
  nameWithType: BeanPropertyWriter._findAndAddDynamic
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get*
  name: get
  nameWithType: BeanPropertyWriter.get
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get
  package: com.fasterxml.jackson.databind.ser
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference*
  name: _handleSelfReference
  nameWithType: BeanPropertyWriter._handleSelfReference
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString*
  name: toString
  nameWithType: BeanPropertyWriter.toString
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.reflect.Method
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
- uid: java.lang.reflect.Field
  spec.java:
  - uid: java.lang.reflect.Field
    name: Field
    fullName: java.lang.reflect.Field
- uid: java.util.HashMap<java.lang.Object,java.lang.Object>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter
  name: PropertyWriter
  nameWithType: PropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>findAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>findAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  name: ConcreteBeanPropertyBase.isVirtual()
  nameWithType: ConcreteBeanPropertyBase.isVirtual()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>getContextAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>getContextAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  name: PropertyWriter.getName()
  nameWithType: PropertyWriter.getName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  name: ConcreteBeanPropertyBase.getMetadata()
  nameWithType: ConcreteBeanPropertyBase.getMetadata()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  name: ConcreteBeanPropertyBase.isRequired()
  nameWithType: ConcreteBeanPropertyBase.isRequired()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  nameWithType: PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  name: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  nameWithType: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>getAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>getAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  name: PropertyWriter.getFullName()
  nameWithType: PropertyWriter.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  nameWithType: PropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: java.lang.Object,java.lang.Object
  name: Object,Object
  nameWithType: Object,Object
  fullName: java.lang.Object,java.lang.Object
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.
  name: PropertyWriter.
  nameWithType: PropertyWriter.
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.
- uid: A>findAnnotation(java.lang.Class
  name: A>findAnnotation(Class
  nameWithType: A>findAnnotation(Class
  fullName: A>findAnnotation(java.lang.Class
- uid: A>)
  name: A>)
  nameWithType: A>)
  fullName: A>)
- uid: A>getContextAnnotation(java.lang.Class
  name: A>getContextAnnotation(Class
  nameWithType: A>getContextAnnotation(Class
  fullName: A>getContextAnnotation(java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: A>getAnnotation(java.lang.Class
  name: A>getAnnotation(Class
  nameWithType: A>getAnnotation(Class
  fullName: A>getAnnotation(java.lang.Class
