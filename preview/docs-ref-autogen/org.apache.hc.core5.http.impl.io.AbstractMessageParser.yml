### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  id: AbstractMessageParser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io
  children:
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.AbstractMessageParser(org.apache.hc.core5.http.message.LineParser,org.apache.hc.core5.http.config.Http1Config)
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.createConnectionClosedException()
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.createMessage(org.apache.hc.core5.util.CharArrayBuffer)
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream)
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser)
  - org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser,java.util.List<org.apache.hc.core5.util.CharArrayBuffer>)
  langs:
  - java
  name: AbstractMessageParser<T>
  nameWithType: AbstractMessageParser<T>
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>
  type: Class
  package: org.apache.hc.core5.http.impl.io
  summary: Abstract base class for HTTP message parsers that obtain input from an instance of <xref uid="org.apache.hc.core5.http.io.SessionInputBuffer" data-throw-if-not-resolved="false">org.apache.hc.core5.http.io.SessionInputBuffer</xref>.
  syntax:
    content: public abstract class AbstractMessageParser<T> implements HttpMessageParser<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.io.HttpMessageParser<T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.AbstractMessageParser(org.apache.hc.core5.http.message.LineParser,org.apache.hc.core5.http.config.Http1Config)
  id: AbstractMessageParser(org.apache.hc.core5.http.message.LineParser,org.apache.hc.core5.http.config.Http1Config)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: AbstractMessageParser(LineParser lineParser, Http1Config http1Config)
  nameWithType: AbstractMessageParser<T>.AbstractMessageParser(LineParser lineParser, Http1Config http1Config)
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.AbstractMessageParser(LineParser lineParser, Http1Config http1Config)
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.AbstractMessageParser*
  type: Constructor
  package: org.apache.hc.core5.http.impl.io
  summary: Creates new instance of AbstractMessageParser.
  syntax:
    content: public AbstractMessageParser(LineParser lineParser, Http1Config http1Config)
    parameters:
    - id: lineParser
      type: org.apache.hc.core5.http.message.LineParser
      description: >-
        the line parser. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.message.LazyLineParser.INSTANCE" data-throw-if-not-resolved="false">org.apache.hc.core5.http.message.LazyLineParser#INSTANCE</xref> will be used.
    - id: http1Config
      type: org.apache.hc.core5.http.config.Http1Config
      description: >-
        the message http1Config. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.config.Http1Config.DEFAULT" data-throw-if-not-resolved="false">Http1Config#DEFAULT</xref> will be used.
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createConnectionClosedException()
  id: createConnectionClosedException()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: createConnectionClosedException()
  nameWithType: AbstractMessageParser<T>.createConnectionClosedException()
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.createConnectionClosedException()
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createConnectionClosedException*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Subclasses must override this method to generate an appropriate exception in case of unexpected connection termination by the peer endpoint.
  syntax:
    content: protected abstract IOException createConnectionClosedException()
    return:
      type: java.io.IOException
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createMessage(org.apache.hc.core5.util.CharArrayBuffer)
  id: createMessage(org.apache.hc.core5.util.CharArrayBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: createMessage(CharArrayBuffer buffer)
  nameWithType: AbstractMessageParser<T>.createMessage(CharArrayBuffer buffer)
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.createMessage(CharArrayBuffer buffer)
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createMessage*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: >-
    Subclasses must override this method to generate an instance of <xref uid="org.apache.hc.core5.http.HttpMessage" data-throw-if-not-resolved="false">HttpMessage</xref> based on the initial input from the session buffer.


    Usually this method is expected to read just the very first line or the very first valid from the data stream and based on the input generate an appropriate instance of <xref uid="org.apache.hc.core5.http.HttpMessage" data-throw-if-not-resolved="false">HttpMessage</xref>.
  syntax:
    content: protected abstract T createMessage(CharArrayBuffer buffer)
    parameters:
    - id: buffer
      type: org.apache.hc.core5.util.CharArrayBuffer
      description: the session input buffer.
    return:
      type: T
      description: HTTP message based on the input from the session buffer.
  exceptions:
  - type: java.io.IOException
    description: in case of an I/O error.
  - type: org.apache.hc.core5.http.HttpException
    description: in case of an I/O error.
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream)
  id: parse(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: parse(SessionInputBuffer buffer, InputStream inputStream)
  nameWithType: AbstractMessageParser<T>.parse(SessionInputBuffer buffer, InputStream inputStream)
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.parse(SessionInputBuffer buffer, InputStream inputStream)
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Generates an instance of <xref uid="org.apache.hc.core5.http.MessageHeaders" data-throw-if-not-resolved="false">MessageHeaders</xref> from the given input stream..
  syntax:
    content: public T parse(SessionInputBuffer buffer, InputStream inputStream)
    parameters:
    - id: buffer
      type: org.apache.hc.core5.http.io.SessionInputBuffer
    - id: inputStream
      type: java.io.InputStream
    return:
      type: T
  exceptions:
  - type: java.io.IOException
  - type: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser)
  id: parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser lineParser)
  nameWithType: AbstractMessageParser<T>.parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser lineParser)
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser lineParser)
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Parses HTTP headers from the data receiver stream according to the generic format as specified by the HTTP/1.1 protocol specification.
  syntax:
    content: public static Header[] parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser lineParser)
    parameters:
    - id: inBuffer
      type: org.apache.hc.core5.http.io.SessionInputBuffer
      description: Session input buffer
    - id: inputStream
      type: java.io.InputStream
      description: Input stream
    - id: maxHeaderCount
      type: int
      description: >-
        maximum number of headers allowed. If the number
          of headers received from the data stream exceeds maxCount value, an
          IOException will be thrown. Setting this parameter to a negative value
          or zero will disable the check.
    - id: maxLineLen
      type: int
      description: >-
        maximum number of characters for a header line,
          including the continuation lines. Setting this parameter to a negative
          value or zero will disable the check.
    - id: lineParser
      type: org.apache.hc.core5.http.message.LineParser
      description: >-
        the line parser. If <code>null</code>
           <xref uid="org.apache.hc.core5.http.message.LazyLineParser.INSTANCE" data-throw-if-not-resolved="false">org.apache.hc.core5.http.message.LazyLineParser#INSTANCE</xref> will be used
    return:
      type: org.apache.hc.core5.http.Header[]
      description: array of HTTP headers
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
    description: in case of an I/O error
  - type: java.io.IOException
    description: in case of an I/O error
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser,java.util.List<org.apache.hc.core5.util.CharArrayBuffer>)
  id: parseHeaders(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,int,int,org.apache.hc.core5.http.message.LineParser,java.util.List<org.apache.hc.core5.util.CharArrayBuffer>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.io.AbstractMessageParser
  langs:
  - java
  name: parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser parser, List<CharArrayBuffer> headerLines)
  nameWithType: AbstractMessageParser<T>.parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser parser, List<CharArrayBuffer> headerLines)
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser parser, List<CharArrayBuffer> headerLines)
  overload: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders*
  type: Method
  package: org.apache.hc.core5.http.impl.io
  summary: Parses HTTP headers from the data receiver stream according to the generic format as specified by the HTTP/1.1 protocol specification.
  syntax:
    content: public static Header[] parseHeaders(SessionInputBuffer inBuffer, InputStream inputStream, int maxHeaderCount, int maxLineLen, LineParser parser, List<CharArrayBuffer> headerLines)
    parameters:
    - id: inBuffer
      type: org.apache.hc.core5.http.io.SessionInputBuffer
      description: Session input buffer
    - id: inputStream
      type: java.io.InputStream
      description: Input stream
    - id: maxHeaderCount
      type: int
      description: >-
        maximum number of headers allowed. If the number
          of headers received from the data stream exceeds maxCount value, an
          IOException will be thrown. Setting this parameter to a negative value
          or zero will disable the check.
    - id: maxLineLen
      type: int
      description: >-
        maximum number of characters for a header line,
          including the continuation lines. Setting this parameter to a negative
          value or zero will disable the check.
    - id: parser
      type: org.apache.hc.core5.http.message.LineParser
      description: line parser to use.
    - id: headerLines
      type: java.util.List<org.apache.hc.core5.util.CharArrayBuffer>
      description: >-
        List of header lines. This list will be used to store
           intermediate results. This makes it possible to resume parsing of
           headers in case of a <xref uid="java.io.InterruptedIOException" data-throw-if-not-resolved="false">java.io.InterruptedIOException</xref>.
    return:
      type: org.apache.hc.core5.http.Header[]
      description: array of HTTP headers
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
    description: in case of an I/O error
  - type: java.io.IOException
    description: in case of an I/O error
references:
- uid: org.apache.hc.core5.http.message.LineParser
  name: LineParser
  nameWithType: LineParser
  fullName: org.apache.hc.core5.http.message.LineParser
- uid: org.apache.hc.core5.http.config.Http1Config
  name: Http1Config
  nameWithType: Http1Config
  fullName: org.apache.hc.core5.http.config.Http1Config
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.AbstractMessageParser*
  name: AbstractMessageParser
  nameWithType: AbstractMessageParser<T>.AbstractMessageParser
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.AbstractMessageParser
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.io.SessionInputBuffer
  name: SessionInputBuffer
  nameWithType: SessionInputBuffer
  fullName: org.apache.hc.core5.http.io.SessionInputBuffer
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.Header[]
  spec.java:
  - uid: org.apache.hc.core5.http.Header
    name: Header
    fullName: org.apache.hc.core5.http.Header
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parseHeaders*
  name: parseHeaders
  nameWithType: AbstractMessageParser<T>.parseHeaders
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.parseHeaders
  package: org.apache.hc.core5.http.impl.io
- uid: java.util.List<org.apache.hc.core5.util.CharArrayBuffer>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.util.CharArrayBuffer
    name: CharArrayBuffer
    fullName: org.apache.hc.core5.util.CharArrayBuffer
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.util.CharArrayBuffer
  name: CharArrayBuffer
  nameWithType: CharArrayBuffer
  fullName: org.apache.hc.core5.util.CharArrayBuffer
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createMessage*
  name: createMessage
  nameWithType: AbstractMessageParser<T>.createMessage
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.createMessage
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.createConnectionClosedException*
  name: createConnectionClosedException
  nameWithType: AbstractMessageParser<T>.createConnectionClosedException
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.createConnectionClosedException
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse*
  name: parse
  nameWithType: AbstractMessageParser<T>.parse
  fullName: org.apache.hc.core5.http.impl.io.AbstractMessageParser<T>.parse
  package: org.apache.hc.core5.http.impl.io
- uid: org.apache.hc.core5.http.io.HttpMessageParser<T>
  name: HttpMessageParser<T>
  nameWithType: HttpMessageParser<T>
  fullName: org.apache.hc.core5.http.io.HttpMessageParser<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: org.apache.hc.core5.http.io.HttpMessageParser
  name: HttpMessageParser
  nameWithType: HttpMessageParser
  fullName: org.apache.hc.core5.http.io.HttpMessageParser
