### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue*"
fullName: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue"
name: "_handleOddValue"
nameWithType: "ReaderBasedJsonParser._handleOddValue"
members:
- uid: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int)"
  fullName: "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int i)"
  name: "_handleOddValue(int i)"
  nameWithType: "ReaderBasedJsonParser._handleOddValue(int i)"
  summary: "Method for handling cases where first non-space character of an expected value token is not legal for standard JSON content."
  parameters:
  - name: "i"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected JsonToken _handleOddValue(int i)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
