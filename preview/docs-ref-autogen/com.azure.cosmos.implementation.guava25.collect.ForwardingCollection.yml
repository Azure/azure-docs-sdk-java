### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  id: ForwardingCollection
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.ForwardingCollection()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  langs:
  - java
  name: ForwardingCollection<E>
  nameWithType: ForwardingCollection<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A collection which forwards all its method calls to another collection. Subclasses should override one or more methods to modify the behavior of the backing collection as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingCollection` forward **indiscriminately** to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add" data-throw-if-not-resolved="false">#add</xref> alone **will not** change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll" data-throw-if-not-resolved="false">#addAll</xref>, which can lead to unexpected behavior. In this case, you should override `addAll` as well, either providing your own implementation, or delegating to the provided `standardAddAll` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingCollection`.


    The `standard` methods are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingCollection<E> extends ForwardingObject implements Collection<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  implements:
  - java.util.Collection<E>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  id: <T>standardToArray(T[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: <T>standardToArray(T[] array)
  nameWithType: ForwardingCollection<E>.<T>standardToArray(T[] array)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.<T>standardToArray(T[] array)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*" data-throw-if-not-resolved="false">#toArray(Object[])</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size" data-throw-if-not-resolved="false">#size</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray" data-throw-if-not-resolved="false">#toArray</xref> to forward to this implementation.
  syntax:
    content: protected T[] <T>standardToArray(T[] array)
    parameters:
    - id: array
      type: T[]
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  id: <T>toArray(T[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: <T>toArray(T[] array)
  nameWithType: ForwardingCollection<E>.<T>toArray(T[] array)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.<T>toArray(T[] array)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public T[] <T>toArray(T[] array)
    parameters:
    - id: array
      type: T[]
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.ForwardingCollection()
  id: ForwardingCollection()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: ForwardingCollection()
  nameWithType: ForwardingCollection<E>.ForwardingCollection()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.ForwardingCollection()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.ForwardingCollection*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingCollection()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  id: add(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: add(E element)
  nameWithType: ForwardingCollection<E>.add(E element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.add(E element)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean add(E element)
    parameters:
    - id: element
      type: E
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  id: addAll(java.util.Collection<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: addAll(Collection<? extends E> collection)
  nameWithType: ForwardingCollection<E>.addAll(Collection<? extends E> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.addAll(Collection<? extends E> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean addAll(Collection<? extends E> collection)
    parameters:
    - id: collection
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: clear()
  nameWithType: ForwardingCollection<E>.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.clear()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  id: contains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: contains(Object object)
  nameWithType: ForwardingCollection<E>.contains(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.contains(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean contains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  id: containsAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: containsAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.containsAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.containsAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean containsAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingCollection<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Collection<E> delegate()
    return:
      type: java.util.Collection<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: isEmpty()
  nameWithType: ForwardingCollection<E>.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.isEmpty()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: iterator()
  nameWithType: ForwardingCollection<E>.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.iterator()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: remove(Object object)
  nameWithType: ForwardingCollection<E>.remove(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.remove(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean remove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  id: removeAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: removeAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.removeAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.removeAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean removeAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  id: retainAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: retainAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.retainAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.retainAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean retainAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: size()
  nameWithType: ForwardingCollection<E>.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.size()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  id: standardAddAll(java.util.Collection<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardAddAll(Collection<? extends E> collection)
  nameWithType: ForwardingCollection<E>.standardAddAll(Collection<? extends E> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardAddAll(Collection<? extends E> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll" data-throw-if-not-resolved="false">#addAll</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add" data-throw-if-not-resolved="false">#add</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add" data-throw-if-not-resolved="false">#add</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll" data-throw-if-not-resolved="false">#addAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardAddAll(Collection<? extends E> collection)
    parameters:
    - id: collection
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  id: standardClear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardClear()
  nameWithType: ForwardingCollection<E>.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardClear()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear" data-throw-if-not-resolved="false">#clear</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, using the iterator's `remove` method. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear" data-throw-if-not-resolved="false">#clear</xref> to forward to this implementation.
  syntax:
    content: protected void standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  id: standardContains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardContains(Object object)
  nameWithType: ForwardingCollection<E>.standardContains(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardContains(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains" data-throw-if-not-resolved="false">#contains</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains" data-throw-if-not-resolved="false">#contains</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  id: standardContainsAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardContainsAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.standardContainsAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardContainsAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll" data-throw-if-not-resolved="false">#containsAll</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains" data-throw-if-not-resolved="false">#contains</xref> . If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains" data-throw-if-not-resolved="false">#contains</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll" data-throw-if-not-resolved="false">#containsAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContainsAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  id: standardIsEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardIsEmpty()
  nameWithType: ForwardingCollection<E>.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardIsEmpty()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty" data-throw-if-not-resolved="false">#isEmpty</xref> as `!iterator().hasNext`. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty" data-throw-if-not-resolved="false">#isEmpty</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty" data-throw-if-not-resolved="false">#isEmpty</xref> to forward to this implementation. Alternately, it may be more efficient to implement `isEmpty` as `size() == 0`.
  syntax:
    content: protected boolean standardIsEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  id: standardRemove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardRemove(Object object)
  nameWithType: ForwardingCollection<E>.standardRemove(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRemove(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove" data-throw-if-not-resolved="false">#remove</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, using the iterator's `remove` method. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove" data-throw-if-not-resolved="false">#remove</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  id: standardRemoveAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardRemoveAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.standardRemoveAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRemoveAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, using the iterator's `remove` method. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemoveAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  id: standardRetainAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardRetainAll(Collection<?> collection)
  nameWithType: ForwardingCollection<E>.standardRetainAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRetainAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll" data-throw-if-not-resolved="false">#retainAll</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, using the iterator's `remove` method. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll" data-throw-if-not-resolved="false">#retainAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRetainAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  id: standardToArray()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardToArray()
  nameWithType: ForwardingCollection<E>.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardToArray()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()" data-throw-if-not-resolved="false">#toArray()</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*" data-throw-if-not-resolved="false">#toArray(Object[])</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*" data-throw-if-not-resolved="false">#toArray(Object[])</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray" data-throw-if-not-resolved="false">#toArray</xref> to forward to this implementation.
  syntax:
    content: protected Object[] standardToArray()
    return:
      type: java.lang.Object[]
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  id: standardToString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: standardToString()
  nameWithType: ForwardingCollection<E>.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardToString()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toString" data-throw-if-not-resolved="false">#toString</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toString" data-throw-if-not-resolved="false">#toString</xref> to forward to this implementation.
  syntax:
    content: protected String standardToString()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  id: toArray()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  langs:
  - java
  name: toArray()
  nameWithType: ForwardingCollection<E>.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.toArray()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Object[] toArray()
    return:
      type: java.lang.Object[]
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.ForwardingCollection*
  name: ForwardingCollection
  nameWithType: ForwardingCollection<E>.ForwardingCollection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.ForwardingCollection
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate*
  name: delegate
  nameWithType: ForwardingCollection<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator*
  name: iterator
  nameWithType: ForwardingCollection<E>.iterator
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.iterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size*
  name: size
  nameWithType: ForwardingCollection<E>.size
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.size
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll*
  name: removeAll
  nameWithType: ForwardingCollection<E>.removeAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.removeAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty*
  name: isEmpty
  nameWithType: ForwardingCollection<E>.isEmpty
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.isEmpty
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains*
  name: contains
  nameWithType: ForwardingCollection<E>.contains
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.contains
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add*
  name: add
  nameWithType: ForwardingCollection<E>.add
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.add
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove*
  name: remove
  nameWithType: ForwardingCollection<E>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll*
  name: containsAll
  nameWithType: ForwardingCollection<E>.containsAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.containsAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<? extends E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll*
  name: addAll
  nameWithType: ForwardingCollection<E>.addAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.addAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll*
  name: retainAll
  nameWithType: ForwardingCollection<E>.retainAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.retainAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear*
  name: clear
  nameWithType: ForwardingCollection<E>.clear
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.clear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray*
  name: toArray
  nameWithType: ForwardingCollection<E>.toArray
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.toArray
  package: com.azure.cosmos.implementation.guava25.collect
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains*
  name: standardContains
  nameWithType: ForwardingCollection<E>.standardContains
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardContains
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll*
  name: standardContainsAll
  nameWithType: ForwardingCollection<E>.standardContainsAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardContainsAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll*
  name: standardAddAll
  nameWithType: ForwardingCollection<E>.standardAddAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardAddAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove*
  name: standardRemove
  nameWithType: ForwardingCollection<E>.standardRemove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRemove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll*
  name: standardRemoveAll
  nameWithType: ForwardingCollection<E>.standardRemoveAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRemoveAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll*
  name: standardRetainAll
  nameWithType: ForwardingCollection<E>.standardRetainAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRetainAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear*
  name: standardClear
  nameWithType: ForwardingCollection<E>.standardClear
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardClear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty*
  name: standardIsEmpty
  nameWithType: ForwardingCollection<E>.standardIsEmpty
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardIsEmpty
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString*
  name: standardToString
  nameWithType: ForwardingCollection<E>.standardToString
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardToString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray*
  name: standardToArray
  nameWithType: ForwardingCollection<E>.standardToArray
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardToArray
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  name: ForwardingObject
  nameWithType: ForwardingObject
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  name: ForwardingObject.delegate()
  nameWithType: ForwardingObject.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
