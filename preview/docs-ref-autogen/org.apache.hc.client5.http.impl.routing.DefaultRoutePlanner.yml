### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  id: DefaultRoutePlanner
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.routing
  children:
  - org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner(org.apache.hc.client5.http.SchemePortResolver)
  - org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: DefaultRoutePlanner
  nameWithType: DefaultRoutePlanner
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  type: Class
  package: org.apache.hc.client5.http.impl.routing
  summary: Default implementation of an <xref uid="org.apache.hc.client5.http.routing.HttpRoutePlanner" data-throw-if-not-resolved="false">HttpRoutePlanner</xref>. It will not make use of any Java system properties, nor of system or browser proxy settings.
  syntax:
    content: public class DefaultRoutePlanner implements HttpRoutePlanner
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.routing.HttpRoutePlanner
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner(org.apache.hc.client5.http.SchemePortResolver)
  id: DefaultRoutePlanner(org.apache.hc.client5.http.SchemePortResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  langs:
  - java
  name: DefaultRoutePlanner(SchemePortResolver schemePortResolver)
  nameWithType: DefaultRoutePlanner.DefaultRoutePlanner(SchemePortResolver schemePortResolver)
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner(SchemePortResolver schemePortResolver)
  overload: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner*
  type: Constructor
  package: org.apache.hc.client5.http.impl.routing
  syntax:
    content: public DefaultRoutePlanner(SchemePortResolver schemePortResolver)
    parameters:
    - id: schemePortResolver
      type: org.apache.hc.client5.http.SchemePortResolver
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  id: determineLocalAddress(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  langs:
  - java
  name: determineLocalAddress(HttpHost firstHop, HttpContext context)
  nameWithType: DefaultRoutePlanner.determineLocalAddress(HttpHost firstHop, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress(HttpHost firstHop, HttpContext context)
  overload: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress*
  type: Method
  package: org.apache.hc.client5.http.impl.routing
  summary: This implementation returns null.
  syntax:
    content: protected InetAddress determineLocalAddress(HttpHost firstHop, HttpContext context)
    parameters:
    - id: firstHop
      type: org.apache.hc.core5.http.HttpHost
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.net.InetAddress
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
    description: may be thrown if overridden
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  id: determineProxy(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  langs:
  - java
  name: determineProxy(HttpHost target, HttpContext context)
  nameWithType: DefaultRoutePlanner.determineProxy(HttpHost target, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy(HttpHost target, HttpContext context)
  overload: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy*
  type: Method
  package: org.apache.hc.client5.http.impl.routing
  summary: This implementation returns null.
  syntax:
    content: protected HttpHost determineProxy(HttpHost target, HttpContext context)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: org.apache.hc.core5.http.HttpHost
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
    description: may be thrown if overridden
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  id: determineRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner
  langs:
  - java
  name: determineRoute(HttpHost host, HttpContext context)
  nameWithType: DefaultRoutePlanner.determineRoute(HttpHost host, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute(HttpHost host, HttpContext context)
  overload: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.routing
  summary: Determines the route for the given host.
  syntax:
    content: public final HttpRoute determineRoute(HttpHost host, HttpContext context)
    parameters:
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: org.apache.hc.client5.http.HttpRoute
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: org.apache.hc.client5.http.SchemePortResolver
  name: SchemePortResolver
  nameWithType: SchemePortResolver
  fullName: org.apache.hc.client5.http.SchemePortResolver
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner*
  name: DefaultRoutePlanner
  nameWithType: DefaultRoutePlanner.DefaultRoutePlanner
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.DefaultRoutePlanner
  package: org.apache.hc.client5.http.impl.routing
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.HttpRoute
  name: HttpRoute
  nameWithType: HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute*
  name: determineRoute
  nameWithType: DefaultRoutePlanner.determineRoute
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineRoute
  package: org.apache.hc.client5.http.impl.routing
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy*
  name: determineProxy
  nameWithType: DefaultRoutePlanner.determineProxy
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineProxy
  package: org.apache.hc.client5.http.impl.routing
- uid: java.net.InetAddress
  spec.java:
  - uid: java.net.InetAddress
    name: InetAddress
    fullName: java.net.InetAddress
- uid: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress*
  name: determineLocalAddress
  nameWithType: DefaultRoutePlanner.determineLocalAddress
  fullName: org.apache.hc.client5.http.impl.routing.DefaultRoutePlanner.determineLocalAddress
  package: org.apache.hc.client5.http.impl.routing
- uid: org.apache.hc.client5.http.routing.HttpRoutePlanner
  name: HttpRoutePlanner
  nameWithType: HttpRoutePlanner
  fullName: org.apache.hc.client5.http.routing.HttpRoutePlanner
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
