### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient"
name: "SqlPoolsAsyncClient"
nameWithType: "SqlPoolsAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SqlPoolsAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.get(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.get(String sqlPoolName)"
  name: "get(String sqlPoolName)"
  nameWithType: "SqlPoolsAsyncClient.get(String sqlPoolName)"
  summary: "Get Sql Pool."
  parameters:
  - description: "The Sql Pool name."
    name: "sqlPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SqlPool> get(String sqlPoolName)"
  desc: "Get Sql Pool."
  returns:
    description: "sql Pool on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SqlPool?alt=com.azure.analytics.synapse.artifacts.models.SqlPool&text=SqlPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.getWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.getWithResponse(String sqlPoolName)"
  name: "getWithResponse(String sqlPoolName)"
  nameWithType: "SqlPoolsAsyncClient.getWithResponse(String sqlPoolName)"
  summary: "Get Sql Pool."
  parameters:
  - description: "The Sql Pool name."
    name: "sqlPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SqlPool>> getWithResponse(String sqlPoolName)"
  desc: "Get Sql Pool."
  returns:
    description: "sql Pool along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SqlPool?alt=com.azure.analytics.synapse.artifacts.models.SqlPool&text=SqlPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.list()"
  fullName: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.list()"
  name: "list()"
  nameWithType: "SqlPoolsAsyncClient.list()"
  summary: "List Sql Pools."
  syntax: "public Mono<SqlPoolInfoListResult> list()"
  desc: "List Sql Pools."
  returns:
    description: "sQL pool collection on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SqlPoolInfoListResult?alt=com.azure.analytics.synapse.artifacts.models.SqlPoolInfoListResult&text=SqlPoolInfoListResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.listWithResponse()"
  fullName: "com.azure.analytics.synapse.artifacts.SqlPoolsAsyncClient.listWithResponse()"
  name: "listWithResponse()"
  nameWithType: "SqlPoolsAsyncClient.listWithResponse()"
  summary: "List Sql Pools."
  syntax: "public Mono<Response<SqlPoolInfoListResult>> listWithResponse()"
  desc: "List Sql Pools."
  returns:
    description: "sQL pool collection along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SqlPoolInfoListResult?alt=com.azure.analytics.synapse.artifacts.models.SqlPoolInfoListResult&text=SqlPoolInfoListResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
