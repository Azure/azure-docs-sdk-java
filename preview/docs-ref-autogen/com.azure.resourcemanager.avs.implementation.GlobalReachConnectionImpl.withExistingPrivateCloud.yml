### YamlMime:JavaMember
uid: "com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl.withExistingPrivateCloud*"
fullName: "com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl.withExistingPrivateCloud"
name: "withExistingPrivateCloud"
nameWithType: "GlobalReachConnectionImpl.withExistingPrivateCloud"
members:
- uid: "com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl.withExistingPrivateCloud(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl.withExistingPrivateCloud(String resourceGroupName, String privateCloudName)"
  name: "withExistingPrivateCloud(String resourceGroupName, String privateCloudName)"
  nameWithType: "GlobalReachConnectionImpl.withExistingPrivateCloud(String resourceGroupName, String privateCloudName)"
  summary: "Specifies resourceGroupName, privateCloudName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "privateCloudName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GlobalReachConnectionImpl withExistingPrivateCloud(String resourceGroupName, String privateCloudName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl?alt=com.azure.resourcemanager.avs.implementation.GlobalReachConnectionImpl&text=GlobalReachConnectionImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.avs.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-avs:1.0.0-beta.3
