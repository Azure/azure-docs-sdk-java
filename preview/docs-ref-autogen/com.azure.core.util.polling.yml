### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.polling
  id: polling
  children:
  - com.azure.core.util.polling.Poller
  - com.azure.core.util.polling.PollResponse
  - com.azure.core.util.polling.PollResponse.OperationStatus
  href: com.azure.core.util.polling.yml
  langs:
  - java
  name: com.azure.core.util.polling
  nameWithType: com.azure.core.util.polling
  fullName: com.azure.core.util.polling
  type: Namespace
  source:
    remote:
      path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/package-info.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/util/polling/package-info.java
    startLine: 6
  summary: "<p>Package containing API for Long Running Operations. </p>"
  syntax:
    content: package com.azure.core.util.polling
references:
- uid: com.azure.core.util.polling.Poller
  parent: com.azure.core.util.polling
  href: com.azure.core.util.polling.Poller.yml
  name: Poller<T>
  nameWithType: Poller<T>
  fullName: com.azure.core.util.polling.Poller<T>
  type: Class
  summary: "<p>This class offers API that simplifies the task of executing long-running operations against Azure service. The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> consist of poll operation, cancel operation if supported by Azure service and polling interval. </p>\r\n<p>It provides the following functionality:</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>Querying the current state of long-running operations. </p>\r\n    </li>\r\n    <li>\r\n      <p>Requesting an asynchronous notification for long-running operation's state. </p>\r\n    </li>\r\n    <li>\r\n      <p>Cancelling the long-running operation if cancellation is supported by the service. </p>\r\n    </li>\r\n    <li>\r\n      <p>Triggering a poll operation manually. </p>\r\n    </li>\r\n    <li>\r\n      <p>Enable/Disable auto-polling. </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Auto Polling</b>\r\n</p>\r\n<p>Auto-polling is enabled by-default. It means that the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> starts polling as soon as its instance is created. The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will transparently call the poll operation every polling cycle and track the state of the long-running operation. Azure services can return <xref uid=\"com.azure.core.util.polling.PollResponse.getRetryAfter()\" data-throw-if-not-resolved=\"false\">PollResponse#getRetryAfter()</xref> to override the<code>Poller.pollInterval \r\n    </code> defined in the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref>. The <xref uid=\"com.azure.core.util.polling.Poller.getStatus()\" data-throw-if-not-resolved=\"false\">Poller#getStatus()</xref> represents the status returned by the successful long-running operation at the time the last auto-polling or last manual polling, whichever happened most recently.</p>\r\n<p>\r\n  <b>Disable Auto Polling</b>\r\n</p>\r\n<p>For those scenarios which require manual control of the polling cycle, disable auto-poling by calling<code>setAutoPollingEnabled#false \r\n    </code> and perform manual poll by invoking <xref uid=\"com.azure.core.util.polling.Poller.poll()\" data-throw-if-not-resolved=\"false\">Poller#poll()</xref> function. It will call poll operation once and update the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> with the latest status. </p>\r\n<p>When auto-polling is disabled, the <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will not update its status or other information, unless manual polling is triggered by calling <xref uid=\"com.azure.core.util.polling.Poller.poll()\" data-throw-if-not-resolved=\"false\">Poller#poll()</xref> function.</p>\r\n<p>The <xref uid=\"com.azure.core.util.polling.Poller\" data-throw-if-not-resolved=\"false\">Poller</xref> will stop polling when the long-running operation is complete or it is disabled. The polling is considered complete based on status defined in <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationStatus</xref>.</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>\r\n  <b>Instantiating and Subscribing to Poll Response</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.instantiationAndSubscribe}</p>\r\n<p>\r\n  <b>Wait/Block for Polling to complete</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.block}</p>\r\n<p>\r\n  <b>Disable auto polling and polling manually</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.poller.poll}</p>\r\n<p></p>"
  syntax:
    content: public class Poller<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of poll response value </p>
- uid: com.azure.core.util.polling.PollResponse
  parent: com.azure.core.util.polling
  href: com.azure.core.util.polling.PollResponse.yml
  name: PollResponse<T>
  nameWithType: PollResponse<T>
  fullName: com.azure.core.util.polling.PollResponse<T>
  type: Class
  summary: "<p>PollResponse represents a single response from a service for a long-running polling operation. It provides information such as the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">status</xref> of the long-running operation, any <xref uid=\"com.azure.core.util.polling.PollResponse.getValue()\" data-throw-if-not-resolved=\"false\">value</xref> returned in the poll, as well as other useful information provided by the service.</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.status.value}</p>\r\n<p>\r\n  <b>Code Sample Creating PollResponse Object with custom status</b>\r\n</p>\r\n<p>{ com.azure.core.util.polling.pollresponse.custom.status.value}</p>\r\n<p></p>"
  syntax:
    content: public class PollResponse<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of poll response value.</p>
- uid: com.azure.core.util.polling.PollResponse.OperationStatus
  parent: com.azure.core.util.polling
  href: com.azure.core.util.polling.PollResponse.OperationStatus.yml
  name: PollResponse.OperationStatus
  nameWithType: PollResponse.OperationStatus
  fullName: com.azure.core.util.polling.PollResponse.OperationStatus
  type: Class
  summary: "<p>An enum to represent all possible states that a long-running operation may find itself in. The poll operation is considered complete when the status is one of<code>SUCCESSFULLY_COMPLETED \r\n    </code> ,<code>USER_CANCELLED \r\n    </code> or<code>FAILED \r\n    </code> . </p>"
  syntax:
    content: public class OperationStatus extends ExpandableStringEnum<OperationStatus>
