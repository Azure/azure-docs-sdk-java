### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Joiner.join*"
fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.join"
name: "join"
nameWithType: "Joiner.join"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Iterable<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.join(Iterable<?> parts)"
  name: "join(Iterable<?> parts)"
  nameWithType: "Joiner.join(Iterable<?> parts)"
  summary: "Returns a string containing the string representation of each of `parts`, using the previously configured separator between each."
  parameters:
  - name: "parts"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final String join(Iterable<?> parts)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Object,java.lang.Object,java.lang.Object...)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.join(Object first, Object second, Object[] rest)"
  name: "join(Object first, Object second, Object[] rest)"
  nameWithType: "Joiner.join(Object first, Object second, Object[] rest)"
  summary: "Returns a string containing the string representation of each argument, using the previously configured separator between each."
  parameters:
  - name: "first"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "second"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "rest"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final String join(Object first, Object second, Object[] rest)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Object[])"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.join(Object[] parts)"
  name: "join(Object[] parts)"
  nameWithType: "Joiner.join(Object[] parts)"
  summary: "Returns a string containing the string representation of each of `parts`, using the previously configured separator between each."
  parameters:
  - name: "parts"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final String join(Object[] parts)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.join(java.util.Iterator<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.join(Iterator<?> parts)"
  name: "join(Iterator<?> parts)"
  nameWithType: "Joiner.join(Iterator<?> parts)"
  summary: "Returns a string containing the string representation of each of `parts`, using the previously configured separator between each."
  parameters:
  - name: "parts"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final String join(Iterator<?> parts)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
