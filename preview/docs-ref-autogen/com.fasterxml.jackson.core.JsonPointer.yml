### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonPointer
  id: JsonPointer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonPointer.EMPTY
  - com.fasterxml.jackson.core.JsonPointer.JsonPointer()
  - com.fasterxml.jackson.core.JsonPointer.JsonPointer(java.lang.String,java.lang.String,com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.core.JsonPointer.JsonPointer(java.lang.String,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.core.JsonPointer.SEPARATOR
  - com.fasterxml.jackson.core.JsonPointer._asString
  - com.fasterxml.jackson.core.JsonPointer._constructHead()
  - com.fasterxml.jackson.core.JsonPointer._constructHead(int,com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.core.JsonPointer._head
  - com.fasterxml.jackson.core.JsonPointer._matchingElementIndex
  - com.fasterxml.jackson.core.JsonPointer._matchingPropertyName
  - com.fasterxml.jackson.core.JsonPointer._nextSegment
  - com.fasterxml.jackson.core.JsonPointer._parseQuotedTail(java.lang.String,int)
  - com.fasterxml.jackson.core.JsonPointer._parseTail(java.lang.String)
  - com.fasterxml.jackson.core.JsonPointer.append(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.core.JsonPointer.compile(java.lang.String)
  - com.fasterxml.jackson.core.JsonPointer.empty()
  - com.fasterxml.jackson.core.JsonPointer.equals(java.lang.Object)
  - com.fasterxml.jackson.core.JsonPointer.forPath(com.fasterxml.jackson.core.JsonStreamContext,boolean)
  - com.fasterxml.jackson.core.JsonPointer.getMatchingIndex()
  - com.fasterxml.jackson.core.JsonPointer.getMatchingProperty()
  - com.fasterxml.jackson.core.JsonPointer.hashCode()
  - com.fasterxml.jackson.core.JsonPointer.head()
  - com.fasterxml.jackson.core.JsonPointer.last()
  - com.fasterxml.jackson.core.JsonPointer.matchElement(int)
  - com.fasterxml.jackson.core.JsonPointer.matchProperty(java.lang.String)
  - com.fasterxml.jackson.core.JsonPointer.matches()
  - com.fasterxml.jackson.core.JsonPointer.matchesElement(int)
  - com.fasterxml.jackson.core.JsonPointer.matchesProperty(java.lang.String)
  - com.fasterxml.jackson.core.JsonPointer.mayMatchElement()
  - com.fasterxml.jackson.core.JsonPointer.mayMatchProperty()
  - com.fasterxml.jackson.core.JsonPointer.tail()
  - com.fasterxml.jackson.core.JsonPointer.toString()
  - com.fasterxml.jackson.core.JsonPointer.valueOf(java.lang.String)
  langs:
  - java
  name: JsonPointer
  nameWithType: JsonPointer
  fullName: com.fasterxml.jackson.core.JsonPointer
  type: Class
  package: com.fasterxml.jackson.core
  summary: >-
    Implementation of [JSON Pointer][] specification. Pointer instances can be used to locate logical JSON nodes for things like tree traversal (see <xref uid="com.fasterxml.jackson.core.TreeNode.at*" data-throw-if-not-resolved="false">TreeNode#at</xref>). It may be used in future for filtering of streaming JSON content as well (not implemented yet for 2.3).


    Instances are fully immutable and can be cached, shared between threads.



    [JSON Pointer]: http://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-03
  syntax:
    content: public class JsonPointer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonPointer.EMPTY
  id: EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: EMPTY
  nameWithType: JsonPointer.EMPTY
  fullName: com.fasterxml.jackson.core.JsonPointer.EMPTY
  type: Field
  package: com.fasterxml.jackson.core
  summary: Marker instance used to represent segment that matches current node or position (that is, returns true for <xref uid="com.fasterxml.jackson.core.JsonPointer.matches()" data-throw-if-not-resolved="false">#matches()</xref>).
  syntax:
    content: protected static final JsonPointer EMPTY
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.JsonPointer()
  id: JsonPointer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: JsonPointer()
  nameWithType: JsonPointer.JsonPointer()
  fullName: com.fasterxml.jackson.core.JsonPointer.JsonPointer()
  overload: com.fasterxml.jackson.core.JsonPointer.JsonPointer*
  type: Constructor
  package: com.fasterxml.jackson.core
  summary: Constructor used for creating "empty" instance, used to represent state that matches current node.
  syntax:
    content: protected JsonPointer()
- uid: com.fasterxml.jackson.core.JsonPointer.JsonPointer(java.lang.String,java.lang.String,com.fasterxml.jackson.core.JsonPointer)
  id: JsonPointer(java.lang.String,java.lang.String,com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: JsonPointer(String fullString, String segment, JsonPointer next)
  nameWithType: JsonPointer.JsonPointer(String fullString, String segment, JsonPointer next)
  fullName: com.fasterxml.jackson.core.JsonPointer.JsonPointer(String fullString, String segment, JsonPointer next)
  overload: com.fasterxml.jackson.core.JsonPointer.JsonPointer*
  type: Constructor
  package: com.fasterxml.jackson.core
  summary: Constructor used for creating non-empty Segments
  syntax:
    content: protected JsonPointer(String fullString, String segment, JsonPointer next)
    parameters:
    - id: fullString
      type: java.lang.String
    - id: segment
      type: java.lang.String
    - id: next
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.JsonPointer(java.lang.String,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)
  id: JsonPointer(java.lang.String,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next)
  nameWithType: JsonPointer.JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next)
  fullName: com.fasterxml.jackson.core.JsonPointer.JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next)
  overload: com.fasterxml.jackson.core.JsonPointer.JsonPointer*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next)
    parameters:
    - id: fullString
      type: java.lang.String
    - id: segment
      type: java.lang.String
    - id: matchIndex
      type: int
    - id: next
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.SEPARATOR
  id: SEPARATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: SEPARATOR
  nameWithType: JsonPointer.SEPARATOR
  fullName: com.fasterxml.jackson.core.JsonPointer.SEPARATOR
  type: Field
  package: com.fasterxml.jackson.core
  summary: Character used to separate segments.
  syntax:
    content: public static final char SEPARATOR
    return:
      type: char
- uid: com.fasterxml.jackson.core.JsonPointer._asString
  id: _asString
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _asString
  nameWithType: JsonPointer._asString
  fullName: com.fasterxml.jackson.core.JsonPointer._asString
  type: Field
  package: com.fasterxml.jackson.core
  summary: We will retain representation of the pointer, as a String, so that <xref uid="com.fasterxml.jackson.core.JsonPointer.toString*" data-throw-if-not-resolved="false">#toString</xref> should be as efficient as possible.
  syntax:
    content: protected final String _asString
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonPointer._constructHead()
  id: _constructHead()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _constructHead()
  nameWithType: JsonPointer._constructHead()
  fullName: com.fasterxml.jackson.core.JsonPointer._constructHead()
  overload: com.fasterxml.jackson.core.JsonPointer._constructHead*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonPointer _constructHead()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer._constructHead(int,com.fasterxml.jackson.core.JsonPointer)
  id: _constructHead(int,com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _constructHead(int suffixLength, JsonPointer last)
  nameWithType: JsonPointer._constructHead(int suffixLength, JsonPointer last)
  fullName: com.fasterxml.jackson.core.JsonPointer._constructHead(int suffixLength, JsonPointer last)
  overload: com.fasterxml.jackson.core.JsonPointer._constructHead*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonPointer _constructHead(int suffixLength, JsonPointer last)
    parameters:
    - id: suffixLength
      type: int
    - id: last
      type: com.fasterxml.jackson.core.JsonPointer
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer._head
  id: _head
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _head
  nameWithType: JsonPointer._head
  fullName: com.fasterxml.jackson.core.JsonPointer._head
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Reference from currently matching segment (if any) to node before leaf. Lazily constructed if/as needed.


    NOTE: we'll use \`volatile\` here assuming that this is unlikely to become a performance bottleneck. If it becomes one we can probably just drop it and things still should work (despite warnings as per JMM regarding visibility (and lack thereof) of unguarded changes).
  syntax:
    content: protected volatile JsonPointer _head
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer._matchingElementIndex
  id: _matchingElementIndex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _matchingElementIndex
  nameWithType: JsonPointer._matchingElementIndex
  fullName: com.fasterxml.jackson.core.JsonPointer._matchingElementIndex
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected final int _matchingElementIndex
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonPointer._matchingPropertyName
  id: _matchingPropertyName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _matchingPropertyName
  nameWithType: JsonPointer._matchingPropertyName
  fullName: com.fasterxml.jackson.core.JsonPointer._matchingPropertyName
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected final String _matchingPropertyName
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonPointer._nextSegment
  id: _nextSegment
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _nextSegment
  nameWithType: JsonPointer._nextSegment
  fullName: com.fasterxml.jackson.core.JsonPointer._nextSegment
  type: Field
  package: com.fasterxml.jackson.core
  summary: Reference to rest of the pointer beyond currently matching segment (if any); null if this pointer refers to the matching segment.
  syntax:
    content: protected final JsonPointer _nextSegment
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer._parseQuotedTail(java.lang.String,int)
  id: _parseQuotedTail(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _parseQuotedTail(String input, int i)
  nameWithType: JsonPointer._parseQuotedTail(String input, int i)
  fullName: com.fasterxml.jackson.core.JsonPointer._parseQuotedTail(String input, int i)
  overload: com.fasterxml.jackson.core.JsonPointer._parseQuotedTail*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method called to parse tail of pointer path, when a potentially escaped character has been seen.
  syntax:
    content: protected static JsonPointer _parseQuotedTail(String input, int i)
    parameters:
    - id: input
      type: java.lang.String
      description: Full input for the tail being parsed
    - id: i
      type: int
      description: Offset to character after tilde
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer._parseTail(java.lang.String)
  id: _parseTail(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: _parseTail(String input)
  nameWithType: JsonPointer._parseTail(String input)
  fullName: com.fasterxml.jackson.core.JsonPointer._parseTail(String input)
  overload: com.fasterxml.jackson.core.JsonPointer._parseTail*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected static JsonPointer _parseTail(String input)
    parameters:
    - id: input
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.append(com.fasterxml.jackson.core.JsonPointer)
  id: append(com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: append(JsonPointer tail)
  nameWithType: JsonPointer.append(JsonPointer tail)
  fullName: com.fasterxml.jackson.core.JsonPointer.append(JsonPointer tail)
  overload: com.fasterxml.jackson.core.JsonPointer.append*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Mutant factory method that will return

     *  \`tail\` if \`this\` instance is "empty" pointer, OR
     *  \`this\` instance if \`tail\` is "empty" pointer, OR
     *  Newly constructed <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref> instance that starts with all segments of \`this\`, followed by all segments of \`tail\`.
  syntax:
    content: public JsonPointer append(JsonPointer tail)
    parameters:
    - id: tail
      type: com.fasterxml.jackson.core.JsonPointer
      description: <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref> instance to append to this one, to create a new pointer instance
    return:
      type: com.fasterxml.jackson.core.JsonPointer
      description: Either `this` instance, `tail`, or a newly created combination, as per description above.
- uid: com.fasterxml.jackson.core.JsonPointer.compile(java.lang.String)
  id: compile(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: compile(String input)
  nameWithType: JsonPointer.compile(String input)
  fullName: com.fasterxml.jackson.core.JsonPointer.compile(String input)
  overload: com.fasterxml.jackson.core.JsonPointer.compile*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Factory method that parses given input and construct matching pointer instance, if it represents a valid JSON Pointer: if not, a <xref uid="java.lang.IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> is thrown.'
  syntax:
    content: public static JsonPointer compile(String input)
    parameters:
    - id: input
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonPointer
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: >-
      Thrown if the input does not present a valid JSON Pointer
         expression: currently the only such expression is one that does NOT start with
         a slash ('/').
- uid: com.fasterxml.jackson.core.JsonPointer.empty()
  id: empty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: empty()
  nameWithType: JsonPointer.empty()
  fullName: com.fasterxml.jackson.core.JsonPointer.empty()
  overload: com.fasterxml.jackson.core.JsonPointer.empty*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Accessor for an "empty" expression, that is, one you can get by calling <xref uid="com.fasterxml.jackson.core.JsonPointer.compile*" data-throw-if-not-resolved="false">#compile</xref> with "" (empty String).


    NOTE: this is different from expression for `"/"` which would instead match Object node property with empty String ("") as name.
  syntax:
    content: public static JsonPointer empty()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: equals(Object o)
  nameWithType: JsonPointer.equals(Object o)
  fullName: com.fasterxml.jackson.core.JsonPointer.equals(Object o)
  overload: com.fasterxml.jackson.core.JsonPointer.equals*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonPointer.forPath(com.fasterxml.jackson.core.JsonStreamContext,boolean)
  id: forPath(com.fasterxml.jackson.core.JsonStreamContext,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: forPath(JsonStreamContext context, boolean includeRoot)
  nameWithType: JsonPointer.forPath(JsonStreamContext context, boolean includeRoot)
  fullName: com.fasterxml.jackson.core.JsonPointer.forPath(JsonStreamContext context, boolean includeRoot)
  overload: com.fasterxml.jackson.core.JsonPointer.forPath*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Factory method that will construct a pointer instance that describes path to location given <xref uid="com.fasterxml.jackson.core.JsonStreamContext" data-throw-if-not-resolved="false">JsonStreamContext</xref> points to.
  syntax:
    content: public static JsonPointer forPath(JsonStreamContext context, boolean includeRoot)
    parameters:
    - id: context
      type: com.fasterxml.jackson.core.JsonStreamContext
      description: Context to build pointer expression fot
    - id: includeRoot
      type: boolean
      description: >-
        Whether to include number offset for virtual "root context"
            or not.
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.getMatchingIndex()
  id: getMatchingIndex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: getMatchingIndex()
  nameWithType: JsonPointer.getMatchingIndex()
  fullName: com.fasterxml.jackson.core.JsonPointer.getMatchingIndex()
  overload: com.fasterxml.jackson.core.JsonPointer.getMatchingIndex*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int getMatchingIndex()
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonPointer.getMatchingProperty()
  id: getMatchingProperty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: getMatchingProperty()
  nameWithType: JsonPointer.getMatchingProperty()
  fullName: com.fasterxml.jackson.core.JsonPointer.getMatchingProperty()
  overload: com.fasterxml.jackson.core.JsonPointer.getMatchingProperty*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String getMatchingProperty()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonPointer.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: hashCode()
  nameWithType: JsonPointer.hashCode()
  fullName: com.fasterxml.jackson.core.JsonPointer.hashCode()
  overload: com.fasterxml.jackson.core.JsonPointer.hashCode*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonPointer.head()
  id: head()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: head()
  nameWithType: JsonPointer.head()
  fullName: com.fasterxml.jackson.core.JsonPointer.head()
  overload: com.fasterxml.jackson.core.JsonPointer.head*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Accessor for getting a pointer instance that is identical to this instance except that the last segment has been dropped. For example, for JSON Point "/root/branch/leaf", this method would return pointer "/root/branch" (compared to <xref uid="com.fasterxml.jackson.core.JsonPointer.tail()" data-throw-if-not-resolved="false">#tail()</xref> that would return "/branch/leaf"). For leaf
  syntax:
    content: public JsonPointer head()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.last()
  id: last()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: last()
  nameWithType: JsonPointer.last()
  fullName: com.fasterxml.jackson.core.JsonPointer.last()
  overload: com.fasterxml.jackson.core.JsonPointer.last*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Returns the leaf of current JSON Pointer expression. Leaf is the last non-null segment of current JSON Pointer.
  syntax:
    content: public JsonPointer last()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.matchElement(int)
  id: matchElement(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: matchElement(int index)
  nameWithType: JsonPointer.matchElement(int index)
  fullName: com.fasterxml.jackson.core.JsonPointer.matchElement(int index)
  overload: com.fasterxml.jackson.core.JsonPointer.matchElement*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonPointer matchElement(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.matchProperty(java.lang.String)
  id: matchProperty(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: matchProperty(String name)
  nameWithType: JsonPointer.matchProperty(String name)
  fullName: com.fasterxml.jackson.core.JsonPointer.matchProperty(String name)
  overload: com.fasterxml.jackson.core.JsonPointer.matchProperty*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonPointer matchProperty(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.matches()
  id: matches()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: matches()
  nameWithType: JsonPointer.matches()
  fullName: com.fasterxml.jackson.core.JsonPointer.matches()
  overload: com.fasterxml.jackson.core.JsonPointer.matches*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean matches()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonPointer.matchesElement(int)
  id: matchesElement(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: matchesElement(int index)
  nameWithType: JsonPointer.matchesElement(int index)
  fullName: com.fasterxml.jackson.core.JsonPointer.matchesElement(int index)
  overload: com.fasterxml.jackson.core.JsonPointer.matchesElement*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that may be called to see if the pointer would match array element (of a JSON Array) with given index.
  syntax:
    content: public boolean matchesElement(int index)
    parameters:
    - id: index
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonPointer.matchesProperty(java.lang.String)
  id: matchesProperty(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: matchesProperty(String name)
  nameWithType: JsonPointer.matchesProperty(String name)
  fullName: com.fasterxml.jackson.core.JsonPointer.matchesProperty(String name)
  overload: com.fasterxml.jackson.core.JsonPointer.matchesProperty*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that may be called to see if the pointer would match property (of a JSON Object) with given name.
  syntax:
    content: public boolean matchesProperty(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonPointer.mayMatchElement()
  id: mayMatchElement()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: mayMatchElement()
  nameWithType: JsonPointer.mayMatchElement()
  fullName: com.fasterxml.jackson.core.JsonPointer.mayMatchElement()
  overload: com.fasterxml.jackson.core.JsonPointer.mayMatchElement*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean mayMatchElement()
    return:
      type: boolean
      description: >-
        True if the root selector matches element index (that is, could
         match an element of JSON Array node)
- uid: com.fasterxml.jackson.core.JsonPointer.mayMatchProperty()
  id: mayMatchProperty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: mayMatchProperty()
  nameWithType: JsonPointer.mayMatchProperty()
  fullName: com.fasterxml.jackson.core.JsonPointer.mayMatchProperty()
  overload: com.fasterxml.jackson.core.JsonPointer.mayMatchProperty*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean mayMatchProperty()
    return:
      type: boolean
      description: >-
        True if the root selector matches property name (that is, could
         match field value of JSON Object node)
- uid: com.fasterxml.jackson.core.JsonPointer.tail()
  id: tail()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: tail()
  nameWithType: JsonPointer.tail()
  fullName: com.fasterxml.jackson.core.JsonPointer.tail()
  overload: com.fasterxml.jackson.core.JsonPointer.tail*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Accessor for getting a "sub-pointer", instance where current segment has been removed and pointer includes rest of segments. For matching state, will return null.
  syntax:
    content: public JsonPointer tail()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonPointer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: toString()
  nameWithType: JsonPointer.toString()
  fullName: com.fasterxml.jackson.core.JsonPointer.toString()
  overload: com.fasterxml.jackson.core.JsonPointer.toString*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonPointer.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonPointer
  langs:
  - java
  name: valueOf(String input)
  nameWithType: JsonPointer.valueOf(String input)
  fullName: com.fasterxml.jackson.core.JsonPointer.valueOf(String input)
  overload: com.fasterxml.jackson.core.JsonPointer.valueOf*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Alias for <xref uid="com.fasterxml.jackson.core.JsonPointer.compile*" data-throw-if-not-resolved="false">#compile</xref>; added to make instances automatically deserializable by Jackson databind.
  syntax:
    content: public static JsonPointer valueOf(String input)
    parameters:
    - id: input
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonPointer
references:
- uid: com.fasterxml.jackson.core.JsonPointer.JsonPointer*
  name: JsonPointer
  nameWithType: JsonPointer.JsonPointer
  fullName: com.fasterxml.jackson.core.JsonPointer.JsonPointer
  package: com.fasterxml.jackson.core
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.core.JsonPointer.compile*
  name: compile
  nameWithType: JsonPointer.compile
  fullName: com.fasterxml.jackson.core.JsonPointer.compile
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.valueOf*
  name: valueOf
  nameWithType: JsonPointer.valueOf
  fullName: com.fasterxml.jackson.core.JsonPointer.valueOf
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.empty*
  name: empty
  nameWithType: JsonPointer.empty
  fullName: com.fasterxml.jackson.core.JsonPointer.empty
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext
  name: JsonStreamContext
  nameWithType: JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.JsonPointer.forPath*
  name: forPath
  nameWithType: JsonPointer.forPath
  fullName: com.fasterxml.jackson.core.JsonPointer.forPath
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.matches*
  name: matches
  nameWithType: JsonPointer.matches
  fullName: com.fasterxml.jackson.core.JsonPointer.matches
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.getMatchingProperty*
  name: getMatchingProperty
  nameWithType: JsonPointer.getMatchingProperty
  fullName: com.fasterxml.jackson.core.JsonPointer.getMatchingProperty
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.getMatchingIndex*
  name: getMatchingIndex
  nameWithType: JsonPointer.getMatchingIndex
  fullName: com.fasterxml.jackson.core.JsonPointer.getMatchingIndex
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.mayMatchProperty*
  name: mayMatchProperty
  nameWithType: JsonPointer.mayMatchProperty
  fullName: com.fasterxml.jackson.core.JsonPointer.mayMatchProperty
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.mayMatchElement*
  name: mayMatchElement
  nameWithType: JsonPointer.mayMatchElement
  fullName: com.fasterxml.jackson.core.JsonPointer.mayMatchElement
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.last*
  name: last
  nameWithType: JsonPointer.last
  fullName: com.fasterxml.jackson.core.JsonPointer.last
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.append*
  name: append
  nameWithType: JsonPointer.append
  fullName: com.fasterxml.jackson.core.JsonPointer.append
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.matchesProperty*
  name: matchesProperty
  nameWithType: JsonPointer.matchesProperty
  fullName: com.fasterxml.jackson.core.JsonPointer.matchesProperty
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.matchProperty*
  name: matchProperty
  nameWithType: JsonPointer.matchProperty
  fullName: com.fasterxml.jackson.core.JsonPointer.matchProperty
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.matchesElement*
  name: matchesElement
  nameWithType: JsonPointer.matchesElement
  fullName: com.fasterxml.jackson.core.JsonPointer.matchesElement
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.matchElement*
  name: matchElement
  nameWithType: JsonPointer.matchElement
  fullName: com.fasterxml.jackson.core.JsonPointer.matchElement
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.tail*
  name: tail
  nameWithType: JsonPointer.tail
  fullName: com.fasterxml.jackson.core.JsonPointer.tail
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.head*
  name: head
  nameWithType: JsonPointer.head
  fullName: com.fasterxml.jackson.core.JsonPointer.head
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.toString*
  name: toString
  nameWithType: JsonPointer.toString
  fullName: com.fasterxml.jackson.core.JsonPointer.toString
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer.hashCode*
  name: hashCode
  nameWithType: JsonPointer.hashCode
  fullName: com.fasterxml.jackson.core.JsonPointer.hashCode
  package: com.fasterxml.jackson.core
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.JsonPointer.equals*
  name: equals
  nameWithType: JsonPointer.equals
  fullName: com.fasterxml.jackson.core.JsonPointer.equals
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer._parseTail*
  name: _parseTail
  nameWithType: JsonPointer._parseTail
  fullName: com.fasterxml.jackson.core.JsonPointer._parseTail
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer._parseQuotedTail*
  name: _parseQuotedTail
  nameWithType: JsonPointer._parseQuotedTail
  fullName: com.fasterxml.jackson.core.JsonPointer._parseQuotedTail
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer._constructHead*
  name: _constructHead
  nameWithType: JsonPointer._constructHead
  fullName: com.fasterxml.jackson.core.JsonPointer._constructHead
  package: com.fasterxml.jackson.core
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
