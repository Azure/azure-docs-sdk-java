### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonInclude.Value"
fullName: "com.fasterxml.jackson.annotation.JsonInclude.Value"
name: "JsonInclude.Value"
nameWithType: "JsonInclude.Value"
summary: "Helper class used to contain information from a single <xref uid=\"com.fasterxml.jackson.annotation.JsonInclude\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonInclude\"></xref> annotation."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class JsonInclude.Value implements JacksonAnnotationValue<JsonInclude>, Serializable"
constructors:
- "com.fasterxml.jackson.annotation.JsonInclude.Value.Value(com.fasterxml.jackson.annotation.JsonInclude)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.Value(com.fasterxml.jackson.annotation.JsonInclude.Include,com.fasterxml.jackson.annotation.JsonInclude.Include,java.lang.Class<?>,java.lang.Class<?>)"
fields:
- "com.fasterxml.jackson.annotation.JsonInclude.Value.EMPTY"
- "com.fasterxml.jackson.annotation.JsonInclude.Value._contentFilter"
- "com.fasterxml.jackson.annotation.JsonInclude.Value._contentInclusion"
- "com.fasterxml.jackson.annotation.JsonInclude.Value._valueFilter"
- "com.fasterxml.jackson.annotation.JsonInclude.Value._valueInclusion"
methods:
- "com.fasterxml.jackson.annotation.JsonInclude.Value.construct(com.fasterxml.jackson.annotation.JsonInclude.Include,com.fasterxml.jackson.annotation.JsonInclude.Include)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.construct(com.fasterxml.jackson.annotation.JsonInclude.Include,com.fasterxml.jackson.annotation.JsonInclude.Include,java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.empty()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.equals(java.lang.Object)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.from(com.fasterxml.jackson.annotation.JsonInclude)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.getContentFilter()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.getContentInclusion()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.getValueFilter()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.getValueInclusion()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.hashCode()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.merge(com.fasterxml.jackson.annotation.JsonInclude.Value,com.fasterxml.jackson.annotation.JsonInclude.Value)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.mergeAll(com.fasterxml.jackson.annotation.JsonInclude.Value...)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.readResolve()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.toString()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.valueFor()"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.withContentFilter(java.lang.Class<?>)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.withContentInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.withOverrides(com.fasterxml.jackson.annotation.JsonInclude.Value)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.withValueFilter(java.lang.Class<?>)"
- "com.fasterxml.jackson.annotation.JsonInclude.Value.withValueInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.annotation.JacksonAnnotationValue?alt=com.fasterxml.jackson.annotation.JacksonAnnotationValue&text=JacksonAnnotationValue\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.annotation.JsonInclude?alt=com.fasterxml.jackson.annotation.JsonInclude&text=JsonInclude\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
