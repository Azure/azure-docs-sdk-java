### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  id: Base
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype
  children:
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base()
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: PolymorphicTypeValidator.Base
  nameWithType: PolymorphicTypeValidator.Base
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  type: Class
  package: com.fasterxml.jackson.databind.jsontype
  summary: Shared base class with partial implementation (with all validation calls returning <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>) and convenience methods for indicating failure reasons. Use of this base class is strongly recommended over directly implement
  syntax:
    content: public abstract static class PolymorphicTypeValidator.Base extends PolymorphicTypeValidator implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base()
  id: Base()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  langs:
  - java
  name: Base()
  nameWithType: PolymorphicTypeValidator.Base.Base()
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base()
  overload: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype
  syntax:
    content: public Base()
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  id: validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  langs:
  - java
  name: validateBaseType(MapperConfig<?> config, JavaType baseType)
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?> config, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?> config, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: Method called when a property with polymorphic value is encountered, and a `TypeResolverBuilder` is needed. Intent is to allow early determination of cases where subtyping is completely denied (for example for security reasons), or, conversely, allowed for allow subtypes (when base type guarantees that all subtypes are known to be safe). Check can be thought of as both optimization (for latter case) and eager-fail (for former case) to give better feedback.
  syntax:
    content: public PolymorphicTypeValidator.Validity validateBaseType(MapperConfig<?> config, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  langs:
  - java
  name: validateSubClassName(MapperConfig<?> config, JavaType baseType, String subClassName)
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?> config, JavaType baseType, String subClassName)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?> config, JavaType baseType, String subClassName)
  overload: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: >-
    Method called after intended class name for subtype has been read (and in case of minimal class name, expanded to fully-qualified class name) but before attempt is made to look up actual <xref uid="java.lang.Class" data-throw-if-not-resolved="false">java.lang.Class</xref> or <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>. Validator may be able to determine validity of eventual type (and return <xref uid="" data-throw-if-not-resolved="false">Validity#ALLOWED</xref> or <xref uid="" data-throw-if-not-resolved="false">Validity#DENIED</xref>) or, if not able to, can defer validation to actual resolved type by returning <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>.


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubClassName(MapperConfig<?> config, JavaType baseType, String subClassName)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subClassName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  langs:
  - java
  name: validateSubType(MapperConfig<?> config, JavaType baseType, JavaType subType)
  nameWithType: PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?> config, JavaType baseType, JavaType subType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?> config, JavaType baseType, JavaType subType)
  overload: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype
  summary: >-
    Method called after class name has been resolved to actual type, in cases where previous call to <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName*" data-throw-if-not-resolved="false">#validateSubClassName</xref> returned <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>. Validator should be able to determine validity and return appropriate <xref uid="" data-throw-if-not-resolved="false">Validity</xref> value, although it may also


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubType(MapperConfig<?> config, JavaType baseType, JavaType subType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base*
  name: Base
  nameWithType: PolymorphicTypeValidator.Base.Base
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.Base
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  name: PolymorphicTypeValidator.Validity
  nameWithType: PolymorphicTypeValidator.Validity
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType*
  name: validateBaseType
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName*
  name: validateSubClassName
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType*
  name: validateSubType
  nameWithType: PolymorphicTypeValidator.Base.validateSubType
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType
  package: com.fasterxml.jackson.databind.jsontype
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  name: PolymorphicTypeValidator
  nameWithType: PolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.validateBaseType(MapperConfig<?>,JavaType)
  nameWithType: PolymorphicTypeValidator.validateBaseType(MapperConfig<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: PolymorphicTypeValidator.validateSubClassName(MapperConfig<?>,JavaType,String)
  nameWithType: PolymorphicTypeValidator.validateSubClassName(MapperConfig<?>,JavaType,String)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.validateSubType(MapperConfig<?>,JavaType,JavaType)
  nameWithType: PolymorphicTypeValidator.validateSubType(MapperConfig<?>,JavaType,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.validateBaseType(MapperConfig
  nameWithType: PolymorphicTypeValidator.validateBaseType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: ?>,JavaType,String)
  nameWithType: ?>,JavaType,String)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.validateSubClassName(MapperConfig
  nameWithType: PolymorphicTypeValidator.validateSubClassName(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.validateSubType(MapperConfig
  nameWithType: PolymorphicTypeValidator.validateSubType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType,JavaType)
  nameWithType: ?>,JavaType,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
