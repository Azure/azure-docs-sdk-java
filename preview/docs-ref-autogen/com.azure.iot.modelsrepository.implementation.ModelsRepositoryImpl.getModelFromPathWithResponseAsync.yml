### YamlMime:JavaMember
uid: "com.azure.iot.modelsrepository.implementation.ModelsRepositoryImpl.getModelFromPathWithResponseAsync*"
fullName: "com.azure.iot.modelsrepository.implementation.ModelsRepositoryImpl.getModelFromPathWithResponseAsync"
name: "getModelFromPathWithResponseAsync"
nameWithType: "ModelsRepositoryImpl.getModelFromPathWithResponseAsync"
members:
- uid: "com.azure.iot.modelsrepository.implementation.ModelsRepositoryImpl.getModelFromPathWithResponseAsync(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.iot.modelsrepository.implementation.ModelsRepositoryImpl.getModelFromPathWithResponseAsync(String path, Context context)"
  name: "getModelFromPathWithResponseAsync(String path, Context context)"
  nameWithType: "ModelsRepositoryImpl.getModelFromPathWithResponseAsync(String path, Context context)"
  summary: "Retrieves a dtmi model. Status codes: \\* 200 OK \\* 400 Bad Request \\* InvalidArgument"
  parameters:
  - description: "The path of the dtmi. The id is unique within the service and case sensitive."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<byte[]> getModelFromPathWithResponseAsync(String path, Context context)"
  returns:
    description: "any object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "method"
metadata: {}
package: "com.azure.iot.modelsrepository.implementation"
artifact: com.azure:azure-iot-modelsrepository:1.0.0-beta.1
