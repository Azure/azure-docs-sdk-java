### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner"
fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner"
name: "PeeringServiceLocationInner"
nameWithType: "PeeringServiceLocationInner"
summary: "The peering service location."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PeeringServiceLocationInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.PeeringServiceLocationInner()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.PeeringServiceLocationInner()"
  name: "PeeringServiceLocationInner()"
  nameWithType: "PeeringServiceLocationInner.PeeringServiceLocationInner()"
  syntax: "public PeeringServiceLocationInner()"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.azureRegion()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.azureRegion()"
  name: "azureRegion()"
  nameWithType: "PeeringServiceLocationInner.azureRegion()"
  summary: "Get the azure<wbr>Region property: Azure region for the location."
  syntax: "public String azureRegion()"
  desc: "Get the azureRegion property: Azure region for the location."
  returns:
    description: "the azureRegion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.country()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.country()"
  name: "country()"
  nameWithType: "PeeringServiceLocationInner.country()"
  summary: "Get the country property: Country of the customer."
  syntax: "public String country()"
  desc: "Get the country property: Country of the customer."
  returns:
    description: "the country value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.state()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.state()"
  name: "state()"
  nameWithType: "PeeringServiceLocationInner.state()"
  summary: "Get the state property: State of the customer."
  syntax: "public String state()"
  desc: "Get the state property: State of the customer."
  returns:
    description: "the state value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.validate()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.validate()"
  name: "validate()"
  nameWithType: "PeeringServiceLocationInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withAzureRegion(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withAzureRegion(String azureRegion)"
  name: "withAzureRegion(String azureRegion)"
  nameWithType: "PeeringServiceLocationInner.withAzureRegion(String azureRegion)"
  summary: "Set the azure<wbr>Region property: Azure region for the location."
  parameters:
  - description: "the azureRegion value to set."
    name: "azureRegion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceLocationInner withAzureRegion(String azureRegion)"
  desc: "Set the azureRegion property: Azure region for the location."
  returns:
    description: "the PeeringServiceLocationInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner&text=PeeringServiceLocationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withCountry(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withCountry(String country)"
  name: "withCountry(String country)"
  nameWithType: "PeeringServiceLocationInner.withCountry(String country)"
  summary: "Set the country property: Country of the customer."
  parameters:
  - description: "the country value to set."
    name: "country"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceLocationInner withCountry(String country)"
  desc: "Set the country property: Country of the customer."
  returns:
    description: "the PeeringServiceLocationInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner&text=PeeringServiceLocationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withState(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner.withState(String state)"
  name: "withState(String state)"
  nameWithType: "PeeringServiceLocationInner.withState(String state)"
  summary: "Set the state property: State of the customer."
  parameters:
  - description: "the state value to set."
    name: "state"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceLocationInner withState(String state)"
  desc: "Set the state property: State of the customer."
  returns:
    description: "the PeeringServiceLocationInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceLocationInner&text=PeeringServiceLocationInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The peering service location."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
