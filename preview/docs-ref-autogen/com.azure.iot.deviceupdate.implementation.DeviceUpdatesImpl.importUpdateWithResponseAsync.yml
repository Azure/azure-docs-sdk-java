### YamlMime:JavaMember
uid: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync*"
fullName: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync"
name: "importUpdateWithResponseAsync"
nameWithType: "DeviceUpdatesImpl.importUpdateWithResponseAsync"
members:
- uid: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions)"
  name: "importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdatesImpl.importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions)"
  summary: "Import new update version.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | --------------------- |\n    | Name       | Type   | Required | Description           |\n    | action     | String | Yes      | Import update action. |\n    | apiVersion | String | Yes      | Api Version           |\n\n**Request Body Schema**\n\n```java\n[\n     {\n         importManifest: {\n             url: String\n             sizeInBytes: long\n             hashes: {\n                 String: String\n             }\n         }\n         friendlyName: String\n         files: [\n             {\n                 filename: String\n                 url: String\n             }\n         ]\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n{\n     updateId: {\n         provider: String\n         name: String\n         version: String\n     }\n     description: String\n     friendlyName: String\n     isDeployable: Boolean\n     updateType: String\n     installedCriteria: String\n     compatibility: [\n         {\n             String: String\n         }\n     ]\n     instructions: {\n         steps: [\n             {\n                 type: String(Inline/Reference)\n                 description: String\n                 handler: String\n                 handlerProperties: Object\n                 files: [\n                     String\n                 ]\n                 updateId: (recursive schema, see updateId above)\n             }\n         ]\n     }\n     referencedBy: [\n         (recursive schema, see above)\n     ]\n     scanResult: String\n     manifestVersion: String\n     importedDateTime: String\n     createdDateTime: String\n     etag: String\n }\n```"
  parameters:
  - description: "The update to be imported."
    name: "updateToImport"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions)"
  returns:
    description: "update metadata along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.iot.deviceupdate.implementation.DeviceUpdatesImpl.importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions, Context context)"
  name: "importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions, Context context)"
  nameWithType: "DeviceUpdatesImpl.importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions, Context context)"
  summary: "Import new update version.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | --------------------- |\n    | Name       | Type   | Required | Description           |\n    | action     | String | Yes      | Import update action. |\n    | apiVersion | String | Yes      | Api Version           |\n\n**Request Body Schema**\n\n```java\n[\n     {\n         importManifest: {\n             url: String\n             sizeInBytes: long\n             hashes: {\n                 String: String\n             }\n         }\n         friendlyName: String\n         files: [\n             {\n                 filename: String\n                 url: String\n             }\n         ]\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n{\n     updateId: {\n         provider: String\n         name: String\n         version: String\n     }\n     description: String\n     friendlyName: String\n     isDeployable: Boolean\n     updateType: String\n     installedCriteria: String\n     compatibility: [\n         {\n             String: String\n         }\n     ]\n     instructions: {\n         steps: [\n             {\n                 type: String(Inline/Reference)\n                 description: String\n                 handler: String\n                 handlerProperties: Object\n                 files: [\n                     String\n                 ]\n                 updateId: (recursive schema, see updateId above)\n             }\n         ]\n     }\n     referencedBy: [\n         (recursive schema, see above)\n     ]\n     scanResult: String\n     manifestVersion: String\n     importedDateTime: String\n     createdDateTime: String\n     etag: String\n }\n```"
  parameters:
  - description: "The update to be imported."
    name: "updateToImport"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> importUpdateWithResponseAsync(BinaryData updateToImport, RequestOptions requestOptions, Context context)"
  returns:
    description: "update metadata along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.iot.deviceupdate.implementation"
artifact: com.azure:azure-iot-deviceupdate:1.0.0-beta.2
