### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.io.UTF32Reader
  id: UTF32Reader
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io
  children:
  - com.fasterxml.jackson.core.io.UTF32Reader.LAST_VALID_UNICODE_CHAR
  - com.fasterxml.jackson.core.io.UTF32Reader.NC
  - com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)
  - com.fasterxml.jackson.core.io.UTF32Reader._bigEndian
  - com.fasterxml.jackson.core.io.UTF32Reader._buffer
  - com.fasterxml.jackson.core.io.UTF32Reader._byteCount
  - com.fasterxml.jackson.core.io.UTF32Reader._charCount
  - com.fasterxml.jackson.core.io.UTF32Reader._context
  - com.fasterxml.jackson.core.io.UTF32Reader._in
  - com.fasterxml.jackson.core.io.UTF32Reader._length
  - com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers
  - com.fasterxml.jackson.core.io.UTF32Reader._ptr
  - com.fasterxml.jackson.core.io.UTF32Reader._surrogate
  - com.fasterxml.jackson.core.io.UTF32Reader._tmpBuf
  - com.fasterxml.jackson.core.io.UTF32Reader.close()
  - com.fasterxml.jackson.core.io.UTF32Reader.read()
  - com.fasterxml.jackson.core.io.UTF32Reader.read(char[],int,int)
  langs:
  - java
  name: UTF32Reader
  nameWithType: UTF32Reader
  fullName: com.fasterxml.jackson.core.io.UTF32Reader
  type: Class
  package: com.fasterxml.jackson.core.io
  summary: Since JDK does not come with UTF-32/UCS-4, let's implement a simple decoder to use.
  syntax:
    content: public class UTF32Reader extends Reader
  inheritance:
  - java.lang.Object
  - java.io.Reader
  inheritedMembers:
  - java.io.Reader.close()
  - java.io.Reader.mark(int)
  - java.io.Reader.markSupported()
  - java.io.Reader.nullReader()
  - java.io.Reader.read()
  - java.io.Reader.read(char[])
  - java.io.Reader.read(char[],int,int)
  - java.io.Reader.read(java.nio.CharBuffer)
  - java.io.Reader.ready()
  - java.io.Reader.reset()
  - java.io.Reader.skip(long)
  - java.io.Reader.transferTo(java.io.Writer)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.io.UTF32Reader.LAST_VALID_UNICODE_CHAR
  id: LAST_VALID_UNICODE_CHAR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: LAST_VALID_UNICODE_CHAR
  nameWithType: UTF32Reader.LAST_VALID_UNICODE_CHAR
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.LAST_VALID_UNICODE_CHAR
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: JSON actually limits available Unicode range in the high end to the same as xml (to basically limit UTF-8 max byte sequence length to 4)
  syntax:
    content: protected static final int LAST_VALID_UNICODE_CHAR
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.UTF32Reader.NC
  id: NC
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: NC
  nameWithType: UTF32Reader.NC
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.NC
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected static final char NC
    return:
      type: char
- uid: com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)
  id: UTF32Reader(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: UTF32Reader(IOContext ctxt, InputStream in, byte[] buf, int ptr, int len, boolean isBigEndian)
  nameWithType: UTF32Reader.UTF32Reader(IOContext ctxt, InputStream in, byte[] buf, int ptr, int len, boolean isBigEndian)
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader(IOContext ctxt, InputStream in, byte[] buf, int ptr, int len, boolean isBigEndian)
  overload: com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader*
  type: Constructor
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public UTF32Reader(IOContext ctxt, InputStream in, byte[] buf, int ptr, int len, boolean isBigEndian)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: in
      type: java.io.InputStream
    - id: buf
      type: byte[]
    - id: ptr
      type: int
    - id: len
      type: int
    - id: isBigEndian
      type: boolean
- uid: com.fasterxml.jackson.core.io.UTF32Reader._bigEndian
  id: _bigEndian
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _bigEndian
  nameWithType: UTF32Reader._bigEndian
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._bigEndian
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected final boolean _bigEndian
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.io.UTF32Reader._buffer
  id: _buffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _buffer
  nameWithType: UTF32Reader._buffer
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._buffer
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected byte[] _buffer
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.io.UTF32Reader._byteCount
  id: _byteCount
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _byteCount
  nameWithType: UTF32Reader._byteCount
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._byteCount
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Total read byte count; used for error reporting purposes
  syntax:
    content: protected int _byteCount
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.UTF32Reader._charCount
  id: _charCount
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _charCount
  nameWithType: UTF32Reader._charCount
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._charCount
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Total read character count; used for error reporting purposes
  syntax:
    content: protected int _charCount
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.UTF32Reader._context
  id: _context
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _context
  nameWithType: UTF32Reader._context
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._context
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected final IOContext _context
    return:
      type: com.fasterxml.jackson.core.io.IOContext
- uid: com.fasterxml.jackson.core.io.UTF32Reader._in
  id: _in
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _in
  nameWithType: UTF32Reader._in
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._in
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected InputStream _in
    return:
      type: java.io.InputStream
- uid: com.fasterxml.jackson.core.io.UTF32Reader._length
  id: _length
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _length
  nameWithType: UTF32Reader._length
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._length
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected int _length
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers
  id: _managedBuffers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _managedBuffers
  nameWithType: UTF32Reader._managedBuffers
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._managedBuffers
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected final boolean _managedBuffers
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.io.UTF32Reader._ptr
  id: _ptr
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _ptr
  nameWithType: UTF32Reader._ptr
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._ptr
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected int _ptr
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.UTF32Reader._surrogate
  id: _surrogate
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _surrogate
  nameWithType: UTF32Reader._surrogate
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._surrogate
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Although input is fine with full Unicode set, Java still uses 16-bit chars, so we may have to split high-order chars into surrogate pairs.
  syntax:
    content: protected char _surrogate
    return:
      type: char
- uid: com.fasterxml.jackson.core.io.UTF32Reader._tmpBuf
  id: _tmpBuf
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: _tmpBuf
  nameWithType: UTF32Reader._tmpBuf
  fullName: com.fasterxml.jackson.core.io.UTF32Reader._tmpBuf
  type: Field
  package: com.fasterxml.jackson.core.io
  syntax:
    content: protected char[] _tmpBuf
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.io.UTF32Reader.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: close()
  nameWithType: UTF32Reader.close()
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.close()
  overload: com.fasterxml.jackson.core.io.UTF32Reader.close*
  type: Method
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.io.UTF32Reader.read()
  id: read()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: read()
  nameWithType: UTF32Reader.read()
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.read()
  overload: com.fasterxml.jackson.core.io.UTF32Reader.read*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Although this method is implemented by the base class, AND it should never be called by main code, let's still implement it bit more efficiently just in case
  syntax:
    content: public int read()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.io.UTF32Reader.read(char[],int,int)
  id: read(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.UTF32Reader
  langs:
  - java
  name: read(char[] cbuf, int start, int len)
  nameWithType: UTF32Reader.read(char[] cbuf, int start, int len)
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.read(char[] cbuf, int start, int len)
  overload: com.fasterxml.jackson.core.io.UTF32Reader.read*
  type: Method
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public int read(char[] cbuf, int start, int len)
    parameters:
    - id: cbuf
      type: char[]
    - id: start
      type: int
    - id: len
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader*
  name: UTF32Reader
  nameWithType: UTF32Reader.UTF32Reader
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.UTF32Reader
  package: com.fasterxml.jackson.core.io
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.io.UTF32Reader.close*
  name: close
  nameWithType: UTF32Reader.close
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.close
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.io.UTF32Reader.read*
  name: read
  nameWithType: UTF32Reader.read
  fullName: com.fasterxml.jackson.core.io.UTF32Reader.read
  package: com.fasterxml.jackson.core.io
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: java.io.Reader
  name: Reader
  nameWithType: Reader
  fullName: java.io.Reader
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.io.Reader.mark(int)
  name: Reader.mark(int)
  nameWithType: Reader.mark(int)
  fullName: java.io.Reader.mark(int)
- uid: java.io.Reader.read(char[])
  name: Reader.read(char[])
  nameWithType: Reader.read(char[])
  fullName: java.io.Reader.read(char[])
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.io.Reader.transferTo(java.io.Writer)
  name: Reader.transferTo(Writer)
  nameWithType: Reader.transferTo(Writer)
  fullName: java.io.Reader.transferTo(java.io.Writer)
- uid: java.io.Reader.ready()
  name: Reader.ready()
  nameWithType: Reader.ready()
  fullName: java.io.Reader.ready()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.io.Reader.nullReader()
  name: Reader.nullReader()
  nameWithType: Reader.nullReader()
  fullName: java.io.Reader.nullReader()
- uid: java.io.Reader.close()
  name: Reader.close()
  nameWithType: Reader.close()
  fullName: java.io.Reader.close()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.io.Reader.read(java.nio.CharBuffer)
  name: Reader.read(CharBuffer)
  nameWithType: Reader.read(CharBuffer)
  fullName: java.io.Reader.read(java.nio.CharBuffer)
- uid: java.io.Reader.read()
  name: Reader.read()
  nameWithType: Reader.read()
  fullName: java.io.Reader.read()
- uid: java.io.Reader.reset()
  name: Reader.reset()
  nameWithType: Reader.reset()
  fullName: java.io.Reader.reset()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.io.Reader.skip(long)
  name: Reader.skip(long)
  nameWithType: Reader.skip(long)
  fullName: java.io.Reader.skip(long)
- uid: java.io.Reader.markSupported()
  name: Reader.markSupported()
  nameWithType: Reader.markSupported()
  fullName: java.io.Reader.markSupported()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.io.Reader.read(char[],int,int)
  name: Reader.read(char[],int,int)
  nameWithType: Reader.read(char[],int,int)
  fullName: java.io.Reader.read(char[],int,int)
