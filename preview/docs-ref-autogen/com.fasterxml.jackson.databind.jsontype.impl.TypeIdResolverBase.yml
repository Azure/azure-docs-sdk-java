### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  id: TypeIdResolverBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._baseType
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._typeFactory
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
  langs:
  - java
  name: TypeIdResolverBase
  nameWithType: TypeIdResolverBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: >-
    Partial base implementation of <xref uid="com.fasterxml.jackson.databind.jsontype.TypeIdResolver" data-throw-if-not-resolved="false">TypeIdResolver</xref>: all custom implementations are **strongly** recommended to extend this class, instead of directly implementing <xref uid="com.fasterxml.jackson.databind.jsontype.TypeIdResolver" data-throw-if-not-resolved="false">TypeIdResolver</xref>. Note that ALL sub-class need to re-implement <xref uid="com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)" data-throw-if-not-resolved="false">#typeFromId(DatabindContext, String)</xref> method; otherwise implementation will not work.


    Note that instances created to be constructed from annotations (<xref uid="com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver</xref>) are always created using no-arguments constructor; protected constructor is only used sub-classes.
  syntax:
    content: public abstract class TypeIdResolverBase implements TypeIdResolver
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase()
  id: TypeIdResolverBase()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: TypeIdResolverBase()
  nameWithType: TypeIdResolverBase.TypeIdResolverBase()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeIdResolverBase()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
  id: TypeIdResolverBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: TypeIdResolverBase(JavaType baseType, TypeFactory typeFactory)
  nameWithType: TypeIdResolverBase.TypeIdResolverBase(JavaType baseType, TypeFactory typeFactory)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase(JavaType baseType, TypeFactory typeFactory)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeIdResolverBase(JavaType baseType, TypeFactory typeFactory)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: typeFactory
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._baseType
  id: _baseType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: _baseType
  nameWithType: TypeIdResolverBase._baseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._baseType
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Common base type for all polymorphic instances handled.
  syntax:
    content: protected final JavaType _baseType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._typeFactory
  id: _typeFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: _typeFactory
  nameWithType: TypeIdResolverBase._typeFactory
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._typeFactory
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final TypeFactory _typeFactory
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds()
  id: getDescForKnownTypeIds()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: getDescForKnownTypeIds()
  nameWithType: TypeIdResolverBase.getDescForKnownTypeIds()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method used to get a simple description of all known type ids, for use in error messages.
  syntax:
    content: public String getDescForKnownTypeIds()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType()
  id: idFromBaseType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: idFromBaseType()
  nameWithType: TypeIdResolverBase.idFromBaseType()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method that can be called to figure out type id to use for instances of base type (declared type of property). This is usually only used for fallback handling, for cases where real type information is not available for some reason.
  syntax:
    content: public String idFromBaseType()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init(com.fasterxml.jackson.databind.JavaType)
  id: init(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: init(JavaType bt)
  nameWithType: TypeIdResolverBase.init(JavaType bt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init(JavaType bt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method that will be called once before any type resolution calls; used to initialize instance with configuration. This is necessary since instances may be created via reflection, without ability to call specific constructor to pass in configuration settings.
  syntax:
    content: public void init(JavaType bt)
    parameters:
    - id: bt
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
  id: typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
  langs:
  - java
  name: typeFromId(DatabindContext context, String id)
  nameWithType: TypeIdResolverBase.typeFromId(DatabindContext context, String id)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId(DatabindContext context, String id)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to resolve type from given type identifier.
  syntax:
    content: public JavaType typeFromId(DatabindContext context, String id)
    parameters:
    - id: context
      type: com.fasterxml.jackson.databind.DatabindContext
    - id: id
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase*
  name: TypeIdResolverBase
  nameWithType: TypeIdResolverBase.TypeIdResolverBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.TypeIdResolverBase
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init*
  name: init
  nameWithType: TypeIdResolverBase.init
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.init
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType*
  name: idFromBaseType
  nameWithType: TypeIdResolverBase.idFromBaseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.idFromBaseType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.DatabindContext
  name: DatabindContext
  nameWithType: DatabindContext
  fullName: com.fasterxml.jackson.databind.DatabindContext
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId*
  name: typeFromId
  nameWithType: TypeIdResolverBase.typeFromId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.typeFromId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds*
  name: getDescForKnownTypeIds
  nameWithType: TypeIdResolverBase.getDescForKnownTypeIds
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase.getDescForKnownTypeIds
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
