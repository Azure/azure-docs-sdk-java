### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.getByteValue*"
fullName: "com.fasterxml.jackson.core.JsonParser.getByteValue"
name: "getByteValue"
nameWithType: "JsonParser.getByteValue"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.getByteValue()"
  fullName: "com.fasterxml.jackson.core.JsonParser.getByteValue()"
  name: "getByteValue()"
  nameWithType: "JsonParser.getByteValue()"
  summary: "Numeric accessor that can be called when the current token is of type <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_INT\"></xref> and it can be expressed as a value of Java byte primitive type. Note that in addition to \"natural\" input range of `[-128, 127]`, this also allows \"unsigned 8-bit byte\" values `[128, 255]`: but for this range value will be translated by truncation, leading to sign change.\n\nIt can also be called for <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_FLOAT\"></xref>; if so, it is equivalent to calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.getDoubleValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getDoubleValue\"></xref> and then casting; except for possible overflow/underflow exception.\n\nNote: if the resulting integer value falls outside range of `[-128, 255]`, a <xref uid=\"com.fasterxml.jackson.core.exc.InputCoercionException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputCoercionException\"></xref> will be thrown to indicate numeric overflow/underflow."
  syntax: "public byte getByteValue()"
  exceptions:
  - description: "for low-level read issues, or\n   <xref uid=\"JsonParseException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParseException\"></xref> for decoding problems"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Current number value as <code>byte</code> (if numeric token within\n   range of <code>[-128, 255]</code>); otherwise exception thrown"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
