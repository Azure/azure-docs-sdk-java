### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.SortedMultiset"
fullName: "com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>"
name: "SortedMultiset<E>"
nameWithType: "SortedMultiset<E>"
summary: "A <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multiset\"></xref> which maintains the ordering of its elements, according to either their natural order or an explicit <xref uid=\"java.util.Comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator\"></xref>. This order is reflected when iterating over the sorted multiset, either directly, or through its `elementSet` or `entrySet` views. In all cases, this implementation uses <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref> or <xref uid=\"java.util.Comparator.compare\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator#compare\"></xref> instead of <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref> to determine equivalence of instances.\n\n**Warning:** The comparison must be *consistent with equals* as explained by the <xref uid=\"java.lang.Comparable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable\"></xref> class specification. Otherwise, the resulting multiset will violate the <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref> contract, which it is specified in terms of <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref>.\n\nSee the Guava User Guide article on [ `Multiset`][_Multiset].\n\n\n[_Multiset]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multiset"
syntax: "public interface SortedMultiset<E> extends SortedMultisetBridge<E>, SortedIterable<E>"
methods:
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.descendingMultiset()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollFirstEntry()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollLastEntry()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
type: "interface"
typeParameters:
- name: "E"
implements:
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SortedIterable?alt=com.azure.cosmos.implementation.guava25.collect.SortedIterable&text=SortedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge?alt=com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge&text=SortedMultisetBridge\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
