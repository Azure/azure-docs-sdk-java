### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  id: SortedMultiset
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.descendingMultiset()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.iterator()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollFirstEntry()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollLastEntry()
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  langs:
  - java
  name: SortedMultiset<E>
  nameWithType: SortedMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A <xref uid="com.azure.cosmos.implementation.guava25.collect.Multiset" data-throw-if-not-resolved="false">Multiset</xref> which maintains the ordering of its elements, according to either their natural order or an explicit <xref uid="java.util.Comparator" data-throw-if-not-resolved="false">Comparator</xref>. This order is reflected when iterating over the sorted multiset, either directly, or through its `elementSet` or `entrySet` views. In all cases, this implementation uses <xref uid="java.lang.Comparable.compareTo" data-throw-if-not-resolved="false">Comparable#compareTo</xref> or <xref uid="java.util.Comparator.compare" data-throw-if-not-resolved="false">Comparator#compare</xref> instead of <xref uid="java.lang.Object.equals" data-throw-if-not-resolved="false">Object#equals</xref> to determine equivalence of instances.


    **Warning:** The comparison must be *consistent with equals* as explained by the <xref uid="java.lang.Comparable" data-throw-if-not-resolved="false">Comparable</xref> class specification. Otherwise, the resulting multiset will violate the <xref uid="java.util.Collection" data-throw-if-not-resolved="false">Collection</xref> contract, which it is specified in terms of <xref uid="java.lang.Object.equals" data-throw-if-not-resolved="false">Object#equals</xref>.


    See the Guava User Guide article on [ `Multiset`][_Multiset].



    [_Multiset]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multiset
  syntax:
    content: public interface SortedMultiset<E> extends SortedMultisetBridge<E>, SortedIterable<E>
    typeParameters:
    - id: E
  implements:
  - com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge<E>
  - com.azure.cosmos.implementation.guava25.collect.SortedIterable<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator()
  id: comparator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: comparator()
  nameWithType: SortedMultiset<E>.comparator()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.comparator()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the comparator that orders this multiset, or <xref uid="com.azure.cosmos.implementation.guava25.collect.Ordering.&lt;C&gt;natural()" data-throw-if-not-resolved="false">Ordering#natural()</xref> if the natural ordering of the elements is used.
  syntax:
    content: public abstract Comparator<? super E> comparator()
    return:
      type: java.util.Comparator<? super E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.descendingMultiset()
  id: descendingMultiset()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: descendingMultiset()
  nameWithType: SortedMultiset<E>.descendingMultiset()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.descendingMultiset()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.descendingMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a descending view of this multiset. Modifications made to either map will be reflected in the other.
  syntax:
    content: public abstract SortedMultiset<E> descendingMultiset()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet()
  id: elementSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: elementSet()
  nameWithType: SortedMultiset<E>.elementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.elementSet()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a <xref uid="java.util.NavigableSet" data-throw-if-not-resolved="false">NavigableSet</xref> view of the distinct elements in this multiset.
  syntax:
    content: public abstract NavigableSet<E> elementSet()
    return:
      type: java.util.NavigableSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: entrySet()
  nameWithType: SortedMultiset<E>.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.entrySet()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of the contents of this multiset, grouped into `Multiset.Entry` instances, each providing an element of the multiset and the count of that element. This set contains exactly one entry for each distinct element in the multiset (thus it always has the same size as the <xref uid="com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>). The order of the elements in the element set is unspecified.


    The entry set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. However, multiset changes may or may not be reflected in any `Entry` instances already retrieved from the entry set (this is implementation-dependent). Furthermore, implementations are not required to support modifications to the entry set at all, and the `Entry` instances themselves don't even have methods for modification. See the specific implementation class for more details on how its entry set handles modifications.


    The `entrySet`'s iterator returns entries in ascending element order according to the this multiset's comparator.
  syntax:
    content: public abstract Set<Multiset.Entry<E>> entrySet()
    return:
      type: java.util.Set<com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry()
  id: firstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: firstEntry()
  nameWithType: SortedMultiset<E>.firstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.firstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the entry of the first element in this multiset, or `null` if this multiset is empty.
  syntax:
    content: public abstract Multiset.Entry<E> firstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: headMultiset(E upperBound, BoundType boundType)
  nameWithType: SortedMultiset<E>.headMultiset(E upperBound, BoundType boundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.headMultiset(E upperBound, BoundType boundType)
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the elements less than `upperBound`, optionally including `upperBound` itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.
  syntax:
    content: public abstract SortedMultiset<E> headMultiset(E upperBound, BoundType boundType)
    parameters:
    - id: upperBound
      type: E
    - id: boundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: iterator()
  nameWithType: SortedMultiset<E>.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.iterator()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.iterator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns an iterator over elements of type `T`. The elements are returned in nondecreasing order according to the associated <xref uid="com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator" data-throw-if-not-resolved="false">#comparator</xref>.


    Elements that occur multiple times in the multiset will appear multiple times in this iterator, though not necessarily sequentially.


    The iterator returns the elements in ascending order according to this multiset's comparator.
  syntax:
    content: public abstract Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry()
  id: lastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: lastEntry()
  nameWithType: SortedMultiset<E>.lastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.lastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the entry of the last element in this multiset, or `null` if this multiset is empty.
  syntax:
    content: public abstract Multiset.Entry<E> lastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollFirstEntry()
  id: pollFirstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: pollFirstEntry()
  nameWithType: SortedMultiset<E>.pollFirstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.pollFirstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollFirstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns and removes the entry associated with the lowest element in this multiset, or returns `null` if this multiset is empty.
  syntax:
    content: public abstract Multiset.Entry<E> pollFirstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollLastEntry()
  id: pollLastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: pollLastEntry()
  nameWithType: SortedMultiset<E>.pollLastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.pollLastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollLastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns and removes the entry associated with the greatest element in this multiset, or returns `null` if this multiset is empty.
  syntax:
    content: public abstract Multiset.Entry<E> pollLastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  nameWithType: SortedMultiset<E>.subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the range between `lowerBound` and `upperBound`. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.


    This method is equivalent to `tailMultiset(lowerBound, lowerBoundType).headMultiset(upperBound, upperBoundType)`.
  syntax:
    content: public abstract SortedMultiset<E> subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
    parameters:
    - id: lowerBound
      type: E
    - id: lowerBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    - id: upperBound
      type: E
    - id: upperBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  langs:
  - java
  name: tailMultiset(E lowerBound, BoundType boundType)
  nameWithType: SortedMultiset<E>.tailMultiset(E lowerBound, BoundType boundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.tailMultiset(E lowerBound, BoundType boundType)
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the elements greater than `lowerBound`, optionally including `lowerBound` itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.
  syntax:
    content: public abstract SortedMultiset<E> tailMultiset(E lowerBound, BoundType boundType)
    parameters:
    - id: lowerBound
      type: E
    - id: boundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
references:
- uid: java.util.Comparator<? super E>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '? super E'
    name: '? super E'
    fullName: '? super E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator*
  name: comparator
  nameWithType: SortedMultiset<E>.comparator
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.comparator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
    name: Entry
    fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry*
  name: firstEntry
  nameWithType: SortedMultiset<E>.firstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.firstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry*
  name: lastEntry
  nameWithType: SortedMultiset<E>.lastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.lastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollFirstEntry*
  name: pollFirstEntry
  nameWithType: SortedMultiset<E>.pollFirstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.pollFirstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.pollLastEntry*
  name: pollLastEntry
  nameWithType: SortedMultiset<E>.pollLastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.pollLastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.NavigableSet<E>
  spec.java:
  - uid: java.util.NavigableSet
    name: NavigableSet
    fullName: java.util.NavigableSet
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet*
  name: elementSet
  nameWithType: SortedMultiset<E>.elementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.elementSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
    name: Entry
    fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet*
  name: entrySet
  nameWithType: SortedMultiset<E>.entrySet
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.entrySet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.iterator*
  name: iterator
  nameWithType: SortedMultiset<E>.iterator
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.iterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
    name: SortedMultiset
    fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.descendingMultiset*
  name: descendingMultiset
  nameWithType: SortedMultiset<E>.descendingMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.descendingMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.BoundType
  name: BoundType
  nameWithType: BoundType
  fullName: com.azure.cosmos.implementation.guava25.collect.BoundType
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset*
  name: headMultiset
  nameWithType: SortedMultiset<E>.headMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.headMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset*
  name: subMultiset
  nameWithType: SortedMultiset<E>.subMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.subMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset*
  name: tailMultiset
  nameWithType: SortedMultiset<E>.tailMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>.tailMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedIterable<E>
  name: SortedIterable<E>
  nameWithType: SortedIterable<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedIterable<E>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge<E>
  name: SortedMultisetBridge<E>
  nameWithType: SortedMultisetBridge<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge<E>
- uid: '? super E'
  name: '? super E'
  nameWithType: '? super E'
  fullName: '? super E'
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  name: Multiset.Entry
  nameWithType: Multiset.Entry
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
- uid: java.util.NavigableSet
  name: NavigableSet
  nameWithType: NavigableSet
  fullName: java.util.NavigableSet
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: com.azure.cosmos.implementation.guava25.collect.SortedIterable
  name: SortedIterable
  nameWithType: SortedIterable
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedIterable
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge
  name: SortedMultisetBridge
  nameWithType: SortedMultisetBridge
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultisetBridge
