### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate"
fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate"
name: "IdentifyCandidate"
nameWithType: "IdentifyCandidate"
summary: "All possible faces that may qualify."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IdentifyCandidate"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.IdentifyCandidate()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.IdentifyCandidate()"
  name: "IdentifyCandidate()"
  nameWithType: "IdentifyCandidate.IdentifyCandidate()"
  syntax: "public IdentifyCandidate()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.confidence()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.confidence()"
  name: "confidence()"
  nameWithType: "IdentifyCandidate.confidence()"
  summary: "Get the confidence value."
  syntax: "public double confidence()"
  desc: "Get the confidence value."
  returns:
    description: "the confidence value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.personId()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.personId()"
  name: "personId()"
  nameWithType: "IdentifyCandidate.personId()"
  summary: "Get the person<wbr>Id value."
  syntax: "public UUID personId()"
  desc: "Get the personId value."
  returns:
    description: "the personId value"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.withConfidence(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.withConfidence(double confidence)"
  name: "withConfidence(double confidence)"
  nameWithType: "IdentifyCandidate.withConfidence(double confidence)"
  summary: "Set the confidence value."
  parameters:
  - description: "the confidence value to set"
    name: "confidence"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentifyCandidate withConfidence(double confidence)"
  desc: "Set the confidence value."
  returns:
    description: "the IdentifyCandidate object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate&text=IdentifyCandidate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.withPersonId(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate.withPersonId(UUID personId)"
  name: "withPersonId(UUID personId)"
  nameWithType: "IdentifyCandidate.withPersonId(UUID personId)"
  summary: "Set the person<wbr>Id value."
  parameters:
  - description: "the personId value to set"
    name: "personId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentifyCandidate withPersonId(UUID personId)"
  desc: "Set the personId value."
  returns:
    description: "the IdentifyCandidate object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyCandidate&text=IdentifyCandidate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "All possible faces that may qualify."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.faceapi.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-faceapi:1.0.1-beta
