### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.language.bm.Rule.RPattern
  id: RPattern
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm
  children:
  - org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(java.lang.CharSequence)
  langs:
  - java
  name: Rule.RPattern
  nameWithType: Rule.RPattern
  fullName: org.apache.commons.codec.language.bm.Rule.RPattern
  type: Interface
  package: org.apache.commons.codec.language.bm
  summary: A minimal wrapper around the functionality of Pattern that we use, to allow for alternate implementations.
  syntax:
    content: public static interface Rule.RPattern
- uid: org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(java.lang.CharSequence)
  id: isMatch(java.lang.CharSequence)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule.RPattern
  langs:
  - java
  name: isMatch(CharSequence input)
  nameWithType: Rule.RPattern.isMatch(CharSequence input)
  fullName: org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(CharSequence input)
  overload: org.apache.commons.codec.language.bm.Rule.RPattern.isMatch*
  type: Method
  package: org.apache.commons.codec.language.bm
  syntax:
    content: public abstract boolean isMatch(CharSequence input)
    parameters:
    - id: input
      type: java.lang.CharSequence
    return:
      type: boolean
references:
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.language.bm.Rule.RPattern.isMatch*
  name: isMatch
  nameWithType: Rule.RPattern.isMatch
  fullName: org.apache.commons.codec.language.bm.Rule.RPattern.isMatch
  package: org.apache.commons.codec.language.bm
