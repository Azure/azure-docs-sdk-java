### YamlMime:JavaType
uid: "com.azure.iot.deviceupdate.DeviceUpdateClient"
fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient"
name: "DeviceUpdateClient"
nameWithType: "DeviceUpdateClient"
summary: "Initializes a new instance of the synchronous Device<wbr>Update<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DeviceUpdateClient"
methods:
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.beginDeleteUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.beginDeleteUpdate(String provider, String name, String version, RequestOptions requestOptions)"
  name: "beginDeleteUpdate(String provider, String name, String version, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.beginDeleteUpdate(String provider, String name, String version, RequestOptions requestOptions)"
  summary: "Delete a specific update version."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update version."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginDeleteUpdate(String provider, String name, String version, RequestOptions requestOptions)"
  desc: "Delete a specific update version. This is a long-running-operation; use Operation-Location response header value to check for operation status."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.beginImportUpdate(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.beginImportUpdate(BinaryData updateToImport, RequestOptions requestOptions)"
  name: "beginImportUpdate(BinaryData updateToImport, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.beginImportUpdate(BinaryData updateToImport, RequestOptions requestOptions)"
  summary: "Import new update version."
  parameters:
  - description: "The update to be imported."
    name: "updateToImport"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginImportUpdate(BinaryData updateToImport, RequestOptions requestOptions)"
  desc: "Import new update version. This is a long-running-operation; use Operation-Location response header value to check for operation status.\n\n**Request Body Schema**\n\n```java\n[\n      (Required){\n         importManifest (Required): {\n             url: String (Required)\n             sizeInBytes: long (Required)\n             hashes (Required): {\n                 String: String (Required)\n             }\n         }\n         friendlyName: String (Optional)\n         files (Optional): [\n              (Optional){\n                 filename: String (Required)\n                 url: String (Required)\n             }\n         ]\n     }\n ]\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.getFileWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.getFileWithResponse(String provider, String name, String version, String fileId, RequestOptions requestOptions)"
  name: "getFileWithResponse(String provider, String name, String version, String fileId, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.getFileWithResponse(String provider, String name, String version, String fileId, RequestOptions requestOptions)"
  summary: "Get a specific update file from the version."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update version."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "File identifier."
    name: "fileId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getFileWithResponse(String provider, String name, String version, String fileId, RequestOptions requestOptions)"
  desc: "Get a specific update file from the version.\n\n**Header Parameters**\n\n    | ------------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------------------------ |\n    | Name          | Type   | Required | Description                                                                                                                    |\n    | If-None-Match | String | No       | Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     fileName: String (Required)\n     sizeInBytes: long (Required)\n     hashes (Required): {\n         String: String (Required)\n     }\n     mimeType: String (Optional)\n     scanResult: String (Optional)\n     scanDetails: String (Optional)\n     properties (Optional): {\n         String: String (Optional)\n     }\n     fileId: String (Required)\n     relatedFiles (Optional): [\n          (Optional){\n             fileName: String (Required)\n             sizeInBytes: long (Required)\n             hashes (Required): {\n                 String: String (Required)\n             }\n             mimeType: String (Optional)\n             scanResult: String (Optional)\n             scanDetails: String (Optional)\n             properties (Optional): {\n                 String: String (Optional)\n             }\n         }\n     ]\n     downloadHandler (Optional): {\n         id: String (Required)\n     }\n     etag: String (Optional)\n }\n```"
  returns:
    description: "a specific update file from the version along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.getOperationWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.getOperationWithResponse(String operationId, RequestOptions requestOptions)"
  name: "getOperationWithResponse(String operationId, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.getOperationWithResponse(String operationId, RequestOptions requestOptions)"
  summary: "Retrieve operation status."
  parameters:
  - description: "Operation identifier."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getOperationWithResponse(String operationId, RequestOptions requestOptions)"
  desc: "Retrieve operation status.\n\n**Header Parameters**\n\n    | ------------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------------------------ |\n    | Name          | Type   | Required | Description                                                                                                                    |\n    | If-None-Match | String | No       | Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     operationId: String (Required)\n     status: String(NotStarted/Running/Succeeded/Failed) (Required)\n     update (Optional): {\n         updateId (Required): {\n             provider: String (Required)\n             name: String (Required)\n             version: String (Required)\n         }\n         description: String (Optional)\n         friendlyName: String (Optional)\n     }\n     resourceLocation: String (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Required)\n             message: String (Optional)\n             errorDetail: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n         occurredDateTime: OffsetDateTime (Optional)\n     }\n     traceId: String (Optional)\n     lastActionDateTime: OffsetDateTime (Required)\n     createdDateTime: OffsetDateTime (Required)\n     etag: String (Optional)\n }\n```"
  returns:
    description: "operation metadata along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.getUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.getUpdateWithResponse(String provider, String name, String version, RequestOptions requestOptions)"
  name: "getUpdateWithResponse(String provider, String name, String version, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.getUpdateWithResponse(String provider, String name, String version, RequestOptions requestOptions)"
  summary: "Get a specific update version."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update version."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getUpdateWithResponse(String provider, String name, String version, RequestOptions requestOptions)"
  desc: "Get a specific update version.\n\n**Header Parameters**\n\n    | ------------- | ------ | -------- | ------------------------------------------------------------------------------------------------------------------------------ |\n    | Name          | Type   | Required | Description                                                                                                                    |\n    | If-None-Match | String | No       | Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     updateId (Required): {\n         provider: String (Required)\n         name: String (Required)\n         version: String (Required)\n     }\n     description: String (Optional)\n     friendlyName: String (Optional)\n     isDeployable: Boolean (Optional)\n     updateType: String (Optional)\n     installedCriteria: String (Optional)\n     compatibility (Required): [\n          (Required){\n             String: String (Required)\n         }\n     ]\n     instructions (Optional): {\n         steps (Required): [\n              (Required){\n                 type: String(Inline/Reference) (Optional)\n                 description: String (Optional)\n                 handler: String (Optional)\n                 handlerProperties: Object (Optional)\n                 files (Optional): [\n                     String (Optional)\n                 ]\n                 updateId (Optional): (recursive schema, see updateId above)\n             }\n         ]\n     }\n     referencedBy (Optional): [\n         (recursive schema, see above)\n     ]\n     scanResult: String (Optional)\n     manifestVersion: String (Required)\n     importedDateTime: OffsetDateTime (Required)\n     createdDateTime: OffsetDateTime (Required)\n     etag: String (Optional)\n }\n```"
  returns:
    description: "a specific update version along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listFiles(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listFiles(String provider, String name, String version, RequestOptions requestOptions)"
  name: "listFiles(String provider, String name, String version, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listFiles(String provider, String name, String version, RequestOptions requestOptions)"
  summary: "Get a list of all update file identifiers for the specified version."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update version."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listFiles(String provider, String name, String version, RequestOptions requestOptions)"
  desc: "Get a list of all update file identifiers for the specified version.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n         String (Required)\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all update file identifiers for the specified version as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listNames(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listNames(String provider, RequestOptions requestOptions)"
  name: "listNames(String provider, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listNames(String provider, RequestOptions requestOptions)"
  summary: "Get a list of all update names that match the specified provider."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listNames(String provider, RequestOptions requestOptions)"
  desc: "Get a list of all update names that match the specified provider.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n         String (Required)\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all update names that match the specified provider as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listOperations(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listOperations(RequestOptions requestOptions)"
  name: "listOperations(RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listOperations(RequestOptions requestOptions)"
  summary: "Get a list of all import update operations."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listOperations(RequestOptions requestOptions)"
  desc: "Get a list of all import update operations. Completed operations are kept for 7 days before auto-deleted. Delete operations are not returned by this API version.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                        |\n    | filter | String  | No       | Restricts the set of operations returned. Only one specific filter is supported: \"status eq 'NotStarted' or status eq 'Running'\"                                                                   |\n    | top    | Integer | No       | Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             operationId: String (Required)\n             status: String(NotStarted/Running/Succeeded/Failed) (Required)\n             update (Optional): {\n                 updateId (Required): {\n                     provider: String (Required)\n                     name: String (Required)\n                     version: String (Required)\n                 }\n                 description: String (Optional)\n                 friendlyName: String (Optional)\n             }\n             resourceLocation: String (Optional)\n             error (Optional): {\n                 code: String (Required)\n                 message: String (Required)\n                 target: String (Optional)\n                 details (Optional): [\n                     (recursive schema, see above)\n                 ]\n                 innererror (Optional): {\n                     code: String (Required)\n                     message: String (Optional)\n                     errorDetail: String (Optional)\n                     innerError (Optional): (recursive schema, see innerError above)\n                 }\n                 occurredDateTime: OffsetDateTime (Optional)\n             }\n             traceId: String (Optional)\n             lastActionDateTime: OffsetDateTime (Required)\n             createdDateTime: OffsetDateTime (Required)\n             etag: String (Optional)\n         }\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all import update operations as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listProviders(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listProviders(RequestOptions requestOptions)"
  name: "listProviders(RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listProviders(RequestOptions requestOptions)"
  summary: "Get a list of all update providers that have been imported to Device Update for IoT Hub."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listProviders(RequestOptions requestOptions)"
  desc: "Get a list of all update providers that have been imported to Device Update for IoT Hub.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n         String (Required)\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all update providers that have been imported to Device Update for IoT Hub as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listUpdates(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listUpdates(RequestOptions requestOptions)"
  name: "listUpdates(RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listUpdates(RequestOptions requestOptions)"
  summary: "Get a list of all updates that have been imported to Device Update for IoT Hub."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listUpdates(RequestOptions requestOptions)"
  desc: "Get a list of all updates that have been imported to Device Update for IoT Hub.\n\n**Query Parameters**\n\n    | ------ | ------ | -------- | ------------------------------------------------------- |\n    | Name   | Type   | Required | Description                                             |\n    | search | String | No       | Request updates matching a free-text search expression. |\n    | filter | String | No       | Filter updates by its properties.                       |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             updateId (Required): {\n                 provider: String (Required)\n                 name: String (Required)\n                 version: String (Required)\n             }\n             description: String (Optional)\n             friendlyName: String (Optional)\n             isDeployable: Boolean (Optional)\n             updateType: String (Optional)\n             installedCriteria: String (Optional)\n             compatibility (Required): [\n                  (Required){\n                     String: String (Required)\n                 }\n             ]\n             instructions (Optional): {\n                 steps (Required): [\n                      (Required){\n                         type: String(Inline/Reference) (Optional)\n                         description: String (Optional)\n                         handler: String (Optional)\n                         handlerProperties: Object (Optional)\n                         files (Optional): [\n                             String (Optional)\n                         ]\n                         updateId (Optional): (recursive schema, see updateId above)\n                     }\n                 ]\n             }\n             referencedBy (Optional): [\n                 (recursive schema, see above)\n             ]\n             scanResult: String (Optional)\n             manifestVersion: String (Required)\n             importedDateTime: OffsetDateTime (Required)\n             createdDateTime: OffsetDateTime (Required)\n             etag: String (Optional)\n         }\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all updates that have been imported to Device Update for IoT Hub as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.DeviceUpdateClient.listVersions(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.DeviceUpdateClient.listVersions(String provider, String name, RequestOptions requestOptions)"
  name: "listVersions(String provider, String name, RequestOptions requestOptions)"
  nameWithType: "DeviceUpdateClient.listVersions(String provider, String name, RequestOptions requestOptions)"
  summary: "Get a list of all update versions that match the specified provider and name."
  parameters:
  - description: "Update provider."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listVersions(String provider, String name, RequestOptions requestOptions)"
  desc: "Get a list of all update versions that match the specified provider and name.\n\n**Query Parameters**\n\n    | ------ | ------ | -------- | --------------------------------- |\n    | Name   | Type   | Required | Description                       |\n    | filter | String | No       | Filter updates by its properties. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n         String (Required)\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "a list of all update versions that match the specified provider and name as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous DeviceUpdateClient type."
metadata: {}
package: "com.azure.iot.deviceupdate"
artifact: com.azure:azure-iot-deviceupdate:1.0.0-beta.3
