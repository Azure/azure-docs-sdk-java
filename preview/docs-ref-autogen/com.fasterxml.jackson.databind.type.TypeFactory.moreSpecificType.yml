### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType"
name: "moreSpecificType"
nameWithType: "TypeFactory.moreSpecificType"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType(JavaType type1, JavaType type2)"
  name: "moreSpecificType(JavaType type1, JavaType type2)"
  nameWithType: "TypeFactory.moreSpecificType(JavaType type1, JavaType type2)"
  summary: "Method that can be called to figure out more specific of two types (if they are related; that is, one implements or extends the other); or if not related, return the primary type."
  parameters:
  - description: "Primary type to consider"
    name: "type1"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Secondary type to consider"
    name: "type2"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JavaType moreSpecificType(JavaType type1, JavaType type2)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
