### YamlMime:JavaMember
uid: "com.azure.resourcemanager.synapse.fluent.OperationsClient.checkNameAvailability*"
fullName: "com.azure.resourcemanager.synapse.fluent.OperationsClient.checkNameAvailability"
name: "checkNameAvailability"
nameWithType: "OperationsClient.checkNameAvailability"
members:
- uid: "com.azure.resourcemanager.synapse.fluent.OperationsClient.checkNameAvailability(com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.synapse.fluent.OperationsClient.checkNameAvailability(CheckNameAvailabilityRequest request)"
  name: "checkNameAvailability(CheckNameAvailabilityRequest request)"
  nameWithType: "OperationsClient.checkNameAvailability(CheckNameAvailabilityRequest request)"
  summary: "Check whether a workspace name is available."
  parameters:
  - description: "The check request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResponseInner checkNameAvailability(CheckNameAvailabilityRequest request)"
  returns:
    description: "a response saying whether the workspace name is available."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.synapse.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.synapse.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.1
