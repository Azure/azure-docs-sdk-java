### YamlMime:JavaMember
uid: "com.azure.core.experimental.util.BinaryData.toObject*"
fullName: "com.azure.core.experimental.util.BinaryData.<T>toObject"
name: "<T>toObject"
nameWithType: "BinaryData.<T>toObject"
members:
- uid: "com.azure.core.experimental.util.BinaryData.<T>toObject(java.lang.Class<T>,com.azure.core.util.serializer.ObjectSerializer)"
  fullName: "com.azure.core.experimental.util.BinaryData.<T>toObject(Class<T> clazz, ObjectSerializer serializer)"
  name: "<T>toObject(Class<T> clazz, ObjectSerializer serializer)"
  nameWithType: "BinaryData.<T>toObject(Class<T> clazz, ObjectSerializer serializer)"
  summary: "Deserialize the bytes into the <xref uid=\"java.lang.Object\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object\"></xref> of given type by applying the provided <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> on the data."
  parameters:
  - description: "representing the type of the Object."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "to use deserialize data into type."
    name: "serializer"
    type: "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T <T>toObject(Class<T> clazz, ObjectSerializer serializer)"
  returns:
    description: "The <xref uid=\"java.lang.Object\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object\"></xref> of given type after deserializing the bytes."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.experimental.util"
artifact: com.azure:azure-core-experimental:1.0.0-beta.7
