### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.implementation.DataSourcesImpl
  id: DataSourcesImpl
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation
  children:
  - com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  - com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  langs:
  - java
  name: DataSourcesImpl
  nameWithType: DataSourcesImpl
  fullName: com.azure.search.documents.implementation.DataSourcesImpl
  type: Class
  package: com.azure.search.documents.implementation
  summary: An instance of this class provides access to all the operations defined in DataSources.
  syntax:
    content: public final class DataSourcesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  id: DataSourcesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: DataSourcesImpl(SearchServiceRestClientImpl client)
  nameWithType: DataSourcesImpl.DataSourcesImpl(SearchServiceRestClientImpl client)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl(SearchServiceRestClientImpl client)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl*
  type: Constructor
  package: com.azure.search.documents.implementation
  summary: Initializes an instance of DataSourcesImpl.
  syntax:
    content: public DataSourcesImpl(SearchServiceRestClientImpl client)
    parameters:
    - id: client
      type: com.azure.search.documents.implementation.SearchServiceRestClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  id: createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, Context context)
  nameWithType: DataSourcesImpl.createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new datasource or updates a datasource if it already exists.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to create or update.
    - id: dataSource
      type: com.azure.search.documents.models.DataSource
      description: The definition of the datasource to create or update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.DataSource,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: DataSourcesImpl.createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new datasource or updates a datasource if it already exists.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> createOrUpdateWithRestResponseAsync(String dataSourceName, DataSource dataSource, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to create or update.
    - id: dataSource
      type: com.azure.search.documents.models.DataSource
      description: The definition of the datasource to create or update.
    - id: ifMatch
      type: java.lang.String
      description: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  id: createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: createWithRestResponseAsync(DataSource dataSource, Context context)
  nameWithType: DataSourcesImpl.createWithRestResponseAsync(DataSource dataSource, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(DataSource dataSource, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new datasource.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> createWithRestResponseAsync(DataSource dataSource, Context context)
    parameters:
    - id: dataSource
      type: com.azure.search.documents.models.DataSource
      description: The definition of the datasource to create.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: createWithRestResponseAsync(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: createWithRestResponseAsync(DataSource dataSource, RequestOptions requestOptions, Context context)
  nameWithType: DataSourcesImpl.createWithRestResponseAsync(DataSource dataSource, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync(DataSource dataSource, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new datasource.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> createWithRestResponseAsync(DataSource dataSource, RequestOptions requestOptions, Context context)
    parameters:
    - id: dataSource
      type: com.azure.search.documents.models.DataSource
      description: The definition of the datasource to create.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: deleteWithRestResponseAsync(String dataSourceName, Context context)
  nameWithType: DataSourcesImpl.deleteWithRestResponseAsync(String dataSourceName, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(String dataSourceName, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Deletes a datasource.
  syntax:
    content: public Mono<Response<Void>> deleteWithRestResponseAsync(String dataSourceName, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: deleteWithRestResponseAsync(String dataSourceName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: DataSourcesImpl.deleteWithRestResponseAsync(String dataSourceName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync(String dataSourceName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Deletes a datasource.
  syntax:
    content: public Mono<Response<Void>> deleteWithRestResponseAsync(String dataSourceName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to delete.
    - id: ifMatch
      type: java.lang.String
      description: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: getWithRestResponseAsync(String dataSourceName, Context context)
  nameWithType: DataSourcesImpl.getWithRestResponseAsync(String dataSourceName, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(String dataSourceName, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Retrieves a datasource definition.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> getWithRestResponseAsync(String dataSourceName, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: getWithRestResponseAsync(String dataSourceName, RequestOptions requestOptions, Context context)
  nameWithType: DataSourcesImpl.getWithRestResponseAsync(String dataSourceName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync(String dataSourceName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Retrieves a datasource definition.
  syntax:
    content: public Mono<SimpleResponse<DataSource>> getWithRestResponseAsync(String dataSourceName, RequestOptions requestOptions, Context context)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the datasource to retrieve.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(com.azure.core.util.Context)
  id: listWithRestResponseAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: listWithRestResponseAsync(Context context)
  nameWithType: DataSourcesImpl.listWithRestResponseAsync(Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Lists all datasources available for a search service.
  syntax:
    content: public Mono<SimpleResponse<ListDataSourcesResult>> listWithRestResponseAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListDataSourcesResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.DataSourcesImpl
  langs:
  - java
  name: listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  nameWithType: DataSourcesImpl.listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Lists all datasources available for a search service.
  syntax:
    content: public Mono<SimpleResponse<ListDataSourcesResult>> listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
    parameters:
    - id: select
      type: java.lang.String
      description: Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListDataSourcesResult>>
      description: a Mono which performs the network request upon subscription.
references:
- uid: com.azure.search.documents.implementation.SearchServiceRestClientImpl
  name: SearchServiceRestClientImpl
  nameWithType: SearchServiceRestClientImpl
  fullName: com.azure.search.documents.implementation.SearchServiceRestClientImpl
- uid: com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl*
  name: DataSourcesImpl
  nameWithType: DataSourcesImpl.DataSourcesImpl
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.DataSourcesImpl
  package: com.azure.search.documents.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.models.DataSource
  name: DataSource
  nameWithType: DataSource
  fullName: com.azure.search.documents.models.DataSource
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.DataSource>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.DataSource
    name: DataSource
    fullName: com.azure.search.documents.models.DataSource
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync*
  name: createOrUpdateWithRestResponseAsync
  nameWithType: DataSourcesImpl.createOrUpdateWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createOrUpdateWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.models.RequestOptions
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.azure.search.documents.models.RequestOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync*
  name: deleteWithRestResponseAsync
  nameWithType: DataSourcesImpl.deleteWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.deleteWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync*
  name: getWithRestResponseAsync
  nameWithType: DataSourcesImpl.getWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.getWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListDataSourcesResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.ListDataSourcesResult
    name: ListDataSourcesResult
    fullName: com.azure.search.documents.implementation.models.ListDataSourcesResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync*
  name: listWithRestResponseAsync
  nameWithType: DataSourcesImpl.listWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.listWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync*
  name: createWithRestResponseAsync
  nameWithType: DataSourcesImpl.createWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.DataSourcesImpl.createWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.SimpleResponse
  name: SimpleResponse
  nameWithType: SimpleResponse
  fullName: com.azure.core.http.rest.SimpleResponse
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.search.documents.implementation.models.ListDataSourcesResult
  name: ListDataSourcesResult
  nameWithType: ListDataSourcesResult
  fullName: com.azure.search.documents.implementation.models.ListDataSourcesResult
