### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  id: DatabaseVulnerabilityAssessmentScansClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation
  children:
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  langs:
  - java
  name: DatabaseVulnerabilityAssessmentScansClientImpl
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  type: Class
  package: com.azure.resourcemanager.sql.implementation
  summary: An instance of this class provides access to all the operations defined in DatabaseVulnerabilityAssessmentScansClient.
  syntax:
    content: public final class DatabaseVulnerabilityAssessmentScansClientImpl implements DatabaseVulnerabilityAssessmentScansClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  id: DatabaseVulnerabilityAssessmentScansClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: DatabaseVulnerabilityAssessmentScansClientImpl(SqlManagementClientImpl client)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl(SqlManagementClientImpl client)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl(SqlManagementClientImpl client)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.sql.implementation
  summary: Initializes an instance of DatabaseVulnerabilityAssessmentScansClientImpl.
  syntax:
    content: " DatabaseVulnerabilityAssessmentScansClientImpl(SqlManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  id: beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginInitiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: beginInitiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: beginInitiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginInitiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: export(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: export(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.export(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public DatabaseVulnerabilityAssessmentScansExportInner export(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: exportAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: exportAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<DatabaseVulnerabilityAssessmentScansExportInner> exportAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  id: exportWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: exportWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Response<DatabaseVulnerabilityAssessmentScansExportInner> exportWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<Response<DatabaseVulnerabilityAssessmentScansExportInner>> exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.get(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public VulnerabilityAssessmentScanRecordInner get(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<VulnerabilityAssessmentScanRecordInner> getAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Response<VulnerabilityAssessmentScanRecordInner> getWithResponse(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<Response<VulnerabilityAssessmentScanRecordInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  id: initiateScan(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void initiateScan(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: initiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Void> initiateScanAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  id: initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: initiateScanWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> initiateScanWithResponseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,com.azure.core.util.Context)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
  overload: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedFlux<VulnerabilityAssessmentScanRecordInner> listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: vulnerabilityAssessmentName
      type: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
      description: The name of the vulnerability assessment.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
references:
- uid: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
  name: SqlManagementClientImpl
  nameWithType: SqlManagementClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl*
  name: DatabaseVulnerabilityAssessmentScansClientImpl
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.DatabaseVulnerabilityAssessmentScansClientImpl
  package: com.azure.resourcemanager.sql.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
  name: VulnerabilityAssessmentName
  nameWithType: VulnerabilityAssessmentName
  fullName: com.azure.resourcemanager.sql.models.VulnerabilityAssessmentName
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync*
  name: listByDatabaseAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabaseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase*
  name: listByDatabase
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.listByDatabase
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync*
  name: getAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  name: VulnerabilityAssessmentScanRecordInner
  nameWithType: VulnerabilityAssessmentScanRecordInner
  fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get*
  name: get
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.get
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.get
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.models.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.getWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync*
  name: initiateScanWithResponseAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync*
  name: beginInitiateScanAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScanAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan*
  name: beginInitiateScan
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.beginInitiateScan
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync*
  name: initiateScanAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScanAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan*
  name: initiateScan
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.initiateScan
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
    name: DatabaseVulnerabilityAssessmentScansExportInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync*
  name: exportWithResponseAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
    name: DatabaseVulnerabilityAssessmentScansExportInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync*
  name: exportAsync
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
  name: DatabaseVulnerabilityAssessmentScansExportInner
  nameWithType: DatabaseVulnerabilityAssessmentScansExportInner
  fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export*
  name: export
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.export
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.export
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
    name: DatabaseVulnerabilityAssessmentScansExportInner
    fullName: com.azure.resourcemanager.sql.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse*
  name: exportWithResponse
  nameWithType: DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.DatabaseVulnerabilityAssessmentScansClientImpl.exportWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient
  name: DatabaseVulnerabilityAssessmentScansClient
  nameWithType: DatabaseVulnerabilityAssessmentScansClient
  fullName: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
