### YamlMime:JavaType
uid: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient"
fullName: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient"
name: "QuotaRequestStatusClient"
nameWithType: "QuotaRequestStatusClient"
summary: "An instance of this class provides access to all the operations defined in Quota<wbr>Request<wbr>Status<wbr>Client."
syntax: "public interface QuotaRequestStatusClient"
methods:
- uid: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.get(String id, String scope)"
  name: "get(String id, String scope)"
  nameWithType: "QuotaRequestStatusClient.get(String id, String scope)"
  summary: "Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Quota request ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract QuotaRequestDetailsInner get(String id, String scope)"
  desc: "Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID \\*\\*id\\*\\* is returned in the response of the PUT operation."
  returns:
    description: "the quota request details and status by quota request ID for the resources of the resource provider at a\n     specific location."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner?alt=com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner&text=QuotaRequestDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.getWithResponse(String id, String scope, Context context)"
  name: "getWithResponse(String id, String scope, Context context)"
  nameWithType: "QuotaRequestStatusClient.getWithResponse(String id, String scope, Context context)"
  summary: "Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Quota request ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<QuotaRequestDetailsInner> getWithResponse(String id, String scope, Context context)"
  desc: "Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID \\*\\*id\\*\\* is returned in the response of the PUT operation."
  returns:
    description: "the quota request details and status by quota request ID for the resources of the resource provider at a\n     specific location."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner?alt=com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner&text=QuotaRequestDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.list(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.list(String scope)"
  name: "list(String scope)"
  nameWithType: "QuotaRequestStatusClient.list(String scope)"
  summary: "For the specified scope, get the current quota requests for a one year period ending at the time is made."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<QuotaRequestDetailsInner> list(String scope)"
  desc: "For the specified scope, get the current quota requests for a one year period ending at the time is made. Use the \\*\\*oData\\*\\* filter to select quota requests."
  returns:
    description: "quota request information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner?alt=com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner&text=QuotaRequestDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.list(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotaRequestStatusClient.list(String scope, String filter, Integer top, String skiptoken, Context context)"
  name: "list(String scope, String filter, Integer top, String skiptoken, Context context)"
  nameWithType: "QuotaRequestStatusClient.list(String scope, String filter, Integer top, String skiptoken, Context context)"
  summary: "For the specified scope, get the current quota requests for a one year period ending at the time is made."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Supported operators |---------------------|------------------------\n     <p>|requestSubmitTime | ge, le, eq, gt, lt |provisioningState eq {QuotaRequestState} |resourceName eq\n     {resourceName}."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The **Skiptoken** parameter is used only if a previous operation returned a partial result. If a\n     previous response contains a **nextLink** element, its value includes a **skiptoken** parameter that\n     specifies a starting point to use for subsequent calls."
    name: "skiptoken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<QuotaRequestDetailsInner> list(String scope, String filter, Integer top, String skiptoken, Context context)"
  desc: "For the specified scope, get the current quota requests for a one year period ending at the time is made. Use the \\*\\*oData\\*\\* filter to select quota requests."
  returns:
    description: "quota request information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner?alt=com.azure.resourcemanager.quota.fluent.models.QuotaRequestDetailsInner&text=QuotaRequestDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in QuotaRequestStatusClient."
metadata: {}
package: "com.azure.resourcemanager.quota.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.0.0-beta.2
