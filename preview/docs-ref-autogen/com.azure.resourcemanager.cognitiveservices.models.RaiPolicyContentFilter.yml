### YamlMime:JavaType
uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter"
fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter"
name: "RaiPolicyContentFilter"
nameWithType: "RaiPolicyContentFilter"
summary: "Azure OpenAI Content Filter."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RaiPolicyContentFilter**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.RaiPolicyContentFilter()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.RaiPolicyContentFilter()"
  name: "RaiPolicyContentFilter()"
  nameWithType: "RaiPolicyContentFilter.RaiPolicyContentFilter()"
  summary: "Creates an instance of Rai<wbr>Policy<wbr>Content<wbr>Filter class."
  syntax: "public RaiPolicyContentFilter()"
  desc: "Creates an instance of RaiPolicyContentFilter class."
methods:
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.blocking()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.blocking()"
  name: "blocking()"
  nameWithType: "RaiPolicyContentFilter.blocking()"
  summary: "Get the blocking property: If blocking would occur."
  syntax: "public Boolean blocking()"
  desc: "Get the blocking property: If blocking would occur."
  returns:
    description: "the blocking value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.enabled()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.enabled()"
  name: "enabled()"
  nameWithType: "RaiPolicyContentFilter.enabled()"
  summary: "Get the enabled property: If the Content<wbr>Filter is enabled."
  syntax: "public Boolean enabled()"
  desc: "Get the enabled property: If the ContentFilter is enabled."
  returns:
    description: "the enabled value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RaiPolicyContentFilter.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Rai<wbr>Policy<wbr>Content<wbr>Filter from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RaiPolicyContentFilter fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the RaiPolicyContentFilter."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of RaiPolicyContentFilter from the JsonReader."
  returns:
    description: "An instance of RaiPolicyContentFilter if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.name()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.name()"
  name: "name()"
  nameWithType: "RaiPolicyContentFilter.name()"
  summary: "Get the name property: Name of Content<wbr>Filter."
  syntax: "public String name()"
  desc: "Get the name property: Name of ContentFilter."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.severityThreshold()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.severityThreshold()"
  name: "severityThreshold()"
  nameWithType: "RaiPolicyContentFilter.severityThreshold()"
  summary: "Get the severity<wbr>Threshold property: Level at which content is filtered."
  syntax: "public ContentLevel severityThreshold()"
  desc: "Get the severityThreshold property: Level at which content is filtered."
  returns:
    description: "the severityThreshold value."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.ContentLevel?alt=com.azure.resourcemanager.cognitiveservices.models.ContentLevel&text=ContentLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.source()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.source()"
  name: "source()"
  nameWithType: "RaiPolicyContentFilter.source()"
  summary: "Get the source property: Content source to apply the Content Filters."
  syntax: "public RaiPolicyContentSource source()"
  desc: "Get the source property: Content source to apply the Content Filters."
  returns:
    description: "the source value."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource&text=RaiPolicyContentSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RaiPolicyContentFilter.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.validate()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.validate()"
  name: "validate()"
  nameWithType: "RaiPolicyContentFilter.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withBlocking(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withBlocking(Boolean blocking)"
  name: "withBlocking(Boolean blocking)"
  nameWithType: "RaiPolicyContentFilter.withBlocking(Boolean blocking)"
  summary: "Set the blocking property: If blocking would occur."
  parameters:
  - description: "the blocking value to set."
    name: "blocking"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RaiPolicyContentFilter withBlocking(Boolean blocking)"
  desc: "Set the blocking property: If blocking would occur."
  returns:
    description: "the RaiPolicyContentFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withEnabled(Boolean enabled)"
  name: "withEnabled(Boolean enabled)"
  nameWithType: "RaiPolicyContentFilter.withEnabled(Boolean enabled)"
  summary: "Set the enabled property: If the Content<wbr>Filter is enabled."
  parameters:
  - description: "the enabled value to set."
    name: "enabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RaiPolicyContentFilter withEnabled(Boolean enabled)"
  desc: "Set the enabled property: If the ContentFilter is enabled."
  returns:
    description: "the RaiPolicyContentFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withName(String name)"
  name: "withName(String name)"
  nameWithType: "RaiPolicyContentFilter.withName(String name)"
  summary: "Set the name property: Name of Content<wbr>Filter."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RaiPolicyContentFilter withName(String name)"
  desc: "Set the name property: Name of ContentFilter."
  returns:
    description: "the RaiPolicyContentFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withSeverityThreshold(com.azure.resourcemanager.cognitiveservices.models.ContentLevel)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withSeverityThreshold(ContentLevel severityThreshold)"
  name: "withSeverityThreshold(ContentLevel severityThreshold)"
  nameWithType: "RaiPolicyContentFilter.withSeverityThreshold(ContentLevel severityThreshold)"
  summary: "Set the severity<wbr>Threshold property: Level at which content is filtered."
  parameters:
  - description: "the severityThreshold value to set."
    name: "severityThreshold"
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.ContentLevel?alt=com.azure.resourcemanager.cognitiveservices.models.ContentLevel&text=ContentLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RaiPolicyContentFilter withSeverityThreshold(ContentLevel severityThreshold)"
  desc: "Set the severityThreshold property: Level at which content is filtered."
  returns:
    description: "the RaiPolicyContentFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withSource(com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter.withSource(RaiPolicyContentSource source)"
  name: "withSource(RaiPolicyContentSource source)"
  nameWithType: "RaiPolicyContentFilter.withSource(RaiPolicyContentSource source)"
  summary: "Set the source property: Content source to apply the Content Filters."
  parameters:
  - description: "the source value to set."
    name: "source"
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource&text=RaiPolicyContentSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RaiPolicyContentFilter withSource(RaiPolicyContentSource source)"
  desc: "Set the source property: Content source to apply the Content Filters."
  returns:
    description: "the RaiPolicyContentFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure OpenAI Content Filter."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter&text=RaiPolicyContentFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.cognitiveservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cognitiveservices:1.2.0-beta.1
