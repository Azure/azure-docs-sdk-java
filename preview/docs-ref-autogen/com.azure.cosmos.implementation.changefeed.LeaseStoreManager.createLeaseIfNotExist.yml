### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager.createLeaseIfNotExist*"
fullName: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager.createLeaseIfNotExist"
name: "createLeaseIfNotExist"
nameWithType: "LeaseStoreManager.createLeaseIfNotExist"
members:
- uid: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager.createLeaseIfNotExist(java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager.createLeaseIfNotExist(String leaseToken, String continuationToken)"
  name: "createLeaseIfNotExist(String leaseToken, String continuationToken)"
  nameWithType: "LeaseStoreManager.createLeaseIfNotExist(String leaseToken, String continuationToken)"
  summary: "Checks whether the lease exists and creates it if it does not exist."
  parameters:
  - description: "the partition to work on."
    name: "leaseToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the continuation token if it exists."
    name: "continuationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Lease> createLeaseIfNotExist(String leaseToken, String continuationToken)"
  returns:
    description: "the lease."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.changefeed.Lease?alt=com.azure.cosmos.implementation.changefeed.Lease&text=Lease\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.changefeed"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
