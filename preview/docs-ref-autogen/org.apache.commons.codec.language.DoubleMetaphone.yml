### YamlMime:JavaType
uid: "org.apache.commons.codec.language.DoubleMetaphone"
fullName: "org.apache.commons.codec.language.DoubleMetaphone"
name: "DoubleMetaphone"
nameWithType: "DoubleMetaphone"
summary: "Encodes a string into a double metaphone value. This Implementation is based on the algorithm by Lawrence Philips.\n\nThis class is conditionally thread-safe. The instance field <xref uid=\"org.apache.commons.codec.language.DoubleMetaphone.maxCodeLen\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#maxCodeLen\"></xref> is mutable <xref uid=\"org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setMaxCodeLen(int)\"></xref> but is not volatile, and accesses are not synchronized. If an instance of the class is shared between threads, the caller needs to ensure that suitable synchronization is used to ensure safe publication of the value between threads, and must not invoke <xref uid=\"org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setMaxCodeLen(int)\"></xref> after initial setup."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DoubleMetaphone implements StringEncoder"
constructors:
- "org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone()"
methods:
- "org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)"
- "org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String...)"
- "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String)"
- "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)"
- "org.apache.commons.codec.language.DoubleMetaphone.encode(java.lang.Object)"
- "org.apache.commons.codec.language.DoubleMetaphone.encode(java.lang.String)"
- "org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen()"
- "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean)"
- "org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)"
type: "class"
implements:
- "<xref href=\"org.apache.commons.codec.StringEncoder?alt=org.apache.commons.codec.StringEncoder&text=StringEncoder\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.commons.codec.language"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
