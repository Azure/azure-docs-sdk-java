### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset"
fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset"
name: "AmazonS3Dataset"
nameWithType: "AmazonS3Dataset"
summary: "A single Amazon Simple Storage Service (S3) object or a set of S3 objects."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Dataset?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Dataset.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Dataset.annotations()"
- "com.azure.resourcemanager.datafactory.models.Dataset.description()"
- "com.azure.resourcemanager.datafactory.models.Dataset.folder()"
- "com.azure.resourcemanager.datafactory.models.Dataset.linkedServiceName()"
- "com.azure.resourcemanager.datafactory.models.Dataset.parameters()"
- "com.azure.resourcemanager.datafactory.models.Dataset.schema()"
- "com.azure.resourcemanager.datafactory.models.Dataset.structure()"
- "com.azure.resourcemanager.datafactory.models.Dataset.validate()"
- "com.azure.resourcemanager.datafactory.models.Dataset.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withSchema(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withStructure(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AmazonS3Dataset extends Dataset"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.AmazonS3Dataset()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.AmazonS3Dataset()"
  name: "AmazonS3Dataset()"
  nameWithType: "AmazonS3Dataset.AmazonS3Dataset()"
  syntax: "public AmazonS3Dataset()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.bucketName()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.bucketName()"
  name: "bucketName()"
  nameWithType: "AmazonS3Dataset.bucketName()"
  summary: "Get the bucket<wbr>Name property: The name of the Amazon S3 bucket."
  syntax: "public Object bucketName()"
  desc: "Get the bucketName property: The name of the Amazon S3 bucket. Type: string (or Expression with resultType string)."
  returns:
    description: "the bucketName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.compression()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.compression()"
  name: "compression()"
  nameWithType: "AmazonS3Dataset.compression()"
  summary: "Get the compression property: The data compression method used for the Amazon S3 object."
  syntax: "public DatasetCompression compression()"
  desc: "Get the compression property: The data compression method used for the Amazon S3 object."
  returns:
    description: "the compression value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetCompression?alt=com.azure.resourcemanager.datafactory.models.DatasetCompression&text=DatasetCompression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.format()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.format()"
  name: "format()"
  nameWithType: "AmazonS3Dataset.format()"
  summary: "Get the format property: The format of files."
  syntax: "public DatasetStorageFormat format()"
  desc: "Get the format property: The format of files."
  returns:
    description: "the format value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetStorageFormat?alt=com.azure.resourcemanager.datafactory.models.DatasetStorageFormat&text=DatasetStorageFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.key()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.key()"
  name: "key()"
  nameWithType: "AmazonS3Dataset.key()"
  summary: "Get the key property: The key of the Amazon S3 object."
  syntax: "public Object key()"
  desc: "Get the key property: The key of the Amazon S3 object. Type: string (or Expression with resultType string)."
  returns:
    description: "the key value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.modifiedDatetimeEnd()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.modifiedDatetimeEnd()"
  name: "modifiedDatetimeEnd()"
  nameWithType: "AmazonS3Dataset.modifiedDatetimeEnd()"
  summary: "Get the modified<wbr>Datetime<wbr>End property: The end of S3 object's modified datetime."
  syntax: "public Object modifiedDatetimeEnd()"
  desc: "Get the modifiedDatetimeEnd property: The end of S3 object's modified datetime. Type: string (or Expression with resultType string)."
  returns:
    description: "the modifiedDatetimeEnd value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.modifiedDatetimeStart()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.modifiedDatetimeStart()"
  name: "modifiedDatetimeStart()"
  nameWithType: "AmazonS3Dataset.modifiedDatetimeStart()"
  summary: "Get the modified<wbr>Datetime<wbr>Start property: The start of S3 object's modified datetime."
  syntax: "public Object modifiedDatetimeStart()"
  desc: "Get the modifiedDatetimeStart property: The start of S3 object's modified datetime. Type: string (or Expression with resultType string)."
  returns:
    description: "the modifiedDatetimeStart value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.prefix()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.prefix()"
  name: "prefix()"
  nameWithType: "AmazonS3Dataset.prefix()"
  summary: "Get the prefix property: The prefix filter for the S3 object name."
  syntax: "public Object prefix()"
  desc: "Get the prefix property: The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
  returns:
    description: "the prefix value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.validate()"
  name: "validate()"
  nameWithType: "AmazonS3Dataset.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.version()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.version()"
  name: "version()"
  nameWithType: "AmazonS3Dataset.version()"
  summary: "Get the version property: The version for the S3 object."
  syntax: "public Object version()"
  desc: "Get the version property: The version for the S3 object. Type: string (or Expression with resultType string)."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AmazonS3Dataset.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the Dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AmazonS3Dataset withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the Dataset."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withBucketName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withBucketName(Object bucketName)"
  name: "withBucketName(Object bucketName)"
  nameWithType: "AmazonS3Dataset.withBucketName(Object bucketName)"
  summary: "Set the bucket<wbr>Name property: The name of the Amazon S3 bucket."
  parameters:
  - description: "the bucketName value to set."
    name: "bucketName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withBucketName(Object bucketName)"
  desc: "Set the bucketName property: The name of the Amazon S3 bucket. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withCompression(com.azure.resourcemanager.datafactory.models.DatasetCompression)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withCompression(DatasetCompression compression)"
  name: "withCompression(DatasetCompression compression)"
  nameWithType: "AmazonS3Dataset.withCompression(DatasetCompression compression)"
  summary: "Set the compression property: The data compression method used for the Amazon S3 object."
  parameters:
  - description: "the compression value to set."
    name: "compression"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetCompression?alt=com.azure.resourcemanager.datafactory.models.DatasetCompression&text=DatasetCompression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withCompression(DatasetCompression compression)"
  desc: "Set the compression property: The data compression method used for the Amazon S3 object."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AmazonS3Dataset.withDescription(String description)"
  summary: "Set the description property: Dataset description."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withDescription(String description)"
  desc: "Set the description property: Dataset description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withFolder(DatasetFolder folder)"
  name: "withFolder(DatasetFolder folder)"
  nameWithType: "AmazonS3Dataset.withFolder(DatasetFolder folder)"
  summary: "Set the folder property: The folder that this Dataset is in."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
  parameters:
  - name: "folder"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetFolder?alt=com.azure.resourcemanager.datafactory.models.DatasetFolder&text=DatasetFolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withFolder(DatasetFolder folder)"
  desc: "Set the folder property: The folder that this Dataset is in. If not specified, Dataset will appear at the root level."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withFormat(com.azure.resourcemanager.datafactory.models.DatasetStorageFormat)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withFormat(DatasetStorageFormat format)"
  name: "withFormat(DatasetStorageFormat format)"
  nameWithType: "AmazonS3Dataset.withFormat(DatasetStorageFormat format)"
  summary: "Set the format property: The format of files."
  parameters:
  - description: "the format value to set."
    name: "format"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetStorageFormat?alt=com.azure.resourcemanager.datafactory.models.DatasetStorageFormat&text=DatasetStorageFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withFormat(DatasetStorageFormat format)"
  desc: "Set the format property: The format of files."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withKey(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withKey(Object key)"
  name: "withKey(Object key)"
  nameWithType: "AmazonS3Dataset.withKey(Object key)"
  summary: "Set the key property: The key of the Amazon S3 object."
  parameters:
  - description: "the key value to set."
    name: "key"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withKey(Object key)"
  desc: "Set the key property: The key of the Amazon S3 object. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "AmazonS3Dataset.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linked<wbr>Service<wbr>Name property: Linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  desc: "Set the linkedServiceName property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withModifiedDatetimeEnd(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withModifiedDatetimeEnd(Object modifiedDatetimeEnd)"
  name: "withModifiedDatetimeEnd(Object modifiedDatetimeEnd)"
  nameWithType: "AmazonS3Dataset.withModifiedDatetimeEnd(Object modifiedDatetimeEnd)"
  summary: "Set the modified<wbr>Datetime<wbr>End property: The end of S3 object's modified datetime."
  parameters:
  - description: "the modifiedDatetimeEnd value to set."
    name: "modifiedDatetimeEnd"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withModifiedDatetimeEnd(Object modifiedDatetimeEnd)"
  desc: "Set the modifiedDatetimeEnd property: The end of S3 object's modified datetime. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withModifiedDatetimeStart(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withModifiedDatetimeStart(Object modifiedDatetimeStart)"
  name: "withModifiedDatetimeStart(Object modifiedDatetimeStart)"
  nameWithType: "AmazonS3Dataset.withModifiedDatetimeStart(Object modifiedDatetimeStart)"
  summary: "Set the modified<wbr>Datetime<wbr>Start property: The start of S3 object's modified datetime."
  parameters:
  - description: "the modifiedDatetimeStart value to set."
    name: "modifiedDatetimeStart"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withModifiedDatetimeStart(Object modifiedDatetimeStart)"
  desc: "Set the modifiedDatetimeStart property: The start of S3 object's modified datetime. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AmazonS3Dataset.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AmazonS3Dataset withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for dataset."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withPrefix(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withPrefix(Object prefix)"
  name: "withPrefix(Object prefix)"
  nameWithType: "AmazonS3Dataset.withPrefix(Object prefix)"
  summary: "Set the prefix property: The prefix filter for the S3 object name."
  parameters:
  - description: "the prefix value to set."
    name: "prefix"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withPrefix(Object prefix)"
  desc: "Set the prefix property: The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withSchema(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withSchema(Object schema)"
  name: "withSchema(Object schema)"
  nameWithType: "AmazonS3Dataset.withSchema(Object schema)"
  summary: "Set the schema property: Columns that define the physical type schema of the dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withSchema(java.lang.Object)"
  parameters:
  - name: "schema"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withSchema(Object schema)"
  desc: "Set the schema property: Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withStructure(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withStructure(Object structure)"
  name: "withStructure(Object structure)"
  nameWithType: "AmazonS3Dataset.withStructure(Object structure)"
  summary: "Set the structure property: Columns that define the structure of the dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withStructure(java.lang.Object)"
  parameters:
  - name: "structure"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withStructure(Object structure)"
  desc: "Set the structure property: Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withVersion(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonS3Dataset.withVersion(Object version)"
  name: "withVersion(Object version)"
  nameWithType: "AmazonS3Dataset.withVersion(Object version)"
  summary: "Set the version property: The version for the S3 object."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonS3Dataset withVersion(Object version)"
  desc: "Set the version property: The version for the S3 object. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonS3Dataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonS3Dataset?alt=com.azure.resourcemanager.datafactory.models.AmazonS3Dataset&text=AmazonS3Dataset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A single Amazon Simple Storage Service (S3) object or a set of S3 objects."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
