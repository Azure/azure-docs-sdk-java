### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  id: ForwardingMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.ForwardingMap()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardEntrySet
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardKeySet
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardValues
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  langs:
  - java
  name: ForwardingMap<K,V>
  nameWithType: ForwardingMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A map which forwards all its method calls to another map. Subclasses should override one or more methods to modify the behavior of the backing map as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingMap` forward *indiscriminately* to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put" data-throw-if-not-resolved="false">#put</xref> alone *will not* change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll" data-throw-if-not-resolved="false">#putAll</xref>, which can lead to unexpected behavior. In this case, you should override `putAll` as well, either providing your own implementation, or delegating to the provided `standardPutAll` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingMap`.


    Each of the `standard` methods, where appropriate, use <xref uid="com.azure.cosmos.implementation.guava25.base.Objects.equal*" data-throw-if-not-resolved="false">Objects#equal</xref> to test equality for both keys and values. This may not be the desired behavior for map implementations that use non-standard notions of key equality, such as a `SortedMap` whose comparator is not consistent with `equals`.


    The `standard` methods and the collection views they return are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingMap<K,V> extends ForwardingObject implements Map<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  implements:
  - java.util.Map<K,V>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.ForwardingMap()
  id: ForwardingMap()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: ForwardingMap()
  nameWithType: ForwardingMap<K,V>.ForwardingMap()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.ForwardingMap()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.ForwardingMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingMap()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: clear()
  nameWithType: ForwardingMap<K,V>.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.clear()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  id: containsKey(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: containsKey(Object key)
  nameWithType: ForwardingMap<K,V>.containsKey(Object key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.containsKey(Object key)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean containsKey(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  id: containsValue(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: containsValue(Object value)
  nameWithType: ForwardingMap<K,V>.containsValue(Object value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.containsValue(Object value)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean containsValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingMap<K,V>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Map<K,V> delegate()
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: entrySet()
  nameWithType: ForwardingMap<K,V>.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.entrySet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Set<Map.Entry<K,V>> entrySet()
    return:
      type: java.util.Set<java.util.Map.Entry<K,V>>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: equals(Object object)
  nameWithType: ForwardingMap<K,V>.equals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.equals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  id: get(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: get(Object key)
  nameWithType: ForwardingMap<K,V>.get(Object key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.get(Object key)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V get(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: hashCode()
  nameWithType: ForwardingMap<K,V>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: isEmpty()
  nameWithType: ForwardingMap<K,V>.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.isEmpty()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  id: keySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: keySet()
  nameWithType: ForwardingMap<K,V>.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.keySet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Set<K> keySet()
    return:
      type: java.util.Set<K>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  id: put(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: put(K key, V value)
  nameWithType: ForwardingMap<K,V>.put(K key, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.put(K key, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V put(K key, V value)
    parameters:
    - id: key
      type: K
    - id: value
      type: V
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  id: putAll(java.util.Map<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: putAll(Map<? extends K,? extends V> map)
  nameWithType: ForwardingMap<K,V>.putAll(Map<? extends K,? extends V> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.putAll(Map<? extends K,? extends V> map)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void putAll(Map<? extends K,? extends V> map)
    parameters:
    - id: map
      type: java.util.Map<? extends K,? extends V>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: remove(Object object)
  nameWithType: ForwardingMap<K,V>.remove(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.remove(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V remove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: size()
  nameWithType: ForwardingMap<K,V>.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.size()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  id: standardClear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardClear()
  nameWithType: ForwardingMap<K,V>.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardClear()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear" data-throw-if-not-resolved="false">#clear</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. In many cases, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear" data-throw-if-not-resolved="false">#clear</xref> to forward to this implementation.
  syntax:
    content: protected void standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  id: standardContainsKey(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardContainsKey(Object key)
  nameWithType: ForwardingMap<K,V>.standardContainsKey(Object key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsKey(Object key)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible, albeit inefficient, definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey" data-throw-if-not-resolved="false">#containsKey</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey" data-throw-if-not-resolved="false">#containsKey</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContainsKey(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  id: standardContainsValue(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardContainsValue(Object value)
  nameWithType: ForwardingMap<K,V>.standardContainsValue(Object value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsValue(Object value)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue" data-throw-if-not-resolved="false">#containsValue</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue" data-throw-if-not-resolved="false">#containsValue</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContainsValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  id: standardEquals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardEquals(Object object)
  nameWithType: ForwardingMap<K,V>.standardEquals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardEquals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals" data-throw-if-not-resolved="false">#equals</xref> in terms of the `equals` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals" data-throw-if-not-resolved="false">#equals</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardEquals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  id: standardHashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardHashCode()
  nameWithType: ForwardingMap<K,V>.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardHashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode" data-throw-if-not-resolved="false">#hashCode</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode" data-throw-if-not-resolved="false">#hashCode</xref> to forward to this implementation.
  syntax:
    content: protected int standardHashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  id: standardIsEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardIsEmpty()
  nameWithType: ForwardingMap<K,V>.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardIsEmpty()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty" data-throw-if-not-resolved="false">#isEmpty</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty" data-throw-if-not-resolved="false">#isEmpty</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardIsEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  id: standardPutAll(java.util.Map<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardPutAll(Map<? extends K,? extends V> map)
  nameWithType: ForwardingMap<K,V>.standardPutAll(Map<? extends K,? extends V> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardPutAll(Map<? extends K,? extends V> map)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map&lt;? extends K,? extends V&gt;)" data-throw-if-not-resolved="false">#putAll(Map)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put*" data-throw-if-not-resolved="false">#put(Object, Object)</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put*" data-throw-if-not-resolved="false">#put(Object, Object)</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map&lt;? extends K,? extends V&gt;)" data-throw-if-not-resolved="false">#putAll(Map)</xref> to forward to this implementation.
  syntax:
    content: protected void standardPutAll(Map<? extends K,? extends V> map)
    parameters:
    - id: map
      type: java.util.Map<? extends K,? extends V>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  id: standardRemove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardRemove(Object key)
  nameWithType: ForwardingMap<K,V>.standardRemove(Object key)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardRemove(Object key)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible, albeit inefficient, definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove" data-throw-if-not-resolved="false">#remove</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove" data-throw-if-not-resolved="false">#remove</xref> to forward to this implementation.


    Alternately, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove" data-throw-if-not-resolved="false">#remove</xref> with `keySet().remove`, assuming that approach would not lead to an infinite loop.
  syntax:
    content: protected V standardRemove(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  id: standardToString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: standardToString()
  nameWithType: ForwardingMap<K,V>.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardToString()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.toString" data-throw-if-not-resolved="false">#toString</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMap.toString" data-throw-if-not-resolved="false">#toString</xref> to forward to this implementation.
  syntax:
    content: protected String standardToString()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  langs:
  - java
  name: values()
  nameWithType: ForwardingMap<K,V>.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.values()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Collection<V> values()
    return:
      type: java.util.Collection<V>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.ForwardingMap*
  name: ForwardingMap
  nameWithType: ForwardingMap<K,V>.ForwardingMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.ForwardingMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<K,V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate*
  name: delegate
  nameWithType: ForwardingMap<K,V>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size*
  name: size
  nameWithType: ForwardingMap<K,V>.size
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.size
  package: com.azure.cosmos.implementation.guava25.collect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty*
  name: isEmpty
  nameWithType: ForwardingMap<K,V>.isEmpty
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.isEmpty
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove*
  name: remove
  nameWithType: ForwardingMap<K,V>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear*
  name: clear
  nameWithType: ForwardingMap<K,V>.clear
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.clear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey*
  name: containsKey
  nameWithType: ForwardingMap<K,V>.containsKey
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.containsKey
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue*
  name: containsValue
  nameWithType: ForwardingMap<K,V>.containsValue
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.containsValue
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get*
  name: get
  nameWithType: ForwardingMap<K,V>.get
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.get
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put*
  name: put
  nameWithType: ForwardingMap<K,V>.put
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.put
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<? extends K,? extends V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll*
  name: putAll
  nameWithType: ForwardingMap<K,V>.putAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.putAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<K>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet*
  name: keySet
  nameWithType: ForwardingMap<K,V>.keySet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.keySet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<V>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values*
  name: values
  nameWithType: ForwardingMap<K,V>.values
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.values
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<java.util.Map.Entry<K,V>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet*
  name: entrySet
  nameWithType: ForwardingMap<K,V>.entrySet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.entrySet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals*
  name: equals
  nameWithType: ForwardingMap<K,V>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode*
  name: hashCode
  nameWithType: ForwardingMap<K,V>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll*
  name: standardPutAll
  nameWithType: ForwardingMap<K,V>.standardPutAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardPutAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove*
  name: standardRemove
  nameWithType: ForwardingMap<K,V>.standardRemove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardRemove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear*
  name: standardClear
  nameWithType: ForwardingMap<K,V>.standardClear
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardClear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey*
  name: standardContainsKey
  nameWithType: ForwardingMap<K,V>.standardContainsKey
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsKey
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue*
  name: standardContainsValue
  nameWithType: ForwardingMap<K,V>.standardContainsValue
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsValue
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty*
  name: standardIsEmpty
  nameWithType: ForwardingMap<K,V>.standardIsEmpty
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardIsEmpty
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals*
  name: standardEquals
  nameWithType: ForwardingMap<K,V>.standardEquals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardEquals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode*
  name: standardHashCode
  nameWithType: ForwardingMap<K,V>.standardHashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardHashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString*
  name: standardToString
  nameWithType: ForwardingMap<K,V>.standardToString
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardToString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  name: ForwardingObject
  nameWithType: ForwardingObject
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  name: ForwardingObject.delegate()
  nameWithType: ForwardingObject.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardEntrySet
  name: ForwardingMap<K,V>.StandardEntrySet
  nameWithType: ForwardingMap<K,V>.StandardEntrySet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.StandardEntrySet
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardKeySet
  name: ForwardingMap<K,V>.StandardKeySet
  nameWithType: ForwardingMap<K,V>.StandardKeySet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.StandardKeySet
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardValues
  name: ForwardingMap<K,V>.StandardValues
  nameWithType: ForwardingMap<K,V>.StandardValues
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.StandardValues
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
