### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.VideoSink"
fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink"
name: "VideoSink"
nameWithType: "VideoSink"
summary: "Video sink allows for video and audio to be recorded to the Video Analyzer service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.media.videoanalyzer.edge.models.SinkNodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getInputs()"
- "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VideoSink extends SinkNodeBase"
constructors:
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.VideoSink(java.lang.String,java.util.List<com.azure.media.videoanalyzer.edge.models.NodeInput>,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.VideoSink(String name, List<NodeInput> inputs, String videoName, String localMediaCachePath, String localMediaCacheMaximumSizeMiB)"
  name: "VideoSink(String name, List<NodeInput> inputs, String videoName, String localMediaCachePath, String localMediaCacheMaximumSizeMiB)"
  nameWithType: "VideoSink.VideoSink(String name, List<NodeInput> inputs, String videoName, String localMediaCachePath, String localMediaCacheMaximumSizeMiB)"
  summary: "Creates an instance of Video<wbr>Sink class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the inputs value to set."
    name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.media.videoanalyzer.edge.models.NodeInput?alt=com.azure.media.videoanalyzer.edge.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the videoName value to set."
    name: "videoName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the localMediaCachePath value to set."
    name: "localMediaCachePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the localMediaCacheMaximumSizeMiB value to set."
    name: "localMediaCacheMaximumSizeMiB"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink(String name, List<NodeInput> inputs, String videoName, String localMediaCachePath, String localMediaCacheMaximumSizeMiB)"
  desc: "Creates an instance of VideoSink class."
methods:
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.getLocalMediaCacheMaximumSizeMiB()"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.getLocalMediaCacheMaximumSizeMiB()"
  name: "getLocalMediaCacheMaximumSizeMiB()"
  nameWithType: "VideoSink.getLocalMediaCacheMaximumSizeMiB()"
  summary: "Get the local<wbr>Media<wbr>Cache<wbr>Maximum<wbr>Size<wbr>MiB property: Maximum amount of disk space that can be used for caching of temporary media files."
  syntax: "public String getLocalMediaCacheMaximumSizeMiB()"
  desc: "Get the localMediaCacheMaximumSizeMiB property: Maximum amount of disk space that can be used for caching of temporary media files. Once this limit is reached, the oldest segments of the media archive will be continuously deleted in order to make space for new media, thus leading to gaps in the cloud recorded content."
  returns:
    description: "the localMediaCacheMaximumSizeMiB value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.getLocalMediaCachePath()"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.getLocalMediaCachePath()"
  name: "getLocalMediaCachePath()"
  nameWithType: "VideoSink.getLocalMediaCachePath()"
  summary: "Get the local<wbr>Media<wbr>Cache<wbr>Path property: Path to a local file system directory for caching of temporary media files."
  syntax: "public String getLocalMediaCachePath()"
  desc: "Get the localMediaCachePath property: Path to a local file system directory for caching of temporary media files. This will also be used to store content which cannot be immediately uploaded to Azure due to Internet connectivity issues."
  returns:
    description: "the localMediaCachePath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoCreationProperties()"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoCreationProperties()"
  name: "getVideoCreationProperties()"
  nameWithType: "VideoSink.getVideoCreationProperties()"
  summary: "Get the video<wbr>Creation<wbr>Properties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  syntax: "public VideoCreationProperties getVideoCreationProperties()"
  desc: "Get the videoCreationProperties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  returns:
    description: "the videoCreationProperties value."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoCreationProperties?alt=com.azure.media.videoanalyzer.edge.models.VideoCreationProperties&text=VideoCreationProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoName()"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoName()"
  name: "getVideoName()"
  nameWithType: "VideoSink.getVideoName()"
  summary: "Get the video<wbr>Name property: Name of a new or existing Video Analyzer video resource used for the media recording."
  syntax: "public String getVideoName()"
  desc: "Get the videoName property: Name of a new or existing Video Analyzer video resource used for the media recording."
  returns:
    description: "the videoName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoPublishingOptions()"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.getVideoPublishingOptions()"
  name: "getVideoPublishingOptions()"
  nameWithType: "VideoSink.getVideoPublishingOptions()"
  summary: "Get the video<wbr>Publishing<wbr>Options property: Optional video publishing options to be used for changing publishing behavior of the output video."
  syntax: "public VideoPublishingOptions getVideoPublishingOptions()"
  desc: "Get the videoPublishingOptions property: Optional video publishing options to be used for changing publishing behavior of the output video."
  returns:
    description: "the videoPublishingOptions value."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoPublishingOptions?alt=com.azure.media.videoanalyzer.edge.models.VideoPublishingOptions&text=VideoPublishingOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.setVideoCreationProperties(com.azure.media.videoanalyzer.edge.models.VideoCreationProperties)"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.setVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  name: "setVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  nameWithType: "VideoSink.setVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  summary: "Set the video<wbr>Creation<wbr>Properties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  parameters:
  - description: "the videoCreationProperties value to set."
    name: "videoCreationProperties"
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoCreationProperties?alt=com.azure.media.videoanalyzer.edge.models.VideoCreationProperties&text=VideoCreationProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink setVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  desc: "Set the videoCreationProperties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  returns:
    description: "the VideoSink object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoSink?alt=com.azure.media.videoanalyzer.edge.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.VideoSink.setVideoPublishingOptions(com.azure.media.videoanalyzer.edge.models.VideoPublishingOptions)"
  fullName: "com.azure.media.videoanalyzer.edge.models.VideoSink.setVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  name: "setVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  nameWithType: "VideoSink.setVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  summary: "Set the video<wbr>Publishing<wbr>Options property: Optional video publishing options to be used for changing publishing behavior of the output video."
  parameters:
  - description: "the videoPublishingOptions value to set."
    name: "videoPublishingOptions"
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoPublishingOptions?alt=com.azure.media.videoanalyzer.edge.models.VideoPublishingOptions&text=VideoPublishingOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink setVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  desc: "Set the videoPublishingOptions property: Optional video publishing options to be used for changing publishing behavior of the output video."
  returns:
    description: "the VideoSink object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.VideoSink?alt=com.azure.media.videoanalyzer.edge.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Video sink allows for video and audio to be recorded to the Video Analyzer service. The recorded video can be played from anywhere and further managed from the cloud. Due to security reasons, a given Video Analyzer edge module instance can only record content to new video entries, or existing video entries previously recorded by the same module. Any attempt to record content to an existing video which has not been created by the same module instance will result in failure to record."
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.6
