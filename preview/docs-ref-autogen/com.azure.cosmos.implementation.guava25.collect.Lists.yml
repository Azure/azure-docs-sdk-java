### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.Lists"
fullName: "com.azure.cosmos.implementation.guava25.collect.Lists"
name: "Lists"
nameWithType: "Lists"
summary: "Static utility methods pertaining to <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref> instances. Also see this class's counterparts <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Sets\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Sets\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Maps\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Maps\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Queues\"></xref>.\n\nSee the Guava User Guide article on [ `Lists`][_Lists].\n\n\n[_Lists]: https://github.com/google/guava/wiki/CollectionUtilitiesExplained#lists"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Lists"
methods:
- "com.azure.cosmos.implementation.guava25.collect.Lists.<B>cartesianProduct(java.util.List<? extends B>...)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<B>cartesianProduct(java.util.List<? extends java.util.List<? extends B>>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E,E,E[])"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E,E[])"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayList()"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayList(E...)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayList(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayList(java.util.Iterator<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayListWithCapacity(int)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newArrayListWithExpectedSize(int)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newCopyOnWriteArrayList()"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newCopyOnWriteArrayList(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList()"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<F,T>transform(java.util.List<F>,com.azure.cosmos.implementation.guava25.base.Function<? super F,? extends T>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<T>partition(java.util.List<T>,int)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.<T>reverse(java.util.List<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.charactersOf(java.lang.CharSequence)"
- "com.azure.cosmos.implementation.guava25.collect.Lists.charactersOf(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
