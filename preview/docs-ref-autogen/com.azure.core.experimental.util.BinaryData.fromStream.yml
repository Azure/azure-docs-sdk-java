### YamlMime:JavaMember
uid: "com.azure.core.experimental.util.BinaryData.fromStream*"
fullName: "com.azure.core.experimental.util.BinaryData.fromStream"
name: "fromStream"
nameWithType: "BinaryData.fromStream"
members:
- uid: "com.azure.core.experimental.util.BinaryData.fromStream(java.io.InputStream)"
  fullName: "com.azure.core.experimental.util.BinaryData.fromStream(InputStream inputStream)"
  name: "fromStream(InputStream inputStream)"
  nameWithType: "BinaryData.fromStream(InputStream inputStream)"
  summary: "Create <xref uid=\"com.azure.core.experimental.util.BinaryData\" data-throw-if-not-resolved=\"false\">BinaryData</xref> instance with given <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> as source of data. The <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> is not closed by this function.\n\n**Create an instance from InputStream**\n\n```java\nfinal byte[] data = \"Some Data\".getBytes(StandardCharsets.UTF_8);\n BinaryData binaryData = BinaryData.fromStream(new ByteArrayInputStream(data));\n System.out.println(binaryData.toString());\n```"
  parameters:
  - description: "to read bytes from."
    name: "inputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BinaryData fromStream(InputStream inputStream)"
  returns:
    description: "<xref uid=\"com.azure.core.experimental.util.BinaryData\" data-throw-if-not-resolved=\"false\">BinaryData</xref> representing the binary data."
    type: "<xref href=\"com.azure.core.experimental.util.BinaryData?alt=com.azure.core.experimental.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.experimental.util"
artifact: com.azure:azure-core-experimental:1.0.0-beta.7
