### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  id: ReadOnlyClassToSerializerMap
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl
  children:
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap(java.util.Map<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from(java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size()
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(java.lang.Class<?>)
  langs:
  - java
  name: ReadOnlyClassToSerializerMap
  nameWithType: ReadOnlyClassToSerializerMap
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  type: Class
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Optimized lookup table for accessing two types of serializers; typed and non-typed. Only accessed from a single thread, so no synchronization needed for accessors.


    Note that before 2.6 this class was much smaller, and referred most operations to separate `JsonSerializerMap`, but in 2.6 functions were combined.
  syntax:
    content: public final class ReadOnlyClassToSerializerMap
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap(java.util.Map<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  id: ReadOnlyClassToSerializerMap(java.util.Map<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: ReadOnlyClassToSerializerMap(Map<TypeKey,JsonSerializer<Object>> serializers)
  nameWithType: ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap(Map<TypeKey,JsonSerializer<Object>> serializers)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap(Map<TypeKey,JsonSerializer<Object>> serializers)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public ReadOnlyClassToSerializerMap(Map<TypeKey,JsonSerializer<Object>> serializers)
    parameters:
    - id: serializers
      type: java.util.Map<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from(java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  id: from(java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: from(HashMap<TypeKey,JsonSerializer<Object>> src)
  nameWithType: ReadOnlyClassToSerializerMap.from(HashMap<TypeKey,JsonSerializer<Object>> src)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from(HashMap<TypeKey,JsonSerializer<Object>> src)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Factory method for constructing an instance.
  syntax:
    content: public static ReadOnlyClassToSerializerMap from(HashMap<TypeKey,JsonSerializer<Object>> src)
    parameters:
    - id: src
      type: java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>
    return:
      type: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: size()
  nameWithType: ReadOnlyClassToSerializerMap.size()
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size()
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  id: typedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: typedValueSerializer(JavaType type)
  nameWithType: ReadOnlyClassToSerializerMap.typedValueSerializer(JavaType type)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(JavaType type)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public JsonSerializer<Object> typedValueSerializer(JavaType type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(java.lang.Class<?>)
  id: typedValueSerializer(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: typedValueSerializer(Class<?> type)
  nameWithType: ReadOnlyClassToSerializerMap.typedValueSerializer(Class<?> type)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer(Class<?> type)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public JsonSerializer<Object> typedValueSerializer(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  id: untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: untypedValueSerializer(JavaType type)
  nameWithType: ReadOnlyClassToSerializerMap.untypedValueSerializer(JavaType type)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(JavaType type)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public JsonSerializer<Object> untypedValueSerializer(JavaType type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(java.lang.Class<?>)
  id: untypedValueSerializer(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap
  langs:
  - java
  name: untypedValueSerializer(Class<?> type)
  nameWithType: ReadOnlyClassToSerializerMap.untypedValueSerializer(Class<?> type)
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer(Class<?> type)
  overload: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public JsonSerializer<Object> untypedValueSerializer(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
references:
- uid: java.util.Map<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.util.TypeKey
    name: TypeKey
    fullName: com.fasterxml.jackson.databind.util.TypeKey
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap*
  name: ReadOnlyClassToSerializerMap
  nameWithType: ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.ReadOnlyClassToSerializerMap
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.util.TypeKey
    name: TypeKey
    fullName: com.fasterxml.jackson.databind.util.TypeKey
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from*
  name: from
  nameWithType: ReadOnlyClassToSerializerMap.from
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.from
  package: com.fasterxml.jackson.databind.ser.impl
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size*
  name: size
  nameWithType: ReadOnlyClassToSerializerMap.size
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.size
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer*
  name: typedValueSerializer
  nameWithType: ReadOnlyClassToSerializerMap.typedValueSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.typedValueSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer*
  name: untypedValueSerializer
  nameWithType: ReadOnlyClassToSerializerMap.untypedValueSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.untypedValueSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer
  name: TypeKey,JsonSerializer
  nameWithType: TypeKey,JsonSerializer
  fullName: com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
