### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.implementation.TablesImpl
  id: TablesImpl
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation
  children:
  - com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync(com.azure.data.tables.implementation.models.TableProperties,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync(java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.azure.data.tables.implementation.models.SignedIdentifier>,com.azure.core.util.Context)
  - com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  langs:
  - java
  name: TablesImpl
  nameWithType: TablesImpl
  fullName: com.azure.data.tables.implementation.TablesImpl
  type: Class
  package: com.azure.data.tables.implementation
  summary: An instance of this class provides access to all the operations defined in Tables.
  syntax:
    content: public final class TablesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.implementation.TablesImpl.TablesImpl(com.azure.data.tables.implementation.AzureTableImpl,com.azure.core.util.serializer.SerializerAdapter)
  id: TablesImpl(com.azure.data.tables.implementation.AzureTableImpl,com.azure.core.util.serializer.SerializerAdapter)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: TablesImpl(AzureTableImpl client, SerializerAdapter serializerAdapter)
  nameWithType: TablesImpl.TablesImpl(AzureTableImpl client, SerializerAdapter serializerAdapter)
  fullName: com.azure.data.tables.implementation.TablesImpl.TablesImpl(AzureTableImpl client, SerializerAdapter serializerAdapter)
  overload: com.azure.data.tables.implementation.TablesImpl.TablesImpl*
  type: Constructor
  package: com.azure.data.tables.implementation
  summary: Initializes an instance of TablesImpl.
  syntax:
    content: " TablesImpl(AzureTableImpl client, SerializerAdapter serializerAdapter)"
    parameters:
    - id: client
      type: com.azure.data.tables.implementation.AzureTableImpl
      description: the instance of the service client containing this operation class.
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync(com.azure.data.tables.implementation.models.TableProperties,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: createWithResponseAsync(com.azure.data.tables.implementation.models.TableProperties,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: createWithResponseAsync(TableProperties tableProperties, String requestId, ResponseFormat responsePreference, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.createWithResponseAsync(TableProperties tableProperties, String requestId, ResponseFormat responsePreference, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync(TableProperties tableProperties, String requestId, ResponseFormat responsePreference, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Creates a new table under the given account.
  syntax:
    content: public Mono<TablesCreateResponse> createWithResponseAsync(TableProperties tableProperties, String requestId, ResponseFormat responsePreference, QueryOptions queryOptions, Context context)
    parameters:
    - id: tableProperties
      type: com.azure.data.tables.implementation.models.TableProperties
      description: The properties for creating a table.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: responsePreference
      type: com.azure.data.tables.implementation.models.ResponseFormat
      description: >-
        Specifies whether the response should include the inserted entity in the payload.
             Possible values are return-no-content and return-content.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesCreateResponse>
      description: the response for a single table.
- uid: com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: deleteEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: deleteEntityWithResponseAsync(String table, String partitionKey, String rowKey, String ifMatch, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.deleteEntityWithResponseAsync(String table, String partitionKey, String rowKey, String ifMatch, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync(String table, String partitionKey, String rowKey, String ifMatch, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Deletes the specified entity in a table.
  syntax:
    content: public Mono<TablesDeleteEntityResponse> deleteEntityWithResponseAsync(String table, String partitionKey, String rowKey, String ifMatch, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: partitionKey
      type: java.lang.String
      description: The partition key of the entity.
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Match condition for an entity to be deleted. If specified and a matching entity is not found, an
             error will be raised. To force an unconditional delete, set to the wildcard character (*).
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesDeleteEntityResponse>
      description: the completion.
- uid: com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: deleteWithResponseAsync(String table, String requestId, Context context)
  nameWithType: TablesImpl.deleteWithResponseAsync(String table, String requestId, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync(String table, String requestId, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Operation permanently deletes the specified table.
  syntax:
    content: public Mono<TablesDeleteResponse> deleteWithResponseAsync(String table, String requestId, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesDeleteResponse>
      description: the completion.
- uid: com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: getAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: getAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, Context context)
  nameWithType: TablesImpl.getAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures.
  syntax:
    content: public Mono<TablesGetAccessPolicyResponse> getAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse>
      description: a collection of signed identifiers.
- uid: com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: insertEntityWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.ResponseFormat,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: insertEntityWithResponseAsync(String table, Integer timeout, String requestId, ResponseFormat responsePreference, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.insertEntityWithResponseAsync(String table, Integer timeout, String requestId, ResponseFormat responsePreference, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync(String table, Integer timeout, String requestId, ResponseFormat responsePreference, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Insert entity in a table.
  syntax:
    content: public Mono<TablesInsertEntityResponse> insertEntityWithResponseAsync(String table, Integer timeout, String requestId, ResponseFormat responsePreference, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: responsePreference
      type: com.azure.data.tables.implementation.models.ResponseFormat
      description: >-
        Specifies whether the response should include the inserted entity in the payload.
             Possible values are return-no-content and return-content.
    - id: tableEntityProperties
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: The other properties of the table entity.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesInsertEntityResponse>
      description: the other properties of the table entity.
- uid: com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: mergeEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: mergeEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.mergeEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Merge entity in a table.
  syntax:
    content: public Mono<TablesMergeEntityResponse> mergeEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: partitionKey
      type: java.lang.String
      description: The partition key of the entity.
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Match condition for an entity to be updated. If specified and a matching entity is not found, an
             error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified,
             an insert will be performed when no existing entity is found to update and a merge will be performed if an
             existing entity is found.
    - id: tableEntityProperties
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: The other properties of the table entity.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesMergeEntityResponse>
      description: the completion.
- uid: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: queryEntitiesWithPartitionAndRowKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: queryEntitiesWithPartitionAndRowKeyWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Queries entities in a table.
  syntax:
    content: public Mono<TablesQueryEntitiesWithPartitionAndRowKeyResponse> queryEntitiesWithPartitionAndRowKeyWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: partitionKey
      type: java.lang.String
      description: The partition key of the entity.
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse>
      description: the properties for the table entity query response.
- uid: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: queryEntitiesWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: queryEntitiesWithResponseAsync(String table, Integer timeout, String requestId, String nextPartitionKey, String nextRowKey, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.queryEntitiesWithResponseAsync(String table, Integer timeout, String requestId, String nextPartitionKey, String nextRowKey, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync(String table, Integer timeout, String requestId, String nextPartitionKey, String nextRowKey, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Queries entities in a table.
  syntax:
    content: public Mono<TablesQueryEntitiesResponse> queryEntitiesWithResponseAsync(String table, Integer timeout, String requestId, String nextPartitionKey, String nextRowKey, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: nextPartitionKey
      type: java.lang.String
      description: An entity query continuation token from a previous call.
    - id: nextRowKey
      type: java.lang.String
      description: An entity query continuation token from a previous call.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse>
      description: the properties for the table entity query response.
- uid: com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync(java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: queryWithResponseAsync(java.lang.String,java.lang.String,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: queryWithResponseAsync(String requestId, String nextTableName, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.queryWithResponseAsync(String requestId, String nextTableName, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync(String requestId, String nextTableName, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Queries tables under the given account.
  syntax:
    content: public Mono<TablesQueryResponse> queryWithResponseAsync(String requestId, String nextTableName, QueryOptions queryOptions, Context context)
    parameters:
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: nextTableName
      type: java.lang.String
      description: A table query continuation token from a previous call.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryResponse>
      description: the properties for the table query response.
- uid: com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.azure.data.tables.implementation.models.SignedIdentifier>,com.azure.core.util.Context)
  id: setAccessPolicyWithResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.azure.data.tables.implementation.models.SignedIdentifier>,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: setAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, List<SignedIdentifier> tableAcl, Context context)
  nameWithType: TablesImpl.setAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, List<SignedIdentifier> tableAcl, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, List<SignedIdentifier> tableAcl, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Sets stored access policies for the table that may be used with Shared Access Signatures.
  syntax:
    content: public Mono<TablesSetAccessPolicyResponse> setAccessPolicyWithResponseAsync(String table, Integer timeout, String requestId, List<SignedIdentifier> tableAcl, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: tableAcl
      type: java.util.List<com.azure.data.tables.implementation.models.SignedIdentifier>
      description: A collection of signed identifiers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse>
      description: the completion.
- uid: com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  id: updateEntityWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.data.tables.implementation.models.QueryOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.TablesImpl
  langs:
  - java
  name: updateEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  nameWithType: TablesImpl.updateEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  fullName: com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
  overload: com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync*
  type: Method
  package: com.azure.data.tables.implementation
  summary: Update entity in a table.
  syntax:
    content: public Mono<TablesUpdateEntityResponse> updateEntityWithResponseAsync(String table, String partitionKey, String rowKey, Integer timeout, String requestId, String ifMatch, Map<String,Object> tableEntityProperties, QueryOptions queryOptions, Context context)
    parameters:
    - id: table
      type: java.lang.String
      description: The name of the table.
    - id: partitionKey
      type: java.lang.String
      description: The partition key of the entity.
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    - id: timeout
      type: java.lang.Integer
      description: The timeout parameter is expressed in seconds.
    - id: requestId
      type: java.lang.String
      description: >-
        Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
             analytics logs when analytics logging is enabled.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Match condition for an entity to be updated. If specified and a matching entity is not found, an
             error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified,
             an insert will be performed when no existing entity is found to update and a replace will be performed if an
             existing entity is found.
    - id: tableEntityProperties
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: The other properties of the table entity.
    - id: queryOptions
      type: com.azure.data.tables.implementation.models.QueryOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesUpdateEntityResponse>
      description: the completion.
references:
- uid: com.azure.data.tables.implementation.AzureTableImpl
  name: AzureTableImpl
  nameWithType: AzureTableImpl
  fullName: com.azure.data.tables.implementation.AzureTableImpl
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.data.tables.implementation.TablesImpl.TablesImpl*
  name: TablesImpl
  nameWithType: TablesImpl.TablesImpl
  fullName: com.azure.data.tables.implementation.TablesImpl.TablesImpl
  package: com.azure.data.tables.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.implementation.models.QueryOptions
  name: QueryOptions
  nameWithType: QueryOptions
  fullName: com.azure.data.tables.implementation.models.QueryOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesQueryResponse
    name: TablesQueryResponse
    fullName: com.azure.data.tables.implementation.models.TablesQueryResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync*
  name: queryWithResponseAsync
  nameWithType: TablesImpl.queryWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.queryWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: com.azure.data.tables.implementation.models.TableProperties
  name: TableProperties
  nameWithType: TableProperties
  fullName: com.azure.data.tables.implementation.models.TableProperties
- uid: com.azure.data.tables.implementation.models.ResponseFormat
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: com.azure.data.tables.implementation.models.ResponseFormat
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesCreateResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesCreateResponse
    name: TablesCreateResponse
    fullName: com.azure.data.tables.implementation.models.TablesCreateResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: TablesImpl.createWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.createWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesDeleteResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesDeleteResponse
    name: TablesDeleteResponse
    fullName: com.azure.data.tables.implementation.models.TablesDeleteResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: TablesImpl.deleteWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.deleteWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse
    name: TablesQueryEntitiesResponse
    fullName: com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync*
  name: queryEntitiesWithResponseAsync
  nameWithType: TablesImpl.queryEntitiesWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse
    name: TablesQueryEntitiesWithPartitionAndRowKeyResponse
    fullName: com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync*
  name: queryEntitiesWithPartitionAndRowKeyWithResponseAsync
  nameWithType: TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.queryEntitiesWithPartitionAndRowKeyWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesUpdateEntityResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesUpdateEntityResponse
    name: TablesUpdateEntityResponse
    fullName: com.azure.data.tables.implementation.models.TablesUpdateEntityResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync*
  name: updateEntityWithResponseAsync
  nameWithType: TablesImpl.updateEntityWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.updateEntityWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesMergeEntityResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesMergeEntityResponse
    name: TablesMergeEntityResponse
    fullName: com.azure.data.tables.implementation.models.TablesMergeEntityResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync*
  name: mergeEntityWithResponseAsync
  nameWithType: TablesImpl.mergeEntityWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.mergeEntityWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesDeleteEntityResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesDeleteEntityResponse
    name: TablesDeleteEntityResponse
    fullName: com.azure.data.tables.implementation.models.TablesDeleteEntityResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync*
  name: deleteEntityWithResponseAsync
  nameWithType: TablesImpl.deleteEntityWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.deleteEntityWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesInsertEntityResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesInsertEntityResponse
    name: TablesInsertEntityResponse
    fullName: com.azure.data.tables.implementation.models.TablesInsertEntityResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync*
  name: insertEntityWithResponseAsync
  nameWithType: TablesImpl.insertEntityWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.insertEntityWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse
    name: TablesGetAccessPolicyResponse
    fullName: com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync*
  name: getAccessPolicyWithResponseAsync
  nameWithType: TablesImpl.getAccessPolicyWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.getAccessPolicyWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: java.util.List<com.azure.data.tables.implementation.models.SignedIdentifier>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.SignedIdentifier
    name: SignedIdentifier
    fullName: com.azure.data.tables.implementation.models.SignedIdentifier
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse
    name: TablesSetAccessPolicyResponse
    fullName: com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync*
  name: setAccessPolicyWithResponseAsync
  nameWithType: TablesImpl.setAccessPolicyWithResponseAsync
  fullName: com.azure.data.tables.implementation.TablesImpl.setAccessPolicyWithResponseAsync
  package: com.azure.data.tables.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.data.tables.implementation.models.TablesQueryResponse
  name: TablesQueryResponse
  nameWithType: TablesQueryResponse
  fullName: com.azure.data.tables.implementation.models.TablesQueryResponse
- uid: com.azure.data.tables.implementation.models.TablesCreateResponse
  name: TablesCreateResponse
  nameWithType: TablesCreateResponse
  fullName: com.azure.data.tables.implementation.models.TablesCreateResponse
- uid: com.azure.data.tables.implementation.models.TablesDeleteResponse
  name: TablesDeleteResponse
  nameWithType: TablesDeleteResponse
  fullName: com.azure.data.tables.implementation.models.TablesDeleteResponse
- uid: com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse
  name: TablesQueryEntitiesResponse
  nameWithType: TablesQueryEntitiesResponse
  fullName: com.azure.data.tables.implementation.models.TablesQueryEntitiesResponse
- uid: com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse
  name: TablesQueryEntitiesWithPartitionAndRowKeyResponse
  nameWithType: TablesQueryEntitiesWithPartitionAndRowKeyResponse
  fullName: com.azure.data.tables.implementation.models.TablesQueryEntitiesWithPartitionAndRowKeyResponse
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.azure.data.tables.implementation.models.TablesUpdateEntityResponse
  name: TablesUpdateEntityResponse
  nameWithType: TablesUpdateEntityResponse
  fullName: com.azure.data.tables.implementation.models.TablesUpdateEntityResponse
- uid: com.azure.data.tables.implementation.models.TablesMergeEntityResponse
  name: TablesMergeEntityResponse
  nameWithType: TablesMergeEntityResponse
  fullName: com.azure.data.tables.implementation.models.TablesMergeEntityResponse
- uid: com.azure.data.tables.implementation.models.TablesDeleteEntityResponse
  name: TablesDeleteEntityResponse
  nameWithType: TablesDeleteEntityResponse
  fullName: com.azure.data.tables.implementation.models.TablesDeleteEntityResponse
- uid: com.azure.data.tables.implementation.models.TablesInsertEntityResponse
  name: TablesInsertEntityResponse
  nameWithType: TablesInsertEntityResponse
  fullName: com.azure.data.tables.implementation.models.TablesInsertEntityResponse
- uid: com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse
  name: TablesGetAccessPolicyResponse
  nameWithType: TablesGetAccessPolicyResponse
  fullName: com.azure.data.tables.implementation.models.TablesGetAccessPolicyResponse
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.data.tables.implementation.models.SignedIdentifier
  name: SignedIdentifier
  nameWithType: SignedIdentifier
  fullName: com.azure.data.tables.implementation.models.SignedIdentifier
- uid: com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse
  name: TablesSetAccessPolicyResponse
  nameWithType: TablesSetAccessPolicyResponse
  fullName: com.azure.data.tables.implementation.models.TablesSetAccessPolicyResponse
