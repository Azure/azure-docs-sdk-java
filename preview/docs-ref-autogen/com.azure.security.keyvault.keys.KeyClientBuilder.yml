### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.keys.KeyClientBuilder
  id: KeyClientBuilder
  parent: com.azure.security.keyvault.keys
  children:
  - com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(HttpPipelinePolicy)
  - com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()
  - com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()
  - com.azure.security.keyvault.keys.KeyClientBuilder.configuration(Configuration)
  - com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)
  - com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)
  - com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(HttpClient)
  - com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel(HttpLogDetailLevel)
  - com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()
  - com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: KeyClientBuilder
  nameWithType: KeyClientBuilder
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder
  type: Class
  source:
    remote: &o0
      path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 54
  package: com.azure.security.keyvault.keys
  summary: "<p>This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">secret async client</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">secret sync client</xref>, by calling <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> respectively It constructs an instance of the desired client.</p>\r\n<p>The minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>. </p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.instantiation}</p>\r\n<p>The <xref uid=\"\" data-throw-if-not-resolved=\"false\">log detail level</xref>, multiple custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">policies</xref> and custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http client</xref> can be optionally configured in the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref>.</p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.withhttpclient.instantiation}</p>\r\n<p>Alternatively, custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http pipeline</xref> with custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> policies and <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> can be specified. It provides finer control over the construction of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref></p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.pipeline.instantiation}</p>\r\n<p>The minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">secretClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>. </p>\r\n<p>{ com.azure.security.keyvault.keys.keyclient.instantiation}</p>\r\n<p></p>"
  syntax: &o3
    content: public class KeyClientBuilder
  inheritance:
  - java.lang.Object
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(HttpPipelinePolicy)
  id: addPolicy(HttpPipelinePolicy)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy policy)
  nameWithType: KeyClientBuilder.addPolicy(HttpPipelinePolicy policy)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy(HttpPipelinePolicy policy)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 187
  package: com.azure.security.keyvault.keys
  summary: "<p>Adds a policy to the set of existing policies that are executed after <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> required policies.</p>\r\n<p></p>"
  syntax:
    content: public KeyClientBuilder addPolicy(HttpPipelinePolicy policy)
    parameters:
    - id: policy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: <p>The <xref uid="" data-throw-if-not-resolved="false">policy</xref> to be added. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder" data-throw-if-not-resolved="false">KeyClientBuilder</xref> object. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>policy 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()
  id: buildAsyncClient()
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: buildAsyncClient()
  nameWithType: KeyClientBuilder.buildAsyncClient()
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 104
  package: com.azure.security.keyvault.keys
  summary: "<p>Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> based on options set in the builder. Every time<code>buildAsyncClient() \r\n    </code> is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> is created.</p>\r\n<p>If <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the<code>pipeline \r\n    </code> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">serviceEndpoint</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If<code>pipeline \r\n    </code> is not set, then <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential and  KeyClientBuilder#endpoint(String)</xref> key vault endpoint are required to build the <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>.}</p>\r\n<p></p>"
  syntax: &o5
    content: public KeyAsyncClient buildAsyncClient()
    return:
      type: com.azure.security.keyvault.keys.KeyAsyncClient
      description: <p>A <xref uid="com.azure.security.keyvault.keys.KeyAsyncClient" data-throw-if-not-resolved="false">KeyAsyncClient</xref> with the options set from the builder. </p>
  exceptions:
  - type: 12fe80de
    description: <p>If <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)" data-throw-if-not-resolved="false">KeyClientBuilder#credential(TokenCredential)</xref> or <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)" data-throw-if-not-resolved="false">KeyClientBuilder#endpoint(String)</xref> have not been set. </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()
  id: buildClient()
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: buildClient()
  nameWithType: KeyClientBuilder.buildClient()
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 87
  package: com.azure.security.keyvault.keys
  summary: "<p>Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> based on options set in the builder. Every time<code>buildClient() \r\n    </code> is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> is created.</p>\r\n<p>If <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the<code>pipeline \r\n    </code> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">serviceEndpoint</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If<code>pipeline \r\n    </code> is not set, then <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">key vault endpoint</xref> are required to build the <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">client</xref>.</p>\r\n<p></p>"
  syntax: &o6
    content: public KeyClient buildClient()
    return:
      type: com.azure.security.keyvault.keys.KeyClient
      description: <p>A <xref uid="com.azure.security.keyvault.keys.KeyClient" data-throw-if-not-resolved="false">KeyClient</xref> with the options set from the builder. </p>
  exceptions:
  - type: 12fe80de
    description: <p>If <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)" data-throw-if-not-resolved="false">KeyClientBuilder#credential(TokenCredential)</xref> or <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)" data-throw-if-not-resolved="false">KeyClientBuilder#endpoint(String)</xref> have not been set. </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.configuration(Configuration)
  id: configuration(Configuration)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: KeyClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.configuration(Configuration configuration)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.configuration*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 230
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the configuration store that is used during construction of the service client.</p>\r\n<p>The default configuration store is a clone of the <xref uid=\"com.azure.core.util.configuration.ConfigurationManager.getConfiguration()\" data-throw-if-not-resolved=\"false\">global configuration store</xref>, use <xref uid=\"com.azure.core.util.configuration.Configuration.NONE\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction.</p>\r\n<p></p>"
  syntax:
    content: public KeyClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.configuration.Configuration
      description: <p>The configuration store used to </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>The updated KeyClientBuilder object. </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)
  id: credential(TokenCredential)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: KeyClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential credential)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.credential*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 159
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the credential to use when authenticating HTTP requests.</p>\r\n<p></p>"
  syntax: &o4
    content: public KeyClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credentials.TokenCredential
      description: <p>The credential to use for authenticating HTTP requests. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder" data-throw-if-not-resolved="false">KeyClientBuilder</xref> object. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>credential 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)
  id: endpoint(String)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: KeyClientBuilder.endpoint(String endpoint)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String endpoint)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 143
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the vault endpoint url to send HTTP requests to.</p>\r\n<p></p>"
  syntax: &o2
    content: public KeyClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: "26831127"
      description: <p>The vault endpoint url is used as destination on Azure to send requests to. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated ServiceClientBuilder object. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if<code>endpoint 

          </code> is null or it cannot be parsed into a valid URL. </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(HttpClient)
  id: httpClient(HttpClient)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: httpClient(HttpClient client)
  nameWithType: KeyClientBuilder.httpClient(HttpClient client)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.httpClient(HttpClient client)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.httpClient*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 200
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the HTTP client to use for sending and receiving requests to and from the service.</p>\r\n<p></p>"
  syntax:
    content: public KeyClientBuilder httpClient(HttpClient client)
    parameters:
    - id: client
      type: com.azure.core.http.HttpClient
      description: <p>The HTTP client to use for requests. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder" data-throw-if-not-resolved="false">KeyClientBuilder</xref> object. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>client 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel(HttpLogDetailLevel)
  id: httpLogDetailLevel(HttpLogDetailLevel)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: httpLogDetailLevel(HttpLogDetailLevel logLevel)
  nameWithType: KeyClientBuilder.httpLogDetailLevel(HttpLogDetailLevel logLevel)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel(HttpLogDetailLevel logLevel)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 174
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the logging level for HTTP requests and responses.</p>\r\n<p>logLevel is optional. If not provided, default value of <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel.NONE\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set.</p>\r\n<p></p>"
  syntax:
    content: public KeyClientBuilder httpLogDetailLevel(HttpLogDetailLevel logLevel)
    parameters:
    - id: logLevel
      type: com.azure.core.http.policy.HttpLogDetailLevel
      description: <p>The amount of logging output when sending and receiving HTTP requests/responses. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder" data-throw-if-not-resolved="false">KeyClientBuilder</xref> object. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>logLevel 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()
  id: KeyClientBuilder()
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: KeyClientBuilder()
  nameWithType: KeyClientBuilder.KeyClientBuilder()
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder()
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder*
  type: Constructor
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 67
  package: com.azure.security.keyvault.keys
  summary: "<p>The constructor with defaults. </p>"
  syntax:
    content: public KeyClientBuilder()
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)
  id: pipeline(HttpPipeline)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  langs:
  - java
  name: pipeline(HttpPipeline pipeline)
  nameWithType: KeyClientBuilder.pipeline(HttpPipeline pipeline)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline pipeline)
  overload: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/azure-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java
    startLine: 215
  package: com.azure.security.keyvault.keys
  summary: "<p>Sets the HTTP pipeline to use for the service client.</p>\r\n<p>If<code>pipeline \r\n    </code> is set, all other settings are ignored, aside from <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> or <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref>.</p>\r\n<p></p>"
  syntax: &o1
    content: public KeyClientBuilder pipeline(HttpPipeline pipeline)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: <p>The HTTP pipeline to use for sending service requests and receiving responses. </p>
    return:
      type: com.azure.security.keyvault.keys.KeyClientBuilder
      description: <p>the updated <xref uid="com.azure.security.keyvault.keys.KeyClientBuilder" data-throw-if-not-resolved="false">KeyClientBuilder</xref> object. </p>
references:
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder*
  name: KeyClientBuilder
  nameWithType: KeyClientBuilder.KeyClientBuilder
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.KeyClientBuilder
  package: com.azure.security.keyvault.keys
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient*
  name: buildClient
  nameWithType: KeyClientBuilder.buildClient
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient*
  name: buildAsyncClient
  nameWithType: KeyClientBuilder.buildAsyncClient
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient
  package: com.azure.security.keyvault.keys
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint*
  name: endpoint
  nameWithType: KeyClientBuilder.endpoint
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint
  package: com.azure.security.keyvault.keys
- uid: 17c54119
  spec.java:
  - name: NullPointerException
    fullName: NullPointerException
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.credential*
  name: credential
  nameWithType: KeyClientBuilder.credential
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.credential
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel*
  name: httpLogDetailLevel
  nameWithType: KeyClientBuilder.httpLogDetailLevel
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.httpLogDetailLevel
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: KeyClientBuilder.addPolicy
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.addPolicy
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.httpClient*
  name: httpClient
  nameWithType: KeyClientBuilder.httpClient
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.httpClient
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline*
  name: pipeline
  nameWithType: KeyClientBuilder.pipeline
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline
  package: com.azure.security.keyvault.keys
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.configuration*
  name: configuration
  nameWithType: KeyClientBuilder.configuration
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.configuration
  package: com.azure.security.keyvault.keys
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpPipelinePolicy.yml
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
  type: Interface
  summary: "<p>Pipeline policy. </p>"
  syntax:
    content: public interface HttpPipelinePolicy
- uid: com.azure.core.credentials.TokenCredential
  parent: com.azure.core.credentials
  href: com.azure.core.credentials.TokenCredential.yml
  name: TokenCredential
  nameWithType: TokenCredential
  fullName: com.azure.core.credentials.TokenCredential
  type: Interface
  summary: "<p>The interface for credentials that can provide a token. </p>"
  syntax:
    content: public interface TokenCredential
- uid: com.azure.core.http.HttpPipeline
  parent: com.azure.core.http
  href: com.azure.core.http.HttpPipeline.yml
  name: HttpPipeline
  nameWithType: HttpPipeline
  fullName: com.azure.core.http.HttpPipeline
  type: Class
  summary: "<p>The http pipeline. </p>"
  syntax:
    content: public class HttpPipeline
- uid: com.azure.core.http.HttpClient
  parent: com.azure.core.http
  href: com.azure.core.http.HttpClient.yml
  name: HttpClient
  nameWithType: HttpClient
  fullName: com.azure.core.http.HttpClient
  type: Interface
  summary: "<p>A generic interface for sending HTTP requests and getting responses. </p>"
  syntax:
    content: public interface HttpClient
- uid: com.azure.core.http.policy.HttpLogDetailLevel
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpLogDetailLevel.yml
  name: HttpLogDetailLevel
  nameWithType: HttpLogDetailLevel
  fullName: com.azure.core.http.policy.HttpLogDetailLevel
  type: Enum
  summary: "<p>The level of detail to log on HTTP messages. </p>"
  syntax:
    content: public enum HttpLogDetailLevel
- uid: com.azure.core.http.policy.RetryPolicy
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.RetryPolicy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.azure.core.http.policy.RetryPolicy
  type: Class
  summary: "<p>A pipeline policy that retries when a recoverable HTTP error occurs. </p>"
  syntax:
    content: public class RetryPolicy
- uid: com.azure.core.util.configuration.Configuration
  parent: com.azure.core.util.configuration
  href: com.azure.core.util.configuration.Configuration.yml
  name: Configuration
  nameWithType: Configuration
  fullName: com.azure.core.util.configuration.Configuration
  type: Class
  summary: "<p>Contains configuration information that is used during construction of client libraries. </p>"
  syntax:
    content: public class Configuration
- uid: com.azure.security.keyvault.keys.KeyClient
  parent: com.azure.security.keyvault.keys
  href: com.azure.security.keyvault.keys.KeyClient.yml
  name: KeyClient
  nameWithType: KeyClient
  fullName: com.azure.security.keyvault.keys.KeyClient
  type: Class
  summary: "<p>The KeyClient provides synchronous methods to manage <xref uid=\"\" data-throw-if-not-resolved=\"false\">keys</xref> in the Azure Key Vault. The client supports creating, retrieving, updating, deleting, purging, backing up, restoring and listing the <xref uid=\"\" data-throw-if-not-resolved=\"false\">keys</xref>. The client also supports listing <xref uid=\"\" data-throw-if-not-resolved=\"false\">deleted keys</xref> for a soft-delete enabled Azure Key Vault.</p>\r\n<p>\r\n  <b>Samples to construct the sync client</b>\r\n</p>\r\n<p>{ com.azure.security.keyvault.keys.keyclient.instantiation}</p>\r\n<p></p>"
  syntax:
    content: public class KeyClient
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: pipeline(HttpPipeline pipeline)
  nameWithType: KeyClientBuilder.pipeline(HttpPipeline pipeline)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline pipeline)
  type: Method
  summary: "<p>Sets the HTTP pipeline to use for the service client.</p>\r\n<p>If<code>pipeline \r\n    </code> is set, all other settings are ignored, aside from <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> or <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref>.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: endpoint(String endpoint)
  nameWithType: KeyClientBuilder.endpoint(String endpoint)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String endpoint)
  type: Method
  summary: "<p>Sets the vault endpoint url to send HTTP requests to.</p>\r\n<p></p>"
  syntax: *o2
- uid: com.azure.security.keyvault.keys.KeyClientBuilder
  parent: com.azure.security.keyvault.keys
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: KeyClientBuilder
  nameWithType: KeyClientBuilder
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder
  type: Class
  summary: "<p>This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">secret async client</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">secret sync client</xref>, by calling <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> respectively It constructs an instance of the desired client.</p>\r\n<p>The minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>. </p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.instantiation}</p>\r\n<p>The <xref uid=\"\" data-throw-if-not-resolved=\"false\">log detail level</xref>, multiple custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">policies</xref> and custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http client</xref> can be optionally configured in the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">KeyClientBuilder</xref>.</p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.withhttpclient.instantiation}</p>\r\n<p>Alternatively, custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http pipeline</xref> with custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> policies and <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> can be specified. It provides finer control over the construction of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref></p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.pipeline.instantiation}</p>\r\n<p>The minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">secretClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> are <xref uid=\"\" data-throw-if-not-resolved=\"false\">endpoint</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>. </p>\r\n<p>{ com.azure.security.keyvault.keys.keyclient.instantiation}</p>\r\n<p></p>"
  syntax: *o3
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: credential(TokenCredential credential)
  nameWithType: KeyClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential credential)
  type: Method
  summary: "<p>Sets the credential to use when authenticating HTTP requests.</p>\r\n<p></p>"
  syntax: *o4
- uid: com.azure.security.keyvault.keys.KeyAsyncClient
  parent: com.azure.security.keyvault.keys
  href: com.azure.security.keyvault.keys.KeyAsyncClient.yml
  name: KeyAsyncClient
  nameWithType: KeyAsyncClient
  fullName: com.azure.security.keyvault.keys.KeyAsyncClient
  type: Class
  summary: "<p>The KeyAsyncClient provides asynchronous methods to manage <xref uid=\"\" data-throw-if-not-resolved=\"false\">keys</xref> in the Azure Key Vault. The client supports creating, retrieving, updating, deleting, purging, backing up, restoring and listing the <xref uid=\"\" data-throw-if-not-resolved=\"false\">keys</xref>. The client also supports listing <xref uid=\"\" data-throw-if-not-resolved=\"false\">deleted keys</xref> for a soft-delete enabled Azure Key Vault.</p>\r\n<p>\r\n  <b>Samples to construct the async client</b>\r\n</p>\r\n<p>{ com.azure.security.keyvault.keys.async.keyclient.instantiation}</p>\r\n<p></p>"
  syntax:
    content: public class KeyAsyncClient
- uid: com.azure.core.http.policy.HttpLogDetailLevel.NONE
  parent: com.azure.core.http.policy.HttpLogDetailLevel
  href: com.azure.core.http.policy.HttpLogDetailLevel.yml
  name: NONE
  nameWithType: HttpLogDetailLevel.NONE
  fullName: com.azure.core.http.policy.HttpLogDetailLevel.NONE
  type: Field
  summary: "<p>Logging is turned off. </p>"
  syntax:
    content: public NONE
- uid: com.azure.core.util.configuration.ConfigurationManager.getConfiguration()
  parent: com.azure.core.util.configuration.ConfigurationManager
  href: com.azure.core.util.configuration.ConfigurationManager.yml
  name: getConfiguration()
  nameWithType: ConfigurationManager.getConfiguration()
  fullName: com.azure.core.util.configuration.ConfigurationManager.getConfiguration()
  type: Method
  syntax:
    content: public static Configuration getConfiguration()
    return:
      type: com.azure.core.util.configuration.Configuration
      description: <p>the global configuration store. </p>
- uid: com.azure.core.util.configuration.Configuration.NONE
  parent: com.azure.core.util.configuration.Configuration
  href: com.azure.core.util.configuration.Configuration.yml
  name: NONE
  nameWithType: Configuration.NONE
  fullName: com.azure.core.util.configuration.Configuration.NONE
  type: Field
  summary: "<p>Noop Configuration object used to opt out of using global configurations when constructing client libraries. </p>"
  syntax:
    content: public static final Configuration NONE= new NoopConfiguration()
    return:
      type: 93de0ef9com.azure.core.util.configuration.Configuration
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: buildAsyncClient()
  nameWithType: KeyClientBuilder.buildAsyncClient()
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildAsyncClient()
  type: Method
  summary: "<p>Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> based on options set in the builder. Every time<code>buildAsyncClient() \r\n    </code> is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> is created.</p>\r\n<p>If <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the<code>pipeline \r\n    </code> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">serviceEndpoint</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If<code>pipeline \r\n    </code> is not set, then <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential and  KeyClientBuilder#endpoint(String)</xref> key vault endpoint are required to build the <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>.}</p>\r\n<p></p>"
  syntax: *o5
- uid: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()
  parent: com.azure.security.keyvault.keys.KeyClientBuilder
  href: com.azure.security.keyvault.keys.KeyClientBuilder.yml
  name: buildClient()
  nameWithType: KeyClientBuilder.buildClient()
  fullName: com.azure.security.keyvault.keys.KeyClientBuilder.buildClient()
  type: Method
  summary: "<p>Creates a <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> based on options set in the builder. Every time<code>buildClient() \r\n    </code> is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">KeyClient</xref> is created.</p>\r\n<p>If <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.pipeline(HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the<code>pipeline \r\n    </code> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">serviceEndpoint</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If<code>pipeline \r\n    </code> is not set, then <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.credential(TokenCredential)\" data-throw-if-not-resolved=\"false\">key vault credential</xref> and <xref uid=\"com.azure.security.keyvault.keys.KeyClientBuilder.endpoint(String)\" data-throw-if-not-resolved=\"false\">key vault endpoint</xref> are required to build the <xref uid=\"com.azure.security.keyvault.keys.KeyClient\" data-throw-if-not-resolved=\"false\">client</xref>.</p>\r\n<p></p>"
  syntax: *o6
