### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  id: "ManagementChannel"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel(reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage(long)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.close()"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.peek()"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int,long)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage(com.azure.messaging.servicebus.models.ReceiveMode,long)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch(com.azure.messaging.servicebus.models.ReceiveMode,long...)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(java.util.UUID)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(com.azure.messaging.servicebus.ServiceBusMessage,java.time.Instant,int)"
  - "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  langs:
  - "java"
  name: "ManagementChannel"
  nameWithType: "ManagementChannel"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  type: "Class"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Channel responsible for Service Bus related metadata, peek and management plane operations. Management plane operations increasing quotas, etc."
  syntax:
    content: "public class ManagementChannel implements ServiceBusManagementNode"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel(reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  id: "ManagementChannel(reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "ManagementChannel(Mono<RequestResponseChannel> createRequestResponse, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)"
  nameWithType: "ManagementChannel.ManagementChannel(Mono<RequestResponseChannel> createRequestResponse, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel(Mono<RequestResponseChannel> createRequestResponse, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel*"
  type: "Constructor"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: " ManagementChannel(Mono<RequestResponseChannel> createRequestResponse, String fullyQualifiedNamespace, String entityPath, TokenManager tokenManager, MessageSerializer messageSerializer, Duration operationTimeout)"
    parameters:
    - id: "createRequestResponse"
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>"
    - id: "fullyQualifiedNamespace"
      type: "java.lang.String"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "tokenManager"
      type: "com.azure.core.amqp.implementation.TokenManager"
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
    - id: "operationTimeout"
      type: "java.time.Duration"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage(long)"
  id: "cancelScheduledMessage(long)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "cancelScheduledMessage(long sequenceNumber)"
  nameWithType: "ManagementChannel.cancelScheduledMessage(long sequenceNumber)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage(long sequenceNumber)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<Void> cancelScheduledMessage(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.close()"
  id: "close()"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ManagementChannel.close()"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.close()"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.close*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public void close()"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek()"
  id: "peek()"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "peek()"
  nameWithType: "ManagementChannel.peek()"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek()"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<ServiceBusReceivedMessage> peek()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long)"
  id: "peek(long)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "peek(long fromSequenceNumber)"
  nameWithType: "ManagementChannel.peek(long fromSequenceNumber)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek(long fromSequenceNumber)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<ServiceBusReceivedMessage> peek(long fromSequenceNumber)"
    parameters:
    - id: "fromSequenceNumber"
      type: "long"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int)"
  id: "peekBatch(int)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "peekBatch(int maxMessages)"
  nameWithType: "ManagementChannel.peekBatch(int maxMessages)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int maxMessages)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Flux<ServiceBusReceivedMessage> peekBatch(int maxMessages)"
    parameters:
    - id: "maxMessages"
      type: "int"
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int,long)"
  id: "peekBatch(int,long)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "peekBatch(int maxMessages, long fromSequenceNumber)"
  nameWithType: "ManagementChannel.peekBatch(int maxMessages, long fromSequenceNumber)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch(int maxMessages, long fromSequenceNumber)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Flux<ServiceBusReceivedMessage> peekBatch(int maxMessages, long fromSequenceNumber)"
    parameters:
    - id: "maxMessages"
      type: "int"
    - id: "fromSequenceNumber"
      type: "long"
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage(com.azure.messaging.servicebus.models.ReceiveMode,long)"
  id: "receiveDeferredMessage(com.azure.messaging.servicebus.models.ReceiveMode,long)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "receiveDeferredMessage(ReceiveMode receiveMode, long sequenceNumber)"
  nameWithType: "ManagementChannel.receiveDeferredMessage(ReceiveMode receiveMode, long sequenceNumber)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage(ReceiveMode receiveMode, long sequenceNumber)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<ServiceBusReceivedMessage> receiveDeferredMessage(ReceiveMode receiveMode, long sequenceNumber)"
    parameters:
    - id: "receiveMode"
      type: "com.azure.messaging.servicebus.models.ReceiveMode"
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch(com.azure.messaging.servicebus.models.ReceiveMode,long...)"
  id: "receiveDeferredMessageBatch(com.azure.messaging.servicebus.models.ReceiveMode,long...)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "receiveDeferredMessageBatch(ReceiveMode receiveMode, long[] sequenceNumbers)"
  nameWithType: "ManagementChannel.receiveDeferredMessageBatch(ReceiveMode receiveMode, long[] sequenceNumbers)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch(ReceiveMode receiveMode, long[] sequenceNumbers)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Flux<ServiceBusReceivedMessage> receiveDeferredMessageBatch(ReceiveMode receiveMode, long[] sequenceNumbers)"
    parameters:
    - id: "receiveMode"
      type: "com.azure.messaging.servicebus.models.ReceiveMode"
    - id: "sequenceNumbers"
      type: "long[]"
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(java.util.UUID)"
  id: "renewMessageLock(java.util.UUID)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "renewMessageLock(UUID lockToken)"
  nameWithType: "ManagementChannel.renewMessageLock(UUID lockToken)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock(UUID lockToken)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<Instant> renewMessageLock(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "reactor.core.publisher.Mono<java.time.Instant>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(com.azure.messaging.servicebus.ServiceBusMessage,java.time.Instant,int)"
  id: "schedule(com.azure.messaging.servicebus.ServiceBusMessage,java.time.Instant,int)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "schedule(ServiceBusMessage messageToSchedule, Instant scheduledEnqueueTime, int maxSendLinkSize)"
  nameWithType: "ManagementChannel.schedule(ServiceBusMessage messageToSchedule, Instant scheduledEnqueueTime, int maxSendLinkSize)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule(ServiceBusMessage messageToSchedule, Instant scheduledEnqueueTime, int maxSendLinkSize)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<Long> schedule(ServiceBusMessage messageToSchedule, Instant scheduledEnqueueTime, int maxSendLinkSize)"
    parameters:
    - id: "messageToSchedule"
      type: "com.azure.messaging.servicebus.ServiceBusMessage"
    - id: "scheduledEnqueueTime"
      type: "java.time.Instant"
    - id: "maxSendLinkSize"
      type: "int"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Long>"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "updateDisposition(java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.messaging.servicebus.implementation.ManagementChannel"
  langs:
  - "java"
  name: "updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "ManagementChannel.updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.lang.String"
    - id: "dispositionStatus"
      type: "com.azure.messaging.servicebus.implementation.DispositionStatus"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.RequestResponseChannel>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.RequestResponseChannel"
    name: "RequestResponseChannel"
    fullName: "com.azure.core.amqp.implementation.RequestResponseChannel"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.TokenManager"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.TokenManager"
    name: "TokenManager"
    fullName: "com.azure.core.amqp.implementation.TokenManager"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.MessageSerializer"
    name: "MessageSerializer"
    fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel*"
  name: "ManagementChannel"
  nameWithType: "ManagementChannel.ManagementChannel"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.ManagementChannel"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.DispositionStatus"
  name: "DispositionStatus"
  nameWithType: "DispositionStatus"
  fullName: "com.azure.messaging.servicebus.implementation.DispositionStatus"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition*"
  name: "updateDisposition"
  nameWithType: "ManagementChannel.updateDisposition"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.updateDisposition"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
    name: "ServiceBusReceivedMessage"
    fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek*"
  name: "peek"
  nameWithType: "ManagementChannel.peek"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peek"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
    name: "ServiceBusReceivedMessage"
    fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch*"
  name: "peekBatch"
  nameWithType: "ManagementChannel.peekBatch"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.peekBatch"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.models.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.azure.messaging.servicebus.models.ReceiveMode"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage*"
  name: "receiveDeferredMessage"
  nameWithType: "ManagementChannel.receiveDeferredMessage"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessage"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "long[]"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch*"
  name: "receiveDeferredMessageBatch"
  nameWithType: "ManagementChannel.receiveDeferredMessageBatch"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.receiveDeferredMessageBatch"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "reactor.core.publisher.Mono<java.time.Instant>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock*"
  name: "renewMessageLock"
  nameWithType: "ManagementChannel.renewMessageLock"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.renewMessageLock"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage*"
  name: "cancelScheduledMessage"
  nameWithType: "ManagementChannel.cancelScheduledMessage"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.cancelScheduledMessage"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.ServiceBusMessage"
  name: "ServiceBusMessage"
  nameWithType: "ServiceBusMessage"
  fullName: "com.azure.messaging.servicebus.ServiceBusMessage"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "reactor.core.publisher.Mono<java.lang.Long>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule*"
  name: "schedule"
  nameWithType: "ManagementChannel.schedule"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.schedule"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ManagementChannel.close*"
  name: "close"
  nameWithType: "ManagementChannel.close"
  fullName: "com.azure.messaging.servicebus.implementation.ManagementChannel.close"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  name: "ServiceBusManagementNode"
  nameWithType: "ServiceBusManagementNode"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.implementation.RequestResponseChannel"
  name: "RequestResponseChannel"
  nameWithType: "RequestResponseChannel"
  fullName: "com.azure.core.amqp.implementation.RequestResponseChannel"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
  name: "ServiceBusReceivedMessage"
  nameWithType: "ServiceBusReceivedMessage"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
