### YamlMime:ManagedReference
items:
- uid: "com.azure.core.annotation.ServiceClient"
  id: "ServiceClient"
  parent: "com.azure.core.annotation"
  children:
  - "com.azure.core.annotation.ServiceClient.builder()"
  - "com.azure.core.annotation.ServiceClient.isAsync()"
  - "com.azure.core.annotation.ServiceClient.serviceInterfaces()"
  langs:
  - "java"
  name: "ServiceClient"
  nameWithType: "ServiceClient"
  fullName: "com.azure.core.annotation.ServiceClient"
  type: "Interface"
  package: "com.azure.core.annotation"
  summary: "Annotation given to all service client classes."
  syntax:
    content: "public interface ServiceClient implements Annotation"
  implements:
  - "java.lang.annotation.Annotation"
- uid: "com.azure.core.annotation.ServiceClient.builder()"
  id: "builder()"
  parent: "com.azure.core.annotation.ServiceClient"
  langs:
  - "java"
  name: "builder()"
  nameWithType: "ServiceClient.builder()"
  fullName: "com.azure.core.annotation.ServiceClient.builder()"
  overload: "com.azure.core.annotation.ServiceClient.builder*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "The builder class that can construct an instance of this class. All service clients are instantiated using a builder and this is a required field. Also, builders should be annotated with <xref uid=\"com.azure.core.annotation.ServiceClientBuilder\" data-throw-if-not-resolved=\"false\">ServiceClientBuilder</xref>."
  syntax:
    content: "public abstract Class<?> builder()"
    return:
      type: "java.lang.Class<?>"
      description: "the classname of the builder that can create an instance of this class."
- uid: "com.azure.core.annotation.ServiceClient.isAsync()"
  id: "isAsync()"
  parent: "com.azure.core.annotation.ServiceClient"
  langs:
  - "java"
  name: "isAsync()"
  nameWithType: "ServiceClient.isAsync()"
  fullName: "com.azure.core.annotation.ServiceClient.isAsync()"
  overload: "com.azure.core.annotation.ServiceClient.isAsync*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "Represents whether the network IO methods on this client will be performed asynchronously or synchronously (i.e. blocking)."
  syntax:
    content: "public abstract boolean isAsync()"
    return:
      type: "boolean"
      description: "<code>true</code> is the Service Client is asynchronous."
- uid: "com.azure.core.annotation.ServiceClient.serviceInterfaces()"
  id: "serviceInterfaces()"
  parent: "com.azure.core.annotation.ServiceClient"
  langs:
  - "java"
  name: "serviceInterfaces()"
  nameWithType: "ServiceClient.serviceInterfaces()"
  fullName: "com.azure.core.annotation.ServiceClient.serviceInterfaces()"
  overload: "com.azure.core.annotation.ServiceClient.serviceInterfaces*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "Optional field to indicate all the services this service client interacts with. All classes mentioned in this list should be annotated with <xref uid=\"com.azure.core.annotation.ServiceInterface\" data-throw-if-not-resolved=\"false\">ServiceInterface</xref>. Typically, there's one service associated with each client. However, there could be zero to N services associated with a single client."
  syntax:
    content: "public abstract Class<?>[] serviceInterfaces()"
    return:
      type: "java.lang.Class<?>[]"
      description: "An array of all services this service client interacts with"
references:
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.annotation.ServiceClient.builder*"
  name: "builder"
  nameWithType: "ServiceClient.builder"
  fullName: "com.azure.core.annotation.ServiceClient.builder"
  package: "com.azure.core.annotation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.annotation.ServiceClient.isAsync*"
  name: "isAsync"
  nameWithType: "ServiceClient.isAsync"
  fullName: "com.azure.core.annotation.ServiceClient.isAsync"
  package: "com.azure.core.annotation"
- uid: "java.lang.Class<?>[]"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.annotation.ServiceClient.serviceInterfaces*"
  name: "serviceInterfaces"
  nameWithType: "ServiceClient.serviceInterfaces"
  fullName: "com.azure.core.annotation.ServiceClient.serviceInterfaces"
  package: "com.azure.core.annotation"
- uid: "java.lang.annotation.Annotation"
  name: "Annotation"
  nameWithType: "Annotation"
  fullName: "java.lang.annotation.Annotation"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "?>[]"
  name: "?>[]"
  nameWithType: "?>[]"
  fullName: "?>[]"
