### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.CosmosResponse"
  id: "CosmosResponse"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.CosmosResponse.CosmosResponse(T)"
  - "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.ResourceResponse)"
  - "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.ResourceResponse,T)"
  - "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.StoredProcedureResponse)"
  - "com.azure.cosmos.models.CosmosResponse.getActivityId()"
  - "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics()"
  - "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
  - "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
  - "com.azure.cosmos.models.CosmosResponse.getProperties()"
  - "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
  - "com.azure.cosmos.models.CosmosResponse.getRequestLatency()"
  - "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
  - "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
  - "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
  - "com.azure.cosmos.models.CosmosResponse.resourceResponseWrapper"
  - "com.azure.cosmos.models.CosmosResponse.setProperties(T)"
  langs:
  - "java"
  name: "CosmosResponse<T>"
  nameWithType: "CosmosResponse<T>"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "The cosmos response"
  syntax:
    content: "public class CosmosResponse<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.CosmosResponse.CosmosResponse(T)"
  id: "CosmosResponse(T)"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "CosmosResponse(T properties)"
  nameWithType: "CosmosResponse<T>.CosmosResponse(T properties)"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.CosmosResponse(T properties)"
  overload: "com.azure.cosmos.models.CosmosResponse.CosmosResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected CosmosResponse(T properties)"
    parameters:
    - id: "properties"
      type: "T"
- uid: "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.ResourceResponse)"
  id: "CosmosResponse(com.azure.cosmos.implementation.ResourceResponse)"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "CosmosResponse(ResourceResponse resourceResponse)"
  nameWithType: "CosmosResponse<T>.CosmosResponse(ResourceResponse resourceResponse)"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.CosmosResponse(ResourceResponse resourceResponse)"
  overload: "com.azure.cosmos.models.CosmosResponse.CosmosResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected CosmosResponse(ResourceResponse resourceResponse)"
    parameters:
    - id: "resourceResponse"
      type: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.ResourceResponse,T)"
  id: "CosmosResponse(com.azure.cosmos.implementation.ResourceResponse,T)"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "CosmosResponse(ResourceResponse resourceResponse, T properties)"
  nameWithType: "CosmosResponse<T>.CosmosResponse(ResourceResponse resourceResponse, T properties)"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.CosmosResponse(ResourceResponse resourceResponse, T properties)"
  overload: "com.azure.cosmos.models.CosmosResponse.CosmosResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected CosmosResponse(ResourceResponse resourceResponse, T properties)"
    parameters:
    - id: "resourceResponse"
      type: "com.azure.cosmos.implementation.ResourceResponse"
    - id: "properties"
      type: "T"
- uid: "com.azure.cosmos.models.CosmosResponse.CosmosResponse(com.azure.cosmos.implementation.StoredProcedureResponse)"
  id: "CosmosResponse(com.azure.cosmos.implementation.StoredProcedureResponse)"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "CosmosResponse(StoredProcedureResponse response)"
  nameWithType: "CosmosResponse<T>.CosmosResponse(StoredProcedureResponse response)"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.CosmosResponse(StoredProcedureResponse response)"
  overload: "com.azure.cosmos.models.CosmosResponse.CosmosResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected CosmosResponse(StoredProcedureResponse response)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.StoredProcedureResponse"
- uid: "com.azure.cosmos.models.CosmosResponse.getActivityId()"
  id: "getActivityId()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getActivityId()"
  nameWithType: "CosmosResponse<T>.getActivityId()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getActivityId()"
  overload: "com.azure.cosmos.models.CosmosResponse.getActivityId*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the Activity ID for the request."
  syntax:
    content: "public String getActivityId()"
    return:
      type: "java.lang.String"
      description: "the activity getId."
- uid: "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics()"
  id: "getCosmosResponseDiagnostics()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getCosmosResponseDiagnostics()"
  nameWithType: "CosmosResponse<T>.getCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getCosmosResponseDiagnostics()"
  overload: "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the diagnostics information for the current request to Azure Cosmos DB service."
  syntax:
    content: "public CosmosResponseDiagnostics getCosmosResponseDiagnostics()"
    return:
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
      description: "diagnostics information for the current request to Azure Cosmos DB service."
- uid: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
  id: "getCurrentResourceQuotaUsage()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getCurrentResourceQuotaUsage()"
  nameWithType: "CosmosResponse<T>.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getCurrentResourceQuotaUsage()"
  overload: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the current size of this entity (in megabytes (MB) for server resources and in count for master resources)"
  syntax:
    content: "public String getCurrentResourceQuotaUsage()"
    return:
      type: "java.lang.String"
      description: "the current resource quota usage."
- uid: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
  id: "getMaxResourceQuota()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getMaxResourceQuota()"
  nameWithType: "CosmosResponse<T>.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getMaxResourceQuota()"
  overload: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the maximum size limit for this entity (in megabytes (MB) for server resources and in count for master resources)."
  syntax:
    content: "public String getMaxResourceQuota()"
    return:
      type: "java.lang.String"
      description: "the max resource quota."
- uid: "com.azure.cosmos.models.CosmosResponse.getProperties()"
  id: "getProperties()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CosmosResponse<T>.getProperties()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getProperties()"
  overload: "com.azure.cosmos.models.CosmosResponse.getProperties*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets properties."
  syntax:
    content: "public T getProperties()"
    return:
      type: "T"
      description: "the properties"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
  id: "getRequestCharge()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getRequestCharge()"
  nameWithType: "CosmosResponse<T>.getRequestCharge()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getRequestCharge()"
  overload: "com.azure.cosmos.models.CosmosResponse.getRequestCharge*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the number of index paths (terms) generated by the operation."
  syntax:
    content: "public double getRequestCharge()"
    return:
      type: "double"
      description: "the request charge."
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestLatency()"
  id: "getRequestLatency()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getRequestLatency()"
  nameWithType: "CosmosResponse<T>.getRequestLatency()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getRequestLatency()"
  overload: "com.azure.cosmos.models.CosmosResponse.getRequestLatency*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the end-to-end request latency for the current request to Azure Cosmos DB service."
  syntax:
    content: "public Duration getRequestLatency()"
    return:
      type: "java.time.Duration"
      description: "end-to-end request latency for the current request to Azure Cosmos DB service."
- uid: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
  id: "getResponseHeaders()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getResponseHeaders()"
  nameWithType: "CosmosResponse<T>.getResponseHeaders()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getResponseHeaders()"
  overload: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the headers associated with the response."
  syntax:
    content: "public Map<String,String> getResponseHeaders()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
- uid: "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
  id: "getSessionToken()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getSessionToken()"
  nameWithType: "CosmosResponse<T>.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getSessionToken()"
  overload: "com.azure.cosmos.models.CosmosResponse.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the token used for managing client's consistency requirements."
  syntax:
    content: "public String getSessionToken()"
    return:
      type: "java.lang.String"
      description: "the session token."
- uid: "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "CosmosResponse<T>.getStatusCode()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getStatusCode()"
  overload: "com.azure.cosmos.models.CosmosResponse.getStatusCode*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the HTTP status code associated with the response."
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
      description: "the status code."
- uid: "com.azure.cosmos.models.CosmosResponse.resourceResponseWrapper"
  id: "resourceResponseWrapper"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "resourceResponseWrapper"
  nameWithType: "CosmosResponse<T>.resourceResponseWrapper"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.resourceResponseWrapper"
  type: "Field"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected final ResourceResponse resourceResponseWrapper"
    return:
      type: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.models.CosmosResponse.setProperties(T)"
  id: "setProperties(T)"
  parent: "com.azure.cosmos.models.CosmosResponse"
  langs:
  - "java"
  name: "setProperties(T resourceSettings)"
  nameWithType: "CosmosResponse<T>.setProperties(T resourceSettings)"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.setProperties(T resourceSettings)"
  overload: "com.azure.cosmos.models.CosmosResponse.setProperties*"
  type: "Method"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected CosmosResponse<T> setProperties(T resourceSettings)"
    parameters:
    - id: "resourceSettings"
      type: "T"
    return:
      type: "com.azure.cosmos.models.CosmosResponse<T>"
references:
- uid: "com.azure.cosmos.implementation.ResourceResponse"
  spec.java:
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.models.CosmosResponse.CosmosResponse*"
  name: "CosmosResponse"
  nameWithType: "CosmosResponse<T>.CosmosResponse"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.CosmosResponse"
  package: "com.azure.cosmos.models"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.cosmos.implementation.StoredProcedureResponse"
  name: "StoredProcedureResponse"
  nameWithType: "StoredProcedureResponse"
  fullName: "com.azure.cosmos.implementation.StoredProcedureResponse"
- uid: "com.azure.cosmos.models.CosmosResponse.getProperties*"
  name: "getProperties"
  nameWithType: "CosmosResponse<T>.getProperties"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getProperties"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosResponse<T>"
  spec.java:
  - uid: "com.azure.cosmos.models.CosmosResponse"
    name: "CosmosResponse"
    fullName: "com.azure.cosmos.models.CosmosResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.CosmosResponse.setProperties*"
  name: "setProperties"
  nameWithType: "CosmosResponse<T>.setProperties"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.setProperties"
  package: "com.azure.cosmos.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota*"
  name: "getMaxResourceQuota"
  nameWithType: "CosmosResponse<T>.getMaxResourceQuota"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getMaxResourceQuota"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage*"
  name: "getCurrentResourceQuotaUsage"
  nameWithType: "CosmosResponse<T>.getCurrentResourceQuotaUsage"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getCurrentResourceQuotaUsage"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosResponse.getActivityId*"
  name: "getActivityId"
  nameWithType: "CosmosResponse<T>.getActivityId"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getActivityId"
  package: "com.azure.cosmos.models"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestCharge*"
  name: "getRequestCharge"
  nameWithType: "CosmosResponse<T>.getRequestCharge"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getRequestCharge"
  package: "com.azure.cosmos.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.models.CosmosResponse.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "CosmosResponse<T>.getStatusCode"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getStatusCode"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosResponse.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "CosmosResponse<T>.getSessionToken"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getSessionToken"
  package: "com.azure.cosmos.models"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders*"
  name: "getResponseHeaders"
  nameWithType: "CosmosResponse<T>.getResponseHeaders"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getResponseHeaders"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.CosmosResponseDiagnostics"
  name: "CosmosResponseDiagnostics"
  nameWithType: "CosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosResponseDiagnostics"
- uid: "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics*"
  name: "getCosmosResponseDiagnostics"
  nameWithType: "CosmosResponse<T>.getCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getCosmosResponseDiagnostics"
  package: "com.azure.cosmos.models"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestLatency*"
  name: "getRequestLatency"
  nameWithType: "CosmosResponse<T>.getRequestLatency"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getRequestLatency"
  package: "com.azure.cosmos.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
