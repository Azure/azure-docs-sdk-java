### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosResponse"
fullName: "com.azure.cosmos.models.CosmosResponse<T>"
name: "CosmosResponse<T>"
nameWithType: "CosmosResponse<T>"
summary: "The cosmos response"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosResponse<T>"
methods:
- uid: "com.azure.cosmos.models.CosmosResponse.getActivityId()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getActivityId()"
  name: "getActivityId()"
  nameWithType: "CosmosResponse<T>.getActivityId()"
  summary: "Gets the Activity ID for the request."
  syntax: "public String getActivityId()"
  desc: "Gets the Activity ID for the request."
  returns:
    description: "the activity getId."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getCurrentResourceQuotaUsage()"
  name: "getCurrentResourceQuotaUsage()"
  nameWithType: "CosmosResponse<T>.getCurrentResourceQuotaUsage()"
  summary: "Gets the current size of this entity (in megabytes (MB) for server resources and in count for master resources)"
  syntax: "public String getCurrentResourceQuotaUsage()"
  desc: "Gets the current size of this entity (in megabytes (MB) for server resources and in count for master resources)"
  returns:
    description: "the current resource quota usage."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getDiagnostics()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getDiagnostics()"
  name: "getDiagnostics()"
  nameWithType: "CosmosResponse<T>.getDiagnostics()"
  summary: "Gets the diagnostics information for the current request to Azure Cosmos DB service."
  syntax: "public CosmosDiagnostics getDiagnostics()"
  desc: "Gets the diagnostics information for the current request to Azure Cosmos DB service."
  returns:
    description: "diagnostics information for the current request to Azure Cosmos DB service."
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getDuration()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getDuration()"
  name: "getDuration()"
  nameWithType: "CosmosResponse<T>.getDuration()"
  summary: "Gets the end-to-end request latency for the current request to Azure Cosmos DB service."
  syntax: "public Duration getDuration()"
  desc: "Gets the end-to-end request latency for the current request to Azure Cosmos DB service."
  returns:
    description: "end-to-end request latency for the current request to Azure Cosmos DB service."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getMaxResourceQuota()"
  name: "getMaxResourceQuota()"
  nameWithType: "CosmosResponse<T>.getMaxResourceQuota()"
  summary: "Gets the maximum size limit for this entity (in megabytes (MB) for server resources and in count for master resources)."
  syntax: "public String getMaxResourceQuota()"
  desc: "Gets the maximum size limit for this entity (in megabytes (MB) for server resources and in count for master resources)."
  returns:
    description: "the max resource quota."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getProperties()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getProperties()"
  name: "getProperties()"
  nameWithType: "CosmosResponse<T>.getProperties()"
  summary: "Gets properties."
  syntax: "public T getProperties()"
  desc: "Gets properties."
  returns:
    description: "the properties"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getRequestCharge()"
  name: "getRequestCharge()"
  nameWithType: "CosmosResponse<T>.getRequestCharge()"
  summary: "Gets the request charge as request units (RU) consumed by the operation."
  syntax: "public double getRequestCharge()"
  desc: "Gets the request charge as request units (RU) consumed by the operation.\n\nFor more information about the RU and factors that can impact the effective charges please visit [Request Units in Azure Cosmos DB][]\n\n\n[Request Units in Azure Cosmos DB]: https://docs.microsoft.com/en-us/azure/cosmos-db/request-units"
  returns:
    description: "the request charge."
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getResponseHeaders()"
  name: "getResponseHeaders()"
  nameWithType: "CosmosResponse<T>.getResponseHeaders()"
  summary: "Gets the headers associated with the response."
  syntax: "public Map<String,String> getResponseHeaders()"
  desc: "Gets the headers associated with the response."
  returns:
    description: "the response headers."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getSessionToken()"
  name: "getSessionToken()"
  nameWithType: "CosmosResponse<T>.getSessionToken()"
  summary: "Gets the token used for managing client's consistency requirements."
  syntax: "public String getSessionToken()"
  desc: "Gets the token used for managing client's consistency requirements."
  returns:
    description: "the session token."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
  fullName: "com.azure.cosmos.models.CosmosResponse<T>.getStatusCode()"
  name: "getStatusCode()"
  nameWithType: "CosmosResponse<T>.getStatusCode()"
  summary: "Gets the HTTP status code associated with the response."
  syntax: "public int getStatusCode()"
  desc: "Gets the HTTP status code associated with the response."
  returns:
    description: "the status code."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
typeParameters:
- description: "the type of resource"
  name: "T"
desc: "The cosmos response"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.26.0-beta.1
