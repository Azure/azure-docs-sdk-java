### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.synchronizedMultimap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedMultimap"
name: "<K,V>synchronizedMultimap"
nameWithType: "Multimaps.<K,V>synchronizedMultimap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedMultimap(Multimap<K,V> multimap)"
  name: "<K,V>synchronizedMultimap(Multimap<K,V> multimap)"
  nameWithType: "Multimaps.<K,V>synchronizedMultimap(Multimap<K,V> multimap)"
  summary: "Returns a synchronized (thread-safe) multimap backed by the specified multimap. In order to guarantee serial access, it is critical that **all** access to the backing multimap is accomplished through the returned multimap.\n\nIt is imperative that the user manually synchronize on the returned multimap when accessing any of its collection views:\n\n```java\nMultimap multimap = Multimaps.synchronizedMultimap(\n     HashMultimap.create());\n ...\n Collection values = multimap.get(key);  // Needn't be in synchronized block\n ...\n synchronized (multimap) {  // Synchronizing on multimap, not values!\n   Iterator i = values.iterator(); // Must be in synchronized block\n   while (i.hasNext()) {\n     foo(i.next());\n   }\n }\n```\n\nFailure to follow this advice may result in non-deterministic behavior.\n\nNote that the generated multimap's <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.removeAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#removeAll\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.replaceValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap#replaceValues\"></xref> methods return collections that aren't synchronized.\n\nThe returned multimap will be serializable if the specified multimap is serializable."
  parameters:
  - description: "the multimap to be wrapped in a synchronized view"
    name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Multimap<K,V> <K,V>synchronizedMultimap(Multimap<K,V> multimap)"
  returns:
    description: "a synchronized view of the specified multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
