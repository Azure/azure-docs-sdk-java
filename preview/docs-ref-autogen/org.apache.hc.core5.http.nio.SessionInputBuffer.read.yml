### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read*"
fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read"
name: "read"
nameWithType: "SessionInputBuffer.read"
members:
- uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read()"
  fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read()"
  name: "read()"
  nameWithType: "SessionInputBuffer.read()"
  summary: "Reads one byte from the buffer. If the buffer is empty this method can throw a runtime exception. The exact type of runtime exception thrown by this method depends on implementation."
  syntax: "public abstract int read()"
  returns:
    description: "one byte"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(java.nio.ByteBuffer)"
  fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(ByteBuffer dst)"
  name: "read(ByteBuffer dst)"
  nameWithType: "SessionInputBuffer.read(ByteBuffer dst)"
  summary: "Reads a sequence of bytes from this buffer into the destination buffer. The exact number of bytes transferred depends on availability of data in this buffer and capacity of the destination buffer."
  parameters:
  - description: "the destination buffer."
    name: "dst"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int read(ByteBuffer dst)"
  returns:
    description: "The number of bytes read, possibly zero."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(java.nio.ByteBuffer,int)"
  fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(ByteBuffer dst, int maxLen)"
  name: "read(ByteBuffer dst, int maxLen)"
  nameWithType: "SessionInputBuffer.read(ByteBuffer dst, int maxLen)"
  summary: "Reads a sequence of bytes from this buffer into the destination buffer, up to the given maximum limit. The exact number of bytes transferred depends on availability of data in this buffer and capacity of the destination buffer, but cannot be more than `maxLen` value."
  parameters:
  - description: "the destination buffer."
    name: "dst"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  - description: "the maximum number of bytes to be read."
    name: "maxLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int read(ByteBuffer dst, int maxLen)"
  returns:
    description: "The number of bytes read, possibly zero."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(java.nio.channels.WritableByteChannel)"
  fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(WritableByteChannel dst)"
  name: "read(WritableByteChannel dst)"
  nameWithType: "SessionInputBuffer.read(WritableByteChannel dst)"
  summary: "Reads a sequence of bytes from this buffer into the destination channel. The exact number of bytes transferred depends on availability of data in this buffer."
  parameters:
  - description: "the destination channel."
    name: "dst"
    type: "<xref href=\"java.nio.channels.WritableByteChannel?alt=java.nio.channels.WritableByteChannel&text=WritableByteChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int read(WritableByteChannel dst)"
  exceptions:
  - description: "in case of an I/O error."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes read, possibly zero."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(java.nio.channels.WritableByteChannel,int)"
  fullName: "org.apache.hc.core5.http.nio.SessionInputBuffer.read(WritableByteChannel dst, int maxLen)"
  name: "read(WritableByteChannel dst, int maxLen)"
  nameWithType: "SessionInputBuffer.read(WritableByteChannel dst, int maxLen)"
  summary: "Reads a sequence of bytes from this buffer into the destination channel, up to the given maximum limit. The exact number of bytes transferred depends on availability of data in this buffer, but cannot be more than `maxLen` value."
  parameters:
  - description: "the destination channel."
    name: "dst"
    type: "<xref href=\"java.nio.channels.WritableByteChannel?alt=java.nio.channels.WritableByteChannel&text=WritableByteChannel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the maximum number of bytes to be read."
    name: "maxLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int read(WritableByteChannel dst, int maxLen)"
  exceptions:
  - description: "in case of an I/O error."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes read, possibly zero."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.nio"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
