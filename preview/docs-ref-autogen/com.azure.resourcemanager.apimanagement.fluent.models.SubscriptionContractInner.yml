### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner"
name: "SubscriptionContractInner"
nameWithType: "SubscriptionContractInner"
summary: "Subscription details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SubscriptionContractInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.SubscriptionContractInner()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.SubscriptionContractInner()"
  name: "SubscriptionContractInner()"
  nameWithType: "SubscriptionContractInner.SubscriptionContractInner()"
  syntax: "public SubscriptionContractInner()"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.allowTracing()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.allowTracing()"
  name: "allowTracing()"
  nameWithType: "SubscriptionContractInner.allowTracing()"
  summary: "Get the allowTracing property: Determines whether tracing is enabled."
  syntax: "public Boolean allowTracing()"
  returns:
    description: "the allowTracing value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.createdDate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.createdDate()"
  name: "createdDate()"
  nameWithType: "SubscriptionContractInner.createdDate()"
  summary: "Get the createdDate property: Subscription creation date. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  syntax: "public OffsetDateTime createdDate()"
  returns:
    description: "the createdDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.displayName()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.displayName()"
  name: "displayName()"
  nameWithType: "SubscriptionContractInner.displayName()"
  summary: "Get the displayName property: The name of the subscription, or null if the subscription has no name."
  syntax: "public String displayName()"
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.endDate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.endDate()"
  name: "endDate()"
  nameWithType: "SubscriptionContractInner.endDate()"
  summary: "Get the endDate property: Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  syntax: "public OffsetDateTime endDate()"
  returns:
    description: "the endDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.expirationDate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.expirationDate()"
  name: "expirationDate()"
  nameWithType: "SubscriptionContractInner.expirationDate()"
  summary: "Get the expirationDate property: Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  syntax: "public OffsetDateTime expirationDate()"
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.notificationDate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.notificationDate()"
  name: "notificationDate()"
  nameWithType: "SubscriptionContractInner.notificationDate()"
  summary: "Get the notificationDate property: Upcoming subscription expiration notification date. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  syntax: "public OffsetDateTime notificationDate()"
  returns:
    description: "the notificationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.ownerId()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.ownerId()"
  name: "ownerId()"
  nameWithType: "SubscriptionContractInner.ownerId()"
  summary: "Get the ownerId property: The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/\\{userId\\} where \\{userId\\} is a user identifier."
  syntax: "public String ownerId()"
  returns:
    description: "the ownerId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.primaryKey()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.primaryKey()"
  name: "primaryKey()"
  nameWithType: "SubscriptionContractInner.primaryKey()"
  summary: "Get the primaryKey property: Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  syntax: "public String primaryKey()"
  returns:
    description: "the primaryKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.scope()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.scope()"
  name: "scope()"
  nameWithType: "SubscriptionContractInner.scope()"
  summary: "Get the scope property: Scope like /products/\\{productId\\} or /apis or /apis/\\{apiId\\}."
  syntax: "public String scope()"
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.secondaryKey()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.secondaryKey()"
  name: "secondaryKey()"
  nameWithType: "SubscriptionContractInner.secondaryKey()"
  summary: "Get the secondaryKey property: Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  syntax: "public String secondaryKey()"
  returns:
    description: "the secondaryKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.startDate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.startDate()"
  name: "startDate()"
  nameWithType: "SubscriptionContractInner.startDate()"
  summary: "Get the startDate property: Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  syntax: "public OffsetDateTime startDate()"
  returns:
    description: "the startDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.state()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.state()"
  name: "state()"
  nameWithType: "SubscriptionContractInner.state()"
  summary: "Get the state property: Subscription state. Possible states are \\* active \\\\u2013 the subscription is active, \\* suspended \\\\u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, \\* submitted \\\\u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, \\* rejected \\\\u2013 the subscription request has been denied by an administrator, \\* cancelled \\\\u2013 the subscription has been cancelled by the developer or administrator, \\* expired \\\\u2013 the subscription reached its expiration date and was deactivated."
  syntax: "public SubscriptionState state()"
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.SubscriptionState?alt=com.azure.resourcemanager.apimanagement.models.SubscriptionState&text=SubscriptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.stateComment()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.stateComment()"
  name: "stateComment()"
  nameWithType: "SubscriptionContractInner.stateComment()"
  summary: "Get the stateComment property: Optional subscription comment added by an administrator when the state is changed to the 'rejected'."
  syntax: "public String stateComment()"
  returns:
    description: "the stateComment value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.validate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.validate()"
  name: "validate()"
  nameWithType: "SubscriptionContractInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withAllowTracing(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withAllowTracing(Boolean allowTracing)"
  name: "withAllowTracing(Boolean allowTracing)"
  nameWithType: "SubscriptionContractInner.withAllowTracing(Boolean allowTracing)"
  summary: "Set the allowTracing property: Determines whether tracing is enabled."
  parameters:
  - description: "the allowTracing value to set."
    name: "allowTracing"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withAllowTracing(Boolean allowTracing)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "SubscriptionContractInner.withDisplayName(String displayName)"
  summary: "Set the displayName property: The name of the subscription, or null if the subscription has no name."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withDisplayName(String displayName)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withEndDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withEndDate(OffsetDateTime endDate)"
  name: "withEndDate(OffsetDateTime endDate)"
  nameWithType: "SubscriptionContractInner.withEndDate(OffsetDateTime endDate)"
  summary: "Set the endDate property: Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  parameters:
  - description: "the endDate value to set."
    name: "endDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withEndDate(OffsetDateTime endDate)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withExpirationDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withExpirationDate(OffsetDateTime expirationDate)"
  name: "withExpirationDate(OffsetDateTime expirationDate)"
  nameWithType: "SubscriptionContractInner.withExpirationDate(OffsetDateTime expirationDate)"
  summary: "Set the expirationDate property: Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  parameters:
  - description: "the expirationDate value to set."
    name: "expirationDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withExpirationDate(OffsetDateTime expirationDate)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withNotificationDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withNotificationDate(OffsetDateTime notificationDate)"
  name: "withNotificationDate(OffsetDateTime notificationDate)"
  nameWithType: "SubscriptionContractInner.withNotificationDate(OffsetDateTime notificationDate)"
  summary: "Set the notificationDate property: Upcoming subscription expiration notification date. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  parameters:
  - description: "the notificationDate value to set."
    name: "notificationDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withNotificationDate(OffsetDateTime notificationDate)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withOwnerId(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withOwnerId(String ownerId)"
  name: "withOwnerId(String ownerId)"
  nameWithType: "SubscriptionContractInner.withOwnerId(String ownerId)"
  summary: "Set the ownerId property: The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/\\{userId\\} where \\{userId\\} is a user identifier."
  parameters:
  - description: "the ownerId value to set."
    name: "ownerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withOwnerId(String ownerId)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withPrimaryKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withPrimaryKey(String primaryKey)"
  name: "withPrimaryKey(String primaryKey)"
  nameWithType: "SubscriptionContractInner.withPrimaryKey(String primaryKey)"
  summary: "Set the primaryKey property: Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  parameters:
  - description: "the primaryKey value to set."
    name: "primaryKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withPrimaryKey(String primaryKey)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "SubscriptionContractInner.withScope(String scope)"
  summary: "Set the scope property: Scope like /products/\\{productId\\} or /apis or /apis/\\{apiId\\}."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withScope(String scope)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withSecondaryKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withSecondaryKey(String secondaryKey)"
  name: "withSecondaryKey(String secondaryKey)"
  nameWithType: "SubscriptionContractInner.withSecondaryKey(String secondaryKey)"
  summary: "Set the secondaryKey property: Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  parameters:
  - description: "the secondaryKey value to set."
    name: "secondaryKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withSecondaryKey(String secondaryKey)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withStartDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withStartDate(OffsetDateTime startDate)"
  name: "withStartDate(OffsetDateTime startDate)"
  nameWithType: "SubscriptionContractInner.withStartDate(OffsetDateTime startDate)"
  summary: "Set the startDate property: Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the \\`state\\` property. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  parameters:
  - description: "the startDate value to set."
    name: "startDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withStartDate(OffsetDateTime startDate)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withState(com.azure.resourcemanager.apimanagement.models.SubscriptionState)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withState(SubscriptionState state)"
  name: "withState(SubscriptionState state)"
  nameWithType: "SubscriptionContractInner.withState(SubscriptionState state)"
  summary: "Set the state property: Subscription state. Possible states are \\* active \\\\u2013 the subscription is active, \\* suspended \\\\u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, \\* submitted \\\\u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, \\* rejected \\\\u2013 the subscription request has been denied by an administrator, \\* cancelled \\\\u2013 the subscription has been cancelled by the developer or administrator, \\* expired \\\\u2013 the subscription reached its expiration date and was deactivated."
  parameters:
  - description: "the state value to set."
    name: "state"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.SubscriptionState?alt=com.azure.resourcemanager.apimanagement.models.SubscriptionState&text=SubscriptionState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withState(SubscriptionState state)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withStateComment(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner.withStateComment(String stateComment)"
  name: "withStateComment(String stateComment)"
  nameWithType: "SubscriptionContractInner.withStateComment(String stateComment)"
  summary: "Set the stateComment property: Optional subscription comment added by an administrator when the state is changed to the 'rejected'."
  parameters:
  - description: "the stateComment value to set."
    name: "stateComment"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionContractInner withStateComment(String stateComment)"
  returns:
    description: "the SubscriptionContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.SubscriptionContractInner&text=SubscriptionContractInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
