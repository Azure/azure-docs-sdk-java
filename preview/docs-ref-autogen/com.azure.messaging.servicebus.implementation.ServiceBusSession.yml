### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusSession"
  id: "ServiceBusSession"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,boolean)"
  langs:
  - "java"
  name: "ServiceBusSession"
  nameWithType: "ServiceBusSession"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusSession"
  type: "Interface"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Represents an AMQP session that supports vendor specific properties and capabilities. For example, creating a receiver that exclusively listens to a specific session."
  syntax:
    content: "public interface ServiceBusSession extends AmqpSession"
  implements:
  - "com.azure.core.amqp.AmqpSession"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,boolean)"
  id: "createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,boolean)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusSession"
  langs:
  - "java"
  name: "createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retryPolicy, ReceiveMode receiveMode, boolean isSession)"
  nameWithType: "ServiceBusSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retryPolicy, ReceiveMode receiveMode, boolean isSession)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retryPolicy, ReceiveMode receiveMode, boolean isSession)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates a new AMQP link that consumes events from the message broker."
  syntax:
    content: "public abstract Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retryPolicy, ReceiveMode receiveMode, boolean isSession)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "Name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The entity path this link connects to, so that it may read events from the message broker."
    - id: "entityType"
      type: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
    - id: "timeout"
      type: "java.time.Duration"
      description: "Timeout required for creating and opening an AMQP link."
    - id: "retryPolicy"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
      description: "The retry policy to use when consuming messages."
    - id: "receiveMode"
      type: "com.azure.messaging.servicebus.models.ReceiveMode"
      description: "The <xref uid=\"com.azure.messaging.servicebus.models.ReceiveMode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> for the messages to be received."
    - id: "isSession"
      type: "boolean"
      description: "<code>true</code> if the receive link is a session, otherwise, false."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
      description: "A newly created AMQP link."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.AmqpRetryPolicy"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpRetryPolicy"
    name: "AmqpRetryPolicy"
    fullName: "com.azure.core.amqp.AmqpRetryPolicy"
- uid: "com.azure.messaging.servicebus.models.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.azure.messaging.servicebus.models.ReceiveMode"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer*"
  name: "createConsumer"
  nameWithType: "ServiceBusSession.createConsumer"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusSession.createConsumer"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.core.amqp.AmqpSession"
  name: "AmqpSession"
  nameWithType: "AmqpSession"
  fullName: "com.azure.core.amqp.AmqpSession"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
