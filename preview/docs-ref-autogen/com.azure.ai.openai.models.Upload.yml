### YamlMime:JavaType
uid: "com.azure.ai.openai.models.Upload"
fullName: "com.azure.ai.openai.models.Upload"
name: "Upload"
nameWithType: "Upload"
summary: "The Upload object can accept byte chunks in the form of Parts."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Upload**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.ai.openai.models.Upload.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.ai.openai.models.Upload.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Upload.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Upload from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Upload fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Upload from the JsonReader."
  returns:
    description: "An instance of Upload if the JsonReader was pointing to an instance of it, or null if it was pointing to\n JSON null."
    type: "<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.getBytes()"
  fullName: "com.azure.ai.openai.models.Upload.getBytes()"
  name: "getBytes()"
  nameWithType: "Upload.getBytes()"
  summary: "Get the bytes property: The intended number of bytes to be uploaded."
  syntax: "public long getBytes()"
  desc: "Get the bytes property: The intended number of bytes to be uploaded."
  returns:
    description: "the bytes value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.getCreatedAt()"
  fullName: "com.azure.ai.openai.models.Upload.getCreatedAt()"
  name: "getCreatedAt()"
  nameWithType: "Upload.getCreatedAt()"
  summary: "Get the created<wbr>At property: The Unix timestamp (in seconds) for when the Upload was created."
  syntax: "public OffsetDateTime getCreatedAt()"
  desc: "Get the createdAt property: The Unix timestamp (in seconds) for when the Upload was created."
  returns:
    description: "the createdAt value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.ai.openai.models.Upload.getExpiresAt()"
  fullName: "com.azure.ai.openai.models.Upload.getExpiresAt()"
  name: "getExpiresAt()"
  nameWithType: "Upload.getExpiresAt()"
  summary: "Get the expires<wbr>At property: The Unix timestamp (in seconds) for when the Upload was created."
  syntax: "public OffsetDateTime getExpiresAt()"
  desc: "Get the expiresAt property: The Unix timestamp (in seconds) for when the Upload was created."
  returns:
    description: "the expiresAt value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.ai.openai.models.Upload.getFile()"
  fullName: "com.azure.ai.openai.models.Upload.getFile()"
  name: "getFile()"
  nameWithType: "Upload.getFile()"
  summary: "Get the file property: The ready File object after the Upload is completed."
  syntax: "public OpenAIFile getFile()"
  desc: "Get the file property: The ready File object after the Upload is completed."
  returns:
    description: "the file value."
    type: "<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.getFilename()"
  fullName: "com.azure.ai.openai.models.Upload.getFilename()"
  name: "getFilename()"
  nameWithType: "Upload.getFilename()"
  summary: "Get the filename property: The name of the file to be uploaded."
  syntax: "public String getFilename()"
  desc: "Get the filename property: The name of the file to be uploaded."
  returns:
    description: "the filename value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.models.Upload.getId()"
  fullName: "com.azure.ai.openai.models.Upload.getId()"
  name: "getId()"
  nameWithType: "Upload.getId()"
  summary: "Get the id property: The Upload unique identifier, which can be referenced in API endpoints."
  syntax: "public String getId()"
  desc: "Get the id property: The Upload unique identifier, which can be referenced in API endpoints."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.models.Upload.getObject()"
  fullName: "com.azure.ai.openai.models.Upload.getObject()"
  name: "getObject()"
  nameWithType: "Upload.getObject()"
  summary: "Get the object property: The object type, which is always \"upload\"."
  syntax: "public UploadObject getObject()"
  desc: "Get the object property: The object type, which is always \"upload\"."
  returns:
    description: "the object value."
    type: "<xref href=\"com.azure.ai.openai.models.UploadObject?alt=com.azure.ai.openai.models.UploadObject&text=UploadObject\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.getPurpose()"
  fullName: "com.azure.ai.openai.models.Upload.getPurpose()"
  name: "getPurpose()"
  nameWithType: "Upload.getPurpose()"
  summary: "Get the purpose property: The intended purpose of the file."
  syntax: "public UploadPurpose getPurpose()"
  desc: "Get the purpose property: The intended purpose of the file."
  returns:
    description: "the purpose value."
    type: "<xref href=\"com.azure.ai.openai.models.UploadPurpose?alt=com.azure.ai.openai.models.UploadPurpose&text=UploadPurpose\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.getStatus()"
  fullName: "com.azure.ai.openai.models.Upload.getStatus()"
  name: "getStatus()"
  nameWithType: "Upload.getStatus()"
  summary: "Get the status property: The status of the Upload."
  syntax: "public UploadStatus getStatus()"
  desc: "Get the status property: The status of the Upload."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.ai.openai.models.UploadStatus?alt=com.azure.ai.openai.models.UploadStatus&text=UploadStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.models.Upload.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.ai.openai.models.Upload.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Upload.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Upload object can accept byte chunks in the form of Parts."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.ai.openai.models"
artifact: com.azure:azure-ai-openai:1.0.0-beta.16
