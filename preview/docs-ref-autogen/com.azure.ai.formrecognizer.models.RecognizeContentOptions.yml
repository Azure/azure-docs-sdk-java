### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions"
fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions"
name: "RecognizeContentOptions"
nameWithType: "RecognizeContentOptions"
summary: "Options that may be passed when using recognize content APIs on Form Recognizer client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RecognizeContentOptions"
constructors:
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.RecognizeContentOptions()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.RecognizeContentOptions()"
  name: "RecognizeContentOptions()"
  nameWithType: "RecognizeContentOptions.RecognizeContentOptions()"
  syntax: "public RecognizeContentOptions()"
methods:
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getContentType()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getContentType()"
  name: "getContentType()"
  nameWithType: "RecognizeContentOptions.getContentType()"
  summary: "Get the type of the form."
  syntax: "public FormContentType getContentType()"
  desc: "Get the type of the form. Supported Media types including .pdf, .jpg, .png or .tiff type file stream."
  returns:
    description: "the <code>contentType</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormContentType?alt=com.azure.ai.formrecognizer.models.FormContentType&text=FormContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getLanguage()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getLanguage()"
  name: "getLanguage()"
  nameWithType: "RecognizeContentOptions.getLanguage()"
  summary: "Get the BCP-47 language code of the text in the document."
  syntax: "public FormRecognizerLanguage getLanguage()"
  desc: "Get the BCP-47 language code of the text in the document. See supported language codes [here][].\n\n\n[here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support?tabs=v2-1"
  returns:
    description: "the language code for the text in the document."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerLanguage?alt=com.azure.ai.formrecognizer.models.FormRecognizerLanguage&text=FormRecognizerLanguage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getPages()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getPages()"
  name: "getPages()"
  nameWithType: "RecognizeContentOptions.getPages()"
  summary: "Get the custom page numbers for multi-page documents(PDF/TIFF)."
  syntax: "public List<String> getPages()"
  desc: "Get the custom page numbers for multi-page documents(PDF/TIFF). Input the number of the pages you want to get the recognized result for.\n\nFor a range of pages, use a hyphen, ex - \\[\"1-3\"\\]. Separate each page or a page range with a comma, ex - \\[\"1-3\", 4\\]."
  returns:
    description: "the list of custom page numbers for a multi page document."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getPollInterval()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getPollInterval()"
  name: "getPollInterval()"
  nameWithType: "RecognizeContentOptions.getPollInterval()"
  summary: "Get the duration between each poll for the operation status."
  syntax: "public Duration getPollInterval()"
  desc: "Get the duration between each poll for the operation status. If none is specified, a default of 5 seconds is used."
  returns:
    description: "the <code>pollInterval</code> value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getReadingOrder()"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.getReadingOrder()"
  name: "getReadingOrder()"
  nameWithType: "RecognizeContentOptions.getReadingOrder()"
  summary: "Get the order in which recognized text lines are returned."
  syntax: "public FormReadingOrder getReadingOrder()"
  desc: "Get the order in which recognized text lines are returned."
  returns:
    description: "the order in which the recognized lines are returned."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormReadingOrder?alt=com.azure.ai.formrecognizer.models.FormReadingOrder&text=FormReadingOrder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setContentType(com.azure.ai.formrecognizer.models.FormContentType)"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setContentType(FormContentType contentType)"
  name: "setContentType(FormContentType contentType)"
  nameWithType: "RecognizeContentOptions.setContentType(FormContentType contentType)"
  summary: "Set the type of the form."
  parameters:
  - description: "the provided form content type."
    name: "contentType"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormContentType?alt=com.azure.ai.formrecognizer.models.FormContentType&text=FormContentType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecognizeContentOptions setContentType(FormContentType contentType)"
  desc: "Set the type of the form. Supported Media types including .pdf, .jpg, .png or .tiff type file stream."
  returns:
    description: "the updated <code>RecognizeContentOptions</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setLanguage(com.azure.ai.formrecognizer.models.FormRecognizerLanguage)"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setLanguage(FormRecognizerLanguage language)"
  name: "setLanguage(FormRecognizerLanguage language)"
  nameWithType: "RecognizeContentOptions.setLanguage(FormRecognizerLanguage language)"
  summary: "Set the BCP-47 language code of the text in the document."
  parameters:
  - description: "the language code value to set."
    name: "language"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerLanguage?alt=com.azure.ai.formrecognizer.models.FormRecognizerLanguage&text=FormRecognizerLanguage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecognizeContentOptions setLanguage(FormRecognizerLanguage language)"
  desc: "Set the BCP-47 language code of the text in the document. See supported language codes [here][].\n\n\n[here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support?tabs=v2-1"
  returns:
    description: "the updated <code>RecognizeContentOptions</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setPages(java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setPages(List<String> pages)"
  name: "setPages(List<String> pages)"
  nameWithType: "RecognizeContentOptions.setPages(List<String> pages)"
  summary: "Set the custom page numbers for multi-page documents(PDF/TIFF)."
  parameters:
  - description: "the custom page numbers value to set."
    name: "pages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RecognizeContentOptions setPages(List<String> pages)"
  desc: "Set the custom page numbers for multi-page documents(PDF/TIFF). Input the number of the pages you want to get the recognized result for.\n\nFor a range of pages, use a hyphen, ex - \\[\"1-3\"\\]. Separate each page or a page range with a comma, ex - \\[\"1-3\", 4\\]."
  returns:
    description: "the updated <code>RecognizeContentOptions</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setPollInterval(java.time.Duration)"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setPollInterval(Duration pollInterval)"
  name: "setPollInterval(Duration pollInterval)"
  nameWithType: "RecognizeContentOptions.setPollInterval(Duration pollInterval)"
  summary: "Set the duration between each poll for the operation status."
  parameters:
  - description: "the duration to specify between each poll for the operation status."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecognizeContentOptions setPollInterval(Duration pollInterval)"
  desc: "Set the duration between each poll for the operation status. If none is specified, a default of 5 seconds is used."
  returns:
    description: "the updated <code>RecognizeContentOptions</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setReadingOrder(com.azure.ai.formrecognizer.models.FormReadingOrder)"
  fullName: "com.azure.ai.formrecognizer.models.RecognizeContentOptions.setReadingOrder(FormReadingOrder readingOrder)"
  name: "setReadingOrder(FormReadingOrder readingOrder)"
  nameWithType: "RecognizeContentOptions.setReadingOrder(FormReadingOrder readingOrder)"
  summary: "Specifies the order in which recognized text lines are returned."
  parameters:
  - description: "the order specifies in which text lines are returned"
    name: "readingOrder"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.FormReadingOrder?alt=com.azure.ai.formrecognizer.models.FormReadingOrder&text=FormReadingOrder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecognizeContentOptions setReadingOrder(FormReadingOrder readingOrder)"
  desc: "Specifies the order in which recognized text lines are returned. As the sorting order depends on the detected text, it may change across images and OCR version updates. Thus, business logic should be built upon the actual line location instead of order."
  returns:
    description: "the updated <code>RecognizeContentOptions</code> value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Options that may be passed when using recognize content APIs on Form Recognizer client."
metadata: {}
package: "com.azure.ai.formrecognizer.models"
artifact: com.azure:azure-ai-formrecognizer:4.0.0-beta.6
