### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.ServiceConnectionString"
fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.ServiceConnectionString"
name: "ServiceConnectionString"
nameWithType: "ServiceConnectionString"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ServiceConnectionString"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.ServiceConnectionString.createSasTokenProvider()"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.ServiceConnectionString.createSasTokenProvider()"
  name: "createSasTokenProvider()"
  nameWithType: "ServiceConnectionString.createSasTokenProvider()"
  syntax: "public SasTokenProvider createSasTokenProvider()"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.authentication.SasTokenProvider&text=SasTokenProvider\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.digitaltwin.authentication"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
