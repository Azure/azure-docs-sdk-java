### YamlMime:JavaType
uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties"
fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties"
name: "SlackChannelProperties"
nameWithType: "SlackChannelProperties"
summary: "The parameters to provide for the Slack channel."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SlackChannelProperties"
constructors:
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.SlackChannelProperties()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.SlackChannelProperties()"
  name: "SlackChannelProperties()"
  nameWithType: "SlackChannelProperties.SlackChannelProperties()"
  syntax: "public SlackChannelProperties()"
methods:
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.clientId()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.clientId()"
  name: "clientId()"
  nameWithType: "SlackChannelProperties.clientId()"
  summary: "Get the client<wbr>Id property: The Slack client id."
  syntax: "public String clientId()"
  desc: "Get the clientId property: The Slack client id."
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.clientSecret()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.clientSecret()"
  name: "clientSecret()"
  nameWithType: "SlackChannelProperties.clientSecret()"
  summary: "Get the client<wbr>Secret property: The Slack client secret."
  syntax: "public String clientSecret()"
  desc: "Get the clientSecret property: The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty."
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.isEnabled()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.isEnabled()"
  name: "isEnabled()"
  nameWithType: "SlackChannelProperties.isEnabled()"
  summary: "Get the is<wbr>Enabled property: Whether this channel is enabled for the bot."
  syntax: "public boolean isEnabled()"
  desc: "Get the isEnabled property: Whether this channel is enabled for the bot."
  returns:
    description: "the isEnabled value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.isValidated()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.isValidated()"
  name: "isValidated()"
  nameWithType: "SlackChannelProperties.isValidated()"
  summary: "Get the is<wbr>Validated property: Whether this channel is validated for the bot."
  syntax: "public Boolean isValidated()"
  desc: "Get the isValidated property: Whether this channel is validated for the bot."
  returns:
    description: "the isValidated value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.landingPageUrl()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.landingPageUrl()"
  name: "landingPageUrl()"
  nameWithType: "SlackChannelProperties.landingPageUrl()"
  summary: "Get the landing<wbr>Page<wbr>Url property: The Slack landing page Url."
  syntax: "public String landingPageUrl()"
  desc: "Get the landingPageUrl property: The Slack landing page Url."
  returns:
    description: "the landingPageUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.lastSubmissionId()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.lastSubmissionId()"
  name: "lastSubmissionId()"
  nameWithType: "SlackChannelProperties.lastSubmissionId()"
  summary: "Get the last<wbr>Submission<wbr>Id property: The Sms auth token."
  syntax: "public String lastSubmissionId()"
  desc: "Get the lastSubmissionId property: The Sms auth token."
  returns:
    description: "the lastSubmissionId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.redirectAction()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.redirectAction()"
  name: "redirectAction()"
  nameWithType: "SlackChannelProperties.redirectAction()"
  summary: "Get the redirect<wbr>Action property: The Slack redirect action."
  syntax: "public String redirectAction()"
  desc: "Get the redirectAction property: The Slack redirect action."
  returns:
    description: "the redirectAction value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.registerBeforeOAuthFlow()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.registerBeforeOAuthFlow()"
  name: "registerBeforeOAuthFlow()"
  nameWithType: "SlackChannelProperties.registerBeforeOAuthFlow()"
  summary: "Get the register<wbr>Before<wbr>OAuth<wbr>Flow property: Whether to register the settings before OAuth validation is performed."
  syntax: "public Boolean registerBeforeOAuthFlow()"
  desc: "Get the registerBeforeOAuthFlow property: Whether to register the settings before OAuth validation is performed. Recommended to True."
  returns:
    description: "the registerBeforeOAuthFlow value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.scopes()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.scopes()"
  name: "scopes()"
  nameWithType: "SlackChannelProperties.scopes()"
  summary: "Get the scopes property: The Slack permission scopes."
  syntax: "public String scopes()"
  desc: "Get the scopes property: The Slack permission scopes."
  returns:
    description: "the scopes value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.signingSecret()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.signingSecret()"
  name: "signingSecret()"
  nameWithType: "SlackChannelProperties.signingSecret()"
  summary: "Get the signing<wbr>Secret property: The Slack signing secret."
  syntax: "public String signingSecret()"
  desc: "Get the signingSecret property: The Slack signing secret."
  returns:
    description: "the signingSecret value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.validate()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.validate()"
  name: "validate()"
  nameWithType: "SlackChannelProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.verificationToken()"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.verificationToken()"
  name: "verificationToken()"
  nameWithType: "SlackChannelProperties.verificationToken()"
  summary: "Get the verification<wbr>Token property: The Slack verification token."
  syntax: "public String verificationToken()"
  desc: "Get the verificationToken property: The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty."
  returns:
    description: "the verificationToken value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withClientId(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withClientId(String clientId)"
  name: "withClientId(String clientId)"
  nameWithType: "SlackChannelProperties.withClientId(String clientId)"
  summary: "Set the client<wbr>Id property: The Slack client id."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withClientId(String clientId)"
  desc: "Set the clientId property: The Slack client id."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withClientSecret(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withClientSecret(String clientSecret)"
  name: "withClientSecret(String clientSecret)"
  nameWithType: "SlackChannelProperties.withClientSecret(String clientSecret)"
  summary: "Set the client<wbr>Secret property: The Slack client secret."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withClientSecret(String clientSecret)"
  desc: "Set the clientSecret property: The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withIsEnabled(boolean)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withIsEnabled(boolean isEnabled)"
  name: "withIsEnabled(boolean isEnabled)"
  nameWithType: "SlackChannelProperties.withIsEnabled(boolean isEnabled)"
  summary: "Set the is<wbr>Enabled property: Whether this channel is enabled for the bot."
  parameters:
  - description: "the isEnabled value to set."
    name: "isEnabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withIsEnabled(boolean isEnabled)"
  desc: "Set the isEnabled property: Whether this channel is enabled for the bot."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withLandingPageUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withLandingPageUrl(String landingPageUrl)"
  name: "withLandingPageUrl(String landingPageUrl)"
  nameWithType: "SlackChannelProperties.withLandingPageUrl(String landingPageUrl)"
  summary: "Set the landing<wbr>Page<wbr>Url property: The Slack landing page Url."
  parameters:
  - description: "the landingPageUrl value to set."
    name: "landingPageUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withLandingPageUrl(String landingPageUrl)"
  desc: "Set the landingPageUrl property: The Slack landing page Url."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withRegisterBeforeOAuthFlow(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withRegisterBeforeOAuthFlow(Boolean registerBeforeOAuthFlow)"
  name: "withRegisterBeforeOAuthFlow(Boolean registerBeforeOAuthFlow)"
  nameWithType: "SlackChannelProperties.withRegisterBeforeOAuthFlow(Boolean registerBeforeOAuthFlow)"
  summary: "Set the register<wbr>Before<wbr>OAuth<wbr>Flow property: Whether to register the settings before OAuth validation is performed."
  parameters:
  - description: "the registerBeforeOAuthFlow value to set."
    name: "registerBeforeOAuthFlow"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withRegisterBeforeOAuthFlow(Boolean registerBeforeOAuthFlow)"
  desc: "Set the registerBeforeOAuthFlow property: Whether to register the settings before OAuth validation is performed. Recommended to True."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withScopes(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withScopes(String scopes)"
  name: "withScopes(String scopes)"
  nameWithType: "SlackChannelProperties.withScopes(String scopes)"
  summary: "Set the scopes property: The Slack permission scopes."
  parameters:
  - description: "the scopes value to set."
    name: "scopes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withScopes(String scopes)"
  desc: "Set the scopes property: The Slack permission scopes."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withSigningSecret(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withSigningSecret(String signingSecret)"
  name: "withSigningSecret(String signingSecret)"
  nameWithType: "SlackChannelProperties.withSigningSecret(String signingSecret)"
  summary: "Set the signing<wbr>Secret property: The Slack signing secret."
  parameters:
  - description: "the signingSecret value to set."
    name: "signingSecret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withSigningSecret(String signingSecret)"
  desc: "Set the signingSecret property: The Slack signing secret."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withVerificationToken(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.SlackChannelProperties.withVerificationToken(String verificationToken)"
  name: "withVerificationToken(String verificationToken)"
  nameWithType: "SlackChannelProperties.withVerificationToken(String verificationToken)"
  summary: "Set the verification<wbr>Token property: The Slack verification token."
  parameters:
  - description: "the verificationToken value to set."
    name: "verificationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SlackChannelProperties withVerificationToken(String verificationToken)"
  desc: "Set the verificationToken property: The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty."
  returns:
    description: "the SlackChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.SlackChannelProperties?alt=com.azure.resourcemanager.botservice.models.SlackChannelProperties&text=SlackChannelProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The parameters to provide for the Slack channel."
metadata: {}
package: "com.azure.resourcemanager.botservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-botservice:1.0.0-beta.5
