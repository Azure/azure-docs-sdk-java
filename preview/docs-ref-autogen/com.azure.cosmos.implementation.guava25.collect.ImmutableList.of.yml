### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.of*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of"
name: "<E>of"
nameWithType: "ImmutableList<E>.<E>of"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of()"
  name: "<E>of()"
  nameWithType: "ImmutableList<E>.<E>of()"
  summary: "Returns the empty immutable list. This list behaves and performs comparably to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collections#emptyList\"></xref>, and is preferable mainly for consistency and maintainability of your code."
  syntax: "public static ImmutableList<E> <E>of()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E element)"
  name: "<E>of(E element)"
  nameWithType: "ImmutableList<E>.<E>of(E element)"
  summary: "Returns an immutable list containing a single element. This list behaves and performs comparably to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collections#singleton\"></xref>, but will not accept a null element. It is preferable mainly for consistency and maintainability of your code."
  parameters:
  - name: "element"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E element)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2)"
  name: "<E>of(E e1, E e2)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3)"
  name: "<E>of(E e1, E e2, E e3)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4)"
  name: "<E>of(E e1, E e2, E e3, E e4)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e8"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e8"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e9"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e8"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e9"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e10"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)"
  summary: "Returns an immutable list containing the given elements, in order."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e8"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e9"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e10"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e11"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E,E,E,E...)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E[] others)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E[] others)"
  nameWithType: "ImmutableList<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E[] others)"
  summary: "Returns an immutable list containing the given elements, in order.\n\nThe array `others` must not be longer than `Integer.MAX_VALUE - 12`."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e7"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e8"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e9"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e10"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e11"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e12"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "others"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableList<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E[] others)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
