### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.getEstimatedLag*"
fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.getEstimatedLag"
name: "getEstimatedLag"
nameWithType: "ChangeFeedProcessorBuilderImpl.getEstimatedLag"
members:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.getEstimatedLag()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.getEstimatedLag()"
  name: "getEstimatedLag()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.getEstimatedLag()"
  summary: "Returns the current owner (host) and an approximation of the difference between the last processed item (defined by the state of the feed container) and the latest change in the container for each partition (lease document).\n\nAn empty map will be returned if the processor was not started or no lease documents matching the current <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance's lease prefix could be found."
  syntax: "public Mono<Map<String,Integer>> getEstimatedLag()"
  returns:
    description: "a map representing the current owner and lease token, the current LSN and latest LSN, and the estimated\n         lag, asynchronously."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.changefeed.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
