### YamlMime:JavaType
uid: "com.azure.resourcemanager.kubernetesconfiguration.models.Scope"
fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.Scope"
name: "Scope"
nameWithType: "Scope"
summary: "Scope of the extension. It can be either Cluster or Namespace; but not both."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Scope"
constructors:
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.Scope()"
methods:
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.cluster()"
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.namespace()"
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.validate()"
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.withCluster(com.azure.resourcemanager.kubernetesconfiguration.models.ScopeCluster)"
- "com.azure.resourcemanager.kubernetesconfiguration.models.Scope.withNamespace(com.azure.resourcemanager.kubernetesconfiguration.models.ScopeNamespace)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.kubernetesconfiguration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-kubernetesconfiguration:1.0.0-beta.2
