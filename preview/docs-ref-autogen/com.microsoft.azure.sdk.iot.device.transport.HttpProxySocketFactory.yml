### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory"
fullName: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory"
name: "HttpProxySocketFactory"
nameWithType: "HttpProxySocketFactory"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"javax.net.SocketFactory?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"javax.net.ssl.SSLSocketFactory?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"javax.net.SocketFactory?alt=javax.net.SocketFactory&text=SocketFactory\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"javax.net.SocketFactory.createSocket()?alt=javax.net.SocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.SocketFactory.createSocket(java.lang.String,int)?alt=javax.net.SocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.SocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)?alt=javax.net.SocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.SocketFactory.createSocket(java.net.InetAddress,int)?alt=javax.net.SocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.SocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)?alt=javax.net.SocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"javax.net.ssl.SSLSocketFactory?alt=javax.net.ssl.SSLSocketFactory&text=SSLSocketFactory\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.io.InputStream,boolean)?alt=javax.net.ssl.SSLSocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.lang.String,int,boolean)?alt=javax.net.ssl.SSLSocketFactory.createSocket&text=createSocket\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocketFactory.getDefault()?alt=javax.net.ssl.SSLSocketFactory.getDefault&text=getDefault\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()?alt=javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites&text=getDefaultCipherSuites\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()?alt=javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites&text=getSupportedCipherSuites\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **HttpProxySocketFactory**</br> extends <xref href=\"javax.net.ssl.SSLSocketFactory?alt=javax.net.ssl.SSLSocketFactory&text=SSLSocketFactory\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory()"
  name: "HttpProxySocketFactory()"
  nameWithType: "HttpProxySocketFactory.HttpProxySocketFactory()"
  syntax: "public HttpProxySocketFactory()"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket()"
  name: "createSocket()"
  nameWithType: "HttpProxySocketFactory.createSocket()"
  overridden: "javax.net.SocketFactory.createSocket()"
  syntax: "public Socket createSocket()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.net.Socket?alt=java.net.Socket&text=Socket\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
