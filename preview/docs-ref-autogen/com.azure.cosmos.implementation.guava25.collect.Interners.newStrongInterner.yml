### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Interners.newStrongInterner*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner"
name: "<E>newStrongInterner"
nameWithType: "Interners.<E>newStrongInterner"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner()"
  name: "<E>newStrongInterner()"
  nameWithType: "Interners.<E>newStrongInterner()"
  summary: "Returns a new thread-safe interner which retains a strong reference to each instance it has interned, thus preventing these instances from being garbage-collected. If this retention is acceptable, this implementation may perform better than <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Interners.newWeakInterner\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#newWeakInterner\"></xref>."
  syntax: "public static Interner<E> <E>newStrongInterner()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Interner?alt=com.azure.cosmos.implementation.guava25.collect.Interner&text=Interner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
