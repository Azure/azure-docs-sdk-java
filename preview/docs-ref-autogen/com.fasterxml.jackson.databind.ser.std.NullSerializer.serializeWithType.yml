### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.NullSerializer.serializeWithType*"
fullName: "com.fasterxml.jackson.databind.ser.std.NullSerializer.serializeWithType"
name: "serializeWithType"
nameWithType: "NullSerializer.serializeWithType"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.NullSerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.ser.std.NullSerializer.serializeWithType(Object value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)"
  name: "serializeWithType(Object value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)"
  nameWithType: "NullSerializer.serializeWithType(Object value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)"
  summary: "Although this method should rarely get called, for convenience we should override it, and handle it same way as \"natural\" types: by serializing exactly as is, without type decorations. The most common possible use case is that of delegation by JSON filter; caller cannot know what kind of serializer it gets handed."
  overridden: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "serializers"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer?alt=com.fasterxml.jackson.databind.jsontype.TypeSerializer&text=TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serializeWithType(Object value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
