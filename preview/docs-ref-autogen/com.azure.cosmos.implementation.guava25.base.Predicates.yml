### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.base.Predicates"
fullName: "com.azure.cosmos.implementation.guava25.base.Predicates"
name: "Predicates"
nameWithType: "Predicates"
summary: "Static utility methods pertaining to `Predicate` instances.\n\nAll methods return serializable predicates as long as they're given serializable parameters.\n\nSee the Guava User Guide article on [the use of `Predicate`][the use of _Predicate].\n\n\n[the use of _Predicate]: https://github.com/google/guava/wiki/FunctionalExplained"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Predicates"
methods:
- "com.azure.cosmos.implementation.guava25.base.Predicates.<A,B>compose(com.azure.cosmos.implementation.guava25.base.Predicate<B>,com.azure.cosmos.implementation.guava25.base.Function<A,? extends B>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>alwaysFalse()"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>alwaysTrue()"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>and(com.azure.cosmos.implementation.guava25.base.Predicate<? super T>,com.azure.cosmos.implementation.guava25.base.Predicate<? super T>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>and(com.azure.cosmos.implementation.guava25.base.Predicate<? super T>...)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>and(java.lang.Iterable<? extends com.azure.cosmos.implementation.guava25.base.Predicate<? super T>>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>equalTo(T)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>in(java.util.Collection<? extends T>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>isNull()"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>not(com.azure.cosmos.implementation.guava25.base.Predicate<T>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>notNull()"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>or(com.azure.cosmos.implementation.guava25.base.Predicate<? super T>,com.azure.cosmos.implementation.guava25.base.Predicate<? super T>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>or(com.azure.cosmos.implementation.guava25.base.Predicate<? super T>...)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.<T>or(java.lang.Iterable<? extends com.azure.cosmos.implementation.guava25.base.Predicate<? super T>>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.contains(java.util.regex.Pattern)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.containsPattern(java.lang.String)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.instanceOf(java.lang.Class<?>)"
- "com.azure.cosmos.implementation.guava25.base.Predicates.subtypeOf(java.lang.Class<?>)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
