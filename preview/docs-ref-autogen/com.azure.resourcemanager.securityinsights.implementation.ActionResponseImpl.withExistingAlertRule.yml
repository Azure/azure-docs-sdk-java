### YamlMime:JavaMember
uid: "com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl.withExistingAlertRule*"
fullName: "com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl.withExistingAlertRule"
name: "withExistingAlertRule"
nameWithType: "ActionResponseImpl.withExistingAlertRule"
members:
- uid: "com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl.withExistingAlertRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl.withExistingAlertRule(String resourceGroupName, String workspaceName, String ruleId)"
  name: "withExistingAlertRule(String resourceGroupName, String workspaceName, String ruleId)"
  nameWithType: "ActionResponseImpl.withExistingAlertRule(String resourceGroupName, String workspaceName, String ruleId)"
  summary: "Specifies resourceGroupName, workspaceName, ruleId."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "ruleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActionResponseImpl withExistingAlertRule(String resourceGroupName, String workspaceName, String ruleId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl?alt=com.azure.resourcemanager.securityinsights.implementation.ActionResponseImpl&text=ActionResponseImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.securityinsights.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.1
