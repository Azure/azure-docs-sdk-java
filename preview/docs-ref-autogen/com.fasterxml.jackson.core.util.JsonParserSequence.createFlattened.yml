### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened*"
fullName: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened"
name: "createFlattened"
nameWithType: "JsonParserSequence.createFlattened"
members:
- uid: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)"
  fullName: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)"
  name: "createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)"
  nameWithType: "JsonParserSequence.createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)"
  summary: "Method that will construct a parser (possibly a sequence) that contains all given sub-parsers. All parsers given are checked to see if they are sequences: and if so, they will be \"flattened\", that is, contained parsers are directly added in a new sequence instead of adding sequences within sequences. This is done to minimize delegation depth, ideally only having just a single level of delegation."
  parameters:
  - name: "checkForExistingToken"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "first"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "second"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonParserSequence createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.util.JsonParserSequence?alt=com.fasterxml.jackson.core.util.JsonParserSequence&text=JsonParserSequence\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)"
  fullName: "com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(JsonParser first, JsonParser second)"
  name: "createFlattened(JsonParser first, JsonParser second)"
  nameWithType: "JsonParserSequence.createFlattened(JsonParser first, JsonParser second)"
  parameters:
  - name: "first"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "second"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonParserSequence createFlattened(JsonParser first, JsonParser second)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.util.JsonParserSequence?alt=com.fasterxml.jackson.core.util.JsonParserSequence&text=JsonParserSequence\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
