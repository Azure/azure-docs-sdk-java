### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.keyvault.models.Vaults
  id: Vaults
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models
  children:
  - com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.getDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.listDeleted()
  - com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync()
  - com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync(java.lang.String,java.lang.String,java.lang.String)
  langs:
  - java
  name: Vaults
  nameWithType: Vaults
  fullName: com.azure.resourcemanager.keyvault.models.Vaults
  type: Interface
  package: com.azure.resourcemanager.keyvault.models
  summary: Entry point for key vaults management API.
  syntax:
    content: public interface Vaults extends SupportsCreating<Vault.DefinitionStages.Blank>, SupportsDeletingById, SupportsListingByResourceGroup<Vault>, SupportsGettingByResourceGroup<Vault>, SupportsGettingById<Vault>, SupportsDeletingByResourceGroup, HasManager<KeyVaultManager>, HasInner<VaultsClient>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating<com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.Blank>
  - com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.keyvault.models.Vault>
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup
  - com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.keyvault.KeyVaultManager>
  - com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.keyvault.fluent.VaultsClient>
- uid: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: Vaults.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public abstract CheckNameAvailabilityResult checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult
      description: the CheckNameAvailabilityResult object if successful.
- uid: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: Vaults.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public abstract Mono<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult>
      description: the observable to the CheckNameAvailabilityResult object
- uid: com.azure.resourcemanager.keyvault.models.Vaults.getDeleted(java.lang.String,java.lang.String)
  id: getDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: getDeleted(String vaultName, String location)
  nameWithType: Vaults.getDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.getDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.getDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public abstract DeletedVault getDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: com.azure.resourcemanager.keyvault.models.DeletedVault
      description: the DeletedVault object if successful.
- uid: com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync(java.lang.String,java.lang.String)
  id: getDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: getDeletedAsync(String vaultName, String location)
  nameWithType: Vaults.getDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public abstract Mono<DeletedVault> getDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.DeletedVault>
      description: the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> object
- uid: com.azure.resourcemanager.keyvault.models.Vaults.listDeleted()
  id: listDeleted()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: listDeleted()
  nameWithType: Vaults.listDeleted()
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.listDeleted()
  overload: com.azure.resourcemanager.keyvault.models.Vaults.listDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public abstract PagedIterable<DeletedVault> listDeleted()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.models.DeletedVault>
      description: the PagedList&lt;DeletedVault&gt; object if successful.
- uid: com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync()
  id: listDeletedAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: listDeletedAsync()
  nameWithType: Vaults.listDeletedAsync()
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync()
  overload: com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public abstract PagedFlux<DeletedVault> listDeletedAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.models.DeletedVault>
      description: the observable to the PagedList&lt;DeletedVault&gt; object
- uid: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted(java.lang.String,java.lang.String)
  id: purgeDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: purgeDeleted(String vaultName, String location)
  nameWithType: Vaults.purgeDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public abstract void purgeDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
- uid: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync(java.lang.String,java.lang.String)
  id: purgeDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: purgeDeletedAsync(String vaultName, String location)
  nameWithType: Vaults.purgeDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public abstract Mono<Void> purgeDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the observable for the request
- uid: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault(java.lang.String,java.lang.String,java.lang.String)
  id: recoverSoftDeletedVault(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: recoverSoftDeletedVault(String resourceGroupName, String vaultName, String location)
  nameWithType: Vaults.recoverSoftDeletedVault(String resourceGroupName, String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault(String resourceGroupName, String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Recovers a soft deleted vault.
  syntax:
    content: public abstract Vault recoverSoftDeletedVault(String resourceGroupName, String vaultName, String location)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: com.azure.resourcemanager.keyvault.models.Vault
      description: the recovered Vault object if successful
- uid: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync(java.lang.String,java.lang.String,java.lang.String)
  id: recoverSoftDeletedVaultAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
  parent: com.azure.resourcemanager.keyvault.models.Vaults
  langs:
  - java
  name: recoverSoftDeletedVaultAsync(String resourceGroupName, String vaultName, String location)
  nameWithType: Vaults.recoverSoftDeletedVaultAsync(String resourceGroupName, String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync(String resourceGroupName, String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.models
  summary: Recovers a soft deleted vault.
  syntax:
    content: public abstract Mono<Vault> recoverSoftDeletedVaultAsync(String resourceGroupName, String vaultName, String location)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.Vault>
      description: the recovered Vault object if successful
references:
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.models.DeletedVault>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.models.DeletedVault
    name: DeletedVault
    fullName: com.azure.resourcemanager.keyvault.models.DeletedVault
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.listDeleted*
  name: listDeleted
  nameWithType: Vaults.listDeleted
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.listDeleted
  package: com.azure.resourcemanager.keyvault.models
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.models.DeletedVault>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.models.DeletedVault
    name: DeletedVault
    fullName: com.azure.resourcemanager.keyvault.models.DeletedVault
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync*
  name: listDeletedAsync
  nameWithType: Vaults.listDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.listDeletedAsync
  package: com.azure.resourcemanager.keyvault.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.keyvault.models.DeletedVault
  name: DeletedVault
  nameWithType: DeletedVault
  fullName: com.azure.resourcemanager.keyvault.models.DeletedVault
- uid: com.azure.resourcemanager.keyvault.models.Vaults.getDeleted*
  name: getDeleted
  nameWithType: Vaults.getDeleted
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.getDeleted
  package: com.azure.resourcemanager.keyvault.models
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.DeletedVault>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.models.DeletedVault
    name: DeletedVault
    fullName: com.azure.resourcemanager.keyvault.models.DeletedVault
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync*
  name: getDeletedAsync
  nameWithType: Vaults.getDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.getDeletedAsync
  package: com.azure.resourcemanager.keyvault.models
- uid: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted*
  name: purgeDeleted
  nameWithType: Vaults.purgeDeleted
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeleted
  package: com.azure.resourcemanager.keyvault.models
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync*
  name: purgeDeletedAsync
  nameWithType: Vaults.purgeDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.purgeDeletedAsync
  package: com.azure.resourcemanager.keyvault.models
- uid: com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult
  name: CheckNameAvailabilityResult
  nameWithType: CheckNameAvailabilityResult
  fullName: com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult
- uid: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: Vaults.checkNameAvailability
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailability
  package: com.azure.resourcemanager.keyvault.models
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult
    name: CheckNameAvailabilityResult
    fullName: com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: Vaults.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.keyvault.models
- uid: com.azure.resourcemanager.keyvault.models.Vault
  name: Vault
  nameWithType: Vault
  fullName: com.azure.resourcemanager.keyvault.models.Vault
- uid: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault*
  name: recoverSoftDeletedVault
  nameWithType: Vaults.recoverSoftDeletedVault
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVault
  package: com.azure.resourcemanager.keyvault.models
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.models.Vault>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.models.Vault
    name: Vault
    fullName: com.azure.resourcemanager.keyvault.models.Vault
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync*
  name: recoverSoftDeletedVaultAsync
  nameWithType: Vaults.recoverSoftDeletedVaultAsync
  fullName: com.azure.resourcemanager.keyvault.models.Vaults.recoverSoftDeletedVaultAsync
  package: com.azure.resourcemanager.keyvault.models
- uid: com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById
  name: SupportsDeletingById
  nameWithType: SupportsDeletingById
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.keyvault.models.Vault>
  name: SupportsGettingById<Vault>
  nameWithType: SupportsGettingById<Vault>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById<com.azure.resourcemanager.keyvault.models.Vault>
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.keyvault.KeyVaultManager>
  name: HasManager<KeyVaultManager>
  nameWithType: HasManager<KeyVaultManager>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager<com.azure.resourcemanager.keyvault.KeyVaultManager>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating<com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.Blank>
  name: SupportsCreating<Vault.DefinitionStages.Blank>
  nameWithType: SupportsCreating<Vault.DefinitionStages.Blank>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating<com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.Blank>
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup
  name: SupportsDeletingByResourceGroup
  nameWithType: SupportsDeletingByResourceGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
  name: SupportsListingByResourceGroup<Vault>
  nameWithType: SupportsListingByResourceGroup<Vault>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
- uid: com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.keyvault.fluent.VaultsClient>
  name: HasInner<VaultsClient>
  nameWithType: HasInner<VaultsClient>
  fullName: com.azure.resourcemanager.resources.fluentcore.model.HasInner<com.azure.resourcemanager.keyvault.fluent.VaultsClient>
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
  name: SupportsGettingByResourceGroup<Vault>
  nameWithType: SupportsGettingByResourceGroup<Vault>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<com.azure.resourcemanager.keyvault.models.Vault>
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById
  name: SupportsGettingById
  nameWithType: SupportsGettingById
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager
  name: HasManager
  nameWithType: HasManager
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager
- uid: com.azure.resourcemanager.keyvault.KeyVaultManager
  name: KeyVaultManager
  nameWithType: KeyVaultManager
  fullName: com.azure.resourcemanager.keyvault.KeyVaultManager
- uid: com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating
  name: SupportsCreating
  nameWithType: SupportsCreating
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating
- uid: com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.Blank
  name: Vault.DefinitionStages.Blank
  nameWithType: Vault.DefinitionStages.Blank
  fullName: com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.Blank
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup
  name: SupportsListingByResourceGroup
  nameWithType: SupportsListingByResourceGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup
- uid: com.azure.resourcemanager.resources.fluentcore.model.HasInner
  name: HasInner
  nameWithType: HasInner
  fullName: com.azure.resourcemanager.resources.fluentcore.model.HasInner
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  name: VaultsClient
  nameWithType: VaultsClient
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup
  name: SupportsGettingByResourceGroup
  nameWithType: SupportsGettingByResourceGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup
