### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies"
name: "listValuesOfDimensionWithAnomalies"
nameWithType: "MetricsAdvisorClient.listValuesOfDimensionWithAnomalies"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options)"
  name: "listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options)"
  nameWithType: "MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options)"
  summary: "Fetch the values of a dimension that have anomalies.\n\n**Code sample**\n\n```java\nfinal String detectionConfigurationId = \"c0f2539f-b804-4ab9-a70f-0da0c89c76d8\";\n final String dimensionName = \"Dim1\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n final ListValuesOfDimensionWithAnomaliesOptions options\n     = new ListValuesOfDimensionWithAnomaliesOptions(startTime, endTime)\n     .setTop(10);\n \n PagedIterable<String> dimensionValueIterable\n     = metricAdvisorClient.listValuesOfDimensionWithAnomalies(detectionConfigurationId,\n     dimensionName,\n     options);\n \n for (String dimensionValue : dimensionValueIterable) {\n     System.out.printf(\"Dimension Value: %s%n\", dimensionValue);\n }\n```"
  parameters:
  - description: "Identifies the configuration used to detect the anomalies."
    name: "detectionConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The dimension name to retrieve the values for."
    name: "dimensionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions?alt=com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions&text=ListValuesOfDimensionWithAnomaliesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<String> listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options)"
  returns:
    description: "The dimension values with anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options, Context context)"
  name: "listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options, Context context)"
  nameWithType: "MetricsAdvisorClient.listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options, Context context)"
  summary: "Fetch the values of a dimension that have anomalies.\n\n**Code sample**\n\n```java\nfinal String detectionConfigurationId = \"c0f2539f-b804-4ab9-a70f-0da0c89c76d8\";\n final String dimensionName = \"Dim1\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n final ListValuesOfDimensionWithAnomaliesOptions options\n     = new ListValuesOfDimensionWithAnomaliesOptions(startTime, endTime)\n     .setTop(10);\n \n PagedIterable<String> dimensionValueIterable\n     = metricAdvisorClient.listValuesOfDimensionWithAnomalies(detectionConfigurationId,\n     dimensionName,\n     options,\n     Context.NONE);\n \n Stream<PagedResponse<String>> dimensionValuePageStream = dimensionValueIterable.streamByPage();\n int[] pageCount = new int[1];\n dimensionValuePageStream.forEach(dimensionValuePage -> {\n     System.out.printf(\"Page: %d%n\", pageCount[0]++);\n     IterableStream<String> dimensionValuePageItems = dimensionValuePage.getElements();\n     for (String dimensionValue : dimensionValuePageItems) {\n         System.out.printf(\"Dimension Value: %s%n\", dimensionValue);\n     }\n });\n```"
  parameters:
  - description: "Identifies the configuration used to detect the anomalies."
    name: "detectionConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The dimension name to retrieve the values for."
    name: "dimensionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions?alt=com.azure.ai.metricsadvisor.models.ListValuesOfDimensionWithAnomaliesOptions&text=ListValuesOfDimensionWithAnomaliesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<String> listValuesOfDimensionWithAnomalies(String detectionConfigurationId, String dimensionName, ListValuesOfDimensionWithAnomaliesOptions options, Context context)"
  returns:
    description: "The dimension values with anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
