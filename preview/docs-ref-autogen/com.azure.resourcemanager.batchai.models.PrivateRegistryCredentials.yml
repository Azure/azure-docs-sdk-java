### YamlMime:JavaType
uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials"
fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials"
name: "PrivateRegistryCredentials"
nameWithType: "PrivateRegistryCredentials"
summary: "Credentials to access a container image in a private repository."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PrivateRegistryCredentials"
constructors:
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.PrivateRegistryCredentials()"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.PrivateRegistryCredentials()"
  name: "PrivateRegistryCredentials()"
  nameWithType: "PrivateRegistryCredentials.PrivateRegistryCredentials()"
  syntax: "public PrivateRegistryCredentials()"
methods:
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.password()"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.password()"
  name: "password()"
  nameWithType: "PrivateRegistryCredentials.password()"
  summary: "Get the password property: User password to login to the docker repository."
  syntax: "public String password()"
  desc: "Get the password property: User password to login to the docker repository. One of password or passwordSecretReference must be specified."
  returns:
    description: "the password value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.passwordSecretReference()"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.passwordSecretReference()"
  name: "passwordSecretReference()"
  nameWithType: "PrivateRegistryCredentials.passwordSecretReference()"
  summary: "Get the password<wbr>Secret<wbr>Reference property: Key<wbr>Vault Secret storing the password."
  syntax: "public KeyVaultSecretReference passwordSecretReference()"
  desc: "Get the passwordSecretReference property: KeyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified."
  returns:
    description: "the passwordSecretReference value."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.KeyVaultSecretReference?alt=com.azure.resourcemanager.batchai.models.KeyVaultSecretReference&text=KeyVaultSecretReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.username()"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.username()"
  name: "username()"
  nameWithType: "PrivateRegistryCredentials.username()"
  summary: "Get the username property: User name to login to the repository."
  syntax: "public String username()"
  desc: "Get the username property: User name to login to the repository."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.validate()"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.validate()"
  name: "validate()"
  nameWithType: "PrivateRegistryCredentials.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "PrivateRegistryCredentials.withPassword(String password)"
  summary: "Set the password property: User password to login to the docker repository."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateRegistryCredentials withPassword(String password)"
  desc: "Set the password property: User password to login to the docker repository. One of password or passwordSecretReference must be specified."
  returns:
    description: "the PrivateRegistryCredentials object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials?alt=com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials&text=PrivateRegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withPasswordSecretReference(com.azure.resourcemanager.batchai.models.KeyVaultSecretReference)"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)"
  name: "withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)"
  nameWithType: "PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)"
  summary: "Set the password<wbr>Secret<wbr>Reference property: Key<wbr>Vault Secret storing the password."
  parameters:
  - description: "the passwordSecretReference value to set."
    name: "passwordSecretReference"
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.KeyVaultSecretReference?alt=com.azure.resourcemanager.batchai.models.KeyVaultSecretReference&text=KeyVaultSecretReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateRegistryCredentials withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)"
  desc: "Set the passwordSecretReference property: KeyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified."
  returns:
    description: "the PrivateRegistryCredentials object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials?alt=com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials&text=PrivateRegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "PrivateRegistryCredentials.withUsername(String username)"
  summary: "Set the username property: User name to login to the repository."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateRegistryCredentials withUsername(String username)"
  desc: "Set the username property: User name to login to the repository."
  returns:
    description: "the PrivateRegistryCredentials object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials?alt=com.azure.resourcemanager.batchai.models.PrivateRegistryCredentials&text=PrivateRegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Credentials to access a container image in a private repository."
metadata: {}
package: "com.azure.resourcemanager.batchai.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
