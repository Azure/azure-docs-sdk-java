### YamlMime:JavaType
uid: "com.azure.resourcemanager.quota.models.Quotas"
fullName: "com.azure.resourcemanager.quota.models.Quotas"
name: "Quotas"
nameWithType: "Quotas"
summary: "Resource collection API of Quotas."
syntax: "public interface Quotas"
methods:
- uid: "com.azure.resourcemanager.quota.models.Quotas.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.define(String name)"
  name: "define(String name)"
  nameWithType: "Quotas.define(String name)"
  summary: "Begins definition for a new Current<wbr>Quota<wbr>Limit<wbr>Base resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBase.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new CurrentQuotaLimitBase resource."
  returns:
    description: "the first stage of the new CurrentQuotaLimitBase definition."
    type: "<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.Blank?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.models.Quotas.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.get(String resourceName, String scope)"
  name: "get(String resourceName, String scope)"
  nameWithType: "Quotas.get(String resourceName, String scope)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBase get(String resourceName, String scope)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.models.Quotas.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Quotas.getById(String id)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBase getById(String id)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.models.Quotas.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Quotas.getByIdWithResponse(String id, Context context)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CurrentQuotaLimitBase> getByIdWithResponse(String id, Context context)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.models.Quotas.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.getWithResponse(String resourceName, String scope, Context context)"
  name: "getWithResponse(String resourceName, String scope, Context context)"
  nameWithType: "Quotas.getWithResponse(String resourceName, String scope, Context context)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CurrentQuotaLimitBase> getWithResponse(String resourceName, String scope, Context context)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.models.Quotas.list(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.list(String scope)"
  name: "list(String scope)"
  nameWithType: "Quotas.list(String scope)"
  summary: "Get a list of current quota limits of all resources for the specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CurrentQuotaLimitBase> list(String scope)"
  desc: "Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota."
  returns:
    description: "a list of current quota limits of all resources for the specified scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.models.Quotas.list(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.models.Quotas.list(String scope, Context context)"
  name: "list(String scope, Context context)"
  nameWithType: "Quotas.list(String scope, Context context)"
  summary: "Get a list of current quota limits of all resources for the specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CurrentQuotaLimitBase> list(String scope, Context context)"
  desc: "Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota."
  returns:
    description: "a list of current quota limits of all resources for the specified scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase&text=CurrentQuotaLimitBase\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Quotas."
metadata: {}
package: "com.azure.resourcemanager.quota.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.0.0-beta.2
