### YamlMime:JavaType
uid: "com.azure.communication.callingserver.CallingServerClient"
fullName: "com.azure.communication.callingserver.CallingServerClient"
name: "CallingServerClient"
nameWithType: "CallingServerClient"
summary: "Synchronous client that supports calling server operations."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CallingServerClient**"
methods:
- uid: "com.azure.communication.callingserver.CallingServerClient.createCallConnection(com.azure.communication.common.CommunicationIdentifier,java.util.List<com.azure.communication.common.CommunicationIdentifier>,com.azure.communication.callingserver.models.CreateCallOptions)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.createCallConnection(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions)"
  name: "createCallConnection(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions)"
  nameWithType: "CallingServerClient.createCallConnection(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions)"
  summary: "Create a call connection request from source identity to targets identity."
  parameters:
  - description: "The source of the call."
    name: "source"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "The targets of the call."
    name: "targets"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The call Options."
    name: "createCallOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.CreateCallOptions?alt=com.azure.communication.callingserver.models.CreateCallOptions&text=CreateCallOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallConnection createCallConnection(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions)"
  desc: "Create a call connection request from source identity to targets identity."
  returns:
    description: "Response for a successful CreateCallConnection request.\n\n <pre>\n List&lt;CommunicationIdentifier&gt; targets = Arrays.asList&#40;firstCallee, secondCallee&#41;;\n List&lt;MediaType&gt; requestedMediaTypes = Arrays.asList&#40;MediaType.AUDIO, MediaType.VIDEO&#41;;\n List&lt;EventSubscriptionType&gt; requestedCallEvents = Arrays.asList&#40;\n     EventSubscriptionType.DTMF_RECEIVED,\n     EventSubscriptionType.PARTICIPANTS_UPDATED&#41;;\n CreateCallOptions createCallOptions = new CreateCallOptions&#40;\n     callbackUri,\n     requestedMediaTypes,\n     requestedCallEvents&#41;;\n CallConnection callConnection = callingServerClient.createCallConnection&#40;source, targets, createCallOptions&#41;;\n </pre>"
    type: "<xref href=\"com.azure.communication.callingserver.CallConnection?alt=com.azure.communication.callingserver.CallConnection&text=CallConnection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClient.createCallConnectionWithResponse(com.azure.communication.common.CommunicationIdentifier,java.util.List<com.azure.communication.common.CommunicationIdentifier>,com.azure.communication.callingserver.models.CreateCallOptions,com.azure.core.util.Context)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.createCallConnectionWithResponse(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions, Context context)"
  name: "createCallConnectionWithResponse(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions, Context context)"
  nameWithType: "CallingServerClient.createCallConnectionWithResponse(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions, Context context)"
  summary: "Create a Call Connection Request from source identity to targets identity."
  parameters:
  - description: "The source of the call."
    name: "source"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "The targets of the call."
    name: "targets"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The call Options."
    name: "createCallOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.CreateCallOptions?alt=com.azure.communication.callingserver.models.CreateCallOptions&text=CreateCallOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> representing the request context."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<CallConnection> createCallConnectionWithResponse(CommunicationIdentifier source, List<CommunicationIdentifier> targets, CreateCallOptions createCallOptions, Context context)"
  desc: "Create a Call Connection Request from source identity to targets identity."
  returns:
    description: "Response for a successful CreateCallConnection request."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.CallConnection?alt=com.azure.communication.callingserver.CallConnection&text=CallConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callingserver.CallingServerClient.downloadTo(java.lang.String,java.io.OutputStream,com.azure.core.http.HttpRange)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.downloadTo(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange)"
  name: "downloadTo(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange)"
  nameWithType: "CallingServerClient.downloadTo(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange)"
  summary: "Download the recording content, e.<wbr>g."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceEndpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- A stream where to write the downloaded content."
    name: "destinationStream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  - description: "- An optional <xref uid=\"com.azure.core.http.HttpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRange\"></xref> value containing the range of bytes to download. If missing,\n                  the whole content will be downloaded."
    name: "httpRange"
    type: "<xref href=\"com.azure.core.http.HttpRange?alt=com.azure.core.http.HttpRange&text=HttpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void downloadTo(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange)"
  desc: "Download the recording content, e.g. Recording's metadata, Recording video, etc., from `endpoint` and write it into the <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> passed as parameter."
- uid: "com.azure.communication.callingserver.CallingServerClient.downloadTo(java.lang.String,java.nio.file.Path,com.azure.communication.callingserver.models.ParallelDownloadOptions,boolean)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.downloadTo(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite)"
  name: "downloadTo(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite)"
  nameWithType: "CallingServerClient.downloadTo(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite)"
  summary: "Download the content located in `endpoint` into a file marked by `path`."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceEndpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- File location."
    name: "destinationPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html\">Path</a>"
  - description: "- an optional <xref uid=\"com.azure.communication.callingserver.models.ParallelDownloadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelDownloadOptions\"></xref> object to modify how the parallel\n                               download will work."
    name: "parallelDownloadOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.ParallelDownloadOptions?alt=com.azure.communication.callingserver.models.ParallelDownloadOptions&text=ParallelDownloadOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "- True to overwrite the file if it exists."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void downloadTo(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite)"
  desc: "Download the content located in `endpoint` into a file marked by `path`. This download will be done using parallel workers."
- uid: "com.azure.communication.callingserver.CallingServerClient.downloadToWithResponse(java.lang.String,java.io.OutputStream,com.azure.core.http.HttpRange,com.azure.core.util.Context)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.downloadToWithResponse(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange, Context context)"
  name: "downloadToWithResponse(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange, Context context)"
  nameWithType: "CallingServerClient.downloadToWithResponse(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange, Context context)"
  summary: "Download the recording content, e.<wbr>g."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceEndpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- A stream where to write the downloaded content."
    name: "destinationStream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  - description: "- An optional <xref uid=\"com.azure.core.http.HttpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRange\"></xref> value containing the range of bytes to download. If missing,\n                  the whole content will be downloaded."
    name: "httpRange"
    type: "<xref href=\"com.azure.core.http.HttpRange?alt=com.azure.core.http.HttpRange&text=HttpRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> representing the request context."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> downloadToWithResponse(String sourceEndpoint, OutputStream destinationStream, HttpRange httpRange, Context context)"
  desc: "Download the recording content, e.g. Recording's metadata, Recording video, etc., from `endpoint` and write it in the <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> passed as parameter."
  returns:
    description: "Response containing the http response information from the download."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callingserver.CallingServerClient.downloadToWithResponse(java.lang.String,java.nio.file.Path,com.azure.communication.callingserver.models.ParallelDownloadOptions,boolean,com.azure.core.util.Context)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.downloadToWithResponse(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite, Context context)"
  name: "downloadToWithResponse(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite, Context context)"
  nameWithType: "CallingServerClient.downloadToWithResponse(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite, Context context)"
  summary: "Download the content located in `endpoint` into a file marked by `path`."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceEndpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- File location."
    name: "destinationPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html\">Path</a>"
  - description: "- an optional <xref uid=\"com.azure.communication.callingserver.models.ParallelDownloadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelDownloadOptions\"></xref> object to modify how the parallel\n                               download will work."
    name: "parallelDownloadOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.ParallelDownloadOptions?alt=com.azure.communication.callingserver.models.ParallelDownloadOptions&text=ParallelDownloadOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "- True to overwrite the file if it exists."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> representing the request context."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> downloadToWithResponse(String sourceEndpoint, Path destinationPath, ParallelDownloadOptions parallelDownloadOptions, boolean overwrite, Context context)"
  desc: "Download the content located in `endpoint` into a file marked by `path`. This download will be done using parallel workers."
  returns:
    description: "Response containing the http response information from the download."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callingserver.CallingServerClient.getCallConnection(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.getCallConnection(String callConnectionId)"
  name: "getCallConnection(String callConnectionId)"
  nameWithType: "CallingServerClient.getCallConnection(String callConnectionId)"
  summary: "Get Call<wbr>Connection object"
  parameters:
  - description: "The call connection id."
    name: "callConnectionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CallConnection getCallConnection(String callConnectionId)"
  desc: "Get CallConnection object"
  returns:
    description: "CallConnection."
    type: "<xref href=\"com.azure.communication.callingserver.CallConnection?alt=com.azure.communication.callingserver.CallConnection&text=CallConnection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClient.initializeServerCall(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.initializeServerCall(String serverCallId)"
  name: "initializeServerCall(String serverCallId)"
  nameWithType: "CallingServerClient.initializeServerCall(String serverCallId)"
  summary: "Get Server<wbr>Call object"
  parameters:
  - description: "Server call id."
    name: "serverCallId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ServerCall initializeServerCall(String serverCallId)"
  desc: "Get ServerCall object"
  returns:
    description: "ServerCall"
    type: "<xref href=\"com.azure.communication.callingserver.ServerCall?alt=com.azure.communication.callingserver.ServerCall&text=ServerCall\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClient.joinCall(java.lang.String,com.azure.communication.common.CommunicationIdentifier,com.azure.communication.callingserver.models.JoinCallOptions)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.joinCall(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions)"
  name: "joinCall(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions)"
  nameWithType: "CallingServerClient.joinCall(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions)"
  summary: "Join a call"
  parameters:
  - description: "The server call id."
    name: "serverCallId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "of Join Call request."
    name: "source"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "to Join Call."
    name: "joinCallOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.JoinCallOptions?alt=com.azure.communication.callingserver.models.JoinCallOptions&text=JoinCallOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallConnection joinCall(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions)"
  desc: "Join a call"
  returns:
    description: "CallConnection for a successful join request."
    type: "<xref href=\"com.azure.communication.callingserver.CallConnection?alt=com.azure.communication.callingserver.CallConnection&text=CallConnection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClient.joinCallWithResponse(java.lang.String,com.azure.communication.common.CommunicationIdentifier,com.azure.communication.callingserver.models.JoinCallOptions,com.azure.core.util.Context)"
  fullName: "com.azure.communication.callingserver.CallingServerClient.joinCallWithResponse(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions, Context context)"
  name: "joinCallWithResponse(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions, Context context)"
  nameWithType: "CallingServerClient.joinCallWithResponse(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions, Context context)"
  summary: "Join a call"
  parameters:
  - description: "The server call id."
    name: "serverCallId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "of Join Call request."
    name: "source"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "to Join Call."
    name: "joinCallOptions"
    type: "<xref href=\"com.azure.communication.callingserver.models.JoinCallOptions?alt=com.azure.communication.callingserver.models.JoinCallOptions&text=JoinCallOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> representing the request context."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<CallConnection> joinCallWithResponse(String serverCallId, CommunicationIdentifier source, JoinCallOptions joinCallOptions, Context context)"
  desc: "Join a call"
  returns:
    description: "Response for a successful join request."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callingserver.CallConnection?alt=com.azure.communication.callingserver.CallConnection&text=CallConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Synchronous client that supports calling server operations.\n\n**Instantiating a synchronous Calling Server Client**\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n \n CallingServerClient callingServerClient = new CallingServerClientBuilder()\n     .pipeline(pipeline)\n     .connectionString(connectionString)\n     .buildClient();\n```\n\nView <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
metadata: {}
package: "com.azure.communication.callingserver"
artifact: com.azure:azure-communication-callingserver:1.0.0-beta.4
