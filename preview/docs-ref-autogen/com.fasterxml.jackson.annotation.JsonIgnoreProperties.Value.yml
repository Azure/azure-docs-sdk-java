### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value"
fullName: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value"
name: "JsonIgnoreProperties.Value"
nameWithType: "JsonIgnoreProperties.Value"
summary: "Helper class used to contain information from a single <xref uid=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonIgnoreProperties\"></xref> annotation, as well as to provide possible overrides from non-annotation sources."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class JsonIgnoreProperties.Value implements JacksonAnnotationValue<JsonIgnoreProperties>, Serializable"
constructors:
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.Value(java.util.Set<java.lang.String>,boolean,boolean,boolean,boolean)"
fields:
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.EMPTY"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value._allowGetters"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value._allowSetters"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value._ignoreUnknown"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value._ignored"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value._merge"
methods:
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.construct(java.util.Set<java.lang.String>,boolean,boolean,boolean,boolean)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.empty()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.equals(java.lang.Object)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForDeserialization()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForSerialization()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.forIgnoreUnknown(boolean)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.forIgnoredProperties(java.lang.String...)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.forIgnoredProperties(java.util.Set<java.lang.String>)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.from(com.fasterxml.jackson.annotation.JsonIgnoreProperties)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getAllowGetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getAllowSetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getIgnoreUnknown()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getIgnored()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getMerge()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.hashCode()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.merge(com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.mergeAll(com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value...)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.readResolve()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.toString()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.valueFor()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withAllowGetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withAllowSetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withIgnoreUnknown()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withIgnored(java.lang.String...)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withIgnored(java.util.Set<java.lang.String>)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withMerge()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withOverrides(com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value)"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withoutAllowGetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withoutAllowSetters()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withoutIgnoreUnknown()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withoutIgnored()"
- "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.withoutMerge()"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.annotation.JacksonAnnotationValue?alt=com.fasterxml.jackson.annotation.JacksonAnnotationValue&text=JacksonAnnotationValue\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties?alt=com.fasterxml.jackson.annotation.JsonIgnoreProperties&text=JsonIgnoreProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
