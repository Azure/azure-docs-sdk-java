### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn"
fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn"
name: "PeeringRegisteredAsn"
nameWithType: "PeeringRegisteredAsn"
summary: "An immutable client-side representation of Peering<wbr>Registered<wbr>Asn."
syntax: "public interface PeeringRegisteredAsn"
methods:
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.asn()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.asn()"
  name: "asn()"
  nameWithType: "PeeringRegisteredAsn.asn()"
  summary: "Gets the asn property: The customer's ASN from which traffic originates."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer asn()"
  desc: "Gets the asn property: The customer's ASN from which traffic originates."
  returns:
    description: "the asn value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.id()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.id()"
  name: "id()"
  nameWithType: "PeeringRegisteredAsn.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.innerModel()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.innerModel()"
  name: "innerModel()"
  nameWithType: "PeeringRegisteredAsn.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>peering.<wbr>fluent.<wbr>models.<wbr>Peering<wbr>Registered<wbr>Asn<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringRegisteredAsnInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner&text=PeeringRegisteredAsnInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.name()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.name()"
  name: "name()"
  nameWithType: "PeeringRegisteredAsn.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.peeringServicePrefixKey()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.peeringServicePrefixKey()"
  name: "peeringServicePrefixKey()"
  nameWithType: "PeeringRegisteredAsn.peeringServicePrefixKey()"
  summary: "Gets the peering<wbr>Service<wbr>Prefix<wbr>Key property: The peering service prefix key that is to be shared with the customer."
  modifiers:
  - "abstract"
  syntax: "public abstract String peeringServicePrefixKey()"
  desc: "Gets the peeringServicePrefixKey property: The peering service prefix key that is to be shared with the customer."
  returns:
    description: "the peeringServicePrefixKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.provisioningState()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PeeringRegisteredAsn.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ProvisioningState?alt=com.azure.resourcemanager.peering.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.refresh()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.refresh()"
  name: "refresh()"
  nameWithType: "PeeringRegisteredAsn.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringRegisteredAsn refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PeeringRegisteredAsn.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredAsn refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.type()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.type()"
  name: "type()"
  nameWithType: "PeeringRegisteredAsn.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.update()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.update()"
  name: "update()"
  nameWithType: "PeeringRegisteredAsn.update()"
  summary: "Begins update for the Peering<wbr>Registered<wbr>Asn resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringRegisteredAsn.Update update()"
  desc: "Begins update for the PeeringRegisteredAsn resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.Update?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of PeeringRegisteredAsn."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
