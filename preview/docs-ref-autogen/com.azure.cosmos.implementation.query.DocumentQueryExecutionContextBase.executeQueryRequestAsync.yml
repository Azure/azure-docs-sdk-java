### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync*"
fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync"
name: "executeQueryRequestAsync"
nameWithType: "DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync"
members:
- uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync(RxDocumentServiceRequest request)"
  name: "executeQueryRequestAsync(RxDocumentServiceRequest request)"
  nameWithType: "DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync(RxDocumentServiceRequest request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FeedResponse<T>> executeQueryRequestAsync(RxDocumentServiceRequest request)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
