### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  id: StdTypeResolverBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.annotation.JsonTypeInfo.As,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._customIdResolver
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._defaultImpl
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._idType
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._includeAs
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeIdVisible
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeProperty
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: StdTypeResolverBuilder
  nameWithType: StdTypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Default <xref uid="com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder" data-throw-if-not-resolved="false">TypeResolverBuilder</xref> implementation.
  syntax:
    content: public class StdTypeResolverBuilder implements TypeResolverBuilder<StdTypeResolverBuilder>
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder()
  id: StdTypeResolverBuilder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: StdTypeResolverBuilder()
  nameWithType: StdTypeResolverBuilder.StdTypeResolverBuilder()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder()
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public StdTypeResolverBuilder()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.annotation.JsonTypeInfo.As,java.lang.String)
  id: StdTypeResolverBuilder(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.annotation.JsonTypeInfo.As,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: StdTypeResolverBuilder(JsonTypeInfo.Id idType, JsonTypeInfo.As idAs, String propName)
  nameWithType: StdTypeResolverBuilder.StdTypeResolverBuilder(JsonTypeInfo.Id idType, JsonTypeInfo.As idAs, String propName)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder(JsonTypeInfo.Id idType, JsonTypeInfo.As idAs, String propName)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected StdTypeResolverBuilder(JsonTypeInfo.Id idType, JsonTypeInfo.As idAs, String propName)
    parameters:
    - id: idType
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.Id
    - id: idAs
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
    - id: propName
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._customIdResolver
  id: _customIdResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _customIdResolver
  nameWithType: StdTypeResolverBuilder._customIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._customIdResolver
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeIdResolver _customIdResolver
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._defaultImpl
  id: _defaultImpl
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _defaultImpl
  nameWithType: StdTypeResolverBuilder._defaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._defaultImpl
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Default class to use in case type information is not available or is broken.
  syntax:
    content: protected Class<?> _defaultImpl
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._idType
  id: _idType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _idType
  nameWithType: StdTypeResolverBuilder._idType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._idType
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected JsonTypeInfo.Id _idType
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.Id
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._includeAs
  id: _includeAs
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _includeAs
  nameWithType: StdTypeResolverBuilder._includeAs
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._includeAs
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected JsonTypeInfo.As _includeAs
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeIdVisible
  id: _typeIdVisible
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _typeIdVisible
  nameWithType: StdTypeResolverBuilder._typeIdVisible
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeIdVisible
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Whether type id should be exposed to deserializers or not
  syntax:
    content: protected boolean _typeIdVisible
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeProperty
  id: _typeProperty
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: _typeProperty
  nameWithType: StdTypeResolverBuilder._typeProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeProperty
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected String _typeProperty
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  id: allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: allowPrimitiveTypes(MapperConfig<?> config, JavaType baseType)
  nameWithType: StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig<?> config, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig<?> config, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Overridable helper method that is called to determine whether type serializers and type deserializers may be created even if base type is Java `primitive` type. Default implementation simply returns `false` (since primitive types can not be sub-classed, are never polymorphic) but custom implementations may change the logic for some special cases.
  syntax:
    content: protected boolean allowPrimitiveTypes(MapperConfig<?> config, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: Currently active configuration
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: Primitive base type for property being handled
    return:
      type: boolean
      description: >-
        True if type (de)serializer may be created even if base type is Java
            <code>primitive</code> type; false if not
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  id: buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  nameWithType: StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for building type deserializer based on current configuration of this builder.
  syntax:
    content: public TypeDeserializer buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subtypes
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  id: buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  nameWithType: StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for building type serializer based on current configuration of this builder.
  syntax:
    content: public TypeSerializer buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subtypes
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class<?>)
  id: defaultImpl(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: defaultImpl(Class<?> defaultImpl)
  nameWithType: StdTypeResolverBuilder.defaultImpl(Class<?> defaultImpl)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(Class<?> defaultImpl)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for specifying default implementation to use if type id is either not available, or cannot be resolved.
  syntax:
    content: public StdTypeResolverBuilder defaultImpl(Class<?> defaultImpl)
    parameters:
    - id: defaultImpl
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  id: defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: defineDefaultImpl(DeserializationConfig config, JavaType baseType)
  nameWithType: StdTypeResolverBuilder.defineDefaultImpl(DeserializationConfig config, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(DeserializationConfig config, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected JavaType defineDefaultImpl(DeserializationConfig config, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
  id: getDefaultImpl()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: getDefaultImpl()
  nameWithType: StdTypeResolverBuilder.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for currently configured default type; implementation class that may be used in case no valid type information is available during type resolution
  syntax:
    content: public Class<?> getDefaultImpl()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
  id: getTypeProperty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: getTypeProperty()
  nameWithType: StdTypeResolverBuilder.getTypeProperty()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public String getTypeProperty()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  id: idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser)
  nameWithType: StdTypeResolverBuilder.idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method that will either return configured custom type id resolver, or construct a standard resolver given configuration.
  syntax:
    content: protected TypeIdResolver idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subtypeValidator
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    - id: subtypes
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
    - id: forSer
      type: boolean
    - id: forDeser
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  id: inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: inclusion(JsonTypeInfo.As includeAs)
  nameWithType: StdTypeResolverBuilder.inclusion(JsonTypeInfo.As includeAs)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(JsonTypeInfo.As includeAs)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for specifying mechanism to use for including type metadata in JSON. If not explicitly called, setting defaults to <xref uid="" data-throw-if-not-resolved="false">As#PROPERTY</xref>.
  syntax:
    content: public StdTypeResolverBuilder inclusion(JsonTypeInfo.As includeAs)
    parameters:
    - id: includeAs
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
  id: init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: init(JsonTypeInfo.Id idType, TypeIdResolver idRes)
  nameWithType: StdTypeResolverBuilder.init(JsonTypeInfo.Id idType, TypeIdResolver idRes)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(JsonTypeInfo.Id idType, TypeIdResolver idRes)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Initialization method that is called right after constructing the builder instance.
  syntax:
    content: public StdTypeResolverBuilder init(JsonTypeInfo.Id idType, TypeIdResolver idRes)
    parameters:
    - id: idType
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.Id
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
  id: isTypeIdVisible()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: isTypeIdVisible()
  nameWithType: StdTypeResolverBuilder.isTypeIdVisible()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public boolean isTypeIdVisible()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
  id: noTypeInfoBuilder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: noTypeInfoBuilder()
  nameWithType: StdTypeResolverBuilder.noTypeInfoBuilder()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public static StdTypeResolverBuilder noTypeInfoBuilder()
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: reportInvalidBaseType(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator ptv)
  nameWithType: StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected PolymorphicTypeValidator reportInvalidBaseType(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator ptv)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  id: subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: subTypeValidator(MapperConfig<?> config)
  nameWithType: StdTypeResolverBuilder.subTypeValidator(MapperConfig<?> config)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(MapperConfig<?> config)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: >-
    Overridable helper method for determining actual validator to use when constructing type serializers and type deserializers.


    Default implementation simply uses one configured and accessible using <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator()" data-throw-if-not-resolved="false">MapperConfig#getPolymorphicTypeValidator()</xref>.
  syntax:
    content: public PolymorphicTypeValidator subTypeValidator(MapperConfig<?> config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean)
  id: typeIdVisibility(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: typeIdVisibility(boolean isVisible)
  nameWithType: StdTypeResolverBuilder.typeIdVisibility(boolean isVisible)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean isVisible)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for specifying whether type id should be visible to <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonDeserializer</xref>s or not.
  syntax:
    content: public StdTypeResolverBuilder typeIdVisibility(boolean isVisible)
    parameters:
    - id: isVisible
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(java.lang.String)
  id: typeProperty(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: typeProperty(String typeIdPropName)
  nameWithType: StdTypeResolverBuilder.typeProperty(String typeIdPropName)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(String typeIdPropName)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method for constructing an instance with specified type property name (property name to use for type id when using "as-property" inclusion).
  syntax:
    content: public StdTypeResolverBuilder typeProperty(String typeIdPropName)
    parameters:
    - id: typeIdPropName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  id: verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  langs:
  - java
  name: verifyBaseTypeValidity(MapperConfig<?> config, JavaType baseType)
  nameWithType: StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig<?> config, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig<?> config, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method called to check that base type is valid regarding possible constraints on basetype/subtype combinations allowed for polymorphic type handling. Currently limits are verified for class name - based methods only.
  syntax:
    content: protected PolymorphicTypeValidator verifyBaseTypeValidity(MapperConfig<?> config, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
references:
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder*
  name: StdTypeResolverBuilder
  nameWithType: StdTypeResolverBuilder.StdTypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.StdTypeResolverBuilder
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.Id
  name: JsonTypeInfo.Id
  nameWithType: JsonTypeInfo.Id
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.Id
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder*
  name: noTypeInfoBuilder
  nameWithType: StdTypeResolverBuilder.noTypeInfoBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init*
  name: init
  nameWithType: StdTypeResolverBuilder.init
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer*
  name: buildTypeSerializer
  nameWithType: StdTypeResolverBuilder.buildTypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer*
  name: buildTypeDeserializer
  nameWithType: StdTypeResolverBuilder.buildTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl*
  name: defineDefaultImpl
  nameWithType: StdTypeResolverBuilder.defineDefaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion*
  name: inclusion
  nameWithType: StdTypeResolverBuilder.inclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty*
  name: typeProperty
  nameWithType: StdTypeResolverBuilder.typeProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl*
  name: defaultImpl
  nameWithType: StdTypeResolverBuilder.defaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility*
  name: typeIdVisibility
  nameWithType: StdTypeResolverBuilder.typeIdVisibility
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl*
  name: getDefaultImpl
  nameWithType: StdTypeResolverBuilder.getDefaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty*
  name: getTypeProperty
  nameWithType: StdTypeResolverBuilder.getTypeProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible*
  name: isTypeIdVisible
  nameWithType: StdTypeResolverBuilder.isTypeIdVisible
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  name: PolymorphicTypeValidator
  nameWithType: PolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver*
  name: idResolver
  nameWithType: StdTypeResolverBuilder.idResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator*
  name: subTypeValidator
  nameWithType: StdTypeResolverBuilder.subTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity*
  name: verifyBaseTypeValidity
  nameWithType: StdTypeResolverBuilder.verifyBaseTypeValidity
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType*
  name: reportInvalidBaseType
  nameWithType: StdTypeResolverBuilder.reportInvalidBaseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes*
  name: allowPrimitiveTypes
  nameWithType: StdTypeResolverBuilder.allowPrimitiveTypes
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>
  name: TypeResolverBuilder<StdTypeResolverBuilder>
  nameWithType: TypeResolverBuilder<StdTypeResolverBuilder>
  fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.NamedType
  name: NamedType
  nameWithType: NamedType
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  name: TypeResolverBuilder
  nameWithType: TypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
