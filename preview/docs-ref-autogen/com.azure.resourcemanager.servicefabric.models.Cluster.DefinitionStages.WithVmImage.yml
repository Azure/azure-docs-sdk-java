### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithVmImage"
fullName: "com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithVmImage"
name: "Cluster.DefinitionStages.WithVmImage"
nameWithType: "Cluster.DefinitionStages.WithVmImage"
summary: "The stage of the Cluster definition allowing to specify vm<wbr>Image."
syntax: "public static interface Cluster.DefinitionStages.WithVmImage"
methods:
- uid: "com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithVmImage.withVmImage(java.lang.String)"
  fullName: "com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithVmImage.withVmImage(String vmImage)"
  name: "withVmImage(String vmImage)"
  nameWithType: "Cluster.DefinitionStages.WithVmImage.withVmImage(String vmImage)"
  summary: "Specifies the vm<wbr>Image property: The VM image VMSS has been configured with."
  modifiers:
  - "abstract"
  parameters:
  - description: "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be\n     used."
    name: "vmImage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Cluster.DefinitionStages.WithCreate withVmImage(String vmImage)"
  desc: "Specifies the vmImage property: The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.servicefabric.models.Cluster.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the Cluster definition allowing to specify vmImage."
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
