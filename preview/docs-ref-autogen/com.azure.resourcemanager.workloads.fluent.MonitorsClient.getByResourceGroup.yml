### YamlMime:JavaMember
uid: "com.azure.resourcemanager.workloads.fluent.MonitorsClient.getByResourceGroup*"
fullName: "com.azure.resourcemanager.workloads.fluent.MonitorsClient.getByResourceGroup"
name: "getByResourceGroup"
nameWithType: "MonitorsClient.getByResourceGroup"
members:
- uid: "com.azure.resourcemanager.workloads.fluent.MonitorsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.workloads.fluent.MonitorsClient.getByResourceGroup(String resourceGroupName, String monitorName)"
  name: "getByResourceGroup(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.getByResourceGroup(String resourceGroupName, String monitorName)"
  summary: "Gets properties of a SAP monitor for the specified subscription, resource group, and resource name."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the SAP monitor resource."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorInner getByResourceGroup(String resourceGroupName, String monitorName)"
  returns:
    description: "properties of a SAP monitor for the specified subscription, resource group, and resource name."
    type: "<xref href=\"com.azure.resourcemanager.workloads.fluent.models.MonitorInner?alt=com.azure.resourcemanager.workloads.fluent.models.MonitorInner&text=MonitorInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.workloads.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-workloads:1.0.0-beta.1
