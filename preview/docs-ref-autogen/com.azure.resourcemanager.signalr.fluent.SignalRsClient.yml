### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient"
fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient"
name: "SignalRsClient"
nameWithType: "SignalRsClient"
summary: "An instance of this class provides access to all the operations defined in Signal<wbr>RsClient."
syntax: "public interface SignalRsClient"
methods:
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  name: "beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  nameWithType: "SignalRsClient.beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  summary: "Create or update a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the create or update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRResourceInner>,SignalRResourceInner> beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  desc: "Create or update a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represent a resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  nameWithType: "SignalRsClient.beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  summary: "Create or update a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the create or update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRResourceInner>,SignalRResourceInner> beginCreateOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  desc: "Create or update a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represent a resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginDelete(String resourceGroupName, String resourceName)"
  name: "beginDelete(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.beginDelete(String resourceGroupName, String resourceName)"
  summary: "Operation to delete a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String resourceName)"
  desc: "Operation to delete a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginDelete(String resourceGroupName, String resourceName, Context context)"
  name: "beginDelete(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.beginDelete(String resourceGroupName, String resourceName, Context context)"
  summary: "Operation to delete a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String resourceName, Context context)"
  desc: "Operation to delete a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRegenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.models.RegenerateKeyParameters)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  name: "beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  nameWithType: "SignalRsClient.beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  summary: "Regenerate the access key for the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRKeysInner>,SignalRKeysInner> beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  desc: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRegenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.models.RegenerateKeyParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  name: "beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  nameWithType: "SignalRsClient.beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  summary: "Regenerate the access key for the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRKeysInner>,SignalRKeysInner> beginRegenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  desc: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRestart(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRestart(String resourceGroupName, String resourceName)"
  name: "beginRestart(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.beginRestart(String resourceGroupName, String resourceName)"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String resourceName)"
  desc: "Operation to restart a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRestart(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginRestart(String resourceGroupName, String resourceName, Context context)"
  name: "beginRestart(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.beginRestart(String resourceGroupName, String resourceName, Context context)"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String resourceName, Context context)"
  desc: "Operation to restart a resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  name: "beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  nameWithType: "SignalRsClient.beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  summary: "Operation to update an exiting resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRResourceInner>,SignalRResourceInner> beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  desc: "Operation to update an exiting resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represent a resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  name: "beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  nameWithType: "SignalRsClient.beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  summary: "Operation to update an exiting resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SignalRResourceInner>,SignalRResourceInner> beginUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  desc: "Operation to update an exiting resource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of a class represent a resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.checkNameAvailability(java.lang.String,com.azure.resourcemanager.signalr.models.NameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.checkNameAvailability(String location, NameAvailabilityParameters parameters)"
  name: "checkNameAvailability(String location, NameAvailabilityParameters parameters)"
  nameWithType: "SignalRsClient.checkNameAvailability(String location, NameAvailabilityParameters parameters)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.signalr.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NameAvailabilityInner checkNameAvailability(String location, NameAvailabilityParameters parameters)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "result of the request to check name availability."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.signalr.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.signalr.models.NameAvailabilityParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters parameters, Context context)"
  name: "checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters parameters, Context context)"
  nameWithType: "SignalRsClient.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters parameters, Context context)"
  summary: "Checks that the resource name is valid and is not already in use."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.NameAvailabilityParameters?alt=com.azure.resourcemanager.signalr.models.NameAvailabilityParameters&text=NameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<NameAvailabilityInner> checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters parameters, Context context)"
  desc: "Checks that the resource name is valid and is not already in use."
  returns:
    description: "result of the request to check name availability along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.signalr.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  name: "createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  nameWithType: "SignalRsClient.createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  summary: "Create or update a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the create or update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResourceInner createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  desc: "Create or update a resource."
  returns:
    description: "a class represent a resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  name: "createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  nameWithType: "SignalRsClient.createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  summary: "Create or update a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the create or update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResourceInner createOrUpdate(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  desc: "Create or update a resource."
  returns:
    description: "a class represent a resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.delete(String resourceGroupName, String resourceName)"
  name: "delete(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.delete(String resourceGroupName, String resourceName)"
  summary: "Operation to delete a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String resourceName)"
  desc: "Operation to delete a resource."
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.delete(String resourceGroupName, String resourceName, Context context)"
  name: "delete(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.delete(String resourceGroupName, String resourceName, Context context)"
  summary: "Operation to delete a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String resourceName, Context context)"
  desc: "Operation to delete a resource."
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.getByResourceGroup(String resourceGroupName, String resourceName)"
  name: "getByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.getByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Get the resource and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResourceInner getByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Get the resource and its properties."
  returns:
    description: "the resource and its properties."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Get the resource and its properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SignalRResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Get the resource and its properties."
  returns:
    description: "the resource and its properties along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.list()"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.list()"
  name: "list()"
  nameWithType: "SignalRsClient.list()"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<SignalRResourceInner> list()"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "object that includes an array of resources and a possible link for next set as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "SignalRsClient.list(Context context)"
  summary: "Handles requests to list all resources in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SignalRResourceInner> list(Context context)"
  desc: "Handles requests to list all resources in a subscription."
  returns:
    description: "object that includes an array of resources and a possible link for next set as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "SignalRsClient.listByResourceGroup(String resourceGroupName)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SignalRResourceInner> listByResourceGroup(String resourceGroupName)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "object that includes an array of resources and a possible link for next set as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "SignalRsClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Handles requests to list all resources in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SignalRResourceInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Handles requests to list all resources in a resource group."
  returns:
    description: "object that includes an array of resources and a possible link for next set as paginated response with\n     <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listKeys(String resourceGroupName, String resourceName)"
  name: "listKeys(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.listKeys(String resourceGroupName, String resourceName)"
  summary: "Get the access keys of the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRKeysInner listKeys(String resourceGroupName, String resourceName)"
  desc: "Get the access keys of the resource."
  returns:
    description: "the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listKeysWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "listKeysWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.listKeysWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Get the access keys of the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SignalRKeysInner> listKeysWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Get the access keys of the resource."
  returns:
    description: "the access keys of the resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listSkus(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listSkus(String resourceGroupName, String resourceName)"
  name: "listSkus(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.listSkus(String resourceGroupName, String resourceName)"
  summary: "List all available skus of the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SkuListInner listSkus(String resourceGroupName, String resourceName)"
  desc: "List all available skus of the resource."
  returns:
    description: "the list skus operation response."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SkuListInner?alt=com.azure.resourcemanager.signalr.fluent.models.SkuListInner&text=SkuListInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listSkusWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.listSkusWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "listSkusWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.listSkusWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "List all available skus of the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SkuListInner> listSkusWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "List all available skus of the resource."
  returns:
    description: "the list skus operation response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SkuListInner?alt=com.azure.resourcemanager.signalr.fluent.models.SkuListInner&text=SkuListInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.models.RegenerateKeyParameters)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  name: "regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  nameWithType: "SignalRsClient.regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  summary: "Regenerate the access key for the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRKeysInner regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters)"
  desc: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  returns:
    description: "a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.models.RegenerateKeyParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  name: "regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  nameWithType: "SignalRsClient.regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  summary: "Regenerate the access key for the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRKeysInner regenerateKey(String resourceGroupName, String resourceName, RegenerateKeyParameters parameters, Context context)"
  desc: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  returns:
    description: "a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRKeysInner&text=SignalRKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.restart(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.restart(String resourceGroupName, String resourceName)"
  name: "restart(String resourceGroupName, String resourceName)"
  nameWithType: "SignalRsClient.restart(String resourceGroupName, String resourceName)"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void restart(String resourceGroupName, String resourceName)"
  desc: "Operation to restart a resource."
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.restart(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.restart(String resourceGroupName, String resourceName, Context context)"
  name: "restart(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "SignalRsClient.restart(String resourceGroupName, String resourceName, Context context)"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void restart(String resourceGroupName, String resourceName, Context context)"
  desc: "Operation to restart a resource."
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.update(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  name: "update(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  nameWithType: "SignalRsClient.update(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  summary: "Operation to update an exiting resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResourceInner update(String resourceGroupName, String resourceName, SignalRResourceInner parameters)"
  desc: "Operation to update an exiting resource."
  returns:
    description: "a class represent a resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.fluent.SignalRsClient.update(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  name: "update(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  nameWithType: "SignalRsClient.update(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  summary: "Operation to update an exiting resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for the update operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResourceInner update(String resourceGroupName, String resourceName, SignalRResourceInner parameters, Context context)"
  desc: "Operation to update an exiting resource."
  returns:
    description: "a class represent a resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in SignalRsClient."
metadata: {}
package: "com.azure.resourcemanager.signalr.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.4
