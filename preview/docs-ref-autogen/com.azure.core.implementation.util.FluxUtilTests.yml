### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.util.FluxUtilTests
  id: FluxUtilTests
  parent: com.azure.core.implementation.util
  children:
  - com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput()
  - com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput()
  - com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput()
  - com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection()
  - com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection()
  - com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle()
  - com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile()
  - com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice()
  - com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream()
  - com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16()
  - com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent()
  - com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer()
  - com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer()
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: FluxUtilTests
  nameWithType: FluxUtilTests
  fullName: com.azure.core.implementation.util.FluxUtilTests
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 46
  package: com.azure.core.implementation.util
  syntax:
    content: public class FluxUtilTests
  inheritance:
  - java.lang.Object
- uid: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput()
  id: testAsynchronyLongInput()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testAsynchronyLongInput()
  nameWithType: FluxUtilTests.testAsynchronyLongInput()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput()
  overload: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 138
  package: com.azure.core.implementation.util
  syntax:
    content: public void testAsynchronyLongInput()
- uid: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput()
  id: testAsynchronyShortInput()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testAsynchronyShortInput()
  nameWithType: FluxUtilTests.testAsynchronyShortInput()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput()
  overload: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 105
  package: com.azure.core.implementation.util
  syntax:
    content: public void testAsynchronyShortInput()
- uid: com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput()
  id: testBackpressureLongInput()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testBackpressureLongInput()
  nameWithType: FluxUtilTests.testBackpressureLongInput()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput()
  overload: com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 167
  package: com.azure.core.implementation.util
  syntax:
    content: public void testBackpressureLongInput()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection()
  id: testCallWithContextGetCollection()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCallWithContextGetCollection()
  nameWithType: FluxUtilTests.testCallWithContextGetCollection()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 289
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCallWithContextGetCollection()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection()
  id: testCallWithContextGetPagedCollection()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCallWithContextGetPagedCollection()
  nameWithType: FluxUtilTests.testCallWithContextGetPagedCollection()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 300
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCallWithContextGetPagedCollection()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle()
  id: testCallWithContextGetSingle()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCallWithContextGetSingle()
  nameWithType: FluxUtilTests.testCallWithContextGetSingle()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 281
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCallWithContextGetSingle()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile()
  id: testCanReadEmptyFile()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCanReadEmptyFile()
  nameWithType: FluxUtilTests.testCanReadEmptyFile()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 80
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCanReadEmptyFile()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice()
  id: testCanReadSlice()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCanReadSlice()
  nameWithType: FluxUtilTests.testCanReadSlice()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 49
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCanReadSlice()
- uid: com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream()
  id: testCollectByteBufStream()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testCollectByteBufStream()
  nameWithType: FluxUtilTests.testCollectByteBufStream()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream()
  overload: com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 268
  package: com.azure.core.implementation.util
  syntax:
    content: public void testCollectByteBufStream()
- uid: com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16()
  id: testSplitForMultipleSplitSizesFromOneTo16()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testSplitForMultipleSplitSizesFromOneTo16()
  nameWithType: FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16()
  overload: com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 204
  package: com.azure.core.implementation.util
  syntax:
    content: public void testSplitForMultipleSplitSizesFromOneTo16()
- uid: com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent()
  id: testSplitOnEmptyContent()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: testSplitOnEmptyContent()
  nameWithType: FluxUtilTests.testSplitOnEmptyContent()
  fullName: com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent()
  overload: com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 238
  package: com.azure.core.implementation.util
  syntax:
    content: public void testSplitOnEmptyContent()
- uid: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer()
  id: toByteArrayWithEmptyByteBuffer()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: toByteArrayWithEmptyByteBuffer()
  nameWithType: FluxUtilTests.toByteArrayWithEmptyByteBuffer()
  fullName: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer()
  overload: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 254
  package: com.azure.core.implementation.util
  syntax:
    content: public void toByteArrayWithEmptyByteBuffer()
- uid: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer()
  id: toByteArrayWithNonEmptyByteBuffer()
  parent: com.azure.core.implementation.util.FluxUtilTests
  href: com.azure.core.implementation.util.FluxUtilTests.yml
  langs:
  - java
  name: toByteArrayWithNonEmptyByteBuffer()
  nameWithType: FluxUtilTests.toByteArrayWithNonEmptyByteBuffer()
  fullName: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer()
  overload: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/test/java/com/azure/core/implementation/util/FluxUtilTests.java
    startLine: 259
  package: com.azure.core.implementation.util
  syntax:
    content: public void toByteArrayWithNonEmptyByteBuffer()
references:
- uid: com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice*
  name: testCanReadSlice
  nameWithType: FluxUtilTests.testCanReadSlice
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCanReadSlice
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile*
  name: testCanReadEmptyFile
  nameWithType: FluxUtilTests.testCanReadEmptyFile
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCanReadEmptyFile
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput*
  name: testAsynchronyShortInput
  nameWithType: FluxUtilTests.testAsynchronyShortInput
  fullName: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyShortInput
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput*
  name: testAsynchronyLongInput
  nameWithType: FluxUtilTests.testAsynchronyLongInput
  fullName: com.azure.core.implementation.util.FluxUtilTests.testAsynchronyLongInput
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput*
  name: testBackpressureLongInput
  nameWithType: FluxUtilTests.testBackpressureLongInput
  fullName: com.azure.core.implementation.util.FluxUtilTests.testBackpressureLongInput
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16*
  name: testSplitForMultipleSplitSizesFromOneTo16
  nameWithType: FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16
  fullName: com.azure.core.implementation.util.FluxUtilTests.testSplitForMultipleSplitSizesFromOneTo16
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent*
  name: testSplitOnEmptyContent
  nameWithType: FluxUtilTests.testSplitOnEmptyContent
  fullName: com.azure.core.implementation.util.FluxUtilTests.testSplitOnEmptyContent
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer*
  name: toByteArrayWithEmptyByteBuffer
  nameWithType: FluxUtilTests.toByteArrayWithEmptyByteBuffer
  fullName: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithEmptyByteBuffer
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer*
  name: toByteArrayWithNonEmptyByteBuffer
  nameWithType: FluxUtilTests.toByteArrayWithNonEmptyByteBuffer
  fullName: com.azure.core.implementation.util.FluxUtilTests.toByteArrayWithNonEmptyByteBuffer
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream*
  name: testCollectByteBufStream
  nameWithType: FluxUtilTests.testCollectByteBufStream
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCollectByteBufStream
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle*
  name: testCallWithContextGetSingle
  nameWithType: FluxUtilTests.testCallWithContextGetSingle
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetSingle
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection*
  name: testCallWithContextGetCollection
  nameWithType: FluxUtilTests.testCallWithContextGetCollection
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetCollection
  package: com.azure.core.implementation.util
- uid: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection*
  name: testCallWithContextGetPagedCollection
  nameWithType: FluxUtilTests.testCallWithContextGetPagedCollection
  fullName: com.azure.core.implementation.util.FluxUtilTests.testCallWithContextGetPagedCollection
  package: com.azure.core.implementation.util
- uid: com.azure.core.http.rest.PagedFlux
  parent: com.azure.core.http.rest
  href: com.azure.core.http.rest.PagedFlux.yml
  name: PagedFlux<T>
  nameWithType: PagedFlux<T>
  fullName: com.azure.core.http.rest.PagedFlux<T>
  type: Class
  summary: "<p>This class is a flux that can operate on a <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\">PagedResponse</xref> and also provides the ability to operate on individual items. When processing the response by page, each response will contain the items in the page as well as the request details like status code and headers.</p>\r\n<p>To process one item at a time, simply subscribe to this flux as shown below </p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.items}</p>\r\n<p>To process one page at a time, use <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage()\" data-throw-if-not-resolved=\"false\">byPage</xref> method as shown below </p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.pages}</p>\r\n<p>To process items one page at a time starting from any page associated with a continuation token, use <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage(String)\" data-throw-if-not-resolved=\"false\">byPage(String)</xref> as shown below</p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.pagesWithContinuationToken}</p>\r\n<p></p>"
  syntax:
    content: public class PagedFlux<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of items in a <xref uid="com.azure.core.http.rest.PagedResponse" data-throw-if-not-resolved="false">PagedResponse</xref></p>
- uid: com.azure.core.http.rest.PagedResponse
  parent: com.azure.core.http.rest
  href: com.azure.core.http.rest.PagedResponse.yml
  name: PagedResponse<T>
  nameWithType: PagedResponse<T>
  fullName: com.azure.core.http.rest.PagedResponse<T>
  type: Interface
  summary: "<p>Response of a REST API that returns page.</p>\r\n<p></p>"
  syntax:
    content: public interface PagedResponse<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type items in the page </p>
- uid: com.azure.core.util.Context
  parent: com.azure.core.util
  href: com.azure.core.util.Context.yml
  name: Context
  nameWithType: Context
  fullName: com.azure.core.util.Context
  type: Class
  summary: "<p>\r\n  <code>Context \r\n    </code> offers a means of passing arbitrary data (key-value pairs) to pipeline policies. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE \r\n    </code> or <code>null \r\n    </code> . Each context object is immutable. The<code>addData(Object, Object) \r\n    </code> method creates a new <code>Context \r\n    </code> object that refers to its parent, forming a linked list. </p>"
  syntax:
    content: public class Context
- uid: com.azure.core.implementation.http.PagedResponseBase
  parent: com.azure.core.implementation.http
  href: com.azure.core.implementation.http.PagedResponseBase.yml
  name: PagedResponseBase<H,T>
  nameWithType: PagedResponseBase<H,T>
  fullName: com.azure.core.implementation.http.PagedResponseBase<H,T>
  type: Class
  summary: "<p>Represents an HTTP response that contains a list of items deserialized into a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Page</xref>.</p>\r\n<p></p>"
  syntax:
    content: public class PagedResponseBase<H,T>
    typeParameters:
    - id: H
      type: 0ff5d9c1
      description: <p>The HTTP response headers </p>
    - id: T
      type: 8ce1ecb9
      description: <p>The type of items contained in the <xref uid="" data-throw-if-not-resolved="false">Page</xref></p>
- uid: com.azure.core.http.HttpRequest
  parent: com.azure.core.http
  href: com.azure.core.http.HttpRequest.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.azure.core.http.HttpRequest
  type: Class
  summary: "<p>The outgoing Http request. </p>"
  syntax:
    content: public class HttpRequest
- uid: com.azure.core.http.HttpHeaders
  parent: com.azure.core.http
  href: com.azure.core.http.HttpHeaders.yml
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: com.azure.core.http.HttpHeaders
  type: Class
  summary: "<p>A collection of headers on an HTTP request or response. </p>"
  syntax:
    content: public class HttpHeaders
