### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices"
fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices"
name: "Mediaservices"
nameWithType: "Mediaservices"
summary: "Resource collection API of Mediaservices."
syntax: "public interface Mediaservices"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.define(String name)"
  name: "define(String name)"
  nameWithType: "Mediaservices.define(String name)"
  summary: "Begins definition for a new Media<wbr>Service resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new MediaService resource."
  returns:
    description: "the first stage of the new MediaService definition."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.DefinitionStages.Blank?alt=com.azure.resourcemanager.mediaservices.models.MediaService.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Mediaservices.deleteById(String id)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes a Media Services account."
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Mediaservices.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes a Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteByResourceGroup(String resourceGroupName, String accountName)"
  name: "deleteByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Mediaservices.deleteByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Deletes a Media Services account."
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Mediaservices.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Deletes a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Deletes a Media Services account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Mediaservices.getById(String id)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService getById(String id)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Mediaservices.getByIdWithResponse(String id, Context context)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MediaService> getByIdWithResponse(String id, Context context)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByResourceGroup(String resourceGroupName, String accountName)"
  name: "getByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Mediaservices.getByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService getByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Mediaservices.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Get the details of a Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MediaService> getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Get the details of a Media Services account."
  returns:
    description: "the details of a Media Services account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.list()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.list()"
  name: "list()"
  nameWithType: "Mediaservices.list()"
  summary: "List Media Services accounts in the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MediaService> list()"
  desc: "List Media Services accounts in the subscription."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Mediaservices.list(Context context)"
  summary: "List Media Services accounts in the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaService> list(Context context)"
  desc: "List Media Services accounts in the subscription."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Mediaservices.listByResourceGroup(String resourceGroupName)"
  summary: "List Media Services accounts in the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaService> listByResourceGroup(String resourceGroupName)"
  desc: "List Media Services accounts in the resource group."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Mediaservices.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List Media Services accounts in the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MediaService> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List Media Services accounts in the resource group."
  returns:
    description: "a collection of MediaService items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listEdgePolicies(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  name: "listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  nameWithType: "Mediaservices.listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EdgePolicies listEdgePolicies(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EdgePolicies?alt=com.azure.resourcemanager.mediaservices.models.EdgePolicies&text=EdgePolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listEdgePoliciesWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  name: "listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  nameWithType: "Mediaservices.listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EdgePolicies> listEdgePoliciesWithResponse(String resourceGroupName, String accountName, ListEdgePoliciesInput parameters, Context context)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.EdgePolicies?alt=com.azure.resourcemanager.mediaservices.models.EdgePolicies&text=EdgePolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.syncStorageKeys(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  name: "syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  nameWithType: "Mediaservices.syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void syncStorageKeys(String resourceGroupName, String accountName, SyncStorageKeysInput parameters)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
- uid: "com.azure.resourcemanager.mediaservices.models.Mediaservices.syncStorageKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mediaservices.syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  name: "syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  nameWithType: "Mediaservices.syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Media Services account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> syncStorageKeysWithResponse(String resourceGroupName, String accountName, SyncStorageKeysInput parameters, Context context)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Mediaservices."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
