### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  id: DefaultClientTlsStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl
  children:
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext)
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier,org.apache.hc.core5.function.Factory<javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails>)
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault()
  - org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault()
  langs:
  - java
  name: DefaultClientTlsStrategy
  nameWithType: DefaultClientTlsStrategy
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  type: Class
  package: org.apache.hc.client5.http.ssl
  summary: TLS upgrade strategy for non-blocking client connections.
  syntax:
    content: public class DefaultClientTlsStrategy extends AbstractClientTlsStrategy
  inheritance:
  - java.lang.Object
  - org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.initializeEngine(javax.net.ssl.SSLEngine)
  - org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.upgrade(org.apache.hc.core5.reactor.ssl.TransportSecurityLayer,org.apache.hc.core5.http.HttpHost,java.net.SocketAddress,java.net.SocketAddress,java.lang.Object,org.apache.hc.core5.util.Timeout)
  - org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.verifySession(java.lang.String,javax.net.ssl.SSLSession)
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext)
  id: DefaultClientTlsStrategy(javax.net.ssl.SSLContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: DefaultClientTlsStrategy(SSLContext sslcontext)
  nameWithType: DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslcontext)
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslcontext)
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public DefaultClientTlsStrategy(SSLContext sslcontext)
    parameters:
    - id: sslcontext
      type: javax.net.ssl.SSLContext
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier)
  id: DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier)
  nameWithType: DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
    - id: supportedProtocols
      type: java.lang.String[]
    - id: supportedCipherSuites
      type: java.lang.String[]
    - id: sslBufferManagement
      type: org.apache.hc.core5.reactor.ssl.SSLBufferMode
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier,org.apache.hc.core5.function.Factory<javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails>)
  id: DefaultClientTlsStrategy(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.hc.core5.reactor.ssl.SSLBufferMode,javax.net.ssl.HostnameVerifier,org.apache.hc.core5.function.Factory<javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier, Factory<SSLEngine,TlsDetails> tlsDetailsFactory)
  nameWithType: DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier, Factory<SSLEngine,TlsDetails> tlsDetailsFactory)
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier, Factory<SSLEngine,TlsDetails> tlsDetailsFactory)
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public DefaultClientTlsStrategy(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, SSLBufferMode sslBufferManagement, HostnameVerifier hostnameVerifier, Factory<SSLEngine,TlsDetails> tlsDetailsFactory)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
    - id: supportedProtocols
      type: java.lang.String[]
    - id: supportedCipherSuites
      type: java.lang.String[]
    - id: sslBufferManagement
      type: org.apache.hc.core5.reactor.ssl.SSLBufferMode
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
    - id: tlsDetailsFactory
      type: org.apache.hc.core5.function.Factory<javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails>
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  id: DefaultClientTlsStrategy(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: DefaultClientTlsStrategy(SSLContext sslcontext, HostnameVerifier hostnameVerifier)
  nameWithType: DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslcontext, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy(SSLContext sslcontext, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public DefaultClientTlsStrategy(SSLContext sslcontext, HostnameVerifier hostnameVerifier)
    parameters:
    - id: sslcontext
      type: javax.net.ssl.SSLContext
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault()
  id: getDefault()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: getDefault()
  nameWithType: DefaultClientTlsStrategy.getDefault()
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault()
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault*
  type: Method
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public static TlsStrategy getDefault()
    return:
      type: org.apache.hc.core5.http.nio.ssl.TlsStrategy
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault()
  id: getSystemDefault()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy
  langs:
  - java
  name: getSystemDefault()
  nameWithType: DefaultClientTlsStrategy.getSystemDefault()
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault()
  overload: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault*
  type: Method
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public static TlsStrategy getSystemDefault()
    return:
      type: org.apache.hc.core5.http.nio.ssl.TlsStrategy
references:
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.reactor.ssl.SSLBufferMode
  name: SSLBufferMode
  nameWithType: SSLBufferMode
  fullName: org.apache.hc.core5.reactor.ssl.SSLBufferMode
- uid: javax.net.ssl.HostnameVerifier
  spec.java:
  - uid: javax.net.ssl.HostnameVerifier
    name: HostnameVerifier
    fullName: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.core5.function.Factory<javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails>
  spec.java:
  - uid: org.apache.hc.core5.function.Factory
    name: Factory
    fullName: org.apache.hc.core5.function.Factory
  - name: <
    fullName: <
  - uid: javax.net.ssl.SSLEngine
    name: SSLEngine
    fullName: javax.net.ssl.SSLEngine
  - name: ','
    fullName: ','
  - uid: org.apache.hc.core5.reactor.ssl.TlsDetails
    name: TlsDetails
    fullName: org.apache.hc.core5.reactor.ssl.TlsDetails
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy*
  name: DefaultClientTlsStrategy
  nameWithType: DefaultClientTlsStrategy.DefaultClientTlsStrategy
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.DefaultClientTlsStrategy
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.core5.http.nio.ssl.TlsStrategy
  name: TlsStrategy
  nameWithType: TlsStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.TlsStrategy
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault*
  name: getDefault
  nameWithType: DefaultClientTlsStrategy.getDefault
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getDefault
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault*
  name: getSystemDefault
  nameWithType: DefaultClientTlsStrategy.getSystemDefault
  fullName: org.apache.hc.client5.http.ssl.DefaultClientTlsStrategy.getSystemDefault
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy
  name: AbstractClientTlsStrategy
  nameWithType: AbstractClientTlsStrategy
  fullName: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.verifySession(java.lang.String,javax.net.ssl.SSLSession)
  name: AbstractClientTlsStrategy.verifySession(String,SSLSession)
  nameWithType: AbstractClientTlsStrategy.verifySession(String,SSLSession)
  fullName: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.verifySession(java.lang.String,javax.net.ssl.SSLSession)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.upgrade(org.apache.hc.core5.reactor.ssl.TransportSecurityLayer,org.apache.hc.core5.http.HttpHost,java.net.SocketAddress,java.net.SocketAddress,java.lang.Object,org.apache.hc.core5.util.Timeout)
  name: AbstractClientTlsStrategy.upgrade(TransportSecurityLayer,HttpHost,SocketAddress,SocketAddress,Object,Timeout)
  nameWithType: AbstractClientTlsStrategy.upgrade(TransportSecurityLayer,HttpHost,SocketAddress,SocketAddress,Object,Timeout)
  fullName: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.upgrade(org.apache.hc.core5.reactor.ssl.TransportSecurityLayer,org.apache.hc.core5.http.HttpHost,java.net.SocketAddress,java.net.SocketAddress,java.lang.Object,org.apache.hc.core5.util.Timeout)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.initializeEngine(javax.net.ssl.SSLEngine)
  name: AbstractClientTlsStrategy.initializeEngine(SSLEngine)
  nameWithType: AbstractClientTlsStrategy.initializeEngine(SSLEngine)
  fullName: org.apache.hc.client5.http.ssl.AbstractClientTlsStrategy.initializeEngine(javax.net.ssl.SSLEngine)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails
  name: SSLEngine,TlsDetails
  nameWithType: SSLEngine,TlsDetails
  fullName: javax.net.ssl.SSLEngine,org.apache.hc.core5.reactor.ssl.TlsDetails
- uid: org.apache.hc.core5.function.Factory
  name: Factory
  nameWithType: Factory
  fullName: org.apache.hc.core5.function.Factory
