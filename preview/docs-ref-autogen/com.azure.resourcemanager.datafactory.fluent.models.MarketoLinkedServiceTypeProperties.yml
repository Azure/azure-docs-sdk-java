### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties"
name: "MarketoLinkedServiceTypeProperties"
nameWithType: "MarketoLinkedServiceTypeProperties"
summary: "Marketo server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MarketoLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.MarketoLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.MarketoLinkedServiceTypeProperties()"
  name: "MarketoLinkedServiceTypeProperties()"
  nameWithType: "MarketoLinkedServiceTypeProperties.MarketoLinkedServiceTypeProperties()"
  syntax: "public MarketoLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.clientId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.clientId()"
  name: "clientId()"
  nameWithType: "MarketoLinkedServiceTypeProperties.clientId()"
  summary: "Get the clientId property: The client Id of your Marketo service."
  syntax: "public Object clientId()"
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.clientSecret()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.clientSecret()"
  name: "clientSecret()"
  nameWithType: "MarketoLinkedServiceTypeProperties.clientSecret()"
  summary: "Get the clientSecret property: The client secret of your Marketo service."
  syntax: "public SecretBase clientSecret()"
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "MarketoLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.endpoint()"
  name: "endpoint()"
  nameWithType: "MarketoLinkedServiceTypeProperties.endpoint()"
  summary: "Get the endpoint property: The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "MarketoLinkedServiceTypeProperties.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "MarketoLinkedServiceTypeProperties.useHostVerification()"
  summary: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  syntax: "public Object useHostVerification()"
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "MarketoLinkedServiceTypeProperties.usePeerVerification()"
  summary: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  syntax: "public Object usePeerVerification()"
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "MarketoLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withClientId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withClientId(Object clientId)"
  name: "withClientId(Object clientId)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withClientId(Object clientId)"
  summary: "Set the clientId property: The client Id of your Marketo service."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withClientId(Object clientId)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withClientSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  name: "withClientSecret(SecretBase clientSecret)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  summary: "Set the clientSecret property: The client secret of your Marketo service."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withClientSecret(SecretBase clientSecret)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withEndpoint(Object endpoint)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  summary: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withUseHostVerification(Object useHostVerification)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "MarketoLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MarketoLinkedServiceTypeProperties withUsePeerVerification(Object usePeerVerification)"
  returns:
    description: "the MarketoLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MarketoLinkedServiceTypeProperties&text=MarketoLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
