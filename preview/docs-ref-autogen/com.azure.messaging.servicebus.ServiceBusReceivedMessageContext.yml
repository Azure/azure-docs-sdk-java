### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  id: ServiceBusReceivedMessageContext
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus
  children:
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon(com.azure.messaging.servicebus.models.AbandonOptions)
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete(com.azure.messaging.servicebus.models.CompleteOptions)
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter(com.azure.messaging.servicebus.models.DeadLetterOptions)
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer(com.azure.messaging.servicebus.models.DeferOptions)
  - com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage()
  langs:
  - java
  name: ServiceBusReceivedMessageContext
  nameWithType: ServiceBusReceivedMessageContext
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  type: Class
  package: com.azure.messaging.servicebus
  summary: The Service Bus processor message context that holds a received message and additional methods to settle the message.
  syntax:
    content: public final class ServiceBusReceivedMessageContext
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext(com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient,com.azure.messaging.servicebus.ServiceBusMessageContext)
  id: ServiceBusReceivedMessageContext(com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient,com.azure.messaging.servicebus.ServiceBusMessageContext)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: ServiceBusReceivedMessageContext(ServiceBusReceiverAsyncClient receiverClient, ServiceBusMessageContext receivedMessageContext)
  nameWithType: ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext(ServiceBusReceiverAsyncClient receiverClient, ServiceBusMessageContext receivedMessageContext)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext(ServiceBusReceiverAsyncClient receiverClient, ServiceBusMessageContext receivedMessageContext)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext*
  type: Constructor
  package: com.azure.messaging.servicebus
  syntax:
    content: " ServiceBusReceivedMessageContext(ServiceBusReceiverAsyncClient receiverClient, ServiceBusMessageContext receivedMessageContext)"
    parameters:
    - id: receiverClient
      type: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient
    - id: receivedMessageContext
      type: com.azure.messaging.servicebus.ServiceBusMessageContext
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon()
  id: abandon()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: abandon()
  nameWithType: ServiceBusReceivedMessageContext.abandon()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Abandon the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void abandon()
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon(com.azure.messaging.servicebus.models.AbandonOptions)
  id: abandon(com.azure.messaging.servicebus.models.AbandonOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: abandon(AbandonOptions options)
  nameWithType: ServiceBusReceivedMessageContext.abandon(AbandonOptions options)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon(AbandonOptions options)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Abandon the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void abandon(AbandonOptions options)
    parameters:
    - id: options
      type: com.azure.messaging.servicebus.models.AbandonOptions
      description: Additional options for abandoning the message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete()
  id: complete()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: complete()
  nameWithType: ServiceBusReceivedMessageContext.complete()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Completes the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void complete()
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete(com.azure.messaging.servicebus.models.CompleteOptions)
  id: complete(com.azure.messaging.servicebus.models.CompleteOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: complete(CompleteOptions options)
  nameWithType: ServiceBusReceivedMessageContext.complete(CompleteOptions options)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete(CompleteOptions options)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Completes the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void complete(CompleteOptions options)
    parameters:
    - id: options
      type: com.azure.messaging.servicebus.models.CompleteOptions
      description: Additional options for completing the message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter()
  id: deadLetter()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: deadLetter()
  nameWithType: ServiceBusReceivedMessageContext.deadLetter()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deadletters the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void deadLetter()
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter(com.azure.messaging.servicebus.models.DeadLetterOptions)
  id: deadLetter(com.azure.messaging.servicebus.models.DeadLetterOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: deadLetter(DeadLetterOptions options)
  nameWithType: ServiceBusReceivedMessageContext.deadLetter(DeadLetterOptions options)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter(DeadLetterOptions options)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deadletters the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void deadLetter(DeadLetterOptions options)
    parameters:
    - id: options
      type: com.azure.messaging.servicebus.models.DeadLetterOptions
      description: Additional options for deadlettering the message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer()
  id: defer()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: defer()
  nameWithType: ServiceBusReceivedMessageContext.defer()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Defers the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void defer()
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer(com.azure.messaging.servicebus.models.DeferOptions)
  id: defer(com.azure.messaging.servicebus.models.DeferOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: defer(DeferOptions options)
  nameWithType: ServiceBusReceivedMessageContext.defer(DeferOptions options)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer(DeferOptions options)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Defers the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> in this context.
  syntax:
    content: public void defer(DeferOptions options)
    parameters:
    - id: options
      type: com.azure.messaging.servicebus.models.DeferOptions
      description: Additional options for defering the message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage()
  id: getMessage()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  langs:
  - java
  name: getMessage()
  nameWithType: ServiceBusReceivedMessageContext.getMessage()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the message received from Service Bus.
  syntax:
    content: public ServiceBusReceivedMessage getMessage()
    return:
      type: com.azure.messaging.servicebus.ServiceBusReceivedMessage
      description: The message received from Service Bus.
references:
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient
  name: ServiceBusReceiverAsyncClient
  nameWithType: ServiceBusReceiverAsyncClient
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient
- uid: com.azure.messaging.servicebus.ServiceBusMessageContext
  spec.java:
  - uid: com.azure.messaging.servicebus.ServiceBusMessageContext
    name: ServiceBusMessageContext
    fullName: com.azure.messaging.servicebus.ServiceBusMessageContext
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext*
  name: ServiceBusReceivedMessageContext
  nameWithType: ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.ServiceBusReceivedMessageContext
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  name: ServiceBusReceivedMessage
  nameWithType: ServiceBusReceivedMessage
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage*
  name: getMessage
  nameWithType: ServiceBusReceivedMessageContext.getMessage
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.getMessage
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon*
  name: abandon
  nameWithType: ServiceBusReceivedMessageContext.abandon
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.abandon
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.AbandonOptions
  name: AbandonOptions
  nameWithType: AbandonOptions
  fullName: com.azure.messaging.servicebus.models.AbandonOptions
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete*
  name: complete
  nameWithType: ServiceBusReceivedMessageContext.complete
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.complete
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.CompleteOptions
  name: CompleteOptions
  nameWithType: CompleteOptions
  fullName: com.azure.messaging.servicebus.models.CompleteOptions
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer*
  name: defer
  nameWithType: ServiceBusReceivedMessageContext.defer
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.defer
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.DeferOptions
  name: DeferOptions
  nameWithType: DeferOptions
  fullName: com.azure.messaging.servicebus.models.DeferOptions
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter*
  name: deadLetter
  nameWithType: ServiceBusReceivedMessageContext.deadLetter
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext.deadLetter
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.DeadLetterOptions
  name: DeadLetterOptions
  nameWithType: DeadLetterOptions
  fullName: com.azure.messaging.servicebus.models.DeadLetterOptions
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
