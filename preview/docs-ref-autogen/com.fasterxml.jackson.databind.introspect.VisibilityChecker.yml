### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  id: VisibilityChecker
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect
  children:
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible(java.lang.reflect.Member)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible(java.lang.reflect.Field)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible(java.lang.reflect.Method)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible(java.lang.reflect.Method)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible(java.lang.reflect.Method)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.with(com.fasterxml.jackson.annotation.JsonAutoDetect)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.with(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect.Value)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.introspect.VisibilityChecker.withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  langs:
  - java
  name: VisibilityChecker<T>
  nameWithType: VisibilityChecker<T>
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>
  type: Interface
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Interface for object used for determine which property elements (methods, fields, constructors) can be auto-detected, with respect to their visibility modifiers.


    Note on type declaration: funky recursive type is necessary to support builder/fluent pattern.
  syntax:
    content: public interface VisibilityChecker<T>
    typeParameters:
    - id: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  id: isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isCreatorVisible(AnnotatedMember m)
  nameWithType: VisibilityChecker<T>.isCreatorVisible(AnnotatedMember m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isCreatorVisible(AnnotatedMember m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean isCreatorVisible(AnnotatedMember m)
    parameters:
    - id: m
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible(java.lang.reflect.Member)
  id: isCreatorVisible(java.lang.reflect.Member)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isCreatorVisible(Member m)
  nameWithType: VisibilityChecker<T>.isCreatorVisible(Member m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isCreatorVisible(Member m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method for checking whether given method is auto-detectable as Creator, with respect to its visibility (not considering method signature or name, just visibility)
  syntax:
    content: public abstract boolean isCreatorVisible(Member m)
    parameters:
    - id: m
      type: java.lang.reflect.Member
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField)
  id: isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isFieldVisible(AnnotatedField f)
  nameWithType: VisibilityChecker<T>.isFieldVisible(AnnotatedField f)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isFieldVisible(AnnotatedField f)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean isFieldVisible(AnnotatedField f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.introspect.AnnotatedField
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible(java.lang.reflect.Field)
  id: isFieldVisible(java.lang.reflect.Field)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isFieldVisible(Field f)
  nameWithType: VisibilityChecker<T>.isFieldVisible(Field f)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isFieldVisible(Field f)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method for checking whether given field is auto-detectable as property, with respect to its visibility (not considering method signature or name, just visibility)
  syntax:
    content: public abstract boolean isFieldVisible(Field f)
    parameters:
    - id: f
      type: java.lang.reflect.Field
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  id: isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isGetterVisible(AnnotatedMethod m)
  nameWithType: VisibilityChecker<T>.isGetterVisible(AnnotatedMethod m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isGetterVisible(AnnotatedMethod m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean isGetterVisible(AnnotatedMethod m)
    parameters:
    - id: m
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible(java.lang.reflect.Method)
  id: isGetterVisible(java.lang.reflect.Method)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isGetterVisible(Method m)
  nameWithType: VisibilityChecker<T>.isGetterVisible(Method m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isGetterVisible(Method m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method for checking whether given method is auto-detectable as regular getter, with respect to its visibility (not considering method signature or name, just visibility)
  syntax:
    content: public abstract boolean isGetterVisible(Method m)
    parameters:
    - id: m
      type: java.lang.reflect.Method
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  id: isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isIsGetterVisible(AnnotatedMethod m)
  nameWithType: VisibilityChecker<T>.isIsGetterVisible(AnnotatedMethod m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isIsGetterVisible(AnnotatedMethod m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean isIsGetterVisible(AnnotatedMethod m)
    parameters:
    - id: m
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible(java.lang.reflect.Method)
  id: isIsGetterVisible(java.lang.reflect.Method)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isIsGetterVisible(Method m)
  nameWithType: VisibilityChecker<T>.isIsGetterVisible(Method m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isIsGetterVisible(Method m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method for checking whether given method is auto-detectable as is-getter, with respect to its visibility (not considering method signature or name, just visibility)
  syntax:
    content: public abstract boolean isIsGetterVisible(Method m)
    parameters:
    - id: m
      type: java.lang.reflect.Method
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  id: isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isSetterVisible(AnnotatedMethod m)
  nameWithType: VisibilityChecker<T>.isSetterVisible(AnnotatedMethod m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isSetterVisible(AnnotatedMethod m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean isSetterVisible(AnnotatedMethod m)
    parameters:
    - id: m
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible(java.lang.reflect.Method)
  id: isSetterVisible(java.lang.reflect.Method)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: isSetterVisible(Method m)
  nameWithType: VisibilityChecker<T>.isSetterVisible(Method m)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isSetterVisible(Method m)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method for checking whether given method is auto-detectable as setter, with respect to its visibility (not considering method signature or name, just visibility)
  syntax:
    content: public abstract boolean isSetterVisible(Method m)
    parameters:
    - id: m
      type: java.lang.reflect.Method
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.with(com.fasterxml.jackson.annotation.JsonAutoDetect)
  id: with(com.fasterxml.jackson.annotation.JsonAutoDetect)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: with(JsonAutoDetect ann)
  nameWithType: VisibilityChecker<T>.with(JsonAutoDetect ann)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.with(JsonAutoDetect ann)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.with*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return an instance that has same settings as this instance has, except for values that given annotation overrides.
  syntax:
    content: public abstract T with(JsonAutoDetect ann)
    parameters:
    - id: ann
      type: com.fasterxml.jackson.annotation.JsonAutoDetect
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.with(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: with(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: with(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.with(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.with(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.with*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Builder method that will create and return an instance that has specified <xref uid="" data-throw-if-not-resolved="false">Visibility</xref> value to use for all property elements. Typical usage would be something like:


    ```java

    mapper.setVisibilityChecker(
         mapper.getVisibilityChecker().with(Visibility.NONE));
    ```


    (which would basically disable all auto-detection)
  syntax:
    content: public abstract T with(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withCreatorVisibility(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withCreatorVisibility(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withCreatorVisibility(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withCreatorVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return a checker instance that has specified minimum visibility level for creator methods (constructors, factory methods)
  syntax:
    content: public abstract T withCreatorVisibility(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withFieldVisibility(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withFieldVisibility(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withFieldVisibility(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withFieldVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return a checker instance that has specified minimum visibility level for fields.
  syntax:
    content: public abstract T withFieldVisibility(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withGetterVisibility(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withGetterVisibility(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withGetterVisibility(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withGetterVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return a checker instance that has specified minimum visibility level for regular ("getXxx") getters.
  syntax:
    content: public abstract T withGetterVisibility(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withIsGetterVisibility(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withIsGetterVisibility(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withIsGetterVisibility(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withIsGetterVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return a checker instance that has specified minimum visibility level for "is-getters" ("isXxx").
  syntax:
    content: public abstract T withIsGetterVisibility(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect.Value)
  id: withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withOverrides(JsonAutoDetect.Value vis)
  nameWithType: VisibilityChecker<T>.withOverrides(JsonAutoDetect.Value vis)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withOverrides(JsonAutoDetect.Value vis)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withOverrides*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method that can be used for merging default values from \`this\` instance with specified overrides; and either return \`this\` if overrides had no effect (that is, result would be equal), or a new instance with merged visibility settings.
  syntax:
    content: public abstract T withOverrides(JsonAutoDetect.Value vis)
    parameters:
    - id: vis
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Value
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withSetterVisibility(JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withSetterVisibility(JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withSetterVisibility(JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withSetterVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Builder method that will return a checker instance that has specified minimum visibility level for setters.
  syntax:
    content: public abstract T withSetterVisibility(JsonAutoDetect.Visibility v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  langs:
  - java
  name: withVisibility(PropertyAccessor method, JsonAutoDetect.Visibility v)
  nameWithType: VisibilityChecker<T>.withVisibility(PropertyAccessor method, JsonAutoDetect.Visibility v)
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withVisibility(PropertyAccessor method, JsonAutoDetect.Visibility v)
  overload: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withVisibility*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Builder method that will create and return an instance that has specified <xref uid="" data-throw-if-not-resolved="false">Visibility</xref> value to use for specified property. Typical usage would be:


    ```java

    mapper.setVisibilityChecker(
         mapper.getVisibilityChecker().withVisibility(JsonMethod.FIELD, Visibility.ANY));
    ```


    (which would basically enable auto-detection for all member fields)
  syntax:
    content: public abstract T withVisibility(PropertyAccessor method, JsonAutoDetect.Visibility v)
    parameters:
    - id: method
      type: com.fasterxml.jackson.annotation.PropertyAccessor
    - id: v
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: T
references:
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect
  name: JsonAutoDetect
  nameWithType: JsonAutoDetect
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.with*
  name: with
  nameWithType: VisibilityChecker<T>.with
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.with
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Value
  name: JsonAutoDetect.Value
  nameWithType: JsonAutoDetect.Value
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Value
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withOverrides*
  name: withOverrides
  nameWithType: VisibilityChecker<T>.withOverrides
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withOverrides
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  name: JsonAutoDetect.Visibility
  nameWithType: JsonAutoDetect.Visibility
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.PropertyAccessor
  name: PropertyAccessor
  nameWithType: PropertyAccessor
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withVisibility*
  name: withVisibility
  nameWithType: VisibilityChecker<T>.withVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withGetterVisibility*
  name: withGetterVisibility
  nameWithType: VisibilityChecker<T>.withGetterVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withGetterVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withIsGetterVisibility*
  name: withIsGetterVisibility
  nameWithType: VisibilityChecker<T>.withIsGetterVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withIsGetterVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withSetterVisibility*
  name: withSetterVisibility
  nameWithType: VisibilityChecker<T>.withSetterVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withSetterVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withCreatorVisibility*
  name: withCreatorVisibility
  nameWithType: VisibilityChecker<T>.withCreatorVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withCreatorVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.withFieldVisibility*
  name: withFieldVisibility
  nameWithType: VisibilityChecker<T>.withFieldVisibility
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.withFieldVisibility
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.reflect.Method
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isGetterVisible*
  name: isGetterVisible
  nameWithType: VisibilityChecker<T>.isGetterVisible
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isGetterVisible
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
  name: AnnotatedMethod
  nameWithType: AnnotatedMethod
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isIsGetterVisible*
  name: isIsGetterVisible
  nameWithType: VisibilityChecker<T>.isIsGetterVisible
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isIsGetterVisible
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isSetterVisible*
  name: isSetterVisible
  nameWithType: VisibilityChecker<T>.isSetterVisible
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isSetterVisible
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.reflect.Member
  spec.java:
  - uid: java.lang.reflect.Member
    name: Member
    fullName: java.lang.reflect.Member
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isCreatorVisible*
  name: isCreatorVisible
  nameWithType: VisibilityChecker<T>.isCreatorVisible
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isCreatorVisible
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: java.lang.reflect.Field
  spec.java:
  - uid: java.lang.reflect.Field
    name: Field
    fullName: java.lang.reflect.Field
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.isFieldVisible*
  name: isFieldVisible
  nameWithType: VisibilityChecker<T>.isFieldVisible
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker<T>.isFieldVisible
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedField
  name: AnnotatedField
  nameWithType: AnnotatedField
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedField
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std
  name: VisibilityChecker.Std
  nameWithType: VisibilityChecker.Std
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std
