### YamlMime:JavaType
uid: "com.azure.maps.search.MapsSearchClient"
fullName: "com.azure.maps.search.MapsSearchClient"
name: "MapsSearchClient"
nameWithType: "MapsSearchClient"
summary: "<xref uid=\"com.azure.maps.search.MapsSearchClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapsSearchClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.search.MapsSearchClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapsSearchClientBuilder\"></xref>, as shown below."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **MapsSearchClient**"
methods:
- uid: "com.azure.maps.search.MapsSearchClient.beginFuzzySearchBatch(java.util.List<com.azure.maps.search.models.FuzzySearchOptions>)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList)"
  name: "beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList)"
  nameWithType: "MapsSearchClient.beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList)"
  summary: "Batch Fuzzy Search"
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.FuzzySearchOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FuzzySearchOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.FuzzySearchOptions?alt=com.azure.maps.search.models.FuzzySearchOptions&text=FuzzySearchOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList)"
  desc: "Batch Fuzzy Search\n\n```java\nList<FuzzySearchOptions> fuzzyOptionsList = new ArrayList<>();\n fuzzyOptionsList.add(new FuzzySearchOptions(\"atm\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000).setTop(5));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Statue of Liberty\").setTop(2));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Starbucks\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000));\n\n System.out.println(\"Post Search Fuzzy Batch Async\");\n client.beginFuzzySearchBatch(fuzzyOptionsList).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Batch Fuzzy Search service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginFuzzySearchBatch(java.util.List<com.azure.maps.search.models.FuzzySearchOptions>,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList, Context context)"
  name: "beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList, Context context)"
  nameWithType: "MapsSearchClient.beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList, Context context)"
  summary: "Batch Fuzzy Search"
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.FuzzySearchOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FuzzySearchOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.FuzzySearchOptions?alt=com.azure.maps.search.models.FuzzySearchOptions&text=FuzzySearchOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginFuzzySearchBatch(List<FuzzySearchOptions> optionsList, Context context)"
  desc: "Batch Fuzzy Search\n\n```java\nList<FuzzySearchOptions> fuzzyOptionsList = new ArrayList<>();\n fuzzyOptionsList.add(new FuzzySearchOptions(\"atm\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000).setTop(5));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Statue of Liberty\").setTop(2));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Starbucks\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000));\n\n System.out.println(\"Post Search Fuzzy Batch Async\");\n client.beginFuzzySearchBatch(fuzzyOptionsList).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetFuzzySearchBatch(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetFuzzySearchBatch(String batchId)"
  name: "beginGetFuzzySearchBatch(String batchId)"
  nameWithType: "MapsSearchClient.beginGetFuzzySearchBatch(String batchId)"
  summary: "Get Fuzzy Batch Search by Id"
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginGetFuzzySearchBatch(String batchId)"
  desc: "Get Fuzzy Batch Search by Id\n\n```java\nList<FuzzySearchOptions> fuzzyOptionsList = new ArrayList<>();\n fuzzyOptionsList.add(new FuzzySearchOptions(\"atm\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000).setTop(5));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Statue of Liberty\").setTop(2));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Starbucks\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000));\n\n System.out.println(\"Post Search Fuzzy Batch Async\");\n client.beginFuzzySearchBatch(fuzzyOptionsList).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetFuzzySearchBatch(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetFuzzySearchBatch(String batchId, Context context)"
  name: "beginGetFuzzySearchBatch(String batchId, Context context)"
  nameWithType: "MapsSearchClient.beginGetFuzzySearchBatch(String batchId, Context context)"
  summary: "Get Fuzzy Batch Search by Id"
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginGetFuzzySearchBatch(String batchId, Context context)"
  desc: "Get Fuzzy Batch Search by Id\n\n```java\nList<FuzzySearchOptions> fuzzyOptionsList = new ArrayList<>();\n fuzzyOptionsList.add(new FuzzySearchOptions(\"atm\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000).setTop(5));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Statue of Liberty\").setTop(2));\n fuzzyOptionsList.add(new FuzzySearchOptions(\"Starbucks\", new GeoPosition(-122.128362, 47.639769))\n     .setRadiusInMeters(5000));\n\n System.out.println(\"Post Search Fuzzy Batch Async\");\n client.beginFuzzySearchBatch(fuzzyOptionsList).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetReverseSearchAddressBatch(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetReverseSearchAddressBatch(String batchId)"
  name: "beginGetReverseSearchAddressBatch(String batchId)"
  nameWithType: "MapsSearchClient.beginGetReverseSearchAddressBatch(String batchId)"
  summary: "Returns a batch of previously searched addressed given a batch id."
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<BatchReverseSearchResult,BatchReverseSearchResult> beginGetReverseSearchAddressBatch(String batchId)"
  desc: "Returns a batch of previously searched addressed given a batch id.\n\n```java\nList<ReverseSearchAddressOptions> reverseOptionsList = new ArrayList<>();\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(2.294911, 48.858561)));\n reverseOptionsList.add(\n     new ReverseSearchAddressOptions(new GeoPosition(-122.127896, 47.639765))\n         .setRadiusInMeters(5000)\n );\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(-122.348170, 47.621028)));\n\n System.out.println(\"Reverse Search Address Batch Async\");\n BatchReverseSearchResult br1 =\n     client.beginReverseSearchAddressBatch(reverseOptionsList).getFinalResult();\n```"
  returns:
    description: "a <code>SyncPoller</code> wrapping the service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetReverseSearchAddressBatch(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetReverseSearchAddressBatch(String batchId, Context context)"
  name: "beginGetReverseSearchAddressBatch(String batchId, Context context)"
  nameWithType: "MapsSearchClient.beginGetReverseSearchAddressBatch(String batchId, Context context)"
  summary: "Returns a batch of previously searched addressed given a batch id."
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "a <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> object for distributed tracing."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchReverseSearchResult,BatchReverseSearchResult> beginGetReverseSearchAddressBatch(String batchId, Context context)"
  desc: "Returns a batch of previously searched addressed given a batch id.\n\n```java\nList<ReverseSearchAddressOptions> reverseOptionsList = new ArrayList<>();\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(2.294911, 48.858561)));\n reverseOptionsList.add(\n     new ReverseSearchAddressOptions(new GeoPosition(-122.127896, 47.639765))\n         .setRadiusInMeters(5000)\n );\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(-122.348170, 47.621028)));\n\n System.out.println(\"Reverse Search Address Batch Async\");\n BatchReverseSearchResult br1 =\n     client.beginReverseSearchAddressBatch(reverseOptionsList).getFinalResult();\n```"
  returns:
    description: "a <code>SyncPoller</code> wrapping the service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetSearchAddressBatch(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetSearchAddressBatch(String batchId)"
  name: "beginGetSearchAddressBatch(String batchId)"
  nameWithType: "MapsSearchClient.beginGetSearchAddressBatch(String batchId)"
  summary: "Get Batch Search Id"
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginGetSearchAddressBatch(String batchId)"
  desc: "Get Batch Search Id\n\n```java\nList<SearchAddressOptions> optionsList = new ArrayList<>();\n optionsList.add(new SearchAddressOptions(\"400 Broad St, Seattle, WA 98109\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"One, Microsoft Way, Redmond, WA 98052\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"350 5th Ave, New York, NY 10118\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"1 Main Street\")\n     .setCountryFilter(Arrays.asList(\"GB\", \"US\", \"AU\")).setTop(3));\n\n // Search address batch async -\n // https://docs.microsoft.com/en-us/rest/api/maps/search/post-search-address-batch\n // This call posts addresses for search using the Asynchronous Batch API.\n // SyncPoller will do the polling automatically and you can retrieve the result\n // with getFinalResult()\n System.out.println(\"Search Address Batch Async\");\n client.beginSearchAddressBatch(optionsList).getFinalResult();\n SyncPoller<BatchSearchResult, BatchSearchResult> poller = client.beginSearchAddressBatch(optionsList);\n BatchSearchResult result = poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginGetSearchAddressBatch(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginGetSearchAddressBatch(String batchId, Context context)"
  name: "beginGetSearchAddressBatch(String batchId, Context context)"
  nameWithType: "MapsSearchClient.beginGetSearchAddressBatch(String batchId, Context context)"
  summary: "Get Batch Search Id"
  parameters:
  - description: "Batch id for querying the operation."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginGetSearchAddressBatch(String batchId, Context context)"
  desc: "Get Batch Search Id\n\n```java\nList<SearchAddressOptions> optionsList = new ArrayList<>();\n optionsList.add(new SearchAddressOptions(\"400 Broad St, Seattle, WA 98109\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"One, Microsoft Way, Redmond, WA 98052\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"350 5th Ave, New York, NY 10118\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"1 Main Street\")\n     .setCountryFilter(Arrays.asList(\"GB\", \"US\", \"AU\")).setTop(3));\n\n // Search address batch async -\n // https://docs.microsoft.com/en-us/rest/api/maps/search/post-search-address-batch\n // This call posts addresses for search using the Asynchronous Batch API.\n // SyncPoller will do the polling automatically and you can retrieve the result\n // with getFinalResult()\n System.out.println(\"Search Address Batch Async\");\n client.beginSearchAddressBatch(optionsList).getFinalResult();\n SyncPoller<BatchSearchResult, BatchSearchResult> poller = client.beginSearchAddressBatch(optionsList);\n BatchSearchResult result = poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginReverseSearchAddressBatch(java.util.List<com.azure.maps.search.models.ReverseSearchAddressOptions>)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList)"
  name: "beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList)"
  nameWithType: "MapsSearchClient.beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList)"
  summary: "Searches a batch of addresses given their coordinates."
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchAddressOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.ReverseSearchAddressOptions?alt=com.azure.maps.search.models.ReverseSearchAddressOptions&text=ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SyncPoller<BatchReverseSearchResult,BatchReverseSearchResult> beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList)"
  desc: "Searches a batch of addresses given their coordinates.\n\n```java\nList<ReverseSearchAddressOptions> reverseOptionsList = new ArrayList<>();\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(2.294911, 48.858561)));\n reverseOptionsList.add(\n     new ReverseSearchAddressOptions(new GeoPosition(-122.127896, 47.639765))\n         .setRadiusInMeters(5000)\n );\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(-122.348170, 47.621028)));\n\n System.out.println(\"Reverse Search Address Batch Async\");\n BatchReverseSearchResult br1 =\n     client.beginReverseSearchAddressBatch(reverseOptionsList).getFinalResult();\n```"
  returns:
    description: "a <code>SyncPoller</code> wrapping the service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginReverseSearchAddressBatch(java.util.List<com.azure.maps.search.models.ReverseSearchAddressOptions>,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList, Context context)"
  name: "beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList, Context context)"
  nameWithType: "MapsSearchClient.beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList, Context context)"
  summary: "Searches a batch of addresses given their coordinates."
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchAddressOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.ReverseSearchAddressOptions?alt=com.azure.maps.search.models.ReverseSearchAddressOptions&text=ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "a <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> object for distributed tracing."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchReverseSearchResult,BatchReverseSearchResult> beginReverseSearchAddressBatch(List<ReverseSearchAddressOptions> optionsList, Context context)"
  desc: "Searches a batch of addresses given their coordinates.\n\n```java\nList<ReverseSearchAddressOptions> reverseOptionsList = new ArrayList<>();\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(2.294911, 48.858561)));\n reverseOptionsList.add(\n     new ReverseSearchAddressOptions(new GeoPosition(-122.127896, 47.639765))\n         .setRadiusInMeters(5000)\n );\n reverseOptionsList.add(new ReverseSearchAddressOptions(new GeoPosition(-122.348170, 47.621028)));\n\n System.out.println(\"Reverse Search Address Batch Async\");\n BatchReverseSearchResult br1 =\n     client.beginReverseSearchAddressBatch(reverseOptionsList).getFinalResult();\n```"
  returns:
    description: "a <code>SyncPoller</code> wrapping the service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchReverseSearchResult?alt=com.azure.maps.search.models.BatchReverseSearchResult&text=BatchReverseSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginSearchAddressBatch(java.util.List<com.azure.maps.search.models.SearchAddressOptions>)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginSearchAddressBatch(List<SearchAddressOptions> optionsList)"
  name: "beginSearchAddressBatch(List<SearchAddressOptions> optionsList)"
  nameWithType: "MapsSearchClient.beginSearchAddressBatch(List<SearchAddressOptions> optionsList)"
  summary: "Batch Address Search"
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.FuzzySearchOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FuzzySearchOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.SearchAddressOptions?alt=com.azure.maps.search.models.SearchAddressOptions&text=SearchAddressOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginSearchAddressBatch(List<SearchAddressOptions> optionsList)"
  desc: "Batch Address Search\n\n```java\nList<SearchAddressOptions> optionsList = new ArrayList<>();\n optionsList.add(new SearchAddressOptions(\"400 Broad St, Seattle, WA 98109\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"One, Microsoft Way, Redmond, WA 98052\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"350 5th Ave, New York, NY 10118\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"1 Main Street\")\n     .setCountryFilter(Arrays.asList(\"GB\", \"US\", \"AU\")).setTop(3));\n\n // Search address batch async -\n // https://docs.microsoft.com/en-us/rest/api/maps/search/post-search-address-batch\n // This call posts addresses for search using the Asynchronous Batch API.\n // SyncPoller will do the polling automatically and you can retrieve the result\n // with getFinalResult()\n System.out.println(\"Search Address Batch Async\");\n client.beginSearchAddressBatch(optionsList).getFinalResult();\n SyncPoller<BatchSearchResult, BatchSearchResult> poller = client.beginSearchAddressBatch(optionsList);\n BatchSearchResult result = poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.beginSearchAddressBatch(java.util.List<com.azure.maps.search.models.SearchAddressOptions>,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.beginSearchAddressBatch(List<SearchAddressOptions> optionsList, Context context)"
  name: "beginSearchAddressBatch(List<SearchAddressOptions> optionsList, Context context)"
  nameWithType: "MapsSearchClient.beginSearchAddressBatch(List<SearchAddressOptions> optionsList, Context context)"
  summary: "Batch Address Search"
  parameters:
  - description: "a list of <xref uid=\"com.azure.maps.search.models.SearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchAddressOptions\"></xref> to be searched."
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.SearchAddressOptions?alt=com.azure.maps.search.models.SearchAddressOptions&text=SearchAddressOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BatchSearchResult,BatchSearchResult> beginSearchAddressBatch(List<SearchAddressOptions> optionsList, Context context)"
  desc: "Batch Address Search\n\n```java\nList<SearchAddressOptions> optionsList = new ArrayList<>();\n optionsList.add(new SearchAddressOptions(\"400 Broad St, Seattle, WA 98109\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"One, Microsoft Way, Redmond, WA 98052\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"350 5th Ave, New York, NY 10118\").setTop(3));\n optionsList.add(new SearchAddressOptions(\"1 Main Street\")\n     .setCountryFilter(Arrays.asList(\"GB\", \"US\", \"AU\")).setTop(3));\n\n // Search address batch async -\n // https://docs.microsoft.com/en-us/rest/api/maps/search/post-search-address-batch\n // This call posts addresses for search using the Asynchronous Batch API.\n // SyncPoller will do the polling automatically and you can retrieve the result\n // with getFinalResult()\n System.out.println(\"Search Address Batch Async\");\n client.beginSearchAddressBatch(optionsList).getFinalResult();\n SyncPoller<BatchSearchResult, BatchSearchResult> poller = client.beginSearchAddressBatch(optionsList);\n BatchSearchResult result = poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Search Address Batch service call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.search.models.BatchSearchResult?alt=com.azure.maps.search.models.BatchSearchResult&text=BatchSearchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.fuzzySearch(com.azure.maps.search.models.FuzzySearchOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.fuzzySearch(FuzzySearchOptions options)"
  name: "fuzzySearch(FuzzySearchOptions options)"
  nameWithType: "MapsSearchClient.fuzzySearch(FuzzySearchOptions options)"
  summary: "Fuzzy Search"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.FuzzySearchOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FuzzySearchOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.FuzzySearchOptions?alt=com.azure.maps.search.models.FuzzySearchOptions&text=FuzzySearchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult fuzzySearch(FuzzySearchOptions options)"
  desc: "Fuzzy Search\n\n```java\nSystem.out.println(\"Search Fuzzy:\");\n\n // simple\n client.fuzzySearch(new FuzzySearchOptions(\"starbucks\"));\n\n // with options\n SearchAddressResult results = client.fuzzySearch(\n     new FuzzySearchOptions(\"1 Microsoft Way\", new GeoPosition(-74.011454, 40.706270))\n         .setTop(5));\n\n // with response\n Response<SearchAddressResult> response = client.fuzzySearchWithResponse(\n     new FuzzySearchOptions(\"Monaco\").setEntityType(GeographicEntityType.COUNTRY)\n         .setTop(5), null);\n```"
  returns:
    description: "this object is returned from a successful Fuzzy Search call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.fuzzySearch(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.fuzzySearch(String query)"
  name: "fuzzySearch(String query)"
  nameWithType: "MapsSearchClient.fuzzySearch(String query)"
  summary: "Fuzzy Search"
  parameters:
  - description: "the query string used in the search."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult fuzzySearch(String query)"
  desc: "Fuzzy Search\n\n```java\nSystem.out.println(\"Search Fuzzy:\");\n\n // simple\n client.fuzzySearch(new FuzzySearchOptions(\"starbucks\"));\n\n // with options\n SearchAddressResult results = client.fuzzySearch(\n     new FuzzySearchOptions(\"1 Microsoft Way\", new GeoPosition(-74.011454, 40.706270))\n         .setTop(5));\n\n // with response\n Response<SearchAddressResult> response = client.fuzzySearchWithResponse(\n     new FuzzySearchOptions(\"Monaco\").setEntityType(GeographicEntityType.COUNTRY)\n         .setTop(5), null);\n```"
  returns:
    description: "this object is returned from a successful Fuzzy Search call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.fuzzySearchWithResponse(com.azure.maps.search.models.FuzzySearchOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.fuzzySearchWithResponse(FuzzySearchOptions options, Context context)"
  name: "fuzzySearchWithResponse(FuzzySearchOptions options, Context context)"
  nameWithType: "MapsSearchClient.fuzzySearchWithResponse(FuzzySearchOptions options, Context context)"
  summary: "Fuzzy Search"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.FuzzySearchOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FuzzySearchOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.FuzzySearchOptions?alt=com.azure.maps.search.models.FuzzySearchOptions&text=FuzzySearchOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> fuzzySearchWithResponse(FuzzySearchOptions options, Context context)"
  desc: "Fuzzy Search\n\n```java\nSystem.out.println(\"Search Fuzzy:\");\n\n // simple\n client.fuzzySearch(new FuzzySearchOptions(\"starbucks\"));\n\n // with options\n SearchAddressResult results = client.fuzzySearch(\n     new FuzzySearchOptions(\"1 Microsoft Way\", new GeoPosition(-74.011454, 40.706270))\n         .setTop(5));\n\n // with response\n Response<SearchAddressResult> response = client.fuzzySearchWithResponse(\n     new FuzzySearchOptions(\"Monaco\").setEntityType(GeographicEntityType.COUNTRY)\n         .setTop(5), null);\n```"
  returns:
    description: "this object is returned from a successful Fuzzy Search call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.getPointOfInterestCategoryTree()"
  fullName: "com.azure.maps.search.MapsSearchClient.getPointOfInterestCategoryTree()"
  name: "getPointOfInterestCategoryTree()"
  nameWithType: "MapsSearchClient.getPointOfInterestCategoryTree()"
  summary: "Get Point of Interest Category Tree"
  syntax: "public PointOfInterestCategoryTreeResult getPointOfInterestCategoryTree()"
  desc: "Get Point of Interest Category Tree\n\n```java\nSystem.out.println(\"Get Search POI Category Tree:\");\n client.getPointOfInterestCategoryTree();\n```"
  returns:
    description: "this object is returned from a successful POI Category Tree call."
    type: "<xref href=\"com.azure.maps.search.models.PointOfInterestCategoryTreeResult?alt=com.azure.maps.search.models.PointOfInterestCategoryTreeResult&text=PointOfInterestCategoryTreeResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.getPointOfInterestCategoryTreeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.getPointOfInterestCategoryTreeWithResponse(String language, Context context)"
  name: "getPointOfInterestCategoryTreeWithResponse(String language, Context context)"
  nameWithType: "MapsSearchClient.getPointOfInterestCategoryTreeWithResponse(String language, Context context)"
  summary: "Get Point of Interest Category Tree"
  parameters:
  - description: "Language in which search results should be returned. Should be one of supported IETF language\n     tags, except NGT and NGT-Latn. Language tag is case insensitive. When data in specified language is not\n     available for a specific field, default language is used (English).\n     <p>Please refer to [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages) for\n     details."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<PointOfInterestCategoryTreeResult> getPointOfInterestCategoryTreeWithResponse(String language, Context context)"
  desc: "Get Point of Interest Category Tree\n\n```java\nSystem.out.println(\"Get Search POI Category Tree:\");\n client.getPointOfInterestCategoryTree();\n```"
  returns:
    description: "this object is returned from a successful POI Category Tree call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.PointOfInterestCategoryTreeResult?alt=com.azure.maps.search.models.PointOfInterestCategoryTreeResult&text=PointOfInterestCategoryTreeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.getPolygons(java.util.List<java.lang.String>)"
  fullName: "com.azure.maps.search.MapsSearchClient.getPolygons(List<String> geometryIds)"
  name: "getPolygons(List<String> geometryIds)"
  nameWithType: "MapsSearchClient.getPolygons(List<String> geometryIds)"
  summary: "List Polygons"
  parameters:
  - description: "Comma separated list of geometry UUIDs, previously retrieved from an Online Search request."
    name: "geometryIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public List<MapsPolygon> getPolygons(List<String> geometryIds)"
  desc: "List Polygons\n\n```java\nSearchAddressResult results = client.fuzzySearch(\n     new FuzzySearchOptions(\"1 Microsoft Way\", new GeoPosition(-74.011454, 40.706270))\n         .setTop(5));\n Response<SearchAddressResult> response = client.fuzzySearchWithResponse(\n     new FuzzySearchOptions(\"Monaco\").setEntityType(GeographicEntityType.COUNTRY)\n         .setTop(5), null);\n String id = response.getValue().getResults().get(0).getDataSource().getGeometry();\n List<String> ids = results.getResults().stream()\n     .filter(item -> item.getDataSource() != null && item.getDataSource().getGeometry() != null)\n     .map(item -> item.getDataSource().getGeometry())\n     .collect(Collectors.toList());\n ids.add(id);\n\n if (ids != null && !ids.isEmpty()) {\n     System.out.println(\"Get Polygon: \" + ids);\n     client.getPolygons(ids);\n     client.getPolygonsWithResponse(ids, null).getValue().getClass();\n }\n```"
  returns:
    description: "this object is returned from a successful Search Polygon call."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.MapsPolygon?alt=com.azure.maps.search.models.MapsPolygon&text=MapsPolygon\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.getPolygonsWithResponse(java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.getPolygonsWithResponse(List<String> geometryIds, Context context)"
  name: "getPolygonsWithResponse(List<String> geometryIds, Context context)"
  nameWithType: "MapsSearchClient.getPolygonsWithResponse(List<String> geometryIds, Context context)"
  summary: "List Polygons"
  parameters:
  - description: "Comma separated list of geometry UUIDs, previously retrieved from an Online Search request."
    name: "geometryIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<MapsPolygon>> getPolygonsWithResponse(List<String> geometryIds, Context context)"
  desc: "List Polygons\n\n```java\nSearchAddressResult results = client.fuzzySearch(\n     new FuzzySearchOptions(\"1 Microsoft Way\", new GeoPosition(-74.011454, 40.706270))\n         .setTop(5));\n Response<SearchAddressResult> response = client.fuzzySearchWithResponse(\n     new FuzzySearchOptions(\"Monaco\").setEntityType(GeographicEntityType.COUNTRY)\n         .setTop(5), null);\n String id = response.getValue().getResults().get(0).getDataSource().getGeometry();\n List<String> ids = results.getResults().stream()\n     .filter(item -> item.getDataSource() != null && item.getDataSource().getGeometry() != null)\n     .map(item -> item.getDataSource().getGeometry())\n     .collect(Collectors.toList());\n ids.add(id);\n\n if (ids != null && !ids.isEmpty()) {\n     System.out.println(\"Get Polygon: \" + ids);\n     client.getPolygons(ids);\n     client.getPolygonsWithResponse(ids, null).getValue().getClass();\n }\n```"
  returns:
    description: "this object is returned from a successful Search Polygon call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.search.models.MapsPolygon?alt=com.azure.maps.search.models.MapsPolygon&text=MapsPolygon\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchAddress(com.azure.core.models.GeoPosition)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchAddress(GeoPosition query)"
  name: "reverseSearchAddress(GeoPosition query)"
  nameWithType: "MapsSearchClient.reverseSearchAddress(GeoPosition query)"
  summary: "Reverse Address Search"
  parameters:
  - description: "The applicable query as a pair of coordinates."
    name: "query"
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReverseSearchAddressResult reverseSearchAddress(GeoPosition query)"
  desc: "Reverse Address Search\n\n```java\nSystem.out.println(\"Search Address Reverse:\");\n\n // simple\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION) // returns only city\n );\n\n // complete\n client.reverseSearchAddressWithResponse(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION),\n         null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchAddressResult?alt=com.azure.maps.search.models.ReverseSearchAddressResult&text=ReverseSearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchAddress(com.azure.maps.search.models.ReverseSearchAddressOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchAddress(ReverseSearchAddressOptions options)"
  name: "reverseSearchAddress(ReverseSearchAddressOptions options)"
  nameWithType: "MapsSearchClient.reverseSearchAddress(ReverseSearchAddressOptions options)"
  summary: "Reverse Address Search"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchAddressOptions?alt=com.azure.maps.search.models.ReverseSearchAddressOptions&text=ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReverseSearchAddressResult reverseSearchAddress(ReverseSearchAddressOptions options)"
  desc: "Reverse Address Search\n\n```java\nSystem.out.println(\"Search Address Reverse:\");\n\n // simple\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION) // returns only city\n );\n\n // complete\n client.reverseSearchAddressWithResponse(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION),\n         null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchAddressResult?alt=com.azure.maps.search.models.ReverseSearchAddressResult&text=ReverseSearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchAddressWithResponse(com.azure.maps.search.models.ReverseSearchAddressOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchAddressWithResponse(ReverseSearchAddressOptions options, Context context)"
  name: "reverseSearchAddressWithResponse(ReverseSearchAddressOptions options, Context context)"
  nameWithType: "MapsSearchClient.reverseSearchAddressWithResponse(ReverseSearchAddressOptions options, Context context)"
  summary: "Reverse Address Search"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchAddressOptions?alt=com.azure.maps.search.models.ReverseSearchAddressOptions&text=ReverseSearchAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ReverseSearchAddressResult> reverseSearchAddressWithResponse(ReverseSearchAddressOptions options, Context context)"
  desc: "Reverse Address Search\n\n```java\nSystem.out.println(\"Search Address Reverse:\");\n\n // simple\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchAddress(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION) // returns only city\n );\n\n // complete\n client.reverseSearchAddressWithResponse(\n     new ReverseSearchAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setIncludeSpeedLimit(true)\n         .setEntityType(GeographicEntityType.COUNTRY_SECONDARY_SUBDIVISION),\n         null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.ReverseSearchAddressResult?alt=com.azure.maps.search.models.ReverseSearchAddressResult&text=ReverseSearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddress(com.azure.core.models.GeoPosition)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddress(GeoPosition query)"
  name: "reverseSearchCrossStreetAddress(GeoPosition query)"
  nameWithType: "MapsSearchClient.reverseSearchCrossStreetAddress(GeoPosition query)"
  summary: "Reverse Address Search to a Cross Street"
  parameters:
  - description: "with a pair of coordinates.."
    name: "query"
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReverseSearchCrossStreetAddressResult reverseSearchCrossStreetAddress(GeoPosition query)"
  desc: "Reverse Address Search to a Cross Street\n\n```java\nSystem.out.println(\"Revere Search Cross Street Address:\");\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5));\n\n // complete\n client.reverseSearchCrossStreetAddressWithResponse(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult?alt=com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult&text=ReverseSearchCrossStreetAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddress(com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddress(ReverseSearchCrossStreetAddressOptions options)"
  name: "reverseSearchCrossStreetAddress(ReverseSearchCrossStreetAddressOptions options)"
  nameWithType: "MapsSearchClient.reverseSearchCrossStreetAddress(ReverseSearchCrossStreetAddressOptions options)"
  summary: "Reverse Address Search to a Cross Street"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchCrossStreetAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions?alt=com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions&text=ReverseSearchCrossStreetAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReverseSearchCrossStreetAddressResult reverseSearchCrossStreetAddress(ReverseSearchCrossStreetAddressOptions options)"
  desc: "Reverse Address Search to a Cross Street\n\n```java\nSystem.out.println(\"Revere Search Cross Street Address:\");\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5));\n\n // complete\n client.reverseSearchCrossStreetAddressWithResponse(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult?alt=com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult&text=ReverseSearchCrossStreetAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddressWithResponse(com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.reverseSearchCrossStreetAddressWithResponse(ReverseSearchCrossStreetAddressOptions options, Context context)"
  name: "reverseSearchCrossStreetAddressWithResponse(ReverseSearchCrossStreetAddressOptions options, Context context)"
  nameWithType: "MapsSearchClient.reverseSearchCrossStreetAddressWithResponse(ReverseSearchCrossStreetAddressOptions options, Context context)"
  summary: "Reverse Address Search to a Cross Street"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReverseSearchCrossStreetAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions?alt=com.azure.maps.search.models.ReverseSearchCrossStreetAddressOptions&text=ReverseSearchCrossStreetAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ReverseSearchCrossStreetAddressResult> reverseSearchCrossStreetAddressWithResponse(ReverseSearchCrossStreetAddressOptions options, Context context)"
  desc: "Reverse Address Search to a Cross Street\n\n```java\nSystem.out.println(\"Revere Search Cross Street Address:\");\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337)));\n\n // options\n client.reverseSearchCrossStreetAddress(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5));\n\n // complete\n client.reverseSearchCrossStreetAddressWithResponse(\n     new ReverseSearchCrossStreetAddressOptions(new GeoPosition(-121.89, 37.337))\n         .setTop(2)\n         .setHeading(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult?alt=com.azure.maps.search.models.ReverseSearchCrossStreetAddressResult&text=ReverseSearchCrossStreetAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchAddress(com.azure.maps.search.models.SearchAddressOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAddress(SearchAddressOptions options)"
  name: "searchAddress(SearchAddressOptions options)"
  nameWithType: "MapsSearchClient.searchAddress(SearchAddressOptions options)"
  summary: "Search Address"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressOptions?alt=com.azure.maps.search.models.SearchAddressOptions&text=SearchAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchAddress(SearchAddressOptions options)"
  desc: "Search Address\n\n```java\nSystem.out.println(\"Search Address:\");\n\n // simple\n client.searchAddress(\n     new SearchAddressOptions(\"15127 NE 24th Street, Redmond, WA 98052\"));\n\n // options\n client.searchAddress(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5));\n\n // complete\n client.searchAddressWithResponse(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5), null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchAddress(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAddress(String query)"
  name: "searchAddress(String query)"
  nameWithType: "MapsSearchClient.searchAddress(String query)"
  summary: "Search Address"
  parameters:
  - description: "the query string used in the fuzzy search."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult searchAddress(String query)"
  desc: "Search Address\n\n```java\nSystem.out.println(\"Search Address:\");\n\n // simple\n client.searchAddress(\n     new SearchAddressOptions(\"15127 NE 24th Street, Redmond, WA 98052\"));\n\n // options\n client.searchAddress(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5));\n\n // complete\n client.searchAddressWithResponse(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5), null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchAddressWithResponse(com.azure.maps.search.models.SearchAddressOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAddressWithResponse(SearchAddressOptions options, Context context)"
  name: "searchAddressWithResponse(SearchAddressOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchAddressWithResponse(SearchAddressOptions options, Context context)"
  summary: "Search Address"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressOptions?alt=com.azure.maps.search.models.SearchAddressOptions&text=SearchAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchAddressWithResponse(SearchAddressOptions options, Context context)"
  desc: "Search Address\n\n```java\nSystem.out.println(\"Search Address:\");\n\n // simple\n client.searchAddress(\n     new SearchAddressOptions(\"15127 NE 24th Street, Redmond, WA 98052\"));\n\n // options\n client.searchAddress(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5));\n\n // complete\n client.searchAddressWithResponse(\n     new SearchAddressOptions(\"1 Main Street\")\n         .setCoordinates(new GeoPosition(-74.011454, 40.706270))\n         .setRadiusInMeters(40000)\n         .setTop(5), null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Address call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchAlongRoute(com.azure.maps.search.models.SearchAlongRouteOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAlongRoute(SearchAlongRouteOptions options)"
  name: "searchAlongRoute(SearchAlongRouteOptions options)"
  nameWithType: "MapsSearchClient.searchAlongRoute(SearchAlongRouteOptions options)"
  summary: "Search Along Route"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchAlongRouteOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchAlongRouteOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchAlongRouteOptions?alt=com.azure.maps.search.models.SearchAlongRouteOptions&text=SearchAlongRouteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchAlongRoute(SearchAlongRouteOptions options)"
  desc: "Search Along Route\n\n```java\nSystem.out.println(\"Search Along Route\");\n\n // create route points\n List<GeoPosition> points = new ArrayList<>();\n points.add(new GeoPosition(-122.143035, 47.653536));\n points.add(new GeoPosition(-122.187164, 47.617556));\n points.add(new GeoPosition(-122.114981, 47.570599));\n points.add(new GeoPosition(-122.132756, 47.654009));\n GeoLineString route = new GeoLineString(points);\n\n // simple\n client.searchAlongRoute(new SearchAlongRouteOptions(\"burger\", 1000, route));\n\n // options\n client.searchAlongRoute(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5));\n\n // complete\n client.searchAlongRouteWithResponse(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Along Route call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchAlongRoute(java.lang.String,int)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAlongRoute(String query, int maxDetourTime)"
  name: "searchAlongRoute(String query, int maxDetourTime)"
  nameWithType: "MapsSearchClient.searchAlongRoute(String query, int maxDetourTime)"
  summary: "Search Along Route"
  parameters:
  - description: "the search query"
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the maximum detour time allowed"
    name: "maxDetourTime"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchAlongRoute(String query, int maxDetourTime)"
  desc: "Search Along Route\n\n```java\nSystem.out.println(\"Search Along Route\");\n\n // create route points\n List<GeoPosition> points = new ArrayList<>();\n points.add(new GeoPosition(-122.143035, 47.653536));\n points.add(new GeoPosition(-122.187164, 47.617556));\n points.add(new GeoPosition(-122.114981, 47.570599));\n points.add(new GeoPosition(-122.132756, 47.654009));\n GeoLineString route = new GeoLineString(points);\n\n // simple\n client.searchAlongRoute(new SearchAlongRouteOptions(\"burger\", 1000, route));\n\n // options\n client.searchAlongRoute(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5));\n\n // complete\n client.searchAlongRouteWithResponse(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Along Route call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchAlongRouteWithResponse(com.azure.maps.search.models.SearchAlongRouteOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchAlongRouteWithResponse(SearchAlongRouteOptions options, Context context)"
  name: "searchAlongRouteWithResponse(SearchAlongRouteOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchAlongRouteWithResponse(SearchAlongRouteOptions options, Context context)"
  summary: "Search Along Route"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchAlongRouteOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchAlongRouteOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchAlongRouteOptions?alt=com.azure.maps.search.models.SearchAlongRouteOptions&text=SearchAlongRouteOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchAlongRouteWithResponse(SearchAlongRouteOptions options, Context context)"
  desc: "Search Along Route\n\n```java\nSystem.out.println(\"Search Along Route\");\n\n // create route points\n List<GeoPosition> points = new ArrayList<>();\n points.add(new GeoPosition(-122.143035, 47.653536));\n points.add(new GeoPosition(-122.187164, 47.617556));\n points.add(new GeoPosition(-122.114981, 47.570599));\n points.add(new GeoPosition(-122.132756, 47.654009));\n GeoLineString route = new GeoLineString(points);\n\n // simple\n client.searchAlongRoute(new SearchAlongRouteOptions(\"burger\", 1000, route));\n\n // options\n client.searchAlongRoute(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5));\n\n // complete\n client.searchAlongRouteWithResponse(\n     new SearchAlongRouteOptions(\"burger\", 1000, route)\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Along Route call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchInsideGeometry(com.azure.maps.search.models.SearchInsideGeometryOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchInsideGeometry(SearchInsideGeometryOptions options)"
  name: "searchInsideGeometry(SearchInsideGeometryOptions options)"
  nameWithType: "MapsSearchClient.searchInsideGeometry(SearchInsideGeometryOptions options)"
  summary: "Search Inside Geometry"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchInsideGeometryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchInsideGeometryOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchInsideGeometryOptions?alt=com.azure.maps.search.models.SearchInsideGeometryOptions&text=SearchInsideGeometryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchInsideGeometry(SearchInsideGeometryOptions options)"
  desc: "Search Inside Geometry\n\n```java\nSystem.out.println(\"Search Inside Geometry\");\n\n // create GeoPolygon\n List<GeoPosition> coordinates = new ArrayList<>();\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n coordinates.add(new GeoPosition(-122.43301391601562, 37.70660472542312));\n coordinates.add(new GeoPosition(-122.36434936523438, 37.712059855877314));\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n GeoLinearRing ring = new GeoLinearRing(coordinates);\n GeoPolygon polygon = new GeoPolygon(ring);\n\n // simple\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon));\n\n // options\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5));\n\n // complete\n client.searchInsideGeometryWithResponse(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Inside Geometry call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchInsideGeometry(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchInsideGeometry(String query)"
  name: "searchInsideGeometry(String query)"
  nameWithType: "MapsSearchClient.searchInsideGeometry(String query)"
  summary: "Search Inside Geometry"
  parameters:
  - description: "query string"
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult searchInsideGeometry(String query)"
  desc: "Search Inside Geometry\n\n```java\nSystem.out.println(\"Search Inside Geometry\");\n\n // create GeoPolygon\n List<GeoPosition> coordinates = new ArrayList<>();\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n coordinates.add(new GeoPosition(-122.43301391601562, 37.70660472542312));\n coordinates.add(new GeoPosition(-122.36434936523438, 37.712059855877314));\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n GeoLinearRing ring = new GeoLinearRing(coordinates);\n GeoPolygon polygon = new GeoPolygon(ring);\n\n // simple\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon));\n\n // options\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5));\n\n // complete\n client.searchInsideGeometryWithResponse(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Inside Geometry call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchInsideGeometryWithResponse(com.azure.maps.search.models.SearchInsideGeometryOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchInsideGeometryWithResponse(SearchInsideGeometryOptions options, Context context)"
  name: "searchInsideGeometryWithResponse(SearchInsideGeometryOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchInsideGeometryWithResponse(SearchInsideGeometryOptions options, Context context)"
  summary: "Search Inside Geometry"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchInsideGeometryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchInsideGeometryOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchInsideGeometryOptions?alt=com.azure.maps.search.models.SearchInsideGeometryOptions&text=SearchInsideGeometryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchInsideGeometryWithResponse(SearchInsideGeometryOptions options, Context context)"
  desc: "Search Inside Geometry\n\n```java\nSystem.out.println(\"Search Inside Geometry\");\n\n // create GeoPolygon\n List<GeoPosition> coordinates = new ArrayList<>();\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n coordinates.add(new GeoPosition(-122.43301391601562, 37.70660472542312));\n coordinates.add(new GeoPosition(-122.36434936523438, 37.712059855877314));\n coordinates.add(new GeoPosition(-122.43576049804686, 37.7524152343544));\n GeoLinearRing ring = new GeoLinearRing(coordinates);\n GeoPolygon polygon = new GeoPolygon(ring);\n\n // simple\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon));\n\n // options\n client.searchInsideGeometry(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5));\n\n // complete\n client.searchInsideGeometryWithResponse(\n     new SearchInsideGeometryOptions(\"Leland Avenue\", polygon)\n         .setTop(5),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Inside Geometry call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterest(com.azure.core.models.GeoPosition)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterest(GeoPosition query)"
  name: "searchNearbyPointsOfInterest(GeoPosition query)"
  nameWithType: "MapsSearchClient.searchNearbyPointsOfInterest(GeoPosition query)"
  summary: "Search Nearby Points of Interest"
  parameters:
  - description: "A pair of coordinates for query."
    name: "query"
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchNearbyPointsOfInterest(GeoPosition query)"
  desc: "Search Nearby Points of Interest\n\n```java\nSystem.out.println(\"Search Nearby:\");\n\n // options\n client.searchNearbyPointsOfInterest(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10));\n\n // response\n client.searchNearbyPointsOfInterestWithResponse(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Nearby Point of Interest call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterest(com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterest(SearchNearbyPointsOfInterestOptions options)"
  name: "searchNearbyPointsOfInterest(SearchNearbyPointsOfInterestOptions options)"
  nameWithType: "MapsSearchClient.searchNearbyPointsOfInterest(SearchNearbyPointsOfInterestOptions options)"
  summary: "Search Nearby Points of Interest"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchNearbyPointsOfInterestOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions?alt=com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions&text=SearchNearbyPointsOfInterestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchNearbyPointsOfInterest(SearchNearbyPointsOfInterestOptions options)"
  desc: "Search Nearby Points of Interest\n\n```java\nSystem.out.println(\"Search Nearby:\");\n\n // options\n client.searchNearbyPointsOfInterest(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10));\n\n // response\n client.searchNearbyPointsOfInterestWithResponse(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Nearby Point of Interest call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterestWithResponse(com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchNearbyPointsOfInterestWithResponse(SearchNearbyPointsOfInterestOptions options, Context context)"
  name: "searchNearbyPointsOfInterestWithResponse(SearchNearbyPointsOfInterestOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchNearbyPointsOfInterestWithResponse(SearchNearbyPointsOfInterestOptions options, Context context)"
  summary: "Search Nearby Points of Interest"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchNearbyPointsOfInterestOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions?alt=com.azure.maps.search.models.SearchNearbyPointsOfInterestOptions&text=SearchNearbyPointsOfInterestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchNearbyPointsOfInterestWithResponse(SearchNearbyPointsOfInterestOptions options, Context context)"
  desc: "Search Nearby Points of Interest\n\n```java\nSystem.out.println(\"Search Nearby:\");\n\n // options\n client.searchNearbyPointsOfInterest(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10));\n\n // response\n client.searchNearbyPointsOfInterestWithResponse(\n     new SearchNearbyPointsOfInterestOptions(new GeoPosition(-74.011454, 40.706270))\n         .setCountryFilter(Arrays.asList(\"US\"))\n         .setTop(10),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Nearby Point of Interest call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterest(com.azure.maps.search.models.SearchPointOfInterestOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterest(SearchPointOfInterestOptions options)"
  name: "searchPointOfInterest(SearchPointOfInterestOptions options)"
  nameWithType: "MapsSearchClient.searchPointOfInterest(SearchPointOfInterestOptions options)"
  summary: "Search Point of Interest"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.SearchPointOfInterestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPointOfInterestOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchPointOfInterestOptions?alt=com.azure.maps.search.models.SearchPointOfInterestOptions&text=SearchPointOfInterestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchPointOfInterest(SearchPointOfInterestOptions options)"
  desc: "Search Point of Interest\n\n```java\nSystem.out.println(\"Search Points of Interest:\");\n\n // coordinates\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844)));\n\n // options\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS));\n\n // with response\n client.searchPointOfInterestWithResponse(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterest(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterest(String query)"
  name: "searchPointOfInterest(String query)"
  nameWithType: "MapsSearchClient.searchPointOfInterest(String query)"
  summary: "Search Point of Interest"
  parameters:
  - description: "The query to be used to search for points of interest."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult searchPointOfInterest(String query)"
  desc: "Search Point of Interest\n\n```java\nSystem.out.println(\"Search Points of Interest:\");\n\n // coordinates\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844)));\n\n // options\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS));\n\n // with response\n client.searchPointOfInterestWithResponse(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategory(com.azure.maps.search.models.SearchPointOfInterestCategoryOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategory(SearchPointOfInterestCategoryOptions options)"
  name: "searchPointOfInterestCategory(SearchPointOfInterestCategoryOptions options)"
  nameWithType: "MapsSearchClient.searchPointOfInterestCategory(SearchPointOfInterestCategoryOptions options)"
  summary: "Search Point of Interest per Category"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchPointOfInterestCategoryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPointOfInterestCategoryOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchPointOfInterestCategoryOptions?alt=com.azure.maps.search.models.SearchPointOfInterestCategoryOptions&text=SearchPointOfInterestCategoryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchPointOfInterestCategory(SearchPointOfInterestCategoryOptions options)"
  desc: "Search Point of Interest per Category\n\n```java\nSystem.out.println(\"Get Point of Interest Category:\");\n\n // complete - search for italian restaurant in NYC\n client.searchPointOfInterestCategory(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3));\n\n // with response\n client.searchPointOfInterestCategoryWithResponse(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest per Category calls."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategory(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategory(String query)"
  name: "searchPointOfInterestCategory(String query)"
  nameWithType: "MapsSearchClient.searchPointOfInterestCategory(String query)"
  summary: "Search Point of Interest per Category"
  parameters:
  - description: "The query to be used to search for points of interest."
    name: "query"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult searchPointOfInterestCategory(String query)"
  desc: "Search Point of Interest per Category\n\n```java\nSystem.out.println(\"Get Point of Interest Category:\");\n\n // complete - search for italian restaurant in NYC\n client.searchPointOfInterestCategory(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3));\n\n // with response\n client.searchPointOfInterestCategoryWithResponse(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest per Category calls."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategoryWithResponse(com.azure.maps.search.models.SearchPointOfInterestCategoryOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestCategoryWithResponse(SearchPointOfInterestCategoryOptions options, Context context)"
  name: "searchPointOfInterestCategoryWithResponse(SearchPointOfInterestCategoryOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchPointOfInterestCategoryWithResponse(SearchPointOfInterestCategoryOptions options, Context context)"
  summary: "Search Point of Interest per Category"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchPointOfInterestCategoryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPointOfInterestCategoryOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchPointOfInterestCategoryOptions?alt=com.azure.maps.search.models.SearchPointOfInterestCategoryOptions&text=SearchPointOfInterestCategoryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchPointOfInterestCategoryWithResponse(SearchPointOfInterestCategoryOptions options, Context context)"
  desc: "Search Point of Interest per Category\n\n```java\nSystem.out.println(\"Get Point of Interest Category:\");\n\n // complete - search for italian restaurant in NYC\n client.searchPointOfInterestCategory(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3));\n\n // with response\n client.searchPointOfInterestCategoryWithResponse(\n     new SearchPointOfInterestCategoryOptions(\"pasta\", new GeoPosition(-74.011454, 40.706270))\n         .setCategoryFilter(Arrays.asList(7315))\n         .setTop(3),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest per Category calls."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestWithResponse(com.azure.maps.search.models.SearchPointOfInterestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchPointOfInterestWithResponse(SearchPointOfInterestOptions options, Context context)"
  name: "searchPointOfInterestWithResponse(SearchPointOfInterestOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchPointOfInterestWithResponse(SearchPointOfInterestOptions options, Context context)"
  summary: "Search Point of Interest"
  parameters:
  - description: "<xref uid=\"com.azure.maps.search.models.SearchPointOfInterestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPointOfInterestOptions\"></xref> the options to be used in this search."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchPointOfInterestOptions?alt=com.azure.maps.search.models.SearchPointOfInterestOptions&text=SearchPointOfInterestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchPointOfInterestWithResponse(SearchPointOfInterestOptions options, Context context)"
  desc: "Search Point of Interest\n\n```java\nSystem.out.println(\"Search Points of Interest:\");\n\n // coordinates\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844)));\n\n // options\n client.searchPointOfInterest(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS));\n\n // with response\n client.searchPointOfInterestWithResponse(\n     new SearchPointOfInterestOptions(\"pizza\", new GeoPosition(-121.97483, 36.98844))\n         .setTop(10)\n         .setOperatingHours(OperatingHoursRange.NEXT_SEVEN_DAYS),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Search Point of Interest call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.search.MapsSearchClient.searchStructuredAddress(com.azure.maps.search.models.StructuredAddress,com.azure.maps.search.models.SearchStructuredAddressOptions)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchStructuredAddress(StructuredAddress address, SearchStructuredAddressOptions options)"
  name: "searchStructuredAddress(StructuredAddress address, SearchStructuredAddressOptions options)"
  nameWithType: "MapsSearchClient.searchStructuredAddress(StructuredAddress address, SearchStructuredAddressOptions options)"
  summary: "Structured Address Search"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.StructuredAddress\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StructuredAddress\"></xref> to be searched by the API."
    name: "address"
    type: "<xref href=\"com.azure.maps.search.models.StructuredAddress?alt=com.azure.maps.search.models.StructuredAddress&text=StructuredAddress\" data-throw-if-not-resolved=\"False\" />"
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchStructuredAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchStructuredAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchStructuredAddressOptions?alt=com.azure.maps.search.models.SearchStructuredAddressOptions&text=SearchStructuredAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchAddressResult searchStructuredAddress(StructuredAddress address, SearchStructuredAddressOptions options)"
  desc: "Structured Address Search\n\n```java\nSystem.out.println(\"Search Address Structured:\");\n\n // simple\n client.searchStructuredAddress(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"), null);\n\n // complete\n client.searchStructuredAddressWithResponse(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"),\n     new SearchStructuredAddressOptions()\n             .setTop(2)\n             .setRadiusInMeters(1000),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchStructuredAddress(java.lang.String)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchStructuredAddress(String countryCode)"
  name: "searchStructuredAddress(String countryCode)"
  nameWithType: "MapsSearchClient.searchStructuredAddress(String countryCode)"
  summary: "Structured Address Search"
  parameters:
  - description: "the country code for query."
    name: "countryCode"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchAddressResult searchStructuredAddress(String countryCode)"
  desc: "Structured Address Search\n\n```java\nSystem.out.println(\"Search Address Structured:\");\n\n // simple\n client.searchStructuredAddress(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"), null);\n\n // complete\n client.searchStructuredAddressWithResponse(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"),\n     new SearchStructuredAddressOptions()\n             .setTop(2)\n             .setRadiusInMeters(1000),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Reverse Search Address call."
    type: "<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.search.MapsSearchClient.searchStructuredAddressWithResponse(com.azure.maps.search.models.StructuredAddress,com.azure.maps.search.models.SearchStructuredAddressOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.search.MapsSearchClient.searchStructuredAddressWithResponse(StructuredAddress address, SearchStructuredAddressOptions options, Context context)"
  name: "searchStructuredAddressWithResponse(StructuredAddress address, SearchStructuredAddressOptions options, Context context)"
  nameWithType: "MapsSearchClient.searchStructuredAddressWithResponse(StructuredAddress address, SearchStructuredAddressOptions options, Context context)"
  summary: "Structured Address Search"
  parameters:
  - description: "a <xref uid=\"com.azure.maps.search.models.StructuredAddress\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StructuredAddress\"></xref> to be searched by the API."
    name: "address"
    type: "<xref href=\"com.azure.maps.search.models.StructuredAddress?alt=com.azure.maps.search.models.StructuredAddress&text=StructuredAddress\" data-throw-if-not-resolved=\"False\" />"
  - description: "a <xref uid=\"com.azure.maps.search.models.SearchStructuredAddressOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchStructuredAddressOptions\"></xref> representing the search parameters."
    name: "options"
    type: "<xref href=\"com.azure.maps.search.models.SearchStructuredAddressOptions?alt=com.azure.maps.search.models.SearchStructuredAddressOptions&text=SearchStructuredAddressOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAddressResult> searchStructuredAddressWithResponse(StructuredAddress address, SearchStructuredAddressOptions options, Context context)"
  desc: "Structured Address Search\n\n```java\nSystem.out.println(\"Search Address Structured:\");\n\n // simple\n client.searchStructuredAddress(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"), null);\n\n // complete\n client.searchStructuredAddressWithResponse(new StructuredAddress(\"US\")\n     .setPostalCode(\"98121\")\n     .setStreetNumber(\"15127\")\n     .setStreetName(\"NE 24th Street\")\n     .setMunicipality(\"Redmond\")\n     .setCountrySubdivision(\"WA\"),\n     new SearchStructuredAddressOptions()\n             .setTop(2)\n             .setRadiusInMeters(1000),\n     null).getStatusCode();\n```"
  returns:
    description: "this object is returned from a successful Structured Address Search call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.search.models.SearchAddressResult?alt=com.azure.maps.search.models.SearchAddressResult&text=SearchAddressResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "<xref uid=\"com.azure.maps.search.MapsSearchClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapsSearchClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.search.MapsSearchClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapsSearchClientBuilder\"></xref>, as shown below. Creating a sync client using a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref>:\n\n```java\n// Authenticates using subscription key\n AzureKeyCredential keyCredential = new AzureKeyCredential(System.getenv(\"SUBSCRIPTION_KEY\"));\n\n // Creates a builder\n MapsSearchClientBuilder builder = new MapsSearchClientBuilder();\n builder.credential(keyCredential);\n builder.httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS));\n\n // Builds the client\n MapsSearchClient client = builder.buildClient();\n```"
metadata: {}
package: "com.azure.maps.search"
artifact: com.azure:azure-maps-search:1.0.0-beta.1
