### YamlMime:JavaType
uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient"
fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient"
name: "RoleDefinitionsAsyncClient"
nameWithType: "RoleDefinitionsAsyncClient"
summary: "Initializes a new instance of the asynchronous Access<wbr>Control<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RoleDefinitionsAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.getRoleDefinitionById(java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.getRoleDefinitionById(String roleDefinitionId)"
  name: "getRoleDefinitionById(String roleDefinitionId)"
  nameWithType: "RoleDefinitionsAsyncClient.getRoleDefinitionById(String roleDefinitionId)"
  summary: "Get role definition by role definition Id."
  parameters:
  - description: "Synapse Built-In Role Definition Id."
    name: "roleDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SynapseRoleDefinition> getRoleDefinitionById(String roleDefinitionId)"
  desc: "Get role definition by role definition Id."
  returns:
    description: "role definition by role definition Id."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition?alt=com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition&text=SynapseRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.getRoleDefinitionByIdWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.getRoleDefinitionByIdWithResponse(String roleDefinitionId)"
  name: "getRoleDefinitionByIdWithResponse(String roleDefinitionId)"
  nameWithType: "RoleDefinitionsAsyncClient.getRoleDefinitionByIdWithResponse(String roleDefinitionId)"
  summary: "Get role definition by role definition Id."
  parameters:
  - description: "Synapse Built-In Role Definition Id."
    name: "roleDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SynapseRoleDefinition>> getRoleDefinitionByIdWithResponse(String roleDefinitionId)"
  desc: "Get role definition by role definition Id."
  returns:
    description: "role definition by role definition Id."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition?alt=com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition&text=SynapseRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitions()"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitions()"
  name: "listRoleDefinitions()"
  nameWithType: "RoleDefinitionsAsyncClient.listRoleDefinitions()"
  summary: "List role definitions."
  syntax: "public Mono<List<SynapseRoleDefinition>> listRoleDefinitions()"
  desc: "List role definitions."
  returns:
    description: "a list of Synapse roles available."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition?alt=com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition&text=SynapseRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitions(java.lang.Boolean,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitions(Boolean isBuiltIn, String scope)"
  name: "listRoleDefinitions(Boolean isBuiltIn, String scope)"
  nameWithType: "RoleDefinitionsAsyncClient.listRoleDefinitions(Boolean isBuiltIn, String scope)"
  summary: "List role definitions."
  parameters:
  - description: "Is a Synapse Built-In Role or not."
    name: "isBuiltIn"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<List<SynapseRoleDefinition>> listRoleDefinitions(Boolean isBuiltIn, String scope)"
  desc: "List role definitions."
  returns:
    description: "a list of Synapse roles available."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition?alt=com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition&text=SynapseRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitionsWithResponse(java.lang.Boolean,java.lang.String)"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listRoleDefinitionsWithResponse(Boolean isBuiltIn, String scope)"
  name: "listRoleDefinitionsWithResponse(Boolean isBuiltIn, String scope)"
  nameWithType: "RoleDefinitionsAsyncClient.listRoleDefinitionsWithResponse(Boolean isBuiltIn, String scope)"
  summary: "List role definitions."
  parameters:
  - description: "Is a Synapse Built-In Role or not."
    name: "isBuiltIn"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Scope of the Synapse Built-in Role."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<List<SynapseRoleDefinition>>> listRoleDefinitionsWithResponse(Boolean isBuiltIn, String scope)"
  desc: "List role definitions."
  returns:
    description: "a list of Synapse roles available."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition?alt=com.azure.analytics.synapse.accesscontrol.models.SynapseRoleDefinition&text=SynapseRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listScopes()"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listScopes()"
  name: "listScopes()"
  nameWithType: "RoleDefinitionsAsyncClient.listScopes()"
  summary: "List rbac scopes."
  syntax: "public Mono<List<String>> listScopes()"
  desc: "List rbac scopes."
  returns:
    description: "a list of Synapse rbac scopes available."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listScopesWithResponse()"
  fullName: "com.azure.analytics.synapse.accesscontrol.RoleDefinitionsAsyncClient.listScopesWithResponse()"
  name: "listScopesWithResponse()"
  nameWithType: "RoleDefinitionsAsyncClient.listScopesWithResponse()"
  summary: "List rbac scopes."
  syntax: "public Mono<Response<List<String>>> listScopesWithResponse()"
  desc: "List rbac scopes."
  returns:
    description: "a list of Synapse rbac scopes available."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous AccessControlClient type."
metadata: {}
package: "com.azure.analytics.synapse.accesscontrol"
artifact: com.azure:azure-analytics-synapse-accesscontrol:1.0.0-beta.4
