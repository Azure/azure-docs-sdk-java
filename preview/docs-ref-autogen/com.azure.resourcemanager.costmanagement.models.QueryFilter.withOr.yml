### YamlMime:JavaMember
uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr*"
fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr"
name: "withOr"
nameWithType: "QueryFilter.withOr"
members:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr(java.util.List<com.azure.resourcemanager.costmanagement.models.QueryFilter>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr(List<QueryFilter> or)"
  name: "withOr(List<QueryFilter> or)"
  nameWithType: "QueryFilter.withOr(List<QueryFilter> or)"
  summary: "Set the or property: The logical \"OR\" expression. Must have at least 2 items."
  parameters:
  - description: "the or value to set."
    name: "or"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryFilter withOr(List<QueryFilter> or)"
  returns:
    description: "the QueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.1
