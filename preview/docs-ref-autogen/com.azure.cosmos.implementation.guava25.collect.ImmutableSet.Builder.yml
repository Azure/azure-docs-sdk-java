### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  id: Builder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add(E...)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll(java.lang.Iterable<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll(java.util.Iterator<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.build()
  langs:
  - java
  name: ImmutableSet.Builder<E>
  nameWithType: ImmutableSet.Builder<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A builder for creating `ImmutableSet` instances. Example:


    ```java

    static final ImmutableSet GOOGLE_COLORS =
         ImmutableSet.builder()
             .addAll(WEBSAFE_COLORS)
             .add(new Color(0, 191, 255))
             .build();
    ```


    Elements appear in the resulting set in the same order they were first added to the builder.


    Building does not change the state of the builder, so it is still possible to add more elements and to build again.
  syntax:
    content: public static class ImmutableSet.Builder<E> extends ImmutableCollection.Builder<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E...)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.lang.Iterable<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.util.Iterator<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.build()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder()
  id: Builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: Builder()
  nameWithType: ImmutableSet.Builder<E>.Builder()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.Builder()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Builder()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder(boolean)
  id: Builder(boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: Builder(boolean subclass)
  nameWithType: ImmutableSet.Builder<E>.Builder(boolean subclass)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.Builder(boolean subclass)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: " Builder(boolean subclass)"
    parameters:
    - id: subclass
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder(int)
  id: Builder(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: Builder(int capacity)
  nameWithType: ImmutableSet.Builder<E>.Builder(int capacity)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.Builder(int capacity)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: " Builder(int capacity)"
    parameters:
    - id: capacity
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add(E)
  id: add(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: add(E element)
  nameWithType: ImmutableSet.Builder<E>.add(E element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.add(E element)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Adds `element` to the `ImmutableCollection` being built.


    Note that each builder class covariantly returns its own type from this method.
  syntax:
    content: public ImmutableSet.Builder<E> add(E element)
    parameters:
    - id: element
      type: E
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add(E...)
  id: add(E...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: add(E[] elements)
  nameWithType: ImmutableSet.Builder<E>.add(E[] elements)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.add(E[] elements)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Adds each element of `elements` to the `ImmutableCollection` being built.


    Note that each builder class overrides this method in order to covariantly return its own type.
  syntax:
    content: public ImmutableSet.Builder<E> add(E[] elements)
    parameters:
    - id: elements
      type: E[]
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll(java.lang.Iterable<? extends E>)
  id: addAll(java.lang.Iterable<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: addAll(Iterable<? extends E> elements)
  nameWithType: ImmutableSet.Builder<E>.addAll(Iterable<? extends E> elements)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.addAll(Iterable<? extends E> elements)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Adds each element of `elements` to the `ImmutableCollection` being built.


    Note that each builder class overrides this method in order to covariantly return its own type.
  syntax:
    content: public ImmutableSet.Builder<E> addAll(Iterable<? extends E> elements)
    parameters:
    - id: elements
      type: java.lang.Iterable<? extends E>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll(java.util.Iterator<? extends E>)
  id: addAll(java.util.Iterator<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: addAll(Iterator<? extends E> elements)
  nameWithType: ImmutableSet.Builder<E>.addAll(Iterator<? extends E> elements)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.addAll(Iterator<? extends E> elements)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Adds each element of `elements` to the `ImmutableCollection` being built.


    Note that each builder class overrides this method in order to covariantly return its own type.
  syntax:
    content: public ImmutableSet.Builder<E> addAll(Iterator<? extends E> elements)
    parameters:
    - id: elements
      type: java.util.Iterator<? extends E>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.build()
  id: build()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  langs:
  - java
  name: build()
  nameWithType: ImmutableSet.Builder<E>.build()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.build()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.build*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a newly-created `ImmutableCollection` of the appropriate type, containing the elements provided to this builder.


    Note that each builder class covariantly returns the appropriate type of `ImmutableCollection` from this method.
  syntax:
    content: public ImmutableSet<E> build()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.Builder*
  name: Builder
  nameWithType: ImmutableSet.Builder<E>.Builder
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.Builder
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
    name: Builder
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.add*
  name: add
  nameWithType: ImmutableSet.Builder<E>.add
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.add
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E[]
  spec.java:
  - uid: E
    name: E
    fullName: E
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Iterable<? extends E>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.addAll*
  name: addAll
  nameWithType: ImmutableSet.Builder<E>.addAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.addAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<? extends E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet
    name: ImmutableSet
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder.build*
  name: build
  nameWithType: ImmutableSet.Builder<E>.build
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder<E>.build
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder<E>
  name: ImmutableCollection.Builder<E>
  nameWithType: ImmutableCollection.Builder<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder<E>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.util.Iterator<? extends E>)
  name: ImmutableCollection.Builder.addAll(Iterator<? extends E>)
  nameWithType: ImmutableCollection.Builder.addAll(Iterator<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.util.Iterator<? extends E>)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.build()
  name: ImmutableCollection.Builder.build()
  nameWithType: ImmutableCollection.Builder.build()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.build()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.lang.Iterable<? extends E>)
  name: ImmutableCollection.Builder.addAll(Iterable<? extends E>)
  nameWithType: ImmutableCollection.Builder.addAll(Iterable<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.lang.Iterable<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E...)
  name: ImmutableCollection.Builder.add(E)
  nameWithType: ImmutableCollection.Builder.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E...)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E)
  name: ImmutableCollection.Builder.add(E)
  nameWithType: ImmutableCollection.Builder.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.add(E)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet
  name: ImmutableSet
  nameWithType: ImmutableSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder
  name: ImmutableCollection.Builder
  nameWithType: ImmutableCollection.Builder
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.util.Iterator
  name: ImmutableCollection.Builder.addAll(Iterator
  nameWithType: ImmutableCollection.Builder.addAll(Iterator
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.util.Iterator
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.lang.Iterable
  name: ImmutableCollection.Builder.addAll(Iterable
  nameWithType: ImmutableCollection.Builder.addAll(Iterable
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.Builder.addAll(java.lang.Iterable
