### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.ProductContract"
fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract"
name: "ProductContract"
nameWithType: "ProductContract"
summary: "An immutable client-side representation of Product<wbr>Contract."
syntax: "public interface ProductContract"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.approvalRequired()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.approvalRequired()"
  name: "approvalRequired()"
  nameWithType: "ProductContract.approvalRequired()"
  summary: "Gets the approval<wbr>Required property: whether subscription approval is required."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean approvalRequired()"
  desc: "Gets the approvalRequired property: whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product\\\\u2019s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product\\\\u2019s APIs. Can be present only if subscriptionRequired property is present and has a value of false."
  returns:
    description: "the approvalRequired value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.description()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.description()"
  name: "description()"
  nameWithType: "ProductContract.description()"
  summary: "Gets the description property: Product description."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: Product description. May include HTML formatting tags."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.displayName()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.displayName()"
  name: "displayName()"
  nameWithType: "ProductContract.displayName()"
  summary: "Gets the display<wbr>Name property: Product name."
  modifiers:
  - "abstract"
  syntax: "public abstract String displayName()"
  desc: "Gets the displayName property: Product name."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.id()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.id()"
  name: "id()"
  nameWithType: "ProductContract.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.innerModel()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.innerModel()"
  name: "innerModel()"
  nameWithType: "ProductContract.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>apimanagement.<wbr>fluent.<wbr>models.<wbr>Product<wbr>Contract<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ProductContractInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.apimanagement.fluent.models.ProductContractInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.ProductContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.ProductContractInner&text=ProductContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.name()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.name()"
  name: "name()"
  nameWithType: "ProductContract.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.refresh()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.refresh()"
  name: "refresh()"
  nameWithType: "ProductContract.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract ProductContract refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "ProductContract.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductContract refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.state()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.state()"
  name: "state()"
  nameWithType: "ProductContract.state()"
  summary: "Gets the state property: whether product is published or not."
  modifiers:
  - "abstract"
  syntax: "public abstract ProductState state()"
  desc: "Gets the state property: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished."
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductState?alt=com.azure.resourcemanager.apimanagement.models.ProductState&text=ProductState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.subscriptionRequired()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.subscriptionRequired()"
  name: "subscriptionRequired()"
  nameWithType: "ProductContract.subscriptionRequired()"
  summary: "Gets the subscription<wbr>Required property: Whether a product subscription is required for accessing APIs included in this product."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean subscriptionRequired()"
  desc: "Gets the subscriptionRequired property: Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true."
  returns:
    description: "the subscriptionRequired value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.subscriptionsLimit()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.subscriptionsLimit()"
  name: "subscriptionsLimit()"
  nameWithType: "ProductContract.subscriptionsLimit()"
  summary: "Gets the subscriptions<wbr>Limit property: Whether the number of subscriptions a user can have to this product at the same time."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer subscriptionsLimit()"
  desc: "Gets the subscriptionsLimit property: Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
  returns:
    description: "the subscriptionsLimit value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.terms()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.terms()"
  name: "terms()"
  nameWithType: "ProductContract.terms()"
  summary: "Gets the terms property: Product terms of use."
  modifiers:
  - "abstract"
  syntax: "public abstract String terms()"
  desc: "Gets the terms property: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process."
  returns:
    description: "the terms value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.type()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.type()"
  name: "type()"
  nameWithType: "ProductContract.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ProductContract.update()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ProductContract.update()"
  name: "update()"
  nameWithType: "ProductContract.update()"
  summary: "Begins update for the Product<wbr>Contract resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProductContract.Update update()"
  desc: "Begins update for the ProductContract resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract.Update?alt=com.azure.resourcemanager.apimanagement.models.ProductContract.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of ProductContract."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
