### YamlMime:JavaType
uid: "com.azure.maps.weather.models.StormForecast"
fullName: "com.azure.maps.weather.models.StormForecast"
name: "StormForecast"
nameWithType: "StormForecast"
summary: "Government-issued storm forecast."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **StormForecast**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.StormForecast?alt=com.azure.maps.weather.models.StormForecast&text=StormForecast\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.StormForecast.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.StormForecast.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "StormForecast.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Storm<wbr>Forecast from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static StormForecast fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the StormForecast."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of StormForecast from the JsonReader."
  returns:
    description: "An instance of StormForecast if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.StormForecast?alt=com.azure.maps.weather.models.StormForecast&text=StormForecast\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.StormForecast.getCoordinates()"
  fullName: "com.azure.maps.weather.models.StormForecast.getCoordinates()"
  name: "getCoordinates()"
  nameWithType: "StormForecast.getCoordinates()"
  summary: "Get the coordinates property: Coordinates of the storm."
  syntax: "public GeoPosition getCoordinates()"
  desc: "Get the coordinates property: Coordinates of the storm."
  returns:
    description: "the coordinates value."
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.StormForecast.getInitializedTimestamp()"
  fullName: "com.azure.maps.weather.models.StormForecast.getInitializedTimestamp()"
  name: "getInitializedTimestamp()"
  nameWithType: "StormForecast.getInitializedTimestamp()"
  summary: "Get the initialized<wbr>Timestamp property: Datetime the forecast was created, displayed in ISO8601 format."
  syntax: "public String getInitializedTimestamp()"
  desc: "Get the initializedTimestamp property: Datetime the forecast was created, displayed in ISO8601 format."
  returns:
    description: "the initializedTimestamp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.StormForecast.getMaxWindGust()"
  fullName: "com.azure.maps.weather.models.StormForecast.getMaxWindGust()"
  name: "getMaxWindGust()"
  nameWithType: "StormForecast.getMaxWindGust()"
  summary: "Get the max<wbr>Wind<wbr>Gust property: Maximum wind gust speed associated with the storm."
  syntax: "public WeatherUnitDetails getMaxWindGust()"
  desc: "Get the maxWindGust property: Maximum wind gust speed associated with the storm. May be NULL."
  returns:
    description: "the maxWindGust value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherUnitDetails?alt=com.azure.maps.weather.models.WeatherUnitDetails&text=WeatherUnitDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.StormForecast.getStatus()"
  fullName: "com.azure.maps.weather.models.StormForecast.getStatus()"
  name: "getStatus()"
  nameWithType: "StormForecast.getStatus()"
  summary: "Get the status property: Possible status values include:<ul><li>Cyclonic storm</li><li>Deep depression</li><li>Depression</li><li>Extremely severe cyclonic storm</li><li>Hurricane category (1-5)</li><li>Intense tropical cyclone</li><li>Moderate tropical storm</li><li>Post-tropical cyclone</li><li>Potential tropical cyclone</li><li>Severe cyclonic storm</li><li>Severe tropical storm</li><li>Subtropical</li><li>Super cyclonic storm</li><li>Tropical cyclone</li><li>Tropical cyclone category (1-5)</li><li>Tropical depression</li><li>Tropical disturbance</li><li>Tropical storm</li><li>Typhoon</li><li>Very intense tropical cyclone</li><li>Very severe cyclonic storm</li><li>Very strong typhoon</li><li>Violent typhoon</li></ul>."
  syntax: "public String getStatus()"
  desc: "Get the status property: Possible status values include:<ul><li>Cyclonic storm</li><li>Deep depression</li><li>Depression</li><li>Extremely severe cyclonic storm</li><li>Hurricane category (1-5)</li><li>Intense tropical cyclone</li><li>Moderate tropical storm</li><li>Post-tropical cyclone</li><li>Potential tropical cyclone</li><li>Severe cyclonic storm</li><li>Severe tropical storm</li><li>Subtropical</li><li>Super cyclonic storm</li><li>Tropical cyclone</li><li>Tropical cyclone category (1-5)</li><li>Tropical depression</li><li>Tropical disturbance</li><li>Tropical storm</li><li>Typhoon</li><li>Very intense tropical cyclone</li><li>Very severe cyclonic storm</li><li>Very strong typhoon</li><li>Violent typhoon</li></ul>."
  returns:
    description: "the status value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.StormForecast.getSustainedWind()"
  fullName: "com.azure.maps.weather.models.StormForecast.getSustainedWind()"
  name: "getSustainedWind()"
  nameWithType: "StormForecast.getSustainedWind()"
  summary: "Get the sustained<wbr>Wind property: Maximum sustained wind speed associated with the storm."
  syntax: "public WeatherUnitDetails getSustainedWind()"
  desc: "Get the sustainedWind property: Maximum sustained wind speed associated with the storm. May be NULL."
  returns:
    description: "the sustainedWind value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherUnitDetails?alt=com.azure.maps.weather.models.WeatherUnitDetails&text=WeatherUnitDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.StormForecast.getTimestamp()"
  fullName: "com.azure.maps.weather.models.StormForecast.getTimestamp()"
  name: "getTimestamp()"
  nameWithType: "StormForecast.getTimestamp()"
  summary: "Get the timestamp property: Datetime the forecast is valid, displayed in ISO8601 format."
  syntax: "public String getTimestamp()"
  desc: "Get the timestamp property: Datetime the forecast is valid, displayed in ISO8601 format."
  returns:
    description: "the timestamp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.StormForecast.getWeatherWindow()"
  fullName: "com.azure.maps.weather.models.StormForecast.getWeatherWindow()"
  name: "getWeatherWindow()"
  nameWithType: "StormForecast.getWeatherWindow()"
  summary: "Get the weather<wbr>Window property: Contains information about the forecast window for the storm during the specified time period (not the entire cone)."
  syntax: "public WeatherWindow getWeatherWindow()"
  desc: "Get the weatherWindow property: Contains information about the forecast window for the storm during the specified time period (not the entire cone). If windowGeometry=true in the request, this object will include geoJSON details for window geometry."
  returns:
    description: "the weatherWindow value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherWindow?alt=com.azure.maps.weather.models.WeatherWindow&text=WeatherWindow\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.StormForecast.getWindRadiiSummary()"
  fullName: "com.azure.maps.weather.models.StormForecast.getWindRadiiSummary()"
  name: "getWindRadiiSummary()"
  nameWithType: "StormForecast.getWindRadiiSummary()"
  summary: "Get the wind<wbr>Radii<wbr>Summary property: Displayed when details=true or radii<wbr>Geometry=true in the request."
  syntax: "public List<StormWindRadiiSummary> getWindRadiiSummary()"
  desc: "Get the windRadiiSummary property: Displayed when details=true or radiiGeometry=true in the request."
  returns:
    description: "the windRadiiSummary value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.weather.models.StormWindRadiiSummary?alt=com.azure.maps.weather.models.StormWindRadiiSummary&text=StormWindRadiiSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.weather.models.StormForecast.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.StormForecast.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "StormForecast.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Government-issued storm forecast."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.StormForecast?alt=com.azure.maps.weather.models.StormForecast&text=StormForecast\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.2
