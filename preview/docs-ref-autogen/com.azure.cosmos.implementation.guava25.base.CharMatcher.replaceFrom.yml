### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom*"
fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom"
name: "replaceFrom"
nameWithType: "CharMatcher.replaceFrom"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom(java.lang.CharSequence,char)"
  fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom(CharSequence sequence, char replacement)"
  name: "replaceFrom(CharSequence sequence, char replacement)"
  nameWithType: "CharMatcher.replaceFrom(CharSequence sequence, char replacement)"
  summary: "Returns a string copy of the input character sequence, with each matching BMP character replaced by a given replacement character. For example:\n\n```java\nCharMatcher.is('a').replaceFrom(\"radar\", 'o')\n```\n\n... returns `\"rodor\"`.\n\nThe default implementation uses <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn(java.lang.CharSequence)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#indexIn(CharSequence)\"></xref> to find the first matching character, then iterates the remainder of the sequence calling <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.matches(char)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#matches(char)\"></xref> for each character."
  parameters:
  - description: "the character sequence to replace matching characters in"
    name: "sequence"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  - description: "the character to append to the result string in place of each matching\n     character in <code>sequence</code>"
    name: "replacement"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String replaceFrom(CharSequence sequence, char replacement)"
  returns:
    description: "the new string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom(java.lang.CharSequence,java.lang.CharSequence)"
  fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom(CharSequence sequence, CharSequence replacement)"
  name: "replaceFrom(CharSequence sequence, CharSequence replacement)"
  nameWithType: "CharMatcher.replaceFrom(CharSequence sequence, CharSequence replacement)"
  summary: "Returns a string copy of the input character sequence, with each matching BMP character replaced by a given replacement sequence. For example:\n\n```java\nCharMatcher.is('a').replaceFrom(\"yaha\", \"oo\")\n```\n\n... returns `\"yoohoo\"`.\n\n**Note:** If the replacement is a fixed string with only one character, you are better off calling <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.replaceFrom(java.lang.CharSequence,char)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#replaceFrom(CharSequence, char)\"></xref> directly."
  parameters:
  - description: "the character sequence to replace matching characters in"
    name: "sequence"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  - description: "the characters to append to the result string in place of each matching\n     character in <code>sequence</code>"
    name: "replacement"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String replaceFrom(CharSequence sequence, CharSequence replacement)"
  returns:
    description: "the new string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
