### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.skip*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>skip"
name: "<T>skip"
nameWithType: "Iterables.<T>skip"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>skip(java.lang.Iterable<T>,int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>skip(Iterable<T> iterable, int numberToSkip)"
  name: "<T>skip(Iterable<T> iterable, int numberToSkip)"
  nameWithType: "Iterables.<T>skip(Iterable<T> iterable, int numberToSkip)"
  summary: "Returns a view of `iterable` that skips its first `numberToSkip` elements. If `iterable` contains fewer than `numberToSkip` elements, the returned iterable skips all of its elements.\n\nModifications to the underlying <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> before a call to `iterator()` are reflected in the returned iterator. That is, the iterator skips the first `numberToSkip` elements that exist when the `Iterator` is created, not when `skip()` is called.\n\nThe returned iterable's iterator supports `remove()` if the iterator of the underlying iterable supports it. Note that it is *not* possible to delete the last skipped element by immediately calling `remove()` on that iterator, as the `Iterator` contract states that a call to `remove()` before a call to `next()` will throw an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalStateException\"></xref>.\n\n**`Stream` equivalent:** <xref uid=\"java.util.stream.Stream.skip\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream#skip\"></xref>"
  parameters:
  - name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "numberToSkip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Iterable<T> <T>skip(Iterable<T> iterable, int numberToSkip)"
  returns:
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
