### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*"
fullName: "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer"
name: "createBeanDeserializer"
nameWithType: "DeserializerFactory.createBeanDeserializer"
members:
- uid: "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
  fullName: "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)"
  name: "createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)"
  nameWithType: "DeserializerFactory.createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)"
  summary: "Method called to create (or, for completely immutable deserializers, reuse) a deserializer that can convert JSON content into values of specified Java \"bean\" (POJO) type. At this point it is known that the type is not otherwise recognized as one of structured types (array, Collection, Map) or a well-known JDK type (enum, primitives/wrappers, String); this method only gets called if other options are exhausted. This also means that this method can be overridden to add support for custom types."
  parameters:
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type to be deserialized"
    name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "beanDesc"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanDescription?alt=com.fasterxml.jackson.databind.BeanDescription&text=BeanDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
