### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint.withTunnel*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint.withTunnel"
name: "withTunnel"
nameWithType: "UnsecuredEndpoint.withTunnel"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint.withTunnel(com.azure.resourcemanager.videoanalyzer.models.TunnelBase)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint.withTunnel(TunnelBase tunnel)"
  name: "withTunnel(TunnelBase tunnel)"
  nameWithType: "UnsecuredEndpoint.withTunnel(TunnelBase tunnel)"
  summary: "Set the tunnel property: Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withTunnel(com.azure.resourcemanager.videoanalyzer.models.TunnelBase)"
  parameters:
  - name: "tunnel"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TunnelBase?alt=com.azure.resourcemanager.videoanalyzer.models.TunnelBase&text=TunnelBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UnsecuredEndpoint withTunnel(TunnelBase tunnel)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.UnsecuredEndpoint&text=UnsecuredEndpoint\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.3
