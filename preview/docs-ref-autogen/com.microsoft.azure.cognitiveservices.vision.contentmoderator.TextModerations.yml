### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations"
fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations"
name: "TextModerations"
nameWithType: "TextModerations"
summary: "An instance of this class provides access to all the operations defined in Text<wbr>Moderations."
syntax: "public interface **TextModerations**"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguage(java.lang.String,byte[])"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguage(String textContentType, byte[] textContent)"
  name: "detectLanguage(String textContentType, byte[] textContent)"
  nameWithType: "TextModerations.detectLanguage(String textContentType, byte[] textContent)"
  summary: "This operation will detect the language of given input content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'."
    name: "textContentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Content to screen."
    name: "textContent"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract DetectedLanguage detectLanguage(String textContentType, byte[] textContent)"
  desc: "This operation will detect the language of given input content. Returns the <a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for the predominant language comprising the submitted text. Over 110 languages supported."
  returns:
    description: "the DetectedLanguage object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage&text=DetectedLanguage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguageAsync(java.lang.String,byte[])"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguageAsync(String textContentType, byte[] textContent)"
  name: "detectLanguageAsync(String textContentType, byte[] textContent)"
  nameWithType: "TextModerations.detectLanguageAsync(String textContentType, byte[] textContent)"
  summary: "This operation will detect the language of given input content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'."
    name: "textContentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Content to screen."
    name: "textContent"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract Observable<DetectedLanguage> detectLanguageAsync(String textContentType, byte[] textContent)"
  desc: "This operation will detect the language of given input content. Returns the <a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for the predominant language comprising the submitted text. Over 110 languages supported."
  returns:
    description: "the observable to the DetectedLanguage object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage&text=DetectedLanguage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText()"
  name: "screenText()"
  nameWithType: "TextModerations.screenText()"
  summary: "Detect profanity and match against custom and shared blacklists."
  modifiers:
  - "abstract"
  syntax: "public abstract TextModerations.TextModerationsScreenTextDefinitionStages.WithTextContentType screenText()"
  desc: "Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists."
  returns:
    description: "the first stage of the screenText call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.TextModerationsScreenTextDefinitionStages.WithTextContentType?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.TextModerationsScreenTextDefinitionStages.WithTextContentType&text=WithTextContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  name: "screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  nameWithType: "TextModerations.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  summary: "Detect profanity and match against custom and shared blacklists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'."
    name: "textContentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Content to screen."
    name: "textContent"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "screenTextOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter&text=ScreenTextOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Screen screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  desc: "Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists."
  returns:
    description: "the Screen object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  name: "screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  nameWithType: "TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  summary: "Detect profanity and match against custom and shared blacklists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'."
    name: "textContentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Content to screen."
    name: "textContent"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "screenTextOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter&text=ScreenTextOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Screen> screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)"
  desc: "Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists."
  returns:
    description: "the observable to the Screen object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in TextModerations."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.contentmoderator"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-contentmoderator:1.0.3-beta
