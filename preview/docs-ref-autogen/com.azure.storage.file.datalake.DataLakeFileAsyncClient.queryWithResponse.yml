### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.queryWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.queryWithResponse"
name: "queryWithResponse"
nameWithType: "DataLakeFileAsyncClient.queryWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.queryWithResponse(com.azure.storage.file.datalake.options.FileQueryOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.queryWithResponse(FileQueryOptions queryOptions)"
  name: "queryWithResponse(FileQueryOptions queryOptions)"
  nameWithType: "DataLakeFileAsyncClient.queryWithResponse(FileQueryOptions queryOptions)"
  summary: "Queries the entire file.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n FileQueryJsonSerialization input = new FileQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n FileQueryDelimitedSerialization output = new FileQueryDelimitedSerialization()\n     .setEscapeChar('\\0')\n     .setColumnSeparator(',')\n     .setRecordSeparator('\\n')\n     .setFieldQuote('\\'')\n     .setHeadersPresent(true);\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions().setLeaseId(leaseId);\n Consumer<FileQueryError> errorConsumer = System.out::println;\n Consumer<FileQueryProgress> progressConsumer = progress -> System.out.println(\"total file bytes read: \"\n     + progress.getBytesScanned());\n FileQueryOptions queryOptions = new FileQueryOptions(expression)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n \n client.queryWithResponse(queryOptions)\n     .subscribe(response -> {\n         ByteArrayOutputStream queryData = new ByteArrayOutputStream();\n         response.getValue().subscribe(piece -> {\n             try {\n                 queryData.write(piece.array());\n             } catch (IOException ex) {\n                 throw new UncheckedIOException(ex);\n             }\n         });\n     });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The query options\"></xref>"
    name: "queryOptions"
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FileQueryAsyncResponse> queryWithResponse(FileQueryOptions queryOptions)"
  returns:
    description: "A reactive response containing the queried data."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileQueryAsyncResponse?alt=com.azure.storage.file.datalake.models.FileQueryAsyncResponse&text=FileQueryAsyncResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
