### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder
  id: PropertyBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._annotationIntrospector
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._beanDesc
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._config
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultBean
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultInclusion
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.PropertyBuilder._useRealPropertyDefaults
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations()
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean()
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: Helper class for <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> that is used to construct <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> instances. Can be sub-classed to change behavior.
  syntax:
    content: public class PropertyBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: PropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  nameWithType: PropertyBuilder.PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._annotationIntrospector
  id: _annotationIntrospector
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _annotationIntrospector
  nameWithType: PropertyBuilder._annotationIntrospector
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._annotationIntrospector
  type: Field
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected final AnnotationIntrospector _annotationIntrospector
    return:
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._beanDesc
  id: _beanDesc
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _beanDesc
  nameWithType: PropertyBuilder._beanDesc
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._beanDesc
  type: Field
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected final BeanDescription _beanDesc
    return:
      type: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._config
  id: _config
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _config
  nameWithType: PropertyBuilder._config
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._config
  type: Field
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected final SerializationConfig _config
    return:
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultBean
  id: _defaultBean
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _defaultBean
  nameWithType: PropertyBuilder._defaultBean
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultBean
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    If a property has serialization inclusion value of <xref uid="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonInclude.Include#NON_DEFAULT</xref>, we may need to know the default value of the bean, to know if property value equals default one.


    NOTE: only used if enclosing class defines NON\_DEFAULT, but NOT if it is the global default OR per-property override.
  syntax:
    content: protected Object _defaultBean
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultInclusion
  id: _defaultInclusion
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _defaultInclusion
  nameWithType: PropertyBuilder._defaultInclusion
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultInclusion
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Default inclusion mode for properties of the POJO for which properties are collected; possibly overridden on per-property basis. Combines global inclusion defaults and per-type (annotation and type-override) inclusion overrides.
  syntax:
    content: protected final JsonInclude.Value _defaultInclusion
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)
  id: _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _throwWrapped(Exception e, String propName, Object defaultBean)
  nameWithType: PropertyBuilder._throwWrapped(Exception e, String propName, Object defaultBean)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped(Exception e, String propName, Object defaultBean)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected Object _throwWrapped(Exception e, String propName, Object defaultBean)
    parameters:
    - id: e
      type: java.lang.Exception
    - id: propName
      type: java.lang.String
    - id: defaultBean
      type: java.lang.Object
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._useRealPropertyDefaults
  id: _useRealPropertyDefaults
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: _useRealPropertyDefaults
  nameWithType: PropertyBuilder._useRealPropertyDefaults
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._useRealPropertyDefaults
  type: Field
  package: com.fasterxml.jackson.databind.ser
  summary: Marker flag used to indicate that "real" default values are to be used for properties, as per per-type value inclusion of type `NON_DEFAULT`
  syntax:
    content: protected final boolean _useRealPropertyDefaults
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)
  id: buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: buildWriter(SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping)
  nameWithType: PropertyBuilder.buildWriter(SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanPropertyWriter buildWriter(SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: contentTypeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
      description: >-
        Optional explicit type information serializer
            to use for contained values (only used for properties that are
            of container type)
    - id: am
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: defaultUseStaticTyping
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)
  id: findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)
  nameWithType: PropertyBuilder.findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method that will try to determine statically defined type of property being serialized, based on annotations (for overrides), and alternatively declared type (if static typing for serialization is enabled). If neither can be used (no annotations, dynamic typing), returns null.
  syntax:
    content: protected JavaType findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)
    parameters:
    - id: a
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: useStaticTyping
      type: boolean
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations()
  id: getClassAnnotations()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: getClassAnnotations()
  nameWithType: PropertyBuilder.getClassAnnotations()
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations()
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public Annotations getClassAnnotations()
    return:
      type: com.fasterxml.jackson.databind.util.Annotations
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean()
  id: getDefaultBean()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: getDefaultBean()
  nameWithType: PropertyBuilder.getDefaultBean()
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean()
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected Object getDefaultBean()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue(com.fasterxml.jackson.databind.JavaType)
  id: getDefaultValue(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: getDefaultValue(JavaType type)
  nameWithType: PropertyBuilder.getDefaultValue(JavaType type)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue(JavaType type)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected Object getDefaultValue(JavaType type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  id: getPropertyDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.PropertyBuilder
  langs:
  - java
  name: getPropertyDefaultValue(String name, AnnotatedMember member, JavaType type)
  nameWithType: PropertyBuilder.getPropertyDefaultValue(String name, AnnotatedMember member, JavaType type)
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue(String name, AnnotatedMember member, JavaType type)
  overload: com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Accessor used to find out "default value" for given property, to use for comparing values to serialize, to determine whether to exclude value from serialization with inclusion type of <xref uid="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonInclude.Include#NON_DEFAULT</xref>. This method is called when we specifically want to know default value within context of a POJO, when annotation is within containing class, and not for property or defined as global baseline.


    Note that returning of pseudo-type <xref uid="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_EMPTY" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonInclude.Include#NON_EMPTY</xref> requires special handling.
  syntax:
    content: protected Object getPropertyDefaultValue(String name, AnnotatedMember member, JavaType type)
    parameters:
    - id: name
      type: java.lang.String
    - id: member
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: java.lang.Object
references:
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder*
  name: PropertyBuilder
  nameWithType: PropertyBuilder.PropertyBuilder
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.PropertyBuilder
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.util.Annotations
  name: Annotations
  nameWithType: Annotations
  fullName: com.fasterxml.jackson.databind.util.Annotations
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations*
  name: getClassAnnotations
  nameWithType: PropertyBuilder.getClassAnnotations
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getClassAnnotations
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter*
  name: buildWriter
  nameWithType: PropertyBuilder.buildWriter
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.introspect.Annotated
  name: Annotated
  nameWithType: Annotated
  fullName: com.fasterxml.jackson.databind.introspect.Annotated
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType*
  name: findSerializationType
  nameWithType: PropertyBuilder.findSerializationType
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean*
  name: getDefaultBean
  nameWithType: PropertyBuilder.getDefaultBean
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue*
  name: getPropertyDefaultValue
  nameWithType: PropertyBuilder.getPropertyDefaultValue
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue*
  name: getDefaultValue
  nameWithType: PropertyBuilder.getDefaultValue
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultValue
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped*
  name: _throwWrapped
  nameWithType: PropertyBuilder._throwWrapped
  fullName: com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
