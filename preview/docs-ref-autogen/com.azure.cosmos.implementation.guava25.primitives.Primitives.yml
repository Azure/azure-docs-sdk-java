### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives
  id: Primitives
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives
  children:
  - com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap(java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>wrap(java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes()
  - com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes()
  - com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType(java.lang.Class<?>)
  langs:
  - java
  name: Primitives
  nameWithType: Primitives
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives
  type: Class
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: Contains static utility methods pertaining to primitive types and their corresponding wrapper types.
  syntax:
    content: public final class Primitives
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap(java.lang.Class<T>)
  id: <T>unwrap(java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: <T>unwrap(Class<T> type)
  nameWithType: Primitives.<T>unwrap(Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap(Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.unwrap*
  type: Method
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: >-
    Returns the corresponding primitive type of `type` if it is a wrapper type; otherwise returns `type` itself. Idempotent.


    ```java

    unwrap(Integer.class) == int.class
         unwrap(int.class) == int.class
         unwrap(String.class) == String.class
    ```
  syntax:
    content: public static Class<T> <T>unwrap(Class<T> type)
    parameters:
    - id: type
      type: java.lang.Class<T>
    return:
      type: java.lang.Class<T>
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>wrap(java.lang.Class<T>)
  id: <T>wrap(java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: <T>wrap(Class<T> type)
  nameWithType: Primitives.<T>wrap(Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>wrap(Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.wrap*
  type: Method
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: >-
    Returns the corresponding wrapper type of `type` if it is a primitive type; otherwise returns `type` itself. Idempotent.


    ```java

    wrap(int.class) == Integer.class
         wrap(Integer.class) == Integer.class
         wrap(String.class) == String.class
    ```
  syntax:
    content: public static Class<T> <T>wrap(Class<T> type)
    parameters:
    - id: type
      type: java.lang.Class<T>
    return:
      type: java.lang.Class<T>
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.Primitives()
  id: Primitives()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: Primitives()
  nameWithType: Primitives.Primitives()
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.Primitives()
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.Primitives*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.primitives
  syntax:
    content: private Primitives()
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes()
  id: allPrimitiveTypes()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: allPrimitiveTypes()
  nameWithType: Primitives.allPrimitiveTypes()
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes()
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes*
  type: Method
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: Returns an immutable set of all nine primitive types (including `void`). Note that a simpler way to test whether a `Class` instance is a member of this set is to call <xref uid="java.lang.Class.isPrimitive" data-throw-if-not-resolved="false">Class#isPrimitive</xref>.
  syntax:
    content: public static Set<Class<?>> allPrimitiveTypes()
    return:
      type: java.util.Set<java.lang.Class<?>>
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes()
  id: allWrapperTypes()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: allWrapperTypes()
  nameWithType: Primitives.allWrapperTypes()
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes()
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes*
  type: Method
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: Returns an immutable set of all nine primitive-wrapper types (including <xref uid="java.lang.Void" data-throw-if-not-resolved="false">Void</xref>).
  syntax:
    content: public static Set<Class<?>> allWrapperTypes()
    return:
      type: java.util.Set<java.lang.Class<?>>
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType(java.lang.Class<?>)
  id: isWrapperType(java.lang.Class<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.primitives.Primitives
  langs:
  - java
  name: isWrapperType(Class<?> type)
  nameWithType: Primitives.isWrapperType(Class<?> type)
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType(Class<?> type)
  overload: com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType*
  type: Method
  package: com.azure.cosmos.implementation.guava25.primitives
  summary: Returns `true` if `type` is one of the nine primitive-wrapper types, such as <xref uid="java.lang.Integer" data-throw-if-not-resolved="false">Integer</xref>.
  syntax:
    content: public static boolean isWrapperType(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
references:
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.Primitives*
  name: Primitives
  nameWithType: Primitives.Primitives
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.Primitives
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: java.util.Set<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes*
  name: allPrimitiveTypes
  nameWithType: Primitives.allPrimitiveTypes
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.allPrimitiveTypes
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes*
  name: allWrapperTypes
  nameWithType: Primitives.allWrapperTypes
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.allWrapperTypes
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType*
  name: isWrapperType
  nameWithType: Primitives.isWrapperType
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.isWrapperType
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.wrap*
  name: <T>wrap
  nameWithType: Primitives.<T>wrap
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>wrap
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: com.azure.cosmos.implementation.guava25.primitives.Primitives.unwrap*
  name: <T>unwrap
  nameWithType: Primitives.<T>unwrap
  fullName: com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap
  package: com.azure.cosmos.implementation.guava25.primitives
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: T
  name: T
  nameWithType: T
  fullName: T
