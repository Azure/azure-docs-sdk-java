### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient"
name: "SparkJobDefinitionAsyncClient"
nameWithType: "SparkJobDefinitionAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkJobDefinitionAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition)"
  name: "createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition)"
  nameWithType: "SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition)"
  summary: "Creates or updates a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Spark Job Definition resource definition."
    name: "sparkJobDefinition"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkJobDefinitionResource> createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition)"
  desc: "Creates or updates a Spark Job Definition."
  returns:
    description: "spark job definition resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  name: "createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  nameWithType: "SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  summary: "Creates or updates a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Spark Job Definition resource definition."
    name: "sparkJobDefinition"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Spark Job Definition entity. Should only be specified for update, for which it should\n     match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkJobDefinitionResource> createOrUpdateSparkJobDefinition(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  desc: "Creates or updates a Spark Job Definition."
  returns:
    description: "spark job definition resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinitionWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinitionWithResponse(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  name: "createOrUpdateSparkJobDefinitionWithResponse(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  nameWithType: "SparkJobDefinitionAsyncClient.createOrUpdateSparkJobDefinitionWithResponse(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  summary: "Creates or updates a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Spark Job Definition resource definition."
    name: "sparkJobDefinition"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Spark Job Definition entity. Should only be specified for update, for which it should\n     match existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkJobDefinitionResource>> createOrUpdateSparkJobDefinitionWithResponse(String sparkJobDefinitionName, SparkJobDefinitionResource sparkJobDefinition, String ifMatch)"
  desc: "Creates or updates a Spark Job Definition."
  returns:
    description: "spark job definition resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.debugSparkJobDefinition(com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.debugSparkJobDefinition(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  name: "debugSparkJobDefinition(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  nameWithType: "SparkJobDefinitionAsyncClient.debugSparkJobDefinition(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  summary: "Debug the spark job definition."
  parameters:
  - description: "Spark Job Definition resource definition."
    name: "sparkJobDefinitionAzureResource"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> debugSparkJobDefinition(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  desc: "Debug the spark job definition."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkBatchJob?alt=com.azure.analytics.synapse.artifacts.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.debugSparkJobDefinitionWithResponse(com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.debugSparkJobDefinitionWithResponse(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  name: "debugSparkJobDefinitionWithResponse(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  nameWithType: "SparkJobDefinitionAsyncClient.debugSparkJobDefinitionWithResponse(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  summary: "Debug the spark job definition."
  parameters:
  - description: "Spark Job Definition resource definition."
    name: "sparkJobDefinitionAzureResource"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJob>> debugSparkJobDefinitionWithResponse(SparkJobDefinitionResource sparkJobDefinitionAzureResource)"
  desc: "Debug the spark job definition."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkBatchJob?alt=com.azure.analytics.synapse.artifacts.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.deleteSparkJobDefinition(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.deleteSparkJobDefinition(String sparkJobDefinitionName)"
  name: "deleteSparkJobDefinition(String sparkJobDefinitionName)"
  nameWithType: "SparkJobDefinitionAsyncClient.deleteSparkJobDefinition(String sparkJobDefinitionName)"
  summary: "Deletes a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteSparkJobDefinition(String sparkJobDefinitionName)"
  desc: "Deletes a Spark Job Definition."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.deleteSparkJobDefinitionWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.deleteSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  name: "deleteSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  nameWithType: "SparkJobDefinitionAsyncClient.deleteSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  summary: "Deletes a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  desc: "Deletes a Spark Job Definition."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.executeSparkJobDefinition(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.executeSparkJobDefinition(String sparkJobDefinitionName)"
  name: "executeSparkJobDefinition(String sparkJobDefinitionName)"
  nameWithType: "SparkJobDefinitionAsyncClient.executeSparkJobDefinition(String sparkJobDefinitionName)"
  summary: "Executes the spark job definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkBatchJob> executeSparkJobDefinition(String sparkJobDefinitionName)"
  desc: "Executes the spark job definition."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkBatchJob?alt=com.azure.analytics.synapse.artifacts.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.executeSparkJobDefinitionWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.executeSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  name: "executeSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  nameWithType: "SparkJobDefinitionAsyncClient.executeSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  summary: "Executes the spark job definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJob>> executeSparkJobDefinitionWithResponse(String sparkJobDefinitionName)"
  desc: "Executes the spark job definition."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkBatchJob?alt=com.azure.analytics.synapse.artifacts.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinition(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinition(String sparkJobDefinitionName)"
  name: "getSparkJobDefinition(String sparkJobDefinitionName)"
  nameWithType: "SparkJobDefinitionAsyncClient.getSparkJobDefinition(String sparkJobDefinitionName)"
  summary: "Gets a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkJobDefinitionResource> getSparkJobDefinition(String sparkJobDefinitionName)"
  desc: "Gets a Spark Job Definition."
  returns:
    description: "a Spark Job Definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinition(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinition(String sparkJobDefinitionName, String ifNoneMatch)"
  name: "getSparkJobDefinition(String sparkJobDefinitionName, String ifNoneMatch)"
  nameWithType: "SparkJobDefinitionAsyncClient.getSparkJobDefinition(String sparkJobDefinitionName, String ifNoneMatch)"
  summary: "Gets a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Spark Job Definition entity. Should only be specified for get. If the ETag matches\n     the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SparkJobDefinitionResource> getSparkJobDefinition(String sparkJobDefinitionName, String ifNoneMatch)"
  desc: "Gets a Spark Job Definition."
  returns:
    description: "a Spark Job Definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinitionWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinitionWithResponse(String sparkJobDefinitionName, String ifNoneMatch)"
  name: "getSparkJobDefinitionWithResponse(String sparkJobDefinitionName, String ifNoneMatch)"
  nameWithType: "SparkJobDefinitionAsyncClient.getSparkJobDefinitionWithResponse(String sparkJobDefinitionName, String ifNoneMatch)"
  summary: "Gets a Spark Job Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Spark Job Definition entity. Should only be specified for get. If the ETag matches\n     the existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkJobDefinitionResource>> getSparkJobDefinitionWithResponse(String sparkJobDefinitionName, String ifNoneMatch)"
  desc: "Gets a Spark Job Definition."
  returns:
    description: "a Spark Job Definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinitionsByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.getSparkJobDefinitionsByWorkspace()"
  name: "getSparkJobDefinitionsByWorkspace()"
  nameWithType: "SparkJobDefinitionAsyncClient.getSparkJobDefinitionsByWorkspace()"
  summary: "Lists spark job definitions."
  syntax: "public PagedFlux<SparkJobDefinitionResource> getSparkJobDefinitionsByWorkspace()"
  desc: "Lists spark job definitions."
  returns:
    description: "a list of spark job definitions resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource?alt=com.azure.analytics.synapse.artifacts.models.SparkJobDefinitionResource&text=SparkJobDefinitionResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.renameSparkJobDefinition(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.renameSparkJobDefinition(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  name: "renameSparkJobDefinition(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  nameWithType: "SparkJobDefinitionAsyncClient.renameSparkJobDefinition(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  summary: "Renames a spark<wbr>Job<wbr>Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renameSparkJobDefinition(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  desc: "Renames a sparkJobDefinition."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.renameSparkJobDefinitionWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.SparkJobDefinitionAsyncClient.renameSparkJobDefinitionWithResponse(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  name: "renameSparkJobDefinitionWithResponse(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  nameWithType: "SparkJobDefinitionAsyncClient.renameSparkJobDefinitionWithResponse(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  summary: "Renames a spark<wbr>Job<wbr>Definition."
  parameters:
  - description: "The spark job definition name."
    name: "sparkJobDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renameSparkJobDefinitionWithResponse(String sparkJobDefinitionName, ArtifactRenameRequest request)"
  desc: "Renames a sparkJobDefinition."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
