### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  id: WithFrontend
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models
  children:
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(com.azure.resourcemanager.network.models.PublicIpAddress)
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(java.lang.String)
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.azure.resourcemanager.network.models.Network,java.lang.String)
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.azure.resourcemanager.network.models.Subnet)
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(java.lang.String)
  langs:
  - java
  name: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  type: Interface
  package: com.azure.resourcemanager.network.models
  summary: The stage of a definition allowing to specify a frontend from to associate.
  syntax:
    content: public static interface HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
    typeParameters:
    - id: ReturnT
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(com.azure.resourcemanager.network.models.PublicIpAddress)
  id: fromExistingPublicIPAddress(com.azure.resourcemanager.network.models.PublicIpAddress)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromExistingPublicIPAddress(PublicIpAddress publicIPAddress)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIpAddress publicIPAddress)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIpAddress publicIPAddress)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Specifies an existing public IP address to receive network traffic from.


    If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer.
  syntax:
    content: public abstract ReturnT fromExistingPublicIPAddress(PublicIpAddress publicIPAddress)
    parameters:
    - id: publicIPAddress
      type: com.azure.resourcemanager.network.models.PublicIpAddress
      description: an existing public IP address
    return:
      type: ReturnT
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(java.lang.String)
  id: fromExistingPublicIPAddress(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromExistingPublicIPAddress(String resourceId)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Specifies an existing public IP address to receive network traffic from.


    If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer.
  syntax:
    content: public abstract ReturnT fromExistingPublicIPAddress(String resourceId)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: the resource ID of an existing public IP address
    return:
      type: ReturnT
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.azure.resourcemanager.network.models.Network,java.lang.String)
  id: fromExistingSubnet(com.azure.resourcemanager.network.models.Network,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromExistingSubnet(Network network, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Specifies an existing private subnet to receive network traffic from.


    If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer.
  syntax:
    content: public abstract ReturnT fromExistingSubnet(Network network, String subnetName)
    parameters:
    - id: network
      type: com.azure.resourcemanager.network.models.Network
      description: an existing network
    - id: subnetName
      type: java.lang.String
      description: the name of an existing subnet within the specified network
    return:
      type: ReturnT
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.azure.resourcemanager.network.models.Subnet)
  id: fromExistingSubnet(com.azure.resourcemanager.network.models.Subnet)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromExistingSubnet(Subnet subnet)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Specifies an existing private subnet to receive network traffic from.


    If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer.
  syntax:
    content: public abstract ReturnT fromExistingSubnet(Subnet subnet)
    parameters:
    - id: subnet
      type: com.azure.resourcemanager.network.models.Subnet
      description: an existing subnet
    return:
      type: ReturnT
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(java.lang.String,java.lang.String)
  id: fromExistingSubnet(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromExistingSubnet(String networkResourceId, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Specifies an existing private subnet to receive network traffic from.


    If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer.
  syntax:
    content: public abstract ReturnT fromExistingSubnet(String networkResourceId, String subnetName)
    parameters:
    - id: networkResourceId
      type: java.lang.String
      description: the resource ID of an existing network
    - id: subnetName
      type: java.lang.String
      description: the name of an existing subnet within the specified network
    return:
      type: ReturnT
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(java.lang.String)
  id: fromFrontend(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend
  langs:
  - java
  name: fromFrontend(String frontendName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  overload: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: Specifies the frontend to associate.
  syntax:
    content: public abstract ReturnT fromFrontend(String frontendName)
    parameters:
    - id: frontendName
      type: java.lang.String
      description: an existing frontend name
    return:
      type: ReturnT
      description: the next stage of the definition
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: ReturnT
  spec.java:
  - uid: ReturnT
    name: ReturnT
    fullName: ReturnT
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend*
  name: fromFrontend
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.PublicIpAddress
  name: PublicIpAddress
  nameWithType: PublicIpAddress
  fullName: com.azure.resourcemanager.network.models.PublicIpAddress
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  name: fromExistingPublicIPAddress
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.Network
  name: Network
  nameWithType: Network
  fullName: com.azure.resourcemanager.network.models.Network
- uid: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  name: fromExistingSubnet
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  fullName: com.azure.resourcemanager.network.models.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.Subnet
  name: Subnet
  nameWithType: Subnet
  fullName: com.azure.resourcemanager.network.models.Subnet
