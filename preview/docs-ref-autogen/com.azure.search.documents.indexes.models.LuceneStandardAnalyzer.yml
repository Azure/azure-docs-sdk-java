### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer"
fullName: "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer"
name: "LuceneStandardAnalyzer"
nameWithType: "LuceneStandardAnalyzer"
summary: "Standard Apache Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalAnalyzer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.LexicalAnalyzer.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LuceneStandardAnalyzer extends LexicalAnalyzer"
constructors:
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.LuceneStandardAnalyzer(java.lang.String)"
methods:
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.getMaxTokenLength()"
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.getStopwords()"
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.setMaxTokenLength(java.lang.Integer)"
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.setStopwords(java.lang.String...)"
- "com.azure.search.documents.indexes.models.LuceneStandardAnalyzer.setStopwords(java.util.List<java.lang.String>)"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
