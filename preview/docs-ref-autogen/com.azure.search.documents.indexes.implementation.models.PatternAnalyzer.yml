### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  id: PatternAnalyzer
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models
  children:
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags()
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern()
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords()
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms()
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms(java.lang.Boolean)
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords(java.util.List<java.lang.String>)
  - com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate()
  langs:
  - java
  name: PatternAnalyzer
  nameWithType: PatternAnalyzer
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  type: Class
  package: com.azure.search.documents.indexes.implementation.models
  summary: The PatternAnalyzer model.
  syntax:
    content: public class PatternAnalyzer extends LexicalAnalyzer
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  inheritedMembers:
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer(java.lang.String)
  id: PatternAnalyzer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: PatternAnalyzer(String name)
  nameWithType: PatternAnalyzer.PatternAnalyzer(String name)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer(String name)
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation.models
  summary: Creates an instance of PatternAnalyzer class.
  syntax:
    content: public PatternAnalyzer(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags()
  id: getFlags()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: getFlags()
  nameWithType: PatternAnalyzer.getFlags()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags()
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the flags property: Regular expression flags.'
  syntax:
    content: public RegexFlags getFlags()
    return:
      type: com.azure.search.documents.indexes.implementation.models.RegexFlags
      description: the flags value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern()
  id: getPattern()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: getPattern()
  nameWithType: PatternAnalyzer.getPattern()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern()
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.'
  syntax:
    content: public String getPattern()
    return:
      type: java.lang.String
      description: the pattern value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords()
  id: getStopwords()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: getStopwords()
  nameWithType: PatternAnalyzer.getStopwords()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords()
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the stopwords property: A list of stopwords.'
  syntax:
    content: public List<String> getStopwords()
    return:
      type: java.util.List<java.lang.String>
      description: the stopwords value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms()
  id: isLowerCaseTerms()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: isLowerCaseTerms()
  nameWithType: PatternAnalyzer.isLowerCaseTerms()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms()
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the lowerCaseTerms property: A value indicating whether terms should be lower-cased. Default is true.'
  syntax:
    content: public Boolean isLowerCaseTerms()
    return:
      type: java.lang.Boolean
      description: the lowerCaseTerms value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  id: setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: setFlags(RegexFlags flags)
  nameWithType: PatternAnalyzer.setFlags(RegexFlags flags)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags(RegexFlags flags)
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the flags property: Regular expression flags.'
  syntax:
    content: public PatternAnalyzer setFlags(RegexFlags flags)
    parameters:
    - id: flags
      type: com.azure.search.documents.indexes.implementation.models.RegexFlags
      description: the flags value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
      description: the PatternAnalyzer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms(java.lang.Boolean)
  id: setLowerCaseTerms(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: setLowerCaseTerms(Boolean lowerCaseTerms)
  nameWithType: PatternAnalyzer.setLowerCaseTerms(Boolean lowerCaseTerms)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms(Boolean lowerCaseTerms)
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the lowerCaseTerms property: A value indicating whether terms should be lower-cased. Default is true.'
  syntax:
    content: public PatternAnalyzer setLowerCaseTerms(Boolean lowerCaseTerms)
    parameters:
    - id: lowerCaseTerms
      type: java.lang.Boolean
      description: the lowerCaseTerms value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
      description: the PatternAnalyzer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern(java.lang.String)
  id: setPattern(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: setPattern(String pattern)
  nameWithType: PatternAnalyzer.setPattern(String pattern)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern(String pattern)
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.'
  syntax:
    content: public PatternAnalyzer setPattern(String pattern)
    parameters:
    - id: pattern
      type: java.lang.String
      description: the pattern value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
      description: the PatternAnalyzer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords(java.util.List<java.lang.String>)
  id: setStopwords(java.util.List<java.lang.String>)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: setStopwords(List<String> stopwords)
  nameWithType: PatternAnalyzer.setStopwords(List<String> stopwords)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords(List<String> stopwords)
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the stopwords property: A list of stopwords.'
  syntax:
    content: public PatternAnalyzer setStopwords(List<String> stopwords)
    parameters:
    - id: stopwords
      type: java.util.List<java.lang.String>
      description: the stopwords value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
      description: the PatternAnalyzer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate()
  id: validate()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer
  langs:
  - java
  name: validate()
  nameWithType: PatternAnalyzer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate()
  overload: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer*
  name: PatternAnalyzer
  nameWithType: PatternAnalyzer.PatternAnalyzer
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.PatternAnalyzer
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms*
  name: isLowerCaseTerms
  nameWithType: PatternAnalyzer.isLowerCaseTerms
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.isLowerCaseTerms
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms*
  name: setLowerCaseTerms
  nameWithType: PatternAnalyzer.setLowerCaseTerms
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setLowerCaseTerms
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern*
  name: getPattern
  nameWithType: PatternAnalyzer.getPattern
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getPattern
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern*
  name: setPattern
  nameWithType: PatternAnalyzer.setPattern
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setPattern
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.RegexFlags
  name: RegexFlags
  nameWithType: RegexFlags
  fullName: com.azure.search.documents.indexes.implementation.models.RegexFlags
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags*
  name: getFlags
  nameWithType: PatternAnalyzer.getFlags
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getFlags
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags*
  name: setFlags
  nameWithType: PatternAnalyzer.setFlags
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setFlags
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords*
  name: getStopwords
  nameWithType: PatternAnalyzer.getStopwords
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.getStopwords
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords*
  name: setStopwords
  nameWithType: PatternAnalyzer.setStopwords
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.setStopwords
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate*
  name: validate
  nameWithType: PatternAnalyzer.validate
  fullName: com.azure.search.documents.indexes.implementation.models.PatternAnalyzer.validate
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  name: LexicalAnalyzer
  nameWithType: LexicalAnalyzer
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
  name: LexicalAnalyzer.getName()
  nameWithType: LexicalAnalyzer.getName()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
  name: LexicalAnalyzer.validate()
  nameWithType: LexicalAnalyzer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
