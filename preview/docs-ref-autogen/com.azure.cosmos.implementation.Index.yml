### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.Index
  id: Index
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.Index.hash(com.azure.cosmos.implementation.DataType)
  - com.azure.cosmos.implementation.Index.hash(com.azure.cosmos.implementation.DataType,int)
  - com.azure.cosmos.implementation.Index.range(com.azure.cosmos.implementation.DataType)
  - com.azure.cosmos.implementation.Index.range(com.azure.cosmos.implementation.DataType,int)
  - com.azure.cosmos.implementation.Index.spatial(com.azure.cosmos.implementation.DataType)
  langs:
  - java
  name: Index
  nameWithType: Index
  fullName: com.azure.cosmos.implementation.Index
  type: Class
  package: com.azure.cosmos.implementation
  summary: Represents the index of a container in the Azure Cosmos DB database service.
  syntax:
    content: public abstract class Index extends JsonSerializable
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.JsonSerializable
  inheritedMembers:
  - com.azure.cosmos.implementation.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.implementation.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.implementation.JsonSerializable.<T>getMap(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.implementation.JsonSerializable.<T>set(java.lang.String,T)
  - com.azure.cosmos.implementation.JsonSerializable.<T>toObject(java.lang.Class<T>)
  - com.azure.cosmos.implementation.JsonSerializable.get(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getBoolean(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getDouble(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getInt(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getLogger()
  - com.azure.cosmos.implementation.JsonSerializable.getLong(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getMap()
  - com.azure.cosmos.implementation.JsonSerializable.getObject(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
  - com.azure.cosmos.implementation.JsonSerializable.getPropertyBag()
  - com.azure.cosmos.implementation.JsonSerializable.getString(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)
  - com.azure.cosmos.implementation.JsonSerializable.has(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.populatePropertyBag()
  - com.azure.cosmos.implementation.JsonSerializable.remove(java.lang.String)
  - com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer()
  - com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper)
  - com.azure.cosmos.implementation.JsonSerializable.toJson()
  - com.azure.cosmos.implementation.JsonSerializable.toJson(com.azure.cosmos.implementation.SerializationFormattingPolicy)
  - com.azure.cosmos.implementation.JsonSerializable.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.Index.Index(com.azure.cosmos.implementation.IndexKind)
  id: Index(com.azure.cosmos.implementation.IndexKind)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: Index(IndexKind indexKind)
  nameWithType: Index.Index(IndexKind indexKind)
  fullName: com.azure.cosmos.implementation.Index.Index(IndexKind indexKind)
  overload: com.azure.cosmos.implementation.Index.Index*
  type: Constructor
  package: com.azure.cosmos.implementation
  summary: Constructor.
  syntax:
    content: " Index(IndexKind indexKind)"
    parameters:
    - id: indexKind
      type: com.azure.cosmos.implementation.IndexKind
      description: the kind of the index
- uid: com.azure.cosmos.implementation.Index.Index(com.fasterxml.jackson.databind.node.ObjectNode,com.azure.cosmos.implementation.IndexKind)
  id: Index(com.fasterxml.jackson.databind.node.ObjectNode,com.azure.cosmos.implementation.IndexKind)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: Index(ObjectNode objectNode, IndexKind indexKind)
  nameWithType: Index.Index(ObjectNode objectNode, IndexKind indexKind)
  fullName: com.azure.cosmos.implementation.Index.Index(ObjectNode objectNode, IndexKind indexKind)
  overload: com.azure.cosmos.implementation.Index.Index*
  type: Constructor
  package: com.azure.cosmos.implementation
  summary: Constructor.
  syntax:
    content: " Index(ObjectNode objectNode, IndexKind indexKind)"
    parameters:
    - id: objectNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: the json string that represents the index.
    - id: indexKind
      type: com.azure.cosmos.implementation.IndexKind
      description: the kind of the index
- uid: com.azure.cosmos.implementation.Index.Index(java.lang.String,com.azure.cosmos.implementation.IndexKind)
  id: Index(java.lang.String,com.azure.cosmos.implementation.IndexKind)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: Index(String jsonString, IndexKind indexKind)
  nameWithType: Index.Index(String jsonString, IndexKind indexKind)
  fullName: com.azure.cosmos.implementation.Index.Index(String jsonString, IndexKind indexKind)
  overload: com.azure.cosmos.implementation.Index.Index*
  type: Constructor
  package: com.azure.cosmos.implementation
  summary: Constructor.
  syntax:
    content: " Index(String jsonString, IndexKind indexKind)"
    parameters:
    - id: jsonString
      type: java.lang.String
      description: the json string that represents the index.
    - id: indexKind
      type: com.azure.cosmos.implementation.IndexKind
      description: the kind of the index
- uid: com.azure.cosmos.implementation.Index.hash(com.azure.cosmos.implementation.DataType)
  id: hash(com.azure.cosmos.implementation.DataType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: hash(DataType dataType)
  nameWithType: Index.hash(DataType dataType)
  fullName: com.azure.cosmos.implementation.Index.hash(DataType dataType)
  overload: com.azure.cosmos.implementation.Index.hash*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    Returns an instance of HashIndex class with specified DataType.


    Here is an example to create HashIndex instance passing in the DataType: `HashIndex hashIndex = Index.HASH(DataType.STRING);`
  syntax:
    content: public static HashIndex hash(DataType dataType)
    parameters:
    - id: dataType
      type: com.azure.cosmos.implementation.DataType
      description: specifies the target data type for the index path specification.
    return:
      type: com.azure.cosmos.implementation.HashIndex
      description: an instance of HashIndex type.
- uid: com.azure.cosmos.implementation.Index.hash(com.azure.cosmos.implementation.DataType,int)
  id: hash(com.azure.cosmos.implementation.DataType,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: hash(DataType dataType, int precision)
  nameWithType: Index.hash(DataType dataType, int precision)
  fullName: com.azure.cosmos.implementation.Index.hash(DataType dataType, int precision)
  overload: com.azure.cosmos.implementation.Index.hash*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    Returns an instance of HashIndex class with specified DataType and precision.


    Here is an example to create HashIndex instance passing in the DataType and precision:


    HashIndex hashIndex = Index.HASH(DataType.STRING, 3);
  syntax:
    content: public static HashIndex hash(DataType dataType, int precision)
    parameters:
    - id: dataType
      type: com.azure.cosmos.implementation.DataType
      description: specifies the target data type for the index path specification.
    - id: precision
      type: int
      description: specifies the precision to be used for the data type associated with this index.
    return:
      type: com.azure.cosmos.implementation.HashIndex
      description: an instance of HashIndex type.
- uid: com.azure.cosmos.implementation.Index.range(com.azure.cosmos.implementation.DataType)
  id: range(com.azure.cosmos.implementation.DataType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: range(DataType dataType)
  nameWithType: Index.range(DataType dataType)
  fullName: com.azure.cosmos.implementation.Index.range(DataType dataType)
  overload: com.azure.cosmos.implementation.Index.range*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    Returns an instance of RangeIndex class with specified DataType.


    Here is an example to create RangeIndex instance passing in the DataType: `RangeIndex rangeIndex = Index.range(DataType.NUMBER);`
  syntax:
    content: public static RangeIndex range(DataType dataType)
    parameters:
    - id: dataType
      type: com.azure.cosmos.implementation.DataType
      description: the data type.
    return:
      type: com.azure.cosmos.implementation.RangeIndex
      description: an instance of RangeIndex type.
- uid: com.azure.cosmos.implementation.Index.range(com.azure.cosmos.implementation.DataType,int)
  id: range(com.azure.cosmos.implementation.DataType,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: range(DataType dataType, int precision)
  nameWithType: Index.range(DataType dataType, int precision)
  fullName: com.azure.cosmos.implementation.Index.range(DataType dataType, int precision)
  overload: com.azure.cosmos.implementation.Index.range*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    Returns an instance of RangeIndex class with specified DataType and precision.


    Here is an example to create RangeIndex instance passing in the DataType and precision: `RangeIndex rangeIndex = Index.RANGE(DataType.NUMBER, -1);`
  syntax:
    content: public static RangeIndex range(DataType dataType, int precision)
    parameters:
    - id: dataType
      type: com.azure.cosmos.implementation.DataType
      description: specifies the target data type for the index path specification.
    - id: precision
      type: int
      description: specifies the precision to be used for the data type associated with this index.
    return:
      type: com.azure.cosmos.implementation.RangeIndex
      description: an instance of RangeIndex type.
- uid: com.azure.cosmos.implementation.Index.spatial(com.azure.cosmos.implementation.DataType)
  id: spatial(com.azure.cosmos.implementation.DataType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Index
  langs:
  - java
  name: spatial(DataType dataType)
  nameWithType: Index.spatial(DataType dataType)
  fullName: com.azure.cosmos.implementation.Index.spatial(DataType dataType)
  overload: com.azure.cosmos.implementation.Index.spatial*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    Returns an instance of SpatialIndex class with specified DataType.


    Here is an example to create SpatialIndex instance passing in the DataType:


    SpatialIndex spatialIndex = Index.SPATIAL(DataType.POINT);
  syntax:
    content: public static SpatialIndex spatial(DataType dataType)
    parameters:
    - id: dataType
      type: com.azure.cosmos.implementation.DataType
      description: specifies the target data type for the index path specification.
    return:
      type: com.azure.cosmos.implementation.SpatialIndex
      description: an instance of SpatialIndex type.
references:
- uid: com.azure.cosmos.implementation.IndexKind
  name: IndexKind
  nameWithType: IndexKind
  fullName: com.azure.cosmos.implementation.IndexKind
- uid: com.azure.cosmos.implementation.Index.Index*
  name: Index
  nameWithType: Index.Index
  fullName: com.azure.cosmos.implementation.Index.Index
  package: com.azure.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  spec.java:
  - uid: com.fasterxml.jackson.databind.node.ObjectNode
    name: ObjectNode
    fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.azure.cosmos.implementation.DataType
  name: DataType
  nameWithType: DataType
  fullName: com.azure.cosmos.implementation.DataType
- uid: com.azure.cosmos.implementation.RangeIndex
  name: RangeIndex
  nameWithType: RangeIndex
  fullName: com.azure.cosmos.implementation.RangeIndex
- uid: com.azure.cosmos.implementation.Index.range*
  name: range
  nameWithType: Index.range
  fullName: com.azure.cosmos.implementation.Index.range
  package: com.azure.cosmos.implementation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.HashIndex
  name: HashIndex
  nameWithType: HashIndex
  fullName: com.azure.cosmos.implementation.HashIndex
- uid: com.azure.cosmos.implementation.Index.hash*
  name: hash
  nameWithType: Index.hash
  fullName: com.azure.cosmos.implementation.Index.hash
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.SpatialIndex
  name: SpatialIndex
  nameWithType: SpatialIndex
  fullName: com.azure.cosmos.implementation.SpatialIndex
- uid: com.azure.cosmos.implementation.Index.spatial*
  name: spatial
  nameWithType: Index.spatial
  fullName: com.azure.cosmos.implementation.Index.spatial
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.azure.cosmos.implementation.JsonSerializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.JsonSerializable.toJson(com.azure.cosmos.implementation.SerializationFormattingPolicy)
  name: JsonSerializable.toJson(SerializationFormattingPolicy)
  nameWithType: JsonSerializable.toJson(SerializationFormattingPolicy)
  fullName: com.azure.cosmos.implementation.JsonSerializable.toJson(com.azure.cosmos.implementation.SerializationFormattingPolicy)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
  name: JsonSerializable.getObjectByPath(List<String>)
  nameWithType: JsonSerializable.getObjectByPath(List<String>)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
- uid: com.azure.cosmos.implementation.JsonSerializable.toJson()
  name: JsonSerializable.toJson()
  nameWithType: JsonSerializable.toJson()
  fullName: com.azure.cosmos.implementation.JsonSerializable.toJson()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>toObject(java.lang.Class<T>)
  name: JsonSerializable.<T>toObject(Class<T>)
  nameWithType: JsonSerializable.<T>toObject(Class<T>)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>toObject(java.lang.Class<T>)
- uid: com.azure.cosmos.implementation.JsonSerializable.getInt(java.lang.String)
  name: JsonSerializable.getInt(String)
  nameWithType: JsonSerializable.getInt(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getInt(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.getMap()
  name: JsonSerializable.getMap()
  nameWithType: JsonSerializable.getMap()
  fullName: com.azure.cosmos.implementation.JsonSerializable.getMap()
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getObject(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getObject(String,Class<T>,)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.implementation.JsonSerializable.getBoolean(java.lang.String)
  name: JsonSerializable.getBoolean(String)
  nameWithType: JsonSerializable.getBoolean(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getBoolean(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.has(java.lang.String)
  name: JsonSerializable.has(String)
  nameWithType: JsonSerializable.has(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.has(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.getDouble(java.lang.String)
  name: JsonSerializable.getDouble(String)
  nameWithType: JsonSerializable.getDouble(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getDouble(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.getObject(java.lang.String)
  name: JsonSerializable.getObject(String)
  nameWithType: JsonSerializable.getObject(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getObject(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.get(java.lang.String)
  name: JsonSerializable.get(String)
  nameWithType: JsonSerializable.get(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.get(java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.JsonSerializable.toString()
  name: JsonSerializable.toString()
  nameWithType: JsonSerializable.toString()
  fullName: com.azure.cosmos.implementation.JsonSerializable.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.cosmos.implementation.JsonSerializable.getLogger()
  name: JsonSerializable.getLogger()
  nameWithType: JsonSerializable.getLogger()
  fullName: com.azure.cosmos.implementation.JsonSerializable.getLogger()
- uid: com.azure.cosmos.implementation.JsonSerializable.getString(java.lang.String)
  name: JsonSerializable.getString(String)
  nameWithType: JsonSerializable.getString(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getString(java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.JsonSerializable.getLong(java.lang.String)
  name: JsonSerializable.getLong(String)
  nameWithType: JsonSerializable.getLong(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getLong(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer()
  name: JsonSerializable.serializeJsonToByteBuffer()
  nameWithType: JsonSerializable.serializeJsonToByteBuffer()
  fullName: com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer()
- uid: com.azure.cosmos.implementation.JsonSerializable.getPropertyBag()
  name: JsonSerializable.getPropertyBag()
  nameWithType: JsonSerializable.getPropertyBag()
  fullName: com.azure.cosmos.implementation.JsonSerializable.getPropertyBag()
- uid: com.azure.cosmos.implementation.JsonSerializable.remove(java.lang.String)
  name: JsonSerializable.remove(String)
  nameWithType: JsonSerializable.remove(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.remove(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>set(java.lang.String,T)
  name: JsonSerializable.<T>set(String,T)
  nameWithType: JsonSerializable.<T>set(String,T)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>set(java.lang.String,T)
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>getMap(java.lang.String)
  name: JsonSerializable.<T>getMap(String)
  nameWithType: JsonSerializable.<T>getMap(String)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>getMap(java.lang.String)
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getCollection(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getCollection(String,Class<T>,)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.implementation.JsonSerializable.populatePropertyBag()
  name: JsonSerializable.populatePropertyBag()
  nameWithType: JsonSerializable.populatePropertyBag()
  fullName: com.azure.cosmos.implementation.JsonSerializable.populatePropertyBag()
- uid: com.azure.cosmos.implementation.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)
  name: JsonSerializable.getValue(JsonNode)
  nameWithType: JsonSerializable.getValue(JsonNode)
  fullName: com.azure.cosmos.implementation.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)
- uid: com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper)
  name: JsonSerializable.serializeJsonToByteBuffer(ObjectMapper)
  nameWithType: JsonSerializable.serializeJsonToByteBuffer(ObjectMapper)
  fullName: com.azure.cosmos.implementation.JsonSerializable.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper)
- uid: com.azure.cosmos.implementation.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getList(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getList(String,Class<T>,)
  fullName: com.azure.cosmos.implementation.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.implementation.JsonSerializable.getObjectByPath(java.util.List
  name: JsonSerializable.getObjectByPath(List
  nameWithType: JsonSerializable.getObjectByPath(List
  fullName: com.azure.cosmos.implementation.JsonSerializable.getObjectByPath(java.util.List
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: T>toObject(java.lang.Class
  name: T>toObject(Class
  nameWithType: T>toObject(Class
  fullName: T>toObject(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: com.azure.cosmos.implementation.JsonSerializable.
  name: JsonSerializable.
  nameWithType: JsonSerializable.
  fullName: com.azure.cosmos.implementation.JsonSerializable.
- uid: T>,boolean...)
  name: T>,)
  nameWithType: T>,)
  fullName: T>,boolean...)
- uid: T>getObject(java.lang.String,java.lang.Class
  name: T>getObject(String,Class
  nameWithType: T>getObject(String,Class
  fullName: T>getObject(java.lang.String,java.lang.Class
- uid: T>set(java.lang.String,T)
  name: T>set(String,T)
  nameWithType: T>set(String,T)
  fullName: T>set(java.lang.String,T)
- uid: T>getMap(java.lang.String)
  name: T>getMap(String)
  nameWithType: T>getMap(String)
  fullName: T>getMap(java.lang.String)
- uid: T>getCollection(java.lang.String,java.lang.Class
  name: T>getCollection(String,Class
  nameWithType: T>getCollection(String,Class
  fullName: T>getCollection(java.lang.String,java.lang.Class
- uid: T>getList(java.lang.String,java.lang.Class
  name: T>getList(String,Class
  nameWithType: T>getList(String,Class
  fullName: T>getList(java.lang.String,java.lang.Class
