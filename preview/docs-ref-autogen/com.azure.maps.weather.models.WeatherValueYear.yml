### YamlMime:JavaType
uid: "com.azure.maps.weather.models.WeatherValueYear"
fullName: "com.azure.maps.weather.models.WeatherValueYear"
name: "WeatherValueYear"
nameWithType: "WeatherValueYear"
summary: "The Weather<wbr>Value<wbr>Year model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WeatherValueYear**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherValueYear?alt=com.azure.maps.weather.models.WeatherValueYear&text=WeatherValueYear\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.WeatherValueYear.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "WeatherValueYear.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Weather<wbr>Value<wbr>Year from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WeatherValueYear fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the WeatherValueYear."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of WeatherValueYear from the JsonReader."
  returns:
    description: "An instance of WeatherValueYear if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherValueYear?alt=com.azure.maps.weather.models.WeatherValueYear&text=WeatherValueYear\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherValueYear.getUnit()"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.getUnit()"
  name: "getUnit()"
  nameWithType: "WeatherValueYear.getUnit()"
  summary: "Get the unit property: Type of unit for the returned value."
  syntax: "public String getUnit()"
  desc: "Get the unit property: Type of unit for the returned value."
  returns:
    description: "the unit value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherValueYear.getUnitType()"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.getUnitType()"
  name: "getUnitType()"
  nameWithType: "WeatherValueYear.getUnitType()"
  summary: "Get the unit<wbr>Type property: Numeric ID value associated with the type of unit being displayed."
  syntax: "public Integer getUnitType()"
  desc: "Get the unitType property: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to \\[Weather services in Azure Maps\\](/azure/azure-maps/weather-services-concepts\\#daily-index-range-sets) for details."
  returns:
    description: "the unitType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.maps.weather.models.WeatherValueYear.getValue()"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.getValue()"
  name: "getValue()"
  nameWithType: "WeatherValueYear.getValue()"
  summary: "Get the value property: Rounded value."
  syntax: "public Float getValue()"
  desc: "Get the value property: Rounded value."
  returns:
    description: "the value value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
- uid: "com.azure.maps.weather.models.WeatherValueYear.getYear()"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.getYear()"
  name: "getYear()"
  nameWithType: "WeatherValueYear.getYear()"
  summary: "Get the year property: Year the value occurred."
  syntax: "public Integer getYear()"
  desc: "Get the year property: Year the value occurred."
  returns:
    description: "the year value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.maps.weather.models.WeatherValueYear.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.WeatherValueYear.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "WeatherValueYear.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The WeatherValueYear model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherValueYear?alt=com.azure.maps.weather.models.WeatherValueYear&text=WeatherValueYear\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.3
