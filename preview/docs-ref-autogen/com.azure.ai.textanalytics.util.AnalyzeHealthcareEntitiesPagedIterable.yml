### YamlMime:JavaType
uid: "com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable"
fullName: "com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable"
name: "AnalyzeHealthcareEntitiesPagedIterable"
nameWithType: "AnalyzeHealthcareEntitiesPagedIterable"
summary: "This class provides utility to iterate over <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResponse\"></xref> using <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> and <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> interfaces."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.IterableStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterator()"
- "com.azure.core.util.paging.ContinuablePagedIterable.stream()"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AnalyzeHealthcareEntitiesPagedIterable extends ContinuablePagedIterable<String,AnalyzeHealthcareEntitiesResultCollection,PagedResponse<AnalyzeHealthcareEntitiesResultCollection>>"
constructors:
- uid: "com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable.AnalyzeHealthcareEntitiesPagedIterable(com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedFlux)"
  fullName: "com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable.AnalyzeHealthcareEntitiesPagedIterable(AnalyzeHealthcareEntitiesPagedFlux pagedFlux)"
  name: "AnalyzeHealthcareEntitiesPagedIterable(AnalyzeHealthcareEntitiesPagedFlux pagedFlux)"
  nameWithType: "AnalyzeHealthcareEntitiesPagedIterable.AnalyzeHealthcareEntitiesPagedIterable(AnalyzeHealthcareEntitiesPagedFlux pagedFlux)"
  summary: "Creates instance given <xref uid=\"com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeHealthcareEntitiesPagedIterable\"></xref>."
  parameters:
  - description: "It used as iterable."
    name: "pagedFlux"
    type: "<xref href=\"com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedFlux?alt=com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedFlux&text=AnalyzeHealthcareEntitiesPagedFlux\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnalyzeHealthcareEntitiesPagedIterable(AnalyzeHealthcareEntitiesPagedFlux pagedFlux)"
  desc: "Creates instance given <xref uid=\"com.azure.ai.textanalytics.util.AnalyzeHealthcareEntitiesPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeHealthcareEntitiesPagedIterable\"></xref>."
type: "class"
desc: "This class provides utility to iterate over <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResponse\"></xref> using <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> and <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> interfaces."
metadata: {}
package: "com.azure.ai.textanalytics.util"
artifact: com.azure:azure-ai-textanalytics:5.2.0-beta.4
