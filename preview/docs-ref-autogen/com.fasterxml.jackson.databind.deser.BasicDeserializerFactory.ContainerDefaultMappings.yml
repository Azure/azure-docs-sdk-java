### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.ContainerDefaultMappings"
fullName: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.ContainerDefaultMappings"
name: "BasicDeserializerFactory.ContainerDefaultMappings"
nameWithType: "BasicDeserializerFactory.ContainerDefaultMappings"
summary: "Helper class to contain default mappings for abstract JDK <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> and <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> types. Separated out here to defer cost of creating lookups until mappings are actually needed."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "protected static class BasicDeserializerFactory.ContainerDefaultMappings"
constructors:
- "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.ContainerDefaultMappings.ContainerDefaultMappings()"
methods:
- "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.ContainerDefaultMappings.findCollectionFallback(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.ContainerDefaultMappings.findMapFallback(com.fasterxml.jackson.databind.JavaType)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
