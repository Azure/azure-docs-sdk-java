### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  id: Platform
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models
  children:
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux()
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(com.azure.resourcemanager.containerregistry.models.Architecture)
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows()
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(com.azure.resourcemanager.containerregistry.models.Architecture)
  - com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  langs:
  - java
  name: RegistryTask.DefinitionStages.Platform
  nameWithType: RegistryTask.DefinitionStages.Platform
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  type: Interface
  package: com.azure.resourcemanager.containerregistry.models
  summary: The stage of the container registry task definition allowing to specify the platform.
  syntax:
    content: public static interface RegistryTask.DefinitionStages.Platform
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux()
  id: withLinux()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withLinux()
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux()
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux()
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Linux OS system for the platform.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withLinux()
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(com.azure.resourcemanager.containerregistry.models.Architecture)
  id: withLinux(com.azure.resourcemanager.containerregistry.models.Architecture)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withLinux(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Linux OS system and architecture for the platform.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withLinux(Architecture architecture)
    parameters:
    - id: architecture
      type: com.azure.resourcemanager.containerregistry.models.Architecture
      description: the CPU architecture.
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  id: withLinux(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withLinux(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Linux OS system, architecture, and CPU variant.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withLinux(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.azure.resourcemanager.containerregistry.models.Architecture
      description: the CPU architecture.
    - id: variant
      type: com.azure.resourcemanager.containerregistry.models.Variant
      description: the CPU variant.
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  id: withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withPlatform(PlatformProperties platformProperties)
  nameWithType: RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a platform.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withPlatform(PlatformProperties platformProperties)
    parameters:
    - id: platformProperties
      type: com.azure.resourcemanager.containerregistry.models.PlatformProperties
      description: the properties of the platform.
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows()
  id: withWindows()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withWindows()
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows()
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows()
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Windows OS system for the platform.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withWindows()
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(com.azure.resourcemanager.containerregistry.models.Architecture)
  id: withWindows(com.azure.resourcemanager.containerregistry.models.Architecture)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Windows OS system and architecture for the platform.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withWindows(Architecture architecture)
    parameters:
    - id: architecture
      type: com.azure.resourcemanager.containerregistry.models.Architecture
      description: the CPU architecture
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  id: withWindows(com.azure.resourcemanager.containerregistry.models.Architecture,com.azure.resourcemanager.containerregistry.models.Variant)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform
  langs:
  - java
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  overload: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: The function that specifies a Windows OS system, architecture, and CPU variant.
  syntax:
    content: public abstract RegistryTask.DefinitionStages.TaskStepType withWindows(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.azure.resourcemanager.containerregistry.models.Architecture
      description: the CPU architecture.
    - id: variant
      type: com.azure.resourcemanager.containerregistry.models.Variant
      description: the CPU variant.
    return:
      type: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
      description: the next stage of the container registry task definition.
references:
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
  name: RegistryTask.DefinitionStages.TaskStepType
  nameWithType: RegistryTask.DefinitionStages.TaskStepType
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.TaskStepType
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux*
  name: withLinux
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withLinux
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows*
  name: withWindows
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withWindows
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.Architecture
  name: Architecture
  nameWithType: Architecture
  fullName: com.azure.resourcemanager.containerregistry.models.Architecture
- uid: com.azure.resourcemanager.containerregistry.models.Variant
  name: Variant
  nameWithType: Variant
  fullName: com.azure.resourcemanager.containerregistry.models.Variant
- uid: com.azure.resourcemanager.containerregistry.models.PlatformProperties
  name: PlatformProperties
  nameWithType: PlatformProperties
  fullName: com.azure.resourcemanager.containerregistry.models.PlatformProperties
- uid: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform*
  name: withPlatform
  nameWithType: RegistryTask.DefinitionStages.Platform.withPlatform
  fullName: com.azure.resourcemanager.containerregistry.models.RegistryTask.DefinitionStages.Platform.withPlatform
  package: com.azure.resourcemanager.containerregistry.models
