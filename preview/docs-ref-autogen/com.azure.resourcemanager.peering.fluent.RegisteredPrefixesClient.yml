### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient"
fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient"
name: "RegisteredPrefixesClient"
nameWithType: "RegisteredPrefixesClient"
summary: "An instance of this class provides access to all the operations defined in Registered<wbr>Prefixes<wbr>Client."
syntax: "public interface RegisteredPrefixesClient"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.createOrUpdate(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix)"
  name: "createOrUpdate(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix)"
  nameWithType: "RegisteredPrefixesClient.createOrUpdate(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix)"
  summary: "Creates a new registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create a registered prefix."
    name: "registeredPrefix"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredPrefixInner createOrUpdate(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix)"
  desc: "Creates a new registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the customer's prefix that is registered by the peering service provider."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix, Context context)"
  nameWithType: "RegisteredPrefixesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix, Context context)"
  summary: "Creates a new registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create a registered prefix."
    name: "registeredPrefix"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredPrefixInner> createOrUpdateWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, PeeringRegisteredPrefixInner registeredPrefix, Context context)"
  desc: "Creates a new registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the customer's prefix that is registered by the peering service provider."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  name: "delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  nameWithType: "RegisteredPrefixesClient.delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  nameWithType: "RegisteredPrefixesClient.deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  name: "get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  nameWithType: "RegisteredPrefixesClient.get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredPrefixInner get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  name: "getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  nameWithType: "RegisteredPrefixesClient.getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredPrefixInner> getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.listByPeering(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.listByPeering(String resourceGroupName, String peeringName)"
  name: "listByPeering(String resourceGroupName, String peeringName)"
  nameWithType: "RegisteredPrefixesClient.listByPeering(String resourceGroupName, String peeringName)"
  summary: "Lists all registered prefixes under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredPrefixInner> listByPeering(String resourceGroupName, String peeringName)"
  desc: "Lists all registered prefixes under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.listByPeering(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.RegisteredPrefixesClient.listByPeering(String resourceGroupName, String peeringName, Context context)"
  name: "listByPeering(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "RegisteredPrefixesClient.listByPeering(String resourceGroupName, String peeringName, Context context)"
  summary: "Lists all registered prefixes under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredPrefixInner> listByPeering(String resourceGroupName, String peeringName, Context context)"
  desc: "Lists all registered prefixes under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredPrefixInner&text=PeeringRegisteredPrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in RegisteredPrefixesClient."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
