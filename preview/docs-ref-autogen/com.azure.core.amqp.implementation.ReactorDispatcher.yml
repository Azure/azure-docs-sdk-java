### YamlMime:JavaType
uid: "com.azure.core.amqp.implementation.ReactorDispatcher"
fullName: "com.azure.core.amqp.implementation.ReactorDispatcher"
name: "ReactorDispatcher"
nameWithType: "ReactorDispatcher"
summary: "<xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Proton\"></xref> APIs should be on the Reactor Thread. <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref> doesn't support APIs like send() out-of-box - which could potentially run on different thread to that of the Reactor thread.\n\nThe following utility class is used to generate an Event to hook into <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref>'s event delegation pattern. It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Pipe\"></xref> as the IO on which Reactor listens to.\n\nCardinality: Multiple <xref uid=\"com.azure.core.amqp.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReactorDispatcher\"></xref>'s could be attached to 1 <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref>. Each <xref uid=\"com.azure.core.amqp.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReactorDispatcher\"></xref> should be initialized synchronously - as it calls API in <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reactor\"></xref> which is not thread-safe."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ReactorDispatcher"
constructors:
- "com.azure.core.amqp.implementation.ReactorDispatcher.ReactorDispatcher(org.apache.qpid.proton.reactor.Reactor)"
methods:
- "com.azure.core.amqp.implementation.ReactorDispatcher.invoke(java.lang.Runnable)"
- "com.azure.core.amqp.implementation.ReactorDispatcher.invoke(java.lang.Runnable,java.time.Duration)"
type: "class"
metadata: {}
package: "com.azure.core.amqp.implementation"
artifact: com.azure:azure-core-amqp:1.7.0-beta.2
