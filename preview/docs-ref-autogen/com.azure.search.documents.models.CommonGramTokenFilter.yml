### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.models.CommonGramTokenFilter"
  id: "CommonGramTokenFilter"
  parent: "com.azure.search.documents.models"
  children:
  - "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter()"
  - "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords()"
  - "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase()"
  - "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode()"
  - "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords(java.util.List<java.lang.String>)"
  - "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase(java.lang.Boolean)"
  - "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode(java.lang.Boolean)"
  langs:
  - "java"
  name: "CommonGramTokenFilter"
  nameWithType: "CommonGramTokenFilter"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter"
  type: "Class"
  package: "com.azure.search.documents.models"
  summary: "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene."
  syntax:
    content: "public final class CommonGramTokenFilter extends TokenFilter"
  inheritance:
  - "java.lang.Object"
  - "com.azure.search.documents.models.TokenFilter"
  inheritedMembers:
  - "com.azure.search.documents.models.TokenFilter.getName()"
  - "com.azure.search.documents.models.TokenFilter.setName(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter()"
  id: "CommonGramTokenFilter()"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "CommonGramTokenFilter()"
  nameWithType: "CommonGramTokenFilter.CommonGramTokenFilter()"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter()"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter*"
  type: "Constructor"
  package: "com.azure.search.documents.models"
  syntax:
    content: "public CommonGramTokenFilter()"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords()"
  id: "getCommonWords()"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "getCommonWords()"
  nameWithType: "CommonGramTokenFilter.getCommonWords()"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords()"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the commonWords property: The set of common words."
  syntax:
    content: "public List<String> getCommonWords()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the commonWords value."
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase()"
  id: "isIgnoreCase()"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "isIgnoreCase()"
  nameWithType: "CommonGramTokenFilter.isIgnoreCase()"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase()"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the ignoreCase property: A value indicating whether common words matching will be case insensitive. Default is false."
  syntax:
    content: "public Boolean isIgnoreCase()"
    return:
      type: "java.lang.Boolean"
      description: "the ignoreCase value."
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode()"
  id: "isUseQueryMode()"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "isUseQueryMode()"
  nameWithType: "CommonGramTokenFilter.isUseQueryMode()"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode()"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the useQueryMode property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  syntax:
    content: "public Boolean isUseQueryMode()"
    return:
      type: "java.lang.Boolean"
      description: "the useQueryMode value."
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords(java.util.List<java.lang.String>)"
  id: "setCommonWords(java.util.List<java.lang.String>)"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "setCommonWords(List<String> commonWords)"
  nameWithType: "CommonGramTokenFilter.setCommonWords(List<String> commonWords)"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords(List<String> commonWords)"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the commonWords property: The set of common words."
  syntax:
    content: "public CommonGramTokenFilter setCommonWords(List<String> commonWords)"
    parameters:
    - id: "commonWords"
      type: "java.util.List<java.lang.String>"
      description: "the commonWords value to set."
    return:
      type: "com.azure.search.documents.models.CommonGramTokenFilter"
      description: "the CommonGramTokenFilter object itself."
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase(java.lang.Boolean)"
  id: "setIgnoreCase(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "setIgnoreCase(Boolean ignoreCase)"
  nameWithType: "CommonGramTokenFilter.setIgnoreCase(Boolean ignoreCase)"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase(Boolean ignoreCase)"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the ignoreCase property: A value indicating whether common words matching will be case insensitive. Default is false."
  syntax:
    content: "public CommonGramTokenFilter setIgnoreCase(Boolean ignoreCase)"
    parameters:
    - id: "ignoreCase"
      type: "java.lang.Boolean"
      description: "the ignoreCase value to set."
    return:
      type: "com.azure.search.documents.models.CommonGramTokenFilter"
      description: "the CommonGramTokenFilter object itself."
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode(java.lang.Boolean)"
  id: "setUseQueryMode(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.CommonGramTokenFilter"
  langs:
  - "java"
  name: "setUseQueryMode(Boolean useQueryMode)"
  nameWithType: "CommonGramTokenFilter.setUseQueryMode(Boolean useQueryMode)"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode(Boolean useQueryMode)"
  overload: "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the useQueryMode property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  syntax:
    content: "public CommonGramTokenFilter setUseQueryMode(Boolean useQueryMode)"
    parameters:
    - id: "useQueryMode"
      type: "java.lang.Boolean"
      description: "the useQueryMode value to set."
    return:
      type: "com.azure.search.documents.models.CommonGramTokenFilter"
      description: "the CommonGramTokenFilter object itself."
references:
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter*"
  name: "CommonGramTokenFilter"
  nameWithType: "CommonGramTokenFilter.CommonGramTokenFilter"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.CommonGramTokenFilter"
  package: "com.azure.search.documents.models"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords*"
  name: "getCommonWords"
  nameWithType: "CommonGramTokenFilter.getCommonWords"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.getCommonWords"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords*"
  name: "setCommonWords"
  nameWithType: "CommonGramTokenFilter.setCommonWords"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setCommonWords"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase*"
  name: "isIgnoreCase"
  nameWithType: "CommonGramTokenFilter.isIgnoreCase"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.isIgnoreCase"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase*"
  name: "setIgnoreCase"
  nameWithType: "CommonGramTokenFilter.setIgnoreCase"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setIgnoreCase"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode*"
  name: "isUseQueryMode"
  nameWithType: "CommonGramTokenFilter.isUseQueryMode"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.isUseQueryMode"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode*"
  name: "setUseQueryMode"
  nameWithType: "CommonGramTokenFilter.setUseQueryMode"
  fullName: "com.azure.search.documents.models.CommonGramTokenFilter.setUseQueryMode"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.TokenFilter"
  name: "TokenFilter"
  nameWithType: "TokenFilter"
  fullName: "com.azure.search.documents.models.TokenFilter"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.search.documents.models.TokenFilter.getName()"
  name: "TokenFilter.getName()"
  nameWithType: "TokenFilter.getName()"
  fullName: "com.azure.search.documents.models.TokenFilter.getName()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.search.documents.models.TokenFilter.setName(java.lang.String)"
  name: "TokenFilter.setName(String)"
  nameWithType: "TokenFilter.setName(String)"
  fullName: "com.azure.search.documents.models.TokenFilter.setName(java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
