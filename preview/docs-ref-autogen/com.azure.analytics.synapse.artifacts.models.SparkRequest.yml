### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest"
fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest"
name: "SparkRequest"
nameWithType: "SparkRequest"
summary: "The Spark<wbr>Request model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkRequest"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.SparkRequest()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.SparkRequest()"
  name: "SparkRequest()"
  nameWithType: "SparkRequest.SparkRequest()"
  syntax: "public SparkRequest()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getArchives()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getArchives()"
  name: "getArchives()"
  nameWithType: "SparkRequest.getArchives()"
  summary: "Get the archives property: The archives property."
  syntax: "public List<String> getArchives()"
  desc: "Get the archives property: The archives property."
  returns:
    description: "the archives value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getArguments()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getArguments()"
  name: "getArguments()"
  nameWithType: "SparkRequest.getArguments()"
  summary: "Get the arguments property: The args property."
  syntax: "public List<String> getArguments()"
  desc: "Get the arguments property: The args property."
  returns:
    description: "the arguments value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getClassName()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getClassName()"
  name: "getClassName()"
  nameWithType: "SparkRequest.getClassName()"
  summary: "Get the class<wbr>Name property: The class<wbr>Name property."
  syntax: "public String getClassName()"
  desc: "Get the className property: The className property."
  returns:
    description: "the className value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getConfiguration()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getConfiguration()"
  name: "getConfiguration()"
  nameWithType: "SparkRequest.getConfiguration()"
  summary: "Get the configuration property: Dictionary of <string>."
  syntax: "public Map<String,String> getConfiguration()"
  desc: "Get the configuration property: Dictionary of <string>."
  returns:
    description: "the configuration value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getDriverCores()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getDriverCores()"
  name: "getDriverCores()"
  nameWithType: "SparkRequest.getDriverCores()"
  summary: "Get the driver<wbr>Cores property: The driver<wbr>Cores property."
  syntax: "public Integer getDriverCores()"
  desc: "Get the driverCores property: The driverCores property."
  returns:
    description: "the driverCores value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getDriverMemory()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getDriverMemory()"
  name: "getDriverMemory()"
  nameWithType: "SparkRequest.getDriverMemory()"
  summary: "Get the driver<wbr>Memory property: The driver<wbr>Memory property."
  syntax: "public String getDriverMemory()"
  desc: "Get the driverMemory property: The driverMemory property."
  returns:
    description: "the driverMemory value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorCores()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorCores()"
  name: "getExecutorCores()"
  nameWithType: "SparkRequest.getExecutorCores()"
  summary: "Get the executor<wbr>Cores property: The executor<wbr>Cores property."
  syntax: "public Integer getExecutorCores()"
  desc: "Get the executorCores property: The executorCores property."
  returns:
    description: "the executorCores value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorCount()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorCount()"
  name: "getExecutorCount()"
  nameWithType: "SparkRequest.getExecutorCount()"
  summary: "Get the executor<wbr>Count property: The num<wbr>Executors property."
  syntax: "public Integer getExecutorCount()"
  desc: "Get the executorCount property: The numExecutors property."
  returns:
    description: "the executorCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorMemory()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getExecutorMemory()"
  name: "getExecutorMemory()"
  nameWithType: "SparkRequest.getExecutorMemory()"
  summary: "Get the executor<wbr>Memory property: The executor<wbr>Memory property."
  syntax: "public String getExecutorMemory()"
  desc: "Get the executorMemory property: The executorMemory property."
  returns:
    description: "the executorMemory value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getFile()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getFile()"
  name: "getFile()"
  nameWithType: "SparkRequest.getFile()"
  summary: "Get the file property: The file property."
  syntax: "public String getFile()"
  desc: "Get the file property: The file property."
  returns:
    description: "the file value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getFiles()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getFiles()"
  name: "getFiles()"
  nameWithType: "SparkRequest.getFiles()"
  summary: "Get the files property: The files property."
  syntax: "public List<String> getFiles()"
  desc: "Get the files property: The files property."
  returns:
    description: "the files value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getJars()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getJars()"
  name: "getJars()"
  nameWithType: "SparkRequest.getJars()"
  summary: "Get the jars property: The jars property."
  syntax: "public List<String> getJars()"
  desc: "Get the jars property: The jars property."
  returns:
    description: "the jars value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getName()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getName()"
  name: "getName()"
  nameWithType: "SparkRequest.getName()"
  summary: "Get the name property: The name property."
  syntax: "public String getName()"
  desc: "Get the name property: The name property."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getPythonFiles()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.getPythonFiles()"
  name: "getPythonFiles()"
  nameWithType: "SparkRequest.getPythonFiles()"
  summary: "Get the python<wbr>Files property: The py<wbr>Files property."
  syntax: "public List<String> getPythonFiles()"
  desc: "Get the pythonFiles property: The pyFiles property."
  returns:
    description: "the pythonFiles value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setArchives(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setArchives(List<String> archives)"
  name: "setArchives(List<String> archives)"
  nameWithType: "SparkRequest.setArchives(List<String> archives)"
  summary: "Set the archives property: The archives property."
  parameters:
  - description: "the archives value to set."
    name: "archives"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setArchives(List<String> archives)"
  desc: "Set the archives property: The archives property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setArguments(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setArguments(List<String> arguments)"
  name: "setArguments(List<String> arguments)"
  nameWithType: "SparkRequest.setArguments(List<String> arguments)"
  summary: "Set the arguments property: The args property."
  parameters:
  - description: "the arguments value to set."
    name: "arguments"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setArguments(List<String> arguments)"
  desc: "Set the arguments property: The args property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setClassName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setClassName(String className)"
  name: "setClassName(String className)"
  nameWithType: "SparkRequest.setClassName(String className)"
  summary: "Set the class<wbr>Name property: The class<wbr>Name property."
  parameters:
  - description: "the className value to set."
    name: "className"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setClassName(String className)"
  desc: "Set the className property: The className property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setConfiguration(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setConfiguration(Map<String,String> configuration)"
  name: "setConfiguration(Map<String,String> configuration)"
  nameWithType: "SparkRequest.setConfiguration(Map<String,String> configuration)"
  summary: "Set the configuration property: Dictionary of <string>."
  parameters:
  - description: "the configuration value to set."
    name: "configuration"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setConfiguration(Map<String,String> configuration)"
  desc: "Set the configuration property: Dictionary of <string>."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setDriverCores(java.lang.Integer)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setDriverCores(Integer driverCores)"
  name: "setDriverCores(Integer driverCores)"
  nameWithType: "SparkRequest.setDriverCores(Integer driverCores)"
  summary: "Set the driver<wbr>Cores property: The driver<wbr>Cores property."
  parameters:
  - description: "the driverCores value to set."
    name: "driverCores"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setDriverCores(Integer driverCores)"
  desc: "Set the driverCores property: The driverCores property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setDriverMemory(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setDriverMemory(String driverMemory)"
  name: "setDriverMemory(String driverMemory)"
  nameWithType: "SparkRequest.setDriverMemory(String driverMemory)"
  summary: "Set the driver<wbr>Memory property: The driver<wbr>Memory property."
  parameters:
  - description: "the driverMemory value to set."
    name: "driverMemory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setDriverMemory(String driverMemory)"
  desc: "Set the driverMemory property: The driverMemory property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorCores(java.lang.Integer)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorCores(Integer executorCores)"
  name: "setExecutorCores(Integer executorCores)"
  nameWithType: "SparkRequest.setExecutorCores(Integer executorCores)"
  summary: "Set the executor<wbr>Cores property: The executor<wbr>Cores property."
  parameters:
  - description: "the executorCores value to set."
    name: "executorCores"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setExecutorCores(Integer executorCores)"
  desc: "Set the executorCores property: The executorCores property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorCount(java.lang.Integer)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorCount(Integer executorCount)"
  name: "setExecutorCount(Integer executorCount)"
  nameWithType: "SparkRequest.setExecutorCount(Integer executorCount)"
  summary: "Set the executor<wbr>Count property: The num<wbr>Executors property."
  parameters:
  - description: "the executorCount value to set."
    name: "executorCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setExecutorCount(Integer executorCount)"
  desc: "Set the executorCount property: The numExecutors property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorMemory(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setExecutorMemory(String executorMemory)"
  name: "setExecutorMemory(String executorMemory)"
  nameWithType: "SparkRequest.setExecutorMemory(String executorMemory)"
  summary: "Set the executor<wbr>Memory property: The executor<wbr>Memory property."
  parameters:
  - description: "the executorMemory value to set."
    name: "executorMemory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setExecutorMemory(String executorMemory)"
  desc: "Set the executorMemory property: The executorMemory property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setFile(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setFile(String file)"
  name: "setFile(String file)"
  nameWithType: "SparkRequest.setFile(String file)"
  summary: "Set the file property: The file property."
  parameters:
  - description: "the file value to set."
    name: "file"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setFile(String file)"
  desc: "Set the file property: The file property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setFiles(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setFiles(List<String> files)"
  name: "setFiles(List<String> files)"
  nameWithType: "SparkRequest.setFiles(List<String> files)"
  summary: "Set the files property: The files property."
  parameters:
  - description: "the files value to set."
    name: "files"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setFiles(List<String> files)"
  desc: "Set the files property: The files property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setJars(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setJars(List<String> jars)"
  name: "setJars(List<String> jars)"
  nameWithType: "SparkRequest.setJars(List<String> jars)"
  summary: "Set the jars property: The jars property."
  parameters:
  - description: "the jars value to set."
    name: "jars"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setJars(List<String> jars)"
  desc: "Set the jars property: The jars property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setName(String name)"
  name: "setName(String name)"
  nameWithType: "SparkRequest.setName(String name)"
  summary: "Set the name property: The name property."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkRequest setName(String name)"
  desc: "Set the name property: The name property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setPythonFiles(java.util.List<java.lang.String>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkRequest.setPythonFiles(List<String> pythonFiles)"
  name: "setPythonFiles(List<String> pythonFiles)"
  nameWithType: "SparkRequest.setPythonFiles(List<String> pythonFiles)"
  summary: "Set the python<wbr>Files property: The py<wbr>Files property."
  parameters:
  - description: "the pythonFiles value to set."
    name: "pythonFiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkRequest setPythonFiles(List<String> pythonFiles)"
  desc: "Set the pythonFiles property: The pyFiles property."
  returns:
    description: "the SparkRequest object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkRequest?alt=com.azure.analytics.synapse.artifacts.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SparkRequest model."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
