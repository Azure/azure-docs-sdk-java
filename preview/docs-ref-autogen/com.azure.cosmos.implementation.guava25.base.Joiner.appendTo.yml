### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo*"
fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo"
name: "<A>appendTo"
nameWithType: "Joiner.<A>appendTo"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Iterable<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A appendable, Iterable<?> parts)"
  name: "<A>appendTo(A appendable, Iterable<?> parts)"
  nameWithType: "Joiner.<A>appendTo(A appendable, Iterable<?> parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `appendable`."
  parameters:
  - name: "appendable"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public A <A>appendTo(A appendable, Iterable<?> parts)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Object,java.lang.Object,java.lang.Object...)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A appendable, Object first, Object second, Object[] rest)"
  name: "<A>appendTo(A appendable, Object first, Object second, Object[] rest)"
  nameWithType: "Joiner.<A>appendTo(A appendable, Object first, Object second, Object[] rest)"
  summary: "Appends to `appendable` the string representation of each of the remaining arguments."
  parameters:
  - name: "appendable"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
  - name: "first"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "second"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "rest"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final A <A>appendTo(A appendable, Object first, Object second, Object[] rest)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Object[])"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A appendable, Object[] parts)"
  name: "<A>appendTo(A appendable, Object[] parts)"
  nameWithType: "Joiner.<A>appendTo(A appendable, Object[] parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `appendable`."
  parameters:
  - name: "appendable"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final A <A>appendTo(A appendable, Object[] parts)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.util.Iterator<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A appendable, Iterator<?> parts)"
  name: "<A>appendTo(A appendable, Iterator<?> parts)"
  nameWithType: "Joiner.<A>appendTo(A appendable, Iterator<?> parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `appendable`."
  parameters:
  - name: "appendable"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public A <A>appendTo(A appendable, Iterator<?> parts)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Iterable<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(StringBuilder builder, Iterable<?> parts)"
  name: "appendTo(StringBuilder builder, Iterable<?> parts)"
  nameWithType: "Joiner.appendTo(StringBuilder builder, Iterable<?> parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `builder`. Identical to <xref uid=\"#appendTo(Appendable,\n Iterable)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#appendTo(Appendable,\n Iterable)\"></xref>, except that it does not throw <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>."
  parameters:
  - name: "builder"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final StringBuilder appendTo(StringBuilder builder, Iterable<?> parts)"
  returns:
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object...)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(StringBuilder builder, Object first, Object second, Object[] rest)"
  name: "appendTo(StringBuilder builder, Object first, Object second, Object[] rest)"
  nameWithType: "Joiner.appendTo(StringBuilder builder, Object first, Object second, Object[] rest)"
  summary: "Appends to `builder` the string representation of each of the remaining arguments. Identical to <xref uid=\"com.azure.cosmos.implementation.guava25.base.Joiner.appendTo*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#appendTo(Appendable, Object, Object, Object...)\"></xref>, except that it does not throw <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>."
  parameters:
  - name: "builder"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "first"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "second"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "rest"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final StringBuilder appendTo(StringBuilder builder, Object first, Object second, Object[] rest)"
  returns:
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Object[])"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(StringBuilder builder, Object[] parts)"
  name: "appendTo(StringBuilder builder, Object[] parts)"
  nameWithType: "Joiner.appendTo(StringBuilder builder, Object[] parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `builder`. Identical to <xref uid=\"#appendTo(Appendable,\n Iterable)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#appendTo(Appendable,\n Iterable)\"></xref>, except that it does not throw <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>."
  parameters:
  - name: "builder"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final StringBuilder appendTo(StringBuilder builder, Object[] parts)"
  returns:
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.util.Iterator<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(StringBuilder builder, Iterator<?> parts)"
  name: "appendTo(StringBuilder builder, Iterator<?> parts)"
  nameWithType: "Joiner.appendTo(StringBuilder builder, Iterator<?> parts)"
  summary: "Appends the string representation of each of `parts`, using the previously configured separator between each, to `builder`. Identical to <xref uid=\"#appendTo(Appendable,\n Iterable)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#appendTo(Appendable,\n Iterable)\"></xref>, except that it does not throw <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>."
  parameters:
  - name: "builder"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "parts"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final StringBuilder appendTo(StringBuilder builder, Iterator<?> parts)"
  returns:
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
