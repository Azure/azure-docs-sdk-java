### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions"
fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions"
name: "PathRemoveAccessControlRecursiveOptions"
nameWithType: "PathRemoveAccessControlRecursiveOptions"
summary: "Optional parameters for Remove Access Control Recursive."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PathRemoveAccessControlRecursiveOptions"
constructors:
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)"
  name: "PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)"
  summary: "Constructs a new options object."
  parameters:
  - description: "The POSIX access control list for the file or directory."
    name: "accessControlList"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry?alt=com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry&text=PathRemoveAccessControlEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)"
  desc: "Constructs a new options object."
methods:
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList()"
  name: "getAccessControlList()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.getAccessControlList()"
  summary: "Returns the POSIX access control list for the file or directory."
  syntax: "public List<PathRemoveAccessControlEntry> getAccessControlList()"
  desc: "Returns the POSIX access control list for the file or directory."
  returns:
    description: "The POSIX access control list for the file or directory."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry?alt=com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry&text=PathRemoveAccessControlEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize()"
  name: "getBatchSize()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.getBatchSize()"
  summary: "Gets the batch size."
  syntax: "public Integer getBatchSize()"
  desc: "Gets the batch size.\n\nIf data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000."
  returns:
    description: "The size of the batch."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken()"
  name: "getContinuationToken()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.getContinuationToken()"
  summary: "Returns a token that can be used to resume previously stopped operation."
  syntax: "public String getContinuationToken()"
  desc: "Returns a token that can be used to resume previously stopped operation."
  returns:
    description: "A token that can be used to resume previously stopped operation."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches()"
  name: "getMaxBatches()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.getMaxBatches()"
  summary: "Gets the maximum number of batches that single change Access Control operation can execute."
  syntax: "public Integer getMaxBatches()"
  desc: "Gets the maximum number of batches that single change Access Control operation can execute.\n\nIf maximum is reached before all subpaths are processed then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end. Operation may \\* also halt if an error is hit and `continueOnFailure` is false."
  returns:
    description: "The maximum number of batches."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler()"
  name: "getProgressHandler()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.getProgressHandler()"
  summary: "Gets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control."
  syntax: "public Consumer<Response<AccessControlChanges>> getProgressHandler()"
  desc: "Gets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control."
  returns:
    description: "The progress handler."
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.AccessControlChanges?alt=com.azure.storage.file.datalake.models.AccessControlChanges&text=AccessControlChanges\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()"
  name: "isContinueOnFailure()"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()"
  summary: "Returns if the operation should continue on user failure."
  syntax: "public boolean isContinueOnFailure()"
  desc: "Returns if the operation should continue on user failure.\n\nIf set to false, the operation will terminate quickly on encountering user failures. If true, the operation will ignore user failures and proceed with the operation on other sub-entities of the directory."
  returns:
    description: "If the operation should continue on user failure."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize(java.lang.Integer)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize(Integer batchSize)"
  name: "setBatchSize(Integer batchSize)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.setBatchSize(Integer batchSize)"
  summary: "Sets the batch size."
  parameters:
  - description: "The size of the batch."
    name: "batchSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathRemoveAccessControlRecursiveOptions setBatchSize(Integer batchSize)"
  desc: "Sets the batch size.\n\nIf data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000."
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions&text=PathRemoveAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken(String continuationToken)"
  name: "setContinuationToken(String continuationToken)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.setContinuationToken(String continuationToken)"
  summary: "Sets a token that can be used to resume previously stopped operation."
  parameters:
  - description: "A token that can be used to resume previously stopped operation."
    name: "continuationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathRemoveAccessControlRecursiveOptions setContinuationToken(String continuationToken)"
  desc: "Sets a token that can be used to resume previously stopped operation."
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions&text=PathRemoveAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)"
  name: "setContinueOnFailure(boolean continueOnFailure)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)"
  summary: "Sets if the operation should continue on user failure."
  parameters:
  - description: "Whether the operation should continue on user failure."
    name: "continueOnFailure"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathRemoveAccessControlRecursiveOptions setContinueOnFailure(boolean continueOnFailure)"
  desc: "Sets if the operation should continue on user failure.\n\nIf set to false, the operation will terminate quickly on encountering user failures. If true, the operation will ignore user failures and proceed with the operation on other sub-entities of the directory."
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions&text=PathRemoveAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches(java.lang.Integer)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches(Integer maxBatches)"
  name: "setMaxBatches(Integer maxBatches)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.setMaxBatches(Integer maxBatches)"
  summary: "Sets the maximum number of batches that single change Access Control operation can execute."
  parameters:
  - description: "The maximum number of batches."
    name: "maxBatches"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathRemoveAccessControlRecursiveOptions setMaxBatches(Integer maxBatches)"
  desc: "Sets the maximum number of batches that single change Access Control operation can execute.\n\nIf maximum is reached before all subpaths are processed then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end. Operation may \\* also halt if an error is hit and `continueOnFailure` is false."
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions&text=PathRemoveAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler(java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>)"
  fullName: "com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)"
  name: "setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)"
  nameWithType: "PathRemoveAccessControlRecursiveOptions.setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)"
  summary: "Sets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control."
  parameters:
  - description: "The progress handler."
    name: "progressHandler"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.AccessControlChanges?alt=com.azure.storage.file.datalake.models.AccessControlChanges&text=AccessControlChanges\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public PathRemoveAccessControlRecursiveOptions setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)"
  desc: "Sets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control."
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions&text=PathRemoveAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Optional parameters for Remove Access Control Recursive."
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
