### YamlMime:ManagedReference
items:
- uid: org.slf4j.helpers.BasicMarker
  id: BasicMarker
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers
  children:
  - org.slf4j.helpers.BasicMarker.add(org.slf4j.Marker)
  - org.slf4j.helpers.BasicMarker.contains(java.lang.String)
  - org.slf4j.helpers.BasicMarker.contains(org.slf4j.Marker)
  - org.slf4j.helpers.BasicMarker.equals(java.lang.Object)
  - org.slf4j.helpers.BasicMarker.getName()
  - org.slf4j.helpers.BasicMarker.hasChildren()
  - org.slf4j.helpers.BasicMarker.hasReferences()
  - org.slf4j.helpers.BasicMarker.hashCode()
  - org.slf4j.helpers.BasicMarker.iterator()
  - org.slf4j.helpers.BasicMarker.remove(org.slf4j.Marker)
  - org.slf4j.helpers.BasicMarker.toString()
  langs:
  - java
  name: BasicMarker
  nameWithType: BasicMarker
  fullName: org.slf4j.helpers.BasicMarker
  type: Class
  package: org.slf4j.helpers
  summary: A simple implementation of the <xref uid="org.slf4j.Marker" data-throw-if-not-resolved="false">Marker</xref> interface.
  syntax:
    content: public class BasicMarker implements Marker
  inheritance:
  - java.lang.Object
  implements:
  - org.slf4j.Marker
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.slf4j.helpers.BasicMarker.BasicMarker(java.lang.String)
  id: BasicMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: BasicMarker(String name)
  nameWithType: BasicMarker.BasicMarker(String name)
  fullName: org.slf4j.helpers.BasicMarker.BasicMarker(String name)
  overload: org.slf4j.helpers.BasicMarker.BasicMarker*
  type: Constructor
  package: org.slf4j.helpers
  syntax:
    content: " BasicMarker(String name)"
    parameters:
    - id: name
      type: java.lang.String
- uid: org.slf4j.helpers.BasicMarker.add(org.slf4j.Marker)
  id: add(org.slf4j.Marker)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: add(Marker reference)
  nameWithType: BasicMarker.add(Marker reference)
  fullName: org.slf4j.helpers.BasicMarker.add(Marker reference)
  overload: org.slf4j.helpers.BasicMarker.add*
  type: Method
  package: org.slf4j.helpers
  summary: Add a reference to another Marker.
  syntax:
    content: public void add(Marker reference)
    parameters:
    - id: reference
      type: org.slf4j.Marker
- uid: org.slf4j.helpers.BasicMarker.contains(java.lang.String)
  id: contains(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: contains(String name)
  nameWithType: BasicMarker.contains(String name)
  fullName: org.slf4j.helpers.BasicMarker.contains(String name)
  overload: org.slf4j.helpers.BasicMarker.contains*
  type: Method
  package: org.slf4j.helpers
  summary: This method is mainly used with Expression Evaluators.
  syntax:
    content: public boolean contains(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.contains(org.slf4j.Marker)
  id: contains(org.slf4j.Marker)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: contains(Marker other)
  nameWithType: BasicMarker.contains(Marker other)
  fullName: org.slf4j.helpers.BasicMarker.contains(Marker other)
  overload: org.slf4j.helpers.BasicMarker.contains*
  type: Method
  package: org.slf4j.helpers
  summary: Does this marker contain a reference to the 'other' marker? Marker A is defined to contain marker B, if A == B or if B is referenced by A, or if B is referenced by any one of A's references (recursively).
  syntax:
    content: public boolean contains(Marker other)
    parameters:
    - id: other
      type: org.slf4j.Marker
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: equals(Object obj)
  nameWithType: BasicMarker.equals(Object obj)
  fullName: org.slf4j.helpers.BasicMarker.equals(Object obj)
  overload: org.slf4j.helpers.BasicMarker.equals*
  type: Method
  package: org.slf4j.helpers
  summary: Markers are considered equal if they have the same name.
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: getName()
  nameWithType: BasicMarker.getName()
  fullName: org.slf4j.helpers.BasicMarker.getName()
  overload: org.slf4j.helpers.BasicMarker.getName*
  type: Method
  package: org.slf4j.helpers
  summary: Get the name of this Marker.
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: org.slf4j.helpers.BasicMarker.hasChildren()
  id: hasChildren()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: hasChildren()
  nameWithType: BasicMarker.hasChildren()
  fullName: org.slf4j.helpers.BasicMarker.hasChildren()
  overload: org.slf4j.helpers.BasicMarker.hasChildren*
  type: Method
  package: org.slf4j.helpers
  syntax:
    content: public boolean hasChildren()
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.hasReferences()
  id: hasReferences()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: hasReferences()
  nameWithType: BasicMarker.hasReferences()
  fullName: org.slf4j.helpers.BasicMarker.hasReferences()
  overload: org.slf4j.helpers.BasicMarker.hasReferences*
  type: Method
  package: org.slf4j.helpers
  summary: Does this marker have any references?
  syntax:
    content: public boolean hasReferences()
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: hashCode()
  nameWithType: BasicMarker.hashCode()
  fullName: org.slf4j.helpers.BasicMarker.hashCode()
  overload: org.slf4j.helpers.BasicMarker.hashCode*
  type: Method
  package: org.slf4j.helpers
  summary: Compute the hash code based on the name of this marker. Note that markers are considered equal if they have the same name.
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: org.slf4j.helpers.BasicMarker.iterator()
  id: iterator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: iterator()
  nameWithType: BasicMarker.iterator()
  fullName: org.slf4j.helpers.BasicMarker.iterator()
  overload: org.slf4j.helpers.BasicMarker.iterator*
  type: Method
  package: org.slf4j.helpers
  summary: Returns an Iterator which can be used to iterate over the references of this marker. An empty iterator is returned when this marker has no references.
  syntax:
    content: public Iterator<Marker> iterator()
    return:
      type: java.util.Iterator<org.slf4j.Marker>
- uid: org.slf4j.helpers.BasicMarker.remove(org.slf4j.Marker)
  id: remove(org.slf4j.Marker)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: remove(Marker referenceToRemove)
  nameWithType: BasicMarker.remove(Marker referenceToRemove)
  fullName: org.slf4j.helpers.BasicMarker.remove(Marker referenceToRemove)
  overload: org.slf4j.helpers.BasicMarker.remove*
  type: Method
  package: org.slf4j.helpers
  summary: Remove a marker reference.
  syntax:
    content: public boolean remove(Marker referenceToRemove)
    parameters:
    - id: referenceToRemove
      type: org.slf4j.Marker
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarker.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarker
  langs:
  - java
  name: toString()
  nameWithType: BasicMarker.toString()
  fullName: org.slf4j.helpers.BasicMarker.toString()
  overload: org.slf4j.helpers.BasicMarker.toString*
  type: Method
  package: org.slf4j.helpers
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.helpers.BasicMarker.BasicMarker*
  name: BasicMarker
  nameWithType: BasicMarker.BasicMarker
  fullName: org.slf4j.helpers.BasicMarker.BasicMarker
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarker.getName*
  name: getName
  nameWithType: BasicMarker.getName
  fullName: org.slf4j.helpers.BasicMarker.getName
  package: org.slf4j.helpers
- uid: org.slf4j.Marker
  name: Marker
  nameWithType: Marker
  fullName: org.slf4j.Marker
- uid: org.slf4j.helpers.BasicMarker.add*
  name: add
  nameWithType: BasicMarker.add
  fullName: org.slf4j.helpers.BasicMarker.add
  package: org.slf4j.helpers
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.slf4j.helpers.BasicMarker.hasReferences*
  name: hasReferences
  nameWithType: BasicMarker.hasReferences
  fullName: org.slf4j.helpers.BasicMarker.hasReferences
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarker.hasChildren*
  name: hasChildren
  nameWithType: BasicMarker.hasChildren
  fullName: org.slf4j.helpers.BasicMarker.hasChildren
  package: org.slf4j.helpers
- uid: java.util.Iterator<org.slf4j.Marker>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: org.slf4j.Marker
    name: Marker
    fullName: org.slf4j.Marker
  - name: '>'
    fullName: '>'
- uid: org.slf4j.helpers.BasicMarker.iterator*
  name: iterator
  nameWithType: BasicMarker.iterator
  fullName: org.slf4j.helpers.BasicMarker.iterator
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarker.remove*
  name: remove
  nameWithType: BasicMarker.remove
  fullName: org.slf4j.helpers.BasicMarker.remove
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarker.contains*
  name: contains
  nameWithType: BasicMarker.contains
  fullName: org.slf4j.helpers.BasicMarker.contains
  package: org.slf4j.helpers
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.slf4j.helpers.BasicMarker.equals*
  name: equals
  nameWithType: BasicMarker.equals
  fullName: org.slf4j.helpers.BasicMarker.equals
  package: org.slf4j.helpers
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.slf4j.helpers.BasicMarker.hashCode*
  name: hashCode
  nameWithType: BasicMarker.hashCode
  fullName: org.slf4j.helpers.BasicMarker.hashCode
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarker.toString*
  name: toString
  nameWithType: BasicMarker.toString
  fullName: org.slf4j.helpers.BasicMarker.toString
  package: org.slf4j.helpers
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
