### YamlMime:JavaType
uid: "com.azure.resourcemanager.subscription.models.Subscriptions"
fullName: "com.azure.resourcemanager.subscription.models.Subscriptions"
name: "Subscriptions"
nameWithType: "Subscriptions"
summary: "Resource collection API of Subscriptions."
syntax: "public interface Subscriptions"
methods:
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.get(String subscriptionId)"
  name: "get(String subscriptionId)"
  nameWithType: "Subscriptions.get(String subscriptionId)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Subscription get(String subscriptionId)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription."
    type: "<xref href=\"com.azure.resourcemanager.subscription.models.Subscription?alt=com.azure.resourcemanager.subscription.models.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.getWithResponse(String subscriptionId, Context context)"
  name: "getWithResponse(String subscriptionId, Context context)"
  nameWithType: "Subscriptions.getWithResponse(String subscriptionId, Context context)"
  summary: "Gets details about a specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Subscription> getWithResponse(String subscriptionId, Context context)"
  desc: "Gets details about a specified subscription."
  returns:
    description: "details about a specified subscription."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.subscription.models.Subscription?alt=com.azure.resourcemanager.subscription.models.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.list()"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.list()"
  name: "list()"
  nameWithType: "Subscriptions.list()"
  summary: "Gets all subscriptions for a tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Subscription> list()"
  desc: "Gets all subscriptions for a tenant."
  returns:
    description: "all subscriptions for a tenant."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.subscription.models.Subscription?alt=com.azure.resourcemanager.subscription.models.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Subscriptions.list(Context context)"
  summary: "Gets all subscriptions for a tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Subscription> list(Context context)"
  desc: "Gets all subscriptions for a tenant."
  returns:
    description: "all subscriptions for a tenant."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.subscription.models.Subscription?alt=com.azure.resourcemanager.subscription.models.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.listLocations(java.lang.String)"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.listLocations(String subscriptionId)"
  name: "listLocations(String subscriptionId)"
  nameWithType: "Subscriptions.listLocations(String subscriptionId)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Location> listLocations(String subscriptionId)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.subscription.models.Location?alt=com.azure.resourcemanager.subscription.models.Location&text=Location\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.subscription.models.Subscriptions.listLocations(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.subscription.models.Subscriptions.listLocations(String subscriptionId, Context context)"
  name: "listLocations(String subscriptionId, Context context)"
  nameWithType: "Subscriptions.listLocations(String subscriptionId, Context context)"
  summary: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the target subscription."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Location> listLocations(String subscriptionId, Context context)"
  desc: "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list."
  returns:
    description: "location list operation response."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.subscription.models.Location?alt=com.azure.resourcemanager.subscription.models.Location&text=Location\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Subscriptions."
metadata: {}
package: "com.azure.resourcemanager.subscription.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-subscription:1.0.0-beta.1
