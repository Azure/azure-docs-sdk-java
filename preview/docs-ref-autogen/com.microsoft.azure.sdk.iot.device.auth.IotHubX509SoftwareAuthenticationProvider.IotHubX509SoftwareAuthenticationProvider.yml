### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider*"
fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider"
name: "IotHubX509SoftwareAuthenticationProvider"
nameWithType: "IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider"
members:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  name: "IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  nameWithType: "IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  summary: "Constructor that takes in a connection string and certificate/private key pair needed to use x509 authentication"
  parameters:
  - description: "the IotHub host name"
    name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The gateway hostname to use, or null if connecting to an IotHub"
    name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The device to be authenticated."
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The module to be authenticated. May be null if this authentication is not for a module"
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The PEM encoded string for the public key certificate or the path to a file containing it"
    name: "publicKeyCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the provided publicKeyCertificate is a path to the PEM encoded public key certificate file"
    name: "isCertificatePath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The PEM encoded string for the private key or the path to a file containing it."
    name: "privateKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the provided privateKey is a path to the PEM encoded private key file"
    name: "isPrivateKeyPath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)"
  exceptions:
  - description: "if the public key certificate or private key is null or empty"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  name: "IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  nameWithType: "IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  parameters:
  - name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  exceptions:
  - type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
type: "constructor"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.auth"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
