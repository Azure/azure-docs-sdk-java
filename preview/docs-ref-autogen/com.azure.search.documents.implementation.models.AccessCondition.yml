### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.implementation.models.AccessCondition"
  id: "AccessCondition"
  parent: "com.azure.search.documents.implementation.models"
  children:
  - "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition()"
  - "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch()"
  - "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch()"
  - "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch(java.lang.String)"
  - "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch(java.lang.String)"
  langs:
  - "java"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition"
  type: "Class"
  package: "com.azure.search.documents.implementation.models"
  summary: "Additional parameters for a set of operations."
  syntax:
    content: "public final class AccessCondition"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition()"
  id: "AccessCondition()"
  parent: "com.azure.search.documents.implementation.models.AccessCondition"
  langs:
  - "java"
  name: "AccessCondition()"
  nameWithType: "AccessCondition.AccessCondition()"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition()"
  overload: "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition*"
  type: "Constructor"
  package: "com.azure.search.documents.implementation.models"
  syntax:
    content: "public AccessCondition()"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch()"
  id: "getIfMatch()"
  parent: "com.azure.search.documents.implementation.models.AccessCondition"
  langs:
  - "java"
  name: "getIfMatch()"
  nameWithType: "AccessCondition.getIfMatch()"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch()"
  overload: "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch*"
  type: "Method"
  package: "com.azure.search.documents.implementation.models"
  summary: "Get the ifMatch property: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
  syntax:
    content: "public String getIfMatch()"
    return:
      type: "java.lang.String"
      description: "the ifMatch value."
- uid: "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch()"
  id: "getIfNoneMatch()"
  parent: "com.azure.search.documents.implementation.models.AccessCondition"
  langs:
  - "java"
  name: "getIfNoneMatch()"
  nameWithType: "AccessCondition.getIfNoneMatch()"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch()"
  overload: "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch*"
  type: "Method"
  package: "com.azure.search.documents.implementation.models"
  summary: "Get the ifNoneMatch property: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
  syntax:
    content: "public String getIfNoneMatch()"
    return:
      type: "java.lang.String"
      description: "the ifNoneMatch value."
- uid: "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch(java.lang.String)"
  id: "setIfMatch(java.lang.String)"
  parent: "com.azure.search.documents.implementation.models.AccessCondition"
  langs:
  - "java"
  name: "setIfMatch(String ifMatch)"
  nameWithType: "AccessCondition.setIfMatch(String ifMatch)"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch(String ifMatch)"
  overload: "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch*"
  type: "Method"
  package: "com.azure.search.documents.implementation.models"
  summary: "Set the ifMatch property: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value."
  syntax:
    content: "public AccessCondition setIfMatch(String ifMatch)"
    parameters:
    - id: "ifMatch"
      type: "java.lang.String"
      description: "the ifMatch value to set."
    return:
      type: "com.azure.search.documents.implementation.models.AccessCondition"
      description: "the AccessCondition object itself."
- uid: "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch(java.lang.String)"
  id: "setIfNoneMatch(java.lang.String)"
  parent: "com.azure.search.documents.implementation.models.AccessCondition"
  langs:
  - "java"
  name: "setIfNoneMatch(String ifNoneMatch)"
  nameWithType: "AccessCondition.setIfNoneMatch(String ifNoneMatch)"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch(String ifNoneMatch)"
  overload: "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch*"
  type: "Method"
  package: "com.azure.search.documents.implementation.models"
  summary: "Set the ifNoneMatch property: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value."
  syntax:
    content: "public AccessCondition setIfNoneMatch(String ifNoneMatch)"
    parameters:
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "the ifNoneMatch value to set."
    return:
      type: "com.azure.search.documents.implementation.models.AccessCondition"
      description: "the AccessCondition object itself."
references:
- uid: "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition*"
  name: "AccessCondition"
  nameWithType: "AccessCondition.AccessCondition"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.AccessCondition"
  package: "com.azure.search.documents.implementation.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch*"
  name: "getIfMatch"
  nameWithType: "AccessCondition.getIfMatch"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.getIfMatch"
  package: "com.azure.search.documents.implementation.models"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch*"
  name: "setIfMatch"
  nameWithType: "AccessCondition.setIfMatch"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.setIfMatch"
  package: "com.azure.search.documents.implementation.models"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch*"
  name: "getIfNoneMatch"
  nameWithType: "AccessCondition.getIfNoneMatch"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.getIfNoneMatch"
  package: "com.azure.search.documents.implementation.models"
- uid: "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch*"
  name: "setIfNoneMatch"
  nameWithType: "AccessCondition.setIfNoneMatch"
  fullName: "com.azure.search.documents.implementation.models.AccessCondition.setIfNoneMatch"
  package: "com.azure.search.documents.implementation.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
