### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list*"
fullName: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list"
name: "list"
nameWithType: "LegacyPeeringsClientImpl.list"
members:
- uid: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list(java.lang.String,com.azure.resourcemanager.peering.models.LegacyPeeringsKind)"
  fullName: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list(String peeringLocation, LegacyPeeringsKind kind)"
  name: "list(String peeringLocation, LegacyPeeringsKind kind)"
  nameWithType: "LegacyPeeringsClientImpl.list(String peeringLocation, LegacyPeeringsKind kind)"
  summary: "Lists all of the legacy peerings under the given subscription matching the specified kind and location."
  parameters:
  - description: "The location of the peering."
    name: "peeringLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The kind of the peering."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.LegacyPeeringsKind?alt=com.azure.resourcemanager.peering.models.LegacyPeeringsKind&text=LegacyPeeringsKind\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PeeringInner> list(String peeringLocation, LegacyPeeringsKind kind)"
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list(java.lang.String,com.azure.resourcemanager.peering.models.LegacyPeeringsKind,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.implementation.LegacyPeeringsClientImpl.list(String peeringLocation, LegacyPeeringsKind kind, Integer asn, Context context)"
  name: "list(String peeringLocation, LegacyPeeringsKind kind, Integer asn, Context context)"
  nameWithType: "LegacyPeeringsClientImpl.list(String peeringLocation, LegacyPeeringsKind kind, Integer asn, Context context)"
  summary: "Lists all of the legacy peerings under the given subscription matching the specified kind and location."
  parameters:
  - description: "The location of the peering."
    name: "peeringLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The kind of the peering."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.LegacyPeeringsKind?alt=com.azure.resourcemanager.peering.models.LegacyPeeringsKind&text=LegacyPeeringsKind\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ASN number associated with a legacy peering."
    name: "asn"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<PeeringInner> list(String peeringLocation, LegacyPeeringsKind kind, Integer asn, Context context)"
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
