### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  id: Inclusion
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation
  children:
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.ALWAYS
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.DEFAULT_INCLUSION
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_DEFAULT
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_EMPTY
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_NULL
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf(java.lang.String)
  - com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values()
  langs:
  - java
  name: JsonSerialize.Inclusion
  nameWithType: JsonSerialize.Inclusion
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  type: Enum
  package: com.fasterxml.jackson.databind.annotation
  summary: Enumeration used with <xref uid="com.fasterxml.jackson.databind.annotation.JsonSerialize.include*" data-throw-if-not-resolved="false">JsonSerialize#include</xref> property to define which properties of Java Beans are to be included in serialization
  syntax:
    content: public enum JsonSerialize.Inclusion extends Enum<JsonSerialize.Inclusion>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.ALWAYS
  id: ALWAYS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: ALWAYS
  nameWithType: JsonSerialize.Inclusion.ALWAYS
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.ALWAYS
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  summary: Value that indicates that properties are to be always included, independent of value
  syntax:
    content: public static final JsonSerialize.Inclusion ALWAYS
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.DEFAULT_INCLUSION
  id: DEFAULT_INCLUSION
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: DEFAULT_INCLUSION
  nameWithType: JsonSerialize.Inclusion.DEFAULT_INCLUSION
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.DEFAULT_INCLUSION
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  summary: Pseudo-value that is used to indicate "use whatever is default used at higher level".
  syntax:
    content: public static final JsonSerialize.Inclusion DEFAULT_INCLUSION
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.Inclusion()
  id: Inclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: Inclusion()
  nameWithType: JsonSerialize.Inclusion.Inclusion()
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.Inclusion()
  overload: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.Inclusion*
  type: Constructor
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: private Inclusion()
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_DEFAULT
  id: NON_DEFAULT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: NON_DEFAULT
  nameWithType: JsonSerialize.Inclusion.NON_DEFAULT
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_DEFAULT
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  summary: Value that indicates that only properties that have values that differ from default settings (meaning values they have when Bean is constructed with its no-arguments constructor) are to be included. Value is generally not useful with <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s, since they have no default values; and if used, works same as <xref uid="com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.ALWAYS" data-throw-if-not-resolved="false">#ALWAYS</xref>.
  syntax:
    content: public static final JsonSerialize.Inclusion NON_DEFAULT
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_EMPTY
  id: NON_EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: NON_EMPTY
  nameWithType: JsonSerialize.Inclusion.NON_EMPTY
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_EMPTY
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  summary: >-
    Value that indicates that only properties that have values that values that are null or what is considered empty are not to be included. Emptiness is defined for following type:

     *  For <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>s and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s, method `isEmpty()` is called;
     *  For Java arrays, empty arrays are ones with length of 0
     *  For Java <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>s, `length()` is called, and return value of 0 indicates empty String

    For other types, non-null values are to be included.
  syntax:
    content: public static final JsonSerialize.Inclusion NON_EMPTY
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_NULL
  id: NON_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: NON_NULL
  nameWithType: JsonSerialize.Inclusion.NON_NULL
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_NULL
  type: Field
  package: com.fasterxml.jackson.databind.annotation
  summary: Value that indicates that only properties with non-null values are to be included.
  syntax:
    content: public static final JsonSerialize.Inclusion NON_NULL
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: valueOf(String name)
  nameWithType: JsonSerialize.Inclusion.valueOf(String name)
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf(String name)
  overload: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf*
  type: Method
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: public static JsonSerialize.Inclusion valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  langs:
  - java
  name: values()
  nameWithType: JsonSerialize.Inclusion.values()
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values()
  overload: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values*
  type: Method
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: public static JsonSerialize.Inclusion[] values()
    return:
      type: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion[]
references:
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.Inclusion*
  name: Inclusion
  nameWithType: JsonSerialize.Inclusion.Inclusion
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.Inclusion
  package: com.fasterxml.jackson.databind.annotation
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
    name: Inclusion
    fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values*
  name: values
  nameWithType: JsonSerialize.Inclusion.values
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.values
  package: com.fasterxml.jackson.databind.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf*
  name: valueOf
  nameWithType: JsonSerialize.Inclusion.valueOf
  fullName: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.valueOf
  package: com.fasterxml.jackson.databind.annotation
- uid: java.lang.Enum<com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion>
  name: Enum<JsonSerialize.Inclusion>
  nameWithType: Enum<JsonSerialize.Inclusion>
  fullName: java.lang.Enum<com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
