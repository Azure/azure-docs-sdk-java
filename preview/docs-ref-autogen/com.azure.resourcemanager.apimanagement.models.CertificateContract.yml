### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract"
fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract"
name: "CertificateContract"
nameWithType: "CertificateContract"
summary: "An immutable client-side representation of Certificate<wbr>Contract."
syntax: "public interface CertificateContract"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.expirationDate()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.expirationDate()"
  name: "expirationDate()"
  nameWithType: "CertificateContract.expirationDate()"
  summary: "Gets the expiration<wbr>Date property: Expiration date of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime expirationDate()"
  desc: "Gets the expirationDate property: Expiration date of the certificate. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.id()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.id()"
  name: "id()"
  nameWithType: "CertificateContract.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.innerModel()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.innerModel()"
  name: "innerModel()"
  nameWithType: "CertificateContract.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>apimanagement.<wbr>fluent.<wbr>models.<wbr>Certificate<wbr>Contract<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateContractInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.keyVault()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.keyVault()"
  name: "keyVault()"
  nameWithType: "CertificateContract.keyVault()"
  summary: "Gets the key<wbr>Vault property: Key<wbr>Vault location details of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract KeyVaultContractProperties keyVault()"
  desc: "Gets the keyVault property: KeyVault location details of the certificate."
  returns:
    description: "the keyVault value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.KeyVaultContractProperties?alt=com.azure.resourcemanager.apimanagement.models.KeyVaultContractProperties&text=KeyVaultContractProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.name()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.name()"
  name: "name()"
  nameWithType: "CertificateContract.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refresh()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refresh()"
  name: "refresh()"
  nameWithType: "CertificateContract.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateContract refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateContract?alt=com.azure.resourcemanager.apimanagement.models.CertificateContract&text=CertificateContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "CertificateContract.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificateContract refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateContract?alt=com.azure.resourcemanager.apimanagement.models.CertificateContract&text=CertificateContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refreshSecret()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refreshSecret()"
  name: "refreshSecret()"
  nameWithType: "CertificateContract.refreshSecret()"
  summary: "From Key<wbr>Vault, Refresh the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateContract refreshSecret()"
  desc: "From KeyVault, Refresh the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateContract?alt=com.azure.resourcemanager.apimanagement.models.CertificateContract&text=CertificateContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refreshSecretWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.refreshSecretWithResponse(Context context)"
  name: "refreshSecretWithResponse(Context context)"
  nameWithType: "CertificateContract.refreshSecretWithResponse(Context context)"
  summary: "From Key<wbr>Vault, Refresh the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CertificateContract> refreshSecretWithResponse(Context context)"
  desc: "From KeyVault, Refresh the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateContract?alt=com.azure.resourcemanager.apimanagement.models.CertificateContract&text=CertificateContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.subject()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.subject()"
  name: "subject()"
  nameWithType: "CertificateContract.subject()"
  summary: "Gets the subject property: Subject attribute of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract String subject()"
  desc: "Gets the subject property: Subject attribute of the certificate."
  returns:
    description: "the subject value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.thumbprint()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.thumbprint()"
  name: "thumbprint()"
  nameWithType: "CertificateContract.thumbprint()"
  summary: "Gets the thumbprint property: Thumbprint of the certificate."
  modifiers:
  - "abstract"
  syntax: "public abstract String thumbprint()"
  desc: "Gets the thumbprint property: Thumbprint of the certificate."
  returns:
    description: "the thumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.type()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.type()"
  name: "type()"
  nameWithType: "CertificateContract.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.CertificateContract.update()"
  fullName: "com.azure.resourcemanager.apimanagement.models.CertificateContract.update()"
  name: "update()"
  nameWithType: "CertificateContract.update()"
  summary: "Begins update for the Certificate<wbr>Contract resource."
  modifiers:
  - "abstract"
  syntax: "public abstract CertificateContract.Update update()"
  desc: "Begins update for the CertificateContract resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateContract.Update?alt=com.azure.resourcemanager.apimanagement.models.CertificateContract.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of CertificateContract."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
