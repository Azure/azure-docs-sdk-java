### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Splitter.onPattern*"
fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.onPattern"
name: "onPattern"
nameWithType: "Splitter.onPattern"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Splitter.onPattern(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.onPattern(String separatorPattern)"
  name: "onPattern(String separatorPattern)"
  nameWithType: "Splitter.onPattern(String separatorPattern)"
  summary: "Returns a splitter that considers any subsequence matching a given pattern (regular expression) to be a separator. For example, `Splitter.onPattern(\"\\r?\\n\").split(entireFile)` splits a string into lines whether it uses DOS-style or UNIX-style line terminators. This is equivalent to `Splitter.on(Pattern.compile(pattern))`."
  parameters:
  - description: "the pattern that determines whether a subsequence is a separator. This\n     pattern may not match the empty string."
    name: "separatorPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Splitter onPattern(String separatorPattern)"
  returns:
    description: "a splitter, with default settings, that uses this pattern"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Splitter?alt=com.azure.cosmos.implementation.guava25.base.Splitter&text=Splitter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
