### YamlMime:JavaType
uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions"
fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions"
name: "BlockBlobStageBlockFromUrlOptions"
nameWithType: "BlockBlobStageBlockFromUrlOptions"
summary: "Extended options that may be passed when staging a block from a source URL."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlockBlobStageBlockFromUrlOptions"
constructors:
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.BlockBlobStageBlockFromUrlOptions(java.lang.String,java.lang.String)"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.BlockBlobStageBlockFromUrlOptions(String base64BlockId, String sourceUrl)"
  name: "BlockBlobStageBlockFromUrlOptions(String base64BlockId, String sourceUrl)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.BlockBlobStageBlockFromUrlOptions(String base64BlockId, String sourceUrl)"
  parameters:
  - description: "The block ID to assign the new block."
    name: "base64BlockId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobStageBlockFromUrlOptions(String base64BlockId, String sourceUrl)"
methods:
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getBase64BlockId()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getBase64BlockId()"
  name: "getBase64BlockId()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getBase64BlockId()"
  syntax: "public String getBase64BlockId()"
  returns:
    description: "The block ID to assign the new block."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getLeaseId()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getLeaseId()"
  name: "getLeaseId()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getLeaseId()"
  syntax: "public String getLeaseId()"
  returns:
    description: "Lease ID for accessing source content."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceAuthorization()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceAuthorization()"
  name: "getSourceAuthorization()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getSourceAuthorization()"
  syntax: "public HttpAuthorization getSourceAuthorization()"
  returns:
    description: "auth header to access source."
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceContentMd5()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceContentMd5()"
  name: "getSourceContentMd5()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getSourceContentMd5()"
  syntax: "public byte[] getSourceContentMd5()"
  returns:
    description: "MD5 of the source content."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceRange()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceRange()"
  name: "getSourceRange()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getSourceRange()"
  syntax: "public BlobRange getSourceRange()"
  returns:
    description: "Range of bytes to read from the source."
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceRequestConditions()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceRequestConditions()"
  name: "getSourceRequestConditions()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getSourceRequestConditions()"
  syntax: "public BlobRequestConditions getSourceRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> for accessing source content."
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceUrl()"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.getSourceUrl()"
  name: "getSourceUrl()"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.getSourceUrl()"
  syntax: "public String getSourceUrl()"
  returns:
    description: "The source URL to upload from."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setLeaseId(java.lang.String)"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setLeaseId(String leaseId)"
  name: "setLeaseId(String leaseId)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.setLeaseId(String leaseId)"
  parameters:
  - description: "Lease ID for accessing source content."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobStageBlockFromUrlOptions setLeaseId(String leaseId)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions?alt=com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions&text=BlockBlobStageBlockFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceAuthorization(com.azure.core.http.HttpAuthorization)"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  name: "setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  summary: "Sets \"Authorization\" header for accessing source URL."
  parameters:
  - description: "auth header to access source."
    name: "sourceAuthorization"
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobStageBlockFromUrlOptions setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  desc: "Sets \"Authorization\" header for accessing source URL. Currently only \"Bearer\" authentication is accepted by Storage."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions?alt=com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions&text=BlockBlobStageBlockFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceContentMd5(byte[])"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceContentMd5(byte[] sourceContentMd5)"
  name: "setSourceContentMd5(byte[] sourceContentMd5)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.setSourceContentMd5(byte[] sourceContentMd5)"
  parameters:
  - description: "MD5 of the source content."
    name: "sourceContentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public BlockBlobStageBlockFromUrlOptions setSourceContentMd5(byte[] sourceContentMd5)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions?alt=com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions&text=BlockBlobStageBlockFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceRange(com.azure.storage.blob.models.BlobRange)"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceRange(BlobRange sourceRange)"
  name: "setSourceRange(BlobRange sourceRange)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.setSourceRange(BlobRange sourceRange)"
  parameters:
  - description: "Range of bytes to read from the source."
    name: "sourceRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobStageBlockFromUrlOptions setSourceRange(BlobRange sourceRange)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions?alt=com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions&text=BlockBlobStageBlockFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  name: "setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  nameWithType: "BlockBlobStageBlockFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> for accessing source content."
    name: "sourceRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobStageBlockFromUrlOptions setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions?alt=com.azure.storage.blob.options.BlockBlobStageBlockFromUrlOptions&text=BlockBlobStageBlockFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when staging a block from a source URL."
metadata: {}
package: "com.azure.storage.blob.options"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
