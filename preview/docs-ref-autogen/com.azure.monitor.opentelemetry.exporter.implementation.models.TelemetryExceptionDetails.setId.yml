### YamlMime:JavaMember
uid: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setId*"
fullName: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setId"
name: "setId"
nameWithType: "TelemetryExceptionDetails.setId"
members:
- uid: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setId(java.lang.Integer)"
  fullName: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setId(Integer id)"
  name: "setId(Integer id)"
  nameWithType: "TelemetryExceptionDetails.setId(Integer id)"
  summary: "Set the id property: In case exception is nested (outer exception contains inner one), the id and outerId properties are used to represent the nesting."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TelemetryExceptionDetails setId(Integer id)"
  returns:
    description: "the TelemetryExceptionDetails object itself."
    type: "<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails&text=TelemetryExceptionDetails\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.monitor.opentelemetry.exporter.implementation.models"
artifact: com.azure:azure-monitor-opentelemetry-exporter:1.0.0-beta.4
