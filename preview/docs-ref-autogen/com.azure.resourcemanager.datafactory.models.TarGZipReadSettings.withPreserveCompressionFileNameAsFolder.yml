### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.TarGZipReadSettings.withPreserveCompressionFileNameAsFolder*"
fullName: "com.azure.resourcemanager.datafactory.models.TarGZipReadSettings.withPreserveCompressionFileNameAsFolder"
name: "withPreserveCompressionFileNameAsFolder"
nameWithType: "TarGZipReadSettings.withPreserveCompressionFileNameAsFolder"
members:
- uid: "com.azure.resourcemanager.datafactory.models.TarGZipReadSettings.withPreserveCompressionFileNameAsFolder(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.TarGZipReadSettings.withPreserveCompressionFileNameAsFolder(Object preserveCompressionFileNameAsFolder)"
  name: "withPreserveCompressionFileNameAsFolder(Object preserveCompressionFileNameAsFolder)"
  nameWithType: "TarGZipReadSettings.withPreserveCompressionFileNameAsFolder(Object preserveCompressionFileNameAsFolder)"
  summary: "Set the preserveCompressionFileNameAsFolder property: Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the preserveCompressionFileNameAsFolder value to set."
    name: "preserveCompressionFileNameAsFolder"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TarGZipReadSettings withPreserveCompressionFileNameAsFolder(Object preserveCompressionFileNameAsFolder)"
  returns:
    description: "the TarGZipReadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TarGZipReadSettings?alt=com.azure.resourcemanager.datafactory.models.TarGZipReadSettings&text=TarGZipReadSettings\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
