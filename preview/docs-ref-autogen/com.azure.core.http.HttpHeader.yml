### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.HttpHeader"
  id: "HttpHeader"
  parent: "com.azure.core.http"
  children:
  - "com.azure.core.http.HttpHeader.HttpHeader(java.lang.String,java.lang.String)"
  - "com.azure.core.http.HttpHeader.addValue(java.lang.String)"
  - "com.azure.core.http.HttpHeader.getName()"
  - "com.azure.core.http.HttpHeader.getValue()"
  - "com.azure.core.http.HttpHeader.getValues()"
  - "com.azure.core.http.HttpHeader.toString()"
  langs:
  - "java"
  name: "HttpHeader"
  nameWithType: "HttpHeader"
  fullName: "com.azure.core.http.HttpHeader"
  type: "Class"
  package: "com.azure.core.http"
  summary: "A single header within a HTTP request or response. If multiple header values are added to a HTTP request or response with the same name (case-insensitive), then the values will be appended to the end of the same Header with commas separating them."
  syntax:
    content: "public class HttpHeader"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.HttpHeader.HttpHeader(java.lang.String,java.lang.String)"
  id: "HttpHeader(java.lang.String,java.lang.String)"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "HttpHeader(String name, String value)"
  nameWithType: "HttpHeader.HttpHeader(String name, String value)"
  fullName: "com.azure.core.http.HttpHeader.HttpHeader(String name, String value)"
  overload: "com.azure.core.http.HttpHeader.HttpHeader*"
  type: "Constructor"
  package: "com.azure.core.http"
  summary: "Create a HttpHeader instance using the provided name and value."
  syntax:
    content: "public HttpHeader(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the name"
    - id: "value"
      type: "java.lang.String"
      description: "the value"
- uid: "com.azure.core.http.HttpHeader.addValue(java.lang.String)"
  id: "addValue(java.lang.String)"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "addValue(String value)"
  nameWithType: "HttpHeader.addValue(String value)"
  fullName: "com.azure.core.http.HttpHeader.addValue(String value)"
  overload: "com.azure.core.http.HttpHeader.addValue*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Add a new value to the end of the Header."
  syntax:
    content: "public void addValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "the value to add"
- uid: "com.azure.core.http.HttpHeader.getName()"
  id: "getName()"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "HttpHeader.getName()"
  fullName: "com.azure.core.http.HttpHeader.getName()"
  overload: "com.azure.core.http.HttpHeader.getName*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the header name."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "the name of this Header"
- uid: "com.azure.core.http.HttpHeader.getValue()"
  id: "getValue()"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "HttpHeader.getValue()"
  fullName: "com.azure.core.http.HttpHeader.getValue()"
  overload: "com.azure.core.http.HttpHeader.getValue*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the header value."
  syntax:
    content: "public String getValue()"
    return:
      type: "java.lang.String"
      description: "the value of this Header"
- uid: "com.azure.core.http.HttpHeader.getValues()"
  id: "getValues()"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "getValues()"
  nameWithType: "HttpHeader.getValues()"
  fullName: "com.azure.core.http.HttpHeader.getValues()"
  overload: "com.azure.core.http.HttpHeader.getValues*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the comma separated value as an array."
  syntax:
    content: "public String[] getValues()"
    return:
      type: "java.lang.String[]"
      description: "the values of this Header that are separated by a comma"
- uid: "com.azure.core.http.HttpHeader.toString()"
  id: "toString()"
  parent: "com.azure.core.http.HttpHeader"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "HttpHeader.toString()"
  fullName: "com.azure.core.http.HttpHeader.toString()"
  overload: "com.azure.core.http.HttpHeader.toString*"
  type: "Method"
  package: "com.azure.core.http"
  summary: "Get the String representation of the header."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "the String representation of this HttpHeader"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.HttpHeader.HttpHeader*"
  name: "HttpHeader"
  nameWithType: "HttpHeader.HttpHeader"
  fullName: "com.azure.core.http.HttpHeader.HttpHeader"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpHeader.getName*"
  name: "getName"
  nameWithType: "HttpHeader.getName"
  fullName: "com.azure.core.http.HttpHeader.getName"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpHeader.getValue*"
  name: "getValue"
  nameWithType: "HttpHeader.getValue"
  fullName: "com.azure.core.http.HttpHeader.getValue"
  package: "com.azure.core.http"
- uid: "java.lang.String[]"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.HttpHeader.getValues*"
  name: "getValues"
  nameWithType: "HttpHeader.getValues"
  fullName: "com.azure.core.http.HttpHeader.getValues"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpHeader.addValue*"
  name: "addValue"
  nameWithType: "HttpHeader.addValue"
  fullName: "com.azure.core.http.HttpHeader.addValue"
  package: "com.azure.core.http"
- uid: "com.azure.core.http.HttpHeader.toString*"
  name: "toString"
  nameWithType: "HttpHeader.toString"
  fullName: "com.azure.core.http.HttpHeader.toString"
  package: "com.azure.core.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
