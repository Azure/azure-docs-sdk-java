### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract"
fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract"
name: "ReportRecordContract"
nameWithType: "ReportRecordContract"
summary: "An immutable client-side representation of ReportRecordContract."
syntax: "public interface ReportRecordContract"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiId()"
  name: "apiId()"
  nameWithType: "ReportRecordContract.apiId()"
  summary: "Gets the apiId property: API identifier path. /apis/\\{apiId\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract String apiId()"
  returns:
    description: "the apiId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiRegion()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiRegion()"
  name: "apiRegion()"
  nameWithType: "ReportRecordContract.apiRegion()"
  summary: "Gets the apiRegion property: API region identifier."
  modifiers:
  - "abstract"
  syntax: "public abstract String apiRegion()"
  returns:
    description: "the apiRegion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeAvg()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeAvg()"
  name: "apiTimeAvg()"
  nameWithType: "ReportRecordContract.apiTimeAvg()"
  summary: "Gets the apiTimeAvg property: Average time it took to process request."
  modifiers:
  - "abstract"
  syntax: "public abstract Double apiTimeAvg()"
  returns:
    description: "the apiTimeAvg value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeMax()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeMax()"
  name: "apiTimeMax()"
  nameWithType: "ReportRecordContract.apiTimeMax()"
  summary: "Gets the apiTimeMax property: Maximum time it took to process request."
  modifiers:
  - "abstract"
  syntax: "public abstract Double apiTimeMax()"
  returns:
    description: "the apiTimeMax value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeMin()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.apiTimeMin()"
  name: "apiTimeMin()"
  nameWithType: "ReportRecordContract.apiTimeMin()"
  summary: "Gets the apiTimeMin property: Minimum time it took to process request."
  modifiers:
  - "abstract"
  syntax: "public abstract Double apiTimeMin()"
  returns:
    description: "the apiTimeMin value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.bandwidth()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.bandwidth()"
  name: "bandwidth()"
  nameWithType: "ReportRecordContract.bandwidth()"
  summary: "Gets the bandwidth property: Bandwidth consumed."
  modifiers:
  - "abstract"
  syntax: "public abstract Long bandwidth()"
  returns:
    description: "the bandwidth value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.cacheHitCount()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.cacheHitCount()"
  name: "cacheHitCount()"
  nameWithType: "ReportRecordContract.cacheHitCount()"
  summary: "Gets the cacheHitCount property: Number of times when content was served from cache policy."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer cacheHitCount()"
  returns:
    description: "the cacheHitCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.cacheMissCount()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.cacheMissCount()"
  name: "cacheMissCount()"
  nameWithType: "ReportRecordContract.cacheMissCount()"
  summary: "Gets the cacheMissCount property: Number of times content was fetched from backend."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer cacheMissCount()"
  returns:
    description: "the cacheMissCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountBlocked()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountBlocked()"
  name: "callCountBlocked()"
  nameWithType: "ReportRecordContract.callCountBlocked()"
  summary: "Gets the callCountBlocked property: Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer callCountBlocked()"
  returns:
    description: "the callCountBlocked value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountFailed()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountFailed()"
  name: "callCountFailed()"
  nameWithType: "ReportRecordContract.callCountFailed()"
  summary: "Gets the callCountFailed property: Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer callCountFailed()"
  returns:
    description: "the callCountFailed value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountOther()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountOther()"
  name: "callCountOther()"
  nameWithType: "ReportRecordContract.callCountOther()"
  summary: "Gets the callCountOther property: Number of other calls."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer callCountOther()"
  returns:
    description: "the callCountOther value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountSuccess()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountSuccess()"
  name: "callCountSuccess()"
  nameWithType: "ReportRecordContract.callCountSuccess()"
  summary: "Gets the callCountSuccess property: Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer callCountSuccess()"
  returns:
    description: "the callCountSuccess value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountTotal()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.callCountTotal()"
  name: "callCountTotal()"
  nameWithType: "ReportRecordContract.callCountTotal()"
  summary: "Gets the callCountTotal property: Total number of calls."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer callCountTotal()"
  returns:
    description: "the callCountTotal value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.country()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.country()"
  name: "country()"
  nameWithType: "ReportRecordContract.country()"
  summary: "Gets the country property: Country to which this record data is related."
  modifiers:
  - "abstract"
  syntax: "public abstract String country()"
  returns:
    description: "the country value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.innerModel()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.innerModel()"
  name: "innerModel()"
  nameWithType: "ReportRecordContract.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.apimanagement.fluent.models.ReportRecordContractInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ReportRecordContractInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.ReportRecordContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.ReportRecordContractInner&text=ReportRecordContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.interval()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.interval()"
  name: "interval()"
  nameWithType: "ReportRecordContract.interval()"
  summary: "Gets the interval property: Length of aggregation period. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO\\_8601\\#Durations)."
  modifiers:
  - "abstract"
  syntax: "public abstract String interval()"
  returns:
    description: "the interval value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.name()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.name()"
  name: "name()"
  nameWithType: "ReportRecordContract.name()"
  summary: "Gets the name property: Name depending on report endpoint specifies product, API, operation or developer name."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.operationId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.operationId()"
  name: "operationId()"
  nameWithType: "ReportRecordContract.operationId()"
  summary: "Gets the operationId property: Operation identifier path. /apis/\\{apiId\\}/operations/\\{operationId\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract String operationId()"
  returns:
    description: "the operationId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.productId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.productId()"
  name: "productId()"
  nameWithType: "ReportRecordContract.productId()"
  summary: "Gets the productId property: Product identifier path. /products/\\{productId\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract String productId()"
  returns:
    description: "the productId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.region()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.region()"
  name: "region()"
  nameWithType: "ReportRecordContract.region()"
  summary: "Gets the region property: Country region to which this record data is related."
  modifiers:
  - "abstract"
  syntax: "public abstract String region()"
  returns:
    description: "the region value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeAvg()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeAvg()"
  name: "serviceTimeAvg()"
  nameWithType: "ReportRecordContract.serviceTimeAvg()"
  summary: "Gets the serviceTimeAvg property: Average time it took to process request on backend."
  modifiers:
  - "abstract"
  syntax: "public abstract Double serviceTimeAvg()"
  returns:
    description: "the serviceTimeAvg value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeMax()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeMax()"
  name: "serviceTimeMax()"
  nameWithType: "ReportRecordContract.serviceTimeMax()"
  summary: "Gets the serviceTimeMax property: Maximum time it took to process request on backend."
  modifiers:
  - "abstract"
  syntax: "public abstract Double serviceTimeMax()"
  returns:
    description: "the serviceTimeMax value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeMin()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.serviceTimeMin()"
  name: "serviceTimeMin()"
  nameWithType: "ReportRecordContract.serviceTimeMin()"
  summary: "Gets the serviceTimeMin property: Minimum time it took to process request on backend."
  modifiers:
  - "abstract"
  syntax: "public abstract Double serviceTimeMin()"
  returns:
    description: "the serviceTimeMin value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.subscriptionId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.subscriptionId()"
  name: "subscriptionId()"
  nameWithType: "ReportRecordContract.subscriptionId()"
  summary: "Gets the subscriptionId property: Subscription identifier path. /subscriptions/\\{subscriptionId\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract String subscriptionId()"
  returns:
    description: "the subscriptionId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.timestamp()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.timestamp()"
  name: "timestamp()"
  nameWithType: "ReportRecordContract.timestamp()"
  summary: "Gets the timestamp property: Start of aggregation period. The date conforms to the following format: \\`yyyy-MM-ddTHH:mm:ssZ\\` as specified by the ISO 8601 standard."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime timestamp()"
  returns:
    description: "the timestamp value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.userId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.userId()"
  name: "userId()"
  nameWithType: "ReportRecordContract.userId()"
  summary: "Gets the userId property: User identifier path. /users/\\{userId\\}."
  modifiers:
  - "abstract"
  syntax: "public abstract String userId()"
  returns:
    description: "the userId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.zip()"
  fullName: "com.azure.resourcemanager.apimanagement.models.ReportRecordContract.zip()"
  name: "zip()"
  nameWithType: "ReportRecordContract.zip()"
  summary: "Gets the zip property: Zip code to which this record data is related."
  modifiers:
  - "abstract"
  syntax: "public abstract String zip()"
  returns:
    description: "the zip value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
