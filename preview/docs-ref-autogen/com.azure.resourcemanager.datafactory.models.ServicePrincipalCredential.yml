### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential"
fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential"
name: "ServicePrincipalCredential"
nameWithType: "ServicePrincipalCredential"
summary: "Service principal credential."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Credential?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Credential.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Credential.annotations()"
- "com.azure.resourcemanager.datafactory.models.Credential.description()"
- "com.azure.resourcemanager.datafactory.models.Credential.validate()"
- "com.azure.resourcemanager.datafactory.models.Credential.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Credential.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Credential.withDescription(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServicePrincipalCredential extends Credential"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.ServicePrincipalCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.ServicePrincipalCredential()"
  name: "ServicePrincipalCredential()"
  nameWithType: "ServicePrincipalCredential.ServicePrincipalCredential()"
  syntax: "public ServicePrincipalCredential()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "ServicePrincipalCredential.servicePrincipalId()"
  summary: "Get the service<wbr>Principal<wbr>Id property: The app ID of the service principal used to authenticate."
  syntax: "public Object servicePrincipalId()"
  desc: "Get the servicePrincipalId property: The app ID of the service principal used to authenticate."
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "ServicePrincipalCredential.servicePrincipalKey()"
  summary: "Get the service<wbr>Principal<wbr>Key property: The key of the service principal used to authenticate."
  syntax: "public AzureKeyVaultSecretReference servicePrincipalKey()"
  desc: "Get the servicePrincipalKey property: The key of the service principal used to authenticate."
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureKeyVaultSecretReference?alt=com.azure.resourcemanager.datafactory.models.AzureKeyVaultSecretReference&text=AzureKeyVaultSecretReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.tenant()"
  name: "tenant()"
  nameWithType: "ServicePrincipalCredential.tenant()"
  summary: "Get the tenant property: The ID of the tenant to which the service principal belongs."
  syntax: "public Object tenant()"
  desc: "Get the tenant property: The ID of the tenant to which the service principal belongs."
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.validate()"
  name: "validate()"
  nameWithType: "ServicePrincipalCredential.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.Credential.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "ServicePrincipalCredential.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the Credential."
  overridden: "com.azure.resourcemanager.datafactory.models.Credential.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServicePrincipalCredential withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the Credential."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential?alt=com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential&text=ServicePrincipalCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "ServicePrincipalCredential.withDescription(String description)"
  summary: "Set the description property: Credential description."
  overridden: "com.azure.resourcemanager.datafactory.models.Credential.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServicePrincipalCredential withDescription(String description)"
  desc: "Set the description property: Credential description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential?alt=com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential&text=ServicePrincipalCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "ServicePrincipalCredential.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the service<wbr>Principal<wbr>Id property: The app ID of the service principal used to authenticate."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServicePrincipalCredential withServicePrincipalId(Object servicePrincipalId)"
  desc: "Set the servicePrincipalId property: The app ID of the service principal used to authenticate."
  returns:
    description: "the ServicePrincipalCredential object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential?alt=com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential&text=ServicePrincipalCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.AzureKeyVaultSecretReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withServicePrincipalKey(AzureKeyVaultSecretReference servicePrincipalKey)"
  name: "withServicePrincipalKey(AzureKeyVaultSecretReference servicePrincipalKey)"
  nameWithType: "ServicePrincipalCredential.withServicePrincipalKey(AzureKeyVaultSecretReference servicePrincipalKey)"
  summary: "Set the service<wbr>Principal<wbr>Key property: The key of the service principal used to authenticate."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureKeyVaultSecretReference?alt=com.azure.resourcemanager.datafactory.models.AzureKeyVaultSecretReference&text=AzureKeyVaultSecretReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServicePrincipalCredential withServicePrincipalKey(AzureKeyVaultSecretReference servicePrincipalKey)"
  desc: "Set the servicePrincipalKey property: The key of the service principal used to authenticate."
  returns:
    description: "the ServicePrincipalCredential object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential?alt=com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential&text=ServicePrincipalCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "ServicePrincipalCredential.withTenant(Object tenant)"
  summary: "Set the tenant property: The ID of the tenant to which the service principal belongs."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServicePrincipalCredential withTenant(Object tenant)"
  desc: "Set the tenant property: The ID of the tenant to which the service principal belongs."
  returns:
    description: "the ServicePrincipalCredential object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential?alt=com.azure.resourcemanager.datafactory.models.ServicePrincipalCredential&text=ServicePrincipalCredential\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Service principal credential."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
