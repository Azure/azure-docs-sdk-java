### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase
  id: ApiTestBase
  parent: com.azure.messaging.eventhubs.implementation
  children:
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase(ClientLogger)
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose(Closeable...)
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.logger
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType(TransportType)
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest()
  - com.azure.messaging.eventhubs.implementation.ApiTestBase.TIMEOUT
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: ApiTestBase
  nameWithType: ApiTestBase
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 36
  package: com.azure.messaging.eventhubs.implementation
  summary: "<p>Test base for running live and offline tests. </p>"
  syntax:
    content: public class ApiTestBase extends TestBase
  inheritance:
  - java.lang.Object
  - com.azure.core.test.TestBase
  inheritedMembers:
  - com.azure.core.test.TestBase.afterTest()
  - com.azure.core.test.TestBase.beforeTest()
  - com.azure.core.test.TestBase.interceptorManager
  - com.azure.core.test.TestBase.setupClass()
  - com.azure.core.test.TestBase.testName()
  - com.azure.core.test.TestBase.testResourceNamer
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase(ClientLogger)
  id: ApiTestBase(ClientLogger)
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: ApiTestBase(ClientLogger logger)
  nameWithType: ApiTestBase.ApiTestBase(ClientLogger logger)
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase(ClientLogger logger)
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 51
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected ApiTestBase(ClientLogger logger)
    parameters:
    - id: logger
      type: com.azure.core.util.logging.ClientLogger
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose(Closeable...)
  id: )
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: dispose(Closeable... closeables)
  nameWithType: ApiTestBase.dispose(Closeable... closeables)
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose(Closeable... closeables)
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 162
  package: com.azure.messaging.eventhubs.implementation
  summary: "<p>Disposes of any <xref uid=\"\" data-throw-if-not-resolved=\"false\">Closeable</xref> resources.</p>\r\n<p></p>"
  syntax:
    content: protected void dispose(Closeable... closeables)
    parameters:
    - id: closeables
      type: 05580a22
      description: >-
        <p>The closeables to dispose of. If a closeable is<code>nullÂ 

            </code> , it is skipped. </p>
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType()
  id: getAuthorizationType()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getAuthorizationType()
  nameWithType: ApiTestBase.getAuthorizationType()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 153
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected CBSAuthorizationType getAuthorizationType()
    return:
      type: com.azure.messaging.eventhubs.implementation.CBSAuthorizationType
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions()
  id: getConnectionOptions()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getConnectionOptions()
  nameWithType: ApiTestBase.getConnectionOptions()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 133
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected ConnectionOptions getConnectionOptions()
    return:
      type: com.azure.messaging.eventhubs.implementation.ConnectionOptions
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString()
  id: getConnectionString()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getConnectionString()
  nameWithType: ApiTestBase.getConnectionString()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 121
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected String getConnectionString()
    return:
      type: "26831127"
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties()
  id: getConnectionStringProperties()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getConnectionStringProperties()
  nameWithType: ApiTestBase.getConnectionStringProperties()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 137
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected ConnectionStringProperties getConnectionStringProperties()
    return:
      type: com.azure.messaging.eventhubs.implementation.ConnectionStringProperties
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor()
  id: getReactor()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getReactor()
  nameWithType: ApiTestBase.getReactor()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 145
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected Reactor getReactor()
    return:
      type: 5f183614
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider()
  id: getReactorProvider()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getReactorProvider()
  nameWithType: ApiTestBase.getReactorProvider()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 149
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected ReactorProvider getReactorProvider()
    return:
      type: com.azure.messaging.eventhubs.implementation.ReactorProvider
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode()
  id: getTestMode()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getTestMode()
  nameWithType: ApiTestBase.getTestMode()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 113
  package: com.azure.messaging.eventhubs.implementation
  summary: "<p>Gets the test mode for this API test. If AZURE_TEST_MODE equals <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref> and Event Hubs connection string is set, then we return <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>. Otherwise, <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref> is returned. </p>"
  syntax:
    content: public TestMode getTestMode()
    return:
      type: com.azure.core.test.TestMode
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential()
  id: getTokenCredential()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: getTokenCredential()
  nameWithType: ApiTestBase.getTokenCredential()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 141
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected TokenCredential getTokenCredential()
    return:
      type: com.azure.core.credentials.TokenCredential
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.logger
  id: logger
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: logger
  nameWithType: ApiTestBase.logger
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.logger
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 38
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected final ClientLogger logger
    return:
      type: 93de0ef9com.azure.core.util.logging.ClientLogger
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType(TransportType)
  id: setTransportType(TransportType)
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: setTransportType(TransportType transportType)
  nameWithType: ApiTestBase.setTransportType(TransportType transportType)
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType(TransportType transportType)
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 129
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected void setTransportType(TransportType transportType)
    parameters:
    - id: transportType
      type: com.azure.core.amqp.TransportType
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest()
  id: setupTest()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: setupTest()
  nameWithType: ApiTestBase.setupTest()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 59
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: public void setupTest()
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode()
  id: skipIfNotRecordMode()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: skipIfNotRecordMode()
  nameWithType: ApiTestBase.skipIfNotRecordMode()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 125
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected void skipIfNotRecordMode()
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest()
  id: teardownTest()
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: teardownTest()
  nameWithType: ApiTestBase.teardownTest()
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest()
  overload: com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 98
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: public void teardownTest()
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.TIMEOUT
  id: TIMEOUT
  parent: com.azure.messaging.eventhubs.implementation.ApiTestBase
  href: com.azure.messaging.eventhubs.implementation.ApiTestBase.yml
  langs:
  - java
  name: TIMEOUT
  nameWithType: ApiTestBase.TIMEOUT
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.TIMEOUT
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/test/java/com/azure/messaging/eventhubs/implementation/ApiTestBase.java
    startLine: 37
  package: com.azure.messaging.eventhubs.implementation
  syntax:
    content: protected static final Duration TIMEOUT= Duration.ofSeconds(30)
    return:
      type: 89ac7c4d
references:
- uid: 89ac7c4d
  spec.java:
  - name: final Duration
    fullName: final Duration
- uid: 93de0ef9com.azure.core.util.logging.ClientLogger
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.azure.core.util.logging.ClientLogger
    name: ClientLogger
    fullName: com.azure.core.util.logging.ClientLogger
    href: com.azure.core.util.logging.ClientLogger.yml
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase*
  name: ApiTestBase
  nameWithType: ApiTestBase.ApiTestBase
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.ApiTestBase
  package: com.azure.messaging.eventhubs.implementation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString*
  name: getConnectionString
  nameWithType: ApiTestBase.getConnectionString
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionString
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode*
  name: skipIfNotRecordMode
  nameWithType: ApiTestBase.skipIfNotRecordMode
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.skipIfNotRecordMode
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType*
  name: setTransportType
  nameWithType: ApiTestBase.setTransportType
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.setTransportType
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions*
  name: getConnectionOptions
  nameWithType: ApiTestBase.getConnectionOptions
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionOptions
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties*
  name: getConnectionStringProperties
  nameWithType: ApiTestBase.getConnectionStringProperties
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getConnectionStringProperties
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential*
  name: getTokenCredential
  nameWithType: ApiTestBase.getTokenCredential
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTokenCredential
  package: com.azure.messaging.eventhubs.implementation
- uid: 5f183614
  spec.java:
  - name: Reactor
    fullName: Reactor
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor*
  name: getReactor
  nameWithType: ApiTestBase.getReactor
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactor
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider*
  name: getReactorProvider
  nameWithType: ApiTestBase.getReactorProvider
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getReactorProvider
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType*
  name: getAuthorizationType
  nameWithType: ApiTestBase.getAuthorizationType
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getAuthorizationType
  package: com.azure.messaging.eventhubs.implementation
- uid: 05580a22
  spec.java:
  - name: Closeable...
    fullName: Closeable...
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose*
  name: dispose
  nameWithType: ApiTestBase.dispose
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.dispose
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest*
  name: setupTest
  nameWithType: ApiTestBase.setupTest
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.setupTest
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest*
  name: teardownTest
  nameWithType: ApiTestBase.teardownTest
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.teardownTest
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode*
  name: getTestMode
  nameWithType: ApiTestBase.getTestMode
  fullName: com.azure.messaging.eventhubs.implementation.ApiTestBase.getTestMode
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.core.test.TestBase.afterTest()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: afterTest()
  nameWithType: TestBase.afterTest()
  fullName: com.azure.core.test.TestBase.afterTest()
  type: Method
  summary: "<p>Dispose of any resources and clean-up after a test case runs. Can be overridden in an inheriting class to add additional functionality during test teardown. </p>"
  syntax:
    content: protected void afterTest()
- uid: com.azure.core.test.TestBase.beforeTest()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: beforeTest()
  nameWithType: TestBase.beforeTest()
  fullName: com.azure.core.test.TestBase.beforeTest()
  type: Method
  summary: "<p>Performs any set-up before each test case. Any initialization that occurs in TestBase occurs first before this. Can be overridden in an inheriting class to add additional functionality during test set-up. </p>"
  syntax:
    content: protected void beforeTest()
- uid: com.azure.core.test.TestBase.interceptorManager
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: interceptorManager
  nameWithType: TestBase.interceptorManager
  fullName: com.azure.core.test.TestBase.interceptorManager
  type: Field
  syntax:
    content: protected InterceptorManager interceptorManager
    return:
      type: com.azure.core.test.InterceptorManager
- uid: com.azure.core.test.TestBase.setupClass()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: setupClass()
  nameWithType: TestBase.setupClass()
  fullName: com.azure.core.test.TestBase.setupClass()
  type: Method
  summary: "<p>Before tests are executed, determines the test mode by reading the <xref uid=\"\" data-throw-if-not-resolved=\"false\">TestBase#AZURE_TEST_MODE</xref> environment variable. If it is not set, <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref></p>"
  syntax:
    content: public static void setupClass()
- uid: com.azure.core.test.TestBase.testName()
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: testName()
  nameWithType: TestBase.testName()
  fullName: com.azure.core.test.TestBase.testName()
  type: Method
  summary: "<p>Gets the name of the current test being run. </p>\r\n<p>NOTE: This could not be implemented in the base class using <xref uid=\"\" data-throw-if-not-resolved=\"false\">TestName</xref> because it always returns<code>nullÂ \r\n    </code> . See <a href=\"https://stackoverflow.com/a/16113631/4220757\">https://stackoverflow.com/a/16113631/4220757</a>.</p>\r\n<p></p>"
  syntax:
    content: protected abstract String testName()
    return:
      type: 9065866d
      description: <p>The name of the current test. </p>
- uid: com.azure.core.test.TestBase.testResourceNamer
  parent: com.azure.core.test.TestBase
  href: com.azure.core.test.TestBase.yml
  name: testResourceNamer
  nameWithType: TestBase.testResourceNamer
  fullName: com.azure.core.test.TestBase.testResourceNamer
  type: Field
  syntax:
    content: protected TestResourceNamer testResourceNamer
    return:
      type: com.azure.core.test.utils.TestResourceNamer
- uid: com.azure.core.test.TestBase
  parent: com.azure.core.test
  href: com.azure.core.test.TestBase.yml
  name: TestBase
  nameWithType: TestBase
  fullName: com.azure.core.test.TestBase
  type: Class
  summary: "<p>Base class for running live and playback tests using <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref>. </p>"
  syntax:
    content: public class TestBase
- uid: com.azure.messaging.eventhubs.BackCompatTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.BackCompatTest.yml
  name: BackCompatTest
  nameWithType: BackCompatTest
  fullName: com.azure.messaging.eventhubs.BackCompatTest
  type: Class
  summary: "<p>Integration test that verifies backwards compatibility with a previous version of the SDK. </p>"
  syntax:
    content: public class BackCompatTest
- uid: com.azure.messaging.eventhubs.EventDataBatchIntegrationTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventDataBatchIntegrationTest.yml
  name: EventDataBatchIntegrationTest
  nameWithType: EventDataBatchIntegrationTest
  fullName: com.azure.messaging.eventhubs.EventDataBatchIntegrationTest
  type: Class
  syntax:
    content: public class EventDataBatchIntegrationTest
- uid: com.azure.messaging.eventhubs.EventHubClientIntegrationTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubClientIntegrationTest.yml
  name: EventHubClientIntegrationTest
  nameWithType: EventHubClientIntegrationTest
  fullName: com.azure.messaging.eventhubs.EventHubClientIntegrationTest
  type: Class
  summary: "<p>Tests scenarios on <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. </p>"
  syntax:
    content: public class EventHubClientIntegrationTest
- uid: com.azure.messaging.eventhubs.EventHubClientMetadataIntegrationTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubClientMetadataIntegrationTest.yml
  name: EventHubClientMetadataIntegrationTest
  nameWithType: EventHubClientMetadataIntegrationTest
  fullName: com.azure.messaging.eventhubs.EventHubClientMetadataIntegrationTest
  type: Class
  summary: "<p>Tests the metadata operations such as fetching partition properties and event hub properties. </p>"
  syntax:
    content: public class EventHubClientMetadataIntegrationTest
- uid: com.azure.messaging.eventhubs.EventHubConsumerIntegrationTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubConsumerIntegrationTest.yml
  name: EventHubConsumerIntegrationTest
  nameWithType: EventHubConsumerIntegrationTest
  fullName: com.azure.messaging.eventhubs.EventHubConsumerIntegrationTest
  type: Class
  summary: "<p>Integration tests with Azure Event Hubs service. There are other tests that also test <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> in other scenarios.</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumerIntegrationTest
- uid: com.azure.messaging.eventhubs.EventPositionIntegrationTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventPositionIntegrationTest.yml
  name: EventPositionIntegrationTest
  nameWithType: EventPositionIntegrationTest
  fullName: com.azure.messaging.eventhubs.EventPositionIntegrationTest
  type: Class
  summary: "<p>Tests that <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> can be created with various <xref uid=\"\" data-throw-if-not-resolved=\"false\">EventPositions</xref>. </p>"
  syntax:
    content: public class EventPositionIntegrationTest
- uid: com.azure.messaging.eventhubs.implementation.CBSChannelTest
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.CBSChannelTest.yml
  name: CBSChannelTest
  nameWithType: CBSChannelTest
  fullName: com.azure.messaging.eventhubs.implementation.CBSChannelTest
  type: Class
  syntax:
    content: public class CBSChannelTest
- uid: com.azure.messaging.eventhubs.implementation.ReactorConnectionIntegrationTest
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorConnectionIntegrationTest.yml
  name: ReactorConnectionIntegrationTest
  nameWithType: ReactorConnectionIntegrationTest
  fullName: com.azure.messaging.eventhubs.implementation.ReactorConnectionIntegrationTest
  type: Class
  syntax:
    content: public class ReactorConnectionIntegrationTest
- uid: com.azure.messaging.eventhubs.InteropAmqpPropertiesTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.InteropAmqpPropertiesTest.yml
  name: InteropAmqpPropertiesTest
  nameWithType: InteropAmqpPropertiesTest
  fullName: com.azure.messaging.eventhubs.InteropAmqpPropertiesTest
  type: Class
  syntax:
    content: public class InteropAmqpPropertiesTest
- uid: com.azure.messaging.eventhubs.SetPrefetchCountTest
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.SetPrefetchCountTest.yml
  name: SetPrefetchCountTest
  nameWithType: SetPrefetchCountTest
  fullName: com.azure.messaging.eventhubs.SetPrefetchCountTest
  type: Class
  summary: "<p>Verifies we can use various prefetch options with <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref>. </p>"
  syntax:
    content: public class SetPrefetchCountTest
- uid: com.azure.core.util.logging.ClientLogger
  parent: com.azure.core.util.logging
  href: com.azure.core.util.logging.ClientLogger.yml
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{}Â \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
- uid: com.azure.messaging.eventhubs.implementation.ConnectionStringProperties
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ConnectionStringProperties.yml
  name: ConnectionStringProperties
  nameWithType: ConnectionStringProperties
  fullName: com.azure.messaging.eventhubs.implementation.ConnectionStringProperties
  type: Class
  summary: "<p>The set of properties that comprise a connection string from the Azure portal. </p>"
  syntax:
    content: public class ConnectionStringProperties
- uid: com.azure.core.credentials.TokenCredential
  parent: com.azure.core.credentials
  href: com.azure.core.credentials.TokenCredential.yml
  name: TokenCredential
  nameWithType: TokenCredential
  fullName: com.azure.core.credentials.TokenCredential
  type: Interface
  summary: "<p>The interface for credentials that can provide a token. </p>"
  syntax:
    content: public interface TokenCredential
- uid: com.azure.messaging.eventhubs.implementation.ReactorProvider
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorProvider.yml
  name: ReactorProvider
  nameWithType: ReactorProvider
  fullName: com.azure.messaging.eventhubs.implementation.ReactorProvider
  type: Class
  syntax:
    content: public class ReactorProvider
- uid: com.azure.messaging.eventhubs.implementation.ConnectionOptions
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ConnectionOptions.yml
  name: ConnectionOptions
  nameWithType: ConnectionOptions
  fullName: com.azure.messaging.eventhubs.implementation.ConnectionOptions
  type: Class
  summary: "<p>A wrapper class that contains all parameters that are needed to establish a connection to an Event Hub. </p>"
  syntax:
    content: public class ConnectionOptions
- uid: com.azure.core.amqp.TransportType
  parent: com.azure.core.amqp
  href: com.azure.core.amqp.TransportType.yml
  name: TransportType
  nameWithType: TransportType
  fullName: com.azure.core.amqp.TransportType
  type: Enum
  summary: "<p>All TransportType switches available for AMQP protocol. </p>"
  syntax:
    content: public enum TransportType
- uid: com.azure.messaging.eventhubs.implementation.CBSAuthorizationType
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.CBSAuthorizationType.yml
  name: CBSAuthorizationType
  nameWithType: CBSAuthorizationType
  fullName: com.azure.messaging.eventhubs.implementation.CBSAuthorizationType
  type: Enum
  summary: "<p>An enumeration of supported authorization methods with the <xref uid=\"\" data-throw-if-not-resolved=\"false\">CBSNode</xref>. </p>"
  syntax:
    content: public enum CBSAuthorizationType
- uid: com.azure.core.test.TestMode
  parent: com.azure.core.test
  href: com.azure.core.test.TestMode.yml
  name: TestMode
  nameWithType: TestMode
  fullName: com.azure.core.test.TestMode
  type: Enum
  summary: "<p>The possible testing modes. </p>"
  syntax:
    content: public enum TestMode
- uid: com.azure.core.test.TestMode.RECORD
  parent: com.azure.core.test.TestMode
  href: com.azure.core.test.TestMode.yml
  name: RECORD
  nameWithType: TestMode.RECORD
  fullName: com.azure.core.test.TestMode.RECORD
  type: Field
  summary: "<p>Record data from a live test. </p>"
  syntax:
    content: public RECORD
- uid: com.azure.core.test.TestMode.PLAYBACK
  parent: com.azure.core.test.TestMode
  href: com.azure.core.test.TestMode.yml
  name: PLAYBACK
  nameWithType: TestMode.PLAYBACK
  fullName: com.azure.core.test.TestMode.PLAYBACK
  type: Field
  summary: "<p>Playback data from an existing test session. </p>"
  syntax:
    content: public PLAYBACK
