### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  id: ManagedInstanceTdeCertificatesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient(com.azure.resourcemanager.sql.SqlManagementClient)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  - com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  langs:
  - java
  name: ManagedInstanceTdeCertificatesClient
  nameWithType: ManagedInstanceTdeCertificatesClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  type: Class
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in ManagedInstanceTdeCertificates.
  syntax:
    content: public final class ManagedInstanceTdeCertificatesClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient(com.azure.resourcemanager.sql.SqlManagementClient)
  id: ManagedInstanceTdeCertificatesClient(com.azure.resourcemanager.sql.SqlManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: ManagedInstanceTdeCertificatesClient(SqlManagementClient client)
  nameWithType: ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient(SqlManagementClient client)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient(SqlManagementClient client)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient*
  type: Constructor
  package: com.azure.resourcemanager.sql.fluent
  summary: Initializes an instance of ManagedInstanceTdeCertificatesClient.
  syntax:
    content: public ManagedInstanceTdeCertificatesClient(SqlManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.SqlManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginCreate(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public void beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: beginCreateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public void beginCreateWithoutPolling(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Void> beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: beginCreateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Void> beginCreateWithoutPollingAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Response<Void>> beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: beginCreateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Response<Void>> beginCreateWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public void create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public void create(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Void> createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Void> createAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  nameWithType: ManagedInstanceTdeCertificatesClient.createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.TdeCertificate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  nameWithType: ManagedInstanceTdeCertificatesClient.createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a TDE certificate for a given server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String managedInstanceName, TdeCertificate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.TdeCertificate
      description: A TDE certificate that can be uploaded into a server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.sql.SqlManagementClient
  name: SqlManagementClient
  nameWithType: SqlManagementClient
  fullName: com.azure.resourcemanager.sql.SqlManagementClient
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient*
  name: ManagedInstanceTdeCertificatesClient
  nameWithType: ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.ManagedInstanceTdeCertificatesClient
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.sql.models.TdeCertificate
  name: TdeCertificate
  nameWithType: TdeCertificate
  fullName: com.azure.resourcemanager.sql.models.TdeCertificate
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: ManagedInstanceTdeCertificatesClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate*
  name: beginCreate
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreate
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreate
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync*
  name: createAsync
  nameWithType: ManagedInstanceTdeCertificatesClient.createAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.createAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create*
  name: create
  nameWithType: ManagedInstanceTdeCertificatesClient.create
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.create
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync*
  name: beginCreateWithoutPollingWithResponseAsync
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync*
  name: beginCreateWithoutPollingAsync
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling*
  name: beginCreateWithoutPolling
  nameWithType: ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ManagedInstanceTdeCertificatesClient.beginCreateWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
