### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.BeanUtil.getDefaultValue*"
fullName: "com.fasterxml.jackson.databind.util.BeanUtil.getDefaultValue"
name: "getDefaultValue"
nameWithType: "BeanUtil.getDefaultValue"
members:
- uid: "com.fasterxml.jackson.databind.util.BeanUtil.getDefaultValue(com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.util.BeanUtil.getDefaultValue(JavaType type)"
  name: "getDefaultValue(JavaType type)"
  nameWithType: "BeanUtil.getDefaultValue(JavaType type)"
  summary: "Accessor used to find out \"default value\" to use for comparing values to serialize, to determine whether to exclude value from serialization with inclusion type of <xref uid=\"com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonInclude.Include#NON_DEFAULT\"></xref>.\n\nDefault logic is such that for primitives and wrapper types for primitives, expected defaults (0 for \\`int\\` and \\`java.lang.Integer\\`) are returned; for Strings, empty String, and for structured (Maps, Collections, arrays) and reference types, criteria <xref uid=\"com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonInclude.Include#NON_DEFAULT\"></xref> is used."
  parameters:
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Object getDefaultValue(JavaType type)"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
