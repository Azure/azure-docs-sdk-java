### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser"
fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser"
name: "TokenBuffer.Parser"
nameWithType: "TokenBuffer.Parser"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.base.ParserMinimalBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser._codec()"
- "com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()"
- "com.fasterxml.jackson.core.JsonParser.canParseAsync()"
- "com.fasterxml.jackson.core.JsonParser.canReadObjectId()"
- "com.fasterxml.jackson.core.JsonParser.canReadTypeId()"
- "com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonParser.currentName()"
- "com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.finishToken()"
- "com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()"
- "com.fasterxml.jackson.core.JsonParser.getBinaryValue()"
- "com.fasterxml.jackson.core.JsonParser.getBooleanValue()"
- "com.fasterxml.jackson.core.JsonParser.getByteValue()"
- "com.fasterxml.jackson.core.JsonParser.getCodec()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentLocation()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentValue()"
- "com.fasterxml.jackson.core.JsonParser.getDecimalValue()"
- "com.fasterxml.jackson.core.JsonParser.getDoubleValue()"
- "com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()"
- "com.fasterxml.jackson.core.JsonParser.getFeatureMask()"
- "com.fasterxml.jackson.core.JsonParser.getFloatValue()"
- "com.fasterxml.jackson.core.JsonParser.getFormatFeatures()"
- "com.fasterxml.jackson.core.JsonParser.getInputSource()"
- "com.fasterxml.jackson.core.JsonParser.getIntValue()"
- "com.fasterxml.jackson.core.JsonParser.getLongValue()"
- "com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()"
- "com.fasterxml.jackson.core.JsonParser.getNumberType()"
- "com.fasterxml.jackson.core.JsonParser.getNumberValue()"
- "com.fasterxml.jackson.core.JsonParser.getObjectId()"
- "com.fasterxml.jackson.core.JsonParser.getSchema()"
- "com.fasterxml.jackson.core.JsonParser.getShortValue()"
- "com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonParser.getTokenLocation()"
- "com.fasterxml.jackson.core.JsonParser.getTypeId()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsDouble()"
- "com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.core.JsonParser.isNaN()"
- "com.fasterxml.jackson.core.JsonParser.nextBooleanValue()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)"
- "com.fasterxml.jackson.core.JsonParser.nextIntValue(int)"
- "com.fasterxml.jackson.core.JsonParser.nextLongValue(long)"
- "com.fasterxml.jackson.core.JsonParser.nextTextValue()"
- "com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)"
- "com.fasterxml.jackson.core.JsonParser.overrideStdFeatures(int,int)"
- "com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()"
- "com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonParser.setCurrentValue(java.lang.Object)"
- "com.fasterxml.jackson.core.JsonParser.setFeatureMask(int)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonParser.version()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.close()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getText()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)"
- "com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "protected static final class TokenBuffer.Parser extends ParserMinimalBase"
constructors:
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.Parser(com.fasterxml.jackson.databind.util.TokenBuffer.Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.Parser(com.fasterxml.jackson.databind.util.TokenBuffer.Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext)"
fields:
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._byteBuilder"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._closed"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._codec"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._hasNativeIds"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._hasNativeObjectIds"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._hasNativeTypeIds"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._location"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._parsingContext"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._segment"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._segmentPtr"
methods:
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._checkIsNumber()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._convertNumberToInt(java.lang.Number)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._convertNumberToLong(java.lang.Number)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._currentObject()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser._handleEOF()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.canReadObjectId()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.canReadTypeId()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.close()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getBigIntegerValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getCodec()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getCurrentLocation()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getCurrentName()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getDecimalValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getDoubleValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getEmbeddedObject()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getFloatValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getIntValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getLongValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getNumberType()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getNumberValue()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getObjectId()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getParsingContext()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getText()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getTextCharacters()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getTextLength()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getTextOffset()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getTokenLocation()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getTypeId()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.hasTextCharacters()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.isClosed()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.isNaN()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.nextFieldName()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.nextToken()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.overrideCurrentName(java.lang.String)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.peekNextToken()"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.setLocation(com.fasterxml.jackson.core.JsonLocation)"
- "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.version()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
