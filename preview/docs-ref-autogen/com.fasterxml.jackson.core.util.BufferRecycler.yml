### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.BufferRecycler
  id: BufferRecycler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.BufferRecycler.BYTE_BASE64_CODEC_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.BYTE_READ_IO_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_CONCAT_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_ENCODING_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()
  - com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler(int,int)
  - com.fasterxml.jackson.core.util.BufferRecycler.CHAR_CONCAT_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.CHAR_NAME_COPY_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TOKEN_BUFFER
  - com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers
  - com.fasterxml.jackson.core.util.BufferRecycler._charBuffers
  - com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int,int)
  - com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int,int)
  - com.fasterxml.jackson.core.util.BufferRecycler.balloc(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.calloc(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength(int)
  - com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(int,byte[])
  - com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(int,char[])
  langs:
  - java
  name: BufferRecycler
  nameWithType: BufferRecycler
  fullName: com.fasterxml.jackson.core.util.BufferRecycler
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: >-
    This is a small utility class, whose main functionality is to allow simple reuse of raw byte/char buffers. It is usually used through `ThreadLocal` member of the owning class pointing to instance of this class through a `SoftReference`. The end result is a low-overhead GC-cleanable recycling: hopefully ideal for use by stream readers.


    Rewritten in 2.10 to be thread-safe (see \[jackson-core\#479\] for details), to not rely on `ThreadLocal` access.
  syntax:
    content: public class BufferRecycler
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_BASE64_CODEC_BUFFER
  id: BYTE_BASE64_CODEC_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BYTE_BASE64_CODEC_BUFFER
  nameWithType: BufferRecycler.BYTE_BASE64_CODEC_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_BASE64_CODEC_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used for concatenating binary data that is either being encoded as base64 output, or decoded from base64 input.
  syntax:
    content: public static final int BYTE_BASE64_CODEC_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_READ_IO_BUFFER
  id: BYTE_READ_IO_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BYTE_READ_IO_BUFFER
  nameWithType: BufferRecycler.BYTE_READ_IO_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_READ_IO_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used for reading byte-based input.
  syntax:
    content: public static final int BYTE_READ_IO_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_CONCAT_BUFFER
  id: BYTE_WRITE_CONCAT_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BYTE_WRITE_CONCAT_BUFFER
  nameWithType: BufferRecycler.BYTE_WRITE_CONCAT_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_CONCAT_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used for temporarily concatenating output; used for example when requesting output as byte array.
  syntax:
    content: public static final int BYTE_WRITE_CONCAT_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_ENCODING_BUFFER
  id: BYTE_WRITE_ENCODING_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BYTE_WRITE_ENCODING_BUFFER
  nameWithType: BufferRecycler.BYTE_WRITE_ENCODING_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BYTE_WRITE_ENCODING_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used for temporarily storing encoded content; used for example by UTF-8 encoding writer
  syntax:
    content: public static final int BYTE_WRITE_ENCODING_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()
  id: BufferRecycler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BufferRecycler()
  nameWithType: BufferRecycler.BufferRecycler()
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler()
  overload: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  summary: Default constructor used for creating instances of this default implementation.
  syntax:
    content: public BufferRecycler()
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler(int,int)
  id: BufferRecycler(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: BufferRecycler(int bbCount, int cbCount)
  nameWithType: BufferRecycler.BufferRecycler(int bbCount, int cbCount)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler(int bbCount, int cbCount)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  summary: Alternate constructor to be used by sub-classes, to allow customization of number of low-level buffers in use.
  syntax:
    content: protected BufferRecycler(int bbCount, int cbCount)
    parameters:
    - id: bbCount
      type: int
    - id: cbCount
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_CONCAT_BUFFER
  id: CHAR_CONCAT_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: CHAR_CONCAT_BUFFER
  nameWithType: BufferRecycler.CHAR_CONCAT_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_CONCAT_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used by generators; for byte-backed generators for buffering of <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> values to output (before encoding into UTF-8), and for char-backed generators as actual concatenation buffer.
  syntax:
    content: public static final int CHAR_CONCAT_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_NAME_COPY_BUFFER
  id: CHAR_NAME_COPY_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: CHAR_NAME_COPY_BUFFER
  nameWithType: BufferRecycler.CHAR_NAME_COPY_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_NAME_COPY_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: For parsers, temporary buffer into which `char[]` for names is copied when requested as such; for `WriterBasedGenerator` used for buffering during `writeString(Reader)` operation (not commonly used).
  syntax:
    content: public static final int CHAR_NAME_COPY_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER
  id: CHAR_TEXT_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: CHAR_TEXT_BUFFER
  nameWithType: BufferRecycler.CHAR_TEXT_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: 'Used through <xref uid="com.fasterxml.jackson.core.util.TextBuffer" data-throw-if-not-resolved="false">TextBuffer</xref>: directly by parsers (to concatenate String values) and indirectly via <xref uid="com.fasterxml.jackson.core.io.SegmentedStringWriter" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.io.SegmentedStringWriter</xref> when serializing (databind level `ObjectMapper` and `ObjectWriter`). In both cases used as segments (and not for whole value), but may result in retention of larger chunks for big content (long text values during parsing; bigger output documents for generation).'
  syntax:
    content: public static final int CHAR_TEXT_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TOKEN_BUFFER
  id: CHAR_TOKEN_BUFFER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: CHAR_TOKEN_BUFFER
  nameWithType: BufferRecycler.CHAR_TOKEN_BUFFER
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TOKEN_BUFFER
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Buffer used as input buffer for tokenization for character-based parsers.
  syntax:
    content: public static final int CHAR_TOKEN_BUFFER
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers
  id: _byteBuffers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: _byteBuffers
  nameWithType: BufferRecycler._byteBuffers
  fullName: com.fasterxml.jackson.core.util.BufferRecycler._byteBuffers
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected final AtomicReferenceArray<byte[]> _byteBuffers
    return:
      type: java.util.concurrent.atomic.AtomicReferenceArray<byte[]>
- uid: com.fasterxml.jackson.core.util.BufferRecycler._charBuffers
  id: _charBuffers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: _charBuffers
  nameWithType: BufferRecycler._charBuffers
  fullName: com.fasterxml.jackson.core.util.BufferRecycler._charBuffers
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected final AtomicReferenceArray<char[]> _charBuffers
    return:
      type: java.util.concurrent.atomic.AtomicReferenceArray<char[]>
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int)
  id: allocByteBuffer(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: allocByteBuffer(int ix)
  nameWithType: BufferRecycler.allocByteBuffer(int ix)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int ix)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public final byte[] allocByteBuffer(int ix)
    parameters:
    - id: ix
      type: int
      description: One of <code>READ_IO_BUFFER</code> constants.
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int,int)
  id: allocByteBuffer(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: allocByteBuffer(int ix, int minSize)
  nameWithType: BufferRecycler.allocByteBuffer(int ix, int minSize)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int ix, int minSize)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public byte[] allocByteBuffer(int ix, int minSize)
    parameters:
    - id: ix
      type: int
    - id: minSize
      type: int
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int)
  id: allocCharBuffer(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: allocCharBuffer(int ix)
  nameWithType: BufferRecycler.allocCharBuffer(int ix)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int ix)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public final char[] allocCharBuffer(int ix)
    parameters:
    - id: ix
      type: int
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int,int)
  id: allocCharBuffer(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: allocCharBuffer(int ix, int minSize)
  nameWithType: BufferRecycler.allocCharBuffer(int ix, int minSize)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int ix, int minSize)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public char[] allocCharBuffer(int ix, int minSize)
    parameters:
    - id: ix
      type: int
    - id: minSize
      type: int
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.balloc(int)
  id: balloc(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: balloc(int size)
  nameWithType: BufferRecycler.balloc(int size)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.balloc(int size)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.balloc*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected byte[] balloc(int size)
    parameters:
    - id: size
      type: int
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength(int)
  id: byteBufferLength(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: byteBufferLength(int ix)
  nameWithType: BufferRecycler.byteBufferLength(int ix)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength(int ix)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected int byteBufferLength(int ix)
    parameters:
    - id: ix
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.calloc(int)
  id: calloc(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: calloc(int size)
  nameWithType: BufferRecycler.calloc(int size)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.calloc(int size)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.calloc*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected char[] calloc(int size)
    parameters:
    - id: size
      type: int
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength(int)
  id: charBufferLength(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: charBufferLength(int ix)
  nameWithType: BufferRecycler.charBufferLength(int ix)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength(int ix)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected int charBufferLength(int ix)
    parameters:
    - id: ix
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(int,byte[])
  id: releaseByteBuffer(int,byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: releaseByteBuffer(int ix, byte[] buffer)
  nameWithType: BufferRecycler.releaseByteBuffer(int ix, byte[] buffer)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(int ix, byte[] buffer)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public void releaseByteBuffer(int ix, byte[] buffer)
    parameters:
    - id: ix
      type: int
    - id: buffer
      type: byte[]
- uid: com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(int,char[])
  id: releaseCharBuffer(int,char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.BufferRecycler
  langs:
  - java
  name: releaseCharBuffer(int ix, char[] buffer)
  nameWithType: BufferRecycler.releaseCharBuffer(int ix, char[] buffer)
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(int ix, char[] buffer)
  overload: com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public void releaseCharBuffer(int ix, char[] buffer)
    parameters:
    - id: ix
      type: int
    - id: buffer
      type: char[]
references:
- uid: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler*
  name: BufferRecycler
  nameWithType: BufferRecycler.BufferRecycler
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.BufferRecycler
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer*
  name: allocByteBuffer
  nameWithType: BufferRecycler.allocByteBuffer
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer*
  name: releaseByteBuffer
  nameWithType: BufferRecycler.releaseByteBuffer
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer
  package: com.fasterxml.jackson.core.util
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer*
  name: allocCharBuffer
  nameWithType: BufferRecycler.allocCharBuffer
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer*
  name: releaseCharBuffer
  nameWithType: BufferRecycler.releaseCharBuffer
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength*
  name: byteBufferLength
  nameWithType: BufferRecycler.byteBufferLength
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.byteBufferLength
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength*
  name: charBufferLength
  nameWithType: BufferRecycler.charBufferLength
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.charBufferLength
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.balloc*
  name: balloc
  nameWithType: BufferRecycler.balloc
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.balloc
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.BufferRecycler.calloc*
  name: calloc
  nameWithType: BufferRecycler.calloc
  fullName: com.fasterxml.jackson.core.util.BufferRecycler.calloc
  package: com.fasterxml.jackson.core.util
- uid: java.util.concurrent.atomic.AtomicReferenceArray<byte[]>
  spec.java:
  - uid: java.util.concurrent.atomic.AtomicReferenceArray
    name: AtomicReferenceArray
    fullName: java.util.concurrent.atomic.AtomicReferenceArray
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.atomic.AtomicReferenceArray<char[]>
  spec.java:
  - uid: java.util.concurrent.atomic.AtomicReferenceArray
    name: AtomicReferenceArray
    fullName: java.util.concurrent.atomic.AtomicReferenceArray
  - name: <
    fullName: <
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.concurrent.atomic.AtomicReferenceArray
  name: AtomicReferenceArray
  nameWithType: AtomicReferenceArray
  fullName: java.util.concurrent.atomic.AtomicReferenceArray
