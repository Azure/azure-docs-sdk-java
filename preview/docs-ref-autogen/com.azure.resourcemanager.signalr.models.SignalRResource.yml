### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.models.SignalRResource"
fullName: "com.azure.resourcemanager.signalr.models.SignalRResource"
name: "SignalRResource"
nameWithType: "SignalRResource"
summary: "An immutable client-side representation of SignalRResource."
syntax: "public interface SignalRResource"
methods:
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.cors()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.cors()"
  name: "cors()"
  nameWithType: "SignalRResource.cors()"
  summary: "Gets the cors property: Cross-Origin Resource Sharing (CORS) settings."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRCorsSettings cors()"
  returns:
    description: "the cors value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.disableAadAuth()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.disableAadAuth()"
  name: "disableAadAuth()"
  nameWithType: "SignalRResource.disableAadAuth()"
  summary: "Gets the disableAadAuth property: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won't work."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean disableAadAuth()"
  returns:
    description: "the disableAadAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "SignalRResource.disableLocalAuth()"
  summary: "Gets the disableLocalAuth property: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won't work."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean disableLocalAuth()"
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.externalIp()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.externalIp()"
  name: "externalIp()"
  nameWithType: "SignalRResource.externalIp()"
  summary: "Gets the externalIp property: The publicly accessible IP of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String externalIp()"
  returns:
    description: "the externalIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.features()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.features()"
  name: "features()"
  nameWithType: "SignalRResource.features()"
  summary: "Gets the features property: List of the featureFlags.\n\nFeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags."
  modifiers:
  - "abstract"
  syntax: "public abstract List<SignalRFeature> features()"
  returns:
    description: "the features value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.hostname()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.hostname()"
  name: "hostname()"
  nameWithType: "SignalRResource.hostname()"
  summary: "Gets the hostname property: FQDN of the service instance."
  modifiers:
  - "abstract"
  syntax: "public abstract String hostname()"
  returns:
    description: "the hostname value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.hostnamePrefix()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.hostnamePrefix()"
  name: "hostnamePrefix()"
  nameWithType: "SignalRResource.hostnamePrefix()"
  summary: "Gets the hostnamePrefix property: Deprecated."
  modifiers:
  - "abstract"
  syntax: "public abstract String hostnamePrefix()"
  returns:
    description: "the hostnamePrefix value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.id()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.id()"
  name: "id()"
  nameWithType: "SignalRResource.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.identity()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.identity()"
  name: "identity()"
  nameWithType: "SignalRResource.identity()"
  summary: "Gets the identity property: A class represent managed identities used for request and response."
  modifiers:
  - "abstract"
  syntax: "public abstract ManagedIdentity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ManagedIdentity?alt=com.azure.resourcemanager.signalr.models.ManagedIdentity&text=ManagedIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.innerModel()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.innerModel()"
  name: "innerModel()"
  nameWithType: "SignalRResource.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRResourceInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRResourceInner&text=SignalRResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.kind()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.kind()"
  name: "kind()"
  nameWithType: "SignalRResource.kind()"
  summary: "Gets the kind property: The kind of the service, it can be SignalR or RawWebSockets."
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceKind kind()"
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ServiceKind?alt=com.azure.resourcemanager.signalr.models.ServiceKind&text=ServiceKind\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.listKeys()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.listKeys()"
  name: "listKeys()"
  nameWithType: "SignalRResource.listKeys()"
  summary: "Get the access keys of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRKeys listKeys()"
  returns:
    description: "the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRKeys?alt=com.azure.resourcemanager.signalr.models.SignalRKeys&text=SignalRKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.listKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.listKeysWithResponse(Context context)"
  name: "listKeysWithResponse(Context context)"
  nameWithType: "SignalRResource.listKeysWithResponse(Context context)"
  summary: "Get the access keys of the resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SignalRKeys> listKeysWithResponse(Context context)"
  returns:
    description: "the access keys of the resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRKeys?alt=com.azure.resourcemanager.signalr.models.SignalRKeys&text=SignalRKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.liveTraceConfiguration()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.liveTraceConfiguration()"
  name: "liveTraceConfiguration()"
  nameWithType: "SignalRResource.liveTraceConfiguration()"
  summary: "Gets the liveTraceConfiguration property: Live trace configuration of a Microsoft.SignalRService resource."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveTraceConfiguration liveTraceConfiguration()"
  returns:
    description: "the liveTraceConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.LiveTraceConfiguration?alt=com.azure.resourcemanager.signalr.models.LiveTraceConfiguration&text=LiveTraceConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.location()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.location()"
  name: "location()"
  nameWithType: "SignalRResource.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.name()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.name()"
  name: "name()"
  nameWithType: "SignalRResource.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.networkACLs()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.networkACLs()"
  name: "networkACLs()"
  nameWithType: "SignalRResource.networkACLs()"
  summary: "Gets the networkACLs property: Network ACLs for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRNetworkACLs networkACLs()"
  returns:
    description: "the networkACLs value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRNetworkACLs?alt=com.azure.resourcemanager.signalr.models.SignalRNetworkACLs&text=SignalRNetworkACLs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "SignalRResource.privateEndpointConnections()"
  summary: "Gets the privateEndpointConnections property: Private endpoint connections to the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrivateEndpointConnection> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.PrivateEndpointConnection?alt=com.azure.resourcemanager.signalr.models.PrivateEndpointConnection&text=PrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.provisioningState()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.provisioningState()"
  name: "provisioningState()"
  nameWithType: "SignalRResource.provisioningState()"
  summary: "Gets the provisioningState property: Provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ProvisioningState?alt=com.azure.resourcemanager.signalr.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "SignalRResource.publicNetworkAccess()"
  summary: "Gets the publicNetworkAccess property: Enable or disable public network access. Default to \"Enabled\". When it's Enabled, network ACLs still apply. When it's Disabled, public network access is always disabled no matter what you set in network ACLs."
  modifiers:
  - "abstract"
  syntax: "public abstract String publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.publicPort()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.publicPort()"
  name: "publicPort()"
  nameWithType: "SignalRResource.publicPort()"
  summary: "Gets the publicPort property: The publicly accessible port of the resource which is designed for browser/client side usage."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer publicPort()"
  returns:
    description: "the publicPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.refresh()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.refresh()"
  name: "refresh()"
  nameWithType: "SignalRResource.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRResource refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRResource?alt=com.azure.resourcemanager.signalr.models.SignalRResource&text=SignalRResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "SignalRResource.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResource refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRResource?alt=com.azure.resourcemanager.signalr.models.SignalRResource&text=SignalRResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.regenerateKey(com.azure.resourcemanager.signalr.models.RegenerateKeyParameters)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.regenerateKey(RegenerateKeyParameters parameters)"
  name: "regenerateKey(RegenerateKeyParameters parameters)"
  nameWithType: "SignalRResource.regenerateKey(RegenerateKeyParameters parameters)"
  summary: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  modifiers:
  - "abstract"
  parameters:
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRKeys regenerateKey(RegenerateKeyParameters parameters)"
  returns:
    description: "a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRKeys?alt=com.azure.resourcemanager.signalr.models.SignalRKeys&text=SignalRKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.regenerateKey(com.azure.resourcemanager.signalr.models.RegenerateKeyParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.regenerateKey(RegenerateKeyParameters parameters, Context context)"
  name: "regenerateKey(RegenerateKeyParameters parameters, Context context)"
  nameWithType: "SignalRResource.regenerateKey(RegenerateKeyParameters parameters, Context context)"
  summary: "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
  modifiers:
  - "abstract"
  parameters:
  - description: "Parameter that describes the Regenerate Key Operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.signalr.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRKeys regenerateKey(RegenerateKeyParameters parameters, Context context)"
  returns:
    description: "a class represents the access keys of the resource."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRKeys?alt=com.azure.resourcemanager.signalr.models.SignalRKeys&text=SignalRKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.region()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.region()"
  name: "region()"
  nameWithType: "SignalRResource.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.regionName()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.regionName()"
  name: "regionName()"
  nameWithType: "SignalRResource.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.resourceLogConfiguration()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.resourceLogConfiguration()"
  name: "resourceLogConfiguration()"
  nameWithType: "SignalRResource.resourceLogConfiguration()"
  summary: "Gets the resourceLogConfiguration property: Resource log configuration of a Microsoft.SignalRService resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceLogConfiguration resourceLogConfiguration()"
  returns:
    description: "the resourceLogConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ResourceLogConfiguration?alt=com.azure.resourcemanager.signalr.models.ResourceLogConfiguration&text=ResourceLogConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.restart()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.restart()"
  name: "restart()"
  nameWithType: "SignalRResource.restart()"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  syntax: "public abstract void restart()"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.restart(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.restart(Context context)"
  name: "restart(Context context)"
  nameWithType: "SignalRResource.restart(Context context)"
  summary: "Operation to restart a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void restart(Context context)"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.serverPort()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.serverPort()"
  name: "serverPort()"
  nameWithType: "SignalRResource.serverPort()"
  summary: "Gets the serverPort property: The publicly accessible port of the resource which is designed for customer server side usage."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer serverPort()"
  returns:
    description: "the serverPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.sharedPrivateLinkResources()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.sharedPrivateLinkResources()"
  name: "sharedPrivateLinkResources()"
  nameWithType: "SignalRResource.sharedPrivateLinkResources()"
  summary: "Gets the sharedPrivateLinkResources property: The list of shared private link resources."
  modifiers:
  - "abstract"
  syntax: "public abstract List<SharedPrivateLinkResource> sharedPrivateLinkResources()"
  returns:
    description: "the sharedPrivateLinkResources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SharedPrivateLinkResource?alt=com.azure.resourcemanager.signalr.models.SharedPrivateLinkResource&text=SharedPrivateLinkResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.sku()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.sku()"
  name: "sku()"
  nameWithType: "SignalRResource.sku()"
  summary: "Gets the sku property: The billing information of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceSku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ResourceSku?alt=com.azure.resourcemanager.signalr.models.ResourceSku&text=ResourceSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.systemData()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.systemData()"
  name: "systemData()"
  nameWithType: "SignalRResource.systemData()"
  summary: "Gets the systemData property: Metadata pertaining to creation and last modification of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.tags()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.tags()"
  name: "tags()"
  nameWithType: "SignalRResource.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.tls()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.tls()"
  name: "tls()"
  nameWithType: "SignalRResource.tls()"
  summary: "Gets the tls property: TLS settings for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRTlsSettings tls()"
  returns:
    description: "the tls value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRTlsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRTlsSettings&text=SignalRTlsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.type()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.type()"
  name: "type()"
  nameWithType: "SignalRResource.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.update()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.update()"
  name: "update()"
  nameWithType: "SignalRResource.update()"
  summary: "Begins update for the SignalRResource resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SignalRResource.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRResource.Update?alt=com.azure.resourcemanager.signalr.models.SignalRResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.upstream()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.upstream()"
  name: "upstream()"
  nameWithType: "SignalRResource.upstream()"
  summary: "Gets the upstream property: The settings for the Upstream when the service is in server-less mode."
  modifiers:
  - "abstract"
  syntax: "public abstract ServerlessUpstreamSettings upstream()"
  returns:
    description: "the upstream value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings?alt=com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings&text=ServerlessUpstreamSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.version()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.version()"
  name: "version()"
  nameWithType: "SignalRResource.version()"
  summary: "Gets the version property: Version of the resource. Probably you need the same or higher version of client SDKs."
  modifiers:
  - "abstract"
  syntax: "public abstract String version()"
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.signalr.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.4
