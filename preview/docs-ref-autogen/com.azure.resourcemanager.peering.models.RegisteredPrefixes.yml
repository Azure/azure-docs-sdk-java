### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes"
fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes"
name: "RegisteredPrefixes"
nameWithType: "RegisteredPrefixes"
summary: "Resource collection API of Registered<wbr>Prefixes."
syntax: "public interface RegisteredPrefixes"
methods:
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.define(String name)"
  name: "define(String name)"
  nameWithType: "RegisteredPrefixes.define(String name)"
  summary: "Begins definition for a new Peering<wbr>Registered<wbr>Prefix resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredPrefix.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new PeeringRegisteredPrefix resource."
  returns:
    description: "the first stage of the new PeeringRegisteredPrefix definition."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix.DefinitionStages.Blank?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  name: "delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  nameWithType: "RegisteredPrefixes.delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringName, String registeredPrefixName)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "RegisteredPrefixes.deleteById(String id)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "RegisteredPrefixes.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  nameWithType: "RegisteredPrefixes.deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  summary: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  desc: "Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  name: "get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  nameWithType: "RegisteredPrefixes.get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredPrefix get(String resourceGroupName, String peeringName, String registeredPrefixName)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getById(String id)"
  name: "getById(String id)"
  nameWithType: "RegisteredPrefixes.getById(String id)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringRegisteredPrefix getById(String id)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "RegisteredPrefixes.getByIdWithResponse(String id, Context context)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredPrefix> getByIdWithResponse(String id, Context context)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  name: "getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  nameWithType: "RegisteredPrefixes.getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  summary: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the registered prefix."
    name: "registeredPrefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringRegisteredPrefix> getWithResponse(String resourceGroupName, String peeringName, String registeredPrefixName, Context context)"
  desc: "Gets an existing registered prefix with the specified name under the given subscription, resource group and peering."
  returns:
    description: "an existing registered prefix with the specified name under the given subscription, resource group and\n     peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.listByPeering(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.listByPeering(String resourceGroupName, String peeringName)"
  name: "listByPeering(String resourceGroupName, String peeringName)"
  nameWithType: "RegisteredPrefixes.listByPeering(String resourceGroupName, String peeringName)"
  summary: "Lists all registered prefixes under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredPrefix> listByPeering(String resourceGroupName, String peeringName)"
  desc: "Lists all registered prefixes under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.listByPeering(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.RegisteredPrefixes.listByPeering(String resourceGroupName, String peeringName, Context context)"
  name: "listByPeering(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "RegisteredPrefixes.listByPeering(String resourceGroupName, String peeringName, Context context)"
  summary: "Lists all registered prefixes under the given subscription, resource group and peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringRegisteredPrefix> listByPeering(String resourceGroupName, String peeringName, Context context)"
  desc: "Lists all registered prefixes under the given subscription, resource group and peering."
  returns:
    description: "the paginated list of peering registered prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredPrefix&text=PeeringRegisteredPrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of RegisteredPrefixes."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
