### YamlMime:JavaMember
uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes*"
fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes"
name: "withExpectedDataSizeInTeraBytes"
nameWithType: "DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes"
members:
- uid: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int)"
  fullName: "com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  name: "withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  nameWithType: "DiskScheduleAvailabilityRequest.withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  summary: "Set the expectedDataSizeInTeraBytes property: The expected size of the data, which needs to be transferred in this job, in terabytes."
  parameters:
  - description: "the expectedDataSizeInTeraBytes value to set."
    name: "expectedDataSizeInTeraBytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiskScheduleAvailabilityRequest withExpectedDataSizeInTeraBytes(int expectedDataSizeInTeraBytes)"
  returns:
    description: "the DiskScheduleAvailabilityRequest object itself."
    type: "<xref href=\"com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest?alt=com.azure.resourcemanager.databox.models.DiskScheduleAvailabilityRequest&text=DiskScheduleAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.databox.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databox:1.0.0-beta.1
