### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.policy.RetryStrategy"
  id: "RetryStrategy"
  parent: "com.azure.core.http.policy"
  children:
  - "com.azure.core.http.policy.RetryStrategy.HTTP_STATUS_TOO_MANY_REQUESTS"
  - "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay(int)"
  - "com.azure.core.http.policy.RetryStrategy.getMaxRetries()"
  - "com.azure.core.http.policy.RetryStrategy.shouldRetry(com.azure.core.http.HttpResponse)"
  langs:
  - "java"
  name: "RetryStrategy"
  nameWithType: "RetryStrategy"
  fullName: "com.azure.core.http.policy.RetryStrategy"
  type: "Interface"
  package: "com.azure.core.http.policy"
  summary: "The interface for determining the retry strategy used in <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\">RetryPolicy</xref>."
  syntax:
    content: "public interface RetryStrategy"
- uid: "com.azure.core.http.policy.RetryStrategy.HTTP_STATUS_TOO_MANY_REQUESTS"
  id: "HTTP_STATUS_TOO_MANY_REQUESTS"
  parent: "com.azure.core.http.policy.RetryStrategy"
  langs:
  - "java"
  name: "HTTP_STATUS_TOO_MANY_REQUESTS"
  nameWithType: "RetryStrategy.HTTP_STATUS_TOO_MANY_REQUESTS"
  fullName: "com.azure.core.http.policy.RetryStrategy.HTTP_STATUS_TOO_MANY_REQUESTS"
  type: "Field"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public static final int HTTP_STATUS_TOO_MANY_REQUESTS"
    return:
      type: "int"
- uid: "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay(int)"
  id: "calculateRetryDelay(int)"
  parent: "com.azure.core.http.policy.RetryStrategy"
  langs:
  - "java"
  name: "calculateRetryDelay(int retryAttempts)"
  nameWithType: "RetryStrategy.calculateRetryDelay(int retryAttempts)"
  fullName: "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay(int retryAttempts)"
  overload: "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Computes the delay between each retry."
  syntax:
    content: "public abstract Duration calculateRetryDelay(int retryAttempts)"
    parameters:
    - id: "retryAttempts"
      type: "int"
      description: "The number of retry attempts completed so far."
    return:
      type: "java.time.Duration"
      description: "The delay duration before the next retry."
- uid: "com.azure.core.http.policy.RetryStrategy.getMaxRetries()"
  id: "getMaxRetries()"
  parent: "com.azure.core.http.policy.RetryStrategy"
  langs:
  - "java"
  name: "getMaxRetries()"
  nameWithType: "RetryStrategy.getMaxRetries()"
  fullName: "com.azure.core.http.policy.RetryStrategy.getMaxRetries()"
  overload: "com.azure.core.http.policy.RetryStrategy.getMaxRetries*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Max number of retry attempts to be make."
  syntax:
    content: "public abstract int getMaxRetries()"
    return:
      type: "int"
      description: "The max number of retry attempts."
- uid: "com.azure.core.http.policy.RetryStrategy.shouldRetry(com.azure.core.http.HttpResponse)"
  id: "shouldRetry(com.azure.core.http.HttpResponse)"
  parent: "com.azure.core.http.policy.RetryStrategy"
  langs:
  - "java"
  name: "shouldRetry(HttpResponse httpResponse)"
  nameWithType: "RetryStrategy.shouldRetry(HttpResponse httpResponse)"
  fullName: "com.azure.core.http.policy.RetryStrategy.shouldRetry(HttpResponse httpResponse)"
  overload: "com.azure.core.http.policy.RetryStrategy.shouldRetry*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "This method is consulted to determine if a retry attempt should be made for the given <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\">HttpResponse</xref> if the retry attempts are less than <xref uid=\"com.azure.core.http.policy.RetryStrategy.getMaxRetries()\" data-throw-if-not-resolved=\"false\">#getMaxRetries()</xref>."
  syntax:
    content: "public default boolean shouldRetry(HttpResponse httpResponse)"
    parameters:
    - id: "httpResponse"
      type: "com.azure.core.http.HttpResponse"
      description: "The response from the previous attempt."
    return:
      type: "boolean"
      description: "<code>true</code> if another retry attempt should be made."
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.http.policy.RetryStrategy.getMaxRetries*"
  name: "getMaxRetries"
  nameWithType: "RetryStrategy.getMaxRetries"
  fullName: "com.azure.core.http.policy.RetryStrategy.getMaxRetries"
  package: "com.azure.core.http.policy"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay*"
  name: "calculateRetryDelay"
  nameWithType: "RetryStrategy.calculateRetryDelay"
  fullName: "com.azure.core.http.policy.RetryStrategy.calculateRetryDelay"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.http.policy.RetryStrategy.shouldRetry*"
  name: "shouldRetry"
  nameWithType: "RetryStrategy.shouldRetry"
  fullName: "com.azure.core.http.policy.RetryStrategy.shouldRetry"
  package: "com.azure.core.http.policy"
