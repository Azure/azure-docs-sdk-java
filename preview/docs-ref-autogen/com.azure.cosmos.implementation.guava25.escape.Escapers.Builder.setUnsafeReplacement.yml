### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement*"
fullName: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement"
name: "setUnsafeReplacement"
nameWithType: "Escapers.Builder.setUnsafeReplacement"
members:
- uid: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(String unsafeReplacement)"
  name: "setUnsafeReplacement(String unsafeReplacement)"
  nameWithType: "Escapers.Builder.setUnsafeReplacement(String unsafeReplacement)"
  summary: "Sets the replacement string for any characters outside the 'safe' range that have no explicit replacement. If `unsafeReplacement` is `null` then no replacement will occur, if it is `\"\"` then the unsafe characters are removed from the output."
  parameters:
  - description: "the string to replace unsafe characters"
    name: "unsafeReplacement"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Escapers.Builder setUnsafeReplacement(String unsafeReplacement)"
  returns:
    description: "the builder instance"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.escape.Escapers.Builder?alt=com.azure.cosmos.implementation.guava25.escape.Escapers.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
