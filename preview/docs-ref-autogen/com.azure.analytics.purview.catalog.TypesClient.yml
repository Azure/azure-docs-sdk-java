### YamlMime:JavaType
uid: "com.azure.analytics.purview.catalog.TypesClient"
fullName: "com.azure.analytics.purview.catalog.TypesClient"
name: "TypesClient"
nameWithType: "TypesClient"
summary: "Initializes a new instance of the synchronous Purview<wbr>Catalog<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TypesClient"
methods:
- uid: "com.azure.analytics.purview.catalog.TypesClient.createTypeDefinitionsWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.createTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  name: "createTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  nameWithType: "TypesClient.createTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  summary: "Create all atlas type definitions in bulk, only new definitions will be created."
  parameters:
  - description: "A composite wrapper object with corresponding lists of the type definition."
    name: "typesDef"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  desc: "Create all atlas type definitions in bulk, only new definitions will be created. Any changes to the existing definitions will be discarded.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "atlasTypesDef along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.deleteTypeByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.deleteTypeByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "deleteTypeByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.deleteTypeByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Delete API for type identified by its name."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTypeByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Delete API for type identified by its name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.deleteTypeDefinitionsWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.deleteTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  name: "deleteTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  nameWithType: "TypesClient.deleteTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  summary: "Delete API for all types in bulk."
  parameters:
  - description: "A composite object that captures all types to be deleted."
    name: "typesDef"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  desc: "Delete API for all types in bulk.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getAllTypeDefinitionsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getAllTypeDefinitionsWithResponse(RequestOptions requestOptions)"
  name: "getAllTypeDefinitionsWithResponse(RequestOptions requestOptions)"
  nameWithType: "TypesClient.getAllTypeDefinitionsWithResponse(RequestOptions requestOptions)"
  summary: "Get all type definitions in Atlas in bulk."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getAllTypeDefinitionsWithResponse(RequestOptions requestOptions)"
  desc: "Get all type definitions in Atlas in bulk.\n\n**Query Parameters**\n\n    | ------------------- | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------ |\n    | Name                | Type    | Required | Description                                                                                                                          |\n    | includeTermTemplate | Boolean | No       | Whether include termtemplatedef when return all typedefs. This is always true when search filter type=term\\_template                 |\n    | type                | String  | No       | Typedef name as search filter when get typedefs. Allowed values: enum, entity, classification, relationship, struct, term\\_template. |\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "all type definitions in Atlas in bulk along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getBusinessMetadataDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getBusinessMetadataDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getBusinessMetadataDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getBusinessMetadataDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the business<wbr>Metadata definition for the given guid."
  parameters:
  - description: "businessMetadata guid."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getBusinessMetadataDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the businessMetadata definition for the given guid.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the businessMetadata definition for the given guid along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getBusinessMetadataDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getBusinessMetadataDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getBusinessMetadataDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getBusinessMetadataDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the business<wbr>Metadata definition by it's name (unique)."
  parameters:
  - description: "businessMetadata name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getBusinessMetadataDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the businessMetadata definition by it's name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the businessMetadata definition by it's name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getClassificationDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getClassificationDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getClassificationDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getClassificationDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the classification definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the classification."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getClassificationDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the classification definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     entityTypes: [\n         String\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n }\n```"
  returns:
    description: "the classification definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getClassificationDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getClassificationDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getClassificationDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getClassificationDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the classification definition by its name (unique)."
  parameters:
  - description: "The name of the classification."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getClassificationDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the classification definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     entityTypes: [\n         String\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n }\n```"
  returns:
    description: "the classification definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getEntityDefinitionByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getEntityDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getEntityDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getEntityDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the Entity definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the entity."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEntityDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the Entity definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n     relationshipAttributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n             isLegacyAttribute: Boolean\n             relationshipTypeName: String\n         }\n     ]\n }\n```"
  returns:
    description: "the Entity definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getEntityDefinitionByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getEntityDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getEntityDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getEntityDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the entity definition by its name (unique)."
  parameters:
  - description: "The name of the entity."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEntityDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the entity definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n     relationshipAttributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n             isLegacyAttribute: Boolean\n             relationshipTypeName: String\n         }\n     ]\n }\n```"
  returns:
    description: "the entity definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getEnumDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getEnumDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getEnumDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getEnumDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the enum definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the enum."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEnumDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the enum definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     defaultValue: String\n     elementDefs: [\n         {\n             description: String\n             ordinal: Float\n             value: String\n         }\n     ]\n }\n```"
  returns:
    description: "the enum definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getEnumDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getEnumDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getEnumDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getEnumDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the enum definition by its name (unique)."
  parameters:
  - description: "The name of the enum."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEnumDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the enum definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     defaultValue: String\n     elementDefs: [\n         {\n             description: String\n             ordinal: Float\n             value: String\n         }\n     ]\n }\n```"
  returns:
    description: "the enum definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getRelationshipDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getRelationshipDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getRelationshipDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getRelationshipDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the relationship definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the relationship."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRelationshipDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the relationship definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     endDef1: {\n         cardinality: String(SINGLE/LIST/SET)\n         description: String\n         isContainer: Boolean\n         isLegacyAttribute: Boolean\n         name: String\n         type: String\n     }\n     endDef2: (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n     relationshipLabel: String\n }\n```"
  returns:
    description: "the relationship definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getRelationshipDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getRelationshipDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getRelationshipDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getRelationshipDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the relationship definition by its name (unique)."
  parameters:
  - description: "The name of the relationship."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRelationshipDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the relationship definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n     endDef1: {\n         cardinality: String(SINGLE/LIST/SET)\n         description: String\n         isContainer: Boolean\n         isLegacyAttribute: Boolean\n         name: String\n         type: String\n     }\n     endDef2: (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n     relationshipLabel: String\n }\n```"
  returns:
    description: "the relationship definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getStructDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getStructDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getStructDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getStructDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the struct definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the struct."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getStructDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the struct definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the struct definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getStructDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getStructDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getStructDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getStructDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the struct definition by its name (unique)."
  parameters:
  - description: "The name of the struct."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getStructDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the struct definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the struct definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getTermTemplateDefByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getTermTemplateDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getTermTemplateDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getTermTemplateDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the term template definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the term template."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTermTemplateDefByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the term template definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the term template definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getTermTemplateDefByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getTermTemplateDefByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getTermTemplateDefByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getTermTemplateDefByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the term template definition by its name (unique)."
  parameters:
  - description: "The name of the term template."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTermTemplateDefByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the term template definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the term template definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getTypeDefinitionByGuidWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getTypeDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  name: "getTypeDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getTypeDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the type definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the type."
    name: "guid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTypeDefinitionByGuidWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the type definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     entityTypes: [\n         String\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n     relationshipAttributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n             isLegacyAttribute: Boolean\n             relationshipTypeName: String\n         }\n     ]\n     defaultValue: String\n     elementDefs: [\n         {\n             description: String\n             ordinal: Float\n             value: String\n         }\n     ]\n     endDef1: {\n         cardinality: String(SINGLE/LIST/SET)\n         description: String\n         isContainer: Boolean\n         isLegacyAttribute: Boolean\n         name: String\n         type: String\n     }\n     endDef2: (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n     relationshipLabel: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the type definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.getTypeDefinitionByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.getTypeDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getTypeDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypesClient.getTypeDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the type definition by its name (unique)."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTypeDefinitionByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the type definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n     createTime: Float\n     createdBy: String\n     dateFormatter: {\n         availableLocales: [\n             String\n         ]\n         calendar: Float\n         dateInstance: (recursive schema, see dateInstance above)\n         dateTimeInstance: (recursive schema, see dateTimeInstance above)\n         instance: (recursive schema, see instance above)\n         lenient: Boolean\n         numberFormat: {\n             availableLocales: [\n                 String\n             ]\n             currency: String\n             currencyInstance: (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean\n             instance: (recursive schema, see instance above)\n             integerInstance: (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer\n             maximumIntegerDigits: Integer\n             minimumFractionDigits: Integer\n             minimumIntegerDigits: Integer\n             numberInstance: (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean\n             percentInstance: (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n         }\n         timeInstance: (recursive schema, see timeInstance above)\n         timeZone: {\n             dstSavings: Integer\n             id: String\n             availableIds: [\n                 String\n             ]\n             defaultProperty: (recursive schema, see defaultProperty above)\n             displayName: String\n             rawOffset: Integer\n         }\n     }\n     description: String\n     guid: String\n     name: String\n     options: {\n         String: String\n     }\n     serviceType: String\n     typeVersion: String\n     updateTime: Float\n     updatedBy: String\n     version: Float\n     lastModifiedTS: String\n     entityTypes: [\n         String\n     ]\n     subTypes: [\n         String\n     ]\n     superTypes: [\n         String\n     ]\n     relationshipAttributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 {\n                     params: {\n                         String: Object\n                     }\n                     type: String\n                 }\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n             isLegacyAttribute: Boolean\n             relationshipTypeName: String\n         }\n     ]\n     defaultValue: String\n     elementDefs: [\n         {\n             description: String\n             ordinal: Float\n             value: String\n         }\n     ]\n     endDef1: {\n         cardinality: String(SINGLE/LIST/SET)\n         description: String\n         isContainer: Boolean\n         isLegacyAttribute: Boolean\n         name: String\n         type: String\n     }\n     endDef2: (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n     relationshipLabel: String\n     attributeDefs: [\n         {\n             cardinality: String(SINGLE/LIST/SET)\n             constraints: [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String\n             description: String\n             includeInNotification: Boolean\n             isIndexable: Boolean\n             isOptional: Boolean\n             isUnique: Boolean\n             name: String\n             options: {\n                 String: String\n             }\n             typeName: String\n             valuesMaxCount: Integer\n             valuesMinCount: Integer\n         }\n     ]\n }\n```"
  returns:
    description: "the type definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.listTypeDefinitionHeadersWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.listTypeDefinitionHeadersWithResponse(RequestOptions requestOptions)"
  name: "listTypeDefinitionHeadersWithResponse(RequestOptions requestOptions)"
  nameWithType: "TypesClient.listTypeDefinitionHeadersWithResponse(RequestOptions requestOptions)"
  summary: "List all type definitions returned as a list of minimal information header."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listTypeDefinitionHeadersWithResponse(RequestOptions requestOptions)"
  desc: "List all type definitions returned as a list of minimal information header.\n\n**Query Parameters**\n\n    | ------------------- | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------ |\n    | Name                | Type    | Required | Description                                                                                                                          |\n    | includeTermTemplate | Boolean | No       | Whether include termtemplatedef when return all typedefs. This is always true when search filter type=term\\_template                 |\n    | type                | String  | No       | Typedef name as search filter when get typedefs. Allowed values: enum, entity, classification, relationship, struct, term\\_template. |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n         guid: String\n         name: String\n     }\n ]\n```"
  returns:
    description: "an array of AtlasTypeDefHeader matching the search criteria or an empty list if no match along with\n     <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.TypesClient.updateAtlasTypeDefinitionsWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.TypesClient.updateAtlasTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  name: "updateAtlasTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  nameWithType: "TypesClient.updateAtlasTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  summary: "Update all types in bulk, changes detected in the type definitions would be persisted."
  parameters:
  - description: "A composite object that captures all type definition changes."
    name: "typesDef"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateAtlasTypeDefinitionsWithResponse(BinaryData typesDef, RequestOptions requestOptions)"
  desc: "Update all types in bulk, changes detected in the type definitions would be persisted.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: {\n                 availableLocales: [\n                     String\n                 ]\n                 calendar: Float\n                 dateInstance: (recursive schema, see dateInstance above)\n                 dateTimeInstance: (recursive schema, see dateTimeInstance above)\n                 instance: (recursive schema, see instance above)\n                 lenient: Boolean\n                 numberFormat: {\n                     availableLocales: [\n                         String\n                     ]\n                     currency: String\n                     currencyInstance: (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean\n                     instance: (recursive schema, see instance above)\n                     integerInstance: (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer\n                     maximumIntegerDigits: Integer\n                     minimumFractionDigits: Integer\n                     minimumIntegerDigits: Integer\n                     numberInstance: (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean\n                     percentInstance: (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY)\n                 }\n                 timeInstance: (recursive schema, see timeInstance above)\n                 timeZone: {\n                     dstSavings: Integer\n                     id: String\n                     availableIds: [\n                         String\n                     ]\n                     defaultProperty: (recursive schema, see defaultProperty above)\n                     displayName: String\n                     rawOffset: Integer\n                 }\n             }\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         {\n                             params: {\n                                 String: Object\n                             }\n                             type: String\n                         }\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                 }\n             ]\n         }\n     ]\n     classificationDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             entityTypes: [\n                 String\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n         }\n     ]\n     entityDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             subTypes: [\n                 String\n             ]\n             superTypes: [\n                 String\n             ]\n             relationshipAttributeDefs: [\n                 {\n                     cardinality: String(SINGLE/LIST/SET)\n                     constraints: [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String\n                     description: String\n                     includeInNotification: Boolean\n                     isIndexable: Boolean\n                     isOptional: Boolean\n                     isUnique: Boolean\n                     name: String\n                     options: {\n                         String: String\n                     }\n                     typeName: String\n                     valuesMaxCount: Integer\n                     valuesMinCount: Integer\n                     isLegacyAttribute: Boolean\n                     relationshipTypeName: String\n                 }\n             ]\n         }\n     ]\n     enumDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             defaultValue: String\n             elementDefs: [\n                 {\n                     description: String\n                     ordinal: Float\n                     value: String\n                 }\n             ]\n         }\n     ]\n     relationshipDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n             endDef1: {\n                 cardinality: String(SINGLE/LIST/SET)\n                 description: String\n                 isContainer: Boolean\n                 isLegacyAttribute: Boolean\n                 name: String\n                 type: String\n             }\n             endDef2: (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION)\n             relationshipLabel: String\n         }\n     ]\n     structDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs: [\n         {\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE)\n             createTime: Float\n             createdBy: String\n             dateFormatter: (recursive schema, see dateFormatter above)\n             description: String\n             guid: String\n             name: String\n             options: {\n                 String: String\n             }\n             serviceType: String\n             typeVersion: String\n             updateTime: Float\n             updatedBy: String\n             version: Float\n             lastModifiedTS: String\n             attributeDefs: [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "atlasTypesDef along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous PurviewCatalogClient type."
metadata: {}
package: "com.azure.analytics.purview.catalog"
artifact: com.azure:azure-analytics-purview-catalog:1.0.0-beta.4
