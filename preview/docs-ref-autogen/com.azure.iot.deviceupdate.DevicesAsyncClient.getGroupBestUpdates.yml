### YamlMime:JavaMember
uid: "com.azure.iot.deviceupdate.DevicesAsyncClient.getGroupBestUpdates*"
fullName: "com.azure.iot.deviceupdate.DevicesAsyncClient.getGroupBestUpdates"
name: "getGroupBestUpdates"
nameWithType: "DevicesAsyncClient.getGroupBestUpdates"
members:
- uid: "com.azure.iot.deviceupdate.DevicesAsyncClient.getGroupBestUpdates(java.lang.String,java.lang.String)"
  fullName: "com.azure.iot.deviceupdate.DevicesAsyncClient.getGroupBestUpdates(String groupId, String filter)"
  name: "getGroupBestUpdates(String groupId, String filter)"
  nameWithType: "DevicesAsyncClient.getGroupBestUpdates(String groupId, String filter)"
  summary: "Get the best available updates for a group and a count of how many devices need each update."
  parameters:
  - description: "Group identifier."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Restricts the set of bestUpdates returned. You can filter on update Provider, Name and Version\n     property."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<UpdatableDevices> getGroupBestUpdates(String groupId, String filter)"
  returns:
    description: "the best available updates for a group and a count of how many devices need each update."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.iot.deviceupdate.models.UpdatableDevices?alt=com.azure.iot.deviceupdate.models.UpdatableDevices&text=UpdatableDevices\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.iot.deviceupdate"
artifact: com.azure:azure-iot-deviceupdate:1.0.0-beta.1
