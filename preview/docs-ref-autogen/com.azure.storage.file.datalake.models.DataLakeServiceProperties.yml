### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties"
fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties"
name: "DataLakeServiceProperties"
nameWithType: "DataLakeServiceProperties"
summary: "Storage Service Properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataLakeServiceProperties"
constructors:
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.DataLakeServiceProperties()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.DataLakeServiceProperties()"
  name: "DataLakeServiceProperties()"
  nameWithType: "DataLakeServiceProperties.DataLakeServiceProperties()"
  syntax: "public DataLakeServiceProperties()"
methods:
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getCors()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getCors()"
  name: "getCors()"
  nameWithType: "DataLakeServiceProperties.getCors()"
  summary: "Get the cors property: The set of CORS rules."
  syntax: "public List<DataLakeCorsRule> getCors()"
  desc: "Get the cors property: The set of CORS rules."
  returns:
    description: "the cors value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.DataLakeCorsRule?alt=com.azure.storage.file.datalake.models.DataLakeCorsRule&text=DataLakeCorsRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getDefaultServiceVersion()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getDefaultServiceVersion()"
  name: "getDefaultServiceVersion()"
  nameWithType: "DataLakeServiceProperties.getDefaultServiceVersion()"
  summary: "Get the default<wbr>Service<wbr>Version property: The default version to use for requests to the Data<wbr>Lake service if an incoming request's version is not specified."
  syntax: "public String getDefaultServiceVersion()"
  desc: "Get the defaultServiceVersion property: The default version to use for requests to the DataLake service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions."
  returns:
    description: "the defaultServiceVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getDeleteRetentionPolicy()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getDeleteRetentionPolicy()"
  name: "getDeleteRetentionPolicy()"
  nameWithType: "DataLakeServiceProperties.getDeleteRetentionPolicy()"
  summary: "Get the delete<wbr>Retention<wbr>Policy property: The delete<wbr>Retention<wbr>Policy property."
  syntax: "public DataLakeRetentionPolicy getDeleteRetentionPolicy()"
  desc: "Get the deleteRetentionPolicy property: The deleteRetentionPolicy property."
  returns:
    description: "the deleteRetentionPolicy value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRetentionPolicy?alt=com.azure.storage.file.datalake.models.DataLakeRetentionPolicy&text=DataLakeRetentionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getHourMetrics()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getHourMetrics()"
  name: "getHourMetrics()"
  nameWithType: "DataLakeServiceProperties.getHourMetrics()"
  summary: "Get the hour<wbr>Metrics property: The hour<wbr>Metrics property."
  syntax: "public DataLakeMetrics getHourMetrics()"
  desc: "Get the hourMetrics property: The hourMetrics property."
  returns:
    description: "the hourMetrics value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeMetrics?alt=com.azure.storage.file.datalake.models.DataLakeMetrics&text=DataLakeMetrics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getLogging()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getLogging()"
  name: "getLogging()"
  nameWithType: "DataLakeServiceProperties.getLogging()"
  summary: "Get the logging property: The logging property."
  syntax: "public DataLakeAnalyticsLogging getLogging()"
  desc: "Get the logging property: The logging property."
  returns:
    description: "the logging value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeAnalyticsLogging?alt=com.azure.storage.file.datalake.models.DataLakeAnalyticsLogging&text=DataLakeAnalyticsLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getMinuteMetrics()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getMinuteMetrics()"
  name: "getMinuteMetrics()"
  nameWithType: "DataLakeServiceProperties.getMinuteMetrics()"
  summary: "Get the minute<wbr>Metrics property: The minute<wbr>Metrics property."
  syntax: "public DataLakeMetrics getMinuteMetrics()"
  desc: "Get the minuteMetrics property: The minuteMetrics property."
  returns:
    description: "the minuteMetrics value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeMetrics?alt=com.azure.storage.file.datalake.models.DataLakeMetrics&text=DataLakeMetrics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getStaticWebsite()"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.getStaticWebsite()"
  name: "getStaticWebsite()"
  nameWithType: "DataLakeServiceProperties.getStaticWebsite()"
  summary: "Get the static<wbr>Website property: The properties that enable an account to host a static website."
  syntax: "public DataLakeStaticWebsite getStaticWebsite()"
  desc: "Get the staticWebsite property: The properties that enable an account to host a static website."
  returns:
    description: "the staticWebsite value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeStaticWebsite?alt=com.azure.storage.file.datalake.models.DataLakeStaticWebsite&text=DataLakeStaticWebsite\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setCors(java.util.List<com.azure.storage.file.datalake.models.DataLakeCorsRule>)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setCors(List<DataLakeCorsRule> cors)"
  name: "setCors(List<DataLakeCorsRule> cors)"
  nameWithType: "DataLakeServiceProperties.setCors(List<DataLakeCorsRule> cors)"
  summary: "Set the cors property: The set of CORS rules."
  parameters:
  - description: "the cors value to set."
    name: "cors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.DataLakeCorsRule?alt=com.azure.storage.file.datalake.models.DataLakeCorsRule&text=DataLakeCorsRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataLakeServiceProperties setCors(List<DataLakeCorsRule> cors)"
  desc: "Set the cors property: The set of CORS rules."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setDefaultServiceVersion(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setDefaultServiceVersion(String defaultServiceVersion)"
  name: "setDefaultServiceVersion(String defaultServiceVersion)"
  nameWithType: "DataLakeServiceProperties.setDefaultServiceVersion(String defaultServiceVersion)"
  summary: "Set the default<wbr>Service<wbr>Version property: The default version to use for requests to the Data<wbr>Lake service if an incoming request's version is not specified."
  parameters:
  - description: "the defaultServiceVersion value to set."
    name: "defaultServiceVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setDefaultServiceVersion(String defaultServiceVersion)"
  desc: "Set the defaultServiceVersion property: The default version to use for requests to the DataLake service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setDeleteRetentionPolicy(com.azure.storage.file.datalake.models.DataLakeRetentionPolicy)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setDeleteRetentionPolicy(DataLakeRetentionPolicy deleteRetentionPolicy)"
  name: "setDeleteRetentionPolicy(DataLakeRetentionPolicy deleteRetentionPolicy)"
  nameWithType: "DataLakeServiceProperties.setDeleteRetentionPolicy(DataLakeRetentionPolicy deleteRetentionPolicy)"
  summary: "Set the delete<wbr>Retention<wbr>Policy property: The delete<wbr>Retention<wbr>Policy property."
  parameters:
  - description: "the deleteRetentionPolicy value to set."
    name: "deleteRetentionPolicy"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRetentionPolicy?alt=com.azure.storage.file.datalake.models.DataLakeRetentionPolicy&text=DataLakeRetentionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setDeleteRetentionPolicy(DataLakeRetentionPolicy deleteRetentionPolicy)"
  desc: "Set the deleteRetentionPolicy property: The deleteRetentionPolicy property."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setHourMetrics(com.azure.storage.file.datalake.models.DataLakeMetrics)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setHourMetrics(DataLakeMetrics hourMetrics)"
  name: "setHourMetrics(DataLakeMetrics hourMetrics)"
  nameWithType: "DataLakeServiceProperties.setHourMetrics(DataLakeMetrics hourMetrics)"
  summary: "Set the hour<wbr>Metrics property: The hour<wbr>Metrics property."
  parameters:
  - description: "the hourMetrics value to set."
    name: "hourMetrics"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeMetrics?alt=com.azure.storage.file.datalake.models.DataLakeMetrics&text=DataLakeMetrics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setHourMetrics(DataLakeMetrics hourMetrics)"
  desc: "Set the hourMetrics property: The hourMetrics property."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setLogging(com.azure.storage.file.datalake.models.DataLakeAnalyticsLogging)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setLogging(DataLakeAnalyticsLogging logging)"
  name: "setLogging(DataLakeAnalyticsLogging logging)"
  nameWithType: "DataLakeServiceProperties.setLogging(DataLakeAnalyticsLogging logging)"
  summary: "Set the logging property: The logging property."
  parameters:
  - description: "the logging value to set."
    name: "logging"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeAnalyticsLogging?alt=com.azure.storage.file.datalake.models.DataLakeAnalyticsLogging&text=DataLakeAnalyticsLogging\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setLogging(DataLakeAnalyticsLogging logging)"
  desc: "Set the logging property: The logging property."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setMinuteMetrics(com.azure.storage.file.datalake.models.DataLakeMetrics)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setMinuteMetrics(DataLakeMetrics minuteMetrics)"
  name: "setMinuteMetrics(DataLakeMetrics minuteMetrics)"
  nameWithType: "DataLakeServiceProperties.setMinuteMetrics(DataLakeMetrics minuteMetrics)"
  summary: "Set the minute<wbr>Metrics property: The minute<wbr>Metrics property."
  parameters:
  - description: "the minuteMetrics value to set."
    name: "minuteMetrics"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeMetrics?alt=com.azure.storage.file.datalake.models.DataLakeMetrics&text=DataLakeMetrics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setMinuteMetrics(DataLakeMetrics minuteMetrics)"
  desc: "Set the minuteMetrics property: The minuteMetrics property."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setStaticWebsite(com.azure.storage.file.datalake.models.DataLakeStaticWebsite)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeServiceProperties.setStaticWebsite(DataLakeStaticWebsite staticWebsite)"
  name: "setStaticWebsite(DataLakeStaticWebsite staticWebsite)"
  nameWithType: "DataLakeServiceProperties.setStaticWebsite(DataLakeStaticWebsite staticWebsite)"
  summary: "Set the static<wbr>Website property: The properties that enable an account to host a static website."
  parameters:
  - description: "the staticWebsite value to set."
    name: "staticWebsite"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeStaticWebsite?alt=com.azure.storage.file.datalake.models.DataLakeStaticWebsite&text=DataLakeStaticWebsite\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeServiceProperties setStaticWebsite(DataLakeStaticWebsite staticWebsite)"
  desc: "Set the staticWebsite property: The properties that enable an account to host a static website."
  returns:
    description: "the DataLakeServiceProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeServiceProperties?alt=com.azure.storage.file.datalake.models.DataLakeServiceProperties&text=DataLakeServiceProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Storage Service Properties."
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
