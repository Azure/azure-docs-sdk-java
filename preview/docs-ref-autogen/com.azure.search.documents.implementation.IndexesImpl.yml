### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.implementation.IndexesImpl
  id: IndexesImpl
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation
  children:
  - com.azure.search.documents.implementation.IndexesImpl.IndexesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  - com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(com.azure.core.util.Context)
  - com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  langs:
  - java
  name: IndexesImpl
  nameWithType: IndexesImpl
  fullName: com.azure.search.documents.implementation.IndexesImpl
  type: Class
  package: com.azure.search.documents.implementation
  summary: An instance of this class provides access to all the operations defined in Indexes.
  syntax:
    content: public final class IndexesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.implementation.IndexesImpl.IndexesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  id: IndexesImpl(com.azure.search.documents.implementation.SearchServiceRestClientImpl)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: IndexesImpl(SearchServiceRestClientImpl client)
  nameWithType: IndexesImpl.IndexesImpl(SearchServiceRestClientImpl client)
  fullName: com.azure.search.documents.implementation.IndexesImpl.IndexesImpl(SearchServiceRestClientImpl client)
  overload: com.azure.search.documents.implementation.IndexesImpl.IndexesImpl*
  type: Constructor
  package: com.azure.search.documents.implementation
  summary: Initializes an instance of IndexesImpl.
  syntax:
    content: public IndexesImpl(SearchServiceRestClientImpl client)
    parameters:
    - id: client
      type: com.azure.search.documents.implementation.SearchServiceRestClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.core.util.Context)
  id: analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, Context context)
  nameWithType: IndexesImpl.analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Shows how an analyzer breaks text into tokens.
  syntax:
    content: public Mono<SimpleResponse<AnalyzeResult>> analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to test an analyzer.
    - id: request
      type: com.azure.search.documents.models.AnalyzeRequest
      description: The text and analyzer or analysis components to test.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.AnalyzeResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: analyzeWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Shows how an analyzer breaks text into tokens.
  syntax:
    content: public Mono<SimpleResponse<AnalyzeResult>> analyzeWithRestResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to test an analyzer.
    - id: request
      type: com.azure.search.documents.models.AnalyzeRequest
      description: The text and analyzer or analysis components to test.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.AnalyzeResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,com.azure.core.util.Context)
  id: createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: createOrUpdateWithRestResponseAsync(String indexName, Index index, Context context)
  nameWithType: IndexesImpl.createOrUpdateWithRestResponseAsync(String indexName, Index index, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(String indexName, Index index, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new search index or updates an index if it already exists.
  syntax:
    content: public Mono<SimpleResponse<Index>> createOrUpdateWithRestResponseAsync(String indexName, Index index, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The definition of the index to create or update.
    - id: index
      type: com.azure.search.documents.models.Index
      description: The definition of the index to create or update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: createOrUpdateWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: createOrUpdateWithRestResponseAsync(String indexName, Index index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.createOrUpdateWithRestResponseAsync(String indexName, Index index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync(String indexName, Index index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new search index or updates an index if it already exists.
  syntax:
    content: public Mono<SimpleResponse<Index>> createOrUpdateWithRestResponseAsync(String indexName, Index index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The definition of the index to create or update.
    - id: index
      type: com.azure.search.documents.models.Index
      description: The definition of the index to create or update.
    - id: allowIndexDowntime
      type: java.lang.Boolean
      description: Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
    - id: ifMatch
      type: java.lang.String
      description: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.core.util.Context)
  id: createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: createWithRestResponseAsync(Index index, Context context)
  nameWithType: IndexesImpl.createWithRestResponseAsync(Index index, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(Index index, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new search index.
  syntax:
    content: public Mono<SimpleResponse<Index>> createWithRestResponseAsync(Index index, Context context)
    parameters:
    - id: index
      type: com.azure.search.documents.models.Index
      description: The definition of the index to create.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: createWithRestResponseAsync(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: createWithRestResponseAsync(Index index, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.createWithRestResponseAsync(Index index, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync(Index index, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Creates a new search index.
  syntax:
    content: public Mono<SimpleResponse<Index>> createWithRestResponseAsync(Index index, RequestOptions requestOptions, Context context)
    parameters:
    - id: index
      type: com.azure.search.documents.models.Index
      description: The definition of the index to create.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: deleteWithRestResponseAsync(String indexName, Context context)
  nameWithType: IndexesImpl.deleteWithRestResponseAsync(String indexName, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(String indexName, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Deletes a search index and all the documents it contains.
  syntax:
    content: public Mono<Response<Void>> deleteWithRestResponseAsync(String indexName, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: deleteWithRestResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.deleteWithRestResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Deletes a search index and all the documents it contains.
  syntax:
    content: public Mono<Response<Void>> deleteWithRestResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to delete.
    - id: ifMatch
      type: java.lang.String
      description: Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getStatisticsWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: getStatisticsWithRestResponseAsync(String indexName, Context context)
  nameWithType: IndexesImpl.getStatisticsWithRestResponseAsync(String indexName, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(String indexName, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Returns statistics for the given index, including a document count and storage usage.
  syntax:
    content: public Mono<SimpleResponse<GetIndexStatisticsResult>> getStatisticsWithRestResponseAsync(String indexName, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to retrieve statistics.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.GetIndexStatisticsResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: getStatisticsWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: getStatisticsWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.getStatisticsWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Returns statistics for the given index, including a document count and storage usage.
  syntax:
    content: public Mono<SimpleResponse<GetIndexStatisticsResult>> getStatisticsWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to retrieve statistics.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.GetIndexStatisticsResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: getWithRestResponseAsync(String indexName, Context context)
  nameWithType: IndexesImpl.getWithRestResponseAsync(String indexName, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(String indexName, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Retrieves an index definition.
  syntax:
    content: public Mono<SimpleResponse<Index>> getWithRestResponseAsync(String indexName, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: getWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: getWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.getWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Retrieves an index definition.
  syntax:
    content: public Mono<SimpleResponse<Index>> getWithRestResponseAsync(String indexName, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to retrieve.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(com.azure.core.util.Context)
  id: listWithRestResponseAsync(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: listWithRestResponseAsync(Context context)
  nameWithType: IndexesImpl.listWithRestResponseAsync(Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Lists all indexes available for a search service.
  syntax:
    content: public Mono<SimpleResponse<ListIndexesResult>> listWithRestResponseAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListIndexesResult>>
      description: a Mono which performs the network request upon subscription.
- uid: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  id: listWithRestResponseAsync(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.IndexesImpl
  langs:
  - java
  name: listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Lists all indexes available for a search service.
  syntax:
    content: public Mono<SimpleResponse<ListIndexesResult>> listWithRestResponseAsync(String select, RequestOptions requestOptions, Context context)
    parameters:
    - id: select
      type: java.lang.String
      description: Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties.
    - id: requestOptions
      type: com.azure.search.documents.models.RequestOptions
      description: Additional parameters for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListIndexesResult>>
      description: a Mono which performs the network request upon subscription.
references:
- uid: com.azure.search.documents.implementation.SearchServiceRestClientImpl
  name: SearchServiceRestClientImpl
  nameWithType: SearchServiceRestClientImpl
  fullName: com.azure.search.documents.implementation.SearchServiceRestClientImpl
- uid: com.azure.search.documents.implementation.IndexesImpl.IndexesImpl*
  name: IndexesImpl
  nameWithType: IndexesImpl.IndexesImpl
  fullName: com.azure.search.documents.implementation.IndexesImpl.IndexesImpl
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.models.Index
  name: Index
  nameWithType: Index
  fullName: com.azure.search.documents.models.Index
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.Index
    name: Index
    fullName: com.azure.search.documents.models.Index
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync*
  name: createWithRestResponseAsync
  nameWithType: IndexesImpl.createWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.createWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.models.RequestOptions
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.azure.search.documents.models.RequestOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListIndexesResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.ListIndexesResult
    name: ListIndexesResult
    fullName: com.azure.search.documents.implementation.models.ListIndexesResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync*
  name: listWithRestResponseAsync
  nameWithType: IndexesImpl.listWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.listWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync*
  name: createOrUpdateWithRestResponseAsync
  nameWithType: IndexesImpl.createOrUpdateWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.createOrUpdateWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync*
  name: deleteWithRestResponseAsync
  nameWithType: IndexesImpl.deleteWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.deleteWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync*
  name: getWithRestResponseAsync
  nameWithType: IndexesImpl.getWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.getWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.GetIndexStatisticsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.GetIndexStatisticsResult
    name: GetIndexStatisticsResult
    fullName: com.azure.search.documents.models.GetIndexStatisticsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync*
  name: getStatisticsWithRestResponseAsync
  nameWithType: IndexesImpl.getStatisticsWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.getStatisticsWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.models.AnalyzeRequest
  name: AnalyzeRequest
  nameWithType: AnalyzeRequest
  fullName: com.azure.search.documents.models.AnalyzeRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.AnalyzeResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.SimpleResponse
    name: SimpleResponse
    fullName: com.azure.core.http.rest.SimpleResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.AnalyzeResult
    name: AnalyzeResult
    fullName: com.azure.search.documents.implementation.models.AnalyzeResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync*
  name: analyzeWithRestResponseAsync
  nameWithType: IndexesImpl.analyzeWithRestResponseAsync
  fullName: com.azure.search.documents.implementation.IndexesImpl.analyzeWithRestResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.SimpleResponse
  name: SimpleResponse
  nameWithType: SimpleResponse
  fullName: com.azure.core.http.rest.SimpleResponse
- uid: com.azure.search.documents.implementation.models.ListIndexesResult
  name: ListIndexesResult
  nameWithType: ListIndexesResult
  fullName: com.azure.search.documents.implementation.models.ListIndexesResult
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.search.documents.models.GetIndexStatisticsResult
  name: GetIndexStatisticsResult
  nameWithType: GetIndexStatisticsResult
  fullName: com.azure.search.documents.models.GetIndexStatisticsResult
- uid: com.azure.search.documents.implementation.models.AnalyzeResult
  name: AnalyzeResult
  nameWithType: AnalyzeResult
  fullName: com.azure.search.documents.implementation.models.AnalyzeResult
