### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.SqlQuerySpec"
  id: "SqlQuerySpec"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec()"
  - "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(java.lang.String)"
  - "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(java.lang.String,com.azure.cosmos.models.SqlParameterList)"
  - "com.azure.cosmos.models.SqlQuerySpec.getParameters()"
  - "com.azure.cosmos.models.SqlQuerySpec.getQueryText()"
  - "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag()"
  - "com.azure.cosmos.models.SqlQuerySpec.setParameters(com.azure.cosmos.models.SqlParameterList)"
  - "com.azure.cosmos.models.SqlQuerySpec.setQueryText(java.lang.String)"
  langs:
  - "java"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.models.SqlQuerySpec"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "Represents a SQL query in the Azure Cosmos DB database service."
  syntax:
    content: "public final class SqlQuerySpec extends JsonSerializable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.JsonSerializable"
  inheritedMembers:
  - "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getLogger()"
  - "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getMap()"
  - "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  - "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.models.JsonSerializable.toJson()"
  - "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  - "com.azure.cosmos.models.JsonSerializable.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec()"
  id: "SqlQuerySpec()"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "SqlQuerySpec()"
  nameWithType: "SqlQuerySpec.SqlQuerySpec()"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec()"
  overload: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Initializes a new instance of the SqlQuerySpec class."
  syntax:
    content: "public SqlQuerySpec()"
- uid: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(java.lang.String)"
  id: "SqlQuerySpec(java.lang.String)"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "SqlQuerySpec(String queryText)"
  nameWithType: "SqlQuerySpec.SqlQuerySpec(String queryText)"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(String queryText)"
  overload: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Initializes a new instance of the SqlQuerySpec class with the text of the query."
  syntax:
    content: "public SqlQuerySpec(String queryText)"
    parameters:
    - id: "queryText"
      type: "java.lang.String"
      description: "the query text."
- uid: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(java.lang.String,com.azure.cosmos.models.SqlParameterList)"
  id: "SqlQuerySpec(java.lang.String,com.azure.cosmos.models.SqlParameterList)"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "SqlQuerySpec(String queryText, SqlParameterList parameters)"
  nameWithType: "SqlQuerySpec.SqlQuerySpec(String queryText, SqlParameterList parameters)"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec(String queryText, SqlParameterList parameters)"
  overload: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Initializes a new instance of the SqlQuerySpec class with the text of the query and parameters."
  syntax:
    content: "public SqlQuerySpec(String queryText, SqlParameterList parameters)"
    parameters:
    - id: "queryText"
      type: "java.lang.String"
      description: "the query text."
    - id: "parameters"
      type: "com.azure.cosmos.models.SqlParameterList"
      description: "the query parameters."
- uid: "com.azure.cosmos.models.SqlQuerySpec.getParameters()"
  id: "getParameters()"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "getParameters()"
  nameWithType: "SqlQuerySpec.getParameters()"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.getParameters()"
  overload: "com.azure.cosmos.models.SqlQuerySpec.getParameters*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the collection of query parameters."
  syntax:
    content: "public SqlParameterList getParameters()"
    return:
      type: "com.azure.cosmos.models.SqlParameterList"
      description: "the query parameters."
- uid: "com.azure.cosmos.models.SqlQuerySpec.getQueryText()"
  id: "getQueryText()"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "getQueryText()"
  nameWithType: "SqlQuerySpec.getQueryText()"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.getQueryText()"
  overload: "com.azure.cosmos.models.SqlQuerySpec.getQueryText*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the text of the query."
  syntax:
    content: "public String getQueryText()"
    return:
      type: "java.lang.String"
      description: "the query text."
- uid: "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "SqlQuerySpec.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag()"
  overload: "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected void populatePropertyBag()"
- uid: "com.azure.cosmos.models.SqlQuerySpec.setParameters(com.azure.cosmos.models.SqlParameterList)"
  id: "setParameters(com.azure.cosmos.models.SqlParameterList)"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "setParameters(SqlParameterList parameters)"
  nameWithType: "SqlQuerySpec.setParameters(SqlParameterList parameters)"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.setParameters(SqlParameterList parameters)"
  overload: "com.azure.cosmos.models.SqlQuerySpec.setParameters*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the collection of query parameters."
  syntax:
    content: "public SqlQuerySpec setParameters(SqlParameterList parameters)"
    parameters:
    - id: "parameters"
      type: "com.azure.cosmos.models.SqlParameterList"
      description: "the query parameters."
    return:
      type: "com.azure.cosmos.models.SqlQuerySpec"
      description: "the SqlQuerySpec."
- uid: "com.azure.cosmos.models.SqlQuerySpec.setQueryText(java.lang.String)"
  id: "setQueryText(java.lang.String)"
  parent: "com.azure.cosmos.models.SqlQuerySpec"
  langs:
  - "java"
  name: "setQueryText(String queryText)"
  nameWithType: "SqlQuerySpec.setQueryText(String queryText)"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.setQueryText(String queryText)"
  overload: "com.azure.cosmos.models.SqlQuerySpec.setQueryText*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the text of the query."
  syntax:
    content: "public SqlQuerySpec setQueryText(String queryText)"
    parameters:
    - id: "queryText"
      type: "java.lang.String"
      description: "the query text."
    return:
      type: "com.azure.cosmos.models.SqlQuerySpec"
      description: "the SqlQuerySpec."
references:
- uid: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec*"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec.SqlQuerySpec"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.SqlQuerySpec"
  package: "com.azure.cosmos.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.models.SqlParameterList"
  name: "SqlParameterList"
  nameWithType: "SqlParameterList"
  fullName: "com.azure.cosmos.models.SqlParameterList"
- uid: "com.azure.cosmos.models.SqlQuerySpec.getQueryText*"
  name: "getQueryText"
  nameWithType: "SqlQuerySpec.getQueryText"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.getQueryText"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.SqlQuerySpec.setQueryText*"
  name: "setQueryText"
  nameWithType: "SqlQuerySpec.setQueryText"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.setQueryText"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.SqlQuerySpec.getParameters*"
  name: "getParameters"
  nameWithType: "SqlQuerySpec.getParameters"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.getParameters"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.SqlQuerySpec.setParameters*"
  name: "setParameters"
  nameWithType: "SqlQuerySpec.setParameters"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.setParameters"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "SqlQuerySpec.populatePropertyBag"
  fullName: "com.azure.cosmos.models.SqlQuerySpec.populatePropertyBag"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.models.JsonSerializable"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  name: "JsonSerializable.serializeJsonToByteBuffer()"
  nameWithType: "JsonSerializable.serializeJsonToByteBuffer()"
  fullName: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
- uid: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  name: "JsonSerializable.getPropertyBag()"
  nameWithType: "JsonSerializable.getPropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.models.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toString()"
- uid: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.models.JsonSerializable."
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
