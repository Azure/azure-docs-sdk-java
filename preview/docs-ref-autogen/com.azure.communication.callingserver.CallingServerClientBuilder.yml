### YamlMime:JavaType
uid: "com.azure.communication.callingserver.CallingServerClientBuilder"
fullName: "com.azure.communication.callingserver.CallingServerClientBuilder"
name: "CallingServerClientBuilder"
nameWithType: "CallingServerClientBuilder"
summary: "Client builder that creates Calling<wbr>Server<wbr>Async<wbr>Client and Calling<wbr>Server<wbr>Client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CallingServerClientBuilder"
constructors:
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.CallingServerClientBuilder()"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.CallingServerClientBuilder()"
  name: "CallingServerClientBuilder()"
  nameWithType: "CallingServerClientBuilder.CallingServerClientBuilder()"
  syntax: "public CallingServerClientBuilder()"
methods:
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  name: "addPolicy(HttpPipelinePolicy customPolicy)"
  nameWithType: "CallingServerClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  summary: "Apply additional Http<wbr>Pipeline<wbr>Policy"
  parameters:
  - description: "HttpPipelinePolicy object to be applied after\n                     AzureKeyCredentialPolicy, UserAgentPolicy, RetryPolicy, and CookiePolicy."
    name: "customPolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder addPolicy(HttpPipelinePolicy customPolicy)"
  desc: "Apply additional HttpPipelinePolicy"
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.buildAsyncClient()"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "CallingServerClientBuilder.buildAsyncClient()"
  summary: "Create asynchronous client applying HMACAuthentication<wbr>Policy, User<wbr>Agent<wbr>Policy, Retry<wbr>Policy, and Cookie<wbr>Policy."
  syntax: "public CallingServerAsyncClient buildAsyncClient()"
  desc: "Create asynchronous client applying HMACAuthenticationPolicy, UserAgentPolicy, RetryPolicy, and CookiePolicy. Additional HttpPolicies specified by additionalPolicies will be applied after them"
  returns:
    description: "The updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerAsyncClient?alt=com.azure.communication.callingserver.CallingServerAsyncClient&text=CallingServerAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.buildClient()"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "CallingServerClientBuilder.buildClient()"
  summary: "Create synchronous client applying Hmac<wbr>Authentication<wbr>Policy, User<wbr>Agent<wbr>Policy, Retry<wbr>Policy, and Cookie<wbr>Policy."
  syntax: "public CallingServerClient buildClient()"
  desc: "Create synchronous client applying HmacAuthenticationPolicy, UserAgentPolicy, RetryPolicy, and CookiePolicy. Additional HttpPolicies specified by additionalPolicies will be applied after them."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClient?alt=com.azure.communication.callingserver.CallingServerClient&text=CallingServerClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "CallingServerClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Allows the user to set a variety of client-related options, such as user-agent string, headers, etc."
  parameters:
  - description: "object to be applied."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Allows the user to set a variety of client-related options, such as user-agent string, headers, etc."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "CallingServerClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration object used to retrieve environment configuration values during building of the client."
  parameters:
  - description: "Configuration store used to retrieve environment\n configurations."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration object used to retrieve environment configuration values during building of the client."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.connectionString(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.connectionString(String connectionString)"
  name: "connectionString(String connectionString)"
  nameWithType: "CallingServerClientBuilder.connectionString(String connectionString)"
  summary: "Set connection<wbr>String to use."
  parameters:
  - description: "connection string to set."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder connectionString(String connectionString)"
  desc: "Set connectionString to use."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.credential(TokenCredential tokenCredential)"
  name: "credential(TokenCredential tokenCredential)"
  nameWithType: "CallingServerClientBuilder.credential(TokenCredential tokenCredential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP requests."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP\n requests."
    name: "tokenCredential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder credential(TokenCredential tokenCredential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP requests."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.endpoint(java.lang.String)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.endpoint(String endpoint)"
  name: "endpoint(String endpoint)"
  nameWithType: "CallingServerClientBuilder.endpoint(String endpoint)"
  summary: "Set endpoint of the service."
  parameters:
  - description: "url of the service."
    name: "endpoint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder endpoint(String endpoint)"
  desc: "Set endpoint of the service."
  returns:
    description: "CallingServerClientBuilder object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "CallingServerClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Set http<wbr>Client to use"
  parameters:
  - description: "httpClient to use, overridden by the pipeline field."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder httpClient(HttpClient httpClient)"
  desc: "Set httpClient to use"
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "CallingServerClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions\"></xref> for service requests."
  parameters:
  - description: "The logging configuration to use when sending and receiving\n HTTP requests/responses."
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder httpLogOptions(HttpLogOptions logOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions\"></xref> for service requests."
  returns:
    description: "The updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.pipeline(HttpPipeline pipeline)"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "CallingServerClientBuilder.pipeline(HttpPipeline pipeline)"
  summary: "Set endpoint of the service."
  parameters:
  - description: "HttpPipeline to use, if a pipeline is not supplied, the\n credential and httpClient fields must be set."
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder pipeline(HttpPipeline pipeline)"
  desc: "Set endpoint of the service."
  returns:
    description: "CallingServerClientBuilder object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "CallingServerClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets the retry policy to use (using the Retry<wbr>Policy type)."
  parameters:
  - description: "object to be applied"
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets the retry policy to use (using the RetryPolicy type)."
  returns:
    description: "Updated <xref uid=\"com.azure.communication.callingserver.CallingServerClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callingserver.CallingServerClientBuilder.serviceVersion(com.azure.communication.callingserver.CallingServerServiceVersion)"
  fullName: "com.azure.communication.callingserver.CallingServerClientBuilder.serviceVersion(CallingServerServiceVersion version)"
  name: "serviceVersion(CallingServerServiceVersion version)"
  nameWithType: "CallingServerClientBuilder.serviceVersion(CallingServerServiceVersion version)"
  summary: "Sets the <xref uid=\"com.azure.communication.callingserver.CallingServerServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerServiceVersion\"></xref> that is used when making API requests."
  parameters:
  - description: "<xref uid=\"com.azure.communication.callingserver.CallingServerServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerServiceVersion\"></xref> of the service to be used when making requests."
    name: "version"
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerServiceVersion?alt=com.azure.communication.callingserver.CallingServerServiceVersion&text=CallingServerServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CallingServerClientBuilder serviceVersion(CallingServerServiceVersion version)"
  desc: "Sets the <xref uid=\"com.azure.communication.callingserver.CallingServerServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CallingServerServiceVersion\"></xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.\n\nTargeting a specific service version may also mean that the service will return an error for newer APIs."
  returns:
    description: "Updated CallingServerClientBuilder object"
    type: "<xref href=\"com.azure.communication.callingserver.CallingServerClientBuilder?alt=com.azure.communication.callingserver.CallingServerClientBuilder&text=CallingServerClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Client builder that creates CallingServerAsyncClient and CallingServerClient.\n\n**Instantiating synchronous and asynchronous Calling Server Clients**\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n \n CallingServerClient callingServerClient = new CallingServerClientBuilder()\n     .pipeline(pipeline)\n     .connectionString(connectionString)\n     .buildClient();\n \n CallingServerAsyncClient callingServerAsyncClient = new CallingServerClientBuilder()\n     .pipeline(pipeline)\n     .connectionString(connectionString)\n     .buildAsyncClient();\n```"
metadata: {}
package: "com.azure.communication.callingserver"
artifact: com.azure:azure-communication-callingserver:1.0.0-beta.4
