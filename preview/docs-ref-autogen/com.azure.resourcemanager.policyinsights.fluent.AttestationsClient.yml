### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient"
fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient"
name: "AttestationsClient"
nameWithType: "AttestationsClient"
summary: "An instance of this class provides access to all the operations defined in Attestations<wbr>Client."
syntax: "public interface AttestationsClient"
methods:
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  name: "beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  name: "beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResourceGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  name: "beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at resource group scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResourceGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  name: "beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at resource group scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  name: "beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  name: "beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AttestationInner>,AttestationInner> beginCreateOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  name: "createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  name: "createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResourceGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  name: "createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at resource group scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResourceGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  name: "createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtResourceGroup(String resourceGroupName, String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at resource group scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  name: "createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  nameWithType: "AttestationsClient.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  name: "createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "AttestationsClient.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.delete(String resourceGroupName, String attestationName)"
  name: "delete(String resourceGroupName, String attestationName)"
  nameWithType: "AttestationsClient.delete(String resourceGroupName, String attestationName)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String attestationName)"
  desc: "Deletes an existing attestation at resource group scope."
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtResource(String resourceId, String attestationName)"
  name: "deleteAtResource(String resourceId, String attestationName)"
  nameWithType: "AttestationsClient.deleteAtResource(String resourceId, String attestationName)"
  summary: "Deletes an existing attestation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtResource(String resourceId, String attestationName)"
  desc: "Deletes an existing attestation at individual resource scope."
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  name: "deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  nameWithType: "AttestationsClient.deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  summary: "Deletes an existing attestation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  desc: "Deletes an existing attestation at individual resource scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtSubscription(String attestationName)"
  name: "deleteAtSubscription(String attestationName)"
  nameWithType: "AttestationsClient.deleteAtSubscription(String attestationName)"
  summary: "Deletes an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtSubscription(String attestationName)"
  desc: "Deletes an existing attestation at subscription scope."
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  name: "deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  nameWithType: "AttestationsClient.deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  summary: "Deletes an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  desc: "Deletes an existing attestation at subscription scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  nameWithType: "AttestationsClient.deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  desc: "Deletes an existing attestation at resource group scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtResource(String resourceId, String attestationName)"
  name: "getAtResource(String resourceId, String attestationName)"
  nameWithType: "AttestationsClient.getAtResource(String resourceId, String attestationName)"
  summary: "Gets an existing attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner getAtResource(String resourceId, String attestationName)"
  desc: "Gets an existing attestation at resource scope."
  returns:
    description: "an existing attestation at resource scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  name: "getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  nameWithType: "AttestationsClient.getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  summary: "Gets an existing attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AttestationInner> getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  desc: "Gets an existing attestation at resource scope."
  returns:
    description: "an existing attestation at resource scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtSubscription(String attestationName)"
  name: "getAtSubscription(String attestationName)"
  nameWithType: "AttestationsClient.getAtSubscription(String attestationName)"
  summary: "Gets an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner getAtSubscription(String attestationName)"
  desc: "Gets an existing attestation at subscription scope."
  returns:
    description: "an existing attestation at subscription scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getAtSubscriptionWithResponse(String attestationName, Context context)"
  name: "getAtSubscriptionWithResponse(String attestationName, Context context)"
  nameWithType: "AttestationsClient.getAtSubscriptionWithResponse(String attestationName, Context context)"
  summary: "Gets an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AttestationInner> getAtSubscriptionWithResponse(String attestationName, Context context)"
  desc: "Gets an existing attestation at subscription scope."
  returns:
    description: "an existing attestation at subscription scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getByResourceGroup(String resourceGroupName, String attestationName)"
  name: "getByResourceGroup(String resourceGroupName, String attestationName)"
  nameWithType: "AttestationsClient.getByResourceGroup(String resourceGroupName, String attestationName)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AttestationInner getByResourceGroup(String resourceGroupName, String attestationName)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  nameWithType: "AttestationsClient.getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AttestationInner> getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.list()"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.list()"
  name: "list()"
  nameWithType: "AttestationsClient.list()"
  summary: "Gets all attestations for the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<AttestationInner> list()"
  desc: "Gets all attestations for the subscription."
  returns:
    description: "all attestations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.list(Integer top, String filter, Context context)"
  name: "list(Integer top, String filter, Context context)"
  nameWithType: "AttestationsClient.list(Integer top, String filter, Context context)"
  summary: "Gets all attestations for the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AttestationInner> list(Integer top, String filter, Context context)"
  desc: "Gets all attestations for the subscription."
  returns:
    description: "all attestations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "AttestationsClient.listByResourceGroup(String resourceGroupName)"
  summary: "Gets all attestations for the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AttestationInner> listByResourceGroup(String resourceGroupName)"
  desc: "Gets all attestations for the resource group."
  returns:
    description: "all attestations for the resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listByResourceGroup(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  nameWithType: "AttestationsClient.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  summary: "Gets all attestations for the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AttestationInner> listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  desc: "Gets all attestations for the resource group."
  returns:
    description: "all attestations for the resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listForResource(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listForResource(String resourceId)"
  name: "listForResource(String resourceId)"
  nameWithType: "AttestationsClient.listForResource(String resourceId)"
  summary: "Gets all attestations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AttestationInner> listForResource(String resourceId)"
  desc: "Gets all attestations for a resource."
  returns:
    description: "all attestations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listForResource(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.fluent.AttestationsClient.listForResource(String resourceId, Integer top, String filter, Context context)"
  name: "listForResource(String resourceId, Integer top, String filter, Context context)"
  nameWithType: "AttestationsClient.listForResource(String resourceId, Integer top, String filter, Context context)"
  summary: "Gets all attestations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AttestationInner> listForResource(String resourceId, Integer top, String filter, Context context)"
  desc: "Gets all attestations for a resource."
  returns:
    description: "all attestations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in AttestationsClient."
metadata: {}
package: "com.azure.resourcemanager.policyinsights.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
