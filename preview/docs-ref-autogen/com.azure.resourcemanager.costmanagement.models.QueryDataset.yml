### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset"
fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset"
name: "QueryDataset"
nameWithType: "QueryDataset"
summary: "The definition of data present in the query."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueryDataset"
constructors:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.QueryDataset()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.QueryDataset()"
  name: "QueryDataset()"
  nameWithType: "QueryDataset.QueryDataset()"
  syntax: "public QueryDataset()"
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.aggregation()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.aggregation()"
  name: "aggregation()"
  nameWithType: "QueryDataset.aggregation()"
  summary: "Get the aggregation property: Dictionary of aggregation expression to use in the query."
  syntax: "public Map<String,QueryAggregation> aggregation()"
  desc: "Get the aggregation property: Dictionary of aggregation expression to use in the query. The key of each item in the dictionary is the alias for the aggregated column. Query can have up to 2 aggregation clauses."
  returns:
    description: "the aggregation value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryAggregation?alt=com.azure.resourcemanager.costmanagement.models.QueryAggregation&text=QueryAggregation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.configuration()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.configuration()"
  name: "configuration()"
  nameWithType: "QueryDataset.configuration()"
  summary: "Get the configuration property: Has configuration information for the data in the export."
  syntax: "public QueryDatasetConfiguration configuration()"
  desc: "Get the configuration property: Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided."
  returns:
    description: "the configuration value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.QueryDatasetConfiguration&text=QueryDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.filter()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.filter()"
  name: "filter()"
  nameWithType: "QueryDataset.filter()"
  summary: "Get the filter property: The filter expression to use in the query."
  syntax: "public QueryFilter filter()"
  desc: "Get the filter property: The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter."
  returns:
    description: "the filter value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.granularity()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.granularity()"
  name: "granularity()"
  nameWithType: "QueryDataset.granularity()"
  summary: "Get the granularity property: The granularity of rows in the query."
  syntax: "public GranularityType granularity()"
  desc: "Get the granularity property: The granularity of rows in the query."
  returns:
    description: "the granularity value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.GranularityType?alt=com.azure.resourcemanager.costmanagement.models.GranularityType&text=GranularityType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.grouping()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.grouping()"
  name: "grouping()"
  nameWithType: "QueryDataset.grouping()"
  summary: "Get the grouping property: Array of group by expression to use in the query."
  syntax: "public List<QueryGrouping> grouping()"
  desc: "Get the grouping property: Array of group by expression to use in the query. Query can have up to 2 group by clauses."
  returns:
    description: "the grouping value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryGrouping?alt=com.azure.resourcemanager.costmanagement.models.QueryGrouping&text=QueryGrouping\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.validate()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.validate()"
  name: "validate()"
  nameWithType: "QueryDataset.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withAggregation(java.util.Map<java.lang.String,com.azure.resourcemanager.costmanagement.models.QueryAggregation>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withAggregation(Map<String,QueryAggregation> aggregation)"
  name: "withAggregation(Map<String,QueryAggregation> aggregation)"
  nameWithType: "QueryDataset.withAggregation(Map<String,QueryAggregation> aggregation)"
  summary: "Set the aggregation property: Dictionary of aggregation expression to use in the query."
  parameters:
  - description: "the aggregation value to set."
    name: "aggregation"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryAggregation?alt=com.azure.resourcemanager.costmanagement.models.QueryAggregation&text=QueryAggregation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryDataset withAggregation(Map<String,QueryAggregation> aggregation)"
  desc: "Set the aggregation property: Dictionary of aggregation expression to use in the query. The key of each item in the dictionary is the alias for the aggregated column. Query can have up to 2 aggregation clauses."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withConfiguration(com.azure.resourcemanager.costmanagement.models.QueryDatasetConfiguration)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withConfiguration(QueryDatasetConfiguration configuration)"
  name: "withConfiguration(QueryDatasetConfiguration configuration)"
  nameWithType: "QueryDataset.withConfiguration(QueryDatasetConfiguration configuration)"
  summary: "Set the configuration property: Has configuration information for the data in the export."
  parameters:
  - description: "the configuration value to set."
    name: "configuration"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.QueryDatasetConfiguration&text=QueryDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDataset withConfiguration(QueryDatasetConfiguration configuration)"
  desc: "Set the configuration property: Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter(com.azure.resourcemanager.costmanagement.models.QueryFilter)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter(QueryFilter filter)"
  name: "withFilter(QueryFilter filter)"
  nameWithType: "QueryDataset.withFilter(QueryFilter filter)"
  summary: "Set the filter property: The filter expression to use in the query."
  parameters:
  - description: "the filter value to set."
    name: "filter"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDataset withFilter(QueryFilter filter)"
  desc: "Set the filter property: The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withGranularity(com.azure.resourcemanager.costmanagement.models.GranularityType)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withGranularity(GranularityType granularity)"
  name: "withGranularity(GranularityType granularity)"
  nameWithType: "QueryDataset.withGranularity(GranularityType granularity)"
  summary: "Set the granularity property: The granularity of rows in the query."
  parameters:
  - description: "the granularity value to set."
    name: "granularity"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.GranularityType?alt=com.azure.resourcemanager.costmanagement.models.GranularityType&text=GranularityType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDataset withGranularity(GranularityType granularity)"
  desc: "Set the granularity property: The granularity of rows in the query."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withGrouping(java.util.List<com.azure.resourcemanager.costmanagement.models.QueryGrouping>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withGrouping(List<QueryGrouping> grouping)"
  name: "withGrouping(List<QueryGrouping> grouping)"
  nameWithType: "QueryDataset.withGrouping(List<QueryGrouping> grouping)"
  summary: "Set the grouping property: Array of group by expression to use in the query."
  parameters:
  - description: "the grouping value to set."
    name: "grouping"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryGrouping?alt=com.azure.resourcemanager.costmanagement.models.QueryGrouping&text=QueryGrouping\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryDataset withGrouping(List<QueryGrouping> grouping)"
  desc: "Set the grouping property: Array of group by expression to use in the query. Query can have up to 2 group by clauses."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The definition of data present in the query."
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
