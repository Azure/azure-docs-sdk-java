### YamlMime:JavaMember
uid: "com.azure.data.tables.TableAsyncBatch.upsertEntity*"
fullName: "com.azure.data.tables.TableAsyncBatch.upsertEntity"
name: "upsertEntity"
nameWithType: "TableAsyncBatch.upsertEntity"
members:
- uid: "com.azure.data.tables.TableAsyncBatch.upsertEntity(com.azure.data.tables.models.TableEntity)"
  fullName: "com.azure.data.tables.TableAsyncBatch.upsertEntity(TableEntity entity)"
  name: "upsertEntity(TableEntity entity)"
  nameWithType: "TableAsyncBatch.upsertEntity(TableEntity entity)"
  summary: "Inserts an entity into the table if it does not exist, or merges the entity with the existing entity otherwise. If no entity exists within the table having the same partition key and row key as the provided entity, it will be inserted. Otherwise, the provided entity's properties will be merged into the existing entity."
  parameters:
  - description: "The entity to upsert."
    name: "entity"
    type: "<xref href=\"com.azure.data.tables.models.TableEntity?alt=com.azure.data.tables.models.TableEntity&text=TableEntity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAsyncBatch upsertEntity(TableEntity entity)"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableAsyncBatch\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAsyncBatch\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableAsyncBatch?alt=com.azure.data.tables.TableAsyncBatch&text=TableAsyncBatch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableAsyncBatch.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)"
  fullName: "com.azure.data.tables.TableAsyncBatch.upsertEntity(TableEntity entity, UpdateMode updateMode)"
  name: "upsertEntity(TableEntity entity, UpdateMode updateMode)"
  nameWithType: "TableAsyncBatch.upsertEntity(TableEntity entity, UpdateMode updateMode)"
  summary: "Inserts an entity into the table if it does not exist, or updates the existing entity using the specified update mode otherwise. If no entity exists within the table having the same partition key and row key as the provided entity, it will be inserted. Otherwise, the existing entity will be updated according to the specified update mode. When the update mode is 'MERGE', the provided entity's properties will be merged into the existing entity. When the update mode is 'REPLACE', the provided entity's properties will completely replace those in the existing entity."
  parameters:
  - description: "The entity to upsert."
    name: "entity"
    type: "<xref href=\"com.azure.data.tables.models.TableEntity?alt=com.azure.data.tables.models.TableEntity&text=TableEntity\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of update to perform if the entity already exits."
    name: "updateMode"
    type: "<xref href=\"com.azure.data.tables.models.UpdateMode?alt=com.azure.data.tables.models.UpdateMode&text=UpdateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableAsyncBatch upsertEntity(TableEntity entity, UpdateMode updateMode)"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableAsyncBatch\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableAsyncBatch\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableAsyncBatch?alt=com.azure.data.tables.TableAsyncBatch&text=TableAsyncBatch\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.0.0-beta.3
