### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager
  id: ProvisioningServiceClientExceptionManager
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager()
  - com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification(int,java.lang.String)
  langs:
  - java
  name: ProvisioningServiceClientExceptionManager
  nameWithType: ProvisioningServiceClientExceptionManager
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager
  type: Class
  package: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  summary: Provide static function to verify the Device Provisioning Service results and throw appropriate exception.
  syntax:
    content: public class ProvisioningServiceClientExceptionManager
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager()
  id: ProvisioningServiceClientExceptionManager()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager
  langs:
  - java
  name: ProvisioningServiceClientExceptionManager()
  nameWithType: ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  syntax:
    content: public ProvisioningServiceClientExceptionManager()
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification(int,java.lang.String)
  id: httpResponseVerification(int,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager
  langs:
  - java
  name: httpResponseVerification(int responseStatus, String errorReason)
  nameWithType: ProvisioningServiceClientExceptionManager.httpResponseVerification(int responseStatus, String errorReason)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification(int responseStatus, String errorReason)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  summary: >-
    Verify response using response status


    ```java

    ProvisioningServiceClientServiceException [any exception reported in the http response]
             |
             |
             +-->ProvisioningServiceClientBadUsageException [any http response 4xx]
             |        |
             |        +-->ProvisioningServiceClientBadFormatException [400]
             |        +-->ProvisioningServiceClientUnathorizedException [401]
             |        +-->ProvisioningServiceClientNotFoundException [404]
             |        +-->ProvisioningServiceClientPreconditionFailedException [412]
             |        +-->ProvisioningServiceClientTooManyRequestsException [429]
             |
             +-->ProvisioningServiceClientTransientException [any http response 5xx]
             |        |
             |        +-->ProvisioningServiceClientInternalServerErrorException [500]
             |
             +-->ProvisioningServiceClientUnknownException [any other http response >300, but not 4xx or 5xx]
    ```
  syntax:
    content: public static void httpResponseVerification(int responseStatus, String errorReason)
    parameters:
    - id: responseStatus
      type: int
      description: is the response status
    - id: errorReason
      type: java.lang.String
      description: is the error description
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientServiceException
    description: This exception is thrown if the response status equal 400
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager*
  name: ProvisioningServiceClientExceptionManager
  nameWithType: ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.ProvisioningServiceClientExceptionManager
  package: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientServiceException
  name: ProvisioningServiceClientServiceException
  nameWithType: ProvisioningServiceClientServiceException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientServiceException
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification*
  name: httpResponseVerification
  nameWithType: ProvisioningServiceClientExceptionManager.httpResponseVerification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager.httpResponseVerification
  package: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
