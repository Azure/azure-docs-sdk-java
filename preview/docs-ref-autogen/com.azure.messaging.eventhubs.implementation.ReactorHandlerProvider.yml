### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider
  id: ReactorHandlerProvider
  parent: com.azure.messaging.eventhubs.implementation
  children:
  - com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider(ReactorProvider)
  href: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.yml
  langs:
  - java
  name: ReactorHandlerProvider
  nameWithType: ReactorHandlerProvider
  fullName: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/ReactorHandlerProvider.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/ReactorHandlerProvider.java
    startLine: 20
  package: com.azure.messaging.eventhubs.implementation
  summary: "<p>Provides handlers for the various types of links. </p>"
  syntax:
    content: public class ReactorHandlerProvider
  inheritance:
  - java.lang.Object
- uid: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider(ReactorProvider)
  id: ReactorHandlerProvider(ReactorProvider)
  parent: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider
  href: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.yml
  langs:
  - java
  name: ReactorHandlerProvider(ReactorProvider provider)
  nameWithType: ReactorHandlerProvider.ReactorHandlerProvider(ReactorProvider provider)
  fullName: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider(ReactorProvider provider)
  overload: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/ReactorHandlerProvider.java
    startLine: 30
  package: com.azure.messaging.eventhubs.implementation
  summary: "<p>Creates a new instance with the reactor provider to handle <xref uid=\"com.azure.messaging.eventhubs.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatchers</xref> to its generated handlers.</p>\r\n<p></p>"
  syntax:
    content: public ReactorHandlerProvider(ReactorProvider provider)
    parameters:
    - id: provider
      type: com.azure.messaging.eventhubs.implementation.ReactorProvider
      description: <p>The provider that creates and manages <xref uid="" data-throw-if-not-resolved="false">Reactor</xref> instances. </p>
references:
- uid: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider*
  name: ReactorHandlerProvider
  nameWithType: ReactorHandlerProvider.ReactorHandlerProvider
  fullName: com.azure.messaging.eventhubs.implementation.ReactorHandlerProvider.ReactorHandlerProvider
  package: com.azure.messaging.eventhubs.implementation
- uid: com.azure.core.util.logging.ClientLogger
  parent: com.azure.core.util.logging
  href: com.azure.core.util.logging.ClientLogger.yml
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{}Â \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
- uid: com.azure.messaging.eventhubs.implementation.ReactorProvider
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorProvider.yml
  name: ReactorProvider
  nameWithType: ReactorProvider
  fullName: com.azure.messaging.eventhubs.implementation.ReactorProvider
  type: Class
  syntax:
    content: public class ReactorProvider
- uid: com.azure.messaging.eventhubs.implementation.ReactorDispatcher
  parent: com.azure.messaging.eventhubs.implementation
  href: com.azure.messaging.eventhubs.implementation.ReactorDispatcher.yml
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.azure.messaging.eventhubs.implementation.ReactorDispatcher
  type: Class
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> APIs should be on the Reactor Thread. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> doesn't support APIs like send() out-of-box - which could potentially run on different thread to that of the Reactor thread.</p>\r\n<p>The following utility class is used to generate an Event to hook into <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>'s event delegation pattern. It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> as the IO on which Reactor listens to. </p>\r\n<p>Cardinality: Multiple <xref uid=\"com.azure.messaging.eventhubs.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>'s could be attached to 1 <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>. Each <xref uid=\"com.azure.messaging.eventhubs.implementation.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> should be initialized synchronously - as it calls API in <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> which is not thread-safe. </p>"
  syntax:
    content: public class ReactorDispatcher
- uid: com.azure.messaging.eventhubs.implementation.handler.ConnectionHandler
  parent: com.azure.messaging.eventhubs.implementation.handler
  href: com.azure.messaging.eventhubs.implementation.handler.ConnectionHandler.yml
  name: ConnectionHandler
  nameWithType: ConnectionHandler
  fullName: com.azure.messaging.eventhubs.implementation.handler.ConnectionHandler
  type: Class
  summary: "<p>Creates an AMQP connection using sockets and the default AMQP protocol port 5671. </p>"
  syntax:
    content: public class ConnectionHandler extends Handler
- uid: com.azure.core.amqp.TransportType
  parent: com.azure.core.amqp
  href: com.azure.core.amqp.TransportType.yml
  name: TransportType
  nameWithType: TransportType
  fullName: com.azure.core.amqp.TransportType
  type: Enum
  summary: "<p>All TransportType switches available for AMQP protocol. </p>"
  syntax:
    content: public enum TransportType
- uid: com.azure.messaging.eventhubs.implementation.handler.SessionHandler
  parent: com.azure.messaging.eventhubs.implementation.handler
  href: com.azure.messaging.eventhubs.implementation.handler.SessionHandler.yml
  name: SessionHandler
  nameWithType: SessionHandler
  fullName: com.azure.messaging.eventhubs.implementation.handler.SessionHandler
  type: Class
  syntax:
    content: public class SessionHandler
- uid: com.azure.messaging.eventhubs.implementation.handler.SendLinkHandler
  parent: com.azure.messaging.eventhubs.implementation.handler
  href: com.azure.messaging.eventhubs.implementation.handler.SendLinkHandler.yml
  name: SendLinkHandler
  nameWithType: SendLinkHandler
  fullName: com.azure.messaging.eventhubs.implementation.handler.SendLinkHandler
  type: Class
  syntax:
    content: public class SendLinkHandler
- uid: com.azure.messaging.eventhubs.implementation.handler.ReceiveLinkHandler
  parent: com.azure.messaging.eventhubs.implementation.handler
  href: com.azure.messaging.eventhubs.implementation.handler.ReceiveLinkHandler.yml
  name: ReceiveLinkHandler
  nameWithType: ReceiveLinkHandler
  fullName: com.azure.messaging.eventhubs.implementation.handler.ReceiveLinkHandler
  type: Class
  syntax:
    content: public class ReceiveLinkHandler
