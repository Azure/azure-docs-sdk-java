### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  id: BlobChangefeedAsyncClient
  artifact: com.azure:azure-storage-blob-changefeed:12.0.0-beta.2
  parent: com.azure.storage.blob.changefeed
  children:
  - com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents()
  - com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(java.lang.String)
  - com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(java.time.OffsetDateTime,java.time.OffsetDateTime)
  langs:
  - java
  name: BlobChangefeedAsyncClient
  nameWithType: BlobChangefeedAsyncClient
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  type: Class
  package: com.azure.storage.blob.changefeed
  summary: This class provides a client that contains all operations that apply to Azure Storage Blob changefeed.
  syntax:
    content: public class BlobChangefeedAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.BlobChangefeedAsyncClient(com.azure.storage.blob.changefeed.ChangefeedFactory)
  id: BlobChangefeedAsyncClient(com.azure.storage.blob.changefeed.ChangefeedFactory)
  artifact: com.azure:azure-storage-blob-changefeed:12.0.0-beta.2
  parent: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  langs:
  - java
  name: BlobChangefeedAsyncClient(ChangefeedFactory changefeedFactory)
  nameWithType: BlobChangefeedAsyncClient.BlobChangefeedAsyncClient(ChangefeedFactory changefeedFactory)
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.BlobChangefeedAsyncClient(ChangefeedFactory changefeedFactory)
  overload: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.BlobChangefeedAsyncClient*
  type: Constructor
  package: com.azure.storage.blob.changefeed
  summary: Package-private constructor for use by <xref uid="com.azure.storage.blob.changefeed.BlobChangefeedClientBuilder" data-throw-if-not-resolved="false">BlobChangefeedClientBuilder</xref>.
  syntax:
    content: " BlobChangefeedAsyncClient(ChangefeedFactory changefeedFactory)"
    parameters:
    - id: changefeedFactory
      type: com.azure.storage.blob.changefeed.ChangefeedFactory
      description: The changefeed factory to create the Changefeed from.
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents()
  id: getEvents()
  artifact: com.azure:azure-storage-blob-changefeed:12.0.0-beta.2
  parent: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  langs:
  - java
  name: getEvents()
  nameWithType: BlobChangefeedAsyncClient.getEvents()
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents()
  overload: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents*
  type: Method
  package: com.azure.storage.blob.changefeed
  summary: >-
    Returns a reactive Publisher emitting all the changefeed events for this account lazily as needed.


    Changefeed events are returned in approximate temporal order.


    For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    client.getEvents().subscribe(event ->
         System.out.printf("Topic: %s, Subject: %s%n", event.getTopic(), event.getSubject()));
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-change-feed?tabs=azure-portal
  syntax:
    content: public BlobChangefeedPagedFlux getEvents()
    return:
      type: com.azure.storage.blob.changefeed.BlobChangefeedPagedFlux
      description: A reactive response emitting the changefeed events.
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(java.lang.String)
  id: getEvents(java.lang.String)
  artifact: com.azure:azure-storage-blob-changefeed:12.0.0-beta.2
  parent: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  langs:
  - java
  name: getEvents(String cursor)
  nameWithType: BlobChangefeedAsyncClient.getEvents(String cursor)
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(String cursor)
  overload: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents*
  type: Method
  package: com.azure.storage.blob.changefeed
  summary: "Returns a reactive Publisher emitting all the changefeed events for this account lazily as needed.\n\nChangefeed events are returned in approximate temporal order.\n\nFor more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nString cursor = \"cursor\";\n \n client.getEvents(cursor).subscribe(event ->\n     System.out.printf(\"Topic: %s, Subject: %s%n\", event.getTopic(), event.getSubject()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-change-feed?tabs=azure-portal"
  syntax:
    content: public BlobChangefeedPagedFlux getEvents(String cursor)
    parameters:
    - id: cursor
      type: java.lang.String
      description: >-
        Identifies the portion of the events to be returned with the next get operation. Events that
         take place after the event identified by the cursor will be returned.
    return:
      type: com.azure.storage.blob.changefeed.BlobChangefeedPagedFlux
      description: A reactive response emitting the changefeed events.
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(java.time.OffsetDateTime,java.time.OffsetDateTime)
  id: getEvents(java.time.OffsetDateTime,java.time.OffsetDateTime)
  artifact: com.azure:azure-storage-blob-changefeed:12.0.0-beta.2
  parent: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient
  langs:
  - java
  name: getEvents(OffsetDateTime startTime, OffsetDateTime endTime)
  nameWithType: BlobChangefeedAsyncClient.getEvents(OffsetDateTime startTime, OffsetDateTime endTime)
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents(OffsetDateTime startTime, OffsetDateTime endTime)
  overload: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents*
  type: Method
  package: com.azure.storage.blob.changefeed
  summary: "Returns a reactive Publisher emitting all the changefeed events for this account lazily as needed.\n\nChangefeed events are returned in approximate temporal order.\n\nFor more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nOffsetDateTime startTime = OffsetDateTime.MIN;\n OffsetDateTime endTime = OffsetDateTime.now();\n \n client.getEvents(startTime, endTime).subscribe(event ->\n     System.out.printf(\"Topic: %s, Subject: %s%n\", event.getTopic(), event.getSubject()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-change-feed?tabs=azure-portal"
  syntax:
    content: public BlobChangefeedPagedFlux getEvents(OffsetDateTime startTime, OffsetDateTime endTime)
    parameters:
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        Filters the results to return events approximately after the start time. Note: A few events
         belonging to the previous hour can also be returned. A few events belonging to this hour can be missing; to
         ensure all events from the hour are returned, round the start time down by an hour.
    - id: endTime
      type: java.time.OffsetDateTime
      description: >-
        Filters the results to return events approximately before the end time. Note: A few events
         belonging to the next hour can also be returned. A few events belonging to this hour can be missing; to ensure
         all events from the hour are returned, round the end time up by an hour.
    return:
      type: com.azure.storage.blob.changefeed.BlobChangefeedPagedFlux
      description: A reactive response emitting the changefeed events.
references:
- uid: com.azure.storage.blob.changefeed.ChangefeedFactory
  spec.java:
  - uid: com.azure.storage.blob.changefeed.ChangefeedFactory
    name: ChangefeedFactory
    fullName: com.azure.storage.blob.changefeed.ChangefeedFactory
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.BlobChangefeedAsyncClient*
  name: BlobChangefeedAsyncClient
  nameWithType: BlobChangefeedAsyncClient.BlobChangefeedAsyncClient
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.BlobChangefeedAsyncClient
  package: com.azure.storage.blob.changefeed
- uid: com.azure.storage.blob.changefeed.BlobChangefeedPagedFlux
  name: BlobChangefeedPagedFlux
  nameWithType: BlobChangefeedPagedFlux
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedPagedFlux
- uid: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents*
  name: getEvents
  nameWithType: BlobChangefeedAsyncClient.getEvents
  fullName: com.azure.storage.blob.changefeed.BlobChangefeedAsyncClient.getEvents
  package: com.azure.storage.blob.changefeed
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
