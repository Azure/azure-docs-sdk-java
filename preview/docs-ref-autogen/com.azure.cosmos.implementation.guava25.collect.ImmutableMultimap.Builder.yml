### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  id: Builder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.Builder()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.build()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderKeysBy(java.util.Comparator<? super K>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderValuesBy(java.util.Comparator<? super V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put(java.util.Map.Entry<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,V...)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,java.lang.Iterable<? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)
  langs:
  - java
  name: ImmutableMultimap.Builder<K,V>
  nameWithType: ImmutableMultimap.Builder<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A builder for creating immutable multimap instances, especially `public static final` multimaps ("constant multimaps"). Example:


    ```java

    static final Multimap STRING_TO_INTEGER_MULTIMAP =
         new ImmutableMultimap.Builder()
             .put("one", 1)
             .putAll("several", 1, 2, 3)
             .putAll("many", 1, 2, 3, 4, 5)
             .build();
    ```


    Builder instances can be reused; it is safe to call <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.build" data-throw-if-not-resolved="false">#build</xref> multiple times to build multiple multimaps in series. Each multimap contains the key-value mappings in the previously created multimaps.
  syntax:
    content: public static class ImmutableMultimap.Builder<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.Builder()
  id: Builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: Builder()
  nameWithType: ImmutableMultimap.Builder<K,V>.Builder()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.Builder()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.Builder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Creates a new builder. The returned builder is equivalent to the builder generated by <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.builder" data-throw-if-not-resolved="false">ImmutableMultimap#builder</xref>.
  syntax:
    content: public Builder()
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.build()
  id: build()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: build()
  nameWithType: ImmutableMultimap.Builder<K,V>.build()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.build()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.build*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a newly-created immutable multimap.
  syntax:
    content: public ImmutableMultimap<K,V> build()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderKeysBy(java.util.Comparator<? super K>)
  id: orderKeysBy(java.util.Comparator<? super K>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: orderKeysBy(Comparator<? super K> keyComparator)
  nameWithType: ImmutableMultimap.Builder<K,V>.orderKeysBy(Comparator<? super K> keyComparator)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.orderKeysBy(Comparator<? super K> keyComparator)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderKeysBy*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Specifies the ordering of the generated multimap's keys.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> orderKeysBy(Comparator<? super K> keyComparator)
    parameters:
    - id: keyComparator
      type: java.util.Comparator<? super K>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderValuesBy(java.util.Comparator<? super V>)
  id: orderValuesBy(java.util.Comparator<? super V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: orderValuesBy(Comparator<? super V> valueComparator)
  nameWithType: ImmutableMultimap.Builder<K,V>.orderValuesBy(Comparator<? super V> valueComparator)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.orderValuesBy(Comparator<? super V> valueComparator)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderValuesBy*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Specifies the ordering of the generated multimap's values for each key.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> orderValuesBy(Comparator<? super V> valueComparator)
    parameters:
    - id: valueComparator
      type: java.util.Comparator<? super V>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put(K,V)
  id: put(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: put(K key, V value)
  nameWithType: ImmutableMultimap.Builder<K,V>.put(K key, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.put(K key, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds a key-value mapping to the built multimap.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> put(K key, V value)
    parameters:
    - id: key
      type: K
    - id: value
      type: V
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put(java.util.Map.Entry<? extends K,? extends V>)
  id: put(java.util.Map.Entry<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: put(Map.Entry<? extends K,? extends V> entry)
  nameWithType: ImmutableMultimap.Builder<K,V>.put(Map.Entry<? extends K,? extends V> entry)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.put(Map.Entry<? extends K,? extends V> entry)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds an entry to the built multimap.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> put(Map.Entry<? extends K,? extends V> entry)
    parameters:
    - id: entry
      type: java.util.Map.Entry<? extends K,? extends V>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,V...)
  id: putAll(K,V...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: putAll(K key, V[] values)
  nameWithType: ImmutableMultimap.Builder<K,V>.putAll(K key, V[] values)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(K key, V[] values)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Stores an array of values with the same key in the built multimap.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> putAll(K key, V[] values)
    parameters:
    - id: key
      type: K
    - id: values
      type: V[]
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,java.lang.Iterable<? extends V>)
  id: putAll(K,java.lang.Iterable<? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: putAll(K key, Iterable<? extends V> values)
  nameWithType: ImmutableMultimap.Builder<K,V>.putAll(K key, Iterable<? extends V> values)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(K key, Iterable<? extends V> values)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Stores a collection of values with the same key in the built multimap.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> putAll(K key, Iterable<? extends V> values)
    parameters:
    - id: key
      type: K
    - id: values
      type: java.lang.Iterable<? extends V>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  id: putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: putAll(Multimap<? extends K,? extends V> multimap)
  nameWithType: ImmutableMultimap.Builder<K,V>.putAll(Multimap<? extends K,? extends V> multimap)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(Multimap<? extends K,? extends V> multimap)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Stores another multimap's entries in the built multimap. The generated multimap's key and value orderings correspond to the iteration ordering of the `multimap.asMap()` view, with new keys and values following any existing keys and values.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> putAll(Multimap<? extends K,? extends V> multimap)
    parameters:
    - id: multimap
      type: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)
  id: putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  langs:
  - java
  name: putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)
  nameWithType: ImmutableMultimap.Builder<K,V>.putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds entries to the built multimap.
  syntax:
    content: public ImmutableMultimap.Builder<K,V> putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)
    parameters:
    - id: entries
      type: java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.Builder*
  name: Builder
  nameWithType: ImmutableMultimap.Builder<K,V>.Builder
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.Builder
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
    name: Builder
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.put*
  name: put
  nameWithType: ImmutableMultimap.Builder<K,V>.put
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.put
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map.Entry<? extends K,? extends V>
  spec.java:
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '? extends java.util.Map.Entry'
    name: Entry
    fullName: '? extends java.util.Map.Entry'
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*
  name: putAll
  nameWithType: ImmutableMultimap.Builder<K,V>.putAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Iterable<? extends V>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: V[]
  spec.java:
  - uid: V
    name: V
    fullName: V
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multimap
    name: Multimap
    fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: java.util.Comparator<? super K>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '? super K'
    name: '? super K'
    fullName: '? super K'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderKeysBy*
  name: orderKeysBy
  nameWithType: ImmutableMultimap.Builder<K,V>.orderKeysBy
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.orderKeysBy
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Comparator<? super V>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '? super V'
    name: '? super V'
    fullName: '? super V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.orderValuesBy*
  name: orderValuesBy
  nameWithType: ImmutableMultimap.Builder<K,V>.orderValuesBy
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.orderValuesBy
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap
    name: ImmutableMultimap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.build*
  name: build
  nameWithType: ImmutableMultimap.Builder<K,V>.build
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.build
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: '? extends java.util.Map.Entry'
  name: '? extends Map.Entry'
  nameWithType: '? extends Map.Entry'
  fullName: '? extends java.util.Map.Entry'
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: '? extends V'
  name: '? extends V'
  nameWithType: '? extends V'
  fullName: '? extends V'
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap
  name: Multimap
  nameWithType: Multimap
  fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: '? super K'
  name: '? super K'
  nameWithType: '? super K'
  fullName: '? super K'
- uid: '? super V'
  name: '? super V'
  nameWithType: '? super V'
  fullName: '? super V'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap
  name: ImmutableMultimap
  nameWithType: ImmutableMultimap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap
