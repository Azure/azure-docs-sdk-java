### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.SerializerCache"
fullName: "com.fasterxml.jackson.databind.ser.SerializerCache"
name: "SerializerCache"
nameWithType: "SerializerCache"
summary: "Simple cache object that allows for doing 2-level lookups: first level is by \"local\" read-only lookup Map (used without locking) and second backup level is by a shared modifiable HashMap. The idea is that after a while, most serializers are found from the local Map (to optimize performance, reduce lock contention), but that during buildup we can use a shared map to reduce both number of distinct read-only maps constructed, and number of serializers constructed.\n\nCache contains three kinds of entries, based on combination of class pair key. First class in key is for the type to serialize, and second one is type used for determining how to resolve value type. One (but not both) of entries can be null."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SerializerCache"
constructors:
- "com.fasterxml.jackson.databind.ser.SerializerCache.SerializerCache()"
methods:
- "com.fasterxml.jackson.databind.ser.SerializerCache.addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.addAndResolveNonTypedSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.addAndResolveNonTypedSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.addTypedSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.flush()"
- "com.fasterxml.jackson.databind.ser.SerializerCache.getReadOnlyLookupMap()"
- "com.fasterxml.jackson.databind.ser.SerializerCache.size()"
- "com.fasterxml.jackson.databind.ser.SerializerCache.typedValueSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.typedValueSerializer(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.SerializerCache.untypedValueSerializer(java.lang.Class<?>)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
