### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType"
name: "constructMapType"
nameWithType: "TypeFactory.constructMapType"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(java.lang.Class<? extends java.util.Map>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(Class<? extends Map> mapClass, JavaType keyType, JavaType valueType)"
  name: "constructMapType(Class<? extends Map> mapClass, JavaType keyType, JavaType valueType)"
  nameWithType: "TypeFactory.constructMapType(Class<? extends Map> mapClass, JavaType keyType, JavaType valueType)"
  summary: "Method for constructing a <xref uid=\"com.fasterxml.jackson.databind.type.MapType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapType\"></xref> instance\n\nNOTE: type modifiers are NOT called on constructed type itself."
  parameters:
  - name: "mapClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.util.Map?alt=? extends java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "keyType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MapType constructMapType(Class<? extends Map> mapClass, JavaType keyType, JavaType valueType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapType?alt=com.fasterxml.jackson.databind.type.MapType&text=MapType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(java.lang.Class<? extends java.util.Map>,java.lang.Class<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(Class<? extends Map> mapClass, Class<?> keyClass, Class<?> valueClass)"
  name: "constructMapType(Class<? extends Map> mapClass, Class<?> keyClass, Class<?> valueClass)"
  nameWithType: "TypeFactory.constructMapType(Class<? extends Map> mapClass, Class<?> keyClass, Class<?> valueClass)"
  summary: "Method for constructing a <xref uid=\"com.fasterxml.jackson.databind.type.MapType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapType\"></xref> instance\n\nNOTE: type modifiers are NOT called on constructed type itself; but are called for contained types."
  parameters:
  - name: "mapClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.util.Map?alt=? extends java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "keyClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "valueClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public MapType constructMapType(Class<? extends Map> mapClass, Class<?> keyClass, Class<?> valueClass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapType?alt=com.fasterxml.jackson.databind.type.MapType&text=MapType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
