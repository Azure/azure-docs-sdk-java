### YamlMime:JavaType
uid: "com.azure.resourcemanager.maps.models.Accounts"
fullName: "com.azure.resourcemanager.maps.models.Accounts"
name: "Accounts"
nameWithType: "Accounts"
summary: "Resource collection API of Accounts."
syntax: "public interface Accounts"
methods:
- uid: "com.azure.resourcemanager.maps.models.Accounts.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.define(String name)"
  name: "define(String name)"
  nameWithType: "Accounts.define(String name)"
  summary: "Begins definition for a new Maps<wbr>Account resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MapsAccount.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new MapsAccount resource."
  returns:
    description: "the first stage of the new MapsAccount definition."
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount.DefinitionStages.Blank?alt=com.azure.resourcemanager.maps.models.MapsAccount.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.maps.models.Accounts.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Accounts.deleteById(String id)"
  summary: "Delete a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete a Maps Account."
- uid: "com.azure.resourcemanager.maps.models.Accounts.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Delete a Maps Account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  name: "deleteByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Delete a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Delete a Maps Account."
- uid: "com.azure.resourcemanager.maps.models.Accounts.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Delete a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Delete a Maps Account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Accounts.getById(String id)"
  summary: "Get a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MapsAccount getById(String id)"
  desc: "Get a Maps Account."
  returns:
    description: "a Maps Account."
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.maps.models.Accounts.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.getByIdWithResponse(String id, Context context)"
  summary: "Get a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MapsAccount> getByIdWithResponse(String id, Context context)"
  desc: "Get a Maps Account."
  returns:
    description: "a Maps Account."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  name: "getByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Get a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MapsAccount getByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Get a Maps Account."
  returns:
    description: "a Maps Account."
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.maps.models.Accounts.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Get a Maps Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MapsAccount> getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Get a Maps Account."
  returns:
    description: "a Maps Account."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.list()"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.list()"
  name: "list()"
  nameWithType: "Accounts.list()"
  summary: "Get all Maps Accounts in a Subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MapsAccount> list()"
  desc: "Get all Maps Accounts in a Subscription."
  returns:
    description: "all Maps Accounts in a Subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Accounts.list(Context context)"
  summary: "Get all Maps Accounts in a Subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MapsAccount> list(Context context)"
  desc: "Get all Maps Accounts in a Subscription."
  returns:
    description: "all Maps Accounts in a Subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName)"
  summary: "Get all Maps Accounts in a Resource Group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MapsAccount> listByResourceGroup(String resourceGroupName)"
  desc: "Get all Maps Accounts in a Resource Group."
  returns:
    description: "all Maps Accounts in a Resource Group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Get all Maps Accounts in a Resource Group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MapsAccount> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Get all Maps Accounts in a Resource Group."
  returns:
    description: "all Maps Accounts in a Resource Group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccount?alt=com.azure.resourcemanager.maps.models.MapsAccount&text=MapsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.listKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.listKeys(String resourceGroupName, String accountName)"
  name: "listKeys(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.listKeys(String resourceGroupName, String accountName)"
  summary: "Get the keys to use with the Maps APIs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MapsAccountKeys listKeys(String resourceGroupName, String accountName)"
  desc: "Get the keys to use with the Maps APIs. A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration."
  returns:
    description: "the keys to use with the Maps APIs."
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsAccountKeys?alt=com.azure.resourcemanager.maps.models.MapsAccountKeys&text=MapsAccountKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.maps.models.Accounts.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.listKeysWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "listKeysWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.listKeysWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Get the keys to use with the Maps APIs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MapsAccountKeys> listKeysWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Get the keys to use with the Maps APIs. A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration."
  returns:
    description: "the keys to use with the Maps APIs."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccountKeys?alt=com.azure.resourcemanager.maps.models.MapsAccountKeys&text=MapsAccountKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.maps.models.Accounts.regenerateKeys(java.lang.String,java.lang.String,com.azure.resourcemanager.maps.models.MapsKeySpecification)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.regenerateKeys(String resourceGroupName, String accountName, MapsKeySpecification keySpecification)"
  name: "regenerateKeys(String resourceGroupName, String accountName, MapsKeySpecification keySpecification)"
  nameWithType: "Accounts.regenerateKeys(String resourceGroupName, String accountName, MapsKeySpecification keySpecification)"
  summary: "Regenerate either the primary or secondary key for use with the Maps APIs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Which key to regenerate: primary or secondary."
    name: "keySpecification"
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsKeySpecification?alt=com.azure.resourcemanager.maps.models.MapsKeySpecification&text=MapsKeySpecification\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MapsAccountKeys regenerateKeys(String resourceGroupName, String accountName, MapsKeySpecification keySpecification)"
  desc: "Regenerate either the primary or secondary key for use with the Maps APIs. The old key will stop working immediately."
  returns:
    description: "the set of keys which can be used to access the Maps REST APIs."
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsAccountKeys?alt=com.azure.resourcemanager.maps.models.MapsAccountKeys&text=MapsAccountKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.maps.models.Accounts.regenerateKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.maps.models.MapsKeySpecification,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.maps.models.Accounts.regenerateKeysWithResponse(String resourceGroupName, String accountName, MapsKeySpecification keySpecification, Context context)"
  name: "regenerateKeysWithResponse(String resourceGroupName, String accountName, MapsKeySpecification keySpecification, Context context)"
  nameWithType: "Accounts.regenerateKeysWithResponse(String resourceGroupName, String accountName, MapsKeySpecification keySpecification, Context context)"
  summary: "Regenerate either the primary or secondary key for use with the Maps APIs."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Maps Account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Which key to regenerate: primary or secondary."
    name: "keySpecification"
    type: "<xref href=\"com.azure.resourcemanager.maps.models.MapsKeySpecification?alt=com.azure.resourcemanager.maps.models.MapsKeySpecification&text=MapsKeySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MapsAccountKeys> regenerateKeysWithResponse(String resourceGroupName, String accountName, MapsKeySpecification keySpecification, Context context)"
  desc: "Regenerate either the primary or secondary key for use with the Maps APIs. The old key will stop working immediately."
  returns:
    description: "the set of keys which can be used to access the Maps REST APIs."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.maps.models.MapsAccountKeys?alt=com.azure.resourcemanager.maps.models.MapsAccountKeys&text=MapsAccountKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Accounts."
metadata: {}
package: "com.azure.resourcemanager.maps.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-maps:1.0.0-beta.1
