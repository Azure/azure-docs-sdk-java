### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic"
fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic"
name: "PartnerTopic"
nameWithType: "PartnerTopic"
summary: "An immutable client-side representation of Partner<wbr>Topic."
syntax: "public interface PartnerTopic"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activate()"
  name: "activate()"
  nameWithType: "PartnerTopic.activate()"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic activate()"
  desc: "Activate a newly created partner topic."
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activateWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activateWithResponse(Context context)"
  name: "activateWithResponse(Context context)"
  nameWithType: "PartnerTopic.activateWithResponse(Context context)"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopic> activateWithResponse(Context context)"
  desc: "Activate a newly created partner topic."
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activationState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activationState()"
  name: "activationState()"
  nameWithType: "PartnerTopic.activationState()"
  summary: "Gets the activation<wbr>State property: Activation state of the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicActivationState activationState()"
  desc: "Gets the activationState property: Activation state of the partner topic."
  returns:
    description: "the activationState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState&text=PartnerTopicActivationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivate()"
  name: "deactivate()"
  nameWithType: "PartnerTopic.deactivate()"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic deactivate()"
  desc: "Deactivate specific partner topic."
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivateWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivateWithResponse(Context context)"
  name: "deactivateWithResponse(Context context)"
  nameWithType: "PartnerTopic.deactivateWithResponse(Context context)"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopic> deactivateWithResponse(Context context)"
  desc: "Deactivate specific partner topic."
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.eventTypeInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.eventTypeInfo()"
  name: "eventTypeInfo()"
  nameWithType: "PartnerTopic.eventTypeInfo()"
  summary: "Gets the event<wbr>Type<wbr>Info property: Event Type information from the corresponding event channel."
  modifiers:
  - "abstract"
  syntax: "public abstract EventTypeInfo eventTypeInfo()"
  desc: "Gets the eventTypeInfo property: Event Type information from the corresponding event channel."
  returns:
    description: "the eventTypeInfo value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventTypeInfo?alt=com.azure.resourcemanager.eventgrid.models.EventTypeInfo&text=EventTypeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.expirationTimeIfNotActivatedUtc()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.expirationTimeIfNotActivatedUtc()"
  name: "expirationTimeIfNotActivatedUtc()"
  nameWithType: "PartnerTopic.expirationTimeIfNotActivatedUtc()"
  summary: "Gets the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime expirationTimeIfNotActivatedUtc()"
  desc: "Gets the expirationTimeIfNotActivatedUtc property: Expiration time of the partner topic. If this timer expires while the partner topic is still never activated, the partner topic and corresponding event channel are deleted."
  returns:
    description: "the expirationTimeIfNotActivatedUtc value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.id()"
  name: "id()"
  nameWithType: "PartnerTopic.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.identity()"
  name: "identity()"
  nameWithType: "PartnerTopic.identity()"
  summary: "Gets the identity property: Identity information for the Partner Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityInfo identity()"
  desc: "Gets the identity property: Identity information for the Partner Topic resource."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.innerModel()"
  name: "innerModel()"
  nameWithType: "PartnerTopic.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>eventgrid.<wbr>fluent.<wbr>models.<wbr>Partner<wbr>Topic<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.location()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.location()"
  name: "location()"
  nameWithType: "PartnerTopic.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.messageForActivation()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.messageForActivation()"
  name: "messageForActivation()"
  nameWithType: "PartnerTopic.messageForActivation()"
  summary: "Gets the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  modifiers:
  - "abstract"
  syntax: "public abstract String messageForActivation()"
  desc: "Gets the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the messageForActivation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.name()"
  name: "name()"
  nameWithType: "PartnerTopic.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerRegistrationImmutableId()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerRegistrationImmutableId()"
  name: "partnerRegistrationImmutableId()"
  nameWithType: "PartnerTopic.partnerRegistrationImmutableId()"
  summary: "Gets the partner<wbr>Registration<wbr>Immutable<wbr>Id property: The immutable<wbr>Id of the corresponding partner registration."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID partnerRegistrationImmutableId()"
  desc: "Gets the partnerRegistrationImmutableId property: The immutableId of the corresponding partner registration."
  returns:
    description: "the partnerRegistrationImmutableId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerTopicFriendlyDescription()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerTopicFriendlyDescription()"
  name: "partnerTopicFriendlyDescription()"
  nameWithType: "PartnerTopic.partnerTopicFriendlyDescription()"
  summary: "Gets the partner<wbr>Topic<wbr>Friendly<wbr>Description property: Friendly description about the topic."
  modifiers:
  - "abstract"
  syntax: "public abstract String partnerTopicFriendlyDescription()"
  desc: "Gets the partnerTopicFriendlyDescription property: Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic. This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
  returns:
    description: "the partnerTopicFriendlyDescription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PartnerTopic.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the partner topic."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState&text=PartnerTopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh()"
  name: "refresh()"
  nameWithType: "PartnerTopic.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PartnerTopic.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopic refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.region()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.region()"
  name: "region()"
  nameWithType: "PartnerTopic.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.regionName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.regionName()"
  name: "regionName()"
  nameWithType: "PartnerTopic.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.resourceGroupName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "PartnerTopic.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.source()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.source()"
  name: "source()"
  nameWithType: "PartnerTopic.source()"
  summary: "Gets the source property: Source associated with this partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract String source()"
  desc: "Gets the source property: Source associated with this partner topic. This represents a unique partner resource."
  returns:
    description: "the source value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.systemData()"
  name: "systemData()"
  nameWithType: "PartnerTopic.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to Partner Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to Partner Topic resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.tags()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.tags()"
  name: "tags()"
  nameWithType: "PartnerTopic.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.type()"
  name: "type()"
  nameWithType: "PartnerTopic.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.update()"
  name: "update()"
  nameWithType: "PartnerTopic.update()"
  summary: "Begins update for the Partner<wbr>Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic.Update update()"
  desc: "Begins update for the PartnerTopic resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic.Update?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of PartnerTopic."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
