### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic"
fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic"
name: "PartnerTopic"
nameWithType: "PartnerTopic"
summary: "An immutable client-side representation of PartnerTopic."
syntax: "public interface PartnerTopic"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activate()"
  name: "activate()"
  nameWithType: "PartnerTopic.activate()"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic activate()"
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activateWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activateWithResponse(Context context)"
  name: "activateWithResponse(Context context)"
  nameWithType: "PartnerTopic.activateWithResponse(Context context)"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopic> activateWithResponse(Context context)"
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activationState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.activationState()"
  name: "activationState()"
  nameWithType: "PartnerTopic.activationState()"
  summary: "Gets the activationState property: Activation state of the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicActivationState activationState()"
  returns:
    description: "the activationState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState&text=PartnerTopicActivationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivate()"
  name: "deactivate()"
  nameWithType: "PartnerTopic.deactivate()"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic deactivate()"
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivateWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.deactivateWithResponse(Context context)"
  name: "deactivateWithResponse(Context context)"
  nameWithType: "PartnerTopic.deactivateWithResponse(Context context)"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopic> deactivateWithResponse(Context context)"
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.eventTypeInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.eventTypeInfo()"
  name: "eventTypeInfo()"
  nameWithType: "PartnerTopic.eventTypeInfo()"
  summary: "Gets the eventTypeInfo property: Event Type information from the corresponding event channel."
  modifiers:
  - "abstract"
  syntax: "public abstract EventTypeInfo eventTypeInfo()"
  returns:
    description: "the eventTypeInfo value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventTypeInfo?alt=com.azure.resourcemanager.eventgrid.models.EventTypeInfo&text=EventTypeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.expirationTimeIfNotActivatedUtc()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.expirationTimeIfNotActivatedUtc()"
  name: "expirationTimeIfNotActivatedUtc()"
  nameWithType: "PartnerTopic.expirationTimeIfNotActivatedUtc()"
  summary: "Gets the expirationTimeIfNotActivatedUtc property: Expiration time of the partner topic. If this timer expires while the partner topic is still never activated, the partner topic and corresponding event channel are deleted."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime expirationTimeIfNotActivatedUtc()"
  returns:
    description: "the expirationTimeIfNotActivatedUtc value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.id()"
  name: "id()"
  nameWithType: "PartnerTopic.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.identity()"
  name: "identity()"
  nameWithType: "PartnerTopic.identity()"
  summary: "Gets the identity property: Identity information for the Partner Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityInfo identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.innerModel()"
  name: "innerModel()"
  nameWithType: "PartnerTopic.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.location()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.location()"
  name: "location()"
  nameWithType: "PartnerTopic.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.messageForActivation()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.messageForActivation()"
  name: "messageForActivation()"
  nameWithType: "PartnerTopic.messageForActivation()"
  summary: "Gets the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  modifiers:
  - "abstract"
  syntax: "public abstract String messageForActivation()"
  returns:
    description: "the messageForActivation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.name()"
  name: "name()"
  nameWithType: "PartnerTopic.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerRegistrationImmutableId()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerRegistrationImmutableId()"
  name: "partnerRegistrationImmutableId()"
  nameWithType: "PartnerTopic.partnerRegistrationImmutableId()"
  summary: "Gets the partnerRegistrationImmutableId property: The immutableId of the corresponding partner registration."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID partnerRegistrationImmutableId()"
  returns:
    description: "the partnerRegistrationImmutableId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerTopicFriendlyDescription()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.partnerTopicFriendlyDescription()"
  name: "partnerTopicFriendlyDescription()"
  nameWithType: "PartnerTopic.partnerTopicFriendlyDescription()"
  summary: "Gets the partnerTopicFriendlyDescription property: Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic. This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
  modifiers:
  - "abstract"
  syntax: "public abstract String partnerTopicFriendlyDescription()"
  returns:
    description: "the partnerTopicFriendlyDescription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PartnerTopic.provisioningState()"
  summary: "Gets the provisioningState property: Provisioning state of the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState&text=PartnerTopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh()"
  name: "refresh()"
  nameWithType: "PartnerTopic.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PartnerTopic.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopic refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic&text=PartnerTopic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.region()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.region()"
  name: "region()"
  nameWithType: "PartnerTopic.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.regionName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.regionName()"
  name: "regionName()"
  nameWithType: "PartnerTopic.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.resourceGroupName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "PartnerTopic.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.source()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.source()"
  name: "source()"
  nameWithType: "PartnerTopic.source()"
  summary: "Gets the source property: Source associated with this partner topic. This represents a unique partner resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String source()"
  returns:
    description: "the source value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.systemData()"
  name: "systemData()"
  nameWithType: "PartnerTopic.systemData()"
  summary: "Gets the systemData property: The system metadata relating to Partner Topic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.tags()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.tags()"
  name: "tags()"
  nameWithType: "PartnerTopic.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.type()"
  name: "type()"
  nameWithType: "PartnerTopic.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerTopic.update()"
  name: "update()"
  nameWithType: "PartnerTopic.update()"
  summary: "Begins update for the PartnerTopic resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopic.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopic.Update?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopic.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
