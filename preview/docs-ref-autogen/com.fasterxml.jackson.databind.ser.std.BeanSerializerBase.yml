### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase"
fullName: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase"
name: "BeanSerializerBase"
nameWithType: "BeanSerializerBase"
summary: "Base class both for the standard bean serializer, and couple of variants that only differ in small details. Can be used for custom bean serializers as well, although that is not the primary design goal."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
- "com.fasterxml.jackson.databind.JsonSerializer.properties()"
- "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
- "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)"
- "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class BeanSerializerBase extends StdSerializer<Object> implements ContextualSerializer, ResolvableSerializer, jsonFormatVisitors.JsonFormatVisitable, SchemaAware"
constructors:
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.BeanSerializerBase(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)"
fields:
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.NAME_FOR_OBJECT_REF"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.NO_PROPS"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._anyGetterWriter"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._beanType"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._filteredProps"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._objectIdWriter"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._propertyFilterId"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._props"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializationShape"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeId"
methods:
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)"
- "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable?alt=com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable&text=JsonFormatVisitable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsonschema.SchemaAware?alt=com.fasterxml.jackson.databind.jsonschema.SchemaAware&text=SchemaAware\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.ContextualSerializer?alt=com.fasterxml.jackson.databind.ser.ContextualSerializer&text=ContextualSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.ResolvableSerializer?alt=com.fasterxml.jackson.databind.ser.ResolvableSerializer&text=ResolvableSerializer\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
