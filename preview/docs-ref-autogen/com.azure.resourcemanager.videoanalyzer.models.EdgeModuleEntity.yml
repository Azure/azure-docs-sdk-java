### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity"
fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity"
name: "EdgeModuleEntity"
nameWithType: "EdgeModuleEntity"
summary: "An immutable client-side representation of Edge<wbr>Module<wbr>Entity."
syntax: "public interface EdgeModuleEntity"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.edgeModuleId()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.edgeModuleId()"
  name: "edgeModuleId()"
  nameWithType: "EdgeModuleEntity.edgeModuleId()"
  summary: "Gets the edge<wbr>Module<wbr>Id property: Internal ID generated for the instance of the Video Analyzer edge module."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID edgeModuleId()"
  desc: "Gets the edgeModuleId property: Internal ID generated for the instance of the Video Analyzer edge module."
  returns:
    description: "the edgeModuleId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.id()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.id()"
  name: "id()"
  nameWithType: "EdgeModuleEntity.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.innerModel()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.innerModel()"
  name: "innerModel()"
  nameWithType: "EdgeModuleEntity.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>videoanalyzer.<wbr>fluent.<wbr>models.<wbr>Edge<wbr>Module<wbr>Entity<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract EdgeModuleEntityInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.videoanalyzer.fluent.models.EdgeModuleEntityInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.EdgeModuleEntityInner?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.EdgeModuleEntityInner&text=EdgeModuleEntityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.listProvisioningToken(com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.listProvisioningToken(ListProvisioningTokenInput parameters)"
  name: "listProvisioningToken(ListProvisioningTokenInput parameters)"
  nameWithType: "EdgeModuleEntity.listProvisioningToken(ListProvisioningTokenInput parameters)"
  summary: "Creates a new provisioning token."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput?alt=com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput&text=ListProvisioningTokenInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EdgeModuleProvisioningToken listProvisioningToken(ListProvisioningTokenInput parameters)"
  desc: "Creates a new provisioning token. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset."
  returns:
    description: "provisioning token properties."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EdgeModuleProvisioningToken?alt=com.azure.resourcemanager.videoanalyzer.models.EdgeModuleProvisioningToken&text=EdgeModuleProvisioningToken\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.listProvisioningTokenWithResponse(com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.listProvisioningTokenWithResponse(ListProvisioningTokenInput parameters, Context context)"
  name: "listProvisioningTokenWithResponse(ListProvisioningTokenInput parameters, Context context)"
  nameWithType: "EdgeModuleEntity.listProvisioningTokenWithResponse(ListProvisioningTokenInput parameters, Context context)"
  summary: "Creates a new provisioning token."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput?alt=com.azure.resourcemanager.videoanalyzer.models.ListProvisioningTokenInput&text=ListProvisioningTokenInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EdgeModuleProvisioningToken> listProvisioningTokenWithResponse(ListProvisioningTokenInput parameters, Context context)"
  desc: "Creates a new provisioning token. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset."
  returns:
    description: "provisioning token properties along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EdgeModuleProvisioningToken?alt=com.azure.resourcemanager.videoanalyzer.models.EdgeModuleProvisioningToken&text=EdgeModuleProvisioningToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.name()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.name()"
  name: "name()"
  nameWithType: "EdgeModuleEntity.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.refresh()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.refresh()"
  name: "refresh()"
  nameWithType: "EdgeModuleEntity.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract EdgeModuleEntity refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity?alt=com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity&text=EdgeModuleEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "EdgeModuleEntity.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EdgeModuleEntity refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity?alt=com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity&text=EdgeModuleEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.resourceGroupName()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "EdgeModuleEntity.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.type()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.type()"
  name: "type()"
  nameWithType: "EdgeModuleEntity.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.update()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.update()"
  name: "update()"
  nameWithType: "EdgeModuleEntity.update()"
  summary: "Begins update for the Edge<wbr>Module<wbr>Entity resource."
  modifiers:
  - "abstract"
  syntax: "public abstract EdgeModuleEntity.Update update()"
  desc: "Begins update for the EdgeModuleEntity resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.Update?alt=com.azure.resourcemanager.videoanalyzer.models.EdgeModuleEntity.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of EdgeModuleEntity."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
