### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet<C>"
name: "ImmutableRangeSet<C>"
nameWithType: "ImmutableRangeSet<C>"
summary: "A <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RangeSet\"></xref> whose contents will never change, with many other important properties detailed at <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableCollection\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.addAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.clear()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.contains(C)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.encloses(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.enclosesAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.rangeContaining(C)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.remove(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.removeAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ImmutableRangeSet<C> extends AbstractRangeSet<C> implements Serializable"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>builder()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>copyOf(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>copyOf(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>of()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>of(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<C>unionOf(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.<E>toImmutableRangeSet()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.addAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.addAll(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.asDescendingSetOfRanges()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.asRanges()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.asSet(com.azure.cosmos.implementation.guava25.collect.DiscreteDomain<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.complement()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.difference(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.encloses(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.intersection(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.rangeContaining(C)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.remove(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.removeAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.removeAll(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.span()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.subRangeSet(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeSet.union(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
type: "class"
typeParameters:
- name: "C"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
