### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.filter.FilteringParserDelegate"
fullName: "com.fasterxml.jackson.core.filter.FilteringParserDelegate"
name: "FilteringParserDelegate"
nameWithType: "FilteringParserDelegate"
summary: "Specialized <xref uid=\"com.fasterxml.jackson.core.util.JsonParserDelegate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParserDelegate\"></xref> that allows use of <xref uid=\"com.fasterxml.jackson.core.filter.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref> for outputting a subset of content that is visible to caller"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.util.JsonParserDelegate\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser._codec()"
- "com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()"
- "com.fasterxml.jackson.core.JsonParser.canParseAsync()"
- "com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonParser.currentName()"
- "com.fasterxml.jackson.core.JsonParser.getBinaryValue()"
- "com.fasterxml.jackson.core.JsonParser.getFormatFeatures()"
- "com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()"
- "com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.core.JsonParser.nextBooleanValue()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)"
- "com.fasterxml.jackson.core.JsonParser.nextIntValue(int)"
- "com.fasterxml.jackson.core.JsonParser.nextLongValue(long)"
- "com.fasterxml.jackson.core.JsonParser.nextTextValue()"
- "com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.canReadObjectId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.canReadTypeId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.close()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.currentToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.currentTokenId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.delegate()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.finishToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentTokenId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getFeatureMask()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getObjectId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getText()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getText(java.io.Writer)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getTypeId()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.hasToken(com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.hasTokenId(int)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartArrayToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartObjectToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.isNaN()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.overrideFormatFeatures(int,int)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.overrideStdFeatures(int,int)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.setCurrentValue(java.lang.Object)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.setFeatureMask(int)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()"
- "com.fasterxml.jackson.core.util.JsonParserDelegate.version()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FilteringParserDelegate extends JsonParserDelegate"
constructors:
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.FilteringParserDelegate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean)"
fields:
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._allowMultipleMatches"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._currToken"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._exposedContext"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._headContext"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._includeImmediateParent"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._includePath"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._itemFilter"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._lastClearedToken"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._matchCount"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.rootFilter"
methods:
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._filterContext()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextToken2()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate._nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.clearCurrentToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.currentToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.currentTokenId()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getBigIntegerValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getBooleanValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getByteValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getCurrentLocation()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getCurrentName()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getCurrentToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getCurrentTokenId()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getDecimalValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getDoubleValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getEmbeddedObject()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getFilter()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getFloatValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getIntValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getLastClearedToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getLongValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getMatchCount()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getNumberType()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getNumberValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getParsingContext()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getShortValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getText()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextCharacters()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextLength()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextOffset()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTokenLocation()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsBoolean()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsBoolean(boolean)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsDouble()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsDouble(double)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsInt()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsInt(int)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsLong()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsLong(long)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsString()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsString(java.lang.String)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasCurrentToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasTextCharacters()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasToken(com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasTokenId(int)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.isExpectedStartArrayToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.isExpectedStartObjectToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.nextToken()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.nextValue()"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.overrideCurrentName(java.lang.String)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
- "com.fasterxml.jackson.core.filter.FilteringParserDelegate.skipChildren()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.core.filter"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
