### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest"
fullName: "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest"
name: "HttpRequest"
nameWithType: "HttpRequest"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpRequest"
constructors:
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest()"
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[])"
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.HttpRequest(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[],java.net.Proxy)"
fields:
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.connection"
methods:
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.send()"
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setConnectTimeoutMillis(int)"
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setHeaderField(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.setReadTimeoutMillis(int)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.http"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
