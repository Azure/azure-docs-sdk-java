### YamlMime:JavaType
uid: "com.azure.storage.file.share.ShareServiceClient"
fullName: "com.azure.storage.file.share.ShareServiceClient"
name: "ShareServiceClient"
nameWithType: "ShareServiceClient"
summary: "This class provides a share<wbr>Service<wbr>Async<wbr>Client that contains all the operations for interacting with a file account in Azure Storage."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ShareServiceClient"
methods:
- uid: "com.azure.storage.file.share.ShareServiceClient.createShare(java.lang.String)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.createShare(String shareName)"
  name: "createShare(String shareName)"
  nameWithType: "ShareServiceClient.createShare(String shareName)"
  summary: "Creates a share in the storage account with the specified name and returns a Share<wbr>Client to interact with it."
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareClient createShare(String shareName)"
  desc: "Creates a share in the storage account with the specified name and returns a ShareClient to interact with it.\n\n**Code Samples**\n\nCreate the share with share name of \"myshare\"\n\n```java\nfileServiceClient.createShare(\"myshare\");\n System.out.println(\"Creating the share completed.\");\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-share"
  returns:
    description: "The <xref uid=\"com.azure.storage.file.share.ShareClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareClient\"></xref>"
    type: "<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(java.lang.String,com.azure.storage.file.share.options.ShareCreateOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(String shareName, ShareCreateOptions options, Duration timeout, Context context)"
  name: "createShareWithResponse(String shareName, ShareCreateOptions options, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.createShareWithResponse(String shareName, ShareCreateOptions options, Duration timeout, Context context)"
  summary: "Creates a share in the storage account with the specified name and options and returns a Share<wbr>Client to interact with it."
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.share.options.ShareCreateOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareCreateOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.options.ShareCreateOptions?alt=com.azure.storage.file.share.options.ShareCreateOptions&text=ShareCreateOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareClient> createShareWithResponse(String shareName, ShareCreateOptions options, Duration timeout, Context context)"
  desc: "Creates a share in the storage account with the specified name and options and returns a ShareClient to interact with it.\n\n**Code Samples**\n\n```java\nResponse<ShareClient> response = fileServiceClient.createShareWithResponse(\"test\",\n     new ShareCreateOptions().setMetadata(Collections.singletonMap(\"share\", \"metadata\")).setQuotaInGb(1)\n     .setAccessTier(ShareAccessTier.HOT), Duration.ofSeconds(5), new Context(key1, value1));\n System.out.printf(\"Creating the share completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-share"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.ShareClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareClient\"></xref> and the status of creating the share."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  name: "createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  summary: "Creates a share in the storage account with the specified name and metadata and returns a Share<wbr>Client to interact with it."
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional metadata to associate with the share"
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Optional maximum size the share is allowed to grow to in GB. This must be greater than 0 and\n less than or equal to 5120. The default value is 5120."
    name: "quotaInGB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareClient> createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  desc: "Creates a share in the storage account with the specified name and metadata and returns a ShareClient to interact with it.\n\n**Code Samples**\n\nCreate the share \"test\" with a quota of 10 GB\n\n```java\nResponse<ShareClient> response = fileServiceClient.createShareWithResponse(\"test\",\n     Collections.singletonMap(\"share\", \"metadata\"), null, Duration.ofSeconds(5),\n     new Context(key1, value1));\n System.out.printf(\"Creating the share completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-share"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.ShareClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareClient\"></xref> and the status of creating the share."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.deleteShare(java.lang.String)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.deleteShare(String shareName)"
  name: "deleteShare(String shareName)"
  nameWithType: "ShareServiceClient.deleteShare(String shareName)"
  summary: "Deletes the share in the storage account with the given name"
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteShare(String shareName)"
  desc: "Deletes the share in the storage account with the given name\n\n**Code Samples**\n\nDelete the share \"test\"\n\n```java\nfileServiceClient.deleteShare(\"myshare\");\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-share"
- uid: "com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  name: "deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  summary: "Deletes the specific snapshot of the share in the storage account with the given name."
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the snapshot"
    name: "snapshot"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  desc: "Deletes the specific snapshot of the share in the storage account with the given name. Snapshot are identified by the time they were created.\n\n**Code Samples**\n\nDelete the snapshot of share \"test\" that was created at current time.\n\n```java\nOffsetDateTime midnight = OffsetDateTime.of(LocalDateTime.now(), ZoneOffset.UTC);\n Response<Void> response = fileServiceClient.deleteShareWithResponse(\"test\", midnight.toString(),\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Deleting the snapshot completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-share"
  returns:
    description: "A response that only contains headers and response status code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)"
  name: "generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)"
  nameWithType: "ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)"
  summary: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>"
    name: "accountSasSignatureValues"
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasSignatureValues?alt=com.azure.storage.common.sas.AccountSasSignatureValues&text=AccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)"
  desc: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>.\n\nNote : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref>\n\nSee <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref> for more information on how to construct an account SAS.\n\n**Generating an account SAS**\n\nThe snippet below generates an AccountSasSignatureValues object that lasts for two days and gives the user read and list access to blob and file shares.\n\n```java\nAccountSasPermission permissions = new AccountSasPermission()\n     .setListPermission(true)\n     .setReadPermission(true);\n AccountSasResourceType resourceTypes = new AccountSasResourceType().setContainer(true);\n AccountSasService services = new AccountSasService().setBlobAccess(true).setFileAccess(true);\n OffsetDateTime expiryTime = OffsetDateTime.now().plus(Duration.ofDays(2));\n\n AccountSasSignatureValues sasValues =\n     new AccountSasSignatureValues(expiryTime, permissions, services, resourceTypes);\n\n // Client must be authenticated via StorageSharedKeyCredential\n String sas = fileServiceClient.generateAccountSas(sasValues);\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues, Context context)"
  name: "generateAccountSas(AccountSasSignatureValues accountSasSignatureValues, Context context)"
  nameWithType: "ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues, Context context)"
  summary: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>"
    name: "accountSasSignatureValues"
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasSignatureValues?alt=com.azure.storage.common.sas.AccountSasSignatureValues&text=AccountSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the code when generating a SAS."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateAccountSas(AccountSasSignatureValues accountSasSignatureValues, Context context)"
  desc: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref>.\n\nNote : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref>\n\nSee <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref> for more information on how to construct an account SAS.\n\nThe snippet below generates a SAS that lasts for two days and gives the user read and list access to blob containers and file shares.\n\n```java\nAccountSasPermission permissions = new AccountSasPermission()\n     .setListPermission(true)\n     .setReadPermission(true);\n AccountSasResourceType resourceTypes = new AccountSasResourceType().setContainer(true);\n AccountSasService services = new AccountSasService().setBlobAccess(true).setFileAccess(true);\n OffsetDateTime expiryTime = OffsetDateTime.now().plus(Duration.ofDays(2));\n\n AccountSasSignatureValues sasValues =\n     new AccountSasSignatureValues(expiryTime, permissions, services, resourceTypes);\n\n // Client must be authenticated via StorageSharedKeyCredential\n String sas = fileServiceClient.generateAccountSas(sasValues, new Context(\"key\", \"value\"));\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getAccountName()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getAccountName()"
  name: "getAccountName()"
  nameWithType: "ShareServiceClient.getAccountName()"
  summary: "Get associated account name."
  syntax: "public String getAccountName()"
  desc: "Get associated account name."
  returns:
    description: "account name associated with this storage resource."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl()"
  name: "getFileServiceUrl()"
  nameWithType: "ShareServiceClient.getFileServiceUrl()"
  summary: "Get the url of the storage file service client."
  syntax: "public String getFileServiceUrl()"
  desc: "Get the url of the storage file service client."
  returns:
    description: "the url of the Storage File service."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getHttpPipeline()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getHttpPipeline()"
  name: "getHttpPipeline()"
  nameWithType: "ShareServiceClient.getHttpPipeline()"
  summary: "Gets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> powering this client."
  syntax: "public HttpPipeline getHttpPipeline()"
  desc: "Gets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> powering this client."
  returns:
    description: "The pipeline."
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getProperties()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getProperties()"
  name: "getProperties()"
  nameWithType: "ShareServiceClient.getProperties()"
  summary: "Retrieves the properties of the storage account's File service."
  syntax: "public ShareServiceProperties getProperties()"
  desc: "Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).\n\n**Code Samples**\n\nRetrieve File service properties\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n System.out.printf(\"Hour metrics enabled: %b, Minute metrics enabled: %b\", properties.getHourMetrics().isEnabled(),\n     properties.getMinuteMetrics().isEnabled());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-file-service-properties"
  returns:
    description: "Storage account <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"File service properties\"></xref>"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareServiceProperties?alt=com.azure.storage.file.share.models.ShareServiceProperties&text=ShareServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse(Duration timeout, Context context)"
  name: "getPropertiesWithResponse(Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.getPropertiesWithResponse(Duration timeout, Context context)"
  summary: "Retrieves the properties of the storage account's File service."
  parameters:
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareServiceProperties> getPropertiesWithResponse(Duration timeout, Context context)"
  desc: "Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).\n\n**Code Samples**\n\nRetrieve File service properties\n\n```java\nShareServiceProperties properties = fileServiceClient.getPropertiesWithResponse(\n     Duration.ofSeconds(1), new Context(key1, value1)).getValue();\n System.out.printf(\"Hour metrics enabled: %b, Minute metrics enabled: %b\", properties.getHourMetrics().isEnabled(),\n     properties.getMinuteMetrics().isEnabled());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-file-service-properties"
  returns:
    description: "A response containing the Storage account <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"File service properties\"></xref> with\n headers and response status code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareServiceProperties?alt=com.azure.storage.file.share.models.ShareServiceProperties&text=ShareServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.getServiceVersion()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getServiceVersion()"
  name: "getServiceVersion()"
  nameWithType: "ShareServiceClient.getServiceVersion()"
  summary: "Gets the service version the client is using."
  syntax: "public ShareServiceVersion getServiceVersion()"
  desc: "Gets the service version the client is using."
  returns:
    description: "the service version the client is using."
    type: "<xref href=\"com.azure.storage.file.share.ShareServiceVersion?alt=com.azure.storage.file.share.ShareServiceVersion&text=ShareServiceVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.getShareClient(java.lang.String)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.getShareClient(String shareName)"
  name: "getShareClient(String shareName)"
  nameWithType: "ShareServiceClient.getShareClient(String shareName)"
  summary: "Constructs a Share<wbr>Client that interacts with the specified share."
  parameters:
  - description: "Name of the share"
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareClient getShareClient(String shareName)"
  desc: "Constructs a ShareClient that interacts with the specified share.\n\nIf the share doesn't exist in the storage account <xref uid=\"com.azure.storage.file.share.ShareClient.create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"create\"></xref> in the shareServiceAsyncClient will need to be called before interaction with the share can happen."
  returns:
    description: "a ShareClient that interacts with the specified share"
    type: "<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.listShares()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.listShares()"
  name: "listShares()"
  nameWithType: "ShareServiceClient.listShares()"
  summary: "Lists all shares in the storage account without their metadata or snapshots."
  syntax: "public PagedIterable<ShareItem> listShares()"
  desc: "Lists all shares in the storage account without their metadata or snapshots.\n\n**Code Samples**\n\nList all shares in the account\n\n```java\nfileServiceClient.listShares().forEach(\n     shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-shares"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account without their metadata or snapshots"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.listShares(com.azure.storage.file.share.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  name: "listShares(ListSharesOptions options, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  summary: "Lists the shares in the Storage account that pass the options filter."
  parameters:
  - description: "Options for listing shares. If iterating by page, the page size passed to byPage methods such as\n <xref uid=\"com.azure.core.http.rest.PagedIterable.iterableByPage*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable#iterableByPage(int)\"></xref> will be preferred over the value set on these options."
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.models.ListSharesOptions?alt=com.azure.storage.file.share.models.ListSharesOptions&text=ListSharesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ShareItem> listShares(ListSharesOptions options, Duration timeout, Context context)"
  desc: "Lists the shares in the Storage account that pass the options filter.\n\nSet starts with name filter using <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setPrefix(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"prefix\"></xref> to filter shares that are listed.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeMetadata(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeMetadata\"></xref> to have metadata returned for the shares.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeSnapshots(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeSnapshots\"></xref> to have snapshots of the shares listed.\n\n**Code Samples**\n\nList all shares that begin with \"azure\"\n\n```java\nfileServiceClient.listShares(new ListSharesOptions().setPrefix(\"azure\"), Duration.ofSeconds(1),\n     new Context(key1, value1)).forEach(\n         shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nList all shares including their snapshots and metadata\n\n```java\nfileServiceClient.listShares(new ListSharesOptions().setIncludeMetadata(true)\n     .setIncludeSnapshots(true), Duration.ofSeconds(1), new Context(key1, value1)).forEach(\n         shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-shares"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account that satisfy the filter requirements"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.setProperties(com.azure.storage.file.share.models.ShareServiceProperties)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.setProperties(ShareServiceProperties properties)"
  name: "setProperties(ShareServiceProperties properties)"
  nameWithType: "ShareServiceClient.setProperties(ShareServiceProperties properties)"
  summary: "Sets the properties for the storage account's File service."
  parameters:
  - description: "Storage account File service properties"
    name: "properties"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareServiceProperties?alt=com.azure.storage.file.share.models.ShareServiceProperties&text=ShareServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProperties(ShareServiceProperties properties)"
  desc: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n properties.setCors(Collections.emptyList());\n\n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nEnable Minute and Hour Metrics\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n\n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n\n fileServiceClient.setProperties(properties);\n System.out.println(\"Setting File service properties completed.\");\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-file-service-properties"
- uid: "com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse(com.azure.storage.file.share.models.ShareServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)"
  name: "setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)"
  summary: "Sets the properties for the storage account's File service."
  parameters:
  - description: "Storage account File service properties"
    name: "properties"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareServiceProperties?alt=com.azure.storage.file.share.models.ShareServiceProperties&text=ShareServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)"
  desc: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n properties.setCors(Collections.emptyList());\n\n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nEnable Minute and Hour Metrics\n\n```java\nShareServiceProperties properties = fileServiceClient.getPropertiesWithResponse(\n     Duration.ofSeconds(1), new Context(key1, value1)).getValue();\n\n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n\n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-file-service-properties"
  returns:
    description: "A response that only contains headers and response status code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.undeleteShare(java.lang.String,java.lang.String)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.undeleteShare(String deletedShareName, String deletedShareVersion)"
  name: "undeleteShare(String deletedShareName, String deletedShareVersion)"
  nameWithType: "ShareServiceClient.undeleteShare(String deletedShareName, String deletedShareVersion)"
  summary: "Restores a previously deleted share."
  parameters:
  - description: "The name of the previously deleted share."
    name: "deletedShareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the previously deleted share."
    name: "deletedShareVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareClient undeleteShare(String deletedShareName, String deletedShareVersion)"
  desc: "Restores a previously deleted share.\n\nIf the share associated with provided `deletedShareName` already exists, this call will result in a 409 (conflict).\n\nThis API is only functional if Share Soft Delete is enabled for the storage account associated with the share. For more information, see the Azure Docs.\n\n**Code Samples**\n\n```java\nListSharesOptions listSharesOptions = new ListSharesOptions();\n listSharesOptions.setIncludeDeleted(true);\n fileServiceClient.listShares(listSharesOptions, Duration.ofSeconds(1), context).forEach(\n     deletedShare -> {\n         ShareClient shareClient = fileServiceClient.undeleteShare(\n             deletedShare.getName(), deletedShare.getVersion());\n     }\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/restore-share"
  returns:
    description: "A <xref uid=\"com.azure.storage.file.share.ShareClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareClient\"></xref> used\n to interact with the restored share."
    type: "<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)"
  name: "undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)"
  summary: "Restores a previously deleted share."
  parameters:
  - description: "The name of the previously deleted share."
    name: "deletedShareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the previously deleted share."
    name: "deletedShareVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareClient> undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)"
  desc: "Restores a previously deleted share.\n\nIf the share associated with provided `deletedShareName` already exists, this call will result in a 409 (conflict).\n\nThis API is only functional if Share Soft Delete is enabled for the storage account associated with the share. For more information, see the Azure Docs.\n\n**Code Samples**\n\n```java\nListSharesOptions listSharesOptions = new ListSharesOptions();\n listSharesOptions.setIncludeDeleted(true);\n fileServiceClient.listShares(listSharesOptions, Duration.ofSeconds(1), context).forEach(\n     deletedShare -> {\n         ShareClient shareClient = fileServiceClient.undeleteShareWithResponse(\n             deletedShare.getName(), deletedShare.getVersion(), Duration.ofSeconds(1), context).getValue();\n     }\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/restore-share"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.storage.file.share.ShareClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareClient\"></xref> used\n to interact with the restored share."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.ShareClient?alt=com.azure.storage.file.share.ShareClient&text=ShareClient\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides a shareServiceAsyncClient that contains all the operations for interacting with a file account in Azure Storage. Operations allowed by the shareServiceAsyncClient are creating, listing, and deleting shares and retrieving and updating properties of the account.\n\n**Instantiating a Synchronous File Service Client**\n\n```java\nShareServiceClient client = new ShareServiceClientBuilder()\n     .connectionString(\"${connectionString}\")\n     .endpoint(\"${endpoint}\")\n     .buildClient();\n```\n\nView <xref uid=\"com.azure.storage.file.share.ShareServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the shareServiceAsyncClient."
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.14.0-beta.1
