### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator.AbstractListDecorator*"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator<E>.AbstractListDecorator"
name: "AbstractListDecorator"
nameWithType: "AbstractListDecorator<E>.AbstractListDecorator"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator.AbstractListDecorator()"
  fullName: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator<E>.AbstractListDecorator()"
  name: "AbstractListDecorator()"
  nameWithType: "AbstractListDecorator<E>.AbstractListDecorator()"
  summary: "Constructor only used in deserialization, do not use otherwise."
  syntax: "protected AbstractListDecorator()"
- uid: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator.AbstractListDecorator(java.util.List<E>)"
  fullName: "com.azure.cosmos.implementation.apachecommons.collections.list.AbstractListDecorator<E>.AbstractListDecorator(List<E> list)"
  name: "AbstractListDecorator(List<E> list)"
  nameWithType: "AbstractListDecorator<E>.AbstractListDecorator(List<E> list)"
  summary: "Constructor that wraps (not copies)."
  parameters:
  - description: "the list to decorate, must not be null"
    name: "list"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected AbstractListDecorator(List<E> list)"
type: "constructor"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.list"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
