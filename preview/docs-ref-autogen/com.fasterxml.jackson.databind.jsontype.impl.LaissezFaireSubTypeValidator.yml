### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  id: LaissezFaireSubTypeValidator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator()
  - com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.instance
  - com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: LaissezFaireSubTypeValidator
  nameWithType: LaissezFaireSubTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: 'Default <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> used unless explicit one is constructed (and, in 2.11, <xref uid="com.fasterxml.jackson.databind.MapperFeature.BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.MapperFeature#BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES</xref> not enabled). Does not do any validation, allows all subtypes. Only used for backwards-compatibility reasons: users should usually NOT use such a permissive implementation but use allow-list/criteria - based implementation.'
  syntax:
    content: public final class LaissezFaireSubTypeValidator extends PolymorphicTypeValidator.Base
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator()
  id: LaissezFaireSubTypeValidator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  langs:
  - java
  name: LaissezFaireSubTypeValidator()
  nameWithType: LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator()
  overload: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public LaissezFaireSubTypeValidator()
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.instance
  id: instance
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  langs:
  - java
  name: instance
  nameWithType: LaissezFaireSubTypeValidator.instance
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.instance
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public static final LaissezFaireSubTypeValidator instance
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  id: validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  langs:
  - java
  name: validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  nameWithType: LaissezFaireSubTypeValidator.validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
  overload: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called when a property with polymorphic value is encountered, and a `TypeResolverBuilder` is needed. Intent is to allow early determination of cases where subtyping is completely denied (for example for security reasons), or, conversely, allowed for allow subtypes (when base type guarantees that all subtypes are known to be safe). Check can be thought of as both optimization (for latter case) and eager-fail (for former case) to give better feedback.
  syntax:
    content: public PolymorphicTypeValidator.Validity validateBaseType(MapperConfig<?> ctxt, JavaType baseType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  id: validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  langs:
  - java
  name: validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  nameWithType: LaissezFaireSubTypeValidator.validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
  overload: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: >-
    Method called after intended class name for subtype has been read (and in case of minimal class name, expanded to fully-qualified class name) but before attempt is made to look up actual <xref uid="java.lang.Class" data-throw-if-not-resolved="false">java.lang.Class</xref> or <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>. Validator may be able to determine validity of eventual type (and return <xref uid="" data-throw-if-not-resolved="false">Validity#ALLOWED</xref> or <xref uid="" data-throw-if-not-resolved="false">Validity#DENIED</xref>) or, if not able to, can defer validation to actual resolved type by returning <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>.


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubClassName(MapperConfig<?> ctxt, JavaType baseType, String subClassName)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subClassName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator
  langs:
  - java
  name: validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  nameWithType: LaissezFaireSubTypeValidator.validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
  overload: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: >-
    Method called after class name has been resolved to actual type, in cases where previous call to <xref uid="com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName*" data-throw-if-not-resolved="false">#validateSubClassName</xref> returned <xref uid="" data-throw-if-not-resolved="false">Validity#INDETERMINATE</xref>. Validator should be able to determine validity and return appropriate <xref uid="" data-throw-if-not-resolved="false">Validity</xref> value, although it may also


    Validator may also choose to indicate denial by throwing a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref> (such as <xref uid="com.fasterxml.jackson.databind.exc.InvalidTypeIdException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.exc.InvalidTypeIdException</xref>)
  syntax:
    content: public PolymorphicTypeValidator.Validity validateSubType(MapperConfig<?> ctxt, JavaType baseType, JavaType subType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
references:
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator*
  name: LaissezFaireSubTypeValidator
  nameWithType: LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.LaissezFaireSubTypeValidator
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
  name: PolymorphicTypeValidator.Validity
  nameWithType: PolymorphicTypeValidator.Validity
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Validity
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType*
  name: validateBaseType
  nameWithType: LaissezFaireSubTypeValidator.validateBaseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateBaseType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName*
  name: validateSubClassName
  nameWithType: LaissezFaireSubTypeValidator.validateSubClassName
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubClassName
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType*
  name: validateSubType
  nameWithType: LaissezFaireSubTypeValidator.validateSubType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.validateSubType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
  name: PolymorphicTypeValidator.Base
  nameWithType: PolymorphicTypeValidator.Base
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?>,JavaType,String)
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig<?>,JavaType,String)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?>,JavaType)
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?>,JavaType,JavaType)
  nameWithType: PolymorphicTypeValidator.Base.validateSubType(MapperConfig<?>,JavaType,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
  name: ?>,JavaType,String)
  nameWithType: ?>,JavaType,String)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateSubClassName(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateBaseType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: PolymorphicTypeValidator.Base.validateSubType(MapperConfig
  nameWithType: PolymorphicTypeValidator.Base.validateSubType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.Base.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType,JavaType)
  nameWithType: ?>,JavaType,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
