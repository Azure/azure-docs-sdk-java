### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  id: EvictingQueue
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.<E>create(int)
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.add(E)
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.delegate()
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.offer(E)
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remainingCapacity()
  - com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remove(java.lang.Object)
  langs:
  - java
  name: EvictingQueue<E>
  nameWithType: EvictingQueue<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A non-blocking queue which automatically evicts elements from the head of the queue when attempting to add new elements onto the queue and it is full. This queue orders elements FIFO (first-in-first-out). This data structure is logically equivalent to a circular buffer (i.e., cyclic buffer or ring buffer).


    An evicting queue must be configured with a maximum size. Each time an element is added to a full queue, the queue automatically removes its head element. This is different from conventional bounded queues, which either block or reject new elements when full.


    This class is not thread-safe, and does not accept null elements.
  syntax:
    content: public final class EvictingQueue<E> extends ForwardingQueue<E> implements Serializable
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.element()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.peek()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.poll()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.remove()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardOffer(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPeek()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPoll()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.<E>create(int)
  id: <E>create(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: <E>create(int maxSize)
  nameWithType: EvictingQueue<E>.<E>create(int maxSize)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.<E>create(int maxSize)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Creates and returns a new evicting queue that will hold up to `maxSize` elements.


    When `maxSize` is zero, elements will be evicted immediately after being added to the queue.
  syntax:
    content: public static EvictingQueue<E> <E>create(int maxSize)
    parameters:
    - id: maxSize
      type: int
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.EvictingQueue(int)
  id: EvictingQueue(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: EvictingQueue(int maxSize)
  nameWithType: EvictingQueue<E>.EvictingQueue(int maxSize)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.EvictingQueue(int maxSize)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.EvictingQueue*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private EvictingQueue(int maxSize)
    parameters:
    - id: maxSize
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.add(E)
  id: add(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: add(E e)
  nameWithType: EvictingQueue<E>.add(E e)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.add(E e)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds the given element to this queue. If the queue is currently full, the element at the head of the queue is evicted to make room.
  syntax:
    content: public boolean add(E e)
    parameters:
    - id: e
      type: E
    return:
      type: boolean
      description: <code>true</code> always
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.addAll(java.util.Collection<? extends E>)
  id: addAll(java.util.Collection<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: addAll(Collection<? extends E> collection)
  nameWithType: EvictingQueue<E>.addAll(Collection<? extends E> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.addAll(Collection<? extends E> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.addAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean addAll(Collection<? extends E> collection)
    parameters:
    - id: collection
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.contains(java.lang.Object)
  id: contains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: contains(Object object)
  nameWithType: EvictingQueue<E>.contains(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.contains(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.contains*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean contains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: delegate()
  nameWithType: EvictingQueue<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected Queue<E> delegate()
    return:
      type: java.util.Queue<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.offer(E)
  id: offer(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: offer(E e)
  nameWithType: EvictingQueue<E>.offer(E e)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.offer(E e)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.offer*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds the given element to this queue. If the queue is currently full, the element at the head of the queue is evicted to make room.
  syntax:
    content: public boolean offer(E e)
    parameters:
    - id: e
      type: E
    return:
      type: boolean
      description: <code>true</code> always
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remainingCapacity()
  id: remainingCapacity()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: remainingCapacity()
  nameWithType: EvictingQueue<E>.remainingCapacity()
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.remainingCapacity()
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remainingCapacity*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the number of additional elements that this queue can accept without evicting; zero if the queue is currently full.
  syntax:
    content: public int remainingCapacity()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  langs:
  - java
  name: remove(Object object)
  nameWithType: EvictingQueue<E>.remove(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.remove(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean remove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.EvictingQueue*
  name: EvictingQueue
  nameWithType: EvictingQueue<E>.EvictingQueue
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.EvictingQueue
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
    name: EvictingQueue
    fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.create*
  name: <E>create
  nameWithType: EvictingQueue<E>.<E>create
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.<E>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remainingCapacity*
  name: remainingCapacity
  nameWithType: EvictingQueue<E>.remainingCapacity
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.remainingCapacity
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Queue<E>
  spec.java:
  - uid: java.util.Queue
    name: Queue
    fullName: java.util.Queue
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.delegate*
  name: delegate
  nameWithType: EvictingQueue<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.offer*
  name: offer
  nameWithType: EvictingQueue<E>.offer
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.offer
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.add*
  name: add
  nameWithType: EvictingQueue<E>.add
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.add
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<? extends E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.addAll*
  name: addAll
  nameWithType: EvictingQueue<E>.addAll
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.addAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.contains*
  name: contains
  nameWithType: EvictingQueue<E>.contains
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.contains
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remove*
  name: remove
  nameWithType: EvictingQueue<E>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue<E>
  name: ForwardingQueue<E>
  nameWithType: ForwardingQueue<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue<E>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.addAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.delegate()
  name: ForwardingQueue.delegate()
  nameWithType: ForwardingQueue.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.delegate()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPeek()
  name: ForwardingQueue.standardPeek()
  nameWithType: ForwardingQueue.standardPeek()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPeek()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  name: ForwardingCollection.remove(Object)
  nameWithType: ForwardingCollection.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  name: ForwardingCollection.standardToString()
  nameWithType: ForwardingCollection.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  name: ForwardingCollection.standardContainsAll(Collection<?>)
  nameWithType: ForwardingCollection.standardContainsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  name: ForwardingCollection.add(E)
  nameWithType: ForwardingCollection.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  name: ForwardingCollection.standardClear()
  nameWithType: ForwardingCollection.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  name: ForwardingCollection.contains(Object)
  nameWithType: ForwardingCollection.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  name: ForwardingCollection.retainAll(Collection<?>)
  nameWithType: ForwardingCollection.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  name: ForwardingCollection.standardToArray()
  nameWithType: ForwardingCollection.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  name: ForwardingCollection.containsAll(Collection<?>)
  nameWithType: ForwardingCollection.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.poll()
  name: ForwardingQueue.poll()
  nameWithType: ForwardingQueue.poll()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.poll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRetainAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRetainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  name: ForwardingCollection.isEmpty()
  nameWithType: ForwardingCollection.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  name: ForwardingCollection.clear()
  nameWithType: ForwardingCollection.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardOffer(E)
  name: ForwardingQueue.standardOffer(E)
  nameWithType: ForwardingQueue.standardOffer(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardOffer(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer(E)
  name: ForwardingQueue.offer(E)
  nameWithType: ForwardingQueue.offer(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.element()
  name: ForwardingQueue.element()
  nameWithType: ForwardingQueue.element()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.element()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  name: ForwardingCollection.<T>toArray(T[])
  nameWithType: ForwardingCollection.<T>toArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.remove()
  name: ForwardingQueue.remove()
  nameWithType: ForwardingQueue.remove()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.remove()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.standardAddAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.standardAddAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  name: ForwardingCollection.size()
  nameWithType: ForwardingCollection.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  name: ForwardingCollection.toArray()
  nameWithType: ForwardingCollection.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.peek()
  name: ForwardingQueue.peek()
  nameWithType: ForwardingQueue.peek()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.peek()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  name: ForwardingCollection.standardRemove(Object)
  nameWithType: ForwardingCollection.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  name: ForwardingCollection.removeAll(Collection<?>)
  nameWithType: ForwardingCollection.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPoll()
  name: ForwardingQueue.standardPoll()
  nameWithType: ForwardingQueue.standardPoll()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPoll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRemoveAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRemoveAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  name: ForwardingCollection.standardIsEmpty()
  nameWithType: ForwardingCollection.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  name: ForwardingCollection.iterator()
  nameWithType: ForwardingCollection.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  name: ForwardingCollection.standardContains(Object)
  nameWithType: ForwardingCollection.standardContains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  name: ForwardingCollection.<T>standardToArray(T[])
  nameWithType: ForwardingCollection.<T>standardToArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
- uid: java.util.Queue
  name: Queue
  nameWithType: Queue
  fullName: java.util.Queue
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue
  name: ForwardingQueue
  nameWithType: ForwardingQueue
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingQueue
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
  name: ForwardingCollection.addAll(Collection
  nameWithType: ForwardingCollection.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
  name: ForwardingCollection.standardContainsAll(Collection
  nameWithType: ForwardingCollection.standardContainsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
  name: ForwardingCollection.retainAll(Collection
  nameWithType: ForwardingCollection.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
  name: ForwardingCollection.containsAll(Collection
  nameWithType: ForwardingCollection.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
  name: ForwardingCollection.standardRetainAll(Collection
  nameWithType: ForwardingCollection.standardRetainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
  name: ForwardingCollection.
  nameWithType: ForwardingCollection.
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
  name: ForwardingCollection.standardAddAll(Collection
  nameWithType: ForwardingCollection.standardAddAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
  name: ForwardingCollection.removeAll(Collection
  nameWithType: ForwardingCollection.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
  name: ForwardingCollection.standardRemoveAll(Collection
  nameWithType: ForwardingCollection.standardRemoveAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
- uid: T>standardToArray(T[])
  name: T>standardToArray(T[])
  nameWithType: T>standardToArray(T[])
  fullName: T>standardToArray(T[])
