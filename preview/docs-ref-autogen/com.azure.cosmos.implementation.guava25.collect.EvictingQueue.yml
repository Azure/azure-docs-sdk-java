### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.EvictingQueue"
fullName: "com.azure.cosmos.implementation.guava25.collect.EvictingQueue<E>"
name: "EvictingQueue<E>"
nameWithType: "EvictingQueue<E>"
summary: "A non-blocking queue which automatically evicts elements from the head of the queue when attempting to add new elements onto the queue and it is full. This queue orders elements FIFO (first-in-first-out). This data structure is logically equivalent to a circular buffer (i.e., cyclic buffer or ring buffer).\n\nAn evicting queue must be configured with a maximum size. Each time an element is added to a full queue, the queue automatically removes its head element. This is different from conventional bounded queues, which either block or reject new elements when full.\n\nThis class is not thread-safe, and does not accept null elements."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingObject\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingQueue\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.element()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.peek()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.poll()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.remove()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardOffer(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPeek()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPoll()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EvictingQueue<E> extends ForwardingQueue<E> implements Serializable"
methods:
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.<E>create(int)"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.offer(E)"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remainingCapacity()"
- "com.azure.cosmos.implementation.guava25.collect.EvictingQueue.remove(java.lang.Object)"
type: "class"
typeParameters:
- name: "E"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
