### YamlMime:JavaType
uid: "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat"
fullName: "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat"
name: "CollectorPolicyPropertiesFormat"
nameWithType: "CollectorPolicyPropertiesFormat"
summary: "Collection policy properties."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CollectorPolicyPropertiesFormat"
constructors:
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.CollectorPolicyPropertiesFormat()"
methods:
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.emissionPolicies()"
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.ingestionPolicy()"
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.provisioningState()"
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.validate()"
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.withEmissionPolicies(java.util.List<com.azure.resourcemanager.networkfunction.models.EmissionPoliciesPropertiesFormat>)"
- "com.azure.resourcemanager.networkfunction.fluent.models.CollectorPolicyPropertiesFormat.withIngestionPolicy(com.azure.resourcemanager.networkfunction.models.IngestionPolicyPropertiesFormat)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.networkfunction.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-networkfunction:1.0.0-beta.1
