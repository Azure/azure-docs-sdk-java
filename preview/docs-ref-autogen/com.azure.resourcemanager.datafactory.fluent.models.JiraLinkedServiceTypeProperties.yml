### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties"
name: "JiraLinkedServiceTypeProperties"
nameWithType: "JiraLinkedServiceTypeProperties"
summary: "Jira Service linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JiraLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.JiraLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.JiraLinkedServiceTypeProperties()"
  name: "JiraLinkedServiceTypeProperties()"
  nameWithType: "JiraLinkedServiceTypeProperties.JiraLinkedServiceTypeProperties()"
  syntax: "public JiraLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "JiraLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.host()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.host()"
  name: "host()"
  nameWithType: "JiraLinkedServiceTypeProperties.host()"
  summary: "Get the host property: The IP address or host name of the Jira service."
  syntax: "public Object host()"
  desc: "Get the host property: The IP address or host name of the Jira service. (e.g. jira.example.com)."
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "JiraLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password corresponding to the user name that you provided in the username field."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password corresponding to the user name that you provided in the username field."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.port()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.port()"
  name: "port()"
  nameWithType: "JiraLinkedServiceTypeProperties.port()"
  summary: "Get the port property: The TCP port that the Jira server uses to listen for client connections."
  syntax: "public Object port()"
  desc: "Get the port property: The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP."
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "JiraLinkedServiceTypeProperties.useEncryptedEndpoints()"
  summary: "Get the use<wbr>Encrypted<wbr>Endpoints property: Specifies whether the data source endpoints are encrypted using HTTPS."
  syntax: "public Object useEncryptedEndpoints()"
  desc: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "JiraLinkedServiceTypeProperties.useHostVerification()"
  summary: "Get the use<wbr>Host<wbr>Verification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL."
  syntax: "public Object useHostVerification()"
  desc: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "JiraLinkedServiceTypeProperties.usePeerVerification()"
  summary: "Get the use<wbr>Peer<wbr>Verification property: Specifies whether to verify the identity of the server when connecting over SSL."
  syntax: "public Object usePeerVerification()"
  desc: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "JiraLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The user name that you use to access Jira Service."
  syntax: "public Object username()"
  desc: "Get the username property: The user name that you use to access Jira Service."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "JiraLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "JiraLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withHost(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withHost(Object host)"
  name: "withHost(Object host)"
  nameWithType: "JiraLinkedServiceTypeProperties.withHost(Object host)"
  summary: "Set the host property: The IP address or host name of the Jira service."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withHost(Object host)"
  desc: "Set the host property: The IP address or host name of the Jira service. (e.g. jira.example.com)."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "JiraLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name that you provided in the username field."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: The password corresponding to the user name that you provided in the username field."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "JiraLinkedServiceTypeProperties.withPort(Object port)"
  summary: "Set the port property: The TCP port that the Jira server uses to listen for client connections."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withPort(Object port)"
  desc: "Set the port property: The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "JiraLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the use<wbr>Encrypted<wbr>Endpoints property: Specifies whether the data source endpoints are encrypted using HTTPS."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  desc: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "JiraLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  summary: "Set the use<wbr>Host<wbr>Verification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withUseHostVerification(Object useHostVerification)"
  desc: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "JiraLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the use<wbr>Peer<wbr>Verification property: Specifies whether to verify the identity of the server when connecting over SSL."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withUsePeerVerification(Object usePeerVerification)"
  desc: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "JiraLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The user name that you use to access Jira Service."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JiraLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: The user name that you use to access Jira Service."
  returns:
    description: "the JiraLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.JiraLinkedServiceTypeProperties&text=JiraLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Jira Service linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
