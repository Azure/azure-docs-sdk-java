### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  id: FutureRequestExecutionService
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic
  children:
  - org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>)
  - org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>,org.apache.hc.core5.concurrent.FutureCallback<T>)
  - org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService(org.apache.hc.client5.http.classic.HttpClient,java.util.concurrent.ExecutorService)
  - org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close()
  - org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics()
  langs:
  - java
  name: FutureRequestExecutionService
  nameWithType: FutureRequestExecutionService
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  type: Class
  package: org.apache.hc.client5.http.impl.classic
  summary: This class schedules message execution execution and processing as <xref uid="java.util.concurrent.FutureTask" data-throw-if-not-resolved="false">FutureTask</xref>s with the provided <xref uid="java.util.concurrent.ExecutorService" data-throw-if-not-resolved="false">ExecutorService</xref>.
  syntax:
    content: public class FutureRequestExecutionService implements Closeable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Closeable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>)
  id: <T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  langs:
  - java
  name: <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler)
  nameWithType: FutureRequestExecutionService.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler)
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler)
  overload: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.execute*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  summary: Schedule a request for execution.
  syntax:
    content: public FutureTask<T> <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    - id: HttpClientResponseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<T>
      description: handler that will process the response.
    return:
      type: java.util.concurrent.FutureTask<T>
      description: HttpAsyncClientFutureTask for the scheduled request.
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>,org.apache.hc.core5.concurrent.FutureCallback<T>)
  id: <T>execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpClientResponseHandler<T>,org.apache.hc.core5.concurrent.FutureCallback<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  langs:
  - java
  name: <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler, FutureCallback<T> callback)
  nameWithType: FutureRequestExecutionService.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler, FutureCallback<T> callback)
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler, FutureCallback<T> callback)
  overload: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.execute*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  summary: Schedule a request for execution.
  syntax:
    content: public FutureTask<T> <T>execute(ClassicHttpRequest request, HttpContext context, HttpClientResponseHandler<T> HttpClientResponseHandler, FutureCallback<T> callback)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: request to execute
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: optional context; use null if not needed.
    - id: HttpClientResponseHandler
      type: org.apache.hc.core5.http.io.HttpClientResponseHandler<T>
      description: handler that will process the response.
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<T>
      description: >-
        callback handler that will be called when the request is scheduled,
                    started, completed, failed, or cancelled.
    return:
      type: java.util.concurrent.FutureTask<T>
      description: HttpAsyncClientFutureTask for the scheduled request.
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService(org.apache.hc.client5.http.classic.HttpClient,java.util.concurrent.ExecutorService)
  id: FutureRequestExecutionService(org.apache.hc.client5.http.classic.HttpClient,java.util.concurrent.ExecutorService)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  langs:
  - java
  name: FutureRequestExecutionService(HttpClient httpclient, ExecutorService executorService)
  nameWithType: FutureRequestExecutionService.FutureRequestExecutionService(HttpClient httpclient, ExecutorService executorService)
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService(HttpClient httpclient, ExecutorService executorService)
  overload: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService*
  type: Constructor
  package: org.apache.hc.client5.http.impl.classic
  summary: Create a new FutureRequestExecutionService.
  syntax:
    content: public FutureRequestExecutionService(HttpClient httpclient, ExecutorService executorService)
    parameters:
    - id: httpclient
      type: org.apache.hc.client5.http.classic.HttpClient
      description: >-
        you should tune your httpclient instance to match your needs. You should
                    align the max number of connections in the pool and the number of threads
                    in the executor; it doesn't make sense to have more threads than connections
                    and if you have less connections than threads, the threads will just end up
                    blocking on getting a connection from the pool.
    - id: executorService
      type: java.util.concurrent.ExecutorService
      description: >-
        any executorService will do here. E.g.
                    <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.Executors#newFixedThreadPool(int)</xref>
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  langs:
  - java
  name: close()
  nameWithType: FutureRequestExecutionService.close()
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close()
  overload: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics()
  id: metrics()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService
  langs:
  - java
  name: metrics()
  nameWithType: FutureRequestExecutionService.metrics()
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics()
  overload: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  syntax:
    content: public FutureRequestExecutionMetrics metrics()
    return:
      type: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionMetrics
      description: metrics gathered for this instance.
references:
- uid: org.apache.hc.client5.http.classic.HttpClient
  name: HttpClient
  nameWithType: HttpClient
  fullName: org.apache.hc.client5.http.classic.HttpClient
- uid: java.util.concurrent.ExecutorService
  spec.java:
  - uid: java.util.concurrent.ExecutorService
    name: ExecutorService
    fullName: java.util.concurrent.ExecutorService
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService*
  name: FutureRequestExecutionService
  nameWithType: FutureRequestExecutionService.FutureRequestExecutionService
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.FutureRequestExecutionService
  package: org.apache.hc.client5.http.impl.classic
- uid: org.apache.hc.core5.http.ClassicHttpRequest
  name: ClassicHttpRequest
  nameWithType: ClassicHttpRequest
  fullName: org.apache.hc.core5.http.ClassicHttpRequest
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.io.HttpClientResponseHandler<T>
  spec.java:
  - uid: org.apache.hc.core5.http.io.HttpClientResponseHandler
    name: HttpClientResponseHandler
    fullName: org.apache.hc.core5.http.io.HttpClientResponseHandler
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.FutureTask<T>
  spec.java:
  - uid: java.util.concurrent.FutureTask
    name: FutureTask
    fullName: java.util.concurrent.FutureTask
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.execute*
  name: <T>execute
  nameWithType: FutureRequestExecutionService.<T>execute
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.<T>execute
  package: org.apache.hc.client5.http.impl.classic
- uid: org.apache.hc.core5.concurrent.FutureCallback<T>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionMetrics
  name: FutureRequestExecutionMetrics
  nameWithType: FutureRequestExecutionMetrics
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionMetrics
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics*
  name: metrics
  nameWithType: FutureRequestExecutionService.metrics
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.metrics
  package: org.apache.hc.client5.http.impl.classic
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close*
  name: close
  nameWithType: FutureRequestExecutionService.close
  fullName: org.apache.hc.client5.http.impl.classic.FutureRequestExecutionService.close
  package: org.apache.hc.client5.http.impl.classic
- uid: java.io.Closeable
  name: Closeable
  nameWithType: Closeable
  fullName: java.io.Closeable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.core5.http.io.HttpClientResponseHandler
  name: HttpClientResponseHandler
  nameWithType: HttpClientResponseHandler
  fullName: org.apache.hc.core5.http.io.HttpClientResponseHandler
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.util.concurrent.FutureTask
  name: FutureTask
  nameWithType: FutureTask
  fullName: java.util.concurrent.FutureTask
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
