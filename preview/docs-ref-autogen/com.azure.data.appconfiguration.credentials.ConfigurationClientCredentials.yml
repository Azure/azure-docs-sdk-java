### YamlMime:ManagedReference
items:
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials
  id: ConfigurationClientCredentials
  parent: com.azure.data.appconfiguration.credentials
  children:
  - com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri()
  - com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials(String)
  - com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync(URL,String,Flux<ByteBuf>)
  href: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.yml
  langs:
  - java
  name: ConfigurationClientCredentials
  nameWithType: ConfigurationClientCredentials
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials
  type: Class
  source:
    remote: &o0
      path: sdk/appconfiguration/azure-data-appconfiguration/src/main/java/com/azure/data/appconfiguration/credentials/ConfigurationClientCredentials.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/appconfiguration/azure-data-appconfiguration/src/main/java/com/azure/data/appconfiguration/credentials/ConfigurationClientCredentials.java
    startLine: 38
  package: com.azure.data.appconfiguration.credentials
  summary: "<p>Credentials that authorizes requests to Azure App Configuration. It uses content within the HTTP request to generate the correct \"Authorization\" header value. <xref uid=\"\" data-throw-if-not-resolved=\"false\">ConfigurationCredentialsPolicy</xref> ensures that the content exists in the HTTP request so that a valid authorization value is generated.</p>\r\n<p></p>"
  syntax:
    content: public class ConfigurationClientCredentials
  inheritance:
  - java.lang.Object
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri()
  id: baseUri()
  parent: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials
  href: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.yml
  langs:
  - java
  name: baseUri()
  nameWithType: ConfigurationClientCredentials.baseUri()
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri()
  overload: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri*
  type: Method
  source:
    remote: *o0
    path: sdk/appconfiguration/azure-data-appconfiguration/src/main/java/com/azure/data/appconfiguration/credentials/ConfigurationClientCredentials.java
    startLine: 65
  package: com.azure.data.appconfiguration.credentials
  summary: "<p>Gets the base URI of the Azure App Configuration instance based on the provided connection string.</p>\r\n<p></p>"
  syntax:
    content: public URL baseUri()
    return:
      type: a891b3e6
      description: <p>The base URI of the configuration service extracted from connection string provided. </p>
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials(String)
  id: ConfigurationClientCredentials(String)
  parent: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials
  href: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.yml
  langs:
  - java
  name: ConfigurationClientCredentials(String connectionString)
  nameWithType: ConfigurationClientCredentials.ConfigurationClientCredentials(String connectionString)
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials(String connectionString)
  overload: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials*
  type: Constructor
  source:
    remote: *o0
    path: sdk/appconfiguration/azure-data-appconfiguration/src/main/java/com/azure/data/appconfiguration/credentials/ConfigurationClientCredentials.java
    startLine: 55
  package: com.azure.data.appconfiguration.credentials
  summary: "<p>Creates an instance that is able to authorize requests to Azure App Configuration service.</p>\r\n<p></p>"
  syntax:
    content: public ConfigurationClientCredentials(String connectionString)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>Connection string in the format "endpoint={endpoint_value};id={id_value};secret={secret_value}" </p>
  exceptions:
  - type: 456eb9d1
    description: <p>When the HMAC-SHA256 MAC algorithm cannot be instantiated. </p>
  - type: e333ca4f
    description: >-
      <p>When the<code>connectionStringÂ 

          </code> secret is invalid and cannot instantiate the HMAC-SHA256 algorithm. </p>
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync(URL,String,Flux<ByteBuf>)
  id: getAuthorizationHeadersAsync(URL,String,Flux<ByteBuf>)
  parent: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials
  href: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.yml
  langs:
  - java
  name: getAuthorizationHeadersAsync(URL url, String httpMethod, Flux<ByteBuf> contents)
  nameWithType: ConfigurationClientCredentials.getAuthorizationHeadersAsync(URL url, String httpMethod, Flux<ByteBuf> contents)
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync(URL url, String httpMethod, Flux<ByteBuf> contents)
  overload: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/appconfiguration/azure-data-appconfiguration/src/main/java/com/azure/data/appconfiguration/credentials/ConfigurationClientCredentials.java
    startLine: 76
  package: com.azure.data.appconfiguration.credentials
  summary: "<p>Gets a list of headers to add to a request to authenticate it to the Azure APp Configuration service. </p>"
  syntax:
    content: public Mono<Map<String, String>> getAuthorizationHeadersAsync(URL url, String httpMethod, Flux<ByteBuf> contents)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the request url </p>
    - id: httpMethod
      type: "26831127"
      description: <p>the request HTTP method </p>
    - id: contents
      type: c4ee8496
      description: <p>the body content of the request </p>
    return:
      type: 6b23ac95
      description: <p>a flux of headers to add for authorization </p>
references:
- uid: 456eb9d1
  spec.java:
  - name: NoSuchAlgorithmException
    fullName: NoSuchAlgorithmException
- uid: e333ca4f
  spec.java:
  - name: InvalidKeyException
    fullName: InvalidKeyException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials*
  name: ConfigurationClientCredentials
  nameWithType: ConfigurationClientCredentials.ConfigurationClientCredentials
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.ConfigurationClientCredentials
  package: com.azure.data.appconfiguration.credentials
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri*
  name: baseUri
  nameWithType: ConfigurationClientCredentials.baseUri
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.baseUri
  package: com.azure.data.appconfiguration.credentials
- uid: c4ee8496
  spec.java:
  - name: Flux<ByteBuf>
    fullName: Flux<ByteBuf>
- uid: 6b23ac95
  spec.java:
  - name: Mono<Map<String, String>>
    fullName: Mono<Map<String, String>>
- uid: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync*
  name: getAuthorizationHeadersAsync
  nameWithType: ConfigurationClientCredentials.getAuthorizationHeadersAsync
  fullName: com.azure.data.appconfiguration.credentials.ConfigurationClientCredentials.getAuthorizationHeadersAsync
  package: com.azure.data.appconfiguration.credentials
