### YamlMime:JavaType
uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData"
fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData"
name: "MediaLiveEventIngestHeartbeatEventData"
nameWithType: "MediaLiveEventIngestHeartbeatEventData"
summary: "Ingest heartbeat event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIngestHeartbeat event."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MediaLiveEventIngestHeartbeatEventData"
constructors:
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.MediaLiveEventIngestHeartbeatEventData()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.MediaLiveEventIngestHeartbeatEventData()"
  name: "MediaLiveEventIngestHeartbeatEventData()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.MediaLiveEventIngestHeartbeatEventData()"
  syntax: "public MediaLiveEventIngestHeartbeatEventData()"
methods:
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getBitrate()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getBitrate()"
  name: "getBitrate()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getBitrate()"
  summary: "Get the bitrate property: Gets the bitrate of the track."
  syntax: "public Long getBitrate()"
  returns:
    description: "the bitrate value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getDiscontinuityCount()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getDiscontinuityCount()"
  name: "getDiscontinuityCount()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getDiscontinuityCount()"
  summary: "Get the discontinuityCount property: Gets the fragment Discontinuity count."
  syntax: "public Long getDiscontinuityCount()"
  returns:
    description: "the discontinuityCount value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getIncomingBitrate()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getIncomingBitrate()"
  name: "getIncomingBitrate()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getIncomingBitrate()"
  summary: "Get the incomingBitrate property: Gets the incoming bitrate."
  syntax: "public Long getIncomingBitrate()"
  returns:
    description: "the incomingBitrate value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getIngestDriftValue()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getIngestDriftValue()"
  name: "getIngestDriftValue()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getIngestDriftValue()"
  summary: "Get the ingestDriftValue property: Gets the track ingest drift value."
  syntax: "public Integer getIngestDriftValue()"
  returns:
    description: "the ingestDriftValue value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getLastFragmentArrivalTime()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getLastFragmentArrivalTime()"
  name: "getLastFragmentArrivalTime()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getLastFragmentArrivalTime()"
  summary: "Get the lastFragmentArrivalTime property: Gets the arrival UTC time of the last fragment."
  syntax: "public OffsetDateTime getLastFragmentArrivalTime()"
  returns:
    description: "the lastFragmentArrivalTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getLastTimestamp()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getLastTimestamp()"
  name: "getLastTimestamp()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getLastTimestamp()"
  summary: "Get the lastTimestamp property: Gets the last timestamp."
  syntax: "public String getLastTimestamp()"
  returns:
    description: "the lastTimestamp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getNonincreasingCount()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getNonincreasingCount()"
  name: "getNonincreasingCount()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getNonincreasingCount()"
  summary: "Get the nonincreasingCount property: Gets Non increasing count."
  syntax: "public Long getNonincreasingCount()"
  returns:
    description: "the nonincreasingCount value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getOverlapCount()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getOverlapCount()"
  name: "getOverlapCount()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getOverlapCount()"
  summary: "Get the overlapCount property: Gets the fragment Overlap count."
  syntax: "public Long getOverlapCount()"
  returns:
    description: "the overlapCount value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getState()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getState()"
  name: "getState()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getState()"
  summary: "Get the state property: Gets the state of the live event."
  syntax: "public String getState()"
  returns:
    description: "the state value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTimescale()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTimescale()"
  name: "getTimescale()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getTimescale()"
  summary: "Get the timescale property: Gets the timescale of the last timestamp."
  syntax: "public String getTimescale()"
  returns:
    description: "the timescale value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTrackName()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTrackName()"
  name: "getTrackName()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getTrackName()"
  summary: "Get the trackName property: Gets the track name."
  syntax: "public String getTrackName()"
  returns:
    description: "the trackName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTrackType()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTrackType()"
  name: "getTrackType()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getTrackType()"
  summary: "Get the trackType property: Gets the type of the track (Audio / Video)."
  syntax: "public String getTrackType()"
  returns:
    description: "the trackType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTranscriptionLanguage()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTranscriptionLanguage()"
  name: "getTranscriptionLanguage()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getTranscriptionLanguage()"
  summary: "Get the transcriptionLanguage property: Gets the Live Transcription language."
  syntax: "public String getTranscriptionLanguage()"
  returns:
    description: "the transcriptionLanguage value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTranscriptionState()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.getTranscriptionState()"
  name: "getTranscriptionState()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.getTranscriptionState()"
  summary: "Get the transcriptionState property: Gets the Live Transcription state."
  syntax: "public String getTranscriptionState()"
  returns:
    description: "the transcriptionState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.isHealthy()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.isHealthy()"
  name: "isHealthy()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.isHealthy()"
  summary: "Get the healthy property: Gets a value indicating whether preview is healthy or not."
  syntax: "public Boolean isHealthy()"
  returns:
    description: "the healthy value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.isUnexpectedBitrate()"
  fullName: "com.azure.messaging.eventgrid.systemevents.MediaLiveEventIngestHeartbeatEventData.isUnexpectedBitrate()"
  name: "isUnexpectedBitrate()"
  nameWithType: "MediaLiveEventIngestHeartbeatEventData.isUnexpectedBitrate()"
  summary: "Get the unexpectedBitrate property: Gets a value indicating whether unexpected bitrate is present or not."
  syntax: "public Boolean isUnexpectedBitrate()"
  returns:
    description: "the unexpectedBitrate value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.messaging.eventgrid.systemevents"
artifact: com.azure:azure-messaging-eventgrid:4.12.0-beta.2
