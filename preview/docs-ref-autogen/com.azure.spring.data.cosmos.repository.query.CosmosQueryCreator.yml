### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator"
name: "CosmosQueryCreator"
nameWithType: "CosmosQueryCreator"
summary: "TODO: String based query, based on how cosmosDB provides. StringCosmosQuery class, How to bind values to the query. if CosmosDb already has binding capability, if not we would have to do it here in some creative way.query creator are associated with part tree queries,"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.query.parser.AbstractQueryCreator\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.and(org.springframework.data.repository.query.parser.Part,S,java.util.Iterator<java.lang.Object>)"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.complete(S,org.springframework.data.domain.Sort)"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.create(org.springframework.data.repository.query.parser.Part,java.util.Iterator<java.lang.Object>)"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery()"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(org.springframework.data.domain.Sort)"
- "org.springframework.data.repository.query.parser.AbstractQueryCreator.or(S,S)"
syntax: "public class CosmosQueryCreator extends AbstractQueryCreator<CosmosQuery,Criteria>"
constructors:
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.CosmosQueryCreator(org.springframework.data.repository.query.parser.PartTree,com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.mapping.context.MappingContext<?,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>)"
methods:
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.and(org.springframework.data.repository.query.parser.Part,com.azure.spring.data.cosmos.core.query.Criteria,java.util.Iterator<java.lang.Object>)"
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.complete(com.azure.spring.data.cosmos.core.query.Criteria,org.springframework.data.domain.Sort)"
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.create(org.springframework.data.repository.query.parser.Part,java.util.Iterator<java.lang.Object>)"
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryCreator.or(com.azure.spring.data.cosmos.core.query.Criteria,com.azure.spring.data.cosmos.core.query.Criteria)"
type: "class"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
